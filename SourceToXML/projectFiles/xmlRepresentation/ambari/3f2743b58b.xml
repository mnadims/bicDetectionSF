<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/ambari/3f2743b58b.java"><expr_stmt><expr><name>From</name> <literal type="number">3f2743b58ba65c4bdc7d37df5348d17124bf305a</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Robert</name> <name><name>Levas</name> <argument_list type="generic">&lt;<argument><name>rlevas</name><annotation>@<name><name>hortonworks</name><operator>.</operator><name>com</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Wed</name></expr><operator>,</operator> <expr><literal type="number">15</literal> <name>Nov</name> <literal type="number">2017</literal> <literal type="number">12</literal><operator>:</operator><literal type="number">11</literal><operator>:</operator><literal type="number">34</literal> <operator>-</operator><literal type="number">0500</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>AMBARI</name><operator>-</operator><literal type="number">22418.</literal>  <name>Make</name> <name>Ambari</name> <name>configuration</name> <name>API</name> <name>consistent</name> <name>with</name>
 <name>existing</name> <name><name>API</name><operator>.</operator></name> (<name>rlevas</name></expr></expr_stmt>)

<expr><operator>--</operator>
 <operator>...</operator><operator>/</operator><name><name>ResourceInstanceFactoryImpl</name><operator>.</operator><name>java</name></name>          <operator>|</operator>   <literal type="number">9</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><name><name>ootServiceComponentResourceDefinition</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">9</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>services</name><operator>/</operator><name><name>AmbariConfigurationService</name><operator>.</operator><name>java</name></name>  <operator>|</operator> <literal type="number">193</literal> <operator>--</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name><name>AmbariMetaInfo</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><name><name>ComponentConfigurationRequestSwagger</name><operator>.</operator><name>java</name></name></expr>} |  <expr><literal type="number">18</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><name><name>omponentConfigurationResponseSwagger</name><operator>.</operator><name>java</name></name></expr>} |  <expr><literal type="number">19</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><name><name>tServiceComponentConfigurationService</name><operator>.</operator><name>java</name></name> <operator>|</operator> <literal type="number">226</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator>
 <operator>...</operator><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name><name>RootServiceService</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">7</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>services</name><operator>/</operator><name>ldap</name><operator>/</operator><name><name>AmbariConfiguration</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>ldap</name><operator>/</operator><name><name>LdapConfigurationRequest</name><operator>.</operator><name>java</name></name>        <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>ldap</name><operator>/</operator><name><name>LdapConfigurationService</name><operator>.</operator><name>java</name></name>        <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>commands</name><operator>/</operator><name><name>StackAdvisorCommand</name><operator>.</operator><name>java</name></name>         <operator>|</operator>  <literal type="number">62</literal> <operator>++</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>ControllerModule</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>controller</name><operator>/</operator><name><name>MaintenanceStateHelper</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">3</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>controller</name><operator>/</operator><name><name>ResourceProviderFactory</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>RootComponent</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">27</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>RootService</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">36</literal> <operator>++</operator>
 <operator>...</operator><operator>/</operator><name><name>RootServiceResponseFactory</name><operator>.</operator><name>java</name></name>           <operator>|</operator>  <literal type="number">44</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>AbstractControllerResourceProvider</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>AmbariConfigurationResourceProvider</name><operator>.</operator><name>java</name></name>  <operator>|</operator> <literal type="number">302</literal> <operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><name><name>omponentConfigurationResourceProvider</name><operator>.</operator><name>java</name></name> <operator>|</operator> <literal type="number">476</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator>
 <operator>...</operator><operator>/</operator><name><name>RootServiceComponentPropertyProvider</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>RootServiceComponentResourceProvider</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>spi</name><operator>/</operator><name><name>Resource</name><operator>.</operator><name>java</name></name>       <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>alerts</name><operator>/</operator><name><name>AlertReceivedListener</name><operator>.</operator><name>java</name></name>         <operator>|</operator>  <literal type="number">10</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>alerts</name><operator>/</operator><name><name>AlertStateChangedListener</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>ldap</name><operator>/</operator><name>domain</name><operator>/</operator><name><name>AmbariLdapConfiguration</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>AmbariLdapConfigurationFactory</name><operator>.</operator><name>java</name></name>       <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>AmbariLdapConfigurationProvider</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>AmbariServiceAlertDefinitions</name><operator>.</operator><name>java</name></name>        <operator>|</operator>  <literal type="number">20</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>dao</name><operator>/</operator><name><name>AlertDefinitionDAO</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">7</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>dao</name><operator>/</operator><name><name>AlertDispatchDAO</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>state</name><operator>/</operator><name>alert</name><operator>/</operator><name><name>AlertDefinitionHash</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">8</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name>cluster</name><operator>/</operator><name><name>ClusterImpl</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>services</name><operator>/</operator><name><name>AmbariServerAlertService</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>commands</name><operator>/</operator><name><name>StackAdvisorCommandTest</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">8</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>AmbariManagementControllerTest</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  <literal type="number">16</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>RootServiceResponseFactoryTest</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  <literal type="number">27</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><name><name>entConfigurationResourceProviderTest</name><operator>.</operator><name>java</name></name></expr>} |  <expr_stmt><expr><literal type="number">80</literal> <operator>+</operator><operator>--</operator>
 <operator>...</operator><name><name>tServiceComponentPropertyProviderTest</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">15</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><name><name>tServiceComponentResourceProviderTest</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">9</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name>ldap</name><operator>/</operator><name><name>LdapModuleFunctionalTest</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>TestAmbariLdapConfigurationFactory</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>ldap</name><operator>/</operator><name>service</name><operator>/</operator><name><name>AmbariLdapFacadeTest</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><name><name>aultLdapAttributeDetectionServiceTest</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">8</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>DefaultLdapConfigurationServiceTest</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">12</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>metadata</name><operator>/</operator><name><name>AgentAlertDefinitionsTest</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>orm</name><operator>/</operator><name>dao</name><operator>/</operator><name><name>AlertDefinitionDAOTest</name><operator>.</operator><name>java</name></name>       <operator>|</operator>   <literal type="number">7</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>alerts</name><operator>/</operator><name><name>AlertReceivedListenerTest</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">16</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>alerts</name><operator>/</operator><name><name>AlertStateChangedEventTest</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <literal type="number">50</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">1036</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">734</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>
 <name>delete</name> <name>mode</name> <literal type="number">100644</literal> <name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name><name>AmbariConfigurationService</name><operator>.</operator><name>java</name></name>
 <name>rename</name> <name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><block>{<expr><name><name>AmbariConfigurationRequestSwagger</name><operator>.</operator><name>java</name></name> <operator>=</operator><operator>&gt;</operator> <name><name>RootServiceComponentConfigurationRequestSwagger</name><operator>.</operator><name>java</name></name></expr>}</block> <operator>(</operator><literal type="number">64</literal><operator>%</operator><operator>)</operator>
 <name>rename</name> <name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><block>{<expr><name><name>AmbariConfigurationResponseSwagger</name><operator>.</operator><name>java</name></name> <operator>=</operator><operator>&gt;</operator> <name><name>RootServiceComponentConfigurationResponseSwagger</name><operator>.</operator><name>java</name></name></expr>}</block> <operator>(</operator><literal type="number">64</literal><operator>%</operator><operator>)</operator>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name><name>RootServiceComponentConfigurationService</name><operator>.</operator><name>java</name></name>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>RootComponent</name><operator>.</operator><name>java</name></name>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>RootService</name><operator>.</operator><name>java</name></name>
 <name>delete</name> <name>mode</name> <literal type="number">100644</literal> <name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>AmbariConfigurationResourceProvider</name><operator>.</operator><name>java</name></name>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>RootServiceComponentConfigurationResourceProvider</name><operator>.</operator><name>java</name></name>
 <name>rename</name> <name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><block>{<expr><name><name>AmbariConfigurationResourceProviderTest</name><operator>.</operator><name>java</name></name> <operator>=</operator><operator>&gt;</operator> <name><name>RootServiceComponentConfigurationResourceProviderTest</name><operator>.</operator><name>java</name></name></expr>}</block> <operator>(</operator><literal type="number">78</literal><operator>%</operator><operator>)</operator>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>resources</name><operator>/</operator><name><name>ResourceInstanceFactoryImpl</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>resources</name><operator>/</operator><name><name>ResourceInstanceFactoryImpl</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>f5fb6e9900</name><operator>..</operator><name>fecaedc459</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>resources</name><operator>/</operator><name><name>ResourceInstanceFactoryImpl</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>resources</name><operator>/</operator><name><name>ResourceInstanceFactoryImpl</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">237</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">237</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>ResourceInstanceFactoryImpl</name> implements <name>ResourceInstanceFactory</name> <block>{
         <expr><name>resourceDefinition</name> <operator>=</operator> <operator>new</operator> <call><name>RootServiceComponentResourceDefinition</name><argument_list>()</argument_list></call></expr>;
         <break>break;</break></block></expr></expr_stmt>
 
      <case>case <expr><name>RootServiceComponentConfiguration</name></expr>:</case>
        <expr_stmt><expr><name>resourceDefinition</name> <operator>=</operator> <operator>new</operator> <call><name>SimpleResourceDefinition</name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>RootServiceComponentConfiguration</name></name></expr></argument>,
            <argument><expr><literal type="string">"configuration"</literal></expr></argument>, <argument><expr><literal type="string">"configurations"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <break>break;</break>

       <case>case <expr><name>RootServiceHostComponent</name></expr>:</case>
         <expr_stmt><expr><name>resourceDefinition</name> <operator>=</operator> <operator>new</operator> <call><name>RootServiceHostComponentResourceDefinition</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
         <break>break;</break>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">471</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">476</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>ResourceInstanceFactoryImpl</name> implements <name>ResourceInstanceFactory</name> <block>{
       <case>case <expr><name>RemoteCluster</name></expr>:</case>
         <expr><name>resourceDefinition</name> <operator>=</operator> <operator>new</operator> <call><name>RemoteClusterResourceDefinition</name><argument_list>()</argument_list></call></expr>;
         <break>break;</break></block></expr></expr_stmt>
      <case>case <expr><name>AmbariConfiguration</name></expr>:</case>
        <expr_stmt><expr><name>resourceDefinition</name> <operator>=</operator> <operator>new</operator> <call><name>SimpleResourceDefinition</name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>AmbariConfiguration</name></name></expr></argument>, <argument><expr><literal type="string">"ambariconfiguration"</literal></expr></argument>, <argument><expr><literal type="string">"ambariconfigurations"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break>break;</break>
 
       <default>default:</default>
         <throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><literal type="string">"Unsupported resource type: "</literal> <operator>+</operator> <name>type</name></expr></argument>)</argument_list></call></expr>;</throw>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>resources</name><operator>/</operator><name><name>RootServiceComponentResourceDefinition</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>resources</name><operator>/</operator><name><name>RootServiceComponentResourceDefinition</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>e8cb570c56</name><operator>..</operator><literal type="number">1c036e4dfc</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>resources</name><operator>/</operator><name><name>RootServiceComponentResourceDefinition</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>resources</name><operator>/</operator><name><name>RootServiceComponentResourceDefinition</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>api</name><operator>.</operator><name>resources</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>Resource</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">44</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">45</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>RootServiceComponentResourceDefinition</name> extends
   <specifier>public</specifier> <name>String</name> <call><name>getSingularName</name><argument_list>()</argument_list></call> <block>{
     <return>return <expr><literal type="string">"component"</literal></expr>;</return>
   }</block></expr></expr_stmt>
  

   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>public</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>SubResourceDefinition</name></argument>&gt;</argument_list></name></type> <name>getSubResourceDefinitions</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><call><name><name>Collections</name><operator>.</operator><name>singleton</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>SubResourceDefinition</name><argument_list>(
        <argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>RootServiceHostComponent</name></name></expr></argument>, <argument><expr><call><name><name>Collections</name><operator>.</operator><name>singleton</name></name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>Host</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
    <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>SubResourceDefinition</name></argument>&gt;</argument_list></name></type> <name>definitions</name> <init>= <expr><operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>definitions</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>SubResourceDefinition</name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>RootServiceHostComponent</name></name></expr></argument>, <argument><expr><call><name><name>Collections</name><operator>.</operator><name>singleton</name></name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>Host</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>definitions</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>SubResourceDefinition</name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>RootServiceComponentConfiguration</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name>definitions</name></expr>;</return>
   </block_content>}</block></function>
 }
diff <expr_stmt><expr><operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name><name>AmbariConfigurationService</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name><name>AmbariConfigurationService</name><operator>.</operator><name>java</name></name>
<name>deleted</name> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">86ed666f41</literal><operator>..</operator><literal type="number">0000000000</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name><name>AmbariConfigurationService</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
@@ <operator>-</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">193</literal> <operator>+</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> @@</expr></expr_stmt>
<comment type="block">/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>api</name><operator>.</operator><name>services</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>

<import>import <name><name>javax</name><operator>.</operator><name>ws</name><operator>.</operator><name>rs</name><operator>.</operator><name>DELETE</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>ws</name><operator>.</operator><name>rs</name><operator>.</operator><name>GET</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>ws</name><operator>.</operator><name>rs</name><operator>.</operator><name>POST</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>ws</name><operator>.</operator><name>rs</name><operator>.</operator><name>PUT</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>ws</name><operator>.</operator><name>rs</name><operator>.</operator><name>Path</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>ws</name><operator>.</operator><name>rs</name><operator>.</operator><name>PathParam</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>ws</name><operator>.</operator><name>rs</name><operator>.</operator><name>Produces</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>ws</name><operator>.</operator><name>rs</name><operator>.</operator><name>core</name><operator>.</operator><name>Context</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>ws</name><operator>.</operator><name>rs</name><operator>.</operator><name>core</name><operator>.</operator><name>HttpHeaders</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>ws</name><operator>.</operator><name>rs</name><operator>.</operator><name>core</name><operator>.</operator><name>MediaType</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>ws</name><operator>.</operator><name>rs</name><operator>.</operator><name>core</name><operator>.</operator><name>Response</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>ws</name><operator>.</operator><name>rs</name><operator>.</operator><name>core</name><operator>.</operator><name>UriInfo</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>Resource</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>http</name><operator>.</operator><name>HttpStatus</name></name>;</import>

<import>import <name><name>io</name><operator>.</operator><name>swagger</name><operator>.</operator><name>annotations</name><operator>.</operator><name>Api</name></name>;</import>
<import>import <name><name>io</name><operator>.</operator><name>swagger</name><operator>.</operator><name>annotations</name><operator>.</operator><name>ApiImplicitParam</name></name>;</import>
<import>import <name><name>io</name><operator>.</operator><name>swagger</name><operator>.</operator><name>annotations</name><operator>.</operator><name>ApiImplicitParams</name></name>;</import>
<import>import <name><name>io</name><operator>.</operator><name>swagger</name><operator>.</operator><name>annotations</name><operator>.</operator><name>ApiOperation</name></name>;</import>
<import>import <name><name>io</name><operator>.</operator><name>swagger</name><operator>.</operator><name>annotations</name><operator>.</operator><name>ApiResponse</name></name>;</import>
<import>import <name><name>io</name><operator>.</operator><name>swagger</name><operator>.</operator><name>annotations</name><operator>.</operator><name>ApiResponses</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Rest endpoint for managing ambari configurations. Supports CRUD operations.
 * Ambari configurations are resources that relate to the ambari server instance even before a cluster is provisioned.
 *
 * Ambari configuration resources may be shared with components and services in the cluster
 * (by recommending them as default values)
 *
 * Eg. LDAP configuration is stored as AmbariConfiguration.
 * The request payload has the form:
 *
 * &lt;pre&gt;
 *      {
 *        "AmbariConfiguration": {
 *          "category": "ldap-configuration",
 *          "properties": {
 *             "authentication.ldap.primaryUrl": "localhost:33389"
 *             "authentication.ldap.secondaryUrl": "localhost:333"
 *             "authentication.ldap.baseDn": "dc=ambari,dc=apache,dc=org"
 *             // ......
 *          }
 *        }
 *      }
 * &lt;/pre&gt;
 */</comment>
<class><annotation>@<name>Path</name><argument_list>(<argument><expr><literal type="string">"/ambariconfigs/"</literal></expr></argument>)</argument_list></annotation>
<annotation>@<name>Api</name><argument_list>(<argument><expr><name>value</name> <operator>=</operator> <literal type="string">"Ambari Configurations"</literal></expr></argument>, <argument><expr><name>description</name> <operator>=</operator> <literal type="string">"Endpoint for Ambari configuration related operations"</literal></expr></argument>)</argument_list></annotation>
<specifier>public</specifier> class <name>AmbariConfigurationService</name> <super_list><extends>extends <super><name>BaseService</name></super></extends></super_list> <block>{

  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>AMBARI_CONFIGURATION_REQUEST_TYPE</name> <init>=
    <expr><literal type="string">"org.apache.ambari.server.api.services.AmbariConfigurationRequestSwagger"</literal></expr></init></decl>;</decl_stmt>

  <comment type="block" format="javadoc">/**
   * Creates an ambari configuration resource.
   *
   * @param body    the payload in json format
   * @param headers http headers
   * @param uri     request uri information
   * @return
   */</comment>
  <function><annotation>@<name>POST</name></annotation>
  <annotation>@<name>Produces</name><argument_list>(<argument><expr><name><name>MediaType</name><operator>.</operator><name>TEXT_PLAIN</name></name></expr></argument>)</argument_list></annotation>
  <annotation>@<name>ApiOperation</name><argument_list>(<argument><expr><name>value</name> <operator>=</operator> <literal type="string">"Creates an ambari configuration resource"</literal></expr></argument>,
    <argument><expr><name>nickname</name> <operator>=</operator> <literal type="string">"AmbariConfigurationService#createAmbariConfiguration"</literal></expr></argument>)</argument_list></annotation>
  <annotation>@<name>ApiImplicitParams</name><argument_list>(<argument><expr><block>{
    <annotation>@<name>ApiImplicitParam</name><argument_list>(<argument><expr><name>dataType</name> <operator>=</operator> <name>AMBARI_CONFIGURATION_REQUEST_TYPE</name></expr></argument>, <argument><expr><name>paramType</name> <operator>=</operator> <name>PARAM_TYPE_BODY</name></expr></argument>)</argument_list></annotation>
  }</block></expr></argument>)</argument_list></annotation>
  <annotation>@<name>ApiResponses</name><argument_list>(<argument><expr><block>{
    <annotation>@<name>ApiResponse</name><argument_list>(<argument><expr><name>code</name> <operator>=</operator> <name><name>HttpStatus</name><operator>.</operator><name>SC_CREATED</name></name></expr></argument>, <argument><expr><name>message</name> <operator>=</operator> <name>MSG_SUCCESSFUL_OPERATION</name></expr></argument>)</argument_list></annotation>,
    <argument><annotation>@<name>ApiResponse</name><argument_list>(<argument><expr><name>code</name> <operator>=</operator> <name><name>HttpStatus</name><operator>.</operator><name>SC_ACCEPTED</name></name></expr></argument>, <argument><expr><name>message</name> <operator>=</operator> <name>MSG_REQUEST_ACCEPTED</name></expr></argument>)</argument_list></annotation></argument>,
    <argument><annotation>@<name>ApiResponse</name><argument_list>(<argument><expr><name>code</name> <operator>=</operator> <name><name>HttpStatus</name><operator>.</operator><name>SC_BAD_REQUEST</name></name></expr></argument>, <argument><expr><name>message</name> <operator>=</operator> <name>MSG_INVALID_ARGUMENTS</name></expr></argument>)</argument_list></annotation></argument>,
    <argument><annotation>@<name>ApiResponse</name><argument_list>(<argument><expr><name>code</name> <operator>=</operator> <name><name>HttpStatus</name><operator>.</operator><name>SC_CONFLICT</name></name></expr></argument>, <argument><expr><name>message</name> <operator>=</operator> <name>MSG_RESOURCE_ALREADY_EXISTS</name></expr></argument>)</argument_list></annotation></argument>,
    <argument><annotation>@<name>ApiResponse</name><argument_list>(<argument><expr><name>code</name> <operator>=</operator> <name><name>HttpStatus</name><operator>.</operator><name>SC_UNAUTHORIZED</name></name></expr></argument>, <argument><expr><name>message</name> <operator>=</operator> <name>MSG_NOT_AUTHENTICATED</name></expr></argument>)</argument_list></annotation></argument>,
    <argument><annotation>@<name>ApiResponse</name><argument_list>(<argument><expr><name>code</name> <operator>=</operator> <name><name>HttpStatus</name><operator>.</operator><name>SC_FORBIDDEN</name></name></expr></argument>, <argument><expr><name>message</name> <operator>=</operator> <name>MSG_PERMISSION_DENIED</name></expr></argument>)</argument_list></annotation></argument>,
    <argument><annotation>@<name>ApiResponse</name><argument_list>(<argument><expr><name>code</name> <operator>=</operator> <name><name>HttpStatus</name><operator>.</operator><name>SC_INTERNAL_SERVER_ERROR</name></name></expr></argument>, <argument><expr><name>message</name> <operator>=</operator> <name>MSG_SERVER_ERROR</name></expr></argument>)</argument_list></annotation></argument>,
  <argument/>}</block></expr></argument>)</argument_list></annotation>
  <type><specifier>public</specifier> <name>Response</name></type> <name>createAmbariConfiguration</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>body</name></decl></parameter>, <parameter><decl><type><annotation>@<name>Context</name></annotation> <name>HttpHeaders</name></type> <name>headers</name></decl></parameter>, <parameter><decl><type><annotation>@<name>Context</name></annotation> <name>UriInfo</name></type> <name>uri</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <return>return <expr><call><name>handleRequest</name><argument_list>(<argument><expr><name>headers</name></expr></argument>, <argument><expr><name>body</name></expr></argument>, <argument><expr><name>uri</name></expr></argument>, <argument><expr><name><name>Request</name><operator>.</operator><name>Type</name><operator>.</operator><name>POST</name></name></expr></argument>, <argument><expr><call><name>createResource</name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>AmbariConfiguration</name></name></expr></argument>,
      <argument><expr><call><name><name>Collections</name><operator>.</operator><name>emptyMap</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>GET</name></annotation>
  <annotation>@<name>Produces</name><argument_list>(<argument><expr><name><name>MediaType</name><operator>.</operator><name>TEXT_PLAIN</name></name></expr></argument>)</argument_list></annotation>
  <annotation>@<name>ApiOperation</name><argument_list>(<argument><expr><name>value</name> <operator>=</operator> <literal type="string">"Retrieve all ambari configuration resources"</literal></expr></argument>,
    <argument><expr><name>nickname</name> <operator>=</operator> <literal type="string">"AmbariConfigurationService#getAmbariConfigurations"</literal></expr></argument>,
    <argument><expr><name>notes</name> <operator>=</operator> <literal type="string">"Returns all Ambari configurations."</literal></expr></argument>,
    <argument><expr><name>response</name> <operator>=</operator> <name><name>AmbariConfigurationResponseSwagger</name><operator>.</operator><name>class</name></name></expr></argument>,
    <argument><expr><name>responseContainer</name> <operator>=</operator> <name>RESPONSE_CONTAINER_LIST</name></expr></argument>)</argument_list></annotation>
  <annotation>@<name>ApiImplicitParams</name><argument_list>(<argument><expr><block>{
    <annotation>@<name>ApiImplicitParam</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <name>QUERY_FIELDS</name></expr></argument>, <argument><expr><name>value</name> <operator>=</operator> <name>QUERY_FILTER_DESCRIPTION</name></expr></argument>,
      <argument><expr><name>defaultValue</name> <operator>=</operator> <literal type="string">"AmbariConfiguration/properties, AmbariConfiguration/category"</literal></expr></argument>,
      <argument><expr><name>dataType</name> <operator>=</operator> <name>DATA_TYPE_STRING</name></expr></argument>, <argument><expr><name>paramType</name> <operator>=</operator> <name>PARAM_TYPE_QUERY</name></expr></argument>)</argument_list></annotation>,
    <argument><annotation>@<name>ApiImplicitParam</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <name>QUERY_SORT</name></expr></argument>, <argument><expr><name>value</name> <operator>=</operator> <name>QUERY_SORT_DESCRIPTION</name></expr></argument>,
      <argument><expr><name>defaultValue</name> <operator>=</operator> <literal type="string">"AmbariConfiguration/category"</literal></expr></argument>,
      <argument><expr><name>dataType</name> <operator>=</operator> <name>DATA_TYPE_STRING</name></expr></argument>, <argument><expr><name>paramType</name> <operator>=</operator> <name>PARAM_TYPE_QUERY</name></expr></argument>)</argument_list></annotation></argument>,
    <argument><annotation>@<name>ApiImplicitParam</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <name>QUERY_PAGE_SIZE</name></expr></argument>, <argument><expr><name>value</name> <operator>=</operator> <name>QUERY_PAGE_SIZE_DESCRIPTION</name></expr></argument>, <argument><expr><name>defaultValue</name> <operator>=</operator> <name>DEFAULT_PAGE_SIZE</name></expr></argument>, <argument><expr><name>dataType</name> <operator>=</operator> <name>DATA_TYPE_INT</name></expr></argument>, <argument><expr><name>paramType</name> <operator>=</operator> <name>PARAM_TYPE_QUERY</name></expr></argument>)</argument_list></annotation></argument>,
    <argument><annotation>@<name>ApiImplicitParam</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <name>QUERY_FROM</name></expr></argument>, <argument><expr><name>value</name> <operator>=</operator> <name>QUERY_FROM_DESCRIPTION</name></expr></argument>, <argument><expr><name>defaultValue</name> <operator>=</operator> <name>DEFAULT_FROM</name></expr></argument>, <argument><expr><name>dataType</name> <operator>=</operator> <name>DATA_TYPE_STRING</name></expr></argument>, <argument><expr><name>paramType</name> <operator>=</operator> <name>PARAM_TYPE_QUERY</name></expr></argument>)</argument_list></annotation></argument>,
    <argument><annotation>@<name>ApiImplicitParam</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <name>QUERY_TO</name></expr></argument>, <argument><expr><name>value</name> <operator>=</operator> <name>QUERY_TO_DESCRIPTION</name></expr></argument>, <argument><expr><name>dataType</name> <operator>=</operator> <name>DATA_TYPE_STRING</name></expr></argument>, <argument><expr><name>paramType</name> <operator>=</operator> <name>PARAM_TYPE_QUERY</name></expr></argument>)</argument_list></annotation></argument>
  }</block></expr></argument>)</argument_list></annotation>
  <annotation>@<name>ApiResponses</name><argument_list>(<argument><expr><name>value</name> <operator>=</operator> <block>{
    <annotation>@<name>ApiResponse</name><argument_list>(<argument><expr><name>code</name> <operator>=</operator> <name><name>HttpStatus</name><operator>.</operator><name>SC_OK</name></name></expr></argument>, <argument><expr><name>message</name> <operator>=</operator> <name>MSG_SUCCESSFUL_OPERATION</name></expr></argument>)</argument_list></annotation>,
    <argument><annotation>@<name>ApiResponse</name><argument_list>(<argument><expr><name>code</name> <operator>=</operator> <name><name>HttpStatus</name><operator>.</operator><name>SC_INTERNAL_SERVER_ERROR</name></name></expr></argument>, <argument><expr><name>message</name> <operator>=</operator> <name>MSG_SERVER_ERROR</name></expr></argument>)</argument_list></annotation></argument>
  }</block></expr></argument>)</argument_list></annotation>
  <type><specifier>public</specifier> <name>Response</name></type> <name>getAmbariConfigurations</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>body</name></decl></parameter>, <parameter><decl><type><annotation>@<name>Context</name></annotation> <name>HttpHeaders</name></type> <name>headers</name></decl></parameter>, <parameter><decl><type><annotation>@<name>Context</name></annotation> <name>UriInfo</name></type> <name>uri</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <return>return <expr><call><name>handleRequest</name><argument_list>(<argument><expr><name>headers</name></expr></argument>, <argument><expr><name>body</name></expr></argument>, <argument><expr><name>uri</name></expr></argument>, <argument><expr><name><name>Request</name><operator>.</operator><name>Type</name><operator>.</operator><name>GET</name></name></expr></argument>, <argument><expr><call><name>createResource</name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>AmbariConfiguration</name></name></expr></argument>,
      <argument><expr><call><name><name>Collections</name><operator>.</operator><name>emptyMap</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>GET</name></annotation>
  <annotation>@<name>Path</name><argument_list>(<argument><expr><literal type="string">"{category}"</literal></expr></argument>)</argument_list></annotation>
  <annotation>@<name>Produces</name><argument_list>(<argument><expr><name><name>MediaType</name><operator>.</operator><name>TEXT_PLAIN</name></name></expr></argument>)</argument_list></annotation>
  <annotation>@<name>ApiOperation</name><argument_list>(<argument><expr><name>value</name> <operator>=</operator> <literal type="string">"Retrieve the details of an ambari configuration resource"</literal></expr></argument>,
    <argument><expr><name>nickname</name> <operator>=</operator> <literal type="string">"AmbariConfigurationService#getAmbariConfiguration"</literal></expr></argument>,
    <argument><expr><name>response</name> <operator>=</operator> <name><name>AmbariConfigurationResponseSwagger</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></annotation>
  <annotation>@<name>ApiImplicitParams</name><argument_list>(<argument><expr><block>{
    <annotation>@<name>ApiImplicitParam</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <name>QUERY_FIELDS</name></expr></argument>, <argument><expr><name>value</name> <operator>=</operator> <name>QUERY_FILTER_DESCRIPTION</name></expr></argument>, <argument><expr><name>defaultValue</name> <operator>=</operator> <literal type="string">"AmbariConfiguration/*"</literal></expr></argument>,
      <argument><expr><name>dataType</name> <operator>=</operator> <name>DATA_TYPE_STRING</name></expr></argument>, <argument><expr><name>paramType</name> <operator>=</operator> <name>PARAM_TYPE_QUERY</name></expr></argument>)</argument_list></annotation>
  }</block></expr></argument>)</argument_list></annotation>
  <annotation>@<name>ApiResponses</name><argument_list>(<argument><expr><name>value</name> <operator>=</operator> <block>{
    <annotation>@<name>ApiResponse</name><argument_list>(<argument><expr><name>code</name> <operator>=</operator> <name><name>HttpStatus</name><operator>.</operator><name>SC_OK</name></name></expr></argument>, <argument><expr><name>message</name> <operator>=</operator> <name>MSG_SUCCESSFUL_OPERATION</name></expr></argument>)</argument_list></annotation>,
    <argument><annotation>@<name>ApiResponse</name><argument_list>(<argument><expr><name>code</name> <operator>=</operator> <name><name>HttpStatus</name><operator>.</operator><name>SC_NOT_FOUND</name></name></expr></argument>, <argument><expr><name>message</name> <operator>=</operator> <name>MSG_RESOURCE_NOT_FOUND</name></expr></argument>)</argument_list></annotation></argument>,
    <argument><annotation>@<name>ApiResponse</name><argument_list>(<argument><expr><name>code</name> <operator>=</operator> <name><name>HttpStatus</name><operator>.</operator><name>SC_INTERNAL_SERVER_ERROR</name></name></expr></argument>, <argument><expr><name>message</name> <operator>=</operator> <name>MSG_SERVER_ERROR</name></expr></argument>)</argument_list></annotation></argument>
  }</block></expr></argument>)</argument_list></annotation>
  <type><specifier>public</specifier> <name>Response</name></type> <name>getAmbariConfiguration</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>body</name></decl></parameter>, <parameter><decl><type><annotation>@<name>Context</name></annotation> <name>HttpHeaders</name></type> <name>headers</name></decl></parameter>, <parameter><decl><type><annotation>@<name>Context</name></annotation> <name>UriInfo</name></type> <name>uri</name></decl></parameter>,
                                         <parameter><decl><type><annotation>@<name>PathParam</name><argument_list>(<argument><expr><literal type="string">"category"</literal></expr></argument>)</argument_list></annotation> <name>String</name></type> <name>category</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <return>return <expr><call><name>handleRequest</name><argument_list>(<argument><expr><name>headers</name></expr></argument>, <argument><expr><name>body</name></expr></argument>, <argument><expr><name>uri</name></expr></argument>, <argument><expr><name><name>Request</name><operator>.</operator><name>Type</name><operator>.</operator><name>GET</name></name></expr></argument>, <argument><expr><call><name>createResource</name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>AmbariConfiguration</name></name></expr></argument>,
      <argument><expr><call><name><name>Collections</name><operator>.</operator><name>singletonMap</name></name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>AmbariConfiguration</name></name></expr></argument>, <argument><expr><name>category</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>PUT</name></annotation>
  <annotation>@<name>Path</name><argument_list>(<argument><expr><literal type="string">"{category}"</literal></expr></argument>)</argument_list></annotation>
  <annotation>@<name>Produces</name><argument_list>(<argument><expr><name><name>MediaType</name><operator>.</operator><name>TEXT_PLAIN</name></name></expr></argument>)</argument_list></annotation>
  <annotation>@<name>ApiOperation</name><argument_list>(<argument><expr><name>value</name> <operator>=</operator> <literal type="string">"Updates ambari configuration resources "</literal></expr></argument>,
    <argument><expr><name>nickname</name> <operator>=</operator> <literal type="string">"AmbariConfigurationService#updateAmbariConfiguration"</literal></expr></argument>)</argument_list></annotation>
  <annotation>@<name>ApiImplicitParams</name><argument_list>(<argument><expr><block>{
    <annotation>@<name>ApiImplicitParam</name><argument_list>(<argument><expr><name>dataType</name> <operator>=</operator> <name>AMBARI_CONFIGURATION_REQUEST_TYPE</name></expr></argument>, <argument><expr><name>paramType</name> <operator>=</operator> <name>PARAM_TYPE_BODY</name></expr></argument>)</argument_list></annotation>,
    <argument><annotation>@<name>ApiImplicitParam</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <name>QUERY_FIELDS</name></expr></argument>, <argument><expr><name>value</name> <operator>=</operator> <name>QUERY_FILTER_DESCRIPTION</name></expr></argument>, <argument><expr><name>defaultValue</name> <operator>=</operator> <literal type="string">"AmbariConfiguration/*"</literal></expr></argument>,
      <argument><expr><name>dataType</name> <operator>=</operator> <name>DATA_TYPE_STRING</name></expr></argument>, <argument><expr><name>paramType</name> <operator>=</operator> <name>PARAM_TYPE_QUERY</name></expr></argument>)</argument_list></annotation></argument>
  }</block></expr></argument>)</argument_list></annotation>
  <annotation>@<name>ApiResponses</name><argument_list>(<argument><expr><block>{
    <annotation>@<name>ApiResponse</name><argument_list>(<argument><expr><name>code</name> <operator>=</operator> <name><name>HttpStatus</name><operator>.</operator><name>SC_OK</name></name></expr></argument>, <argument><expr><name>message</name> <operator>=</operator> <name>MSG_SUCCESSFUL_OPERATION</name></expr></argument>)</argument_list></annotation>,
    <argument><annotation>@<name>ApiResponse</name><argument_list>(<argument><expr><name>code</name> <operator>=</operator> <name><name>HttpStatus</name><operator>.</operator><name>SC_ACCEPTED</name></name></expr></argument>, <argument><expr><name>message</name> <operator>=</operator> <name>MSG_REQUEST_ACCEPTED</name></expr></argument>)</argument_list></annotation></argument>,
    <argument><annotation>@<name>ApiResponse</name><argument_list>(<argument><expr><name>code</name> <operator>=</operator> <name><name>HttpStatus</name><operator>.</operator><name>SC_BAD_REQUEST</name></name></expr></argument>, <argument><expr><name>message</name> <operator>=</operator> <name>MSG_INVALID_ARGUMENTS</name></expr></argument>)</argument_list></annotation></argument>,
    <argument><annotation>@<name>ApiResponse</name><argument_list>(<argument><expr><name>code</name> <operator>=</operator> <name><name>HttpStatus</name><operator>.</operator><name>SC_NOT_FOUND</name></name></expr></argument>, <argument><expr><name>message</name> <operator>=</operator> <name>MSG_RESOURCE_NOT_FOUND</name></expr></argument>)</argument_list></annotation></argument>,
    <argument><annotation>@<name>ApiResponse</name><argument_list>(<argument><expr><name>code</name> <operator>=</operator> <name><name>HttpStatus</name><operator>.</operator><name>SC_UNAUTHORIZED</name></name></expr></argument>, <argument><expr><name>message</name> <operator>=</operator> <name>MSG_NOT_AUTHENTICATED</name></expr></argument>)</argument_list></annotation></argument>,
    <argument><annotation>@<name>ApiResponse</name><argument_list>(<argument><expr><name>code</name> <operator>=</operator> <name><name>HttpStatus</name><operator>.</operator><name>SC_FORBIDDEN</name></name></expr></argument>, <argument><expr><name>message</name> <operator>=</operator> <name>MSG_PERMISSION_DENIED</name></expr></argument>)</argument_list></annotation></argument>,
    <argument><annotation>@<name>ApiResponse</name><argument_list>(<argument><expr><name>code</name> <operator>=</operator> <name><name>HttpStatus</name><operator>.</operator><name>SC_INTERNAL_SERVER_ERROR</name></name></expr></argument>, <argument><expr><name>message</name> <operator>=</operator> <name>MSG_SERVER_ERROR</name></expr></argument>)</argument_list></annotation></argument>,
  <argument/>}</block></expr></argument>)</argument_list></annotation>
  <type><specifier>public</specifier> <name>Response</name></type> <name>updateAmbariConfiguration</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>body</name></decl></parameter>, <parameter><decl><type><annotation>@<name>Context</name></annotation> <name>HttpHeaders</name></type> <name>headers</name></decl></parameter>, <parameter><decl><type><annotation>@<name>Context</name></annotation> <name>UriInfo</name></type> <name>uri</name></decl></parameter>,
                                            <parameter><decl><type><annotation>@<name>PathParam</name><argument_list>(<argument><expr><literal type="string">"category"</literal></expr></argument>)</argument_list></annotation> <name>String</name></type> <name>category</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <return>return <expr><call><name>handleRequest</name><argument_list>(<argument><expr><name>headers</name></expr></argument>, <argument><expr><name>body</name></expr></argument>, <argument><expr><name>uri</name></expr></argument>, <argument><expr><name><name>Request</name><operator>.</operator><name>Type</name><operator>.</operator><name>PUT</name></name></expr></argument>, <argument><expr><call><name>createResource</name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>AmbariConfiguration</name></name></expr></argument>,
      <argument><expr><call><name><name>Collections</name><operator>.</operator><name>singletonMap</name></name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>AmbariConfiguration</name></name></expr></argument>, <argument><expr><name>category</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>DELETE</name></annotation>
  <annotation>@<name>Path</name><argument_list>(<argument><expr><literal type="string">"{category}"</literal></expr></argument>)</argument_list></annotation>
  <annotation>@<name>Produces</name><argument_list>(<argument><expr><name><name>MediaType</name><operator>.</operator><name>TEXT_PLAIN</name></name></expr></argument>)</argument_list></annotation>
  <annotation>@<name>ApiOperation</name><argument_list>(<argument><expr><name>value</name> <operator>=</operator> <literal type="string">"Deletes an ambari configuration resource"</literal></expr></argument>,
    <argument><expr><name>nickname</name> <operator>=</operator> <literal type="string">"AmbariConfigurationService#deleteAmbariConfiguration"</literal></expr></argument>)</argument_list></annotation>
  <annotation>@<name>ApiResponses</name><argument_list>(<argument><expr><block>{
    <annotation>@<name>ApiResponse</name><argument_list>(<argument><expr><name>code</name> <operator>=</operator> <name><name>HttpStatus</name><operator>.</operator><name>SC_OK</name></name></expr></argument>, <argument><expr><name>message</name> <operator>=</operator> <name>MSG_SUCCESSFUL_OPERATION</name></expr></argument>)</argument_list></annotation>,
    <argument><annotation>@<name>ApiResponse</name><argument_list>(<argument><expr><name>code</name> <operator>=</operator> <name><name>HttpStatus</name><operator>.</operator><name>SC_NOT_FOUND</name></name></expr></argument>, <argument><expr><name>message</name> <operator>=</operator> <name>MSG_RESOURCE_NOT_FOUND</name></expr></argument>)</argument_list></annotation></argument>,
    <argument><annotation>@<name>ApiResponse</name><argument_list>(<argument><expr><name>code</name> <operator>=</operator> <name><name>HttpStatus</name><operator>.</operator><name>SC_UNAUTHORIZED</name></name></expr></argument>, <argument><expr><name>message</name> <operator>=</operator> <name>MSG_NOT_AUTHENTICATED</name></expr></argument>)</argument_list></annotation></argument>,
    <argument><annotation>@<name>ApiResponse</name><argument_list>(<argument><expr><name>code</name> <operator>=</operator> <name><name>HttpStatus</name><operator>.</operator><name>SC_FORBIDDEN</name></name></expr></argument>, <argument><expr><name>message</name> <operator>=</operator> <name>MSG_PERMISSION_DENIED</name></expr></argument>)</argument_list></annotation></argument>,
    <argument><annotation>@<name>ApiResponse</name><argument_list>(<argument><expr><name>code</name> <operator>=</operator> <name><name>HttpStatus</name><operator>.</operator><name>SC_INTERNAL_SERVER_ERROR</name></name></expr></argument>, <argument><expr><name>message</name> <operator>=</operator> <name>MSG_SERVER_ERROR</name></expr></argument>)</argument_list></annotation></argument>,
  <argument/>}</block></expr></argument>)</argument_list></annotation>
  <type><specifier>public</specifier> <name>Response</name></type> <name>deleteAmbariConfiguration</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>body</name></decl></parameter>, <parameter><decl><type><annotation>@<name>Context</name></annotation> <name>HttpHeaders</name></type> <name>headers</name></decl></parameter>, <parameter><decl><type><annotation>@<name>Context</name></annotation> <name>UriInfo</name></type> <name>uri</name></decl></parameter>,
                                            <parameter><decl><type><annotation>@<name>PathParam</name><argument_list>(<argument><expr><literal type="string">"category"</literal></expr></argument>)</argument_list></annotation> <name>String</name></type> <name>category</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <return>return <expr><call><name>handleRequest</name><argument_list>(<argument><expr><name>headers</name></expr></argument>, <argument><expr><name>body</name></expr></argument>, <argument><expr><name>uri</name></expr></argument>, <argument><expr><name><name>Request</name><operator>.</operator><name>Type</name><operator>.</operator><name>DELETE</name></name></expr></argument>, <argument><expr><call><name>createResource</name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>AmbariConfiguration</name></name></expr></argument>,
      <argument><expr><call><name><name>Collections</name><operator>.</operator><name>singletonMap</name></name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>AmbariConfiguration</name></name></expr></argument>, <argument><expr><name>category</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name><name>AmbariMetaInfo</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name><name>AmbariMetaInfo</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">46ee65abea</literal><operator>..</operator><name>b1eba8fe40</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name><name>AmbariMetaInfo</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name><name>AmbariMetaInfo</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">43</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">43</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>AmbariException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>ParentObjectNotFoundException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>StackAccessException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>configuration</name><operator>.</operator><name>Configuration</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>RootServiceResponseFactory</name><operator>.</operator><name>Services</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>RootService</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>utilities</name><operator>.</operator><name>PropertyHelper</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>customactions</name><operator>.</operator><name>ActionDefinition</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>customactions</name><operator>.</operator><name>ActionDefinitionManager</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1179</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">1179</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariMetaInfo</name> <block>{
         <expr><name>String</name> <name>componentName</name> <operator>=</operator> <call><name><name>definition</name><operator>.</operator><name>getComponentName</name></name><argument_list>()</argument_list></call></expr>;
 
         <comment type="line">// the AMBARI service is special, skip it here</comment>
        <if_stmt><if>if <condition>(<expr><call><name><name>Services</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>serviceName</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><call><name><name>RootService</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>serviceName</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
           <continue>continue;</continue>
         <expr_stmt/></block_content></block></if></if_stmt></block_content></block></if></if_stmt>}</block>
 
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name><name>AmbariConfigurationRequestSwagger</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name><name>RootServiceComponentConfigurationRequestSwagger</name><operator>.</operator><name>java</name></name>
<name>similarity</name> <name>index</name> <literal type="number">64</literal><operator>%</operator>
<name>rename</name> <name>from</name> <name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name><name>AmbariConfigurationRequestSwagger</name><operator>.</operator><name>java</name></name>
<name>rename</name> <name>to</name> <name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name><name>RootServiceComponentConfigurationRequestSwagger</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">2dca9f55f4</literal><operator>..</operator><name>dffa12570a</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name><name>AmbariConfigurationRequestSwagger</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name><name>RootServiceComponentConfigurationRequestSwagger</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">18</literal> <operator>+</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">24</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>ApiModel</name></name>;</import>
 <import>import <name><name>io</name><operator>.</operator><name>swagger</name><operator>.</operator><name>annotations</name><operator>.</operator><name>ApiModelProperty</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
 * Request data model for {@link org.apache.ambari.server.api.services.AmbariConfigurationService}
 * Request data model for {@link org.apache.ambari.server.api.services.RootServiceComponentConfigurationService}
  */</comment>
<interface><specifier>public</specifier> interface <name>AmbariConfigurationRequestSwagger</name> <super_list><extends>extends <super><name>ApiModel</name></super></extends></super_list> <block>{
<interface><specifier>public</specifier> interface <name>RootServiceComponentConfigurationRequestSwagger</name> <super_list><extends>extends <super><name>ApiModel</name></super></extends></super_list> <block>{
 
  <function_decl><annotation>@<name>ApiModelProperty</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"AmbariConfiguration"</literal></expr></argument>)</argument_list></annotation>
  <type><name>AmbariConfigurationRequestInfo</name></type> <name>getAmbariConfiguration</name><parameter_list>()</parameter_list>;</function_decl>
  <function_decl><annotation>@<name>ApiModelProperty</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"Configuration"</literal></expr></argument>)</argument_list></annotation>
  <type><name>RootServiceComponentConfigurationRequestInfo</name></type> <name>getRootServiceComponentConfigurationRequestInfo</name><parameter_list>()</parameter_list>;</function_decl>

  <interface>interface <name>RootServiceComponentConfigurationRequestInfo</name> <block>{
    <function_decl><annotation>@<name>ApiModelProperty</name></annotation>
    <type><name>String</name></type> <name>getServiceName</name><parameter_list>()</parameter_list>;</function_decl>

    <function_decl><annotation>@<name>ApiModelProperty</name></annotation>
    <type><name>String</name></type> <name>getComponentName</name><parameter_list>()</parameter_list>;</function_decl>
 
  <interface>interface <name>AmbariConfigurationRequestInfo</name> <block>{
     <function_decl><annotation>@<name>ApiModelProperty</name></annotation>
     <type><name>String</name></type> <name>getCategoryName</name><parameter_list>()</parameter_list>;</function_decl>
 
     <function_decl><annotation>@<name>ApiModelProperty</name></annotation>
    <type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>getProperties</name><parameter_list>()</parameter_list>;</function_decl>
    <function_decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>getProperties</name><parameter_list>()</parameter_list>;</function_decl>
   }</block></interface>
 }</block></interface>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name><name>AmbariConfigurationResponseSwagger</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name><name>RootServiceComponentConfigurationResponseSwagger</name><operator>.</operator><name>java</name></name>
<name>similarity</name> <name>index</name> <literal type="number">64</literal><operator>%</operator>
<name>rename</name> <name>from</name> <name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name><name>AmbariConfigurationResponseSwagger</name><operator>.</operator><name>java</name></name>
<name>rename</name> <name>to</name> <name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name><name>RootServiceComponentConfigurationResponseSwagger</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>c55ac1dd60</name><operator>..</operator><name>fb3c09d256</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name><name>AmbariConfigurationResponseSwagger</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name><name>RootServiceComponentConfigurationResponseSwagger</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">21</literal> <operator>+</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">24</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>ApiModel</name></name>;</import>
 <import>import <name><name>io</name><operator>.</operator><name>swagger</name><operator>.</operator><name>annotations</name><operator>.</operator><name>ApiModelProperty</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
 * Response data model for {@link org.apache.ambari.server.api.services.AmbariConfigurationService}
 * Response data model for {@link org.apache.ambari.server.api.services.RootServiceComponentConfigurationService}
  */</comment>
<interface><specifier>public</specifier> interface <name>AmbariConfigurationResponseSwagger</name> <super_list><extends>extends <super><name>ApiModel</name></super></extends></super_list> <block>{
<interface><specifier>public</specifier> interface <name>RootServiceComponentConfigurationResponseSwagger</name> <super_list><extends>extends <super><name>ApiModel</name></super></extends></super_list> <block>{
 
  <function_decl><annotation>@<name>ApiModelProperty</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"AmbariConfiguration"</literal></expr></argument>)</argument_list></annotation>
  <type><name>AmbariConfigurationResponseInfo</name></type> <name>getAmbariConfigurationResponse</name><parameter_list>()</parameter_list>;</function_decl>
  <function_decl><annotation>@<name>ApiModelProperty</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"Configuration"</literal></expr></argument>)</argument_list></annotation>
  <type><name>RootServiceComponentConfigurationResponseInfo</name></type> <name>getRootServiceComponentConfigurationResponseInfo</name><parameter_list>()</parameter_list>;</function_decl>
 
  <interface>interface <name>AmbariConfigurationResponseInfo</name> <block>{
  <interface>interface <name>RootServiceComponentConfigurationResponseInfo</name> <block>{
     <function_decl><annotation>@<name>ApiModelProperty</name></annotation>
    <type><name>Long</name></type> <name>getId</name><parameter_list>()</parameter_list>;</function_decl>
    <function_decl><type><name>String</name></type> <name>getServiceName</name><parameter_list>()</parameter_list>;</function_decl>
 
     <function_decl><annotation>@<name>ApiModelProperty</name></annotation>
    <type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>getData</name><parameter_list>()</parameter_list>;</function_decl>
    <function_decl><type><name>String</name></type> <name>getComponentName</name><parameter_list>()</parameter_list>;</function_decl>
 
     <function_decl><annotation>@<name>ApiModelProperty</name></annotation>
    <type><name>String</name></type> <name>getType</name><parameter_list>()</parameter_list>;</function_decl>
    <function_decl><type><name>String</name></type> <name>getCategoryName</name><parameter_list>()</parameter_list>;</function_decl>

    <function_decl><annotation>@<name>ApiModelProperty</name></annotation>
    <type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>getProperties</name><parameter_list>()</parameter_list>;</function_decl>
   }</block></interface>
 }</block></interface>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name><name>RootServiceComponentConfigurationService</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name><name>RootServiceComponentConfigurationService</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">0000000000..c7c37a6956</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name><name>RootServiceComponentConfigurationService</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">226</literal> @@</expr></expr_stmt>
<comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<comment type="block">/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>api</name><operator>.</operator><name>services</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>

<import>import <name><name>javax</name><operator>.</operator><name>ws</name><operator>.</operator><name>rs</name><operator>.</operator><name>DELETE</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>ws</name><operator>.</operator><name>rs</name><operator>.</operator><name>GET</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>ws</name><operator>.</operator><name>rs</name><operator>.</operator><name>POST</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>ws</name><operator>.</operator><name>rs</name><operator>.</operator><name>PUT</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>ws</name><operator>.</operator><name>rs</name><operator>.</operator><name>Path</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>ws</name><operator>.</operator><name>rs</name><operator>.</operator><name>PathParam</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>ws</name><operator>.</operator><name>rs</name><operator>.</operator><name>Produces</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>ws</name><operator>.</operator><name>rs</name><operator>.</operator><name>core</name><operator>.</operator><name>Context</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>ws</name><operator>.</operator><name>rs</name><operator>.</operator><name>core</name><operator>.</operator><name>HttpHeaders</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>ws</name><operator>.</operator><name>rs</name><operator>.</operator><name>core</name><operator>.</operator><name>MediaType</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>ws</name><operator>.</operator><name>rs</name><operator>.</operator><name>core</name><operator>.</operator><name>Response</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>ws</name><operator>.</operator><name>rs</name><operator>.</operator><name>core</name><operator>.</operator><name>UriInfo</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>api</name><operator>.</operator><name>resources</name><operator>.</operator><name>ResourceInstance</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>Resource</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>http</name><operator>.</operator><name>HttpStatus</name></name>;</import>

<import>import <name><name>io</name><operator>.</operator><name>swagger</name><operator>.</operator><name>annotations</name><operator>.</operator><name>Api</name></name>;</import>
<import>import <name><name>io</name><operator>.</operator><name>swagger</name><operator>.</operator><name>annotations</name><operator>.</operator><name>ApiImplicitParam</name></name>;</import>
<import>import <name><name>io</name><operator>.</operator><name>swagger</name><operator>.</operator><name>annotations</name><operator>.</operator><name>ApiImplicitParams</name></name>;</import>
<import>import <name><name>io</name><operator>.</operator><name>swagger</name><operator>.</operator><name>annotations</name><operator>.</operator><name>ApiOperation</name></name>;</import>
<import>import <name><name>io</name><operator>.</operator><name>swagger</name><operator>.</operator><name>annotations</name><operator>.</operator><name>ApiResponse</name></name>;</import>
<import>import <name><name>io</name><operator>.</operator><name>swagger</name><operator>.</operator><name>annotations</name><operator>.</operator><name>ApiResponses</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Rest endpoint for managing ambari root service component configurations. Supports CRUD operations.
 * Ambari configurations are resources that relate to the ambari server instance even before a cluster is provisioned.
 * &lt;p&gt;
 * Ambari configuration resources may be shared with components and services in the cluster
 * (by recommending them as default values)
 * &lt;p&gt;
 * Eg. LDAP configuration is stored as Configuration.
 * The request payload has the form:
 * &lt;p&gt;
 * &lt;pre&gt;
 *      {
 *        "Configuration": {
 *          "service_name": "AMBARI",
 *          "component_name": "AMBARI_SERVER",
 *          "category": "ldap-configuration",
 *          "properties": {
 *             "authentication.ldap.primaryUrl": "localhost:33389"
 *             "authentication.ldap.secondaryUrl": "localhost:333"
 *             "authentication.ldap.baseDn": "dc=ambari,dc=apache,dc=org"
 *             // ......
 *          }
 *        }
 *      }
 * &lt;/pre&gt;
 */</comment>
<class><annotation>@<name>Api</name><argument_list>(<argument><expr><name>value</name> <operator>=</operator> <literal type="string">"Root Service Configurations"</literal></expr></argument>, <argument><expr><name>description</name> <operator>=</operator> <literal type="string">"Endpoint for Ambari root service component configuration related operations"</literal></expr></argument>)</argument_list></annotation>
<specifier>public</specifier> class <name>RootServiceComponentConfigurationService</name> <super_list><extends>extends <super><name>BaseService</name></super></extends></super_list> <block>{

  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>REQUEST_TYPE</name> <init>=
      <expr><literal type="string">"org.apache.ambari.server.api.services.RootServiceComponentConfigurationRequestSwagger"</literal></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>String</name></type> <name>serviceName</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>String</name></type> <name>componentName</name></decl>;</decl_stmt>

  <constructor><specifier>public</specifier> <name>RootServiceComponentConfigurationService</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>serviceName</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>componentName</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>serviceName</name></name> <operator>=</operator> <name>serviceName</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>componentName</name></name> <operator>=</operator> <name>componentName</name></expr>;</expr_stmt>
  </block_content>}</block></constructor>

  <comment type="block" format="javadoc">/**
   * Creates a root service component configuration resource.
   *
   * @param body    the payload in json format
   * @param headers http headers
   * @param uri     request uri information
   * @return
   */</comment>
  <function><annotation>@<name>POST</name></annotation>
  <annotation>@<name>Produces</name><argument_list>(<argument><expr><name><name>MediaType</name><operator>.</operator><name>TEXT_PLAIN</name></name></expr></argument>)</argument_list></annotation>
  <annotation>@<name>ApiOperation</name><argument_list>(<argument><expr><name>value</name> <operator>=</operator> <literal type="string">"Creates a root service component configuration resource"</literal></expr></argument>,
      <argument><expr><name>nickname</name> <operator>=</operator> <literal type="string">"RootServiceComponentConfigurationService#createConfiguration"</literal></expr></argument>)</argument_list></annotation>
  <annotation>@<name>ApiImplicitParams</name><argument_list>(<argument><expr><block>{
      <annotation>@<name>ApiImplicitParam</name><argument_list>(<argument><expr><name>dataType</name> <operator>=</operator> <name>REQUEST_TYPE</name></expr></argument>, <argument><expr><name>paramType</name> <operator>=</operator> <name>PARAM_TYPE_BODY</name></expr></argument>)</argument_list></annotation>
  }</block></expr></argument>)</argument_list></annotation>
  <annotation>@<name>ApiResponses</name><argument_list>(<argument><expr><block>{
      <annotation>@<name>ApiResponse</name><argument_list>(<argument><expr><name>code</name> <operator>=</operator> <name><name>HttpStatus</name><operator>.</operator><name>SC_CREATED</name></name></expr></argument>, <argument><expr><name>message</name> <operator>=</operator> <name>MSG_SUCCESSFUL_OPERATION</name></expr></argument>)</argument_list></annotation>,
      <argument><annotation>@<name>ApiResponse</name><argument_list>(<argument><expr><name>code</name> <operator>=</operator> <name><name>HttpStatus</name><operator>.</operator><name>SC_ACCEPTED</name></name></expr></argument>, <argument><expr><name>message</name> <operator>=</operator> <name>MSG_REQUEST_ACCEPTED</name></expr></argument>)</argument_list></annotation></argument>,
      <argument><annotation>@<name>ApiResponse</name><argument_list>(<argument><expr><name>code</name> <operator>=</operator> <name><name>HttpStatus</name><operator>.</operator><name>SC_BAD_REQUEST</name></name></expr></argument>, <argument><expr><name>message</name> <operator>=</operator> <name>MSG_INVALID_ARGUMENTS</name></expr></argument>)</argument_list></annotation></argument>,
      <argument><annotation>@<name>ApiResponse</name><argument_list>(<argument><expr><name>code</name> <operator>=</operator> <name><name>HttpStatus</name><operator>.</operator><name>SC_CONFLICT</name></name></expr></argument>, <argument><expr><name>message</name> <operator>=</operator> <name>MSG_RESOURCE_ALREADY_EXISTS</name></expr></argument>)</argument_list></annotation></argument>,
      <argument><annotation>@<name>ApiResponse</name><argument_list>(<argument><expr><name>code</name> <operator>=</operator> <name><name>HttpStatus</name><operator>.</operator><name>SC_UNAUTHORIZED</name></name></expr></argument>, <argument><expr><name>message</name> <operator>=</operator> <name>MSG_NOT_AUTHENTICATED</name></expr></argument>)</argument_list></annotation></argument>,
      <argument><annotation>@<name>ApiResponse</name><argument_list>(<argument><expr><name>code</name> <operator>=</operator> <name><name>HttpStatus</name><operator>.</operator><name>SC_FORBIDDEN</name></name></expr></argument>, <argument><expr><name>message</name> <operator>=</operator> <name>MSG_PERMISSION_DENIED</name></expr></argument>)</argument_list></annotation></argument>,
      <argument><annotation>@<name>ApiResponse</name><argument_list>(<argument><expr><name>code</name> <operator>=</operator> <name><name>HttpStatus</name><operator>.</operator><name>SC_INTERNAL_SERVER_ERROR</name></name></expr></argument>, <argument><expr><name>message</name> <operator>=</operator> <name>MSG_SERVER_ERROR</name></expr></argument>)</argument_list></annotation></argument>,
  <argument/>}</block></expr></argument>)</argument_list></annotation>
  <type><specifier>public</specifier> <name>Response</name></type> <name>createConfiguration</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>body</name></decl></parameter>, <parameter><decl><type><annotation>@<name>Context</name></annotation> <name>HttpHeaders</name></type> <name>headers</name></decl></parameter>, <parameter><decl><type><annotation>@<name>Context</name></annotation> <name>UriInfo</name></type> <name>uri</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <return>return <expr><call><name>handleRequest</name><argument_list>(<argument><expr><name>headers</name></expr></argument>, <argument><expr><name>body</name></expr></argument>, <argument><expr><name>uri</name></expr></argument>, <argument><expr><name><name>Request</name><operator>.</operator><name>Type</name><operator>.</operator><name>POST</name></name></expr></argument>, <argument><expr><call><name>createResource</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>GET</name></annotation>
  <annotation>@<name>Produces</name><argument_list>(<argument><expr><name><name>MediaType</name><operator>.</operator><name>TEXT_PLAIN</name></name></expr></argument>)</argument_list></annotation>
  <annotation>@<name>ApiOperation</name><argument_list>(<argument><expr><name>value</name> <operator>=</operator> <literal type="string">"Retrieve all root service component configuration resources"</literal></expr></argument>,
      <argument><expr><name>nickname</name> <operator>=</operator> <literal type="string">"RootServiceComponentConfigurationService#getConfigurations"</literal></expr></argument>,
      <argument><expr><name>notes</name> <operator>=</operator> <literal type="string">"Returns all root service component configurations."</literal></expr></argument>,
      <argument><expr><name>response</name> <operator>=</operator> <name><name>RootServiceComponentConfigurationResponseSwagger</name><operator>.</operator><name>class</name></name></expr></argument>,
      <argument><expr><name>responseContainer</name> <operator>=</operator> <name>RESPONSE_CONTAINER_LIST</name></expr></argument>)</argument_list></annotation>
  <annotation>@<name>ApiImplicitParams</name><argument_list>(<argument><expr><block>{
      <annotation>@<name>ApiImplicitParam</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <name>QUERY_FIELDS</name></expr></argument>, <argument><expr><name>value</name> <operator>=</operator> <name>QUERY_FILTER_DESCRIPTION</name></expr></argument>,
          <argument><expr><name>defaultValue</name> <operator>=</operator> <literal type="string">"Configuration/properties, Configuration/category, Configuration/component_name, Configuration/service_name"</literal></expr></argument>,
          <argument><expr><name>dataType</name> <operator>=</operator> <name>DATA_TYPE_STRING</name></expr></argument>, <argument><expr><name>paramType</name> <operator>=</operator> <name>PARAM_TYPE_QUERY</name></expr></argument>)</argument_list></annotation>,
      <argument><annotation>@<name>ApiImplicitParam</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <name>QUERY_SORT</name></expr></argument>, <argument><expr><name>value</name> <operator>=</operator> <name>QUERY_SORT_DESCRIPTION</name></expr></argument>,
          <argument><expr><name>defaultValue</name> <operator>=</operator> <literal type="string">"Configuration/category"</literal></expr></argument>,
          <argument><expr><name>dataType</name> <operator>=</operator> <name>DATA_TYPE_STRING</name></expr></argument>, <argument><expr><name>paramType</name> <operator>=</operator> <name>PARAM_TYPE_QUERY</name></expr></argument>)</argument_list></annotation></argument>,
      <argument><annotation>@<name>ApiImplicitParam</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <name>QUERY_PAGE_SIZE</name></expr></argument>, <argument><expr><name>value</name> <operator>=</operator> <name>QUERY_PAGE_SIZE_DESCRIPTION</name></expr></argument>, <argument><expr><name>defaultValue</name> <operator>=</operator> <name>DEFAULT_PAGE_SIZE</name></expr></argument>, <argument><expr><name>dataType</name> <operator>=</operator> <name>DATA_TYPE_INT</name></expr></argument>, <argument><expr><name>paramType</name> <operator>=</operator> <name>PARAM_TYPE_QUERY</name></expr></argument>)</argument_list></annotation></argument>,
      <argument><annotation>@<name>ApiImplicitParam</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <name>QUERY_FROM</name></expr></argument>, <argument><expr><name>value</name> <operator>=</operator> <name>QUERY_FROM_DESCRIPTION</name></expr></argument>, <argument><expr><name>defaultValue</name> <operator>=</operator> <name>DEFAULT_FROM</name></expr></argument>, <argument><expr><name>dataType</name> <operator>=</operator> <name>DATA_TYPE_STRING</name></expr></argument>, <argument><expr><name>paramType</name> <operator>=</operator> <name>PARAM_TYPE_QUERY</name></expr></argument>)</argument_list></annotation></argument>,
      <argument><annotation>@<name>ApiImplicitParam</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <name>QUERY_TO</name></expr></argument>, <argument><expr><name>value</name> <operator>=</operator> <name>QUERY_TO_DESCRIPTION</name></expr></argument>, <argument><expr><name>dataType</name> <operator>=</operator> <name>DATA_TYPE_STRING</name></expr></argument>, <argument><expr><name>paramType</name> <operator>=</operator> <name>PARAM_TYPE_QUERY</name></expr></argument>)</argument_list></annotation></argument>
  }</block></expr></argument>)</argument_list></annotation>
  <annotation>@<name>ApiResponses</name><argument_list>(<argument><expr><name>value</name> <operator>=</operator> <block>{
      <annotation>@<name>ApiResponse</name><argument_list>(<argument><expr><name>code</name> <operator>=</operator> <name><name>HttpStatus</name><operator>.</operator><name>SC_OK</name></name></expr></argument>, <argument><expr><name>message</name> <operator>=</operator> <name>MSG_SUCCESSFUL_OPERATION</name></expr></argument>)</argument_list></annotation>,
      <argument><annotation>@<name>ApiResponse</name><argument_list>(<argument><expr><name>code</name> <operator>=</operator> <name><name>HttpStatus</name><operator>.</operator><name>SC_INTERNAL_SERVER_ERROR</name></name></expr></argument>, <argument><expr><name>message</name> <operator>=</operator> <name>MSG_SERVER_ERROR</name></expr></argument>)</argument_list></annotation></argument>
  }</block></expr></argument>)</argument_list></annotation>
  <type><specifier>public</specifier> <name>Response</name></type> <name>getConfigurations</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>body</name></decl></parameter>, <parameter><decl><type><annotation>@<name>Context</name></annotation> <name>HttpHeaders</name></type> <name>headers</name></decl></parameter>, <parameter><decl><type><annotation>@<name>Context</name></annotation> <name>UriInfo</name></type> <name>uri</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <return>return <expr><call><name>handleRequest</name><argument_list>(<argument><expr><name>headers</name></expr></argument>, <argument><expr><name>body</name></expr></argument>, <argument><expr><name>uri</name></expr></argument>, <argument><expr><name><name>Request</name><operator>.</operator><name>Type</name><operator>.</operator><name>GET</name></name></expr></argument>, <argument><expr><call><name>createResource</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>GET</name></annotation>
  <annotation>@<name>Path</name><argument_list>(<argument><expr><literal type="string">"{category}"</literal></expr></argument>)</argument_list></annotation>
  <annotation>@<name>Produces</name><argument_list>(<argument><expr><name><name>MediaType</name><operator>.</operator><name>TEXT_PLAIN</name></name></expr></argument>)</argument_list></annotation>
  <annotation>@<name>ApiOperation</name><argument_list>(<argument><expr><name>value</name> <operator>=</operator> <literal type="string">"Retrieve the details of a root service component configuration resource"</literal></expr></argument>,
      <argument><expr><name>nickname</name> <operator>=</operator> <literal type="string">"RootServiceComponentConfigurationService#getConfiguration"</literal></expr></argument>,
      <argument><expr><name>response</name> <operator>=</operator> <name><name>RootServiceComponentConfigurationResponseSwagger</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></annotation>
  <annotation>@<name>ApiImplicitParams</name><argument_list>(<argument><expr><block>{
      <annotation>@<name>ApiImplicitParam</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <name>QUERY_FIELDS</name></expr></argument>, <argument><expr><name>value</name> <operator>=</operator> <name>QUERY_FILTER_DESCRIPTION</name></expr></argument>, <argument><expr><name>defaultValue</name> <operator>=</operator> <literal type="string">"Configuration/*"</literal></expr></argument>,
          <argument><expr><name>dataType</name> <operator>=</operator> <name>DATA_TYPE_STRING</name></expr></argument>, <argument><expr><name>paramType</name> <operator>=</operator> <name>PARAM_TYPE_QUERY</name></expr></argument>)</argument_list></annotation>
  }</block></expr></argument>)</argument_list></annotation>
  <annotation>@<name>ApiResponses</name><argument_list>(<argument><expr><name>value</name> <operator>=</operator> <block>{
      <annotation>@<name>ApiResponse</name><argument_list>(<argument><expr><name>code</name> <operator>=</operator> <name><name>HttpStatus</name><operator>.</operator><name>SC_OK</name></name></expr></argument>, <argument><expr><name>message</name> <operator>=</operator> <name>MSG_SUCCESSFUL_OPERATION</name></expr></argument>)</argument_list></annotation>,
      <argument><annotation>@<name>ApiResponse</name><argument_list>(<argument><expr><name>code</name> <operator>=</operator> <name><name>HttpStatus</name><operator>.</operator><name>SC_NOT_FOUND</name></name></expr></argument>, <argument><expr><name>message</name> <operator>=</operator> <name>MSG_RESOURCE_NOT_FOUND</name></expr></argument>)</argument_list></annotation></argument>,
      <argument><annotation>@<name>ApiResponse</name><argument_list>(<argument><expr><name>code</name> <operator>=</operator> <name><name>HttpStatus</name><operator>.</operator><name>SC_INTERNAL_SERVER_ERROR</name></name></expr></argument>, <argument><expr><name>message</name> <operator>=</operator> <name>MSG_SERVER_ERROR</name></expr></argument>)</argument_list></annotation></argument>
  }</block></expr></argument>)</argument_list></annotation>
  <type><specifier>public</specifier> <name>Response</name></type> <name>getConfiguration</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>body</name></decl></parameter>, <parameter><decl><type><annotation>@<name>Context</name></annotation> <name>HttpHeaders</name></type> <name>headers</name></decl></parameter>, <parameter><decl><type><annotation>@<name>Context</name></annotation> <name>UriInfo</name></type> <name>uri</name></decl></parameter>,
                                   <parameter><decl><type><annotation>@<name>PathParam</name><argument_list>(<argument><expr><literal type="string">"category"</literal></expr></argument>)</argument_list></annotation> <name>String</name></type> <name>category</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <return>return <expr><call><name>handleRequest</name><argument_list>(<argument><expr><name>headers</name></expr></argument>, <argument><expr><name>body</name></expr></argument>, <argument><expr><name>uri</name></expr></argument>, <argument><expr><name><name>Request</name><operator>.</operator><name>Type</name><operator>.</operator><name>GET</name></name></expr></argument>, <argument><expr><call><name>createResource</name><argument_list>(<argument><expr><name>category</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>PUT</name></annotation>
  <annotation>@<name>Path</name><argument_list>(<argument><expr><literal type="string">"{category}"</literal></expr></argument>)</argument_list></annotation>
  <annotation>@<name>Produces</name><argument_list>(<argument><expr><name><name>MediaType</name><operator>.</operator><name>TEXT_PLAIN</name></name></expr></argument>)</argument_list></annotation>
  <annotation>@<name>ApiOperation</name><argument_list>(<argument><expr><name>value</name> <operator>=</operator> <literal type="string">"Updates root service component configuration resources "</literal></expr></argument>,
      <argument><expr><name>nickname</name> <operator>=</operator> <literal type="string">"RootServiceComponentConfigurationService#updateConfiguration"</literal></expr></argument>)</argument_list></annotation>
  <annotation>@<name>ApiImplicitParams</name><argument_list>(<argument><expr><block>{
      <annotation>@<name>ApiImplicitParam</name><argument_list>(<argument><expr><name>dataType</name> <operator>=</operator> <name>REQUEST_TYPE</name></expr></argument>, <argument><expr><name>paramType</name> <operator>=</operator> <name>PARAM_TYPE_BODY</name></expr></argument>)</argument_list></annotation>,
      <argument><annotation>@<name>ApiImplicitParam</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <name>QUERY_FIELDS</name></expr></argument>, <argument><expr><name>value</name> <operator>=</operator> <name>QUERY_FILTER_DESCRIPTION</name></expr></argument>, <argument><expr><name>defaultValue</name> <operator>=</operator> <literal type="string">"Configuration/*"</literal></expr></argument>,
          <argument><expr><name>dataType</name> <operator>=</operator> <name>DATA_TYPE_STRING</name></expr></argument>, <argument><expr><name>paramType</name> <operator>=</operator> <name>PARAM_TYPE_QUERY</name></expr></argument>)</argument_list></annotation></argument>
  }</block></expr></argument>)</argument_list></annotation>
  <annotation>@<name>ApiResponses</name><argument_list>(<argument><expr><block>{
      <annotation>@<name>ApiResponse</name><argument_list>(<argument><expr><name>code</name> <operator>=</operator> <name><name>HttpStatus</name><operator>.</operator><name>SC_OK</name></name></expr></argument>, <argument><expr><name>message</name> <operator>=</operator> <name>MSG_SUCCESSFUL_OPERATION</name></expr></argument>)</argument_list></annotation>,
      <argument><annotation>@<name>ApiResponse</name><argument_list>(<argument><expr><name>code</name> <operator>=</operator> <name><name>HttpStatus</name><operator>.</operator><name>SC_ACCEPTED</name></name></expr></argument>, <argument><expr><name>message</name> <operator>=</operator> <name>MSG_REQUEST_ACCEPTED</name></expr></argument>)</argument_list></annotation></argument>,
      <argument><annotation>@<name>ApiResponse</name><argument_list>(<argument><expr><name>code</name> <operator>=</operator> <name><name>HttpStatus</name><operator>.</operator><name>SC_BAD_REQUEST</name></name></expr></argument>, <argument><expr><name>message</name> <operator>=</operator> <name>MSG_INVALID_ARGUMENTS</name></expr></argument>)</argument_list></annotation></argument>,
      <argument><annotation>@<name>ApiResponse</name><argument_list>(<argument><expr><name>code</name> <operator>=</operator> <name><name>HttpStatus</name><operator>.</operator><name>SC_NOT_FOUND</name></name></expr></argument>, <argument><expr><name>message</name> <operator>=</operator> <name>MSG_RESOURCE_NOT_FOUND</name></expr></argument>)</argument_list></annotation></argument>,
      <argument><annotation>@<name>ApiResponse</name><argument_list>(<argument><expr><name>code</name> <operator>=</operator> <name><name>HttpStatus</name><operator>.</operator><name>SC_UNAUTHORIZED</name></name></expr></argument>, <argument><expr><name>message</name> <operator>=</operator> <name>MSG_NOT_AUTHENTICATED</name></expr></argument>)</argument_list></annotation></argument>,
      <argument><annotation>@<name>ApiResponse</name><argument_list>(<argument><expr><name>code</name> <operator>=</operator> <name><name>HttpStatus</name><operator>.</operator><name>SC_FORBIDDEN</name></name></expr></argument>, <argument><expr><name>message</name> <operator>=</operator> <name>MSG_PERMISSION_DENIED</name></expr></argument>)</argument_list></annotation></argument>,
      <argument><annotation>@<name>ApiResponse</name><argument_list>(<argument><expr><name>code</name> <operator>=</operator> <name><name>HttpStatus</name><operator>.</operator><name>SC_INTERNAL_SERVER_ERROR</name></name></expr></argument>, <argument><expr><name>message</name> <operator>=</operator> <name>MSG_SERVER_ERROR</name></expr></argument>)</argument_list></annotation></argument>,
  <argument/>}</block></expr></argument>)</argument_list></annotation>
  <type><specifier>public</specifier> <name>Response</name></type> <name>updateConfiguration</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>body</name></decl></parameter>, <parameter><decl><type><annotation>@<name>Context</name></annotation> <name>HttpHeaders</name></type> <name>headers</name></decl></parameter>, <parameter><decl><type><annotation>@<name>Context</name></annotation> <name>UriInfo</name></type> <name>uri</name></decl></parameter>,
                                      <parameter><decl><type><annotation>@<name>PathParam</name><argument_list>(<argument><expr><literal type="string">"category"</literal></expr></argument>)</argument_list></annotation> <name>String</name></type> <name>category</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <return>return <expr><call><name>handleRequest</name><argument_list>(<argument><expr><name>headers</name></expr></argument>, <argument><expr><name>body</name></expr></argument>, <argument><expr><name>uri</name></expr></argument>, <argument><expr><name><name>Request</name><operator>.</operator><name>Type</name><operator>.</operator><name>PUT</name></name></expr></argument>, <argument><expr><call><name>createResource</name><argument_list>(<argument><expr><name>category</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>DELETE</name></annotation>
  <annotation>@<name>Path</name><argument_list>(<argument><expr><literal type="string">"{category}"</literal></expr></argument>)</argument_list></annotation>
  <annotation>@<name>Produces</name><argument_list>(<argument><expr><name><name>MediaType</name><operator>.</operator><name>TEXT_PLAIN</name></name></expr></argument>)</argument_list></annotation>
  <annotation>@<name>ApiOperation</name><argument_list>(<argument><expr><name>value</name> <operator>=</operator> <literal type="string">"Deletes a root service component configuration resource"</literal></expr></argument>,
      <argument><expr><name>nickname</name> <operator>=</operator> <literal type="string">"RootServiceComponentConfigurationService#deleteConfiguration"</literal></expr></argument>)</argument_list></annotation>
  <annotation>@<name>ApiResponses</name><argument_list>(<argument><expr><block>{
      <annotation>@<name>ApiResponse</name><argument_list>(<argument><expr><name>code</name> <operator>=</operator> <name><name>HttpStatus</name><operator>.</operator><name>SC_OK</name></name></expr></argument>, <argument><expr><name>message</name> <operator>=</operator> <name>MSG_SUCCESSFUL_OPERATION</name></expr></argument>)</argument_list></annotation>,
      <argument><annotation>@<name>ApiResponse</name><argument_list>(<argument><expr><name>code</name> <operator>=</operator> <name><name>HttpStatus</name><operator>.</operator><name>SC_NOT_FOUND</name></name></expr></argument>, <argument><expr><name>message</name> <operator>=</operator> <name>MSG_RESOURCE_NOT_FOUND</name></expr></argument>)</argument_list></annotation></argument>,
      <argument><annotation>@<name>ApiResponse</name><argument_list>(<argument><expr><name>code</name> <operator>=</operator> <name><name>HttpStatus</name><operator>.</operator><name>SC_UNAUTHORIZED</name></name></expr></argument>, <argument><expr><name>message</name> <operator>=</operator> <name>MSG_NOT_AUTHENTICATED</name></expr></argument>)</argument_list></annotation></argument>,
      <argument><annotation>@<name>ApiResponse</name><argument_list>(<argument><expr><name>code</name> <operator>=</operator> <name><name>HttpStatus</name><operator>.</operator><name>SC_FORBIDDEN</name></name></expr></argument>, <argument><expr><name>message</name> <operator>=</operator> <name>MSG_PERMISSION_DENIED</name></expr></argument>)</argument_list></annotation></argument>,
      <argument><annotation>@<name>ApiResponse</name><argument_list>(<argument><expr><name>code</name> <operator>=</operator> <name><name>HttpStatus</name><operator>.</operator><name>SC_INTERNAL_SERVER_ERROR</name></name></expr></argument>, <argument><expr><name>message</name> <operator>=</operator> <name>MSG_SERVER_ERROR</name></expr></argument>)</argument_list></annotation></argument>,
  <argument/>}</block></expr></argument>)</argument_list></annotation>
  <type><specifier>public</specifier> <name>Response</name></type> <name>deleteConfiguration</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>body</name></decl></parameter>, <parameter><decl><type><annotation>@<name>Context</name></annotation> <name>HttpHeaders</name></type> <name>headers</name></decl></parameter>, <parameter><decl><type><annotation>@<name>Context</name></annotation> <name>UriInfo</name></type> <name>uri</name></decl></parameter>,
                                      <parameter><decl><type><annotation>@<name>PathParam</name><argument_list>(<argument><expr><literal type="string">"category"</literal></expr></argument>)</argument_list></annotation> <name>String</name></type> <name>category</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <return>return <expr><call><name>handleRequest</name><argument_list>(<argument><expr><name>headers</name></expr></argument>, <argument><expr><name>body</name></expr></argument>, <argument><expr><name>uri</name></expr></argument>, <argument><expr><name><name>Request</name><operator>.</operator><name>Type</name><operator>.</operator><name>DELETE</name></name></expr></argument>, <argument><expr><call><name>createResource</name><argument_list>(<argument><expr><name>category</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><type><name>ResourceInstance</name></type> <name>createResource</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>categoryName</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name><name>Resource</name><operator>.</operator><name>Type</name></name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>mapIds</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>mapIds</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>RootService</name></name></expr></argument>, <argument><expr><name>serviceName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>mapIds</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>RootServiceComponent</name></name></expr></argument>, <argument><expr><name>componentName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>mapIds</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>RootServiceComponentConfiguration</name></name></expr></argument>, <argument><expr><name>categoryName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return>return <expr><call><name>createResource</name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>RootServiceComponentConfiguration</name></name></expr></argument>, <argument><expr><name>mapIds</name></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name><name>RootServiceService</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name><name>RootServiceService</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">5afb7dc90c</literal><operator>..</operator><literal type="number">1ab2797b7c</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name><name>RootServiceService</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name><name>RootServiceService</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">297</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">297</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>RootServiceService</name> extends <name>BaseService</name> <block>{
     <return>return <expr><call><name>handleRequest</name><argument_list>(<argument><expr><name>headers</name></expr></argument>, <argument><expr><name>body</name></expr></argument>, <argument><expr><name>ui</name></expr></argument>, <argument><expr><name><name>Request</name><operator>.</operator><name>Type</name><operator>.</operator><name>GET</name></name></expr></argument>, <argument><expr><name>resource</name></expr></argument>)</argument_list></call></expr>;</return>
   }</block></expr></expr_stmt>
 
  <function><annotation>@<name>Path</name><argument_list>(<argument><expr><literal type="string">"{serviceName}/components/{componentName}/configurations"</literal></expr></argument>)</argument_list></annotation>
  <type><specifier>public</specifier> <name>RootServiceComponentConfigurationService</name></type> <name>getAmbariServerConfigurationHandler</name><parameter_list>(<parameter><decl><type><annotation>@<name>Context</name></annotation> <name><name>javax</name><operator>.</operator><name>ws</name><operator>.</operator><name>rs</name><operator>.</operator><name>core</name><operator>.</operator><name>Request</name></name></type> <name>request</name></decl></parameter>,
                                                                                      <parameter><decl><type><annotation>@<name>PathParam</name><argument_list>(<argument><expr><literal type="string">"serviceName"</literal></expr></argument>)</argument_list></annotation> <name>String</name></type> <name>serviceName</name></decl></parameter>,
                                                                                      <parameter><decl><type><annotation>@<name>PathParam</name><argument_list>(<argument><expr><literal type="string">"componentName"</literal></expr></argument>)</argument_list></annotation> <name>String</name></type> <name>componentName</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <return>return <expr><operator>new</operator> <call><name>RootServiceComponentConfigurationService</name><argument_list>(<argument><expr><name>serviceName</name></expr></argument>, <argument><expr><name>componentName</name></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

   <function><type><specifier>protected</specifier> <name>ResourceInstance</name></type> <name>createServiceResource</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>serviceName</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name><name>Resource</name><operator>.</operator><name>Type</name></name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>mapIds</name> <init>= <expr><call><name><name>Collections</name><operator>.</operator><name>singletonMap</name></name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>RootService</name></name></expr></argument>, <argument><expr><name>serviceName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <return>return <expr><call><name>createResource</name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>RootService</name></name></expr></argument>, <argument><expr><name>mapIds</name></expr></argument>)</argument_list></call></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name>ldap</name><operator>/</operator><name><name>AmbariConfiguration</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name>ldap</name><operator>/</operator><name><name>AmbariConfiguration</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>e9f0b1e1a4</name><operator>..</operator><literal type="number">7bac65ec83</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name>ldap</name><operator>/</operator><name><name>AmbariConfiguration</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name>ldap</name><operator>/</operator><name><name>AmbariConfiguration</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">26</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">26</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariConfiguration</name> <block>{
    <expr><operator>*</operator><operator>/</operator>
   <specifier>private</specifier> <name>String</name> <name>type</name></expr>;
 
  <expr><specifier>private</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name> <name>properties</name> <operator>=</operator> <literal type="null">null</literal></expr>;
  <expr><specifier>private</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name> <name>properties</name> <operator>=</operator> <literal type="null">null</literal></expr>;
 
   <expr><specifier>public</specifier> <name>String</name> <call><name>getType</name><argument_list>()</argument_list></call> <block>{
     <return>return <expr><name>type</name></expr>;</return>
@@ <operator>-</operator><literal type="number">36</literal><operator>,</operator><literal type="number">11</literal> <operator>+</operator><literal type="number">36</literal><operator>,</operator><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariConfiguration</name> <block>{
     <expr><name><name>this</name><operator>.</operator><name>type</name></name> <operator>=</operator> <name>type</name></expr>;
   }</block></block>
 
  <specifier>public</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name> <call><name>getProperties</name><argument_list>()</argument_list></call> <block>{
  <expr><specifier>public</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name> <call><name>getProperties</name><argument_list>()</argument_list></call> <block>{
     <return>return <expr><name>properties</name></expr>;</return></block></expr>
   }</block>
 
  <specifier>public</specifier> <name>void</name> <call><name>setProperties</name><argument_list>(<argument><expr><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name> <name>data</name></expr></argument>)</argument_list></call> <block>{
  <expr><specifier>public</specifier> <name>void</name> <call><name>setProperties</name><argument_list>(<argument><expr><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name> <name>data</name></expr></argument>)</argument_list></call> <block>{
     <expr><name><name>this</name><operator>.</operator><name>properties</name></name> <operator>=</operator> <name>data</name></expr>;
   }</block></expr>
 }</block>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name>ldap</name><operator>/</operator><name><name>LdapConfigurationRequest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name>ldap</name><operator>/</operator><name><name>LdapConfigurationRequest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">2e478c4329</literal><operator>..</operator><literal type="number">0e065e5f21</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name>ldap</name><operator>/</operator><name><name>LdapConfigurationRequest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name>ldap</name><operator>/</operator><name><name>LdapConfigurationRequest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">22</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">22</literal></expr>,<expr><literal type="number">7</literal> @@</expr> <import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>gson</name><operator>.</operator><name>annotations</name><operator>.</operator><name>SerializedName</name></name>;</import>
  <operator>*</operator><operator>/</operator>
 <specifier>public</specifier> <name>class</name> <name>LdapConfigurationRequest</name> <block>{
 
  @<expr><call><name>SerializedName</name><argument_list>(<argument><expr><literal type="string">"AmbariConfiguration"</literal></expr></argument>)</argument_list></call>
  @<call><name>SerializedName</name><argument_list>(<argument><expr><literal type="string">"Configuration"</literal></expr></argument>)</argument_list></call>
   <specifier>private</specifier> <name>AmbariConfiguration</name> <name>ambariConfiguration</name></expr>;
 
   @<expr><call><name>SerializedName</name><argument_list>(<argument><expr><literal type="string">"RequestInfo"</literal></expr></argument>)</argument_list></call>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name>ldap</name><operator>/</operator><name><name>LdapConfigurationService</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name>ldap</name><operator>/</operator><name><name>LdapConfigurationService</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">00c13f6cfa</literal><operator>..</operator><literal type="number">22784cd599</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name>ldap</name><operator>/</operator><name><name>LdapConfigurationService</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name>ldap</name><operator>/</operator><name><name>LdapConfigurationService</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">40</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">40</literal></expr>,<expr><literal type="number">7</literal> @@</expr> <import>import <name><name>javax</name><operator>.</operator><name>ws</name><operator>.</operator><name>rs</name><operator>.</operator><name>core</name><operator>.</operator><name>Response</name></name>;</import></block></block></expr></expr_stmt>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>annotations</name><operator>.</operator><name>ApiIgnore</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>StaticallyInject</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>api</name><operator>.</operator><name>services</name><operator>.</operator><name>AmbariConfigurationService</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>api</name><operator>.</operator><name>services</name><operator>.</operator><name>BaseService</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>api</name><operator>.</operator><name>services</name><operator>.</operator><name>Result</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>api</name><operator>.</operator><name>services</name><operator>.</operator><name>ResultImpl</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>api</name><operator>.</operator><name>services</name><operator>.</operator><name>ResultStatus</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">64</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">64</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>collect</name><operator>.</operator><name>Sets</name></name>;</import>
  <expr_stmt><expr><operator>*</operator><operator>/</operator>
 @<name>StaticallyInject</name>
 @<call><name>Path</name><argument_list>(<argument><expr><literal type="string">"/ldapconfigs/"</literal></expr></argument>)</argument_list></call>
<specifier>public</specifier> <name>class</name> <name>LdapConfigurationService</name> extends <name>AmbariConfigurationService</name> <block>{
<expr><specifier>public</specifier> <name>class</name> <name>LdapConfigurationService</name> extends <name>BaseService</name> <block>{
 
   <expr><specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name>Logger</name> <name>LOGGER</name> <operator>=</operator> <call><name><name>LoggerFactory</name><operator>.</operator><name>getLogger</name></name><argument_list>(<argument><expr><name><name>LdapConfigurationService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
 
@@ <expr><operator>-</operator><literal type="number">133</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">133</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>LdapConfigurationService</name> extends <name>AmbariConfigurationService</name> <block>{
   }</block>
 
   <specifier>private</specifier> <name>void</name> <call><name>setResult</name><argument_list>(<argument><expr><name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name> <name>groups</name></expr></argument>, <argument><expr><name>Result</name> <name>result</name></expr></argument>)</argument_list></call> <block>{
    <expr><name>Resource</name> <name>resource</name> <operator>=</operator> <operator>new</operator> <call><name>ResourceImpl</name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>AmbariConfiguration</name></name></expr></argument>)</argument_list></call></expr>;
    <expr><name>Resource</name> <name>resource</name> <operator>=</operator> <operator>new</operator> <call><name>ResourceImpl</name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>RootServiceComponentConfiguration</name></name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>resource</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"groups"</literal></expr></argument>, <argument><expr><name>groups</name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>result</name><operator>.</operator><name>getResultTree</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>addChild</name><argument_list>(<argument><expr><name>resource</name></expr></argument>, <argument><expr><literal type="string">"payload"</literal></expr></argument>)</argument_list></call></expr>;
   }</block>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name>stackadvisor</name><operator>/</operator><name>commands</name><operator>/</operator><name><name>StackAdvisorCommand</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name>stackadvisor</name><operator>/</operator><name>commands</name><operator>/</operator><name><name>StackAdvisorCommand</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">91edf867ae</literal><operator>..</operator><literal type="number">17591ec7d0</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name>stackadvisor</name><operator>/</operator><name>commands</name><operator>/</operator><name><name>StackAdvisorCommand</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name>stackadvisor</name><operator>/</operator><name>commands</name><operator>/</operator><name><name>StackAdvisorCommand</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">45</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">45</literal></expr>,<expr><literal type="number">8</literal> @@</expr> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>api</name><operator>.</operator><name>services</name><operator>.</operator><name>stackadvisor</name><operator>.</operator><name>StackAdvisorException</name></name>;</import></block></expr>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>api</name><operator>.</operator><name>services</name><operator>.</operator><name>stackadvisor</name><operator>.</operator><name>StackAdvisorRequest</name></name>;</import></block></expr></expr_stmt>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>api</name><operator>.</operator><name>services</name><operator>.</operator><name>stackadvisor</name><operator>.</operator><name>StackAdvisorResponse</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>api</name><operator>.</operator><name>services</name><operator>.</operator><name>stackadvisor</name><operator>.</operator><name>StackAdvisorRunner</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>RootComponent</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>RootService</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>Resource</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>ServiceInfo</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>utils</name><operator>.</operator><name>DateUtils</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">84</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">86</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name><name>StackAdvisorCommand</name><argument_list type="generic">&lt;<argument><name>T</name> <extends>extends <name>StackAdvisorResponse</name></extends></argument>&gt;</argument_list></name> <name>extend</name>
       <operator>+</operator> <literal type="string">",services/configurations/dependencies/StackConfigurationDependency/dependency_name"</literal>
       <operator>+</operator> <literal type="string">",services/configurations/dependencies/StackConfigurationDependency/dependency_type,services/configurations/StackConfigurations/type"</literal>
       <operator>+</operator> <literal type="string">"&amp;services/StackServices/service_name.in(%s)"</literal></expr>;</expr_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>GET_LDAP_CONFIG_URI</name> <init>= <expr><literal type="string">"/api/v1/configurations?AmbariConfiguration/type=ldap&amp;fields=AmbariConfiguration/*"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>GET_AMBARI_LDAP_CONFIG_URI</name> <init>= <expr><literal type="string">"/api/v1/services/AMBARI/components/AMBARI_SERVER/configurations"</literal> <operator>+</operator>
      <literal type="string">"?Configuration/category=ldap-configuration"</literal> <operator>+</operator>
      <literal type="string">"&amp;fields=Configuration/properties"</literal></expr></init></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>SERVICES_PROPERTY</name> <init>= <expr><literal type="string">"services"</literal></expr></init></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>SERVICES_COMPONENTS_PROPERTY</name> <init>= <expr><literal type="string">"components"</literal></expr></init></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>CONFIG_GROUPS_PROPERTY</name> <init>= <expr><literal type="string">"config-groups"</literal></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">96</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">100</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name><name>StackAdvisorCommand</name><argument_list type="generic">&lt;<argument><name>T</name> <extends>extends <name>StackAdvisorResponse</name></extends></argument>&gt;</argument_list></name> <name>extend</name>
   <specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>CHANGED_CONFIGURATIONS_PROPERTY</name> <operator>=</operator> <literal type="string">"changed-configurations"</literal></expr>;</expr_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>USER_CONTEXT_PROPERTY</name> <init>= <expr><literal type="string">"user-context"</literal></expr></init></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>AMBARI_SERVER_CONFIGURATIONS_PROPERTY</name> <init>= <expr><literal type="string">"ambari-server-properties"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>protected</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>LDAP_CONFIGURATION_PROPERTY</name> <init>= <expr><literal type="string">"ldap-configuration"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>LDAP_CONFIGURATION_PROPERTY</name> <init>= <expr><literal type="string">"ldap-configuration"</literal></expr></init></decl>;</decl_stmt>
 
   <decl_stmt><decl><type><specifier>private</specifier> <name>File</name></type> <name>recommendationsDir</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>recommendationsArtifactsLifetime</name></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">176</literal></expr><operator>,</operator><expr><literal type="number">17</literal> <operator>+</operator><literal type="number">180</literal></expr><operator>,</operator><expr><literal type="number">18</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name><name>StackAdvisorCommand</name><argument_list type="generic">&lt;<argument><name>T</name> <extends>extends <name>StackAdvisorResponse</name></extends></argument>&gt;</argument_list></name> <name>extend</name>
 
   <comment type="block" format="javadoc">/**
    * Retrieves the LDAP configuration if exists and adds it to services.json
   *
    * @param root The JSON document that will become service.json when passed to the stack advisor engine
    * @throws StackAdvisorException
    * @throws IOException
    */</comment>
  <specifier>protected</specifier> <name>void</name> <call><name>populateLdapConfiguration</name><argument_list>(<argument><expr><name>ObjectNode</name> <name>root</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>StackAdvisorException</name></expr></argument>, <argument><expr><name>IOException</name> <block>{
    <expr><name>Response</name> <name>response</name> <operator>=</operator> <call><name>handleRequest</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>LocalUriInfo</name><argument_list>(<argument><expr><name>GET_LDAP_CONFIG_URI</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>Request</name><operator>.</operator><name>Type</name><operator>.</operator><name>GET</name></name></expr></argument>,
   <argument><expr><name>void</name> <call><name>populateLdapConfiguration</name><argument_list>(<argument><expr><name>ObjectNode</name> <name>root</name></expr></argument>)</argument_list></call></expr></argument></argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>StackAdvisorException</name></expr></argument>, <argument><expr><name>IOException</name> <block>{
    <expr><name>Response</name> <name>response</name> <operator>=</operator> <call><name>handleRequest</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>LocalUriInfo</name><argument_list>(<argument><expr><name>GET_AMBARI_LDAP_CONFIG_URI</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>Request</name><operator>.</operator><name>Type</name><operator>.</operator><name>GET</name></name></expr></argument>,
         <argument><expr><call><name>createConfigResource</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
 
     <if_stmt><if>if <condition>(<expr><call><name><name>response</name><operator>.</operator><name>getStatus</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <call><name><name>Status</name><operator>.</operator><name>OK</name><operator>.</operator><name>getStatusCode</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
       <decl_stmt><decl><type><name>String</name></type> <name>message</name> <init>= <expr><call><name><name>String</name><operator>.</operator><name>format</name></name><argument_list>(
          <argument><expr><literal type="string">"Error occured during retrieving ldap configuration, status=%s, response=%s"</literal></expr></argument>,
          <argument><expr><literal type="string">"Error occurred during retrieving ldap configuration, status=%s, response=%s"</literal></expr></argument>,
           <argument><expr><call><name><name>response</name><operator>.</operator><name>getStatus</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><operator>(</operator><name>String</name><operator>)</operator> <call><name><name>response</name><operator>.</operator><name>getEntity</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><name>message</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <throw>throw <expr><operator>new</operator> <call><name>StackAdvisorException</name><argument_list>(<argument><expr><name>message</name></expr></argument>)</argument_list></call></expr>;</throw>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">198</literal></expr><operator>,</operator><expr><literal type="number">25</literal> <operator>+</operator><literal type="number">203</literal></expr><operator>,</operator><expr><literal type="number">28</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name><name>StackAdvisorCommand</name><argument_list type="generic">&lt;<argument><name>T</name> <extends>extends <name>StackAdvisorResponse</name></extends></argument>&gt;</argument_list></name> <name>extend</name></expr></expr_stmt>
     </block_content>}</block></if></if_stmt>
 
     <decl_stmt><decl><type><name>JsonNode</name></type> <name>ldapConfigRoot</name> <init>= <expr><call><name><name>mapper</name><operator>.</operator><name>readTree</name></name><argument_list>(<argument><expr><name>ldapConfigJSON</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>ArrayNode</name></type> <name>ldapConfigs</name> <init>= <expr><operator>(</operator><operator>(</operator><name>ArrayNode</name><operator>)</operator><call><name><name>ldapConfigRoot</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"items"</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>ArrayNode</name></type> <name>ldapConfigs</name> <init>= <expr><operator>(</operator><operator>(</operator><name>ArrayNode</name><operator>)</operator> <call><name><name>ldapConfigRoot</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"items"</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>int</name></type> <name>numConfigs</name> <init>= <expr><call><name><name>ldapConfigs</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <comment type="line">// Zero or one config may exist</comment>
    <switch>switch <condition>(<expr><name>numConfigs</name></expr>)</condition> <block>{<block_content>
      <case>case <expr><literal type="number">0</literal></expr>:</case>
        <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"No LDAP config is stored in the DB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <break>break;</break>
      <case>case <expr><literal type="number">1</literal></expr>:</case>
        <decl_stmt><decl><type><name>ArrayNode</name></type> <name>ldapConfigData</name> <init>= <expr><operator>(</operator><name>ArrayNode</name><operator>)</operator><call><name><name>ldapConfigs</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"AmbariConfiguration"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"data"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><call><name><name>ldapConfigData</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
          <throw>throw <expr><operator>new</operator> <call><name>StackAdvisorException</name><argument_list>(<argument><expr><literal type="string">"No configuration data for LDAP configuration."</literal></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></if></if_stmt>
        <if_stmt><if>if <condition>(<expr><call><name><name>ldapConfigData</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>
          <throw>throw <expr><operator>new</operator> <call><name>StackAdvisorException</name><argument_list>(<argument><expr><literal type="string">"Ambigous configuration data for LDAP configuration."</literal></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></if></if_stmt>
        <expr_stmt><expr><call><name><name>root</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>LDAP_CONFIGURATION_PROPERTY</name></expr></argument>, <argument><expr><call><name><name>ldapConfigData</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <break>break;</break>
      <default>default:</default>
        <throw>throw <expr><operator>new</operator> <call><name>StackAdvisorException</name><argument_list>(<argument><expr><call><name><name>String</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><literal type="string">"Multiple (%s) LDAP configs are found in the DB."</literal></expr></argument>, <argument><expr><name>numConfigs</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>

    <if_stmt><if>if <condition>(<expr><name>numConfigs</name> <operator>==</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>JsonNode</name></type> <name>ldapConfigItem</name> <init>= <expr><call><name><name>ldapConfigs</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>ldapConfigItem</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <throw>throw <expr><operator>new</operator> <call><name>StackAdvisorException</name><argument_list>(<argument><expr><literal type="string">"Unexpected JSON document encountered: missing data"</literal></expr></argument>)</argument_list></call></expr>;</throw>
      </block_content>}</block></if></if_stmt>

      <decl_stmt><decl><type><name>JsonNode</name></type> <name>ldapConfiguration</name> <init>= <expr><call><name><name>ldapConfigItem</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"Configuration"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>ldapConfiguration</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <throw>throw <expr><operator>new</operator> <call><name>StackAdvisorException</name><argument_list>(<argument><expr><literal type="string">"Unexpected JSON document encountered: missing the Configuration object"</literal></expr></argument>)</argument_list></call></expr>;</throw>
      </block_content>}</block></if></if_stmt>

      <decl_stmt><decl><type><name>JsonNode</name></type> <name>ldapConfigurationProperties</name> <init>= <expr><call><name><name>ldapConfiguration</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"properties"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>ldapConfigurationProperties</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <throw>throw <expr><operator>new</operator> <call><name>StackAdvisorException</name><argument_list>(<argument><expr><literal type="string">"Unexpected JSON document encountered: missing the Configuration/properties object"</literal></expr></argument>)</argument_list></call></expr>;</throw>
      </block_content>}</block></if></if_stmt>

      <expr_stmt><expr><call><name><name>root</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>LDAP_CONFIGURATION_PROPERTY</name></expr></argument>, <argument><expr><name>ldapConfigurationProperties</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>numConfigs</name> <operator>&gt;</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>StackAdvisorException</name><argument_list>(<argument><expr><call><name><name>String</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><literal type="string">"Multiple (%s) LDAP configs are found in the DB."</literal></expr></argument>, <argument><expr><name>numConfigs</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
     </block_content>}</block></if></if_stmt>
   </block_content>}</block></switch>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">486</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">494</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name><name>StackAdvisorCommand</name><argument_list type="generic">&lt;<argument><name>T</name> <extends>extends <name>StackAdvisorResponse</name></extends></argument>&gt;</argument_list></name> <name>extend</name></expr></expr_stmt>
     <return>return <expr><call><name>createResource</name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>Host</name></name></expr></argument>, <argument><expr><name>mapIds</name></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
 
  <function><type><specifier>protected</specifier> <name>ResourceInstance</name></type> <name>createConfigResource</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><call><name>createResource</name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>AmbariConfiguration</name></name></expr></argument>, <argument><expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  <function><type><specifier>private</specifier> <name>ResourceInstance</name></type> <name>createConfigResource</name><parameter_list>()</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name><name>Resource</name><operator>.</operator><name>Type</name></name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>mapIds</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>mapIds</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>RootService</name></name></expr></argument>, <argument><expr><call><name><name>RootService</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>mapIds</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>RootServiceComponent</name></name></expr></argument>, <argument><expr><call><name><name>RootComponent</name><operator>.</operator><name>AMBARI_SERVER</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return>return <expr><call><name>createResource</name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>RootServiceComponentConfiguration</name></name></expr></argument>, <argument><expr><name>mapIds</name></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
 
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>ControllerModule</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>ControllerModule</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">1425e1bd32</literal><operator>..</operator><name>ed7513ff56</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>ControllerModule</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>ControllerModule</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">63</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">63</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>configuration</name><operator>.</operator><name>Configuration</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>configuration</name><operator>.</operator><name>Configuration</name><operator>.</operator><name>ConnectionPoolType</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>configuration</name><operator>.</operator><name>Configuration</name><operator>.</operator><name>DatabaseType</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>internal</name><operator>.</operator><name>AlertTargetResourceProvider</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>internal</name><operator>.</operator><name>AmbariConfigurationResourceProvider</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>internal</name><operator>.</operator><name>ClusterStackVersionResourceProvider</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>internal</name><operator>.</operator><name>ComponentResourceProvider</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>internal</name><operator>.</operator><name>CredentialResourceProvider</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">73</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">72</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>internal</name><operator>.</operator><name>HostResourceProvider</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>internal</name><operator>.</operator><name>KerberosDescriptorResourceProvider</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>internal</name><operator>.</operator><name>MemberResourceProvider</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>internal</name><operator>.</operator><name>RepositoryVersionResourceProvider</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>internal</name><operator>.</operator><name>RootServiceComponentConfigurationResourceProvider</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>internal</name><operator>.</operator><name>ServiceResourceProvider</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>internal</name><operator>.</operator><name>UpgradeResourceProvider</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>internal</name><operator>.</operator><name>ViewInstanceResourceProvider</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">471</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">471</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>ControllerModule</name> extends <name>AbstractModule</name> <block>{
         <expr><operator>.</operator><call><name>implement</name><argument_list>(<argument><expr><name><name>ResourceProvider</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><call><name><name>Names</name><operator>.</operator><name>named</name></name><argument_list>(<argument><expr><literal type="string">"credential"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>CredentialResourceProvider</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call>
         <operator>.</operator><call><name>implement</name><argument_list>(<argument><expr><name><name>ResourceProvider</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><call><name><name>Names</name><operator>.</operator><name>named</name></name><argument_list>(<argument><expr><literal type="string">"kerberosDescriptor"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>KerberosDescriptorResourceProvider</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call>
         <operator>.</operator><call><name>implement</name><argument_list>(<argument><expr><name><name>ResourceProvider</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><call><name><name>Names</name><operator>.</operator><name>named</name></name><argument_list>(<argument><expr><literal type="string">"upgrade"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>UpgradeResourceProvider</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>implement</name><argument_list>(<argument><expr><name><name>ResourceProvider</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><call><name><name>Names</name><operator>.</operator><name>named</name></name><argument_list>(<argument><expr><literal type="string">"ambariConfiguration"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>AmbariConfigurationResourceProvider</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call>
         <operator>.</operator><call><name>implement</name><argument_list>(<argument><expr><name><name>ResourceProvider</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><call><name><name>Names</name><operator>.</operator><name>named</name></name><argument_list>(<argument><expr><literal type="string">"clusterStackVersion"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>ClusterStackVersionResourceProvider</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call>
         <operator>.</operator><call><name>implement</name><argument_list>(<argument><expr><name><name>ResourceProvider</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><call><name><name>Names</name><operator>.</operator><name>named</name></name><argument_list>(<argument><expr><literal type="string">"alertTarget"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>AlertTargetResourceProvider</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call>
         <operator>.</operator><call><name>implement</name><argument_list>(<argument><expr><name><name>ResourceProvider</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><call><name><name>Names</name><operator>.</operator><name>named</name></name><argument_list>(<argument><expr><literal type="string">"viewInstance"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>ViewInstanceResourceProvider</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>implement</name><argument_list>(<argument><expr><name><name>ResourceProvider</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><call><name><name>Names</name><operator>.</operator><name>named</name></name><argument_list>(<argument><expr><literal type="string">"rootServiceHostComponentConfiguration"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>RootServiceComponentConfigurationResourceProvider</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call>
         <operator>.</operator><call><name>build</name><argument_list>(<argument><expr><name><name>ResourceProviderFactory</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>)</block></expr>;</expr_stmt>
 
     <expr_stmt><expr><call><name>install</name><argument_list>(<argument><expr><operator>new</operator> <call><name>FactoryModuleBuilder</name><argument_list>()</argument_list></call><operator>.</operator><call><name>implement</name><argument_list>(
<argument><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>MaintenanceStateHelper</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>MaintenanceStateHelper</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>d9a585f630</name><operator>..</operator><literal type="number">1ffe841403</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>MaintenanceStateHelper</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>MaintenanceStateHelper</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">24</literal></expr></argument>,<argument><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">24</literal></expr></argument>,<argument><expr><literal type="number">6</literal> @@</expr></argument> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import></argument_list></call></expr></argument></argument_list></call></expr></expr_stmt>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>AmbariException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>HostNotFoundException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>RootServiceResponseFactory</name><operator>.</operator><name>Services</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>internal</name><operator>.</operator><name>RequestOperationLevel</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>internal</name><operator>.</operator><name>RequestResourceFilter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>Resource</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">265</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">264</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>MaintenanceStateHelper</name> <block>{
     }</block></expr></expr_stmt>
 
     <comment type="line">// the AMBARI service is not a real service; it's never in MM</comment>
    <if_stmt><if>if<condition>( <expr><call><name><name>StringUtils</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><call><name><name>Services</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>serviceName</name></expr></argument>)</argument_list></call></expr>)</condition><block>{<block_content>
    <if_stmt><if>if<condition>( <expr><call><name><name>StringUtils</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><call><name><name>RootService</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>serviceName</name></expr></argument>)</argument_list></call></expr>)</condition><block>{<block_content>
       <return>return <expr><name><name>MaintenanceState</name><operator>.</operator><name>OFF</name></name></expr>;</return>
     </block_content>}</block></if></if_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>ResourceProviderFactory</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>ResourceProviderFactory</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">711ae10f7e</literal><operator>..</operator><name>f6ca16bc69</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>ResourceProviderFactory</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>ResourceProviderFactory</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">68</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">68</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> interface <name>ResourceProviderFactory</name> <block>{
   @<expr><call><name>Named</name><argument_list>(<argument><expr><literal type="string">"upgrade"</literal></expr></argument>)</argument_list></call>
   <name>UpgradeResourceProvider</name> <call><name>getUpgradeResourceProvider</name><argument_list>(<argument><expr><name>AmbariManagementController</name> <name>managementController</name></expr></argument>)</argument_list></call></expr>;
 
  @<call><name>Named</name><argument_list>(<argument><expr><literal type="string">"ambariConfiguration"</literal></expr></argument>)</argument_list></call>
  <name>ResourceProvider</name> <call><name>getAmbariConfigurationResourceProvider</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
  <function_decl><annotation>@<name>Named</name><argument_list>(<argument><expr><literal type="string">"rootServiceHostComponentConfiguration"</literal></expr></argument>)</argument_list></annotation>
  <type><name>ResourceProvider</name></type> <name>getRootServiceHostComponentConfigurationResourceProvider</name><parameter_list>()</parameter_list>;</function_decl>
 
   <decl_stmt><decl><annotation>@<name>Named</name><argument_list>(<argument><expr><literal type="string">"clusterStackVersion"</literal></expr></argument>)</argument_list></annotation>
   <type><name>ClusterStackVersionResourceProvider</name></type> <name>getClusterStackVersionResourceProvider</name><argument_list>(<argument><expr><name>AmbariManagementController</name> <name>managementController</name></expr></argument>)</argument_list></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>RootComponent</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>RootComponent</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">0000000000..74cdfcf084</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>RootComponent</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">27</literal> @@</expr></expr_stmt>
<comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name></name>;</package>

<comment type="block" format="javadoc">/**
 * RootComponent is an enumeration of root-level components.
 */</comment>
<enum><specifier>public</specifier> enum <name>RootComponent</name> <block>{
  <decl><name>AMBARI_SERVER</name></decl>,
  <decl><name>AMBARI_AGENT</name></decl>
}</block></enum>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>RootService</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>RootService</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">0000000000..22f571dfc7</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>RootService</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">36</literal> @@</expr></expr_stmt>
<comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name></name>;</package>

<comment type="block" format="javadoc">/**
 * RootService is an enumeration of root-level services.
 */</comment>
<enum><specifier>public</specifier> enum <name>RootService</name> <block>{
  <decl><name>AMBARI</name><argument_list>(<argument><expr><call><name><name>RootComponent</name><operator>.</operator><name>values</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></decl>;

  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name><name>RootComponent</name><index>[]</index></name></type> <name>components</name></decl>;</decl_stmt>

  <constructor><name>RootService</name><parameter_list>(<parameter><decl><type><name><name>RootComponent</name><index>[]</index></name></type> <name>components</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>components</name></name> <operator>=</operator> <name>components</name></expr>;</expr_stmt>
  </block_content>}</block></constructor>

  <function><type><specifier>public</specifier> <name><name>RootComponent</name><index>[]</index></name></type> <name>getComponents</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>components</name></expr>;</return>
  </block_content>}</block></function>
}</block></enum>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>RootServiceResponseFactory</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>RootServiceResponseFactory</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>ad9ed202dc</name><operator>..</operator><literal type="number">63d41fd7cf</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>RootServiceResponseFactory</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>RootServiceResponseFactory</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">62</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">62</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>RootServiceResponseFactory</name> extends
       <name>serviceName</name> <operator>=</operator> <call><name><name>request</name><operator>.</operator><name>getServiceName</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
     <if_stmt><if>if <condition>(<expr><name>serviceName</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>Services</name></type> <name>service</name></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>RootService</name></type> <name>service</name></decl>;</decl_stmt>
       <try>try <block>{<block_content>
        <expr_stmt><expr><name>service</name> <operator>=</operator> <call><name><name>Services</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><name>serviceName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>service</name> <operator>=</operator> <call><name><name>RootService</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><name>serviceName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block>
       <catch>catch <parameter_list>(<parameter><decl><type><name>IllegalArgumentException</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <throw>throw <expr><operator>new</operator> <call><name>ObjectNotFoundException</name><argument_list>(<argument><expr><literal type="string">"Root service name: "</literal> <operator>+</operator> <name>serviceName</name></expr></argument>)</argument_list></call></expr>;</throw>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">74</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">74</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>RootServiceResponseFactory</name> extends</expr></expr_stmt>
     </block_content>}</block></catch></try> <if_stmt><else>else <block>{<block_content>
       <expr_stmt><expr><name>response</name> <operator>=</operator> <operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       
      <for>for <control>(<init><decl><type><name>Services</name></type> <name>service</name><range>: <expr><call><name><name>Services</name><operator>.</operator><name>values</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control><block type="pseudo"><block_content>    
      <for>for <control>(<init><decl><type><name>RootService</name></type> <name>service</name><range>: <expr><call><name><name>RootService</name><operator>.</operator><name>values</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control><block type="pseudo"><block_content>
         <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>RootServiceResponse</name><argument_list>(<argument><expr><call><name><name>service</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></for>
     </block_content>}</block></else></if_stmt>    
     <return>return <expr><name>response</name></expr>;</return>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">87</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">87</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>RootServiceResponseFactory</name> extends
 
     <name>String</name> <name>serviceName</name> <operator>=</operator> <call><name><name>request</name><operator>.</operator><name>getServiceName</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>String</name></type> <name>componentName</name> <init>= <expr><call><name><name>request</name><operator>.</operator><name>getComponentName</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Services</name></type> <name>service</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>RootService</name></type> <name>service</name></decl>;</decl_stmt>
 
     <try>try <block>{<block_content>
      <expr_stmt><expr><name>service</name> <operator>=</operator> <call><name><name>Services</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><name>serviceName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>service</name> <operator>=</operator> <call><name><name>RootService</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><name>serviceName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block>
     <catch>catch <parameter_list>(<parameter><decl><type><name>IllegalArgumentException</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
       <throw>throw <expr><operator>new</operator> <call><name>ObjectNotFoundException</name><argument_list>(<argument><expr><literal type="string">"Root service name: "</literal> <operator>+</operator> <name>serviceName</name></expr></argument>)</argument_list></call></expr>;</throw>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">100</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">100</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>RootServiceResponseFactory</name> extends</expr></expr_stmt>
     </block_content>}</block></catch></try>
     
     <if_stmt><if>if <condition>(<expr><name>componentName</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>Components</name></type> <name>component</name></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>RootComponent</name></type> <name>component</name></decl>;</decl_stmt>
       <try>try <block>{<block_content>
        <expr_stmt><expr><name>component</name> <operator>=</operator> <call><name><name>Components</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><name>componentName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>component</name> <operator>=</operator> <call><name><name>RootComponent</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><name>componentName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>ArrayUtils</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><call><name><name>service</name><operator>.</operator><name>getComponents</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>component</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
           <throw>throw <expr><operator>new</operator> <call><name>ObjectNotFoundException</name><argument_list>(<argument><expr><literal type="string">"No component name: "</literal> <operator>+</operator> <name>componentName</name> <operator>+</operator> <literal type="string">"in service: "</literal> <operator>+</operator> <name>serviceName</name></expr></argument>)</argument_list></call></expr>;</throw></block_content></block></if></if_stmt>
       </block_content>}</block></try>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">114</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">114</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>RootServiceResponseFactory</name> extends
                                        <call><name>getComponentProperties</name><argument_list>(<argument><expr><name>componentName</name></expr></argument>)</argument_list></call></expr></expr_stmt>)</block_content></block></if></if_stmt>)</block_content></block><empty_stmt>;</empty_stmt></if></if_stmt>
     </block_content>}</block></if> <else>else <block>{<block_content>
     
      <for>for <control>(<init><decl><type><name>Components</name></type> <name>component</name><range>: <expr><call><name><name>service</name><operator>.</operator><name>getComponents</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control><block type="pseudo"><block_content>    
      <for>for <control>(<init><decl><type><name>RootComponent</name></type> <name>component</name><range>: <expr><call><name><name>service</name><operator>.</operator><name>getComponents</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control><block type="pseudo"><block_content>
         <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>RootServiceComponentResponse</name><argument_list>(<argument><expr><name>serviceName</name></expr></argument>, <argument><expr><call><name><name>component</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>,
                      <argument><expr><call><name>getComponentVersion</name><argument_list>(<argument><expr><call><name><name>component</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></argument>,
                      <argument><expr><call><name>getComponentProperties</name><argument_list>(<argument><expr><call><name><name>component</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></for>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">123</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">123</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>RootServiceResponseFactory</name> extends</expr></expr_stmt>
   </block_content>}</block></else></if_stmt>
 
   <function><type><specifier>private</specifier> <name>String</name></type> <name>getComponentVersion</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>componentName</name></decl></parameter>, <parameter><decl><type><name>HostResponse</name></type> <name>host</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>Components</name></type> <name>component</name> <init>= <expr><call><name><name>Components</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><name>componentName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>RootComponent</name></type> <name>component</name> <init>= <expr><call><name><name>RootComponent</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><name>componentName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>String</name></type> <name>componentVersion</name></decl>;</decl_stmt>
       
     <switch>switch <condition>(<expr><name>component</name></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">150</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">150</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>RootServiceResponseFactory</name> extends
     
     <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name> <name>response</name></expr>;</expr_stmt>
     <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>propertiesToHideInResponse</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Components</name></type> <name>component</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>RootComponent</name></type> <name>component</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
 
     <if_stmt><if>if <condition>(<expr><name>componentName</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>component</name> <operator>=</operator> <call><name><name>Components</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><name>componentName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>component</name> <operator>=</operator> <call><name><name>RootComponent</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><name>componentName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       
       <switch>switch <condition>(<expr><name>component</name></expr>)</condition> <block>{<block_content>
       <case>case <expr><name>AMBARI_SERVER</name></expr>:</case>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">176</literal></expr><operator>,</operator><expr><literal type="number">24</literal> <operator>+</operator><literal type="number">176</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>RootServiceResponseFactory</name> extends</expr></expr_stmt>
     <return>return <expr><name>response</name></expr>;</return>
   </block_content>}</block></switch>
 
  
  <enum><specifier>public</specifier> enum <name>Services</name> <block>{
    <decl><name>AMBARI</name><argument_list>(<argument><expr><call><name><name>Components</name><operator>.</operator><name>values</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></decl>;
    <decl_stmt><decl><type><specifier>private</specifier> <name><name>Components</name><index>[]</index></name></type> <name>components</name></decl>;</decl_stmt>

    <constructor><name>Services</name><parameter_list>(<parameter><decl><type><name><name>Components</name><index>[]</index></name></type> <name>components</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>components</name></name> <operator>=</operator> <name>components</name></expr>;</expr_stmt>
    </block_content>}</block></constructor>

    <function><type><specifier>public</specifier> <name><name>Components</name><index>[]</index></name></type> <name>getComponents</name><parameter_list>()</parameter_list> <block>{<block_content>
      <return>return <expr><name>components</name></expr>;</return>
    </block_content>}</block></function>
  }</block></enum>
  
  <enum><specifier>public</specifier> enum <name>Components</name> <block>{
    <decl><name>AMBARI_SERVER</name></decl>, <decl><name>AMBARI_AGENT</name></decl>
  }</block></enum>

   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>public</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>RootServiceHostComponentResponse</name></argument>&gt;</argument_list></name></type> <name>getRootServiceHostComponent</name><parameter_list>(<parameter><decl><type><name>RootServiceHostComponentRequest</name></type> <name>request</name></decl></parameter>, <parameter><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>HostResponse</name></argument>&gt;</argument_list></name></type> <name>hosts</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>AmbariException</name></expr></argument></throws> <block>{<block_content>
     <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>RootServiceHostComponentResponse</name></argument>&gt;</argument_list></name></type> <name>response</name> <init>= <expr><operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">208</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">190</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>RootServiceResponseFactory</name> extends
       <name><name>Set</name><argument_list type="generic">&lt;<argument><name>HostResponse</name></argument>&gt;</argument_list></name> <name>filteredHosts</name> <operator>=</operator> <operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>(<argument><expr><name>hosts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       
       <comment type="line">//Make some filtering of hosts if need</comment>
      <if_stmt><if>if <condition>(<expr><call><name><name>component</name><operator>.</operator><name>getComponentName</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><call><name><name>Components</name><operator>.</operator><name>AMBARI_SERVER</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><call><name><name>component</name><operator>.</operator><name>getComponentName</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><call><name><name>RootComponent</name><operator>.</operator><name>AMBARI_SERVER</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
         <expr_stmt><expr><call><name><name>CollectionUtils</name><operator>.</operator><name>filter</name></name><argument_list>(<argument><expr><name>filteredHosts</name></expr></argument>, <argument><expr><operator>new</operator> <class><super><name>Predicate</name></super><argument_list>()</argument_list> <block>{
           <function><annotation>@<name>Override</name></annotation>
           <type><specifier>public</specifier> <name>boolean</name></type> <name>evaluate</name><parameter_list>(<parameter><decl><type><name>Object</name></type> <name>arg0</name></decl></parameter>)</parameter_list> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">220</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">202</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>RootServiceResponseFactory</name> extends</expr></expr_stmt>
       
       <for>for <control>(<init><decl><type><name>HostResponse</name></type> <name>host</name> <range>: <expr><name>filteredHosts</name></expr></range></decl></init>)</control> <block>{<block_content>
         <decl_stmt><decl><type><name>String</name></type> <name>state</name></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><call><name><name>component</name><operator>.</operator><name>getComponentName</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><call><name><name>Components</name><operator>.</operator><name>AMBARI_SERVER</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><call><name><name>component</name><operator>.</operator><name>getComponentName</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><call><name><name>RootComponent</name><operator>.</operator><name>AMBARI_SERVER</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
           <expr_stmt><expr><name>state</name> <operator>=</operator> <name>RUNNING_STATE</name></expr>;</expr_stmt>
         </block_content>}</block></if> <else>else <block>{<block_content>
           <expr_stmt><expr><name>state</name> <operator>=</operator> <call><name><name>host</name><operator>.</operator><name>getHostState</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>AbstractControllerResourceProvider</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>AbstractControllerResourceProvider</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">1dc0841d19</literal><operator>..</operator><name>cc2548cc61</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>AbstractControllerResourceProvider</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>AbstractControllerResourceProvider</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">206</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">206</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> class <name>AbstractControllerResourceProvider</name> extends <name>AbstractAuthori</name></expr></expr_stmt>
         <return>return <expr><operator>new</operator> <call><name>RootServiceResourceProvider</name><argument_list>(<argument><expr><name>propertyIds</name></expr></argument>, <argument><expr><name>keyPropertyIds</name></expr></argument>, <argument><expr><name>managementController</name></expr></argument>)</argument_list></call></expr>;</return>
       <case>case <expr><name>RootServiceComponent</name></expr>:</case>
         <return>return <expr><operator>new</operator> <call><name>RootServiceComponentResourceProvider</name><argument_list>(<argument><expr><name>propertyIds</name></expr></argument>, <argument><expr><name>keyPropertyIds</name></expr></argument>, <argument><expr><name>managementController</name></expr></argument>)</argument_list></call></expr>;</return>
      <case>case <expr><name>RootServiceComponentConfiguration</name></expr>:</case>
        <return>return <expr><call><name><name>resourceProviderFactory</name><operator>.</operator><name>getRootServiceHostComponentConfigurationResourceProvider</name></name><argument_list>()</argument_list></call></expr>;</return>
       <case>case <expr><name>RootServiceHostComponent</name></expr>:</case>
         <return>return <expr><operator>new</operator> <call><name>RootServiceHostComponentResourceProvider</name><argument_list>(<argument><expr><name>propertyIds</name></expr></argument>, <argument><expr><name>keyPropertyIds</name></expr></argument>, <argument><expr><name>managementController</name></expr></argument>)</argument_list></call></expr>;</return>
       <case>case <expr><name>ConfigGroup</name></expr>:</case>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">254</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">256</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> class <name>AbstractControllerResourceProvider</name> extends <name>AbstractAuthori</name></expr></expr_stmt>
         <return>return <expr><operator>new</operator> <call><name>ClusterKerberosDescriptorResourceProvider</name><argument_list>(<argument><expr><name>managementController</name></expr></argument>)</argument_list></call></expr>;</return>
       <case>case <expr><name>LoggingQuery</name></expr>:</case>
         <return>return <expr><operator>new</operator> <call><name>LoggingResourceProvider</name><argument_list>(<argument><expr><name>propertyIds</name></expr></argument>, <argument><expr><name>keyPropertyIds</name></expr></argument>, <argument><expr><name>managementController</name></expr></argument>)</argument_list></call></expr>;</return>
      <case>case <expr><name>AmbariConfiguration</name></expr>:</case>
        <return>return <expr><call><name><name>resourceProviderFactory</name><operator>.</operator><name>getAmbariConfigurationResourceProvider</name></name><argument_list>()</argument_list></call></expr>;</return>
       <case>case <expr><name>AlertTarget</name></expr>:</case>
         <return>return <expr><call><name><name>resourceProviderFactory</name><operator>.</operator><name>getAlertTargetResourceProvider</name></name><argument_list>()</argument_list></call></expr>;</return>
       <case>case <expr><name>ViewInstance</name></expr>:</case>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>AmbariConfigurationResourceProvider</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>AmbariConfigurationResourceProvider</name><operator>.</operator><name>java</name></name>
<name>deleted</name> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <name>a24400dffd</name><operator>..</operator><literal type="number">0000000000</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>AmbariConfigurationResourceProvider</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
@@ <operator>-</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">302</literal> <operator>+</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> @@</expr></expr_stmt>
<comment type="block">/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>internal</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>EnumSet</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>TreeMap</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>AmbariException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>NoSuchParentResourceException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>NoSuchResourceException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>Predicate</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>Request</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>RequestStatus</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>Resource</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>ResourceAlreadyExistsException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>SystemException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>UnsupportedPropertyException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>utilities</name><operator>.</operator><name>PredicateHelper</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>utilities</name><operator>.</operator><name>PropertyHelper</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>events</name><operator>.</operator><name>AmbariConfigurationChangedEvent</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>events</name><operator>.</operator><name>publishers</name><operator>.</operator><name>AmbariEventPublisher</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>dao</name><operator>.</operator><name>AmbariConfigurationDAO</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>AmbariConfigurationEntity</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>security</name><operator>.</operator><name>authorization</name><operator>.</operator><name>RoleAuthorization</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>collections</name><operator>.</operator><name>CollectionUtils</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>lang</name><operator>.</operator><name>StringUtils</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>Inject</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Resource provider for AmbariConfiguration resources.
 */</comment>
<class><specifier>public</specifier> class <name>AmbariConfigurationResourceProvider</name> <super_list><extends>extends <super><name>AbstractAuthorizedResourceProvider</name></super></extends></super_list> <block>{

  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>Logger</name></type> <name>LOGGER</name> <init>= <expr><call><name><name>LoggerFactory</name><operator>.</operator><name>getLogger</name></name><argument_list>(<argument><expr><name><name>AmbariConfigurationResourceProvider</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><type><specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>AMBARI_CONFIGURATION_CATEGORY_PROPERTY_ID</name> <init>= <expr><call><name><name>PropertyHelper</name><operator>.</operator><name>getPropertyId</name></name><argument_list>(<argument><expr><literal type="string">"AmbariConfiguration"</literal></expr></argument>, <argument><expr><literal type="string">"category"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>AMBARI_CONFIGURATION_PROPERTIES_PROPERTY_ID</name> <init>= <expr><call><name><name>PropertyHelper</name><operator>.</operator><name>getPropertyId</name></name><argument_list>(<argument><expr><literal type="string">"AmbariConfiguration"</literal></expr></argument>, <argument><expr><literal type="string">"properties"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>PROPERTIES</name> <init>= <expr><call><name><name>Collections</name><operator>.</operator><name>unmodifiableSet</name></name><argument_list>(
      <argument><expr><operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>(<argument><expr><call><name><name>Arrays</name><operator>.</operator><name>asList</name></name><argument_list>(
          <argument><expr><name>AMBARI_CONFIGURATION_CATEGORY_PROPERTY_ID</name></expr></argument>,
          <argument><expr><name>AMBARI_CONFIGURATION_PROPERTIES_PROPERTY_ID</name></expr></argument>)</argument_list></call></expr></argument>
      )</argument_list></call></expr></argument>
  )</argument_list></call></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name><name>Resource</name><operator>.</operator><name>Type</name></name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>PK_PROPERTY_MAP</name> <init>= <expr><call><name><name>Collections</name><operator>.</operator><name>unmodifiableMap</name></name><argument_list>(
      <argument><expr><call><name><name>Collections</name><operator>.</operator><name>singletonMap</name></name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>AmbariConfiguration</name></name></expr></argument>, <argument><expr><name>AMBARI_CONFIGURATION_CATEGORY_PROPERTY_ID</name></expr></argument>)</argument_list></call></expr></argument>
  )</argument_list></call></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>PK_PROPERTY_IDS</name> <init>= <expr><call><name><name>Collections</name><operator>.</operator><name>unmodifiableSet</name></name><argument_list>(
      <argument><expr><operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>(<argument><expr><call><name><name>PK_PROPERTY_MAP</name><operator>.</operator><name>values</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>
  )</argument_list></call></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><annotation>@<name>Inject</name></annotation>
  <type><specifier>private</specifier> <name>AmbariConfigurationDAO</name></type> <name>ambariConfigurationDAO</name></decl>;</decl_stmt>

  <decl_stmt><decl><annotation>@<name>Inject</name></annotation>
  <type><specifier>private</specifier> <name>AmbariEventPublisher</name></type> <name>publisher</name></decl>;</decl_stmt>

  <constructor><specifier>public</specifier> <name>AmbariConfigurationResourceProvider</name><parameter_list>()</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>PROPERTIES</name></expr></argument>, <argument><expr><name>PK_PROPERTY_MAP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>RoleAuthorization</name></argument>&gt;</argument_list></name></type> <name>authorizations</name> <init>= <expr><call><name><name>EnumSet</name><operator>.</operator><name>of</name></name><argument_list>(<argument><expr><name><name>RoleAuthorization</name><operator>.</operator><name>AMBARI_MANAGE_CONFIGURATION</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>setRequiredCreateAuthorizations</name><argument_list>(<argument><expr><name>authorizations</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>setRequiredDeleteAuthorizations</name><argument_list>(<argument><expr><name>authorizations</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>setRequiredUpdateAuthorizations</name><argument_list>(<argument><expr><name>authorizations</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>setRequiredGetAuthorizations</name><argument_list>(<argument><expr><name>authorizations</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></constructor>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>protected</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>getPKPropertyIds</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>PK_PROPERTY_IDS</name></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>RequestStatus</name></type> <name>createResourcesAuthorized</name><parameter_list>(<parameter><decl><type><name>Request</name></type> <name>request</name></decl></parameter>)</parameter_list>
      <throws>throws <argument><expr><name>SystemException</name></expr></argument>, <argument><expr><name>UnsupportedPropertyException</name></expr></argument>, <argument><expr><name>ResourceAlreadyExistsException</name></expr></argument>, <argument><expr><name>NoSuchParentResourceException</name></expr></argument></throws> <block>{<block_content>

    <expr_stmt><expr><call><name>createOrAddProperties</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><call><name><name>request</name><operator>.</operator><name>getProperties</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return>return <expr><call><name>getRequestStatus</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>protected</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>Resource</name></argument>&gt;</argument_list></name></type> <name>getResourcesAuthorized</name><parameter_list>(<parameter><decl><type><name>Request</name></type> <name>request</name></decl></parameter>, <parameter><decl><type><name>Predicate</name></type> <name>predicate</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>SystemException</name></expr></argument>,
      <argument><expr><name>UnsupportedPropertyException</name></expr></argument>, <argument><expr><name>NoSuchResourceException</name></expr></argument>, <argument><expr><name>NoSuchParentResourceException</name></expr></argument></throws> <block>{<block_content>

    <return>return <expr><call><name>getResources</name><argument_list>(<argument><expr><operator>new</operator> <class><super><name><name>Command</name><argument_list type="generic">&lt;<argument><name><name>Set</name><argument_list type="generic">&lt;<argument><name>Resource</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{
      <function><annotation>@<name>Override</name></annotation>
      <type><specifier>public</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>Resource</name></argument>&gt;</argument_list></name></type> <name>invoke</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>AmbariException</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>Resource</name></argument>&gt;</argument_list></name></type> <name>resources</name> <init>= <expr><operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>requestedIds</name> <init>= <expr><call><name>getRequestPropertyIds</name><argument_list>(<argument><expr><name>request</name></expr></argument>, <argument><expr><name>predicate</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt><if>if <condition>(<expr><call><name><name>CollectionUtils</name><operator>.</operator><name>isEmpty</name></name><argument_list>(<argument><expr><name>requestedIds</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><name>requestedIds</name> <operator>=</operator> <name>PROPERTIES</name></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>

        <if_stmt><if>if <condition>(<expr><name>predicate</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
          <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>Resource</name></argument>&gt;</argument_list></name></type> <name>_resources</name> <init>= <expr><call><name>getAmbariConfigurationResources</name><argument_list>(<argument><expr><name>requestedIds</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>CollectionUtils</name><operator>.</operator><name>isEmpty</name></name><argument_list>(<argument><expr><name>_resources</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>resources</name><operator>.</operator><name>addAll</name></name><argument_list>(<argument><expr><name>_resources</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          </block_content>}</block></if></if_stmt>
        </block_content>}</block></if> <else>else <block>{<block_content>
          <for>for <control>(<init><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>propertyMap</name> <range>: <expr><call><name>getPropertyMaps</name><argument_list>(<argument><expr><name>predicate</name></expr></argument>)</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
            <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>Resource</name></argument>&gt;</argument_list></name></type> <name>_resources</name> <init>= <expr><call><name>getAmbariConfigurationResources</name><argument_list>(<argument><expr><name>requestedIds</name></expr></argument>, <argument><expr><name>propertyMap</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>CollectionUtils</name><operator>.</operator><name>isEmpty</name></name><argument_list>(<argument><expr><name>_resources</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
              <expr_stmt><expr><call><name><name>resources</name><operator>.</operator><name>addAll</name></name><argument_list>(<argument><expr><name>_resources</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
          </block_content>}</block></for>
        </block_content>}</block></else></if_stmt>

        <return>return <expr><name>resources</name></expr>;</return>
      </block_content>}</block></function>
    }</block></class></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>


  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>protected</specifier> <name>RequestStatus</name></type> <name>deleteResourcesAuthorized</name><parameter_list>(<parameter><decl><type><name>Request</name></type> <name>request</name></decl></parameter>, <parameter><decl><type><name>Predicate</name></type> <name>predicate</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>SystemException</name></expr></argument>,
      <argument><expr><name>UnsupportedPropertyException</name></expr></argument>, <argument><expr><name>NoSuchResourceException</name></expr></argument>, <argument><expr><name>NoSuchParentResourceException</name></expr></argument></throws> <block>{<block_content>

    <decl_stmt><decl><type><name>String</name></type> <name>categoryName</name> <init>= <expr><operator>(</operator><name>String</name><operator>)</operator> <call><name><name>PredicateHelper</name><operator>.</operator><name>getProperties</name></name><argument_list>(<argument><expr><name>predicate</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name>AMBARI_CONFIGURATION_CATEGORY_PROPERTY_ID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt><if>if <condition>(<expr><literal type="null">null</literal> <operator>==</operator> <name>categoryName</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>LOGGER</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"No resource id provided in the request"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <else>else <block>{<block_content>
      <expr_stmt><expr><call><name><name>LOGGER</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"Deleting Ambari configuration with id: {}"</literal></expr></argument>, <argument><expr><name>categoryName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <try>try <block>{<block_content>
        <expr_stmt><expr><call><name><name>ambariConfigurationDAO</name><operator>.</operator><name>removeByCategory</name></name><argument_list>(<argument><expr><name>categoryName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IllegalStateException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <throw>throw <expr><operator>new</operator> <call><name>NoSuchResourceException</name><argument_list>(<argument><expr><call><name><name>e</name><operator>.</operator><name>getMessage</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
      </block_content>}</block></catch></try>
    </block_content>}</block></else></if_stmt>

    <comment type="line">// notify subscribers about the configuration changes</comment>
    <expr_stmt><expr><call><name><name>publisher</name><operator>.</operator><name>publish</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>AmbariConfigurationChangedEvent</name><argument_list>(<argument><expr><name>categoryName</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><call><name>getRequestStatus</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>protected</specifier> <name>RequestStatus</name></type> <name>updateResourcesAuthorized</name><parameter_list>(<parameter><decl><type><name>Request</name></type> <name>request</name></decl></parameter>, <parameter><decl><type><name>Predicate</name></type> <name>predicate</name></decl></parameter>)</parameter_list>
      <throws>throws <argument><expr><name>SystemException</name></expr></argument>, <argument><expr><name>UnsupportedPropertyException</name></expr></argument>, <argument><expr><name>NoSuchResourceException</name></expr></argument>, <argument><expr><name>NoSuchParentResourceException</name></expr></argument></throws> <block>{<block_content>

    <decl_stmt><decl><type><name>String</name></type> <name>categoryName</name> <init>= <expr><operator>(</operator><name>String</name><operator>)</operator> <call><name><name>PredicateHelper</name><operator>.</operator><name>getProperties</name></name><argument_list>(<argument><expr><name>predicate</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name>AMBARI_CONFIGURATION_CATEGORY_PROPERTY_ID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>createOrAddProperties</name><argument_list>(<argument><expr><name>categoryName</name></expr></argument>, <argument><expr><call><name><name>request</name><operator>.</operator><name>getProperties</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return>return <expr><call><name>getRequestStatus</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <comment type="block" format="javadoc">/**
   * Retrieves groups of properties from the request data and create or updates them as needed.
   * &lt;p&gt;
   * Each group of properties is expected to have a category (&lt;code&gt;AmbariConfiguration/category&lt;/code&gt;)
   * value and one or more property (&lt;code&gt;AmbariConfiguration/properties/property.name&lt;/code&gt;) values.
   * If a category cannot be determined from the propery set, the default category value (passed in)
   * is used.  If a default category is set, it is assumed that it was parsed from the request predicate
   * (if availabe).
   *
   * @param defaultCategoryName            the default category to use if needed
   * @param requestProperties              a collection of property maps parsed from the request
   * @param removePropertiesIfNotSpecified &lt;code&gt;true&lt;/code&gt; to remove existing properties that have not been specifed in the request; &lt;code&gt;false&lt;/code&gt; append or update the existing set of properties with values from the request
   * @throws SystemException if an error occurs saving the configuration data
   */</comment>
  <function><type><specifier>private</specifier> <name>void</name></type> <name>createOrAddProperties</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>defaultCategoryName</name></decl></parameter>, <parameter><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>requestProperties</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>removePropertiesIfNotSpecified</name></decl></parameter>)</parameter_list>
      <throws>throws <argument><expr><name>SystemException</name></expr></argument></throws> <block>{<block_content>
    <comment type="line">// set of resource properties (each entry in the set belongs to a different resource)</comment>
    <if_stmt><if>if <condition>(<expr><name>requestProperties</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <for>for <control>(<init><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>resourceProperties</name> <range>: <expr><name>requestProperties</name></expr></range></decl></init>)</control> <block>{<block_content>
        <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>entityMap</name> <init>= <expr><call><name>parseProperties</name><argument_list>(<argument><expr><name>defaultCategoryName</name></expr></argument>, <argument><expr><name>resourceProperties</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt><if>if <condition>(<expr><name>entityMap</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
          <for>for <control>(<init><decl><type><name><name>Map</name><operator>.</operator><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></name></type> <name>entry</name> <range>: <expr><call><name><name>entityMap</name><operator>.</operator><name>entrySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
            <decl_stmt><decl><type><name>String</name></type> <name>categoryName</name> <init>= <expr><call><name><name>entry</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt><if>if <condition>(<expr><call><name><name>ambariConfigurationDAO</name><operator>.</operator><name>reconcileCategory</name></name><argument_list>(<argument><expr><name>categoryName</name></expr></argument>, <argument><expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>removePropertiesIfNotSpecified</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
              <comment type="line">// notify subscribers about the configuration changes</comment>
              <expr_stmt><expr><call><name><name>publisher</name><operator>.</operator><name>publish</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>AmbariConfigurationChangedEvent</name><argument_list>(<argument><expr><name>categoryName</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
          </block_content>}</block></for>
        </block_content>}</block></if></if_stmt>
      </block_content>}</block></for>
    </block_content>}</block></if></if_stmt>
  </block_content>}</block></function>

  <function><type><specifier>private</specifier> <name>Resource</name></type> <name>toResource</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>categoryName</name></decl></parameter>, <parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>properties</name></decl></parameter>, <parameter><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>requestedIds</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>Resource</name></type> <name>resource</name> <init>= <expr><operator>new</operator> <call><name>ResourceImpl</name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>AmbariConfiguration</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>setResourceProperty</name><argument_list>(<argument><expr><name>resource</name></expr></argument>, <argument><expr><name>AMBARI_CONFIGURATION_CATEGORY_PROPERTY_ID</name></expr></argument>, <argument><expr><name>categoryName</name></expr></argument>, <argument><expr><name>requestedIds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>setResourceProperty</name><argument_list>(<argument><expr><name>resource</name></expr></argument>, <argument><expr><name>AMBARI_CONFIGURATION_PROPERTIES_PROPERTY_ID</name></expr></argument>, <argument><expr><name>properties</name></expr></argument>, <argument><expr><name>requestedIds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name>resource</name></expr>;</return>
  </block_content>}</block></function>

  <comment type="block" format="javadoc">/**
   * Parse the property map from a request into a map of category names to maps of property names and values.
   *
   * @param defaultCategoryName the default category name to use if one is not found in the map of properties
   * @param resourceProperties  a map of properties from a request item
   * @return a map of category names to maps of name/value pairs
   * @throws SystemException if an issue with the data is determined
   */</comment>
  <function><type><specifier>private</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>parseProperties</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>defaultCategoryName</name></decl></parameter>, <parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>resourceProperties</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>SystemException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>String</name></type> <name>categoryName</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>properties</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <for>for <control>(<init><decl><type><name><name>Map</name><operator>.</operator><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></name></type> <name>entry</name> <range>: <expr><call><name><name>resourceProperties</name><operator>.</operator><name>entrySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
      <decl_stmt><decl><type><name>String</name></type> <name>propertyName</name> <init>= <expr><call><name><name>entry</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

      <if_stmt><if>if <condition>(<expr><call><name><name>AMBARI_CONFIGURATION_CATEGORY_PROPERTY_ID</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>propertyName</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call> <operator>instanceof</operator> <name>String</name></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><name>categoryName</name> <operator>=</operator> <operator>(</operator><name>String</name><operator>)</operator> <call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
      </block_content>}</block></if> <else>else <block>{<block_content>
        <decl_stmt><decl><type><name>String</name></type> <name>propertyCategory</name> <init>= <expr><call><name><name>PropertyHelper</name><operator>.</operator><name>getPropertyCategory</name></name><argument_list>(<argument><expr><call><name><name>entry</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><operator>(</operator><name>propertyCategory</name> <operator>!=</operator> <literal type="null">null</literal><operator>)</operator> <operator>&amp;&amp;</operator> <call><name><name>propertyCategory</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>AMBARI_CONFIGURATION_PROPERTIES_PROPERTY_ID</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
          <decl_stmt><decl><type><name>String</name></type> <name>name</name> <init>= <expr><call><name><name>PropertyHelper</name><operator>.</operator><name>getPropertyName</name></name><argument_list>(<argument><expr><call><name><name>entry</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <decl_stmt><decl><type><name>Object</name></type> <name>value</name> <init>= <expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
          <expr_stmt><expr><call><name><name>properties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><ternary><condition><expr><operator>(</operator><name>value</name> <operator>==</operator> <literal type="null">null</literal><operator>)</operator></expr> ?</condition><then> <expr><literal type="null">null</literal></expr> </then><else>: <expr><call><name><name>value</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
      </block_content>}</block></else></if_stmt>
    </block_content>}</block></for>

    <if_stmt><if>if <condition>(<expr><name>categoryName</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>categoryName</name> <operator>=</operator> <name>defaultCategoryName</name></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <if_stmt><if>if <condition>(<expr><call><name><name>StringUtils</name><operator>.</operator><name>isEmpty</name></name><argument_list>(<argument><expr><name>categoryName</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>SystemException</name><argument_list>(<argument><expr><literal type="string">"The configuration type must be set"</literal></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></if></if_stmt>

    <if_stmt><if>if <condition>(<expr><call><name><name>properties</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>SystemException</name><argument_list>(<argument><expr><literal type="string">"The configuration properties must be set"</literal></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></if></if_stmt>

    <return>return <expr><call><name><name>Collections</name><operator>.</operator><name>singletonMap</name></name><argument_list>(<argument><expr><name>categoryName</name></expr></argument>, <argument><expr><name>properties</name></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>private</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>Resource</name></argument>&gt;</argument_list></name></type> <name>getAmbariConfigurationResources</name><parameter_list>(<parameter><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>requestedIds</name></decl></parameter>, <parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>propertyMap</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>Resource</name></argument>&gt;</argument_list></name></type> <name>resources</name> <init>= <expr><operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>String</name></type> <name>categoryName</name> <init>= <expr><call><name>getStringProperty</name><argument_list>(<argument><expr><name>propertyMap</name></expr></argument>, <argument><expr><name>AMBARI_CONFIGURATION_CATEGORY_PROPERTY_ID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>AmbariConfigurationEntity</name></argument>&gt;</argument_list></name></type> <name>entities</name> <init>= <expr><ternary><condition><expr><operator>(</operator><name>categoryName</name> <operator>==</operator> <literal type="null">null</literal><operator>)</operator></expr>
        ?</condition><then> <expr><call><name><name>ambariConfigurationDAO</name><operator>.</operator><name>findAll</name></name><argument_list>()</argument_list></call></expr>
        </then><else>: <expr><call><name><name>ambariConfigurationDAO</name><operator>.</operator><name>findByCategory</name></name><argument_list>(<argument><expr><name>categoryName</name></expr></argument>)</argument_list></call></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <if_stmt><if>if <condition>(<expr><name>entities</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>configurations</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

      <for>for <control>(<init><decl><type><name>AmbariConfigurationEntity</name></type> <name>entity</name> <range>: <expr><name>entities</name></expr></range></decl></init>)</control> <block>{<block_content>
        <decl_stmt><decl><type><name>String</name></type> <name>category</name> <init>= <expr><call><name><name>entity</name><operator>.</operator><name>getCategoryName</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>properties</name> <init>= <expr><call><name><name>configurations</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>category</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt><if>if <condition>(<expr><name>properties</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><name>properties</name> <operator>=</operator> <operator>new</operator> <call><name><name>TreeMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>configurations</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>category</name></expr></argument>, <argument><expr><name>properties</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>

        <expr_stmt><expr><call><name><name>properties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>entity</name><operator>.</operator><name>getPropertyName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>entity</name><operator>.</operator><name>getPropertyValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></for>

      <for>for <control>(<init><decl><type><name><name>Map</name><operator>.</operator><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></name></type> <name>entry</name> <range>: <expr><call><name><name>configurations</name><operator>.</operator><name>entrySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
        <expr_stmt><expr><call><name><name>resources</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name>toResource</name><argument_list>(<argument><expr><call><name><name>entry</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>requestedIds</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></for>
    </block_content>}</block></if></if_stmt>

    <return>return <expr><name>resources</name></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>private</specifier> <name>String</name></type> <name>getStringProperty</name><parameter_list>(<parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>propertyMap</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>propertyId</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>String</name></type> <name>value</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>

    <if_stmt><if>if <condition>(<expr><name>propertyMap</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>Object</name></type> <name>o</name> <init>= <expr><call><name><name>propertyMap</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>propertyId</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>o</name> <operator>instanceof</operator> <name>String</name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>value</name> <operator>=</operator> <operator>(</operator><name>String</name><operator>)</operator> <name>o</name></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block></if></if_stmt>

    <return>return <expr><name>value</name></expr>;</return>
  </block_content>}</block></function>
}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>RootServiceComponentConfigurationResourceProvider</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>RootServiceComponentConfigurationResourceProvider</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">0000000000..ea9cf4ff48</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>RootServiceComponentConfigurationResourceProvider</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">476</literal> @@</expr></expr_stmt>
<comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>internal</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>EnumSet</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>TreeMap</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>AmbariException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>RootComponent</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>RootService</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>NoSuchParentResourceException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>NoSuchResourceException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>Predicate</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>Request</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>RequestStatus</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>Resource</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>ResourceAlreadyExistsException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>SystemException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>UnsupportedPropertyException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>utilities</name><operator>.</operator><name>PredicateHelper</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>utilities</name><operator>.</operator><name>PropertyHelper</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>events</name><operator>.</operator><name>AmbariConfigurationChangedEvent</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>events</name><operator>.</operator><name>publishers</name><operator>.</operator><name>AmbariEventPublisher</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>dao</name><operator>.</operator><name>AmbariConfigurationDAO</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>AmbariConfigurationEntity</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>security</name><operator>.</operator><name>authorization</name><operator>.</operator><name>RoleAuthorization</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>collections</name><operator>.</operator><name>CollectionUtils</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>lang</name><operator>.</operator><name>StringUtils</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>Inject</name></name>;</import>

<class><specifier>public</specifier> class <name>RootServiceComponentConfigurationResourceProvider</name> <super_list><extends>extends <super><name>AbstractAuthorizedResourceProvider</name></super></extends></super_list> <block>{

  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>Logger</name></type> <name>LOGGER</name> <init>= <expr><call><name><name>LoggerFactory</name><operator>.</operator><name>getLogger</name></name><argument_list>(<argument><expr><name><name>RootServiceComponentConfigurationResourceProvider</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><type><specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>RESOURCE_KEY</name> <init>= <expr><literal type="string">"Configuration"</literal></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><type><specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>CONFIGURATION_CATEGORY_PROPERTY_ID</name> <init>= <expr><call><name><name>PropertyHelper</name><operator>.</operator><name>getPropertyId</name></name><argument_list>(<argument><expr><name>RESOURCE_KEY</name></expr></argument>, <argument><expr><literal type="string">"category"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>CONFIGURATION_PROPERTIES_PROPERTY_ID</name> <init>= <expr><call><name><name>PropertyHelper</name><operator>.</operator><name>getPropertyId</name></name><argument_list>(<argument><expr><name>RESOURCE_KEY</name></expr></argument>, <argument><expr><literal type="string">"properties"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>CONFIGURATION_COMPONENT_NAME_PROPERTY_ID</name> <init>= <expr><call><name><name>PropertyHelper</name><operator>.</operator><name>getPropertyId</name></name><argument_list>(<argument><expr><name>RESOURCE_KEY</name></expr></argument>, <argument><expr><literal type="string">"component_name"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>CONFIGURATION_SERVICE_NAME_PROPERTY_ID</name> <init>= <expr><call><name><name>PropertyHelper</name><operator>.</operator><name>getPropertyId</name></name><argument_list>(<argument><expr><name>RESOURCE_KEY</name></expr></argument>, <argument><expr><literal type="string">"service_name"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>PROPERTIES</name></decl>;</decl_stmt>

  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name><name>Resource</name><operator>.</operator><name>Type</name></name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>PK_PROPERTY_MAP</name></decl>;</decl_stmt>

  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>PK_PROPERTY_IDS</name></decl>;</decl_stmt>

  <static>static <block>{<block_content>
    <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>set</name> <init>= <expr><operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>set</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>CONFIGURATION_SERVICE_NAME_PROPERTY_ID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>set</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>CONFIGURATION_COMPONENT_NAME_PROPERTY_ID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>set</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>CONFIGURATION_CATEGORY_PROPERTY_ID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>set</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>CONFIGURATION_PROPERTIES_PROPERTY_ID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name>PROPERTIES</name> <operator>=</operator> <call><name><name>Collections</name><operator>.</operator><name>unmodifiableSet</name></name><argument_list>(<argument><expr><name>set</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name><name>Resource</name><operator>.</operator><name>Type</name></name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>map</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>RootService</name></name></expr></argument>, <argument><expr><name>CONFIGURATION_SERVICE_NAME_PROPERTY_ID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>RootServiceComponent</name></name></expr></argument>, <argument><expr><name>CONFIGURATION_COMPONENT_NAME_PROPERTY_ID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>RootServiceComponentConfiguration</name></name></expr></argument>, <argument><expr><name>CONFIGURATION_CATEGORY_PROPERTY_ID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name>PK_PROPERTY_MAP</name> <operator>=</operator> <call><name><name>Collections</name><operator>.</operator><name>unmodifiableMap</name></name><argument_list>(<argument><expr><name>map</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>PK_PROPERTY_IDS</name> <operator>=</operator> <call><name><name>Collections</name><operator>.</operator><name>unmodifiableSet</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>(<argument><expr><call><name><name>PK_PROPERTY_MAP</name><operator>.</operator><name>values</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></static>

  <decl_stmt><decl><annotation>@<name>Inject</name></annotation>
  <type><specifier>private</specifier> <name>AmbariConfigurationDAO</name></type> <name>ambariConfigurationDAO</name></decl>;</decl_stmt>

  <decl_stmt><decl><annotation>@<name>Inject</name></annotation>
  <type><specifier>private</specifier> <name>AmbariEventPublisher</name></type> <name>publisher</name></decl>;</decl_stmt>

  <constructor><specifier>public</specifier> <name>RootServiceComponentConfigurationResourceProvider</name><parameter_list>()</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>PROPERTIES</name></expr></argument>, <argument><expr><name>PK_PROPERTY_MAP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>RoleAuthorization</name></argument>&gt;</argument_list></name></type> <name>authorizations</name> <init>= <expr><call><name><name>EnumSet</name><operator>.</operator><name>of</name></name><argument_list>(<argument><expr><name><name>RoleAuthorization</name><operator>.</operator><name>AMBARI_MANAGE_CONFIGURATION</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>setRequiredCreateAuthorizations</name><argument_list>(<argument><expr><name>authorizations</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>setRequiredDeleteAuthorizations</name><argument_list>(<argument><expr><name>authorizations</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>setRequiredUpdateAuthorizations</name><argument_list>(<argument><expr><name>authorizations</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>setRequiredGetAuthorizations</name><argument_list>(<argument><expr><name>authorizations</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></constructor>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>protected</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>getPKPropertyIds</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>PK_PROPERTY_IDS</name></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>RequestStatus</name></type> <name>createResourcesAuthorized</name><parameter_list>(<parameter><decl><type><name>Request</name></type> <name>request</name></decl></parameter>)</parameter_list>
      <throws>throws <argument><expr><name>SystemException</name></expr></argument>, <argument><expr><name>UnsupportedPropertyException</name></expr></argument>, <argument><expr><name>ResourceAlreadyExistsException</name></expr></argument>, <argument><expr><name>NoSuchParentResourceException</name></expr></argument></throws> <block>{<block_content>

    <expr_stmt><expr><call><name>createOrAddProperties</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><call><name><name>request</name><operator>.</operator><name>getProperties</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return>return <expr><call><name>getRequestStatus</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>protected</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>Resource</name></argument>&gt;</argument_list></name></type> <name>getResourcesAuthorized</name><parameter_list>(<parameter><decl><type><name>Request</name></type> <name>request</name></decl></parameter>, <parameter><decl><type><name>Predicate</name></type> <name>predicate</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>SystemException</name></expr></argument>,
      <argument><expr><name>UnsupportedPropertyException</name></expr></argument>, <argument><expr><name>NoSuchResourceException</name></expr></argument>, <argument><expr><name>NoSuchParentResourceException</name></expr></argument></throws> <block>{<block_content>

    <return>return <expr><call><name>getResources</name><argument_list>(<argument><expr><operator>new</operator> <class><super><name><name>Command</name><argument_list type="generic">&lt;<argument><name><name>Set</name><argument_list type="generic">&lt;<argument><name>Resource</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{
      <function><annotation>@<name>Override</name></annotation>
      <type><specifier>public</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>Resource</name></argument>&gt;</argument_list></name></type> <name>invoke</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>AmbariException</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>Resource</name></argument>&gt;</argument_list></name></type> <name>resources</name> <init>= <expr><operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>requestedIds</name> <init>= <expr><call><name>getRequestPropertyIds</name><argument_list>(<argument><expr><name>request</name></expr></argument>, <argument><expr><name>predicate</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt><if>if <condition>(<expr><call><name><name>CollectionUtils</name><operator>.</operator><name>isEmpty</name></name><argument_list>(<argument><expr><name>requestedIds</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><name>requestedIds</name> <operator>=</operator> <name>PROPERTIES</name></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>

        <if_stmt><if>if <condition>(<expr><name>predicate</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
          <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>Resource</name></argument>&gt;</argument_list></name></type> <name>_resources</name></decl>;</decl_stmt>
          <try>try <block>{<block_content>
            <expr_stmt><expr><name>_resources</name> <operator>=</operator> <call><name>getConfigurationResources</name><argument_list>(<argument><expr><name>requestedIds</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>NoSuchResourceException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <throw>throw <expr><operator>new</operator> <call><name>AmbariException</name><argument_list>(<argument><expr><call><name><name>e</name><operator>.</operator><name>getMessage</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
          </block_content>}</block></catch></try>

          <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>CollectionUtils</name><operator>.</operator><name>isEmpty</name></name><argument_list>(<argument><expr><name>_resources</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>resources</name><operator>.</operator><name>addAll</name></name><argument_list>(<argument><expr><name>_resources</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          </block_content>}</block></if></if_stmt>
        </block_content>}</block></if> <else>else <block>{<block_content>
          <for>for <control>(<init><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>propertyMap</name> <range>: <expr><call><name>getPropertyMaps</name><argument_list>(<argument><expr><name>predicate</name></expr></argument>)</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
            <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>Resource</name></argument>&gt;</argument_list></name></type> <name>_resources</name></decl>;</decl_stmt>
            <try>try <block>{<block_content>
              <expr_stmt><expr><name>_resources</name> <operator>=</operator> <call><name>getConfigurationResources</name><argument_list>(<argument><expr><name>requestedIds</name></expr></argument>, <argument><expr><name>propertyMap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>NoSuchResourceException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
              <throw>throw <expr><operator>new</operator> <call><name>AmbariException</name><argument_list>(<argument><expr><call><name><name>e</name><operator>.</operator><name>getMessage</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
            </block_content>}</block></catch></try>

            <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>CollectionUtils</name><operator>.</operator><name>isEmpty</name></name><argument_list>(<argument><expr><name>_resources</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
              <expr_stmt><expr><call><name><name>resources</name><operator>.</operator><name>addAll</name></name><argument_list>(<argument><expr><name>_resources</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
          </block_content>}</block></for>
        </block_content>}</block></else></if_stmt>

        <return>return <expr><name>resources</name></expr>;</return>
      </block_content>}</block></function>
    }</block></class></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>


  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>protected</specifier> <name>RequestStatus</name></type> <name>deleteResourcesAuthorized</name><parameter_list>(<parameter><decl><type><name>Request</name></type> <name>request</name></decl></parameter>, <parameter><decl><type><name>Predicate</name></type> <name>predicate</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>SystemException</name></expr></argument>,
      <argument><expr><name>UnsupportedPropertyException</name></expr></argument>, <argument><expr><name>NoSuchResourceException</name></expr></argument>, <argument><expr><name>NoSuchParentResourceException</name></expr></argument></throws> <block>{<block_content>

    <decl_stmt><decl><type><name>String</name></type> <name>serviceName</name> <init>= <expr><operator>(</operator><name>String</name><operator>)</operator> <call><name><name>PredicateHelper</name><operator>.</operator><name>getProperties</name></name><argument_list>(<argument><expr><name>predicate</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name>CONFIGURATION_SERVICE_NAME_PROPERTY_ID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>componentName</name> <init>= <expr><operator>(</operator><name>String</name><operator>)</operator> <call><name><name>PredicateHelper</name><operator>.</operator><name>getProperties</name></name><argument_list>(<argument><expr><name>predicate</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name>CONFIGURATION_COMPONENT_NAME_PROPERTY_ID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>categoryName</name> <init>= <expr><operator>(</operator><name>String</name><operator>)</operator> <call><name><name>PredicateHelper</name><operator>.</operator><name>getProperties</name></name><argument_list>(<argument><expr><name>predicate</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name>CONFIGURATION_CATEGORY_PROPERTY_ID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>ConfigurationHandler</name></type> <name>handler</name> <init>= <expr><call><name>getConfigurationHandler</name><argument_list>(<argument><expr><name>serviceName</name></expr></argument>, <argument><expr><name>componentName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>handler</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>handler</name><operator>.</operator><name>removeConfiguration</name></name><argument_list>(<argument><expr><name>categoryName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <else>else <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>SystemException</name><argument_list>(<argument><expr><call><name><name>String</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><literal type="string">"Configurations may not be updated for the %s component of the root service %s"</literal></expr></argument>, <argument><expr><name>componentName</name></expr></argument>, <argument><expr><name>serviceName</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></else></if_stmt>

    <return>return <expr><call><name>getRequestStatus</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>protected</specifier> <name>RequestStatus</name></type> <name>updateResourcesAuthorized</name><parameter_list>(<parameter><decl><type><name>Request</name></type> <name>request</name></decl></parameter>, <parameter><decl><type><name>Predicate</name></type> <name>predicate</name></decl></parameter>)</parameter_list>
      <throws>throws <argument><expr><name>SystemException</name></expr></argument>, <argument><expr><name>UnsupportedPropertyException</name></expr></argument>, <argument><expr><name>NoSuchResourceException</name></expr></argument>, <argument><expr><name>NoSuchParentResourceException</name></expr></argument></throws> <block>{<block_content>

    <decl_stmt><decl><type><name>String</name></type> <name>serviceName</name> <init>= <expr><operator>(</operator><name>String</name><operator>)</operator> <call><name><name>PredicateHelper</name><operator>.</operator><name>getProperties</name></name><argument_list>(<argument><expr><name>predicate</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name>CONFIGURATION_SERVICE_NAME_PROPERTY_ID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>componentName</name> <init>= <expr><operator>(</operator><name>String</name><operator>)</operator> <call><name><name>PredicateHelper</name><operator>.</operator><name>getProperties</name></name><argument_list>(<argument><expr><name>predicate</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name>CONFIGURATION_COMPONENT_NAME_PROPERTY_ID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>categoryName</name> <init>= <expr><operator>(</operator><name>String</name><operator>)</operator> <call><name><name>PredicateHelper</name><operator>.</operator><name>getProperties</name></name><argument_list>(<argument><expr><name>predicate</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name>CONFIGURATION_CATEGORY_PROPERTY_ID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name>createOrAddProperties</name><argument_list>(<argument><expr><name>serviceName</name></expr></argument>, <argument><expr><name>componentName</name></expr></argument>, <argument><expr><name>categoryName</name></expr></argument>, <argument><expr><call><name><name>request</name><operator>.</operator><name>getProperties</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return>return <expr><call><name>getRequestStatus</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>private</specifier> <name>Resource</name></type> <name>toResource</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>serviceName</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>componentName</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>categoryName</name></decl></parameter>, <parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>properties</name></decl></parameter>, <parameter><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>requestedIds</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>Resource</name></type> <name>resource</name> <init>= <expr><operator>new</operator> <call><name>ResourceImpl</name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>RootServiceComponentConfiguration</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>setResourceProperty</name><argument_list>(<argument><expr><name>resource</name></expr></argument>, <argument><expr><name>CONFIGURATION_SERVICE_NAME_PROPERTY_ID</name></expr></argument>, <argument><expr><name>serviceName</name></expr></argument>, <argument><expr><name>requestedIds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>setResourceProperty</name><argument_list>(<argument><expr><name>resource</name></expr></argument>, <argument><expr><name>CONFIGURATION_COMPONENT_NAME_PROPERTY_ID</name></expr></argument>, <argument><expr><name>componentName</name></expr></argument>, <argument><expr><name>requestedIds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>setResourceProperty</name><argument_list>(<argument><expr><name>resource</name></expr></argument>, <argument><expr><name>CONFIGURATION_CATEGORY_PROPERTY_ID</name></expr></argument>, <argument><expr><name>categoryName</name></expr></argument>, <argument><expr><name>requestedIds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>setResourceProperty</name><argument_list>(<argument><expr><name>resource</name></expr></argument>, <argument><expr><name>CONFIGURATION_PROPERTIES_PROPERTY_ID</name></expr></argument>, <argument><expr><name>properties</name></expr></argument>, <argument><expr><name>requestedIds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name>resource</name></expr>;</return>
  </block_content>}</block></function>

  <comment type="block" format="javadoc">/**
   * Retrieves groups of properties from the request data and create or updates them as needed.
   * &lt;p&gt;
   * Each group of properties is expected to have a category (&lt;code&gt;AmbariConfiguration/category&lt;/code&gt;)
   * value and one or more property (&lt;code&gt;AmbariConfiguration/properties/property.name&lt;/code&gt;) values.
   * If a category cannot be determined from the propery set, the default category value (passed in)
   * is used.  If a default category is set, it is assumed that it was parsed from the request predicate
   * (if availabe).
   *
   * @param defaultServiceName             the default service name to use if needed
   * @param defaultComponentName           the default component name to use if needed
   * @param defaultCategoryName            the default category to use if needed
   * @param requestProperties              a collection of property maps parsed from the request
   * @param removePropertiesIfNotSpecified &lt;code&gt;true&lt;/code&gt; to remove existing properties that have not been specifed in the request;
   *                                       &lt;code&gt;false&lt;/code&gt; append or update the existing set of properties with values from the request
   * @throws SystemException if an error occurs saving the configuration data
   */</comment>
  <function><type><specifier>private</specifier> <name>void</name></type> <name>createOrAddProperties</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>defaultServiceName</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>defaultComponentName</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>defaultCategoryName</name></decl></parameter>,
                                     <parameter><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>requestProperties</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>removePropertiesIfNotSpecified</name></decl></parameter>)</parameter_list>
      <throws>throws <argument><expr><name>SystemException</name></expr></argument></throws> <block>{<block_content>
    <comment type="line">// set of resource properties (each entry in the set belongs to a different resource)</comment>
    <if_stmt><if>if <condition>(<expr><name>requestProperties</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <for>for <control>(<init><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>resourceProperties</name> <range>: <expr><name>requestProperties</name></expr></range></decl></init>)</control> <block>{<block_content>
        <decl_stmt><decl><type><name>RequestDetails</name></type> <name>requestDetails</name> <init>= <expr><call><name>parseProperties</name><argument_list>(<argument><expr><name>defaultServiceName</name></expr></argument>, <argument><expr><name>defaultComponentName</name></expr></argument>, <argument><expr><name>defaultCategoryName</name></expr></argument>, <argument><expr><name>resourceProperties</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><name>ConfigurationHandler</name></type> <name>handler</name> <init>= <expr><call><name>getConfigurationHandler</name><argument_list>(<argument><expr><name><name>requestDetails</name><operator>.</operator><name>serviceName</name></name></expr></argument>, <argument><expr><name><name>requestDetails</name><operator>.</operator><name>componentName</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt><if>if <condition>(<expr><name>handler</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name><name>handler</name><operator>.</operator><name>updateCategory</name></name><argument_list>(<argument><expr><name><name>requestDetails</name><operator>.</operator><name>categoryName</name></name></expr></argument>, <argument><expr><name><name>requestDetails</name><operator>.</operator><name>properties</name></name></expr></argument>, <argument><expr><name>removePropertiesIfNotSpecified</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if> <else>else <block>{<block_content>
          <throw>throw <expr><operator>new</operator> <call><name>SystemException</name><argument_list>(<argument><expr><call><name><name>String</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><literal type="string">"Configurations may not be updated for the %s component of the root service, %s"</literal></expr></argument>, <argument><expr><name><name>requestDetails</name><operator>.</operator><name>serviceName</name></name></expr></argument>, <argument><expr><name><name>requestDetails</name><operator>.</operator><name>componentName</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></else></if_stmt>
      </block_content>}</block></for>
    </block_content>}</block></if></if_stmt>
  </block_content>}</block></function>

  <comment type="block" format="javadoc">/**
   * Parse the property map from a request into a map of services to components to category names to maps of property names and values.
   *
   * @param defaultServiceName   the default service name to use if one is not found in the map of properties
   * @param defaultComponentName the default component name to use if one is not found in the map of properties
   * @param defaultCategoryName  the default category name to use if one is not found in the map of properties
   * @param resourceProperties   a map of properties from a request item   @return a map of category names to maps of name/value pairs
   * @throws SystemException if an issue with the data is determined
   */</comment>
  <function><type><specifier>private</specifier> <name>RequestDetails</name></type> <name>parseProperties</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>defaultServiceName</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>defaultComponentName</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>defaultCategoryName</name></decl></parameter>, <parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>resourceProperties</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>SystemException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>String</name></type> <name>serviceName</name> <init>= <expr><name>defaultServiceName</name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>componentName</name> <init>= <expr><name>defaultComponentName</name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>categoryName</name> <init>= <expr><name>defaultCategoryName</name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>properties</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <for>for <control>(<init><decl><type><name><name>Map</name><operator>.</operator><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></name></type> <name>entry</name> <range>: <expr><call><name><name>resourceProperties</name><operator>.</operator><name>entrySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
      <decl_stmt><decl><type><name>String</name></type> <name>propertyName</name> <init>= <expr><call><name><name>entry</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

      <if_stmt><if>if <condition>(<expr><call><name><name>CONFIGURATION_CATEGORY_PROPERTY_ID</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>propertyName</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call> <operator>instanceof</operator> <name>String</name></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><name>categoryName</name> <operator>=</operator> <operator>(</operator><name>String</name><operator>)</operator> <call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
      </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><call><name><name>CONFIGURATION_COMPONENT_NAME_PROPERTY_ID</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>propertyName</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call> <operator>instanceof</operator> <name>String</name></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><name>componentName</name> <operator>=</operator> <operator>(</operator><name>String</name><operator>)</operator> <call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
      </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><call><name><name>CONFIGURATION_SERVICE_NAME_PROPERTY_ID</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>propertyName</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call> <operator>instanceof</operator> <name>String</name></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><name>serviceName</name> <operator>=</operator> <operator>(</operator><name>String</name><operator>)</operator> <call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
      </block_content>}</block></if> <else>else <block>{<block_content>
        <decl_stmt><decl><type><name>String</name></type> <name>propertyCategory</name> <init>= <expr><call><name><name>PropertyHelper</name><operator>.</operator><name>getPropertyCategory</name></name><argument_list>(<argument><expr><call><name><name>entry</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><operator>(</operator><name>propertyCategory</name> <operator>!=</operator> <literal type="null">null</literal><operator>)</operator> <operator>&amp;&amp;</operator> <call><name><name>propertyCategory</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>CONFIGURATION_PROPERTIES_PROPERTY_ID</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
          <decl_stmt><decl><type><name>String</name></type> <name>name</name> <init>= <expr><call><name><name>PropertyHelper</name><operator>.</operator><name>getPropertyName</name></name><argument_list>(<argument><expr><call><name><name>entry</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <decl_stmt><decl><type><name>Object</name></type> <name>value</name> <init>= <expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
          <expr_stmt><expr><call><name><name>properties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><ternary><condition><expr><operator>(</operator><name>value</name> <operator>==</operator> <literal type="null">null</literal><operator>)</operator></expr> ?</condition><then> <expr><literal type="null">null</literal></expr> </then><else>: <expr><call><name><name>value</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
      </block_content>}</block></else></if_stmt>
    </block_content>}</block></for>

    <if_stmt><if>if <condition>(<expr><call><name><name>StringUtils</name><operator>.</operator><name>isEmpty</name></name><argument_list>(<argument><expr><name>serviceName</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>SystemException</name><argument_list>(<argument><expr><literal type="string">"The service name must be set"</literal></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></if></if_stmt>

    <if_stmt><if>if <condition>(<expr><call><name><name>StringUtils</name><operator>.</operator><name>isEmpty</name></name><argument_list>(<argument><expr><name>componentName</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>SystemException</name><argument_list>(<argument><expr><literal type="string">"The component name must be set"</literal></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></if></if_stmt>

    <if_stmt><if>if <condition>(<expr><call><name><name>StringUtils</name><operator>.</operator><name>isEmpty</name></name><argument_list>(<argument><expr><name>categoryName</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>SystemException</name><argument_list>(<argument><expr><literal type="string">"The configuration category must be set"</literal></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></if></if_stmt>

    <if_stmt><if>if <condition>(<expr><call><name><name>properties</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>SystemException</name><argument_list>(<argument><expr><literal type="string">"The configuration properties must be set"</literal></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></if></if_stmt>

    <return>return <expr><operator>new</operator> <call><name>RequestDetails</name><argument_list>(<argument><expr><name>serviceName</name></expr></argument>, <argument><expr><name>componentName</name></expr></argument>, <argument><expr><name>categoryName</name></expr></argument>, <argument><expr><name>properties</name></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <comment type="block" format="javadoc">/**
   * Retrieves the requested configration resources
   *
   * @param requestedIds the requested properties ids
   * @param propertyMap  the request properties
   * @return a set of resources built from the found data
   * @throws NoSuchResourceException if the requested resource was not found
   */</comment>
  <function><type><specifier>private</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>Resource</name></argument>&gt;</argument_list></name></type> <name>getConfigurationResources</name><parameter_list>(<parameter><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>requestedIds</name></decl></parameter>, <parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>propertyMap</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>NoSuchResourceException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>Resource</name></argument>&gt;</argument_list></name></type> <name>resources</name> <init>= <expr><operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>String</name></type> <name>serviceName</name> <init>= <expr><call><name>getStringProperty</name><argument_list>(<argument><expr><name>propertyMap</name></expr></argument>, <argument><expr><name>CONFIGURATION_SERVICE_NAME_PROPERTY_ID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>componentName</name> <init>= <expr><call><name>getStringProperty</name><argument_list>(<argument><expr><name>propertyMap</name></expr></argument>, <argument><expr><name>CONFIGURATION_COMPONENT_NAME_PROPERTY_ID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>ConfigurationHandler</name></type> <name>handler</name> <init>= <expr><call><name>getConfigurationHandler</name><argument_list>(<argument><expr><name>serviceName</name></expr></argument>, <argument><expr><name>componentName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt><if>if <condition>(<expr><name>handler</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>String</name></type> <name>categoryName</name> <init>= <expr><call><name>getStringProperty</name><argument_list>(<argument><expr><name>propertyMap</name></expr></argument>, <argument><expr><name>CONFIGURATION_CATEGORY_PROPERTY_ID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>configurations</name> <init>= <expr><call><name><name>handler</name><operator>.</operator><name>getConfigurations</name></name><argument_list>(<argument><expr><name>categoryName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

      <if_stmt><if>if <condition>(<expr><name>configurations</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <for>for <control>(<init><decl><type><name><name>Map</name><operator>.</operator><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></name></type> <name>entry</name> <range>: <expr><call><name><name>configurations</name><operator>.</operator><name>entrySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
          <expr_stmt><expr><call><name><name>resources</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name>toResource</name><argument_list>(<argument><expr><name>serviceName</name></expr></argument>, <argument><expr><name>componentName</name></expr></argument>, <argument><expr><call><name><name>entry</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>requestedIds</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block></if></if_stmt>

    <return>return <expr><name>resources</name></expr>;</return>
  </block_content>}</block></function>

  <comment type="block" format="javadoc">/**
   * Returns the internal configuration handler used to support various configuration storage facilites.
   *
   * @param serviceName   the service name
   * @param componentName the component name
   * @return
   */</comment>
  <function><type><specifier>private</specifier> <name>ConfigurationHandler</name></type> <name>getConfigurationHandler</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>serviceName</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>componentName</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><call><name><name>RootService</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>serviceName</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><call><name><name>RootComponent</name><operator>.</operator><name>AMBARI_SERVER</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>componentName</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <return>return <expr><operator>new</operator> <call><name>AmbariServerConfigurationHandler</name><argument_list>()</argument_list></call></expr>;</return>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block></if></if_stmt>

    <return>return <expr><literal type="null">null</literal></expr>;</return>
  </block_content>}</block></function>


  <function><type><specifier>private</specifier> <name>String</name></type> <name>getStringProperty</name><parameter_list>(<parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>propertyMap</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>propertyId</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>String</name></type> <name>value</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>

    <if_stmt><if>if <condition>(<expr><name>propertyMap</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>Object</name></type> <name>o</name> <init>= <expr><call><name><name>propertyMap</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>propertyId</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>o</name> <operator>instanceof</operator> <name>String</name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>value</name> <operator>=</operator> <operator>(</operator><name>String</name><operator>)</operator> <name>o</name></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block></if></if_stmt>

    <return>return <expr><name>value</name></expr>;</return>
  </block_content>}</block></function>

  <comment type="block" format="javadoc">/**
   * ConfigurationHandler is an interface to be implemented to support the relevant types of storage
   * used to persist root-level component configurations.
   */</comment>
  <class><specifier>private</specifier> <specifier>abstract</specifier> class <name>ConfigurationHandler</name> <block>{
    <comment type="block" format="javadoc">/**
     * Retrieve the request configurations.
     *
     * @param categoryName the category name (or &lt;code&gt;null&lt;/code&gt; for all)
     * @return a map of category names to properties (name/value pairs).
     * @throws NoSuchResourceException if the requested data is not found
     */</comment>
    <decl_stmt><decl><type><specifier>public</specifier> <specifier>abstract</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>getConfigurations</name><argument_list>(<argument><expr><name>String</name> <name>categoryName</name></expr></argument>)</argument_list> <throws>throws <argument><expr><name>NoSuchResourceException</name></expr></argument></throws></decl>;</decl_stmt>

    <comment type="block" format="javadoc">/**
     * Delete the requested configuration.
     *
     * @param categoryName the category name
     * @throws NoSuchResourceException if the requested category does not exist
     */</comment>
    <decl_stmt><decl><type><specifier>public</specifier> <specifier>abstract</specifier> <name>void</name></type> <name>removeConfiguration</name><argument_list>(<argument><expr><name>String</name> <name>categoryName</name></expr></argument>)</argument_list> <throws>throws <argument><expr><name>NoSuchResourceException</name></expr></argument></throws></decl>;</decl_stmt>

    <comment type="block" format="javadoc">/**
     * Set or update a configuration category with the specified properties.
     * &lt;p&gt;
     * If &lt;code&gt;removePropertiesIfNotSpecified&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, the persisted category is to include only the specified properties.
     * &lt;p&gt;
     * If &lt;code&gt;removePropertiesIfNotSpecified&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, the persisted category is to include the union of the existing and specified properties.
     * &lt;p&gt;
     * In any case, existing property values will be overwritten by the one specified in the property map.
     *
     * @param categoryName                   the category name
     * @param properties                     a map of properties to set
     * @param removePropertiesIfNotSpecified &lt;code&gt;true&lt;/code&gt; to ensure the set of properties are only those that have be explicitly specified;
     *                                       &lt;code&gt;false&lt;/code&gt; to update the set of exising properties with the specified set of properties, adding missing properties but not removing any properties
     */</comment>
    <decl_stmt><decl><type><specifier>public</specifier> <specifier>abstract</specifier> <name>void</name></type> <name>updateCategory</name><argument_list>(<argument><expr><name>String</name> <name>categoryName</name></expr></argument>, <argument><expr><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name> <name>properties</name></expr></argument>, <argument><expr><name>boolean</name> <name>removePropertiesIfNotSpecified</name></expr></argument>)</argument_list></decl>;</decl_stmt>
  }</block></class>

  <comment type="block" format="javadoc">/**
   * AmbariServerConfigurationHandler handle Ambari server specific configuration properties.
   */</comment>
  <class><specifier>private</specifier> class <name>AmbariServerConfigurationHandler</name> <super_list><extends>extends <super><name>ConfigurationHandler</name></super></extends></super_list> <block>{
    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>getConfigurations</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>categoryName</name></decl></parameter>)</parameter_list>
        <throws>throws <argument><expr><name>NoSuchResourceException</name></expr></argument></throws> <block>{<block_content>
      <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>configurations</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>

      <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>AmbariConfigurationEntity</name></argument>&gt;</argument_list></name></type> <name>entities</name> <init>= <expr><ternary><condition><expr><operator>(</operator><name>categoryName</name> <operator>==</operator> <literal type="null">null</literal><operator>)</operator></expr>
          ?</condition><then> <expr><call><name><name>ambariConfigurationDAO</name><operator>.</operator><name>findAll</name></name><argument_list>()</argument_list></call></expr>
          </then><else>: <expr><call><name><name>ambariConfigurationDAO</name><operator>.</operator><name>findByCategory</name></name><argument_list>(<argument><expr><name>categoryName</name></expr></argument>)</argument_list></call></expr></else></ternary></expr></init></decl>;</decl_stmt>

      <if_stmt><if>if <condition>(<expr><name>entities</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>configurations</name> <operator>=</operator> <operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

        <for>for <control>(<init><decl><type><name>AmbariConfigurationEntity</name></type> <name>entity</name> <range>: <expr><name>entities</name></expr></range></decl></init>)</control> <block>{<block_content>
          <decl_stmt><decl><type><name>String</name></type> <name>category</name> <init>= <expr><call><name><name>entity</name><operator>.</operator><name>getCategoryName</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
          <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>properties</name> <init>= <expr><call><name><name>configurations</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>category</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

          <if_stmt><if>if <condition>(<expr><name>properties</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><name>properties</name> <operator>=</operator> <operator>new</operator> <call><name><name>TreeMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>configurations</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>category</name></expr></argument>, <argument><expr><name>properties</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          </block_content>}</block></if></if_stmt>

          <expr_stmt><expr><call><name><name>properties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>entity</name><operator>.</operator><name>getPropertyName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>entity</name><operator>.</operator><name>getPropertyValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
      </block_content>}</block></if></if_stmt>

      <return>return <expr><name>configurations</name></expr>;</return>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>removeConfiguration</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>categoryName</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>NoSuchResourceException</name></expr></argument></throws> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><literal type="null">null</literal> <operator>==</operator> <name>categoryName</name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>LOGGER</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"No resource id provided in the request"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if> <else>else <block>{<block_content>
        <expr_stmt><expr><call><name><name>LOGGER</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"Deleting Ambari configuration with id: {}"</literal></expr></argument>, <argument><expr><name>categoryName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <try>try <block>{<block_content>
          <if_stmt><if>if <condition>(<expr><call><name><name>ambariConfigurationDAO</name><operator>.</operator><name>removeByCategory</name></name><argument_list>(<argument><expr><name>categoryName</name></expr></argument>)</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>publisher</name><operator>.</operator><name>publish</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>AmbariConfigurationChangedEvent</name><argument_list>(<argument><expr><name>categoryName</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          </block_content>}</block></if></if_stmt>
        </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IllegalStateException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
          <throw>throw <expr><operator>new</operator> <call><name>NoSuchResourceException</name><argument_list>(<argument><expr><call><name><name>e</name><operator>.</operator><name>getMessage</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></catch></try>
      </block_content>}</block></else></if_stmt>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>updateCategory</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>categoryName</name></decl></parameter>, <parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>properties</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>removePropertiesIfNotSpecified</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><call><name><name>ambariConfigurationDAO</name><operator>.</operator><name>reconcileCategory</name></name><argument_list>(<argument><expr><name>categoryName</name></expr></argument>, <argument><expr><name>properties</name></expr></argument>, <argument><expr><name>removePropertiesIfNotSpecified</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <comment type="line">// notify subscribers about the configuration changes</comment>
        <expr_stmt><expr><call><name><name>publisher</name><operator>.</operator><name>publish</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>AmbariConfigurationChangedEvent</name><argument_list>(<argument><expr><name>categoryName</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block></function>
  }</block></class>

  <comment type="block" format="javadoc">/**
   * RequestDetails is a container for details parsed from the request.
   */</comment>
  <class><specifier>private</specifier> class <name>RequestDetails</name> <block>{
    <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>serviceName</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>componentName</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>categoryName</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>properties</name></decl>;</decl_stmt>

    <constructor><specifier>private</specifier> <name>RequestDetails</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>serviceName</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>componentName</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>categoryName</name></decl></parameter>, <parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>properties</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>serviceName</name></name> <operator>=</operator> <name>serviceName</name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>componentName</name></name> <operator>=</operator> <name>componentName</name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>categoryName</name></name> <operator>=</operator> <name>categoryName</name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>properties</name></name> <operator>=</operator> <name>properties</name></expr>;</expr_stmt>
    </block_content>}</block></constructor>
  }</block></class>
}</block></class>

<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>RootServiceComponentPropertyProvider</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>RootServiceComponentPropertyProvider</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">433c1fae90</literal><operator>..</operator><name>b5bbc94c12</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>RootServiceComponentPropertyProvider</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>RootServiceComponentPropertyProvider</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">29</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">29</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
 
 <import>import <name><name>javax</name><operator>.</operator><name>crypto</name><operator>.</operator><name>Cipher</name></name>;</import>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>RootServiceResponseFactory</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>RootComponent</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>Predicate</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>PropertyProvider</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>Request</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">126</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">126</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>RootServiceComponentPropertyProvider</name> extends <name>BaseProvider</name> <name>implement</name></expr></expr_stmt>
 
     <for>for <control>(<init><decl><type><name>Resource</name></type> <name>resource</name> <range>: <expr><name>resources</name></expr></range></decl></init>)</control> <block>{<block_content>
       <comment type="line">// If this resource represents the AMBARI_SERVER component, handle it's specific properties...</comment>
      <if_stmt><if>if <condition>(<expr><call><name><name>RootServiceResponseFactory</name><operator>.</operator><name>Components</name><operator>.</operator><name>AMBARI_SERVER</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><call><name><name>resource</name><operator>.</operator><name>getPropertyValue</name></name><argument_list>(<argument><expr><name><name>RootServiceComponentResourceProvider</name><operator>.</operator><name>COMPONENT_NAME_PROPERTY_ID</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><call><name><name>RootComponent</name><operator>.</operator><name>AMBARI_SERVER</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><call><name><name>resource</name><operator>.</operator><name>getPropertyValue</name></name><argument_list>(<argument><expr><name><name>RootServiceComponentResourceProvider</name><operator>.</operator><name>COMPONENT_NAME_PROPERTY_ID</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
         <comment type="line">// Attempt to fill in the cipher details only if explicitly asked for.</comment>
         <if_stmt><if>if <condition>(<expr><call><name><name>requestedIds</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><name>JCE_POLICY_PROPERTY_ID</name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name><name>requestedIds</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><name>CIPHER_PROPERTIES_PROPERTY_ID</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
           <expr_stmt><expr><call><name>setCipherDetails</name><argument_list>(<argument><expr><name>resource</name></expr></argument>, <argument><expr><name>requestedIds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>RootServiceComponentResourceProvider</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>RootServiceComponentResourceProvider</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">3925aebdae</literal><operator>..</operator><name>dfca00e6aa</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>RootServiceComponentResourceProvider</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>RootServiceComponentResourceProvider</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">25</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">25</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>AmbariException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>AmbariManagementController</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>RootComponent</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>RootServiceComponentRequest</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>RootServiceComponentResponse</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>RootServiceResponseFactory</name><operator>.</operator><name>Components</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>NoSuchParentResourceException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>NoSuchResourceException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>Predicate</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">99</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">99</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>RootServiceComponentResourceProvider</name> extends <name>ReadOnlyResourceProvid</name>
       <call><name>setResourceProperty</name><argument_list>(<argument><expr><name>resource</name></expr></argument>, <argument><expr><name>PROPERTIES_PROPERTY_ID</name></expr></argument>, <argument><expr><call><name><name>response</name><operator>.</operator><name>getProperties</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>requestedIds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>setResourceProperty</name><argument_list>(<argument><expr><name>resource</name></expr></argument>, <argument><expr><name>COMPONENT_VERSION_PROPERTY_ID</name></expr></argument>, <argument><expr><call><name><name>response</name><operator>.</operator><name>getComponentVersion</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>requestedIds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       
      <if_stmt><if>if <condition>(<expr><call><name><name>Components</name><operator>.</operator><name>AMBARI_SERVER</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><call><name><name>response</name><operator>.</operator><name>getComponentName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><call><name><name>RootComponent</name><operator>.</operator><name>AMBARI_SERVER</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><call><name><name>response</name><operator>.</operator><name>getComponentName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
         <expr_stmt><expr><call><name>setResourceProperty</name><argument_list>(<argument><expr><name>resource</name></expr></argument>, <argument><expr><name>SERVER_CLOCK_PROPERTY_ID</name></expr></argument>, <argument><expr><call><name><name>response</name><operator>.</operator><name>getServerClock</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>requestedIds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></if></if_stmt>      
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>spi</name><operator>/</operator><name><name>Resource</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>spi</name><operator>/</operator><name><name>Resource</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">78353735ac</literal><operator>..</operator><literal type="number">90e031563e</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>spi</name><operator>/</operator><name><name>Resource</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>spi</name><operator>/</operator><name><name>Resource</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">110</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">110</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> interface <name>Resource</name> <block>{
     <expr><name>TaskAttempt</name></expr>,
     <expr><name>RootService</name></expr>,
     <expr><name>RootServiceComponent</name></expr>,
    <expr><name>RootServiceComponentConfiguration</name></expr>,
     <expr><name>RootServiceHostComponent</name></expr>,
     <expr><name>View</name></expr>,
     <expr><name>ViewURL</name></expr>,
@@ <expr><operator>-</operator><literal type="number">160</literal></expr>,<expr><literal type="number">8</literal> <operator>+</operator><literal type="number">161</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> interface <name>Resource</name> <block>{
     <expr><name>VersionDefinition</name></expr>,
     <expr><name>ClusterKerberosDescriptor</name></expr>,
     <expr><name>LoggingQuery</name></expr>,
    <expr><name>RemoteCluster</name></expr>,
    <expr><name>AmbariConfiguration</name></expr>;
    <name>RemoteCluster</name></block></expr>;
 
     <comment type="block" format="javadoc">/**
      * Get the {@link Type} that corresponds to this InternalType.
@@ -232,6 +232,7 @@ public interface Resource {
     public static final Type TaskAttempt = InternalType.TaskAttempt.getType();
     public static final Type RootService = InternalType.RootService.getType();
     public static final Type RootServiceComponent = InternalType.RootServiceComponent.getType();
    public static final Type RootServiceComponentConfiguration = InternalType.RootServiceComponentConfiguration.getType();
     public static final Type RootServiceHostComponent = InternalType.RootServiceHostComponent.getType();
     public static final Type View = InternalType.View.getType();
     public static final Type ViewURL = InternalType.ViewURL.getType();
@@ -283,7 +284,6 @@ public interface Resource {
     public static final Type ClusterKerberosDescriptor = InternalType.ClusterKerberosDescriptor.getType();
     public static final Type LoggingQuery = InternalType.LoggingQuery.getType();
     public static final Type RemoteCluster = InternalType.RemoteCluster.getType();
    public static final Type AmbariConfiguration = InternalType.AmbariConfiguration.getType();
 
 
     /**
diff --git a/ambari-server/src/main/java/org/apache/ambari/server/events/listeners/alerts/AlertReceivedListener.java b/ambari-server/src/main/java/org/apache/ambari/server/events/listeners/alerts/AlertReceivedListener.java
index 266c7e81c1..71988143c3 100644
-- a/ambari-server/src/main/java/org/apache/ambari/server/events/listeners/alerts/AlertReceivedListener.java
++ b/ambari-server/src/main/java/org/apache/ambari/server/events/listeners/alerts/AlertReceivedListener.java
@@ -26,8 +26,8 @@ import org.apache.ambari.server.AmbariException;
 import org.apache.ambari.server.EagerSingleton;
 import org.apache.ambari.server.configuration.Configuration;
 import org.apache.ambari.server.controller.MaintenanceStateHelper;
import org.apache.ambari.server.controller.RootServiceResponseFactory.Components;
import org.apache.ambari.server.controller.RootServiceResponseFactory.Services;
import org.apache.ambari.server.controller.RootComponent;
import org.apache.ambari.server.controller.RootService;
 import org.apache.ambari.server.events.AlertEvent;
 import org.apache.ambari.server.events.AlertReceivedEvent;
 import org.apache.ambari.server.events.AlertStateChangeEvent;
@@ -434,9 +434,9 @@ public class AlertReceivedListener {
     String hostName = alert.getHostName();
 
     // AMBARI/AMBARI_SERVER is always a valid service/component combination
    String ambariServiceName = Services.AMBARI.name();
    String ambariServerComponentName = Components.AMBARI_SERVER.name();
    String ambariAgentComponentName = Components.AMBARI_AGENT.name();
    String ambariServiceName = RootService.AMBARI.name();
    String ambariServerComponentName = RootComponent.AMBARI_SERVER.name();
    String ambariAgentComponentName = RootComponent.AMBARI_AGENT.name();
     if (ambariServiceName.equals(serviceName) &amp;&amp; ambariServerComponentName.equals(componentName)) {
       return true;
     }
diff --git a/ambari-server/src/main/java/org/apache/ambari/server/events/listeners/alerts/AlertStateChangedListener.java b/ambari-server/src/main/java/org/apache/ambari/server/events/listeners/alerts/AlertStateChangedListener.java
index d5dc530394..8701b6df55 100644
-- a/ambari-server/src/main/java/org/apache/ambari/server/events/listeners/alerts/AlertStateChangedListener.java
++ b/ambari-server/src/main/java/org/apache/ambari/server/events/listeners/alerts/AlertStateChangedListener.java
@@ -24,7 +24,7 @@ import java.util.UUID;
 
 import org.apache.ambari.server.AmbariException;
 import org.apache.ambari.server.EagerSingleton;
import org.apache.ambari.server.controller.RootServiceResponseFactory.Services;
import org.apache.ambari.server.controller.RootService;
 import org.apache.ambari.server.events.AlertStateChangeEvent;
 import org.apache.ambari.server.events.publishers.AlertEventPublisher;
 import org.apache.ambari.server.orm.dao.AlertDispatchDAO;
@@ -67,7 +67,7 @@ import com.google.inject.Singleton;
  * &lt;ul&gt;
  * &lt;li&gt;If {@link AlertTargetEntity#isEnabled()} is {@code false}
  * &lt;li&gt;If the cluster is upgrading or the upgrade is suspended, only
 * {@link Services#AMBARI} alerts will be dispatched.
 * {@link RootService#AMBARI} alerts will be dispatched.
  * &lt;/ul&gt;
  */</comment>
 @<name>Singleton</name>
@@ <operator>-</operator><literal type="number">230</literal><operator>,</operator><literal type="number">7</literal> <operator>+</operator><literal type="number">230</literal><operator>,</operator><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>AlertStateChangedListener</name> <block>{
       <if_stmt><if>if <condition>(<expr><literal type="null">null</literal> <operator>!=</operator> <call><name><name>cluster</name><operator>.</operator><name>getUpgradeInProgress</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
         <comment type="line">// only send AMBARI alerts if in an upgrade</comment>
         <decl_stmt><decl><type><name>String</name></type> <name>serviceName</name> <init>= <expr><call><name><name>definition</name><operator>.</operator><name>getServiceName</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>StringUtils</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>serviceName</name></expr></argument>, <argument><expr><call><name><name>Services</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>StringUtils</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>serviceName</name></expr></argument>, <argument><expr><call><name><name>RootService</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
           <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>debug</name></name><argument_list>(
               <argument><expr><literal type="string">"Skipping alert notifications for {} because the cluster is upgrading"</literal></expr></argument>,
               <argument><expr><call><name><name>definition</name><operator>.</operator><name>getDefinitionName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>target</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>ldap</name><operator>/</operator><name>domain</name><operator>/</operator><name><name>AmbariLdapConfiguration</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>ldap</name><operator>/</operator><name>domain</name><operator>/</operator><name><name>AmbariLdapConfiguration</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">0c1ec0ae71</literal><operator>..</operator><literal type="number">6c466bae37</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>ldap</name><operator>/</operator><name>domain</name><operator>/</operator><name><name>AmbariLdapConfiguration</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>ldap</name><operator>/</operator><name>domain</name><operator>/</operator><name><name>AmbariLdapConfiguration</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">33</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">33</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>AmbariLdapConfiguration</name> <block>{
 
   <expr><specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name>Logger</name> <name>LOGGER</name> <operator>=</operator> <call><name><name>LoggerFactory</name><operator>.</operator><name>getLogger</name></name><argument_list>(<argument><expr><name><name>AmbariLdapConfiguration</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
 
  <specifier>private</specifier> <name>final</name> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name> <name>configurationMap</name></block></expr>;</expr_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>configurationMap</name></decl>;</decl_stmt>
 
   <function><type><specifier>private</specifier> <name>Object</name></type> <name>configValue</name><parameter_list>(<parameter><decl><type><name>AmbariLdapConfigKeys</name></type> <name>ambariLdapConfigKeys</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <decl_stmt><decl><type><name>Object</name></type> <name>value</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">45</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">45</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> class <name>AmbariLdapConfiguration</name> <block>{
     <return>return <expr><name>value</name></expr>;</return>
   }</block></expr></expr_stmt>
 
  <function><type><specifier>public</specifier> <name>void</name></type> <name>setValueFor</name><parameter_list>(<parameter><decl><type><name>AmbariLdapConfigKeys</name></type> <name>ambariLdapConfigKeys</name></decl></parameter>, <parameter><decl><type><name>Object</name></type> <name>value</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <function><type><specifier>public</specifier> <name>void</name></type> <name>setValueFor</name><parameter_list>(<parameter><decl><type><name>AmbariLdapConfigKeys</name></type> <name>ambariLdapConfigKeys</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>value</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <expr_stmt><expr><call><name><name>configurationMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>ambariLdapConfigKeys</name><operator>.</operator><name>key</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
 
   <comment type="line">// intentionally package private, instances to be created through the factory</comment>
   <decl_stmt><decl><annotation>@<name>Inject</name></annotation>
  <type><name>AmbariLdapConfiguration</name></type><argument_list>(<argument><expr><annotation>@<name>Assisted</name></annotation> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name> <name>configuration</name></expr></argument>)</argument_list> <block>{<block_content>
  <expr_stmt><expr><call><name>AmbariLdapConfiguration</name><argument_list>(<argument><expr><annotation>@<name>Assisted</name></annotation> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name> <name>configuration</name></expr></argument>)</argument_list></call> <block>{
     <expr><name><name>this</name><operator>.</operator><name>configurationMap</name></name> <operator>=</operator> <name>configuration</name></expr>;
   }</block></expr></expr_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>ldap</name><operator>/</operator><name>domain</name><operator>/</operator><name><name>AmbariLdapConfigurationFactory</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>ldap</name><operator>/</operator><name>domain</name><operator>/</operator><name><name>AmbariLdapConfigurationFactory</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">2b9f24be89</literal><operator>..</operator><name>aafd204abc</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>ldap</name><operator>/</operator><name>domain</name><operator>/</operator><name><name>AmbariLdapConfigurationFactory</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>ldap</name><operator>/</operator><name>domain</name><operator>/</operator><name><name>AmbariLdapConfigurationFactory</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">30</literal></expr><operator>,</operator><expr><literal type="number">5</literal> <operator>+</operator><literal type="number">30</literal></expr><operator>,</operator><expr><literal type="number">5</literal> @@ <specifier>public</specifier> interface <name>AmbariLdapConfigurationFactory</name> <block>{
    <expr><operator>*</operator> @<name>param</name> <name>configuration</name> <name>a</name> <name>map</name> <name>where</name> <name>keys</name> <name>are</name> <name>the</name> <name>configuration</name> <name>properties</name> <name>and</name> <name>values</name> <name>are</name> <name>the</name> <name>configuration</name> <name>values</name>
    <operator>*</operator> @</expr><return>return <expr><name>an</name> <name>AmbariLdapConfiguration</name> <name>instance</name>
    <operator>*</operator><operator>/</operator>
  <name>AmbariLdapConfiguration</name> <call><name>createLdapConfiguration</name><argument_list>(<argument><expr><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name> <name>configuration</name></expr></argument>)</argument_list></call></expr>;</return>
  <name>AmbariLdapConfiguration</name> <call><name>createLdapConfiguration</name><argument_list>(<argument><expr><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name> <name>configuration</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
 </block_content>}</block></decl></decl_stmt>
<expr_stmt><expr><operator>\</operator> <name>No</name> <name>newline</name> <name>at</name> <name>end</name> <name>of</name> <name>file</name>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>ldap</name><operator>/</operator><name>service</name><operator>/</operator><name><name>AmbariLdapConfigurationProvider</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>ldap</name><operator>/</operator><name>service</name><operator>/</operator><name><name>AmbariLdapConfigurationProvider</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>b32d1ed9fb</name><operator>..</operator><name>ac9c1bc8ee</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>ldap</name><operator>/</operator><name>service</name><operator>/</operator><name><name>AmbariLdapConfigurationProvider</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>ldap</name><operator>/</operator><name>service</name><operator>/</operator><name><name>AmbariLdapConfigurationProvider</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">84</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">84</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>AmbariLdapConfigurationProvider</name> implements <name>Provider</name><operator>&lt;</operator><name>AmbariLdapConfi</name>
     <name>configEntities</name> <operator>=</operator> <call><name><name>ambariConfigurationDAOProvider</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>findByCategory</name><argument_list>(<argument><expr><literal type="string">"ldap-configuration"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <if_stmt><if>if <condition>(<expr><name>configEntities</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>properties</name> <init>= <expr><call><name>toProperties</name><argument_list>(<argument><expr><name>configEntities</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>properties</name> <init>= <expr><call><name>toProperties</name><argument_list>(<argument><expr><name>configEntities</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><name>instance</name> <operator>=</operator> <call><name><name>ldapConfigurationFactory</name><operator>.</operator><name>createLdapConfiguration</name></name><argument_list>(<argument><expr><name>properties</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></if></if_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">93</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">93</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> class <name>AmbariLdapConfigurationProvider</name> implements <name>Provider</name><operator>&lt;</operator><name>AmbariLdapConfi</name></expr></expr_stmt>
     <return>return <expr><name>instance</name></expr>;</return>
   </block_content>}</block></function>
 
  <function><type><specifier>private</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>toProperties</name><parameter_list>(<parameter><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>AmbariConfigurationEntity</name></argument>&gt;</argument_list></name></type> <name>configEntities</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>map</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
  <function><type><specifier>private</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>toProperties</name><parameter_list>(<parameter><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>AmbariConfigurationEntity</name></argument>&gt;</argument_list></name></type> <name>configEntities</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>map</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <for>for <control>(<init><decl><type><name>AmbariConfigurationEntity</name></type> <name>entity</name> <range>: <expr><name>configEntities</name></expr></range></decl></init>)</control> <block>{<block_content>
       <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>entity</name><operator>.</operator><name>getPropertyName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>entity</name><operator>.</operator><name>getPropertyValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>metadata</name><operator>/</operator><name><name>AmbariServiceAlertDefinitions</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>metadata</name><operator>/</operator><name><name>AmbariServiceAlertDefinitions</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">1e20571ab2</literal><operator>..</operator><name>d6b0c995ff</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>metadata</name><operator>/</operator><name><name>AmbariServiceAlertDefinitions</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>metadata</name><operator>/</operator><name><name>AmbariServiceAlertDefinitions</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">23</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">23</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>RootServiceResponseFactory</name><operator>.</operator><name>Components</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>RootServiceResponseFactory</name><operator>.</operator><name>Services</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>RootComponent</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>RootService</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>alert</name><operator>.</operator><name>AlertDefinition</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>alert</name><operator>.</operator><name>AlertDefinitionFactory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">36</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">36</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>Singleton</name></name>;</import>
 <comment type="block" format="javadoc">/**
  * The {@link AmbariServiceAlertDefinitions} class is used to represent the
  * alerts defined in {@code alerts.json} which are for
 * {@link Components#AMBARI_AGENT} and {@link Components#AMBARI_SERVER}. These
 * {@link RootComponent#AMBARI_AGENT} and {@link RootComponent#AMBARI_SERVER}. These
  * alerts are bound to the host and are not part of a cluster or hadoop service.
  */</comment>
 <annotation>@<name>Singleton</name></annotation>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">67</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">67</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>AmbariServiceAlertDefinitions</name> <block>{
    <expr><operator>*</operator> <name>Gets</name> <name>all</name> <name>of</name> <name>the</name> <block>{@<expr><name>link</name> <name>AlertDefinition</name></expr>}</block><name>s</name> <name>that</name> <name>exist</name> <name>on</name> <name>the</name> <name>path</name></expr> <for>for all
    * agent hosts.
    *
   * @return the alerts with <block>{<block_content><annotation>@<name>link</name></annotation> <expr><name>Components</name><operator>#</operator><name>AMBARI_AGENT</name></expr></block_content>}</block></for> <name>as</name> <name>the</name> <name>component</name>
   <operator>*</operator> @</block></expr></expr_stmt><return>return <expr><name>the</name> <name>alerts</name> <name>with</name> <block>{@<expr><name>link</name> <name>RootComponent</name><operator>#</operator><name>AMBARI_AGENT</name></expr>}</block> <name>as</name> <name>the</name> <name>component</name>
    <operator>*</operator>         <name>and</name> <block>{@<expr><name>code</name> <name>AMBARI</name></expr>}</block> <name>as</name> <name>the</name> <name><name>service</name><operator>.</operator></name>
    *<operator>/</operator>
   <specifier>public</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>AlertDefinition</name></argument>&gt;</argument_list></name> <call><name>getAgentDefinitions</name><argument_list>()</argument_list></call> <block>{
@@ <expr><operator>-</operator><literal type="number">75</literal></expr>,<expr><literal type="number">15</literal> <operator>+</operator><literal type="number">75</literal></expr>,<expr><literal type="number">15</literal> @@ <specifier>public</specifier> class <name>AmbariServiceAlertDefinitions</name> <block>{
       <return>return <expr><name>m_agentDefinitions</name></expr>;</return>
     }</block>
 
    <name>m_agentDefinitions</name> <operator>=</operator> <call><name>getDefinitions</name><argument_list>(<argument><expr><name><name>Components</name><operator>.</operator><name>AMBARI_AGENT</name></name></expr></argument>)</argument_list></call></expr>;
    <name>m_agentDefinitions</name> <operator>=</operator> <call><name>getDefinitions</name><argument_list>(<argument><expr><name><name>RootComponent</name><operator>.</operator><name>AMBARI_AGENT</name></name></expr></argument>)</argument_list></call></block></expr>;</return>
     <return>return <expr><name>m_agentDefinitions</name></expr>;</return>
   </block_content>}</block></for>
 
   <comment type="block" format="javadoc">/**
    * Gets all of the {@link AlertDefinition}s that exist on the path for
   * {@link Components#AMBARI_SERVER}.
   * {@link RootComponent#AMBARI_SERVER}.
    *
   * @return the alerts with {@link Components#AMBARI_SERVER} as the component
   * @return the alerts with {@link RootComponent#AMBARI_SERVER} as the component
    *         and {@code AMBARI} as the service.
    */</comment>
   <function><type><specifier>public</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>AlertDefinition</name></argument>&gt;</argument_list></name></type> <name>getServerDefinitions</name><parameter_list>()</parameter_list> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">91</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">91</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>AmbariServiceAlertDefinitions</name> <block>{
       <return>return <expr><name>m_serverDefinitions</name></expr>;</return>
     }</block></expr></expr_stmt>
 
    <expr_stmt><expr><name>m_serverDefinitions</name> <operator>=</operator> <call><name>getDefinitions</name><argument_list>(<argument><expr><name><name>Components</name><operator>.</operator><name>AMBARI_SERVER</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>m_serverDefinitions</name> <operator>=</operator> <call><name>getDefinitions</name><argument_list>(<argument><expr><name><name>RootComponent</name><operator>.</operator><name>AMBARI_SERVER</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <return>return <expr><name>m_serverDefinitions</name></expr>;</return>
   </block_content>}</block></function>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">104</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">104</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>AmbariServiceAlertDefinitions</name> <block>{
    <expr><operator>*</operator> @</expr><return>return <expr><name>the</name> <name>alert</name> <name>definitions</name></expr></return> <for>for <block>{<block_content><annotation>@<name>code</name></annotation> <expr><name>AMBARI</name></expr></block_content>}</block></for> <name>service</name></block></expr></expr_stmt> <for>for the given
    *         component.
    */
  private List&lt;AlertDefinition&gt; getDefinitions<control>(<init><expr><name>Components</name> <name>component</name></expr></init>)</control> <block>{<block_content>
  <function><type><specifier>private</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>AlertDefinition</name></argument>&gt;</argument_list></name></type> <name>getDefinitions</name><parameter_list>(<parameter><decl><type><name>RootComponent</name></type> <name>component</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>AlertDefinition</name></argument>&gt;</argument_list></name></type> <name>definitions</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <decl_stmt><decl><type><name>InputStream</name></type> <name>inputStream</name> <init>= <expr><call><name><name>ClassLoader</name><operator>.</operator><name>getSystemResourceAsStream</name></name><argument_list>(<argument><expr><literal type="string">"alerts.json"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">112</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">112</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>AmbariServiceAlertDefinitions</name> <block>{
 
     <try>try <block>{<block_content>
       <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>AlertDefinition</name></argument>&gt;</argument_list></name></type> <name>allDefinitions</name> <init>= <expr><call><name><name>m_factory</name><operator>.</operator><name>getAlertDefinitions</name></name><argument_list>(
          <argument><expr><name>reader</name></expr></argument>, <argument><expr><call><name><name>Services</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <expr_stmt><expr><name>reader</name></expr><operator>,</operator> <expr><call><name><name>RootService</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></expr_stmt></block_content></block></try></block></expr></expr_stmt></block_content></block></function></block_content></block></for></block_content></block></function></block_content></block></function></block_content></block></function></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block></block></expr></expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></function></block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
       <decl_stmt><decl><type><name>String</name></type> <name>componentName</name> <init>= <expr><call><name><name>component</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>dao</name><operator>/</operator><name><name>AlertDefinitionDAO</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>dao</name><operator>/</operator><name><name>AlertDefinitionDAO</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>cda03f307b</name><operator>..</operator><literal type="number">424910b035</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>dao</name><operator>/</operator><name><name>AlertDefinitionDAO</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>dao</name><operator>/</operator><name><name>AlertDefinitionDAO</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">25</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">25</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt> <import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>EntityManager</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>TypedQuery</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>AmbariException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>RootServiceResponseFactory</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>RootComponent</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>RootService</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>internal</name><operator>.</operator><name>AlertDefinitionResourceProvider</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>events</name><operator>.</operator><name>AlertDefinitionChangedEvent</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>events</name><operator>.</operator><name>AlertDefinitionDeleteEvent</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">300</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">301</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>AlertDefinitionDAO</name> <block>{
     <expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"clusterId"</literal></expr></argument>, <argument><expr><name>clusterId</name></expr></argument>)</argument_list></call></expr>;
 
     <call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"serviceName"</literal></expr></argument>,
        <argument><expr><call><name><name>RootServiceResponseFactory</name><operator>.</operator><name>Services</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>RootService</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></expr_stmt>)</block_content></block><empty_stmt>;</empty_stmt></if></if_stmt>
 
     <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"componentName"</literal></expr></argument>,
        <argument><expr><call><name><name>RootServiceResponseFactory</name><operator>.</operator><name>Components</name><operator>.</operator><name>AMBARI_AGENT</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>RootComponent</name><operator>.</operator><name>AMBARI_AGENT</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></expr_stmt>)</block_content></block><empty_stmt>;</empty_stmt></if></if_stmt>
 
     <return>return <expr><call><name><name>daoUtils</name><operator>.</operator><name>selectList</name></name><argument_list>(<argument><expr><name>query</name></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>dao</name><operator>/</operator><name><name>AlertDispatchDAO</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>dao</name><operator>/</operator><name><name>AlertDispatchDAO</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">5c6a82ffcf</literal><operator>..</operator><literal type="number">1746048113</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>dao</name><operator>/</operator><name><name>AlertDispatchDAO</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>dao</name><operator>/</operator><name><name>AlertDispatchDAO</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">33</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">33</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>AmbariException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>api</name><operator>.</operator><name>query</name><operator>.</operator><name>JpaPredicateVisitor</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>api</name><operator>.</operator><name>query</name><operator>.</operator><name>JpaSortBuilder</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>AlertNoticeRequest</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>RootServiceResponseFactory</name><operator>.</operator><name>Services</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>RootService</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>Predicate</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>utilities</name><operator>.</operator><name>PredicateHelper</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>RequiresSession</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">452</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">452</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>AlertDispatchDAO</name> <block>{
 
     <comment type="line">// AMBARI is a special service that we let through, otherwise we need to</comment>
     <comment type="line">// verify that the service exists before we create the default group</comment>
    <expr><name>String</name> <name>ambariServiceName</name> <operator>=</operator> <call><name><name>Services</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr>;
    <name>String</name> <name>ambariServiceName</name> <operator>=</operator> <call><name><name>RootService</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>ambariServiceName</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>serviceName</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
       <decl_stmt><decl><type><name>Cluster</name></type> <name>cluster</name> <init>= <expr><call><name><name>m_clusters</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClusterById</name><argument_list>(<argument><expr><name>clusterId</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Service</name></argument>&gt;</argument_list></name></type> <name>services</name> <init>= <expr><call><name><name>cluster</name><operator>.</operator><name>getServices</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name>alert</name><operator>/</operator><name><name>AlertDefinitionHash</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name>alert</name><operator>/</operator><name><name>AlertDefinitionHash</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">15f7048ab0</literal><operator>..</operator><name>a1c7249805</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name>alert</name><operator>/</operator><name><name>AlertDefinitionHash</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name>alert</name><operator>/</operator><name><name>AlertDefinitionHash</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">37</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">37</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>ClusterNotFoundException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>agent</name><operator>.</operator><name>ActionQueue</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>agent</name><operator>.</operator><name>AgentCommand</name><operator>.</operator><name>AgentCommandType</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>agent</name><operator>.</operator><name>AlertDefinitionCommand</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>RootServiceResponseFactory</name><operator>.</operator><name>Components</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>RootServiceResponseFactory</name><operator>.</operator><name>Services</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>RootComponent</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>RootService</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>dao</name><operator>.</operator><name>AlertDefinitionDAO</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>AlertDefinitionEntity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>Cluster</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">375</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">375</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>AlertDefinitionHash</name> <block>{
       <return>return <expr><name>affectedHosts</name></expr>;</return>
     }</block></expr></expr_stmt>
 
    <decl_stmt><decl><type><name>String</name></type> <name>ambariServiceName</name> <init>= <expr><call><name><name>Services</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>agentComponentName</name> <init>= <expr><call><name><name>Components</name><operator>.</operator><name>AMBARI_AGENT</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>ambariServiceName</name> <init>= <expr><call><name><name>RootService</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>agentComponentName</name> <init>= <expr><call><name><name>RootComponent</name><operator>.</operator><name>AMBARI_AGENT</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <comment type="line">// intercept host agent alerts; they affect all hosts</comment>
     <if_stmt><if>if <condition>(<decl_stmt><expr><call><name><name>ambariServiceName</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>definitionServiceName</name></expr></argument>)</argument_list></call>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name>cluster</name><operator>/</operator><name><name>ClusterImpl</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name>cluster</name><operator>/</operator><name><name>ClusterImpl</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">9c0b0ca01a</literal><operator>..</operator><literal type="number">8f5e4f48a5</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name>cluster</name><operator>/</operator><name><name>ClusterImpl</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name>cluster</name><operator>/</operator><name><name>ClusterImpl</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">57</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">57</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></decl_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>AmbariSessionManager</name></name>;</import>
 <expr><name>import</name> <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>ClusterResponse</name></name></expr></condition><empty_stmt>;</empty_stmt></if></if_stmt>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>ConfigurationResponse</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>MaintenanceStateHelper</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>RootServiceResponseFactory</name><operator>.</operator><name>Services</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>RootService</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>ServiceConfigVersionResponse</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>events</name><operator>.</operator><name>AmbariEvent</name><operator>.</operator><name>AmbariEventType</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>events</name><operator>.</operator><name>ClusterConfigChangedEvent</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">2050</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">2050</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ClusterImpl</name> implements <name>Cluster</name> <block>{
       <comment type="line">// server-side events either don't have a service name or are AMBARI;</comment>
       <comment type="line">// either way they are not handled by this method since it expects a</comment>
       <comment type="line">// real service and component</comment>
      <if_stmt><if>if <condition>(<expr><call><name><name>StringUtils</name><operator>.</operator><name>isBlank</name></name><argument_list>(<argument><expr><name>serviceName</name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name><name>Services</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>serviceName</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><call><name><name>StringUtils</name><operator>.</operator><name>isBlank</name></name><argument_list>(<argument><expr><name>serviceName</name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name><name>RootService</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>serviceName</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
         <continue>continue;</continue>
       </block_content>}</block></if></if_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name>services</name><operator>/</operator><name><name>AmbariServerAlertService</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name>services</name><operator>/</operator><name><name>AmbariServerAlertService</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>d3237a94b8</name><operator>..</operator><literal type="number">305f693741</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name>services</name><operator>/</operator><name><name>AmbariServerAlertService</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name>services</name><operator>/</operator><name><name>AmbariServerAlertService</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">29</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">29</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>TimeUnit</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>AmbariService</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>alerts</name><operator>.</operator><name>AlertRunnable</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>RootServiceResponseFactory</name><operator>.</operator><name>Components</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>RootComponent</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>dao</name><operator>.</operator><name>AlertDefinitionDAO</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>AlertDefinitionEntity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>Cluster</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">133</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">133</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariServerAlertService</name> extends <name>AbstractScheduledService</name> <block>{
   <comment type="block" format="javadoc">/**
    * {@inheritDoc}
    * &lt;p/&gt;
   * Compares all known {@link Components#AMBARI_SERVER} alerts with those that
   * Compares all known {@link RootComponent#AMBARI_SERVER} alerts with those that
    * are scheduled. If any are not scheduled or have their intervals changed,
    * then reschedule those.
    */</comment>
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name>stackadvisor</name><operator>/</operator><name>commands</name><operator>/</operator><name><name>StackAdvisorCommandTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name>stackadvisor</name><operator>/</operator><name>commands</name><operator>/</operator><name><name>StackAdvisorCommandTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">959db1547b</literal><operator>..</operator><literal type="number">2afbf8aa87</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name>stackadvisor</name><operator>/</operator><name>commands</name><operator>/</operator><name><name>StackAdvisorCommandTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name>stackadvisor</name><operator>/</operator><name>commands</name><operator>/</operator><name><name>StackAdvisorCommandTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">301</literal></expr>,<expr><literal type="number">9</literal> <operator>+</operator><literal type="number">301</literal></expr>,<expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>StackAdvisorCommandTest</name> <block>{
       <expr><literal type="string">"items"</literal></expr>,
       <expr><call><name>list</name><argument_list>(
         <argument><expr><call><name>map</name><argument_list>(
          <argument><expr><literal type="string">"AmbariConfiguration"</literal></expr></argument>,
          <argument><expr><literal type="string">"Configuration"</literal></expr></argument>,
           <argument><expr><call><name>map</name><argument_list>(
            <argument><expr><literal type="string">"data"</literal></expr></argument>, <argument><expr><call><name>list</name><argument_list>(<argument><expr><name>ldapConfigData</name></expr></argument>)</argument_list></call>
            <literal type="string">"properties"</literal></expr></argument>, <argument><expr><name>ldapConfigData</name></expr></argument>
           )</argument_list></call></expr></argument>
         )</argument_list></call></expr></argument>
       )</argument_list></call>
@@ <operator>-</operator><literal type="number">380</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">380</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>StackAdvisorCommandTest</name> <block>{
       <expr><literal type="string">"items"</literal></expr>,
       <expr><call><name>list</name><argument_list>(
         <argument><expr><call><name>map</name><argument_list>(
          <argument><expr><literal type="string">"AmbariConfiguration"</literal></expr></argument>,
          <argument><expr><literal type="string">"Configuration"</literal></expr></argument>,
           <argument><expr><call><name>map</name><argument_list>(
             <argument><expr><literal type="string">"data"</literal></expr></argument>,
             <argument><expr><call><name>list</name><argument_list>(<argument><expr><name>ldapConfigData</name></expr></argument>, <argument><expr><name>ldapConfigData</name></expr></argument>)</argument_list></call>
@@ <operator>-</operator><literal type="number">417</literal></expr></argument>,<argument><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">417</literal></expr></argument>,<argument><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>StackAdvisorCommandTest</name> <block>{
       <expr><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr>;
 
     <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name> <name>ldapConfig</name> <operator>=</operator> <call><name>map</name><argument_list>(
      <argument><expr><literal type="string">"AmbariConfiguration"</literal></expr></argument>,
      <argument><expr><literal type="string">"Configuration"</literal></expr></argument>,
       <argument><expr><call><name>map</name><argument_list>(
         <argument><expr><literal type="string">"data"</literal></expr></argument>,
         <argument><expr><call><name>list</name><argument_list>(
<argument><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>AmbariManagementControllerTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>AmbariManagementControllerTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">7094caae87</literal><operator>..</operator><name>d95dcef2e0</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>AmbariManagementControllerTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>AmbariManagementControllerTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">8248</literal></expr></argument>,<argument><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">8248</literal></expr></argument>,<argument><expr><literal type="number">13</literal> @@ <specifier>public</specifier> class <name>AmbariManagementControllerTest</name> <block>{
 
     <expr><name>RootServiceRequest</name> <name>request</name> <operator>=</operator> <operator>new</operator> <call><name>RootServiceRequest</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;
     <name><name>Set</name><argument_list type="generic">&lt;<argument><name>RootServiceResponse</name></argument>&gt;</argument_list></name> <name>responses</name> <operator>=</operator> <call><name><name>controller</name><operator>.</operator><name>getRootServices</name></name><argument_list>(<argument><expr><call><name><name>Collections</name><operator>.</operator><name>singleton</name></name><argument_list>(<argument><expr><name>request</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></block></expr></argument>;</argument_list></call></expr></argument></argument_list></call></expr></argument></argument_list></call>
    <call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><call><name><name>RootServiceResponseFactory</name><operator>.</operator><name>Services</name><operator>.</operator><name>values</name></name><argument_list>()</argument_list></call><operator>.</operator><name>length</name></expr></argument>, <argument><expr><call><name><name>responses</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr></argument>;</argument_list></call></expr></argument></argument_list></call></expr></argument></argument_list></call></expr>
    <call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><call><name><name>RootService</name><operator>.</operator><name>values</name></name><argument_list>()</argument_list></call><operator>.</operator><name>length</name></expr></argument>, <argument><expr><call><name><name>responses</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;
 
    <name>RootServiceRequest</name> <name>requestWithParams</name> <operator>=</operator> <operator>new</operator> <call><name>RootServiceRequest</name><argument_list>(<argument><expr><call><name><name>RootServiceResponseFactory</name><operator>.</operator><name>Services</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;
    <name>RootServiceRequest</name> <name>requestWithParams</name> <operator>=</operator> <operator>new</operator> <call><name>RootServiceRequest</name><argument_list>(<argument><expr><call><name><name>RootService</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>RootServiceResponse</name></argument>&gt;</argument_list></name></type> <name>responsesWithParams</name> <init>= <expr><call><name><name>controller</name><operator>.</operator><name>getRootServices</name></name><argument_list>(<argument><expr><call><name><name>Collections</name><operator>.</operator><name>singleton</name></name><argument_list>(<argument><expr><name>requestWithParams</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><call><name><name>responsesWithParams</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <for>for <control>(<init><decl><type><name>RootServiceResponse</name></type> <name>responseWithParams</name><range>: <expr><name>responsesWithParams</name></expr></range></decl></init>)</control> <block>{<block_content>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><call><name><name>responseWithParams</name><operator>.</operator><name>getServiceName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>RootServiceResponseFactory</name><operator>.</operator><name>Services</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><call><name><name>responseWithParams</name><operator>.</operator><name>getServiceName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>RootService</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></for>
 
     <decl_stmt><decl><type><name>RootServiceRequest</name></type> <name>invalidRequest</name> <init>= <expr><operator>new</operator> <call><name>RootServiceRequest</name><argument_list>(<argument><expr><name>NON_EXT_VALUE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">8268</literal></expr><operator>,</operator><expr><literal type="number">18</literal> <operator>+</operator><literal type="number">8268</literal></expr><operator>,</operator><expr><literal type="number">18</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariManagementControllerTest</name> <block>{
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testGetRootServiceComponents</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
 
    <expr><name>RootServiceComponentRequest</name> <name>request</name> <operator>=</operator> <operator>new</operator> <call><name>RootServiceComponentRequest</name><argument_list>(<argument><expr><call><name><name>RootServiceResponseFactory</name><operator>.</operator><name>Services</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>RootServiceComponentRequest</name> <name>request</name> <operator>=</operator> <operator>new</operator> <call><name>RootServiceComponentRequest</name><argument_list>(<argument><expr><call><name><name>RootService</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>RootServiceComponentResponse</name></argument>&gt;</argument_list></name></type> <name>responses</name> <init>= <expr><call><name><name>controller</name><operator>.</operator><name>getRootServiceComponents</name></name><argument_list>(<argument><expr><call><name><name>Collections</name><operator>.</operator><name>singleton</name></name><argument_list>(<argument><expr><name>request</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><call><name><name>RootServiceResponseFactory</name><operator>.</operator><name>Services</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>getComponents</name></name><argument_list>()</argument_list></call><operator>.</operator><name>length</name></expr></argument>, <argument><expr><call><name><name>responses</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><call><name><name>RootService</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>getComponents</name></name><argument_list>()</argument_list></call><operator>.</operator><name>length</name></expr></argument>, <argument><expr><call><name><name>responses</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><name>RootServiceComponentRequest</name></type> <name>requestWithParams</name> <init>= <expr><operator>new</operator> <call><name>RootServiceComponentRequest</name><argument_list>(
        <argument><expr><call><name><name>RootServiceResponseFactory</name><operator>.</operator><name>Services</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>,
        <argument><expr><call><name><name>RootServiceResponseFactory</name><operator>.</operator><name>Services</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>getComponents</name></name><argument_list>()</argument_list></call><index>[<expr><literal type="number">0</literal></expr>]</index><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>RootService</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr><operator>,</operator>
        <expr><call><name><name>RootService</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>getComponents</name></name><argument_list>()</argument_list></call><index>[<expr><literal type="number">0</literal></expr>]</index><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></expr_stmt>)</block_content></block><empty_stmt>;</empty_stmt></if></if_stmt>
 
     <name><name>Set</name><argument_list type="generic">&lt;<argument><name>RootServiceComponentResponse</name></argument>&gt;</argument_list></name> <name>responsesWithParams</name> <operator>=</operator> <call><name><name>controller</name><operator>.</operator><name>getRootServiceComponents</name></name><argument_list>(<argument><expr><call><name><name>Collections</name><operator>.</operator><name>singleton</name></name><argument_list>(<argument><expr><name>requestWithParams</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><call><name><name>responsesWithParams</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <for>for <control>(<init><decl><type><name>RootServiceComponentResponse</name></type> <name>responseWithParams</name><range>: <expr><name>responsesWithParams</name></expr></range></decl></init>)</control> <block>{<block_content>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><call><name><name>responseWithParams</name><operator>.</operator><name>getComponentName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>RootServiceResponseFactory</name><operator>.</operator><name>Services</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>getComponents</name></name><argument_list>()</argument_list></call><index>[<expr><literal type="number">0</literal></expr>]</index><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><call><name><name>responseWithParams</name><operator>.</operator><name>getComponentName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>RootService</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>getComponents</name></name><argument_list>()</argument_list></call><index>[<expr><literal type="number">0</literal></expr>]</index><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></for>
 
     <decl_stmt><decl><type><name>RootServiceComponentRequest</name></type> <name>invalidRequest</name> <init>= <expr><operator>new</operator> <call><name>RootServiceComponentRequest</name><argument_list>(<argument><expr><name>NON_EXT_VALUE</name></expr></argument>, <argument><expr><name>NON_EXT_VALUE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>RootServiceResponseFactoryTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>RootServiceResponseFactoryTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>c27ef7e0dd</name><operator>..</operator><name>e194115c17</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>RootServiceResponseFactoryTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>RootServiceResponseFactoryTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">29</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">29</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>AmbariException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>H2DatabaseCleaner</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>ObjectNotFoundException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>api</name><operator>.</operator><name>services</name><operator>.</operator><name>AmbariMetaInfo</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>RootServiceResponseFactory</name><operator>.</operator><name>Components</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>GuiceJpaInitializer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>InMemoryDefaultTestModule</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>After</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">66</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">65</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>RootServiceResponseFactoryTest</name> <block>{
     <comment type="line">// Request a null service name</comment>
     <expr><name>RootServiceRequest</name> <name>request</name> <operator>=</operator> <operator>new</operator> <call><name>RootServiceRequest</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;
     <name><name>Set</name><argument_list type="generic">&lt;<argument><name>RootServiceResponse</name></argument>&gt;</argument_list></name> <name>rootServices</name> <operator>=</operator> <call><name><name>responseFactory</name><operator>.</operator><name>getRootServices</name></name><argument_list>(<argument><expr><name>request</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>RootServiceResponseFactory</name><operator>.</operator><name>Services</name><operator>.</operator><name>values</name></name><argument_list>()</argument_list></call><operator>.</operator><name>length</name></expr></argument>,
    <argument><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>RootService</name><operator>.</operator><name>values</name></name><argument_list>()</argument_list></call><operator>.</operator><name>length</name></expr></argument>,
         <argument><expr><call><name><name>rootServices</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>;</argument_list></call></expr></expr_stmt>
 
     <comment type="line">// null request</comment>
     <expr_stmt><expr><name>request</name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
     <expr_stmt><expr><name>rootServices</name> <operator>=</operator> <call><name><name>responseFactory</name><operator>.</operator><name>getRootServices</name></name><argument_list>(<argument><expr><name>request</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>RootServiceResponseFactory</name><operator>.</operator><name>Services</name><operator>.</operator><name>values</name></name><argument_list>()</argument_list></call><operator>.</operator><name>length</name></expr></argument>,
    <argument><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>RootService</name><operator>.</operator><name>values</name></name><argument_list>()</argument_list></call><operator>.</operator><name>length</name></expr></argument>,
         <argument><expr><call><name><name>rootServices</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>;</argument_list></call></expr></expr_stmt>
 
     <comment type="line">// Request nonexistent service</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">85</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">84</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>RootServiceResponseFactoryTest</name> <block>{
 
     <comment type="line">// Request existent service</comment>
     <expr><name>request</name> <operator>=</operator> <operator>new</operator> <call><name>RootServiceRequest</name><argument_list>(
        <argument><expr><call><name><name>RootServiceResponseFactory</name><operator>.</operator><name>Services</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <call><name><name>RootService</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call>)</block></expr>;</expr_stmt>
 
     <expr_stmt><expr><name>rootServices</name> <operator>=</operator> <call><name><name>responseFactory</name><operator>.</operator><name>getRootServices</name></name><argument_list>(<argument><expr><name>request</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><call><name><name>rootServices</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>rootServices</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>RootServiceResponse</name><argument_list>(
        <argument><expr><call><name><name>RootServiceResponseFactory</name><operator>.</operator><name>Services</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>RootService</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></expr_stmt>)</block_content></block></if></if_stmt>)</block_content></block></if></if_stmt>)</block_content></block><empty_stmt>;</empty_stmt></switch>
   </block_content>}</block></function>
 
   <annotation>@<name>Test</name></annotation>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">106</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">105</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>RootServiceResponseFactoryTest</name> <block>{
       <expr><call><name>assertTrue</name><argument_list>(<argument><expr><name>e</name> <operator>instanceof</operator> <name>ObjectNotFoundException</name></expr></argument>)</argument_list></call></expr>;
     }</block>
 
    <name><name>RootServiceResponseFactory</name><operator>.</operator><name>Components</name></name> <name>ambariServerComponent</name> <operator>=</operator> <name><name>RootServiceResponseFactory</name><operator>.</operator><name>Components</name><operator>.</operator><name>AMBARI_SERVER</name></name></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>RootComponent</name></type> <name>ambariServerComponent</name> <init>= <expr><name><name>RootComponent</name><operator>.</operator><name>AMBARI_SERVER</name></name></expr></init></decl>;</decl_stmt>
 
     <comment type="line">// Request null service name, not-null component name</comment>
     <expr_stmt><expr><name>request</name> <operator>=</operator> <operator>new</operator> <call><name>RootServiceComponentRequest</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><call><name><name>ambariServerComponent</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">118</literal></expr><operator>,</operator><expr><literal type="number">18</literal> <operator>+</operator><literal type="number">117</literal></expr><operator>,</operator><expr><literal type="number">18</literal> @@ <specifier>public</specifier> <name>class</name> <name>RootServiceResponseFactoryTest</name> <block>{
     }</block>
 
     <comment type="line">// Request existent service name, null component name</comment>
    <name>String</name> <name>serviceName</name> <operator>=</operator> <call><name><name>RootServiceResponseFactory</name><operator>.</operator><name>Services</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>serviceName</name> <init>= <expr><call><name><name>RootService</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><name>request</name> <operator>=</operator> <operator>new</operator> <call><name>RootServiceComponentRequest</name><argument_list>(<argument><expr><name>serviceName</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <expr_stmt><expr><name>rootServiceComponents</name> <operator>=</operator> <call><name><name>responseFactory</name><operator>.</operator><name>getRootServiceComponents</name></name><argument_list>(<argument><expr><name>request</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(
        <argument><expr><call><name><name>RootServiceResponseFactory</name><operator>.</operator><name>Services</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>getComponents</name></name><argument_list>()</argument_list></call><operator>.</operator><name>length</name></expr></argument>,
        <argument><expr><call><name><name>RootService</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>getComponents</name></name><argument_list>()</argument_list></call><operator>.</operator><name>length</name></expr></argument>,
         <argument><expr><call><name><name>rootServiceComponents</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><name>String</name></type> <name>ambariVersion</name> <init>= <expr><call><name><name>ambariMetaInfo</name><operator>.</operator><name>getServerVersion</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name><name>RootServiceResponseFactory</name><operator>.</operator><name>Services</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>getComponents</name></name><argument_list>()</argument_list></call><operator>.</operator><name>length</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
      <decl_stmt><decl><type><name>Components</name></type> <name>component</name> <init>= <expr><call><name><name>RootServiceResponseFactory</name><operator>.</operator><name>Services</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>getComponents</name></name><argument_list>()</argument_list></call><index>[<expr><name>i</name></expr>]</index></expr></init></decl>;</decl_stmt>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name><name>RootService</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>getComponents</name></name><argument_list>()</argument_list></call><operator>.</operator><name>length</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
      <decl_stmt><decl><type><name>RootComponent</name></type> <name>component</name> <init>= <expr><call><name><name>RootService</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>getComponents</name></name><argument_list>()</argument_list></call><index>[<expr><name>i</name></expr>]</index></expr></init></decl>;</decl_stmt>
 
       <if_stmt><if>if <condition>(<expr><call><name><name>component</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><call><name><name>ambariServerComponent</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
         <for>for <control>(<init><decl><type><name>RootServiceComponentResponse</name></type> <name>response</name> <range>: <expr><name>rootServiceComponents</name></expr></range></decl></init>)</control> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">148</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">147</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ <specifier>public</specifier> <name>class</name> <name>RootServiceResponseFactoryTest</name> <block>{
 
     <comment type="line">// Request existent service name, existent component name</comment>
     <expr><name>request</name> <operator>=</operator> <operator>new</operator> <call><name>RootServiceComponentRequest</name><argument_list>(
        <argument><expr><call><name><name>RootServiceResponseFactory</name><operator>.</operator><name>Services</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>,
        <argument><expr><call><name><name>RootServiceResponseFactory</name><operator>.</operator><name>Services</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>getComponents</name></name><argument_list>()</argument_list></call><index>[<expr><literal type="number">0</literal></expr>]</index><operator>.</operator><call><name>name</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <call><name><name>RootService</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call><operator>,</operator>
        <call><name><name>RootService</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>getComponents</name></name><argument_list>()</argument_list></call><index>[<expr><literal type="number">0</literal></expr>]</index><operator>.</operator><call><name>name</name><argument_list>()</argument_list></call>)</block></expr>;</expr_stmt>
 
     <expr_stmt><expr><name>rootServiceComponents</name> <operator>=</operator> <call><name><name>responseFactory</name><operator>.</operator><name>getRootServiceComponents</name></name><argument_list>(<argument><expr><name>request</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><call><name><name>rootServiceComponents</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <for>for <control>(<init><decl><type><name>RootServiceComponentResponse</name></type> <name>response</name> <range>: <expr><name>rootServiceComponents</name></expr></range></decl></init>)</control> <block>{<block_content>
       <if_stmt><if>if <condition>(<expr><call><name><name>response</name><operator>.</operator><name>getComponentName</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(
          <argument><expr><call><name><name>RootServiceResponseFactory</name><operator>.</operator><name>Services</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>getComponents</name></name><argument_list>()</argument_list></call><index>[<expr><literal type="number">0</literal></expr>]</index><operator>.</operator><call><name>name</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name><name>RootService</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>getComponents</name></name><argument_list>()</argument_list></call><index>[<expr><literal type="number">0</literal></expr>]</index><operator>.</operator><call><name>name</name><argument_list>()</argument_list></call></expr></expr_stmt>)</block_content></block></if></if_stmt>)</block_content> <block>{<block_content>
         <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>ambariVersion</name></expr></argument>, <argument><expr><call><name><name>response</name><operator>.</operator><name>getComponentVersion</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><call><name><name>response</name><operator>.</operator><name>getProperties</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>response</name><operator>.</operator><name>getProperties</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>containsKey</name><argument_list>(<argument><expr><literal type="string">"jdk_location"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">166</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">165</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>RootServiceResponseFactoryTest</name> <block>{
     <comment type="line">// Request existent service name, and component, not belongs to requested</comment>
     <comment type="line">// service</comment>
     <expr><name>request</name> <operator>=</operator> <operator>new</operator> <call><name>RootServiceComponentRequest</name><argument_list>(
        <argument><expr><call><name><name>RootServiceResponseFactory</name><operator>.</operator><name>Services</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"XXX"</literal></expr></argument>)</argument_list></call></expr>;
        <call><name><name>RootService</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call><operator>,</operator> <literal type="string">"XXX"</literal>)</block></expr>;</expr_stmt>
     
     <try>try <block>{<block_content>
       <expr_stmt><expr><name>rootServiceComponents</name> <operator>=</operator> <call><name><name>responseFactory</name><operator>.</operator><name>getRootServiceComponents</name></name><argument_list>(<argument><expr><name>request</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>AmbariConfigurationResourceProviderTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>RootServiceComponentConfigurationResourceProviderTest</name><operator>.</operator><name>java</name></name>
<name>similarity</name> <name>index</name> <literal type="number">78</literal><operator>%</operator>
<name>rename</name> <name>from</name> <name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>AmbariConfigurationResourceProviderTest</name><operator>.</operator><name>java</name></name>
<name>rename</name> <name>to</name> <name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>RootServiceComponentConfigurationResourceProviderTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>a2ecb271ed</name><operator>..</operator><literal type="number">5016160c65</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>AmbariConfigurationResourceProviderTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>RootServiceComponentConfigurationResourceProviderTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">14</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">14</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@</expr></expr_stmt>
 
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>internal</name></name>;</package>
 
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>internal</name><operator>.</operator><name>AmbariConfigurationResourceProvider</name><operator>.</operator><name>AMBARI_CONFIGURATION_CATEGORY_PROPERTY_ID</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>internal</name><operator>.</operator><name>AmbariConfigurationResourceProvider</name><operator>.</operator><name>AMBARI_CONFIGURATION_PROPERTIES_PROPERTY_ID</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>internal</name><operator>.</operator><name>RootServiceComponentConfigurationResourceProvider</name><operator>.</operator><name>CONFIGURATION_CATEGORY_PROPERTY_ID</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>internal</name><operator>.</operator><name>RootServiceComponentConfigurationResourceProvider</name><operator>.</operator><name>CONFIGURATION_COMPONENT_NAME_PROPERTY_ID</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>internal</name><operator>.</operator><name>RootServiceComponentConfigurationResourceProvider</name><operator>.</operator><name>CONFIGURATION_PROPERTIES_PROPERTY_ID</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>internal</name><operator>.</operator><name>RootServiceComponentConfigurationResourceProvider</name><operator>.</operator><name>CONFIGURATION_SERVICE_NAME_PROPERTY_ID</name></name>;</import>
 <import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>anyObject</name></name>;</import>
 <import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>capture</name></name>;</import>
 <import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>eq</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">33</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">35</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>TreeMap</name></name>;</import>
 
 <import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>EntityManager</name></name>;</import>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>RootComponent</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>RootService</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>predicate</name><operator>.</operator><name>AndPredicate</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>Predicate</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>Request</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>Resource</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">55</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">60</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@</expr></expr_stmt> <import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>AbstractModule</name></name>;</import>
 <import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>Guice</name></name>;</import>
 <import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>Injector</name></name>;</import>
 
<class><specifier>public</specifier> class <name>AmbariConfigurationResourceProviderTest</name> <super_list><extends>extends <super><name>EasyMockSupport</name></super></extends></super_list> <block>{
<import>import <name><name>junit</name><operator>.</operator><name>framework</name><operator>.</operator><name>Assert</name></name>;</import>

<class><specifier>public</specifier> class <name>RootServiceComponentConfigurationResourceProviderTest</name> <super_list><extends>extends <super><name>EasyMockSupport</name></super></extends></super_list> <block>{
 
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>CATEGORY_NAME_1</name> <init>= <expr><literal type="string">"test-category-1"</literal></expr></init></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>CATEGORY_NAME_2</name> <init>= <expr><literal type="string">"test-category-2"</literal></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">93</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">100</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariConfigurationResourceProviderTest</name> extends <name>EasyMockSupport</name> <block>{
   <expr><specifier>private</specifier> <name>void</name> <call><name>testCreateResources</name><argument_list>(<argument><expr><name>Authentication</name> <name>authentication</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><name>Injector</name> <name>injector</name> <operator>=</operator> <call><name>createInjector</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
 
    <name>ResourceProvider</name> <name>resourceProvider</name> <operator>=</operator> <call><name><name>injector</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name><name>AmbariConfigurationResourceProvider</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>ResourceProvider</name></type> <name>resourceProvider</name> <init>= <expr><call><name><name>injector</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name><name>RootServiceComponentConfigurationResourceProvider</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>propertySets</name> <init>= <expr><operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">165</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">172</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariConfigurationResourceProviderTest</name> extends <name>EasyMockSupport</name> <block>{
   <expr><specifier>private</specifier> <name>void</name> <call><name>testDeleteResources</name><argument_list>(<argument><expr><name>Authentication</name> <name>authentication</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><name>Injector</name> <name>injector</name> <operator>=</operator> <call><name>createInjector</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
 
    <name>ResourceProvider</name> <name>resourceProvider</name> <operator>=</operator> <call><name><name>injector</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name><name>AmbariConfigurationResourceProvider</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>ResourceProvider</name></type> <name>resourceProvider</name> <init>= <expr><call><name><name>injector</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name><name>RootServiceComponentConfigurationResourceProvider</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
    <decl_stmt><decl><type><name>Predicate</name></type> <name>predicate</name> <init>= <expr><operator>new</operator> <call><name>PredicateBuilder</name><argument_list>()</argument_list></call>
        <operator>.</operator><call><name>property</name><argument_list>(<argument><expr><name>AMBARI_CONFIGURATION_CATEGORY_PROPERTY_ID</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>CATEGORY_NAME_1</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>toPredicate</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Predicate</name></type> <name>predicate</name> <init>= <expr><call><name>createPredicate</name><argument_list>(<argument><expr><call><name><name>RootService</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>RootComponent</name><operator>.</operator><name>AMBARI_SERVER</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>CATEGORY_NAME_1</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <decl_stmt><decl><type><name>Request</name></type> <name>request</name> <init>= <expr><call><name>createMock</name><argument_list>(<argument><expr><name><name>Request</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">218</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">222</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariConfigurationResourceProviderTest</name> extends <name>EasyMockSupport</name> <block>{
   <expr><specifier>private</specifier> <name>void</name> <call><name>testGetResources</name><argument_list>(<argument><expr><name>Authentication</name> <name>authentication</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><name>Injector</name> <name>injector</name> <operator>=</operator> <call><name>createInjector</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
 
    <name>ResourceProvider</name> <name>resourceProvider</name> <operator>=</operator> <call><name><name>injector</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name><name>AmbariConfigurationResourceProvider</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>ResourceProvider</name></type> <name>resourceProvider</name> <init>= <expr><call><name><name>injector</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name><name>RootServiceComponentConfigurationResourceProvider</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
    <decl_stmt><decl><type><name>Predicate</name></type> <name>predicate</name> <init>= <expr><operator>new</operator> <call><name>PredicateBuilder</name><argument_list>()</argument_list></call>
        <operator>.</operator><call><name>property</name><argument_list>(<argument><expr><name>AMBARI_CONFIGURATION_CATEGORY_PROPERTY_ID</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>CATEGORY_NAME_1</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>toPredicate</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Predicate</name></type> <name>predicate</name> <init>= <expr><call><name>createPredicate</name><argument_list>(<argument><expr><call><name><name>RootService</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>RootComponent</name><operator>.</operator><name>AMBARI_SERVER</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>CATEGORY_NAME_1</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <decl_stmt><decl><type><name>Request</name></type> <name>request</name> <init>= <expr><call><name>createMock</name><argument_list>(<argument><expr><name><name>Request</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>request</name><operator>.</operator><name>getPropertyIds</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>anyTimes</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">243</literal></expr><operator>,</operator><expr><literal type="number">22</literal> <operator>+</operator><literal type="number">244</literal></expr><operator>,</operator><expr><literal type="number">22</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariConfigurationResourceProviderTest</name> extends <name>EasyMockSupport</name> <block>{
 
     <expr><call><name>verifyAll</name><argument_list>()</argument_list></call></expr>;
 
    <call><name><name>junit</name><operator>.</operator><name>framework</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertNotNull</name></name><argument_list>(<argument><expr><name>response</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>junit</name><operator>.</operator><name>framework</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><call><name><name>response</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <constructor_decl><name><name>Assert</name><operator>.</operator><name>assertNotNull</name></name><parameter_list>(<parameter><decl><type><name>response</name></type></decl></parameter>)</parameter_list>;</constructor_decl>
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><call><name><name>response</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><name>Resource</name></type> <name>resource</name> <init>= <expr><call><name><name>response</name><operator>.</operator><name>iterator</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>next</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>junit</name><operator>.</operator><name>framework</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>AmbariConfiguration</name></name></expr></argument>, <argument><expr><call><name><name>resource</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>RootServiceComponentConfiguration</name></name></expr></argument>, <argument><expr><call><name><name>resource</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>propertiesMap</name> <init>= <expr><call><name><name>resource</name><operator>.</operator><name>getPropertiesMap</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>junit</name><operator>.</operator><name>framework</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><call><name><name>propertiesMap</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><call><name><name>propertiesMap</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
    <expr_stmt><expr><call><name><name>junit</name><operator>.</operator><name>framework</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><name>CATEGORY_NAME_1</name></expr></argument>, <argument><expr><call><name><name>propertiesMap</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>AmbariConfiguration</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"category"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><name>CATEGORY_NAME_1</name></expr></argument>, <argument><expr><call><name><name>propertiesMap</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>RootServiceComponentConfigurationResourceProvider</name><operator>.</operator><name>RESOURCE_KEY</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"category"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>retrievedProperties</name> <init>= <expr><call><name><name>propertiesMap</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>AmbariConfiguration</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"/properties"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>junit</name><operator>.</operator><name>framework</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><call><name><name>retrievedProperties</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>retrievedProperties</name> <init>= <expr><call><name><name>propertiesMap</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>RootServiceComponentConfigurationResourceProvider</name><operator>.</operator><name>RESOURCE_KEY</name></name> <operator>+</operator> <literal type="string">"/properties"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><call><name><name>retrievedProperties</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <for>for <control>(<init><decl><type><name><name>Map</name><operator>.</operator><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></name></type> <name>entry</name> <range>: <expr><call><name><name>properties</name><operator>.</operator><name>entrySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
      <expr_stmt><expr><call><name><name>junit</name><operator>.</operator><name>framework</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retrievedProperties</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>entry</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retrievedProperties</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>entry</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></for>
   }</block></class>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">290</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">291</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariConfigurationResourceProviderTest</name> extends <name>EasyMockSupport</name> <block>{
   <expr><specifier>private</specifier> <name>void</name> <call><name>testUpdateResources</name><argument_list>(<argument><expr><name>Authentication</name> <name>authentication</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><name>Injector</name> <name>injector</name> <operator>=</operator> <call><name>createInjector</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
 
    <name>ResourceProvider</name> <name>resourceProvider</name> <operator>=</operator> <call><name><name>injector</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name><name>AmbariConfigurationResourceProvider</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>ResourceProvider</name></type> <name>resourceProvider</name> <init>= <expr><call><name><name>injector</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name><name>RootServiceComponentConfigurationResourceProvider</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
    <decl_stmt><decl><type><name>Predicate</name></type> <name>predicate</name> <init>= <expr><operator>new</operator> <call><name>PredicateBuilder</name><argument_list>()</argument_list></call>
        <operator>.</operator><call><name>property</name><argument_list>(<argument><expr><name>AMBARI_CONFIGURATION_CATEGORY_PROPERTY_ID</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>CATEGORY_NAME_1</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>toPredicate</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Predicate</name></type> <name>predicate</name> <init>= <expr><call><name>createPredicate</name><argument_list>(<argument><expr><call><name><name>RootService</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>RootComponent</name><operator>.</operator><name>AMBARI_SERVER</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>CATEGORY_NAME_1</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>propertySets</name> <init>= <expr><operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">329</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">327</literal></expr><operator>,</operator><expr><literal type="number">22</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariConfigurationResourceProviderTest</name> extends <name>EasyMockSupport</name> <block>{
     <expr><call><name>validateCapturedProperties</name><argument_list>(<argument><expr><name>properties1</name></expr></argument>, <argument><expr><name>capturedProperties1</name></expr></argument>)</argument_list></call></expr>;
   }</block></expr></expr_stmt>
 
  <function><type><specifier>private</specifier> <name>Predicate</name></type> <name>createPredicate</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>serviceName</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>componentName</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>categoryName</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>Predicate</name></type> <name>predicateService</name> <init>= <expr><operator>new</operator> <call><name>PredicateBuilder</name><argument_list>()</argument_list></call>
        <operator>.</operator><call><name>property</name><argument_list>(<argument><expr><name>CONFIGURATION_SERVICE_NAME_PROPERTY_ID</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>serviceName</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>toPredicate</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Predicate</name></type> <name>predicateComponent</name> <init>= <expr><operator>new</operator> <call><name>PredicateBuilder</name><argument_list>()</argument_list></call>
        <operator>.</operator><call><name>property</name><argument_list>(<argument><expr><name>CONFIGURATION_COMPONENT_NAME_PROPERTY_ID</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>componentName</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>toPredicate</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Predicate</name></type> <name>predicateCategory</name> <init>= <expr><operator>new</operator> <call><name>PredicateBuilder</name><argument_list>()</argument_list></call>
        <operator>.</operator><call><name>property</name><argument_list>(<argument><expr><name>CONFIGURATION_CATEGORY_PROPERTY_ID</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>categoryName</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>toPredicate</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <return>return <expr><operator>new</operator> <call><name>AndPredicate</name><argument_list>(<argument><expr><name>predicateService</name></expr></argument>, <argument><expr><name>predicateComponent</name></expr></argument>, <argument><expr><name>predicateCategory</name></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

   <function><type><specifier>private</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>AmbariConfigurationEntity</name></argument>&gt;</argument_list></name></type> <name>createEntities</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>categoryName</name></decl></parameter>, <parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>properties</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>AmbariConfigurationEntity</name></argument>&gt;</argument_list></name></type> <name>entities</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">345</literal></expr><operator>,</operator><expr><literal type="number">23</literal> <operator>+</operator><literal type="number">359</literal></expr><operator>,</operator><expr><literal type="number">25</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariConfigurationResourceProviderTest</name> extends <name>EasyMockSupport</name> <block>{
 
   <expr><specifier>private</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name> <call><name>toRequestProperties</name><argument_list>(<argument><expr><name>String</name> <name>categoryName1</name></expr></argument>, <argument><expr><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name> <name>properties</name></expr></argument>)</argument_list></call> <block>{
     <expr><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name> <name>requestProperties</name> <operator>=</operator> <operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
    <call><name><name>requestProperties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>AMBARI_CONFIGURATION_CATEGORY_PROPERTY_ID</name></expr></argument>, <argument><expr><name>categoryName1</name></expr></argument>)</argument_list></call></block></expr>;
    <call><name><name>requestProperties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>CONFIGURATION_SERVICE_NAME_PROPERTY_ID</name></expr></argument>, <argument><expr><literal type="string">"AMBARI"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>requestProperties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>CONFIGURATION_COMPONENT_NAME_PROPERTY_ID</name></expr></argument>, <argument><expr><literal type="string">"AMBARI_SERVER"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>requestProperties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>CONFIGURATION_CATEGORY_PROPERTY_ID</name></expr></argument>, <argument><expr><name>categoryName1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <for>for <control>(<init><decl><type><name><name>Map</name><operator>.</operator><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></name></type> <name>entry</name> <range>: <expr><call><name><name>properties</name><operator>.</operator><name>entrySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
      <expr_stmt><expr><call><name><name>requestProperties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>AMBARI_CONFIGURATION_PROPERTIES_PROPERTY_ID</name> <operator>+</operator> <literal type="string">"/"</literal> <operator>+</operator> <call><name><name>entry</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>requestProperties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>CONFIGURATION_PROPERTIES_PROPERTY_ID</name> <operator>+</operator> <literal type="string">"/"</literal> <operator>+</operator> <call><name><name>entry</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></for>
     <return>return <expr><name>requestProperties</name></expr>;</return>
   </block_content>}</block></function>
 
   <function><type><specifier>private</specifier> <name>void</name></type> <name>validateCapturedProperties</name><parameter_list>(<parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>expectedProperties</name></decl></parameter>, <parameter><decl><type><name><name>Capture</name><argument_list type="generic">&lt;<argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>capturedProperties</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name><name>junit</name><operator>.</operator><name>framework</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertTrue</name></name><argument_list>(<argument><expr><call><name><name>capturedProperties</name><operator>.</operator><name>hasCaptured</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertTrue</name></name><argument_list>(<argument><expr><call><name><name>capturedProperties</name><operator>.</operator><name>hasCaptured</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>properties</name> <init>= <expr><call><name><name>capturedProperties</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>junit</name><operator>.</operator><name>framework</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertNotNull</name></name><argument_list>(<argument><expr><name>properties</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertNotNull</name></name><argument_list>(<argument><expr><name>properties</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <comment type="line">// Convert the Map to a TreeMap to help with comparisons</comment>
     <expr_stmt><expr><name>expectedProperties</name> <operator>=</operator> <operator>new</operator> <call><name><name>TreeMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>(<argument><expr><name>expectedProperties</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>properties</name> <operator>=</operator> <operator>new</operator> <call><name><name>TreeMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>(<argument><expr><name>properties</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>junit</name><operator>.</operator><name>framework</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><name>expectedProperties</name></expr></argument>, <argument><expr><name>properties</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><name>expectedProperties</name></expr></argument>, <argument><expr><name>properties</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
 
   <function><type><specifier>private</specifier> <name>Injector</name></type> <name>createInjector</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>RootServiceComponentPropertyProviderTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>RootServiceComponentPropertyProviderTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>a202516650</name><operator>..</operator><name>d3f9bd1a01</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>RootServiceComponentPropertyProviderTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>RootServiceComponentPropertyProviderTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">24</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">24</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>RootServiceResponseFactory</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>RootComponent</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>RootService</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>Request</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>Resource</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>utilities</name><operator>.</operator><name>PropertyHelper</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">34</literal></expr><operator>,</operator><expr><literal type="number">27</literal> <operator>+</operator><literal type="number">35</literal></expr><operator>,</operator><expr><literal type="number">27</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>
 <class><specifier>public</specifier> class <name>RootServiceComponentPropertyProviderTest</name> <block>{
   <function><annotation>@<name>Test</name></annotation>
   <type><specifier>public</specifier> <name>void</name></type> <name>testPopulateResources_AmbariServer_None</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name>testPopulateResources</name><argument_list>(<argument><expr><call><name><name>RootServiceResponseFactory</name><operator>.</operator><name>Components</name><operator>.</operator><name>AMBARI_SERVER</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>testPopulateResources</name><argument_list>(<argument><expr><call><name><name>RootComponent</name><operator>.</operator><name>AMBARI_SERVER</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
 
   <function><annotation>@<name>Test</name></annotation>
   <type><specifier>public</specifier> <name>void</name></type> <name>testPopulateResources_AmbariServer_CiphersAndJCEPolicy</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name>testPopulateResources</name><argument_list>(<argument><expr><call><name><name>RootServiceResponseFactory</name><operator>.</operator><name>Components</name><operator>.</operator><name>AMBARI_SERVER</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>testPopulateResources</name><argument_list>(<argument><expr><call><name><name>RootComponent</name><operator>.</operator><name>AMBARI_SERVER</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
 
   <function><annotation>@<name>Test</name></annotation>
   <type><specifier>public</specifier> <name>void</name></type> <name>testPopulateResources_AmbariServer_JCEPolicy</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name>testPopulateResources</name><argument_list>(<argument><expr><call><name><name>RootServiceResponseFactory</name><operator>.</operator><name>Components</name><operator>.</operator><name>AMBARI_SERVER</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>testPopulateResources</name><argument_list>(<argument><expr><call><name><name>RootComponent</name><operator>.</operator><name>AMBARI_SERVER</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
 
   <function><annotation>@<name>Test</name></annotation>
   <type><specifier>public</specifier> <name>void</name></type> <name>testPopulateResources_AmbariServer_Ciphers</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name>testPopulateResources</name><argument_list>(<argument><expr><call><name><name>RootServiceResponseFactory</name><operator>.</operator><name>Components</name><operator>.</operator><name>AMBARI_SERVER</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>testPopulateResources</name><argument_list>(<argument><expr><call><name><name>RootComponent</name><operator>.</operator><name>AMBARI_SERVER</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
 
   <function><annotation>@<name>Test</name></annotation>
   <type><specifier>public</specifier> <name>void</name></type> <name>testPopulateResources_AmbariAgent_CiphersAndJCEPolicy</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name>testPopulateResources</name><argument_list>(<argument><expr><call><name><name>RootServiceResponseFactory</name><operator>.</operator><name>Components</name><operator>.</operator><name>AMBARI_AGENT</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>testPopulateResources</name><argument_list>(<argument><expr><call><name><name>RootComponent</name><operator>.</operator><name>AMBARI_AGENT</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
 
   <decl_stmt><decl><type><specifier>public</specifier> <name>void</name></type> <name>testPopulateResources</name><argument_list>(<argument><expr><name>String</name> <name>componentName</name></expr></argument>,
<argument>@@ <expr><operator>-</operator><literal type="number">64</literal></expr></argument>,<argument><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">65</literal></expr></argument>,<argument><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>RootServiceComponentPropertyProviderTest</name> <block>{
     <expr><name>Resource</name> <name>resource</name> <operator>=</operator> <operator>new</operator> <call><name>ResourceImpl</name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>RootService</name></name></expr></argument>)</argument_list></call></expr>;
 
     <call><name><name>resource</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><name><name>RootServiceComponentResourceProvider</name><operator>.</operator><name>COMPONENT_NAME_PROPERTY_ID</name></name></expr></argument>, <argument><expr><name>componentName</name></expr></argument>)</argument_list></call></block></expr></argument>;</argument_list></decl></decl_stmt>
    <expr_stmt><expr><call><name><name>resource</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><name><name>RootServiceComponentResourceProvider</name><operator>.</operator><name>SERVICE_NAME_PROPERTY_ID</name></name></expr></argument>, <argument><expr><call><name><name>RootServiceResponseFactory</name><operator>.</operator><name>Services</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>resource</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><name><name>RootServiceComponentResourceProvider</name><operator>.</operator><name>SERVICE_NAME_PROPERTY_ID</name></name></expr></argument>, <argument><expr><call><name><name>RootService</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><name><name>HashSet</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>requestIds</name> <init>= <expr><operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>RootServiceComponentResourceProviderTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>RootServiceComponentResourceProviderTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">222340b4e7</literal><operator>..</operator><literal type="number">4316647e8e</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>RootServiceComponentResourceProviderTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>RootServiceComponentResourceProviderTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">29</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">29</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>AmbariManagementController</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>RootComponent</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>RootService</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>RootServiceComponentResponse</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>RootServiceResponseFactory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>Predicate</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>Request</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>Resource</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">50</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">51</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>RootServiceComponentResourceProviderTest</name> <block>{
     <expr><name>AmbariManagementController</name> <name>managementController</name> <operator>=</operator> <call><name>createMock</name><argument_list>(<argument><expr><name><name>AmbariManagementController</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
 
     <name><name>Set</name><argument_list type="generic">&lt;<argument><name>RootServiceComponentResponse</name></argument>&gt;</argument_list></name> <name>allResponse</name> <operator>=</operator> <operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>serviceName</name> <init>= <expr><call><name><name>RootServiceResponseFactory</name><operator>.</operator><name>Services</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>serviceName</name> <init>= <expr><call><name><name>RootService</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>emptyMap</name> <init>= <expr><call><name><name>Collections</name><operator>.</operator><name>emptyMap</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>allResponse</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>RootServiceComponentResponse</name><argument_list>(<argument><expr><name>serviceName</name></expr></argument>, <argument><expr><literal type="string">"component1"</literal></expr></argument>, <argument><expr><literal type="string">"1.1.1"</literal></expr></argument>, <argument><expr><name>emptyMap</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>allResponse</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>RootServiceComponentResponse</name><argument_list>(<argument><expr><name>serviceName</name></expr></argument>, <argument><expr><literal type="string">"component2"</literal></expr></argument>, <argument><expr><literal type="string">"1.1.1"</literal></expr></argument>, <argument><expr><name>emptyMap</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>allResponse</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>RootServiceComponentResponse</name><argument_list>(<argument><expr><name>serviceName</name></expr></argument>, <argument><expr><literal type="string">"component3"</literal></expr></argument>, <argument><expr><literal type="string">"1.1.1"</literal></expr></argument>, <argument><expr><name>emptyMap</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>allResponse</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>RootServiceComponentResponse</name><argument_list>(<argument><expr><name>serviceName</name></expr></argument>, <argument><expr><call><name><name>RootServiceResponseFactory</name><operator>.</operator><name>Components</name><operator>.</operator><name>AMBARI_SERVER</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"1.1.1"</literal></expr></argument>, <argument><expr><name>emptyMap</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>allResponse</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>RootServiceComponentResponse</name><argument_list>(<argument><expr><name>serviceName</name></expr></argument>, <argument><expr><call><name><name>RootComponent</name><operator>.</operator><name>AMBARI_SERVER</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"1.1.1"</literal></expr></argument>, <argument><expr><name>emptyMap</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>RootServiceComponentResponse</name></argument>&gt;</argument_list></name></type> <name>nameResponse</name> <init>= <expr><operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>nameResponse</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>RootServiceComponentResponse</name><argument_list>(<argument><expr><name>serviceName</name></expr></argument>, <argument><expr><literal type="string">"component4"</literal></expr></argument>, <argument><expr><literal type="string">"1.1.1"</literal></expr></argument>, <argument><expr><name>emptyMap</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">92</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">93</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>RootServiceComponentResourceProviderTest</name> <block>{
       <expr><name>String</name> <name>componentName</name> <operator>=</operator> <operator>(</operator><name>String</name><operator>)</operator> <call><name><name>resource</name><operator>.</operator><name>getPropertyValue</name></name><argument_list>(<argument><expr><name><name>RootServiceComponentResourceProvider</name><operator>.</operator><name>COMPONENT_NAME_PROPERTY_ID</name></name></expr></argument>)</argument_list></call></expr>;
       <name>String</name> <name>componentVersion</name> <operator>=</operator> <operator>(</operator><name>String</name><operator>)</operator> <call><name><name>resource</name><operator>.</operator><name>getPropertyValue</name></name><argument_list>(<argument><expr><name><name>RootServiceComponentResourceProvider</name><operator>.</operator><name>COMPONENT_VERSION_PROPERTY_ID</name></name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
       <decl_stmt><decl><type><name>Long</name></type> <name>server_clock</name> <init>= <expr><operator>(</operator><name>Long</name><operator>)</operator> <call><name><name>resource</name><operator>.</operator><name>getPropertyValue</name></name><argument_list>(<argument><expr><name><name>RootServiceComponentResourceProvider</name><operator>.</operator><name>SERVER_CLOCK_PROPERTY_ID</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><call><name><name>componentName</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><call><name><name>RootServiceResponseFactory</name><operator>.</operator><name>Components</name><operator>.</operator><name>AMBARI_SERVER</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><block>{<block_content>
      <if_stmt><if>if <condition>(<expr><call><name><name>componentName</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><call><name><name>RootComponent</name><operator>.</operator><name>AMBARI_SERVER</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><block>{<block_content>
         <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertNotNull</name></name><argument_list>(<argument><expr><name>server_clock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></if> <else>else <block>{<block_content>
         <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertNull</name></name><argument_list>(<argument><expr><name>server_clock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>ldap</name><operator>/</operator><name><name>LdapModuleFunctionalTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>ldap</name><operator>/</operator><name><name>LdapModuleFunctionalTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">30f5e22ee0</literal><operator>..</operator><literal type="number">3917cdf034</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>ldap</name><operator>/</operator><name><name>LdapModuleFunctionalTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>ldap</name><operator>/</operator><name><name>LdapModuleFunctionalTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">125</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">125</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>LdapModuleFunctionalTest</name> <block>{
     <return>return <expr><name>ldapPropsMap</name></expr>;</return>
   }</block></expr></expr_stmt>
 
  <function><type><specifier>private</specifier> <specifier>static</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>getADProps</name><parameter_list>()</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>ldapPropsMap</name> <init>= <expr><call><name><name>Maps</name><operator>.</operator><name>newHashMap</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
  <function><type><specifier>private</specifier> <specifier>static</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>getADProps</name><parameter_list>()</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>ldapPropsMap</name> <init>= <expr><call><name><name>Maps</name><operator>.</operator><name>newHashMap</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
 
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>ldap</name><operator>/</operator><name>domain</name><operator>/</operator><name><name>TestAmbariLdapConfigurationFactory</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>ldap</name><operator>/</operator><name>domain</name><operator>/</operator><name><name>TestAmbariLdapConfigurationFactory</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>aa26498d92</name><operator>..</operator><literal type="number">10822504e7</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>ldap</name><operator>/</operator><name>domain</name><operator>/</operator><name><name>TestAmbariLdapConfigurationFactory</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>ldap</name><operator>/</operator><name>domain</name><operator>/</operator><name><name>TestAmbariLdapConfigurationFactory</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">23</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">23</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 <class><specifier>public</specifier> class <name>TestAmbariLdapConfigurationFactory</name> <super_list><implements>implements <super><name>AmbariLdapConfigurationFactory</name></super></implements></super_list> <block>{
 
   <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>AmbariLdapConfiguration</name></type> <name>createLdapConfiguration</name><parameter_list>(<parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>configuration</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <function><type><specifier>public</specifier> <name>AmbariLdapConfiguration</name></type> <name>createLdapConfiguration</name><parameter_list>(<parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>configuration</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <return>return <expr><operator>new</operator> <call><name>AmbariLdapConfiguration</name><argument_list>(<argument><expr><name>configuration</name></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
 </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>ldap</name><operator>/</operator><name>service</name><operator>/</operator><name><name>AmbariLdapFacadeTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>ldap</name><operator>/</operator><name>service</name><operator>/</operator><name><name>AmbariLdapFacadeTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>db0e5a96ad</name><operator>..</operator><literal type="number">97ce30eb6a</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>ldap</name><operator>/</operator><name>service</name><operator>/</operator><name><name>AmbariLdapFacadeTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>ldap</name><operator>/</operator><name>service</name><operator>/</operator><name><name>AmbariLdapFacadeTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">163</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">163</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariLdapFacadeTest</name> extends <name>EasyMockSupport</name> <block>{
   <expr><specifier>public</specifier> <name>void</name> <call><name>testShouldLdapAttributeDetectionDelegateToTheRightServiceCalls</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
 
     <comment type="line">// configuration map with user attributes detected</comment>
    <expr><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name> <name>userConfigMap</name> <operator>=</operator> <call><name><name>Maps</name><operator>.</operator><name>newHashMap</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name> <name>userConfigMap</name> <operator>=</operator> <call><name><name>Maps</name><operator>.</operator><name>newHashMap</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>userConfigMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>AmbariLdapConfigKeys</name><operator>.</operator><name>USER_NAME_ATTRIBUTE</name><operator>.</operator><name>key</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"uid"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>AmbariLdapConfiguration</name></type> <name>userAttrDecoratedConfig</name> <init>= <expr><call><name><name>ambariLdapConfigurationFactory</name><operator>.</operator><name>createLdapConfiguration</name></name><argument_list>(<argument><expr><name>userConfigMap</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <comment type="line">// configuration map with user+group attributes detected</comment>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>groupConfigMap</name> <init>= <expr><call><name><name>Maps</name><operator>.</operator><name>newHashMap</name></name><argument_list>(<argument><expr><name>userConfigMap</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>groupConfigMap</name> <init>= <expr><call><name><name>Maps</name><operator>.</operator><name>newHashMap</name></name><argument_list>(<argument><expr><name>userConfigMap</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>groupConfigMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>AmbariLdapConfigKeys</name><operator>.</operator><name>GROUP_NAME_ATTRIBUTE</name><operator>.</operator><name>key</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"dn"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>AmbariLdapConfiguration</name></type> <name>groupAttrDecoratedConfig</name> <init>= <expr><call><name><name>ambariLdapConfigurationFactory</name><operator>.</operator><name>createLdapConfiguration</name></name><argument_list>(<argument><expr><name>groupConfigMap</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>ldap</name><operator>/</operator><name>service</name><operator>/</operator><name>ads</name><operator>/</operator><name><name>DefaultLdapAttributeDetectionServiceTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>ldap</name><operator>/</operator><name>service</name><operator>/</operator><name>ads</name><operator>/</operator><name><name>DefaultLdapAttributeDetectionServiceTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">09dea1c210</literal><operator>..</operator><name>a44bf7cadd</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>ldap</name><operator>/</operator><name>service</name><operator>/</operator><name>ads</name><operator>/</operator><name><name>DefaultLdapAttributeDetectionServiceTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>ldap</name><operator>/</operator><name>service</name><operator>/</operator><name>ads</name><operator>/</operator><name><name>DefaultLdapAttributeDetectionServiceTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">78</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">78</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>DefaultLdapAttributeDetectionServiceTest</name> extends <name>EasyMockSupport</name> <block>{
   @<expr><call><name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"unchecked"</literal></expr></argument>)</argument_list></call>
   <specifier>public</specifier> <name>void</name> <call><name>shouldLdapUserAttributeDetection</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <comment type="line">// GIVEN</comment>
    <expr><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name> <name>configMap</name> <operator>=</operator> <call><name><name>Maps</name><operator>.</operator><name>newHashMap</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name> <name>configMap</name> <operator>=</operator> <call><name><name>Maps</name><operator>.</operator><name>newHashMap</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>configMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>AmbariLdapConfigKeys</name><operator>.</operator><name>USER_SEARCH_BASE</name><operator>.</operator><name>key</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"dc=example,dc=com"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>AmbariLdapConfiguration</name></type> <name>ldapConfiguration</name> <init>= <expr><call><name><name>ldapConfigurationFactory</name><operator>.</operator><name>createLdapConfiguration</name></name><argument_list>(<argument><expr><name>configMap</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">109</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">109</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>DefaultLdapAttributeDetectionServiceTest</name> extends <name>EasyMockSupport</name> <block>{
   @<expr><call><name>Test</name><argument_list>(<argument><expr><name>expected</name> <operator>=</operator> <name><name>AmbariLdapException</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call>
   <specifier>public</specifier> <name>void</name> <call><name>testShouldUserAttributeDetectionFailWhenLdapOerationFails</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <comment type="line">// GIVEN</comment>
    <expr><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name> <name>configMap</name> <operator>=</operator> <call><name><name>Maps</name><operator>.</operator><name>newHashMap</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name> <name>configMap</name> <operator>=</operator> <call><name><name>Maps</name><operator>.</operator><name>newHashMap</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>configMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>AmbariLdapConfigKeys</name><operator>.</operator><name>USER_SEARCH_BASE</name><operator>.</operator><name>key</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"dc=example,dc=com"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>AmbariLdapConfiguration</name></type> <name>ldapConfiguration</name> <init>= <expr><call><name><name>ldapConfigurationFactory</name><operator>.</operator><name>createLdapConfiguration</name></name><argument_list>(<argument><expr><name>configMap</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">129</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">129</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>DefaultLdapAttributeDetectionServiceTest</name> extends <name>EasyMockSupport</name> <block>{
   @<expr><call><name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"unchecked"</literal></expr></argument>)</argument_list></call>
   <specifier>public</specifier> <name>void</name> <call><name>shouldLdapGroupAttributeDetection</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <comment type="line">// GIVEN</comment>
    <expr><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name> <name>configMap</name> <operator>=</operator> <call><name><name>Maps</name><operator>.</operator><name>newHashMap</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name> <name>configMap</name> <operator>=</operator> <call><name><name>Maps</name><operator>.</operator><name>newHashMap</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>configMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>AmbariLdapConfigKeys</name><operator>.</operator><name>GROUP_SEARCH_BASE</name><operator>.</operator><name>key</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"dc=example,dc=com"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>AmbariLdapConfiguration</name></type> <name>ldapConfiguration</name> <init>= <expr><call><name><name>ldapConfigurationFactory</name><operator>.</operator><name>createLdapConfiguration</name></name><argument_list>(<argument><expr><name>configMap</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">160</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">160</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>DefaultLdapAttributeDetectionServiceTest</name> extends <name>EasyMockSupport</name> <block>{
   @<expr><call><name>Test</name><argument_list>(<argument><expr><name>expected</name> <operator>=</operator> <name><name>AmbariLdapException</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call>
   <specifier>public</specifier> <name>void</name> <call><name>testShouldGroupAttributeDetectionFailWhenLdapOerationFails</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <comment type="line">// GIVEN</comment>
    <expr><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name> <name>configMap</name> <operator>=</operator> <call><name><name>Maps</name><operator>.</operator><name>newHashMap</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name> <name>configMap</name> <operator>=</operator> <call><name><name>Maps</name><operator>.</operator><name>newHashMap</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>configMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>AmbariLdapConfigKeys</name><operator>.</operator><name>GROUP_SEARCH_BASE</name><operator>.</operator><name>key</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"dc=example,dc=com"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>AmbariLdapConfiguration</name></type> <name>ldapConfiguration</name> <init>= <expr><call><name><name>ldapConfigurationFactory</name><operator>.</operator><name>createLdapConfiguration</name></name><argument_list>(<argument><expr><name>configMap</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>ldap</name><operator>/</operator><name>service</name><operator>/</operator><name>ads</name><operator>/</operator><name><name>DefaultLdapConfigurationServiceTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>ldap</name><operator>/</operator><name>service</name><operator>/</operator><name>ads</name><operator>/</operator><name><name>DefaultLdapConfigurationServiceTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">4d6d2a6a50</literal><operator>..</operator><name>ec78e5662a</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>ldap</name><operator>/</operator><name>service</name><operator>/</operator><name>ads</name><operator>/</operator><name><name>DefaultLdapConfigurationServiceTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>ldap</name><operator>/</operator><name>service</name><operator>/</operator><name>ads</name><operator>/</operator><name><name>DefaultLdapConfigurationServiceTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">102</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">102</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>DefaultLdapConfigurationServiceTest</name> extends <name>EasyMockSupport</name> <block>{
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testShouldUserAttributeConfigurationCheckSucceedWhenUserDnIsFound</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <comment type="line">// GIVEN</comment>
    <expr><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name> <name>configMap</name> <operator>=</operator> <call><name><name>Maps</name><operator>.</operator><name>newHashMap</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name> <name>configMap</name> <operator>=</operator> <call><name><name>Maps</name><operator>.</operator><name>newHashMap</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>configMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>AmbariLdapConfigKeys</name><operator>.</operator><name>USER_OBJECT_CLASS</name><operator>.</operator><name>key</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"person"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>configMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>AmbariLdapConfigKeys</name><operator>.</operator><name>USER_NAME_ATTRIBUTE</name><operator>.</operator><name>key</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"uid"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">126</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">126</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>DefaultLdapConfigurationServiceTest</name> extends <name>EasyMockSupport</name> <block>{
   @<expr><call><name>Test</name><argument_list>(<argument><expr><name>expected</name> <operator>=</operator> <name><name>AmbariLdapException</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call>
   <specifier>public</specifier> <name>void</name> <call><name>testShouldUserAttributeConfigurationCheckFailWhenNoUsersFound</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <comment type="line">// GIVEN</comment>
    <expr><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name> <name>configMap</name> <operator>=</operator> <call><name><name>Maps</name><operator>.</operator><name>newHashMap</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name> <name>configMap</name> <operator>=</operator> <call><name><name>Maps</name><operator>.</operator><name>newHashMap</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>configMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>AmbariLdapConfigKeys</name><operator>.</operator><name>USER_OBJECT_CLASS</name><operator>.</operator><name>key</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"posixAccount"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>configMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>AmbariLdapConfigKeys</name><operator>.</operator><name>USER_NAME_ATTRIBUTE</name><operator>.</operator><name>key</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"dn"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">155</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">155</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>DefaultLdapConfigurationServiceTest</name> extends <name>EasyMockSupport</name> <block>{
   <expr><specifier>public</specifier> <name>void</name> <call><name>testShouldGroupAttributeConfigurationCheckSucceedWhenGroupForUserDnIsFound</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <comment type="line">// GIVEN</comment>
 
    <expr><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name> <name>configMap</name> <operator>=</operator> <call><name>groupConfigObjectMap</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name> <name>configMap</name> <operator>=</operator> <call><name>groupConfigObjectMap</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><name>SearchRequest</name></type> <name>sr</name> <init>= <expr><operator>new</operator> <call><name>SearchRequestImpl</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">184</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">184</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>DefaultLdapConfigurationServiceTest</name> extends <name>EasyMockSupport</name> <block>{
   <expr><specifier>public</specifier> <name>void</name> <call><name>testShouldGroupAttributeConfigurationCheckFailWhenNoGroupsForUserDnFound</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <comment type="line">// GIVEN</comment>
 
    <expr><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name> <name>configMap</name> <operator>=</operator> <call><name>groupConfigObjectMap</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name> <name>configMap</name> <operator>=</operator> <call><name>groupConfigObjectMap</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><name>SearchRequest</name></type> <name>sr</name> <init>= <expr><operator>new</operator> <call><name>SearchRequestImpl</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">208</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">208</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>DefaultLdapConfigurationServiceTest</name> extends <name>EasyMockSupport</name> <block>{
 
   }</block>
 
  <specifier>private</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name> <call><name>groupConfigObjectMap</name><argument_list>()</argument_list></call> <block>{
    <expr><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name> <name>configMap</name> <operator>=</operator> <call><name><name>Maps</name><operator>.</operator><name>newHashMap</name></name><argument_list>()</argument_list></call></expr>;
  <specifier>private</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name> <call><name>groupConfigObjectMap</name><argument_list>()</argument_list></call> <block>{
    <expr><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name> <name>configMap</name> <operator>=</operator> <call><name><name>Maps</name><operator>.</operator><name>newHashMap</name></name><argument_list>()</argument_list></call></expr>;
     <call><name><name>configMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>AmbariLdapConfigKeys</name><operator>.</operator><name>GROUP_OBJECT_CLASS</name><operator>.</operator><name>key</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"groupOfNames"</literal></expr></argument>)</argument_list></call></block></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>configMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>AmbariLdapConfigKeys</name><operator>.</operator><name>GROUP_SEARCH_BASE</name><operator>.</operator><name>key</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"dc=example,dc=com"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>configMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>AmbariLdapConfigKeys</name><operator>.</operator><name>GROUP_NAME_ATTRIBUTE</name><operator>.</operator><name>key</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"uid"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>metadata</name><operator>/</operator><name><name>AgentAlertDefinitionsTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>metadata</name><operator>/</operator><name><name>AgentAlertDefinitionsTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>adaf236b3d</name><operator>..</operator><name>cb234ea6d3</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>metadata</name><operator>/</operator><name><name>AgentAlertDefinitionsTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>metadata</name><operator>/</operator><name><name>AgentAlertDefinitionsTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">22</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">22</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>EntityManager</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>H2DatabaseCleaner</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>RootServiceResponseFactory</name><operator>.</operator><name>Components</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>RootComponent</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>GuiceJpaInitializer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>InMemoryDefaultTestModule</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>alert</name><operator>.</operator><name>AlertDefinition</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">63</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">63</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>AgentAlertDefinitionsTest</name> <block>{
     <expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><call><name><name>definitions</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</block></expr></expr_stmt>
 
     <for>for<control>( <init><decl><type><name>AlertDefinition</name></type> <name>definition</name> <range>: <expr><name>definitions</name></expr></range></decl></init>)</control><block>{<block_content>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><call><name><name>Components</name><operator>.</operator><name>AMBARI_AGENT</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>,
      <argument><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><call><name><name>RootComponent</name><operator>.</operator><name>AMBARI_AGENT</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>,
           <argument><expr><call><name><name>definition</name><operator>.</operator><name>getComponentName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>;</argument_list></call></expr></expr_stmt>
 
       <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="string">"AMBARI"</literal></expr></argument>, <argument><expr><call><name><name>definition</name><operator>.</operator><name>getServiceName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">80</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">80</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>AgentAlertDefinitionsTest</name> <block>{
     <expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><call><name><name>definitions</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</block></expr></expr_stmt>
 
     <for>for <control>(<init><decl><type><name>AlertDefinition</name></type> <name>definition</name> <range>: <expr><name>definitions</name></expr></range></decl></init>)</control> <block>{<block_content>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><call><name><name>Components</name><operator>.</operator><name>AMBARI_SERVER</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>,
      <argument><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><call><name><name>RootComponent</name><operator>.</operator><name>AMBARI_SERVER</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>,
           <argument><expr><call><name><name>definition</name><operator>.</operator><name>getComponentName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>;</argument_list></call></expr></expr_stmt>
 
       <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="string">"AMBARI"</literal></expr></argument>, <argument><expr><call><name><name>definition</name><operator>.</operator><name>getServiceName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>dao</name><operator>/</operator><name><name>AlertDefinitionDAOTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>dao</name><operator>/</operator><name><name>AlertDefinitionDAOTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>d559e0c316</name><operator>..</operator><literal type="number">9ebc2e5481</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>dao</name><operator>/</operator><name><name>AlertDefinitionDAOTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>dao</name><operator>/</operator><name><name>AlertDefinitionDAOTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">31</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">31</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>TimeZone</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>UUID</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>H2DatabaseCleaner</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>RootServiceResponseFactory</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>RootComponent</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>RootService</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>GuiceJpaInitializer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>InMemoryDefaultTestModule</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>OrmTestHelper</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">148</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">149</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>AlertDefinitionDAOTest</name> <block>{
     <for>for <control>(<init>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">15</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
       <decl_stmt><decl><type><name>AlertDefinitionEntity</name></type> <name>definition</name> <init>= <expr><operator>new</operator> <call><name>AlertDefinitionEntity</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>definition</name><operator>.</operator><name>setDefinitionName</name></name><argument_list>(<argument><expr><literal type="string">"Alert Definition "</literal> <operator>+</operator> <name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>definition</name><operator>.</operator><name>setServiceName</name></name><argument_list>(<argument><expr><call><name><name>RootServiceResponseFactory</name><operator>.</operator><name>Services</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>definition</name><operator>.</operator><name>setComponentName</name></name><argument_list>(<argument><expr><call><name><name>RootServiceResponseFactory</name><operator>.</operator><name>Components</name><operator>.</operator><name>AMBARI_AGENT</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>definition</name><operator>.</operator><name>setServiceName</name></name><argument_list>(<argument><expr><call><name><name>RootService</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>definition</name><operator>.</operator><name>setComponentName</name></name><argument_list>(<argument><expr><call><name><name>RootComponent</name><operator>.</operator><name>AMBARI_AGENT</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>definition</name><operator>.</operator><name>setClusterId</name></name><argument_list>(<argument><expr><name>clusterId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>definition</name><operator>.</operator><name>setHash</name></name><argument_list>(<argument><expr><call><name><name>UUID</name><operator>.</operator><name>randomUUID</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>definition</name><operator>.</operator><name>setScheduleInterval</name></name><argument_list>(<argument><expr><literal type="number">60</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name>alerts</name><operator>/</operator><name><name>AlertReceivedListenerTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name>alerts</name><operator>/</operator><name><name>AlertReceivedListenerTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">3ec6943d25</literal><operator>..</operator><literal type="number">3056dd1e22</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name>alerts</name><operator>/</operator><name><name>AlertReceivedListenerTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name>alerts</name><operator>/</operator><name><name>AlertReceivedListenerTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">30</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">30</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt> <import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>EntityManager</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>AmbariException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>H2DatabaseCleaner</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>RootServiceResponseFactory</name><operator>.</operator><name>Components</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>RootServiceResponseFactory</name><operator>.</operator><name>Services</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>RootComponent</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>RootService</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>events</name><operator>.</operator><name>AlertReceivedEvent</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>events</name><operator>.</operator><name>AlertStateChangeEvent</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>events</name><operator>.</operator><name>listeners</name><operator>.</operator><name>alerts</name><operator>.</operator><name>AlertReceivedListener</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">335</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">335</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>AlertReceivedListenerTest</name> <block>{
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testAgentAlertFromInvalidHost</name><argument_list>()</argument_list></call> <block>{
     <expr><name>String</name> <name>definitionName</name> <operator>=</operator> <name>ALERT_DEFINITION</name> <operator>+</operator> <literal type="string">"1"</literal></expr>;
    <name>String</name> <name>serviceName</name> <operator>=</operator> <call><name><name>Services</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></block></expr>;
    <name>String</name> <name>componentName</name> <operator>=</operator> <call><name><name>Components</name><operator>.</operator><name>AMBARI_AGENT</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>serviceName</name> <init>= <expr><call><name><name>RootService</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>componentName</name> <init>= <expr><call><name><name>RootComponent</name><operator>.</operator><name>AMBARI_AGENT</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <decl_stmt><decl><type><name>Alert</name></type> <name>alert</name> <init>= <expr><operator>new</operator> <call><name>Alert</name><argument_list>(<argument><expr><name>definitionName</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>serviceName</name></expr></argument>, <argument><expr><name>componentName</name></expr></argument>, <argument><expr><name>HOST1</name></expr></argument>,
         <argument><expr><name><name>AlertState</name><operator>.</operator><name>OK</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">374</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">374</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>AlertReceivedListenerTest</name> <block>{
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testAmbariServerValidAlerts</name><argument_list>()</argument_list></call> <block>{
     <expr><name>String</name> <name>definitionName</name> <operator>=</operator> <name>ALERT_DEFINITION</name> <operator>+</operator> <literal type="string">"1"</literal></expr>;
    <name>String</name> <name>serviceName</name> <operator>=</operator> <call><name><name>Services</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></block></expr>;
    <name>String</name> <name>componentName</name> <operator>=</operator> <call><name><name>Components</name><operator>.</operator><name>AMBARI_SERVER</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>serviceName</name> <init>= <expr><call><name><name>RootService</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>componentName</name> <init>= <expr><call><name><name>RootComponent</name><operator>.</operator><name>AMBARI_SERVER</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <decl_stmt><decl><type><name>Alert</name></type> <name>alert</name> <init>= <expr><operator>new</operator> <call><name>Alert</name><argument_list>(<argument><expr><name>definitionName</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>serviceName</name></expr></argument>, <argument><expr><name>componentName</name></expr></argument>, <argument><expr><name>HOST1</name></expr></argument>,
         <argument><expr><name><name>AlertState</name><operator>.</operator><name>OK</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">415</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">415</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>AlertReceivedListenerTest</name> <block>{
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testMissingClusterAndInvalidHost</name><argument_list>()</argument_list></call> <block>{
     <expr><name>String</name> <name>definitionName</name> <operator>=</operator> <name>ALERT_DEFINITION</name> <operator>+</operator> <literal type="string">"1"</literal></expr>;
    <name>String</name> <name>serviceName</name> <operator>=</operator> <call><name><name>Services</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></block></expr>;
    <name>String</name> <name>componentName</name> <operator>=</operator> <call><name><name>Components</name><operator>.</operator><name>AMBARI_AGENT</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>serviceName</name> <init>= <expr><call><name><name>RootService</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>componentName</name> <init>= <expr><call><name><name>RootComponent</name><operator>.</operator><name>AMBARI_AGENT</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <decl_stmt><decl><type><name>Alert</name></type> <name>alert1</name> <init>= <expr><operator>new</operator> <call><name>Alert</name><argument_list>(<argument><expr><name>definitionName</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>serviceName</name></expr></argument>, <argument><expr><name>componentName</name></expr></argument>, <argument><expr><name>HOST1</name></expr></argument>,
         <argument><expr><name><name>AlertState</name><operator>.</operator><name>OK</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name>alerts</name><operator>/</operator><name><name>AlertStateChangedEventTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name>alerts</name><operator>/</operator><name><name>AlertStateChangedEventTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>bc8222c7c8</name><operator>..</operator><name>c3db717c26</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name>alerts</name><operator>/</operator><name><name>AlertStateChangedEventTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name>alerts</name><operator>/</operator><name><name>AlertStateChangedEventTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">24</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">24</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>H2DatabaseCleaner</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>RootServiceResponseFactory</name><operator>.</operator><name>Services</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>RootService</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>events</name><operator>.</operator><name>AggregateAlertRecalculateEvent</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>events</name><operator>.</operator><name>AlertEvent</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>events</name><operator>.</operator><name>AlertStateChangeEvent</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">501</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">501</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>AlertStateChangedEventTest</name> extends <name>EasyMockSupport</name> <block>{
     <comment type="line">// create the definition for the AMBARI service</comment>
     <expr><name>AlertDefinitionEntity</name> <name>definition</name> <operator>=</operator> <call><name>createNiceMock</name><argument_list>(<argument><expr><name><name>AlertDefinitionEntity</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
     <call><name><name>EasyMock</name><operator>.</operator><name>expect</name></name><argument_list>(<argument><expr><call><name><name>definition</name><operator>.</operator><name>getDefinitionId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><literal type="number">1L</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>anyTimes</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>EasyMock</name><operator>.</operator><name>expect</name></name><argument_list>(<argument><expr><call><name><name>definition</name><operator>.</operator><name>getServiceName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><call><name><name>Services</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>anyTimes</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>EasyMock</name><operator>.</operator><name>expect</name></name><argument_list>(<argument><expr><call><name><name>definition</name><operator>.</operator><name>getServiceName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><call><name><name>RootService</name><operator>.</operator><name>AMBARI</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>anyTimes</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>EasyMock</name><operator>.</operator><name>expect</name></name><argument_list>(<argument><expr><call><name><name>definition</name><operator>.</operator><name>getLabel</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><literal type="string">"ambari-foo-alert"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>anyTimes</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>EasyMock</name><operator>.</operator><name>expect</name></name><argument_list>(<argument><expr><call><name><name>definition</name><operator>.</operator><name>getDescription</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><literal type="string">"Ambari Foo Alert"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>anyTimes</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
<expr_stmt><expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></expr_stmt></block_content></block></for></block></expr></expr_stmt></block_content></block></for></block_content></block></for></block></class></block_content></block></function></block_content></block></function></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block></class></block_content></block></function></block></class></block_content></block></try></block_content></block></block></for></block_content></block></for></block_content></block></if></if_stmt></block_content></block></for></block_content></block></for></block_content></block></function></block></interface></block></interface></block></interface></block></interface>

</unit>
