<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/ambari/4fa9ac5505.java"><expr><name>From</name> <literal type="number">4fa9ac5505d6604f1d74def8fc1ea6eeb3ea3fda</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Robert</name> <name><name>Levas</name> <argument_list type="generic">&lt;<argument><name>rlevas</name><annotation>@<name><name>hortonworks</name><operator>.</operator><name>com</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Mon</name></expr><operator>,</operator> <expr><literal type="number">13</literal> <name>Nov</name> <literal type="number">2017</literal> <literal type="number">13</literal><operator>:</operator><literal type="number">11</literal><operator>:</operator><literal type="number">42</literal> <operator>-</operator><literal type="number">0500</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>AMBARI</name><operator>-</operator><literal type="number">22347.</literal>  <name>Simplify</name> <name>Ambari</name> <name>configuration</name> <name>tables</name> <name>from</name>
 <name>AMBARI</name><operator>-</operator><literal type="number">21307</literal> <operator>(</operator><name>rlevas</name><operator>)</operator>

<operator>--</operator>
 <operator>...</operator><operator>/</operator><name><name>AmbariConfigurationRequestSwagger</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">14</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>services</name><operator>/</operator><name><name>AmbariConfigurationService</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">46</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>services</name><operator>/</operator><name>ldap</name><operator>/</operator><name><name>AmbariConfiguration</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">51</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>ldap</name><operator>/</operator><name><name>LdapConfigurationService</name><operator>.</operator><name>java</name></name>        <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>AmbariConfigurationResourceProvider</name><operator>.</operator><name>java</name></name>  <operator>|</operator> <literal type="number">370</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><name>a</name> <operator>=</operator><operator>&gt;</operator> <name><name>AmbariConfigurationChangedEvent</name><operator>.</operator><name>java</name></name></expr>} |  <expr_stmt><expr><literal type="number">17</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>events</name><operator>/</operator><name><name>AmbariEvent</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>ldap</name><operator>/</operator><name>domain</name><operator>/</operator><name><name>AmbariLdapConfiguration</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">20</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>AmbariLdapConfigurationProvider</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">57</literal> <operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>ads</name><operator>/</operator><name><name>LdapConnectionTemplateFactory</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>orm</name><operator>/</operator><name>dao</name><operator>/</operator><name><name>AmbariConfigurationDAO</name><operator>.</operator><name>java</name></name>       <operator>|</operator> <literal type="number">146</literal> <operator>++</operator><operator>++</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>entities</name><operator>/</operator><name><name>AmbariConfigurationEntity</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">94</literal> <operator>++</operator><operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>entities</name><operator>/</operator><name><name>AmbariConfigurationEntityPK</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">88</literal> <operator>++</operator><operator>++</operator>
 <operator>...</operator><operator>/</operator><name>orm</name><operator>/</operator><name>entities</name><operator>/</operator><name><name>ConfigurationBaseEntity</name><operator>.</operator><name>java</name></name> <operator>|</operator> <literal type="number">159</literal> <operator>--</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>SchemaUpgradeHelper</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">3</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog300</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">21</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>resources</name><operator>/</operator><name>Ambari</name><operator>-</operator><name>DDL</name><operator>-</operator><name>Derby</name><operator>-</operator><name><name>CREATE</name><operator>.</operator><name>sql</name></name>     <operator>|</operator>  <literal type="number">21</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>resources</name><operator>/</operator><name>Ambari</name><operator>-</operator><name>DDL</name><operator>-</operator><name>MySQL</name><operator>-</operator><name><name>CREATE</name><operator>.</operator><name>sql</name></name>     <operator>|</operator>  <literal type="number">20</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>resources</name><operator>/</operator><name>Ambari</name><operator>-</operator><name>DDL</name><operator>-</operator><name>Oracle</name><operator>-</operator><name><name>CREATE</name><operator>.</operator><name>sql</name></name>    <operator>|</operator>  <literal type="number">20</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>resources</name><operator>/</operator><name>Ambari</name><operator>-</operator><name>DDL</name><operator>-</operator><name>Postgres</name><operator>-</operator><name><name>CREATE</name><operator>.</operator><name>sql</name></name>  <operator>|</operator>  <literal type="number">19</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>Ambari</name><operator>-</operator><name>DDL</name><operator>-</operator><name>SQLAnywhere</name><operator>-</operator><name><name>CREATE</name><operator>.</operator><name>sql</name></name>         <operator>|</operator>  <literal type="number">20</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>resources</name><operator>/</operator><name>Ambari</name><operator>-</operator><name>DDL</name><operator>-</operator><name>SQLServer</name><operator>-</operator><name><name>CREATE</name><operator>.</operator><name>sql</name></name> <operator>|</operator>  <literal type="number">19</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>main</name><operator>/</operator><name>resources</name><operator>/</operator><name>META</name><operator>-</operator><name>INF</name><operator>/</operator><name><name>persistence</name><operator>.</operator><name>xml</name></name>   <operator>|</operator>   <literal type="number">1</literal> <operator>-</operator>
 <operator>...</operator><name><name>bariConfigurationResourceProviderTest</name><operator>.</operator><name>java</name></name> <operator>|</operator> <literal type="number">444</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>orm</name><operator>/</operator><name>dao</name><operator>/</operator><name><name>AmbariConfigurationDAOTest</name><operator>.</operator><name>java</name></name>   <operator>|</operator> <literal type="number">298</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog300Test</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">43</literal> <operator>++</operator>
 <literal type="number">26</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">1195</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">808</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>
 <name>rename</name> <name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>events</name><operator>/</operator><block>{<expr><name><name>AmbariLdapConfigChangedEvent</name><operator>.</operator><name>java</name></name> <operator>=</operator><operator>&gt;</operator> <name><name>AmbariConfigurationChangedEvent</name><operator>.</operator><name>java</name></name></expr>}</block> <operator>(</operator><literal type="number">59</literal><operator>%</operator><operator>)</operator>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>entities</name><operator>/</operator><name><name>AmbariConfigurationEntityPK</name><operator>.</operator><name>java</name></name>
 <name>delete</name> <name>mode</name> <literal type="number">100644</literal> <name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>entities</name><operator>/</operator><name><name>ConfigurationBaseEntity</name><operator>.</operator><name>java</name></name>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>dao</name><operator>/</operator><name><name>AmbariConfigurationDAOTest</name><operator>.</operator><name>java</name></name>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name><name>AmbariConfigurationRequestSwagger</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name><name>AmbariConfigurationRequestSwagger</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">5e8094e9c7</literal><operator>..</operator><literal type="number">2dca9f55f4</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name><name>AmbariConfigurationRequestSwagger</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name><name>AmbariConfigurationRequestSwagger</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">29</literal></expr><operator>,</operator><expr><literal type="number">19</literal> <operator>+</operator><literal type="number">29</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> interface <name>AmbariConfigurationRequestSwagger</name> extends <name>ApiModel</name> <block>{
 
   interface <expr><name>AmbariConfigurationRequestInfo</name> <block>{
     @<expr><name>ApiModelProperty</name>
    <name>Long</name> <call><name>getId</name><argument_list>()</argument_list></call></expr>;
    <expr><name>String</name> <call><name>getCategoryName</name><argument_list>()</argument_list></call></expr>;
 
     @<expr><name>ApiModelProperty</name>
    <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name> <call><name>getData</name><argument_list>()</argument_list></call></expr>;

    @<expr><name>ApiModelProperty</name>
    <name>String</name> <call><name>getType</name><argument_list>()</argument_list></call></expr>;

    @<expr><name>ApiModelProperty</name>
    <name>Long</name> <call><name>getVersion</name><argument_list>()</argument_list></call></expr>;

    @<expr><call><name>ApiModelProperty</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"version_tag"</literal></expr></argument>)</argument_list></call>
    <name>String</name> <call><name>getVersionTag</name><argument_list>()</argument_list></call></expr>;
    <expr><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name> <call><name>getProperties</name><argument_list>()</argument_list></call></expr>;
   }</block></expr>

 }</block>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name><name>AmbariConfigurationService</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name><name>AmbariConfigurationService</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">38ae7669db</literal><operator>..</operator><literal type="number">86ed666f41</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name><name>AmbariConfigurationService</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name><name>AmbariConfigurationService</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">46</literal></expr><operator>,</operator><expr><literal type="number">21</literal> <operator>+</operator><literal type="number">46</literal></expr><operator>,</operator><expr><literal type="number">21</literal> @@</expr></expr_stmt> <import>import <name><name>io</name><operator>.</operator><name>swagger</name><operator>.</operator><name>annotations</name><operator>.</operator><name>ApiResponses</name></name>;</import>
  <expr_stmt><expr><operator>*</operator> <name>Ambari</name> <name>configuration</name> <name>resources</name> <name>may</name> <name>be</name> <name>shared</name> <name>with</name> <name>components</name> <name>and</name> <name>services</name> <name>in</name> <name>the</name> <name>cluster</name>
  <operator>*</operator> <operator>(</operator><name>by</name> <name>recommending</name> <name>them</name> <name>as</name> default <name>values</name><operator>)</operator>
  <operator>*</operator>
 <operator>*</operator> <name><name>Eg</name><operator>.</operator> <name>LDAP</name></name> <name>configuration</name> <name>is</name> <name>stored</name> <name>as</name> <name><name>ambariconfiguration</name><operator>.</operator></name>
 * <name><name>Eg</name><operator>.</operator> <name>LDAP</name></name> <name>configuration</name> <name>is</name> <name>stored</name> <name>as</name> <name><name>AmbariConfiguration</name><operator>.</operator></name>
  * <name>The</name> <name>request</name> <name>payload</name> <name>has</name> <name>the</name> <name>form</name><operator>:</operator>
  <operator>*</operator>
  <operator>*</operator> <operator>&lt;</operator><name>pre</name><operator>&gt;</operator>
  <operator>*</operator>      <block>{
  <expr><operator>*</operator>        <literal type="string">"AmbariConfiguration"</literal><operator>:</operator> <block>{
 <expr><operator>*</operator>            <literal type="string">"type"</literal><operator>:</operator> <literal type="string">"ldap-configuration"</literal></expr>,
 <expr><operator>*</operator>            <literal type="string">"data"</literal><operator>:</operator> <index>[
 <expr><operator>*</operator>                <block>{
 <expr><operator>*</operator>                 <literal type="string">"authentication.ldap.primaryUrl"</literal><operator>:</operator> <literal type="string">"localhost:33389"</literal>
 <operator>*</operator>                 <literal type="string">"authentication.ldap.secondaryUrl"</literal><operator>:</operator> <literal type="string">"localhost:333"</literal>
 <operator>*</operator>                 <literal type="string">"authentication.ldap.baseDn"</literal><operator>:</operator> <literal type="string">"dc=ambari,dc=apache,dc=org"</literal>
 <operator>*</operator>                 <comment type="line">// ......</comment>
 <operator>*</operator></expr></block></expr>         ]</index>
 <operator>*</operator></expr>     }</block>
 <operator>*</operator>          <literal type="string">"category"</literal><operator>:</operator> <literal type="string">"ldap-configuration"</literal></expr>,
 <expr><operator>*</operator>          <literal type="string">"properties"</literal><operator>:</operator> <block>{
 <expr><operator>*</operator>             <literal type="string">"authentication.ldap.primaryUrl"</literal><operator>:</operator> <literal type="string">"localhost:33389"</literal>
 <operator>*</operator>             <literal type="string">"authentication.ldap.secondaryUrl"</literal><operator>:</operator> <literal type="string">"localhost:333"</literal>
 <operator>*</operator>             <literal type="string">"authentication.ldap.baseDn"</literal><operator>:</operator> <literal type="string">"dc=ambari,dc=apache,dc=org"</literal>
 <operator>*</operator>             <comment type="line">// ......</comment>
 <operator>*</operator></expr>          }</block>
 <operator>*</operator></expr>        }</block>
 <operator>*</operator></expr></expr_stmt>      }
  * <expr_stmt><expr><operator>&lt;</operator><operator>/</operator><name>pre</name><operator>&gt;</operator>
  <operator>*</operator><operator>/</operator>
 @<call><name>Path</name><argument_list>(<argument><expr><literal type="string">"/ambariconfigs/"</literal></expr></argument>)</argument_list></call>
@@ <operator>-</operator><literal type="number">96</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">96</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariConfigurationService</name> extends <name>BaseService</name> <block>{
   }</block></expr></expr_stmt>)
   <function><type><specifier>public</specifier> <name>Response</name></type> <name>createAmbariConfiguration</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>body</name></decl></parameter>, <parameter><decl><type><annotation>@<name>Context</name></annotation> <name>HttpHeaders</name></type> <name>headers</name></decl></parameter>, <parameter><decl><type><annotation>@<name>Context</name></annotation> <name>UriInfo</name></type> <name>uri</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <return>return <expr><call><name>handleRequest</name><argument_list>(<argument><expr><name>headers</name></expr></argument>, <argument><expr><name>body</name></expr></argument>, <argument><expr><name>uri</name></expr></argument>, <argument><expr><name><name>Request</name><operator>.</operator><name>Type</name><operator>.</operator><name>POST</name></name></expr></argument>, <argument><expr><call><name>createResource</name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>AmbariConfiguration</name></name></expr></argument>,
      <argument><expr><name><name>Collections</name><operator>.</operator><name>EMPTY_MAP</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
      <expr_stmt><expr><call><name><name>Collections</name><operator>.</operator><name>emptyMap</name></name><argument_list>()</argument_list></call></expr></expr_stmt>)</block_content></block></function>)<empty_stmt>;</empty_stmt>
   }
 
   @<expr_stmt><expr><name>GET</name>
@@ <operator>-</operator><literal type="number">108</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">108</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariConfigurationService</name> extends <name>BaseService</name> <block>{
     <expr><name>responseContainer</name> <operator>=</operator> <name>RESPONSE_CONTAINER_LIST</name></expr>)
   @<call><name>ApiImplicitParams</name><argument_list>(<argument><expr><block>{
     @<expr><call><name>ApiImplicitParam</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <name>QUERY_FIELDS</name></expr></argument>, <argument><expr><name>value</name> <operator>=</operator> <name>QUERY_FILTER_DESCRIPTION</name></expr></argument>,
      <argument><expr><name>defaultValue</name> <operator>=</operator> <literal type="string">"AmbariConfiguration/data, AmbariConfiguration/id, AmbariConfiguration/type"</literal></expr></argument>,
      <argument><expr><name>defaultValue</name> <operator>=</operator> <literal type="string">"AmbariConfiguration/properties, AmbariConfiguration/category"</literal></expr></argument>,
       <argument><expr><name>dataType</name> <operator>=</operator> <name>DATA_TYPE_STRING</name></expr></argument>, <argument><expr><name>paramType</name> <operator>=</operator> <name>PARAM_TYPE_QUERY</name></expr></argument>)</argument_list></call></expr>,
     @<expr><call><name>ApiImplicitParam</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <name>QUERY_SORT</name></expr></argument>, <argument><expr><name>value</name> <operator>=</operator> <name>QUERY_SORT_DESCRIPTION</name></expr></argument>,
      <argument><expr><name>defaultValue</name> <operator>=</operator> <literal type="string">"AmbariConfiguration/id"</literal></expr></argument>,
      <argument><expr><name>defaultValue</name> <operator>=</operator> <literal type="string">"AmbariConfiguration/category"</literal></expr></argument>,
       <argument><expr><name>dataType</name> <operator>=</operator> <name>DATA_TYPE_STRING</name></expr></argument>, <argument><expr><name>paramType</name> <operator>=</operator> <name>PARAM_TYPE_QUERY</name></expr></argument>)</argument_list></call></expr>,
     @<expr><call><name>ApiImplicitParam</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <name>QUERY_PAGE_SIZE</name></expr></argument>, <argument><expr><name>value</name> <operator>=</operator> <name>QUERY_PAGE_SIZE_DESCRIPTION</name></expr></argument>, <argument><expr><name>defaultValue</name> <operator>=</operator> <name>DEFAULT_PAGE_SIZE</name></expr></argument>, <argument><expr><name>dataType</name> <operator>=</operator> <name>DATA_TYPE_INT</name></expr></argument>, <argument><expr><name>paramType</name> <operator>=</operator> <name>PARAM_TYPE_QUERY</name></expr></argument>)</argument_list></call></expr>,
     @<expr><call><name>ApiImplicitParam</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <name>QUERY_FROM</name></expr></argument>, <argument><expr><name>value</name> <operator>=</operator> <name>QUERY_FROM_DESCRIPTION</name></expr></argument>, <argument><expr><name>defaultValue</name> <operator>=</operator> <name>DEFAULT_FROM</name></expr></argument>, <argument><expr><name>dataType</name> <operator>=</operator> <name>DATA_TYPE_STRING</name></expr></argument>, <argument><expr><name>paramType</name> <operator>=</operator> <name>PARAM_TYPE_QUERY</name></expr></argument>)</argument_list></call></expr>,
@@ <expr><operator>-</operator><literal type="number">123</literal></expr>,<expr><literal type="number">11</literal> <operator>+</operator><literal type="number">123</literal></expr>,<expr><literal type="number">11</literal> @@ <specifier>public</specifier> class <name>AmbariConfigurationService</name> extends <name>BaseService</name> <block>{
   }</block></expr></block></expr></argument>)</argument_list></call>
   <specifier>public</specifier> <name>Response</name> <call><name>getAmbariConfigurations</name><argument_list>(<argument><expr><name>String</name> <name>body</name></expr></argument>, <argument><expr><annotation>@<name>Context</name></annotation> <name>HttpHeaders</name> <name>headers</name></expr></argument>, <argument><expr><annotation>@<name>Context</name></annotation> <name>UriInfo</name> <name>uri</name></expr></argument>)</argument_list></call> <block>{
     <return>return <expr><call><name>handleRequest</name><argument_list>(<argument><expr><name>headers</name></expr></argument>, <argument><expr><name>body</name></expr></argument>, <argument><expr><name>uri</name></expr></argument>, <argument><expr><name><name>Request</name><operator>.</operator><name>Type</name><operator>.</operator><name>GET</name></name></expr></argument>, <argument><expr><call><name>createResource</name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>AmbariConfiguration</name></name></expr></argument>,
      <argument><expr><name><name>Collections</name><operator>.</operator><name>EMPTY_MAP</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
      <call><name><name>Collections</name><operator>.</operator><name>emptyMap</name></name><argument_list>()</argument_list></call>)</block>)</block></expr>;</expr_stmt>
   }
 
   @<expr_stmt><expr><name>GET</name>
  @<call><name>Path</name><argument_list>(<argument><expr><literal type="string">"{configurationId}"</literal></expr></argument>)</argument_list></call>
  @<call><name>Path</name><argument_list>(<argument><expr><literal type="string">"{category}"</literal></expr></argument>)</argument_list></call>
   @<call><name>Produces</name><argument_list>(<argument><expr><name><name>MediaType</name><operator>.</operator><name>TEXT_PLAIN</name></name></expr></argument>)</argument_list></call>
   @<call><name>ApiOperation</name><argument_list>(<argument><expr><name>value</name> <operator>=</operator> <literal type="string">"Retrieve the details of an ambari configuration resource"</literal></expr></argument>,
     <argument><expr><name>nickname</name> <operator>=</operator> <literal type="string">"AmbariConfigurationService#getAmbariConfiguration"</literal></expr></argument>,
<argument>@@ <expr><operator>-</operator><literal type="number">142</literal></expr></argument>,<argument><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">142</literal></expr></argument>,<argument><expr><literal type="number">13</literal> @@ <specifier>public</specifier> class <name>AmbariConfigurationService</name> extends <name>BaseService</name> <block>{
     @<expr><call><name>ApiResponse</name><argument_list>(<argument><expr><name>code</name> <operator>=</operator> <name><name>HttpStatus</name><operator>.</operator><name>SC_INTERNAL_SERVER_ERROR</name></name></expr></argument>, <argument><expr><name>message</name> <operator>=</operator> <name>MSG_SERVER_ERROR</name></expr></argument>)</argument_list></call></expr>
   }</block></expr></argument>)</argument_list></call>
   <specifier>public</specifier> <name>Response</name> <call><name>getAmbariConfiguration</name><argument_list>(<argument><expr><name>String</name> <name>body</name></expr></argument>, <argument><expr><annotation>@<name>Context</name></annotation> <name>HttpHeaders</name> <name>headers</name></expr></argument>, <argument><expr><annotation>@<name>Context</name></annotation> <name>UriInfo</name> <name>uri</name></expr></argument>,
                                         <argument><expr><annotation>@<name>PathParam</name><argument_list>(<argument><expr><literal type="string">"configurationId"</literal></expr></argument>)</argument_list></annotation> <name>String</name> <name>configurationId</name></expr></argument>)</argument_list></call> <block>{
                                         @<expr><call><name>PathParam</name><argument_list>(<argument><expr><literal type="string">"category"</literal></expr></argument>)</argument_list></call> <name>String</name> <name>category</name></expr>) <block>{
     <return>return <expr><call><name>handleRequest</name><argument_list>(<argument><expr><name>headers</name></expr></argument>, <argument><expr><name>body</name></expr></argument>, <argument><expr><name>uri</name></expr></argument>, <argument><expr><name><name>Request</name><operator>.</operator><name>Type</name><operator>.</operator><name>GET</name></name></expr></argument>, <argument><expr><call><name>createResource</name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>AmbariConfiguration</name></name></expr></argument>,
      <argument><expr><call><name><name>Collections</name><operator>.</operator><name>singletonMap</name></name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>AmbariConfiguration</name></name></expr></argument>, <argument><expr><name>configurationId</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
      <call><name><name>Collections</name><operator>.</operator><name>singletonMap</name></name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>AmbariConfiguration</name></name></expr></argument>, <argument><expr><name>category</name></expr></argument>)</argument_list></call>)</block>)</block></expr>;</expr_stmt>
   }
 
   @<expr_stmt><expr><name>PUT</name>
  @<call><name>Path</name><argument_list>(<argument><expr><literal type="string">"{configurationId}"</literal></expr></argument>)</argument_list></call>
  @<call><name>Path</name><argument_list>(<argument><expr><literal type="string">"{category}"</literal></expr></argument>)</argument_list></call>
   @<call><name>Produces</name><argument_list>(<argument><expr><name><name>MediaType</name><operator>.</operator><name>TEXT_PLAIN</name></name></expr></argument>)</argument_list></call>
   @<call><name>ApiOperation</name><argument_list>(<argument><expr><name>value</name> <operator>=</operator> <literal type="string">"Updates ambari configuration resources "</literal></expr></argument>,
     <argument><expr><name>nickname</name> <operator>=</operator> <literal type="string">"AmbariConfigurationService#updateAmbariConfiguration"</literal></expr></argument>)</argument_list></call>
@@ <operator>-</operator><literal type="number">167</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">167</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariConfigurationService</name> extends <name>BaseService</name> <block>{
     @<expr><call><name>ApiResponse</name><argument_list>(<argument><expr><name>code</name> <operator>=</operator> <name><name>HttpStatus</name><operator>.</operator><name>SC_INTERNAL_SERVER_ERROR</name></name></expr></argument>, <argument><expr><name>message</name> <operator>=</operator> <name>MSG_SERVER_ERROR</name></expr></argument>)</argument_list></call></expr>,
   }</block></expr></expr_stmt>)
   <function><type><specifier>public</specifier> <name>Response</name></type> <name>updateAmbariConfiguration</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>body</name></decl></parameter>, <parameter><decl><type><annotation>@<name>Context</name></annotation> <name>HttpHeaders</name></type> <name>headers</name></decl></parameter>, <parameter><decl><type><annotation>@<name>Context</name></annotation> <name>UriInfo</name></type> <name>uri</name></decl></parameter>,
                                            <parameter><decl><type><annotation>@<name>PathParam</name><argument_list>(<argument><expr><literal type="string">"configurationId"</literal></expr></argument>)</argument_list></annotation> <name>String</name></type> <name>configurationId</name></decl></parameter>)</parameter_list> <block>{<block_content>
                                            <annotation>@<name>PathParam</name><argument_list>(<argument><expr><literal type="string">"category"</literal></expr></argument>)</argument_list></annotation> <expr_stmt><expr><name>String</name> <name>category</name></expr></expr_stmt>)</block_content> <block>{<block_content>
     <return>return <expr><call><name>handleRequest</name><argument_list>(<argument><expr><name>headers</name></expr></argument>, <argument><expr><name>body</name></expr></argument>, <argument><expr><name>uri</name></expr></argument>, <argument><expr><name><name>Request</name><operator>.</operator><name>Type</name><operator>.</operator><name>PUT</name></name></expr></argument>, <argument><expr><call><name>createResource</name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>AmbariConfiguration</name></name></expr></argument>,
      <argument><expr><call><name><name>Collections</name><operator>.</operator><name>singletonMap</name></name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>AmbariConfiguration</name></name></expr></argument>, <argument><expr><name>configurationId</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
      <expr_stmt><expr><call><name><name>Collections</name><operator>.</operator><name>singletonMap</name></name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>AmbariConfiguration</name></name></expr></argument>, <argument><expr><name>category</name></expr></argument>)</argument_list></call></expr></expr_stmt>)</block_content></block></block></function>)<empty_stmt>;</empty_stmt>
   }
 
   @<expr_stmt><expr><name>DELETE</name>
  @<call><name>Path</name><argument_list>(<argument><expr><literal type="string">"{configurationId}"</literal></expr></argument>)</argument_list></call>
  @<call><name>Path</name><argument_list>(<argument><expr><literal type="string">"{category}"</literal></expr></argument>)</argument_list></call>
   @<call><name>Produces</name><argument_list>(<argument><expr><name><name>MediaType</name><operator>.</operator><name>TEXT_PLAIN</name></name></expr></argument>)</argument_list></call>
   @<call><name>ApiOperation</name><argument_list>(<argument><expr><name>value</name> <operator>=</operator> <literal type="string">"Deletes an ambari configuration resource"</literal></expr></argument>,
     <argument><expr><name>nickname</name> <operator>=</operator> <literal type="string">"AmbariConfigurationService#deleteAmbariConfiguration"</literal></expr></argument>)</argument_list></call>
@@ <operator>-</operator><literal type="number">185</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">185</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariConfigurationService</name> extends <name>BaseService</name> <block>{
     @<expr><call><name>ApiResponse</name><argument_list>(<argument><expr><name>code</name> <operator>=</operator> <name><name>HttpStatus</name><operator>.</operator><name>SC_INTERNAL_SERVER_ERROR</name></name></expr></argument>, <argument><expr><name>message</name> <operator>=</operator> <name>MSG_SERVER_ERROR</name></expr></argument>)</argument_list></call></expr>,
   }</block></expr></expr_stmt>)
   <function><type><specifier>public</specifier> <name>Response</name></type> <name>deleteAmbariConfiguration</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>body</name></decl></parameter>, <parameter><decl><type><annotation>@<name>Context</name></annotation> <name>HttpHeaders</name></type> <name>headers</name></decl></parameter>, <parameter><decl><type><annotation>@<name>Context</name></annotation> <name>UriInfo</name></type> <name>uri</name></decl></parameter>,
                                            <parameter><decl><type><annotation>@<name>PathParam</name><argument_list>(<argument><expr><literal type="string">"configurationId"</literal></expr></argument>)</argument_list></annotation> <name>String</name></type> <name>configurationId</name></decl></parameter>)</parameter_list> <block>{<block_content>
                                            <annotation>@<name>PathParam</name><argument_list>(<argument><expr><literal type="string">"category"</literal></expr></argument>)</argument_list></annotation> <expr_stmt><expr><name>String</name> <name>category</name></expr></expr_stmt>)</block_content> <block>{<block_content>
     <return>return <expr><call><name>handleRequest</name><argument_list>(<argument><expr><name>headers</name></expr></argument>, <argument><expr><name>body</name></expr></argument>, <argument><expr><name>uri</name></expr></argument>, <argument><expr><name><name>Request</name><operator>.</operator><name>Type</name><operator>.</operator><name>DELETE</name></name></expr></argument>, <argument><expr><call><name>createResource</name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>AmbariConfiguration</name></name></expr></argument>,
      <argument><expr><call><name><name>Collections</name><operator>.</operator><name>singletonMap</name></name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>AmbariConfiguration</name></name></expr></argument>, <argument><expr><name>configurationId</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
      <expr_stmt><expr><call><name><name>Collections</name><operator>.</operator><name>singletonMap</name></name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>AmbariConfiguration</name></name></expr></argument>, <argument><expr><name>category</name></expr></argument>)</argument_list></call></expr></expr_stmt>)</block_content></block></block></function>)<empty_stmt>;</empty_stmt>
   }
 
 }
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name>ldap</name><operator>/</operator><name><name>AmbariConfiguration</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name>ldap</name><operator>/</operator><name><name>AmbariConfiguration</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>b5cc9212da</name><operator>..</operator><name>e9f0b1e1a4</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name>ldap</name><operator>/</operator><name><name>AmbariConfiguration</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name>ldap</name><operator>/</operator><name><name>AmbariConfiguration</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">14</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">14</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt>
 
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>api</name><operator>.</operator><name>services</name><operator>.</operator><name>ldap</name></name>;</package>
 
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
  * Domain POJO representing generic ambari configuration data.
@@ -28,22 +26,7 @@ public class AmbariConfiguration {
    */</comment>
   <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>type</name></decl>;</decl_stmt>
 
  <comment type="block" format="javadoc">/**
   * Version tag
   */</comment>
  <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>versionTag</name></decl>;</decl_stmt>

  <comment type="block" format="javadoc">/**
   * Version number
   */</comment>
  <decl_stmt><decl><type><specifier>private</specifier> <name>Integer</name></type> <name>version</name></decl>;</decl_stmt>

  <comment type="block" format="javadoc">/**
   * Created timestamp
   */</comment>
  <decl_stmt><decl><type><specifier>private</specifier> <name>long</name></type> <name>createdTs</name></decl>;</decl_stmt>

  <decl_stmt><decl><type><specifier>private</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>data</name> <init>= <expr><call><name><name>Collections</name><operator>.</operator><name>emptySet</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>properties</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
 
   <function><type><specifier>public</specifier> <name>String</name></type> <name>getType</name><parameter_list>()</parameter_list> <block>{<block_content>
     <return>return <expr><name>type</name></expr>;</return>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">53</literal></expr><operator>,</operator><expr><literal type="number">35</literal> <operator>+</operator><literal type="number">36</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariConfiguration</name> <block>{
     <expr><name><name>this</name><operator>.</operator><name>type</name></name> <operator>=</operator> <name>type</name></expr>;
   }</block>
 
  <specifier>public</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name> <call><name>getData</name><argument_list>()</argument_list></call> <block>{
    <return>return <expr><name>data</name></expr>;</return>
  }</block></expr></expr_stmt>

  <function><type><specifier>public</specifier> <name>void</name></type> <name>setData</name><parameter_list>(<parameter><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>data</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>data</name></name> <operator>=</operator> <name>data</name></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>String</name></type> <name>getVersionTag</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>versionTag</name></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>void</name></type> <name>setVersionTag</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>versionTag</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>versionTag</name></name> <operator>=</operator> <name>versionTag</name></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>Integer</name></type> <name>getVersion</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>version</name></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>void</name></type> <name>setVersion</name><parameter_list>(<parameter><decl><type><name>Integer</name></type> <name>version</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>version</name></name> <operator>=</operator> <name>version</name></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>long</name></type> <name>getCreatedTs</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>createdTs</name></expr>;</return>
  <function><type><specifier>public</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>getProperties</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>properties</name></expr>;</return>
   </block_content>}</block></function>
 
  <function><type><specifier>public</specifier> <name>void</name></type> <name>setCreatedTs</name><parameter_list>(<parameter><decl><type><name>long</name></type> <name>createdTs</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>createdTs</name></name> <operator>=</operator> <name>createdTs</name></expr>;</expr_stmt>
  <function><type><specifier>public</specifier> <name>void</name></type> <name>setProperties</name><parameter_list>(<parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>data</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>properties</name></name> <operator>=</operator> <name>data</name></expr>;</expr_stmt>
   </block_content>}</block></function>
 </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name>ldap</name><operator>/</operator><name><name>LdapConfigurationService</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name>ldap</name><operator>/</operator><name><name>LdapConfigurationService</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">13f8835655</literal><operator>..</operator><literal type="number">00c13f6cfa</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name>ldap</name><operator>/</operator><name><name>LdapConfigurationService</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name>ldap</name><operator>/</operator><name><name>LdapConfigurationService</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">94</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">94</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>LdapConfigurationService</name> extends <name>AmbariConfigurationService</name> <block>{
       <expr><call><name>validateRequest</name><argument_list>(<argument><expr><name>ldapConfigurationRequest</name></expr></argument>)</argument_list></call></expr>;
 
       <expr><name>AmbariLdapConfiguration</name> <name>ambariLdapConfiguration</name> <operator>=</operator> <call><name><name>ambariLdapConfigurationFactory</name><operator>.</operator><name>createLdapConfiguration</name></name><argument_list>(
        <argument><expr><call><name><name>ldapConfigurationRequest</name><operator>.</operator><name>getAmbariConfiguration</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getData</name><argument_list>()</argument_list></call><operator>.</operator><call><name>iterator</name><argument_list>()</argument_list></call><operator>.</operator><call><name>next</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>ldapConfigurationRequest</name><operator>.</operator><name>getAmbariConfiguration</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getProperties</name><argument_list>()</argument_list></call></expr>)</block></expr>;</expr_stmt>
 
       <decl_stmt><decl><type><name>LdapConfigOperation</name></type> <name>action</name> <init>= <expr><call><name><name>LdapConfigOperation</name><operator>.</operator><name>fromAction</name></name><argument_list>(<argument><expr><call><name><name>ldapConfigurationRequest</name><operator>.</operator><name>getRequestInfo</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAction</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <switch>switch <condition>(<expr><name>action</name></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">154</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">154</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>LdapConfigurationService</name> extends <name>AmbariConfigurationService</name> <block>{
     }</block></expr></expr_stmt>
 
     <if_stmt><if>if <condition>(<expr><literal type="null">null</literal> <operator>==</operator> <call><name><name>ldapConfigurationRequest</name><operator>.</operator><name>getAmbariConfiguration</name></name><argument_list>()</argument_list></call>
      <operator>||</operator> <call><name><name>ldapConfigurationRequest</name><operator>.</operator><name>getAmbariConfiguration</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getData</name><argument_list>()</argument_list></call><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><operator>||</operator> <call><name><name>ldapConfigurationRequest</name><operator>.</operator><name>getAmbariConfiguration</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getProperties</name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr></expr_stmt>)</block_content> <block>{<block_content>
       <expr_stmt><expr><name>errMsg</name> <operator>=</operator> <call><name><name>String</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><literal type="string">"No / Invalid configuration data provided. Request: [%s]"</literal></expr></argument>, <argument><expr><name>ldapConfigurationRequest</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>LOGGER</name><operator>.</operator><name>error</name></name><argument_list>(<argument><expr><name>errMsg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><name>errMsg</name></expr></argument>)</argument_list></call></expr>;</throw>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>AmbariConfigurationResourceProvider</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>AmbariConfigurationResourceProvider</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">4f4cc7070d</literal><operator>..</operator><name>a24400dffd</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>AmbariConfigurationResourceProvider</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>AmbariConfigurationResourceProvider</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">14</literal></expr><operator>,</operator><expr><literal type="number">15</literal> <operator>+</operator><literal type="number">14</literal></expr><operator>,</operator><expr><literal type="number">15</literal> @@</expr></expr_stmt>
 
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>internal</name></name>;</package>
 
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Calendar</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>EnumSet</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>

<import>import <name><name>javax</name><operator>.</operator><name>inject</name><operator>.</operator><name>Inject</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>TreeMap</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>AmbariException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>NoSuchParentResourceException</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">35</literal></expr><operator>,</operator><expr><literal type="number">20</literal> <operator>+</operator><literal type="number">35</literal></expr><operator>,</operator><expr><literal type="number">18</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>ResourceAlreadyExistsException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>SystemException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>UnsupportedPropertyException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>utilities</name><operator>.</operator><name>PredicateHelper</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>events</name><operator>.</operator><name>AmbariEvent</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>events</name><operator>.</operator><name>AmbariLdapConfigChangedEvent</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>utilities</name><operator>.</operator><name>PropertyHelper</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>events</name><operator>.</operator><name>AmbariConfigurationChangedEvent</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>events</name><operator>.</operator><name>publishers</name><operator>.</operator><name>AmbariEventPublisher</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>dao</name><operator>.</operator><name>AmbariConfigurationDAO</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>AmbariConfigurationEntity</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>ConfigurationBaseEntity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>security</name><operator>.</operator><name>authorization</name><operator>.</operator><name>RoleAuthorization</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>collections</name><operator>.</operator><name>CollectionUtils</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>lang</name><operator>.</operator><name>StringUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>
 
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>collect</name><operator>.</operator><name>Sets</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>gson</name><operator>.</operator><name>Gson</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>gson</name><operator>.</operator><name>GsonBuilder</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>assistedinject</name><operator>.</operator><name>AssistedInject</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>Inject</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
  * Resource provider for AmbariConfiguration resources.
@@ -56,62 +54,24 @@ import com.google.inject.assistedinject.AssistedInject;
 public class AmbariConfigurationResourceProvider extends AbstractAuthorizedResourceProvider {
 
   private static final Logger LOGGER = LoggerFactory.getLogger(AmbariConfigurationResourceProvider.class);
  private static final String DEFAULT_VERSION_TAG = "Default version";
  private static final Integer DEFAULT_VERSION = 1;

  /**
   * Resource property id constants.
   */</comment>
  <enum><specifier>public</specifier> enum <name>ResourcePropertyId</name> <block>{

    <decl><name>ID</name><argument_list>(<argument><expr><literal type="string">"AmbariConfiguration/id"</literal></expr></argument>)</argument_list></decl>,
    <decl><name>TYPE</name><argument_list>(<argument><expr><literal type="string">"AmbariConfiguration/type"</literal></expr></argument>)</argument_list></decl>,
    <decl><name>VERSION</name><argument_list>(<argument><expr><literal type="string">"AmbariConfiguration/version"</literal></expr></argument>)</argument_list></decl>,
    <decl><name>VERSION_TAG</name><argument_list>(<argument><expr><literal type="string">"AmbariConfiguration/version_tag"</literal></expr></argument>)</argument_list></decl>,
    <decl><name>DATA</name><argument_list>(<argument><expr><literal type="string">"AmbariConfiguration/data"</literal></expr></argument>)</argument_list></decl>;

    <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>propertyId</name></decl>;</decl_stmt>

    <constructor><name>ResourcePropertyId</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>propertyId</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>propertyId</name></name> <operator>=</operator> <name>propertyId</name></expr>;</expr_stmt>
    </block_content>}</block></constructor>

    <function><type><name>String</name></type> <name>getPropertyId</name><parameter_list>()</parameter_list> <block>{<block_content>
      <return>return <expr><name><name>this</name><operator>.</operator><name>propertyId</name></name></expr>;</return>
    </block_content>}</block></function>
 
    <function><type><specifier>public</specifier> <specifier>static</specifier> <name>ResourcePropertyId</name></type> <name>fromString</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>propertyIdStr</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <decl_stmt><decl><type><name>ResourcePropertyId</name></type> <name>propertyIdFromStr</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>AMBARI_CONFIGURATION_CATEGORY_PROPERTY_ID</name> <init>= <expr><call><name><name>PropertyHelper</name><operator>.</operator><name>getPropertyId</name></name><argument_list>(<argument><expr><literal type="string">"AmbariConfiguration"</literal></expr></argument>, <argument><expr><literal type="string">"category"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>AMBARI_CONFIGURATION_PROPERTIES_PROPERTY_ID</name> <init>= <expr><call><name><name>PropertyHelper</name><operator>.</operator><name>getPropertyId</name></name><argument_list>(<argument><expr><literal type="string">"AmbariConfiguration"</literal></expr></argument>, <argument><expr><literal type="string">"properties"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
      <for>for <control>(<init><decl><type><name>ResourcePropertyId</name></type> <name>id</name> <range>: <expr><call><name><name>ResourcePropertyId</name><operator>.</operator><name>values</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><call><name><name>id</name><operator>.</operator><name>getPropertyId</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>propertyIdStr</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><name>propertyIdFromStr</name> <operator>=</operator> <name>id</name></expr>;</expr_stmt>
          <break>break;</break>
        </block_content>}</block></if></if_stmt>
      </block_content>}</block></for>

      <if_stmt><if>if <condition>(<expr><name>propertyIdFromStr</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><literal type="string">"Unsupported property type: "</literal> <operator>+</operator> <name>propertyIdStr</name></expr></argument>)</argument_list></call></expr>;</throw>
      </block_content>}</block></if></if_stmt>

      <return>return <expr><name>propertyIdFromStr</name></expr>;</return>

    </block_content>}</block></function>
  }</block></enum>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>PROPERTIES</name> <init>= <expr><call><name><name>Collections</name><operator>.</operator><name>unmodifiableSet</name></name><argument_list>(
      <argument><expr><operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>(<argument><expr><call><name><name>Arrays</name><operator>.</operator><name>asList</name></name><argument_list>(
          <argument><expr><name>AMBARI_CONFIGURATION_CATEGORY_PROPERTY_ID</name></expr></argument>,
          <argument><expr><name>AMBARI_CONFIGURATION_PROPERTIES_PROPERTY_ID</name></expr></argument>)</argument_list></call></expr></argument>
      )</argument_list></call></expr></argument>
  )</argument_list></call></expr></init></decl>;</decl_stmt>
 
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>PROPERTIES</name> <init>= <expr><call><name><name>Sets</name><operator>.</operator><name>newHashSet</name></name><argument_list>(
    <argument><expr><call><name><name>ResourcePropertyId</name><operator>.</operator><name>ID</name><operator>.</operator><name>getPropertyId</name></name><argument_list>()</argument_list></call></expr></argument>,
    <argument><expr><call><name><name>ResourcePropertyId</name><operator>.</operator><name>TYPE</name><operator>.</operator><name>getPropertyId</name></name><argument_list>()</argument_list></call></expr></argument>,
    <argument><expr><call><name><name>ResourcePropertyId</name><operator>.</operator><name>VERSION</name><operator>.</operator><name>getPropertyId</name></name><argument_list>()</argument_list></call></expr></argument>,
    <argument><expr><call><name><name>ResourcePropertyId</name><operator>.</operator><name>VERSION_TAG</name><operator>.</operator><name>getPropertyId</name></name><argument_list>()</argument_list></call></expr></argument>,
    <argument><expr><call><name><name>ResourcePropertyId</name><operator>.</operator><name>DATA</name><operator>.</operator><name>getPropertyId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name><name>Resource</name><operator>.</operator><name>Type</name></name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>PK_PROPERTY_MAP</name> <init>= <expr><call><name><name>Collections</name><operator>.</operator><name>unmodifiableMap</name></name><argument_list>(
    <argument><expr><operator>new</operator> <class><super><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name><name>Resource</name><operator>.</operator><name>Type</name></name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{<block>{<block_content>
      <expr_stmt><expr><call><name>put</name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>AmbariConfiguration</name></name></expr></argument>, <argument><expr><call><name><name>ResourcePropertyId</name><operator>.</operator><name>ID</name><operator>.</operator><name>getPropertyId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block>}</block></class>
  <specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name><name>Map</name><argument_list type="generic">&lt;<argument><name><name>Resource</name><operator>.</operator><name>Type</name></name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name> <name>PK_PROPERTY_MAP</name> <operator>=</operator> <call><name><name>Collections</name><operator>.</operator><name>unmodifiableMap</name></name><argument_list>(
      <argument><expr><call><name><name>Collections</name><operator>.</operator><name>singletonMap</name></name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>AmbariConfiguration</name></name></expr></argument>, <argument><expr><name>AMBARI_CONFIGURATION_CATEGORY_PROPERTY_ID</name></expr></argument>)</argument_list></call></expr></argument>
   )</argument_list></call></expr></argument>;</argument_list></call></expr></init></decl></decl_stmt>
 
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>PK_PROPERTY_IDS</name> <init>= <expr><call><name><name>Collections</name><operator>.</operator><name>unmodifiableSet</name></name><argument_list>(
      <argument><expr><operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>(<argument><expr><call><name><name>PK_PROPERTY_MAP</name><operator>.</operator><name>values</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>
  )</argument_list></call></expr></init></decl>;</decl_stmt>
 
   <decl_stmt><decl><annotation>@<name>Inject</name></annotation>
   <type><specifier>private</specifier> <name>AmbariConfigurationDAO</name></type> <name>ambariConfigurationDAO</name></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">119</literal></expr><operator>,</operator><expr><literal type="number">210</literal> <operator>+</operator><literal type="number">79</literal></expr><operator>,</operator><expr><literal type="number">224</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariConfigurationResourceProvider</name> extends <name>AbstractAuthorizedResou</name>
   @<name>Inject</name>
   <specifier>private</specifier> <name>AmbariEventPublisher</name> <name>publisher</name></expr>;</expr_stmt>
 

  <decl_stmt><decl><type><specifier>private</specifier> <name>Gson</name></type> <name>gson</name></decl>;</decl_stmt>

  <constructor><annotation>@<name>AssistedInject</name></annotation>
   <specifier>public</specifier> <name>AmbariConfigurationResourceProvider</name><parameter_list>()</parameter_list> <block>{<block_content>
     <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>PROPERTIES</name></expr></argument>, <argument><expr><name>PK_PROPERTY_MAP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>setRequiredCreateAuthorizations</name><argument_list>(<argument><expr><call><name><name>EnumSet</name><operator>.</operator><name>of</name></name><argument_list>(<argument><expr><name><name>RoleAuthorization</name><operator>.</operator><name>AMBARI_MANAGE_CONFIGURATION</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>setRequiredDeleteAuthorizations</name><argument_list>(<argument><expr><call><name><name>EnumSet</name><operator>.</operator><name>of</name></name><argument_list>(<argument><expr><name><name>RoleAuthorization</name><operator>.</operator><name>AMBARI_MANAGE_CONFIGURATION</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
    <expr_stmt><expr><name>gson</name> <operator>=</operator> <operator>new</operator> <call><name>GsonBuilder</name><argument_list>()</argument_list></call><operator>.</operator><call><name>create</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>RoleAuthorization</name></argument>&gt;</argument_list></name></type> <name>authorizations</name> <init>= <expr><call><name><name>EnumSet</name><operator>.</operator><name>of</name></name><argument_list>(<argument><expr><name><name>RoleAuthorization</name><operator>.</operator><name>AMBARI_MANAGE_CONFIGURATION</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>setRequiredCreateAuthorizations</name><argument_list>(<argument><expr><name>authorizations</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>setRequiredDeleteAuthorizations</name><argument_list>(<argument><expr><name>authorizations</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>setRequiredUpdateAuthorizations</name><argument_list>(<argument><expr><name>authorizations</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>setRequiredGetAuthorizations</name><argument_list>(<argument><expr><name>authorizations</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></constructor>
 
   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>protected</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>getPKPropertyIds</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><call><name><name>Sets</name><operator>.</operator><name>newHashSet</name></name><argument_list>(<argument><expr><call><name><name>ResourcePropertyId</name><operator>.</operator><name>ID</name><operator>.</operator><name>getPropertyId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
    <return>return <expr><name>PK_PROPERTY_IDS</name></expr>;</return>
   </block_content>}</block></function>
 
   <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>RequestStatus</name></type> <name>createResourcesAuthorized</name><parameter_list>(<parameter><decl><type><name>Request</name></type> <name>request</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>SystemException</name></expr></argument>, <argument><expr><name>UnsupportedPropertyException</name></expr></argument>,
    <argument><expr><name>ResourceAlreadyExistsException</name></expr></argument>, <argument><expr><name>NoSuchParentResourceException</name></expr></argument></throws> <block>{<block_content>

    <expr_stmt><expr><call><name><name>LOGGER</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Creating new ambari configuration resource ..."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>AmbariConfigurationEntity</name></type> <name>ambariConfigurationEntity</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
    <try>try <block>{<block_content>
      <expr_stmt><expr><name>ambariConfigurationEntity</name> <operator>=</operator> <call><name>getEntityFromRequest</name><argument_list>(<argument><expr><name>request</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>AmbariException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>NoSuchParentResourceException</name><argument_list>(<argument><expr><call><name><name>e</name><operator>.</operator><name>getMessage</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></catch></try>

    <expr_stmt><expr><call><name><name>LOGGER</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Persisting new ambari configuration: {} "</literal></expr></argument>, <argument><expr><name>ambariConfigurationEntity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <try>try <block>{<block_content>
      <expr_stmt><expr><call><name><name>ambariConfigurationDAO</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><name>ambariConfigurationEntity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name><name>LOGGER</name><operator>.</operator><name>error</name></name><argument_list>(<argument><expr><literal type="string">"Failed to create resource"</literal></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <throw>throw <expr><operator>new</operator> <call><name>ResourceAlreadyExistsException</name><argument_list>(<argument><expr><call><name><name>e</name><operator>.</operator><name>getMessage</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></catch></try>
  <function><type><specifier>public</specifier> <name>RequestStatus</name></type> <name>createResourcesAuthorized</name><parameter_list>(<parameter><decl><type><name>Request</name></type> <name>request</name></decl></parameter>)</parameter_list>
      <throws>throws <argument><expr><name>SystemException</name></expr></argument>, <argument><expr><name>UnsupportedPropertyException</name></expr></argument>, <argument><expr><name>ResourceAlreadyExistsException</name></expr></argument>, <argument><expr><name>NoSuchParentResourceException</name></expr></argument></throws> <block>{<block_content>
 
    <comment type="line">// todo filter by configuration type</comment>
    <comment type="line">// notify subscribers about the configuration changes</comment>
    <expr_stmt><expr><call><name><name>publisher</name><operator>.</operator><name>publish</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>AmbariLdapConfigChangedEvent</name><argument_list>(<argument><expr><name><name>AmbariEvent</name><operator>.</operator><name>AmbariEventType</name><operator>.</operator><name>LDAP_CONFIG_CHANGED</name></name></expr></argument>,
      <argument><expr><call><name><name>ambariConfigurationEntity</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>createOrAddProperties</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><call><name><name>request</name><operator>.</operator><name>getProperties</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <return>return <expr><call><name>getRequestStatus</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
 

   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>protected</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>Resource</name></argument>&gt;</argument_list></name></type> <name>getResourcesAuthorized</name><parameter_list>(<parameter><decl><type><name>Request</name></type> <name>request</name></decl></parameter>, <parameter><decl><type><name>Predicate</name></type> <name>predicate</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>SystemException</name></expr></argument>,
    <argument><expr><name>UnsupportedPropertyException</name></expr></argument>, <argument><expr><name>NoSuchResourceException</name></expr></argument>, <argument><expr><name>NoSuchParentResourceException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>Resource</name></argument>&gt;</argument_list></name></type> <name>resources</name> <init>= <expr><call><name><name>Sets</name><operator>.</operator><name>newHashSet</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><name>UnsupportedPropertyException</name></expr><operator>,</operator> <expr><name>NoSuchResourceException</name></expr><operator>,</operator> <expr><name>NoSuchParentResourceException</name> <block>{
 
    <comment type="line">// retrieves allconfigurations, filtering is done at a higher level</comment>
    <expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>AmbariConfigurationEntity</name></argument>&gt;</argument_list></name> <name>ambariConfigurationEntities</name> <operator>=</operator> <call><name><name>ambariConfigurationDAO</name><operator>.</operator><name>findAll</name></name><argument_list>()</argument_list></call></expr>;</block></expr></expr_stmt>
    <for>for <control>(<init><decl><type><name>AmbariConfigurationEntity</name></type> <name>ambariConfigurationEntity</name> <range>: <expr><name>ambariConfigurationEntities</name></expr></range></decl></init>)</control> <block>{<block_content>
      <try>try <block>{<block_content>
        <expr_stmt><expr><call><name><name>resources</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name>toResource</name><argument_list>(<argument><expr><name>ambariConfigurationEntity</name></expr></argument>, <argument><expr><call><name>getPropertyIds</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>AmbariException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name><name>LOGGER</name><operator>.</operator><name>error</name></name><argument_list>(<argument><expr><literal type="string">"Error while retrieving ambari configuration"</literal></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><call><name>getResources</name><argument_list>(<argument><expr><operator>new</operator> <class><super><name><name>Command</name><argument_list type="generic">&lt;<argument><name><name>Set</name><argument_list type="generic">&lt;<argument><name>Resource</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{
      <function><annotation>@<name>Override</name></annotation>
      <type><specifier>public</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>Resource</name></argument>&gt;</argument_list></name></type> <name>invoke</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>AmbariException</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>Resource</name></argument>&gt;</argument_list></name></type> <name>resources</name> <init>= <expr><operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>requestedIds</name> <init>= <expr><call><name>getRequestPropertyIds</name><argument_list>(<argument><expr><name>request</name></expr></argument>, <argument><expr><name>predicate</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt><if>if <condition>(<expr><call><name><name>CollectionUtils</name><operator>.</operator><name>isEmpty</name></name><argument_list>(<argument><expr><name>requestedIds</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><name>requestedIds</name> <operator>=</operator> <name>PROPERTIES</name></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>

        <if_stmt><if>if <condition>(<expr><name>predicate</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
          <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>Resource</name></argument>&gt;</argument_list></name></type> <name>_resources</name> <init>= <expr><call><name>getAmbariConfigurationResources</name><argument_list>(<argument><expr><name>requestedIds</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>CollectionUtils</name><operator>.</operator><name>isEmpty</name></name><argument_list>(<argument><expr><name>_resources</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>resources</name><operator>.</operator><name>addAll</name></name><argument_list>(<argument><expr><name>_resources</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          </block_content>}</block></if></if_stmt>
        </block_content>}</block></if> <else>else <block>{<block_content>
          <for>for <control>(<init><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>propertyMap</name> <range>: <expr><call><name>getPropertyMaps</name><argument_list>(<argument><expr><name>predicate</name></expr></argument>)</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
            <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>Resource</name></argument>&gt;</argument_list></name></type> <name>_resources</name> <init>= <expr><call><name>getAmbariConfigurationResources</name><argument_list>(<argument><expr><name>requestedIds</name></expr></argument>, <argument><expr><name>propertyMap</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>CollectionUtils</name><operator>.</operator><name>isEmpty</name></name><argument_list>(<argument><expr><name>_resources</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
              <expr_stmt><expr><call><name><name>resources</name><operator>.</operator><name>addAll</name></name><argument_list>(<argument><expr><name>_resources</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
          </block_content>}</block></for>
        </block_content>}</block></else></if_stmt>

        <return>return <expr><name>resources</name></expr>;</return>
       </block_content>}</block></function>
    }</block></class></expr></argument></argument_list></call></expr></return>
    <return>return <expr><name>resources</name></expr>;</return>
    </block_content>}</block></catch></try>)</block_content></block><empty_stmt>;</empty_stmt></for>
   </block_content>}</block></function>
 

   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>protected</specifier> <name>RequestStatus</name></type> <name>deleteResourcesAuthorized</name><parameter_list>(<parameter><decl><type><name>Request</name></type> <name>request</name></decl></parameter>, <parameter><decl><type><name>Predicate</name></type> <name>predicate</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>SystemException</name></expr></argument>,
    <argument><expr><name>UnsupportedPropertyException</name></expr></argument>, <argument><expr><name>NoSuchResourceException</name></expr></argument>, <argument><expr><name>NoSuchParentResourceException</name></expr></argument></throws> <block>{<block_content>
      <expr_stmt><expr><name>UnsupportedPropertyException</name></expr><operator>,</operator> <expr><name>NoSuchResourceException</name></expr><operator>,</operator> <expr><name>NoSuchParentResourceException</name> <block>{
 
    <expr><name>Long</name> <name>idFromRequest</name> <operator>=</operator> <call><name><name>Long</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <call><name><name>PredicateHelper</name><operator>.</operator><name>getProperties</name></name><argument_list>(<argument><expr><name>predicate</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><call><name><name>ResourcePropertyId</name><operator>.</operator><name>ID</name><operator>.</operator><name>getPropertyId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <name>String</name> <name>categoryName</name> <operator>=</operator> <operator>(</operator><name>String</name><operator>)</operator> <call><name><name>PredicateHelper</name><operator>.</operator><name>getProperties</name></name><argument_list>(<argument><expr><name>predicate</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name>AMBARI_CONFIGURATION_CATEGORY_PROPERTY_ID</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
 
    <if_stmt><if>if <condition>(<expr><literal type="null">null</literal> <operator>==</operator> <name>idFromRequest</name></expr>)</condition> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><literal type="null">null</literal> <operator>==</operator> <name>categoryName</name></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><call><name><name>LOGGER</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"No resource id provided in the request"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></if> <else>else <block>{<block_content>
      <expr_stmt><expr><call><name><name>LOGGER</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"Deleting amari configuration with id: {}"</literal></expr></argument>, <argument><expr><name>idFromRequest</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>LOGGER</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"Deleting Ambari configuration with id: {}"</literal></expr></argument>, <argument><expr><name>categoryName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <try>try <block>{<block_content>
        <expr_stmt><expr><call><name><name>ambariConfigurationDAO</name><operator>.</operator><name>removeByPK</name></name><argument_list>(<argument><expr><name>idFromRequest</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>ambariConfigurationDAO</name><operator>.</operator><name>removeByCategory</name></name><argument_list>(<argument><expr><name>categoryName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IllegalStateException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <throw>throw <expr><operator>new</operator> <call><name>NoSuchResourceException</name><argument_list>(<argument><expr><call><name><name>e</name><operator>.</operator><name>getMessage</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
       </block_content>}</block></catch></try>

     </block_content>}</block></else></if_stmt>
 
     <comment type="line">// notify subscribers about the configuration changes</comment>
    <expr_stmt><expr><call><name><name>publisher</name><operator>.</operator><name>publish</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>AmbariLdapConfigChangedEvent</name><argument_list>(<argument><expr><name><name>AmbariEvent</name><operator>.</operator><name>AmbariEventType</name><operator>.</operator><name>LDAP_CONFIG_CHANGED</name></name></expr></argument>, <argument><expr><name>idFromRequest</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    <expr_stmt><expr><call><name><name>publisher</name><operator>.</operator><name>publish</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>AmbariConfigurationChangedEvent</name><argument_list>(<argument><expr><name>categoryName</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <return>return <expr><call><name>getRequestStatus</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</return>

   </block_content>}</block></if></if_stmt>
 
   <function><annotation>@<name>Override</name></annotation>
  <type><specifier>protected</specifier> <name>RequestStatus</name></type> <name>updateResourcesAuthorized</name><parameter_list>(<parameter><decl><type><name>Request</name></type> <name>request</name></decl></parameter>, <parameter><decl><type><name>Predicate</name></type> <name>predicate</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>SystemException</name></expr></argument>,
    <argument><expr><name>UnsupportedPropertyException</name></expr></argument>, <argument><expr><name>NoSuchResourceException</name></expr></argument>, <argument><expr><name>NoSuchParentResourceException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>Long</name></type> <name>idFromRequest</name> <init>= <expr><call><name><name>Long</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <call><name><name>PredicateHelper</name><operator>.</operator><name>getProperties</name></name><argument_list>(<argument><expr><name>predicate</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><call><name><name>ResourcePropertyId</name><operator>.</operator><name>ID</name><operator>.</operator><name>getPropertyId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>AmbariConfigurationEntity</name></type> <name>persistedEntity</name> <init>= <expr><call><name><name>ambariConfigurationDAO</name><operator>.</operator><name>findByPK</name></name><argument_list>(<argument><expr><name>idFromRequest</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>persistedEntity</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>String</name></type> <name>errorMsg</name> <init>= <expr><call><name><name>String</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><literal type="string">"Entity with primary key [ %s ] not found in the database."</literal></expr></argument>, <argument><expr><name>idFromRequest</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>LOGGER</name><operator>.</operator><name>error</name></name><argument_list>(<argument><expr><name>errorMsg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <throw>throw <expr><operator>new</operator> <call><name>NoSuchResourceException</name><argument_list>(<argument><expr><name>errorMsg</name></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></if></if_stmt>
  <function><type><specifier>protected</specifier> <name>RequestStatus</name></type> <name>updateResourcesAuthorized</name><parameter_list>(<parameter><decl><type><name>Request</name></type> <name>request</name></decl></parameter>, <parameter><decl><type><name>Predicate</name></type> <name>predicate</name></decl></parameter>)</parameter_list>
      <throws>throws <argument><expr><name>SystemException</name></expr></argument>, <argument><expr><name>UnsupportedPropertyException</name></expr></argument>, <argument><expr><name>NoSuchResourceException</name></expr></argument>, <argument><expr><name>NoSuchParentResourceException</name></expr></argument></throws> <block>{<block_content>
 
    <try>try <block>{<block_content>

      <decl_stmt><decl><type><name>AmbariConfigurationEntity</name></type> <name>entityFromRequest</name> <init>= <expr><call><name>getEntityFromRequest</name><argument_list>(<argument><expr><name>request</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>persistedEntity</name><operator>.</operator><name>getConfigurationBaseEntity</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>setVersionTag</name><argument_list>(<argument><expr><call><name><name>entityFromRequest</name><operator>.</operator><name>getConfigurationBaseEntity</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getVersionTag</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>persistedEntity</name><operator>.</operator><name>getConfigurationBaseEntity</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>setVersion</name><argument_list>(<argument><expr><call><name><name>entityFromRequest</name><operator>.</operator><name>getConfigurationBaseEntity</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getVersion</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>persistedEntity</name><operator>.</operator><name>getConfigurationBaseEntity</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>setType</name><argument_list>(<argument><expr><call><name><name>entityFromRequest</name><operator>.</operator><name>getConfigurationBaseEntity</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getType</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>persistedEntity</name><operator>.</operator><name>getConfigurationBaseEntity</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>setConfigurationData</name><argument_list>(<argument><expr><call><name><name>entityFromRequest</name><operator>.</operator><name>getConfigurationBaseEntity</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getConfigurationData</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>persistedEntity</name><operator>.</operator><name>getConfigurationBaseEntity</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>setConfigurationAttributes</name><argument_list>(<argument><expr><call><name><name>entityFromRequest</name><operator>.</operator><name>getConfigurationBaseEntity</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getConfigurationAttributes</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>categoryName</name> <init>= <expr><operator>(</operator><name>String</name><operator>)</operator> <call><name><name>PredicateHelper</name><operator>.</operator><name>getProperties</name></name><argument_list>(<argument><expr><name>predicate</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name>AMBARI_CONFIGURATION_CATEGORY_PROPERTY_ID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>createOrAddProperties</name><argument_list>(<argument><expr><name>categoryName</name></expr></argument>, <argument><expr><call><name><name>request</name><operator>.</operator><name>getProperties</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
    <return>return <expr><call><name>getRequestStatus</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></try>
 
      <expr_stmt><expr><call><name><name>ambariConfigurationDAO</name><operator>.</operator><name>update</name></name><argument_list>(<argument><expr><name>persistedEntity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function> <catch>catch <parameter_list>(<parameter><decl><type><name>AmbariException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>NoSuchParentResourceException</name><argument_list>(<argument><expr><call><name><name>e</name><operator>.</operator><name>getMessage</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
  <comment type="block" format="javadoc">/**
   * Retrieves groups of properties from the request data and create or updates them as needed.
   * &lt;p&gt;
   * Each group of properties is expected to have a category (&lt;code&gt;AmbariConfiguration/category&lt;/code&gt;)
   * value and one or more property (&lt;code&gt;AmbariConfiguration/properties/property.name&lt;/code&gt;) values.
   * If a category cannot be determined from the propery set, the default category value (passed in)
   * is used.  If a default category is set, it is assumed that it was parsed from the request predicate
   * (if availabe).
   *
   * @param defaultCategoryName            the default category to use if needed
   * @param requestProperties              a collection of property maps parsed from the request
   * @param removePropertiesIfNotSpecified &lt;code&gt;true&lt;/code&gt; to remove existing properties that have not been specifed in the request; &lt;code&gt;false&lt;/code&gt; append or update the existing set of properties with values from the request
   * @throws SystemException if an error occurs saving the configuration data
   */</comment>
  <function><type><specifier>private</specifier> <name>void</name></type> <name>createOrAddProperties</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>defaultCategoryName</name></decl></parameter>, <parameter><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>requestProperties</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>removePropertiesIfNotSpecified</name></decl></parameter>)</parameter_list>
      <throws>throws <argument><expr><name>SystemException</name></expr></argument></throws> <block>{<block_content>
    <comment type="line">// set of resource properties (each entry in the set belongs to a different resource)</comment>
    <if_stmt><if>if <condition>(<expr><name>requestProperties</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <for>for <control>(<init><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>resourceProperties</name> <range>: <expr><name>requestProperties</name></expr></range></decl></init>)</control> <block>{<block_content>
        <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>entityMap</name> <init>= <expr><call><name>parseProperties</name><argument_list>(<argument><expr><name>defaultCategoryName</name></expr></argument>, <argument><expr><name>resourceProperties</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt><if>if <condition>(<expr><name>entityMap</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
          <for>for <control>(<init><decl><type><name><name>Map</name><operator>.</operator><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></name></type> <name>entry</name> <range>: <expr><call><name><name>entityMap</name><operator>.</operator><name>entrySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
            <decl_stmt><decl><type><name>String</name></type> <name>categoryName</name> <init>= <expr><call><name><name>entry</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt><if>if <condition>(<expr><call><name><name>ambariConfigurationDAO</name><operator>.</operator><name>reconcileCategory</name></name><argument_list>(<argument><expr><name>categoryName</name></expr></argument>, <argument><expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>removePropertiesIfNotSpecified</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
              <comment type="line">// notify subscribers about the configuration changes</comment>
              <expr_stmt><expr><call><name><name>publisher</name><operator>.</operator><name>publish</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>AmbariConfigurationChangedEvent</name><argument_list>(<argument><expr><name>categoryName</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
          </block_content>}</block></for>
        </block_content>}</block></if></if_stmt>
      </block_content>}</block></for>
     </block_content>}</block></if></if_stmt>
  </block_content>}</block></function>
 
    <expr_stmt><expr><call><name><name>publisher</name><operator>.</operator><name>publish</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>AmbariLdapConfigChangedEvent</name><argument_list>(<argument><expr><name><name>AmbariEvent</name><operator>.</operator><name>AmbariEventType</name><operator>.</operator><name>LDAP_CONFIG_CHANGED</name></name></expr></argument>,
      <argument><expr><call><name><name>persistedEntity</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <function><type><specifier>private</specifier> <name>Resource</name></type> <name>toResource</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>categoryName</name></decl></parameter>, <parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>properties</name></decl></parameter>, <parameter><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>requestedIds</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>Resource</name></type> <name>resource</name> <init>= <expr><operator>new</operator> <call><name>ResourceImpl</name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>AmbariConfiguration</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>setResourceProperty</name><argument_list>(<argument><expr><name>resource</name></expr></argument>, <argument><expr><name>AMBARI_CONFIGURATION_CATEGORY_PROPERTY_ID</name></expr></argument>, <argument><expr><name>categoryName</name></expr></argument>, <argument><expr><name>requestedIds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>setResourceProperty</name><argument_list>(<argument><expr><name>resource</name></expr></argument>, <argument><expr><name>AMBARI_CONFIGURATION_PROPERTIES_PROPERTY_ID</name></expr></argument>, <argument><expr><name>properties</name></expr></argument>, <argument><expr><name>requestedIds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name>resource</name></expr>;</return>
  </block_content>}</block></function>
 
    <return>return <expr><call><name>getRequestStatus</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</return>
  <comment type="block" format="javadoc">/**
   * Parse the property map from a request into a map of category names to maps of property names and values.
   *
   * @param defaultCategoryName the default category name to use if one is not found in the map of properties
   * @param resourceProperties  a map of properties from a request item
   * @return a map of category names to maps of name/value pairs
   * @throws SystemException if an issue with the data is determined
   */</comment>
  <function><type><specifier>private</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>parseProperties</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>defaultCategoryName</name></decl></parameter>, <parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>resourceProperties</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>SystemException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>String</name></type> <name>categoryName</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>properties</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
  </block_content>}</block></function>
    <for>for <control>(<init><decl><type><name><name>Map</name><operator>.</operator><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></name></type> <name>entry</name> <range>: <expr><call><name><name>resourceProperties</name><operator>.</operator><name>entrySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
      <decl_stmt><decl><type><name>String</name></type> <name>propertyName</name> <init>= <expr><call><name><name>entry</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
  <function><type><specifier>private</specifier> <name>Resource</name></type> <name>toResource</name><parameter_list>(<parameter><decl><type><name>AmbariConfigurationEntity</name></type> <name>entity</name></decl></parameter>, <parameter><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>requestedIds</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>AmbariException</name></expr></argument></throws> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><call><name><name>AMBARI_CONFIGURATION_CATEGORY_PROPERTY_ID</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>propertyName</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call> <operator>instanceof</operator> <name>String</name></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><name>categoryName</name> <operator>=</operator> <operator>(</operator><name>String</name><operator>)</operator> <call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
      </block_content>}</block></if> <else>else <block>{<block_content>
        <decl_stmt><decl><type><name>String</name></type> <name>propertyCategory</name> <init>= <expr><call><name><name>PropertyHelper</name><operator>.</operator><name>getPropertyCategory</name></name><argument_list>(<argument><expr><call><name><name>entry</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><operator>(</operator><name>propertyCategory</name> <operator>!=</operator> <literal type="null">null</literal><operator>)</operator> <operator>&amp;&amp;</operator> <call><name><name>propertyCategory</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>AMBARI_CONFIGURATION_PROPERTIES_PROPERTY_ID</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
          <decl_stmt><decl><type><name>String</name></type> <name>name</name> <init>= <expr><call><name><name>PropertyHelper</name><operator>.</operator><name>getPropertyName</name></name><argument_list>(<argument><expr><call><name><name>entry</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <decl_stmt><decl><type><name>Object</name></type> <name>value</name> <init>= <expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
          <expr_stmt><expr><call><name><name>properties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><ternary><condition><expr><operator>(</operator><name>value</name> <operator>==</operator> <literal type="null">null</literal><operator>)</operator></expr> ?</condition><then> <expr><literal type="null">null</literal></expr> </then><else>: <expr><call><name><name>value</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
      </block_content>}</block></else></if_stmt>
    </block_content>}</block></function>
 
    <if_stmt><if>if <condition>(<expr><literal type="null">null</literal> <operator>==</operator> <name>entity</name></expr>)</condition> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><literal type="string">"Null entity can't be transformed into a resource"</literal></expr></argument>)</argument_list></call></expr>;</throw>
    <if_stmt><if>if <condition>(<expr><name>categoryName</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>categoryName</name> <operator>=</operator> <name>defaultCategoryName</name></expr>;</expr_stmt>
     </block_content>}</block></if></if_stmt>
 
    <if_stmt><if>if <condition>(<expr><literal type="null">null</literal> <operator>==</operator> <call><name><name>entity</name><operator>.</operator><name>getConfigurationBaseEntity</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><literal type="string">"Invalid configuration entity can't be transformed into a resource"</literal></expr></argument>)</argument_list></call></expr>;</throw>
    <if_stmt><if>if <condition>(<expr><call><name><name>StringUtils</name><operator>.</operator><name>isEmpty</name></name><argument_list>(<argument><expr><name>categoryName</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>SystemException</name><argument_list>(<argument><expr><literal type="string">"The configuration type must be set"</literal></expr></argument>)</argument_list></call></expr>;</throw>
     </block_content>}</block></if></if_stmt>
    <decl_stmt><decl><type><name>Resource</name></type> <name>resource</name> <init>= <expr><operator>new</operator> <call><name>ResourceImpl</name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>AmbariConfiguration</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>configurationSet</name> <init>= <expr><call><name><name>gson</name><operator>.</operator><name>fromJson</name></name><argument_list>(<argument><expr><call><name><name>entity</name><operator>.</operator><name>getConfigurationBaseEntity</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getConfigurationData</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>Set</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
    <expr_stmt><expr><call><name>setResourceProperty</name><argument_list>(<argument><expr><name>resource</name></expr></argument>, <argument><expr><call><name><name>ResourcePropertyId</name><operator>.</operator><name>ID</name><operator>.</operator><name>getPropertyId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>entity</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>requestedIds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>setResourceProperty</name><argument_list>(<argument><expr><name>resource</name></expr></argument>, <argument><expr><call><name><name>ResourcePropertyId</name><operator>.</operator><name>TYPE</name><operator>.</operator><name>getPropertyId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>entity</name><operator>.</operator><name>getConfigurationBaseEntity</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getType</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>requestedIds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>setResourceProperty</name><argument_list>(<argument><expr><name>resource</name></expr></argument>, <argument><expr><call><name><name>ResourcePropertyId</name><operator>.</operator><name>DATA</name><operator>.</operator><name>getPropertyId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>configurationSet</name></expr></argument>, <argument><expr><name>requestedIds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>setResourceProperty</name><argument_list>(<argument><expr><name>resource</name></expr></argument>, <argument><expr><call><name><name>ResourcePropertyId</name><operator>.</operator><name>VERSION</name><operator>.</operator><name>getPropertyId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>entity</name><operator>.</operator><name>getConfigurationBaseEntity</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getVersion</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>requestedIds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>setResourceProperty</name><argument_list>(<argument><expr><name>resource</name></expr></argument>, <argument><expr><call><name><name>ResourcePropertyId</name><operator>.</operator><name>VERSION_TAG</name><operator>.</operator><name>getPropertyId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>entity</name><operator>.</operator><name>getConfigurationBaseEntity</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getVersionTag</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>requestedIds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><call><name><name>properties</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>SystemException</name><argument_list>(<argument><expr><literal type="string">"The configuration properties must be set"</literal></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></if></if_stmt>
 
    <return>return <expr><name>resource</name></expr>;</return>
    <return>return <expr><call><name><name>Collections</name><operator>.</operator><name>singletonMap</name></name><argument_list>(<argument><expr><name>categoryName</name></expr></argument>, <argument><expr><name>properties</name></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></if></if_stmt>
 
  <function><type><specifier>private</specifier> <name>AmbariConfigurationEntity</name></type> <name>getEntityFromRequest</name><parameter_list>(<parameter><decl><type><name>Request</name></type> <name>request</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>AmbariException</name></expr></argument></throws> <block>{<block_content>
  <function><type><specifier>private</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>Resource</name></argument>&gt;</argument_list></name></type> <name>getAmbariConfigurationResources</name><parameter_list>(<parameter><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>requestedIds</name></decl></parameter>, <parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>propertyMap</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>Resource</name></argument>&gt;</argument_list></name></type> <name>resources</name> <init>= <expr><operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
    <decl_stmt><decl><type><name>AmbariConfigurationEntity</name></type> <name>ambariConfigurationEntity</name> <init>= <expr><operator>new</operator> <call><name>AmbariConfigurationEntity</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>ambariConfigurationEntity</name><operator>.</operator><name>setConfigurationBaseEntity</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>ConfigurationBaseEntity</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>categoryName</name> <init>= <expr><call><name>getStringProperty</name><argument_list>(<argument><expr><name>propertyMap</name></expr></argument>, <argument><expr><name>AMBARI_CONFIGURATION_CATEGORY_PROPERTY_ID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
    <comment type="line">// set of resource properties (eache entry in the set belongs to a different resource)</comment>
    <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>resourcePropertiesSet</name> <init>= <expr><call><name><name>request</name><operator>.</operator><name>getProperties</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>AmbariConfigurationEntity</name></argument>&gt;</argument_list></name></type> <name>entities</name> <init>= <expr><ternary><condition><expr><operator>(</operator><name>categoryName</name> <operator>==</operator> <literal type="null">null</literal><operator>)</operator></expr>
        ?</condition><then> <expr><call><name><name>ambariConfigurationDAO</name><operator>.</operator><name>findAll</name></name><argument_list>()</argument_list></call></expr>
        </then><else>: <expr><call><name><name>ambariConfigurationDAO</name><operator>.</operator><name>findByCategory</name></name><argument_list>(<argument><expr><name>categoryName</name></expr></argument>)</argument_list></call></expr></else></ternary></expr></init></decl>;</decl_stmt>
 
    <if_stmt><if>if <condition>(<expr><call><name><name>resourcePropertiesSet</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>AmbariException</name><argument_list>(<argument><expr><literal type="string">"There must be only one resource specified in the request"</literal></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><name>entities</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>configurations</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
    <comment type="line">// the configuration type must be set</comment>
    <if_stmt><if>if <condition>(<expr><call><name>getValueFromResourceProperties</name><argument_list>(<argument><expr><name><name>ResourcePropertyId</name><operator>.</operator><name>TYPE</name></name></expr></argument>, <argument><expr><call><name><name>resourcePropertiesSet</name><operator>.</operator><name>iterator</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>next</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>AmbariException</name><argument_list>(<argument><expr><literal type="string">"The configuration type must be set"</literal></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></if></if_stmt>
      <for>for <control>(<init><decl><type><name>AmbariConfigurationEntity</name></type> <name>entity</name> <range>: <expr><name>entities</name></expr></range></decl></init>)</control> <block>{<block_content>
        <decl_stmt><decl><type><name>String</name></type> <name>category</name> <init>= <expr><call><name><name>entity</name><operator>.</operator><name>getCategoryName</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>properties</name> <init>= <expr><call><name><name>configurations</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>category</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
        <if_stmt><if>if <condition>(<expr><name>properties</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><name>properties</name> <operator>=</operator> <operator>new</operator> <call><name><name>TreeMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>configurations</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>category</name></expr></argument>, <argument><expr><name>properties</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
 
    <for>for <control>(<init><decl><type><name>ResourcePropertyId</name></type> <name>resourcePropertyId</name> <range>: <expr><call><name><name>ResourcePropertyId</name><operator>.</operator><name>values</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
      <decl_stmt><decl><type><name>Object</name></type> <name>requestValue</name> <init>= <expr><call><name>getValueFromResourceProperties</name><argument_list>(<argument><expr><name>resourcePropertyId</name></expr></argument>, <argument><expr><call><name><name>resourcePropertiesSet</name><operator>.</operator><name>iterator</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>next</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>properties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>entity</name><operator>.</operator><name>getPropertyName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>entity</name><operator>.</operator><name>getPropertyValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></for>
 
      <switch>switch <condition>(<expr><name>resourcePropertyId</name></expr>)</condition> <block>{<block_content>
        <case>case <expr><name>DATA</name></expr>:</case>
          <if_stmt><if>if <condition>(<expr><name>requestValue</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><literal type="string">"No configuration data is provided in the request"</literal></expr></argument>)</argument_list></call></expr>;</throw>
          </block_content>}</block></if></if_stmt>
          <expr_stmt><expr><call><name><name>ambariConfigurationEntity</name><operator>.</operator><name>getConfigurationBaseEntity</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>setConfigurationData</name><argument_list>(<argument><expr><call><name><name>gson</name><operator>.</operator><name>toJson</name></name><argument_list>(<argument><expr><name>requestValue</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <break>break;</break>
        <case>case <expr><name>TYPE</name></expr>:</case>
          <expr_stmt><expr><call><name><name>ambariConfigurationEntity</name><operator>.</operator><name>getConfigurationBaseEntity</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>setType</name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name>requestValue</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <break>break;</break>
        <case>case <expr><name>VERSION</name></expr>:</case>
          <decl_stmt><decl><type><name>Integer</name></type> <name>version</name> <init>= <expr><ternary><condition><expr><operator>(</operator><name>requestValue</name> <operator>==</operator> <literal type="null">null</literal><operator>)</operator></expr> ?</condition><then> <expr><name>DEFAULT_VERSION</name></expr> </then><else>: <expr><call><name><name>Integer</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <name>requestValue</name></expr></argument>)</argument_list></call></expr></else></ternary></expr></init></decl>;</decl_stmt>
          <expr_stmt><expr><call><name><name>ambariConfigurationEntity</name><operator>.</operator><name>getConfigurationBaseEntity</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>setVersion</name><argument_list>(<argument><expr><operator>(</operator><name>version</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <break>break;</break>
        <case>case <expr><name>VERSION_TAG</name></expr>:</case>
          <decl_stmt><decl><type><name>String</name></type> <name>versionTag</name> <init>= <expr><ternary><condition><expr><name>requestValue</name> <operator>==</operator> <literal type="null">null</literal></expr> ?</condition><then> <expr><name>DEFAULT_VERSION_TAG</name></expr> </then><else>: <expr><operator>(</operator><name>String</name><operator>)</operator> <name>requestValue</name></expr></else></ternary></expr></init></decl>;</decl_stmt>
          <expr_stmt><expr><call><name><name>ambariConfigurationEntity</name><operator>.</operator><name>getConfigurationBaseEntity</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>setVersionTag</name><argument_list>(<argument><expr><name>versionTag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <break>break;</break>
        <default>default:</default>
          <expr_stmt><expr><call><name><name>LOGGER</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"Ignored property in the request: {}"</literal></expr></argument>, <argument><expr><name>resourcePropertyId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <break>break;</break>
      <for>for <control>(<init><decl><type><name><name>Map</name><operator>.</operator><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></name></type> <name>entry</name> <range>: <expr><call><name><name>configurations</name><operator>.</operator><name>entrySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
        <expr_stmt><expr><call><name><name>resources</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name>toResource</name><argument_list>(<argument><expr><call><name><name>entry</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>requestedIds</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></for>
     </block_content>}</block></switch>
    <expr_stmt><expr><call><name><name>ambariConfigurationEntity</name><operator>.</operator><name>getConfigurationBaseEntity</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>setCreateTimestamp</name><argument_list>(<argument><expr><call><name><name>Calendar</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTimeInMillis</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name>ambariConfigurationEntity</name></expr>;</return>
 
    <return>return <expr><name>resources</name></expr>;</return>
   </block_content>}</block></for>
 
  <function><type><specifier>private</specifier> <name>Object</name></type> <name>getValueFromResourceProperties</name><parameter_list>(<parameter><decl><type><name>ResourcePropertyId</name></type> <name>resourcePropertyIdEnum</name></decl></parameter>, <parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>resourceProperties</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name><name>LOGGER</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"Locating resource property [{}] in the resource properties map ..."</literal></expr></argument>, <argument><expr><name>resourcePropertyIdEnum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Object</name></type> <name>requestValue</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
  <function><type><specifier>private</specifier> <name>String</name></type> <name>getStringProperty</name><parameter_list>(<parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>propertyMap</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>propertyId</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>String</name></type> <name>value</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
 
    <if_stmt><if>if <condition>(<expr><call><name><name>resourceProperties</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><call><name><name>resourcePropertyIdEnum</name><operator>.</operator><name>getPropertyId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>requestValue</name> <operator>=</operator> <call><name><name>resourceProperties</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>resourcePropertyIdEnum</name><operator>.</operator><name>getPropertyId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>LOGGER</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"Found resource property {} in the resource properties map, value: {}"</literal></expr></argument>, <argument><expr><name>resourcePropertyIdEnum</name></expr></argument>, <argument><expr><name>requestValue</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>propertyMap</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>Object</name></type> <name>o</name> <init>= <expr><call><name><name>propertyMap</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>propertyId</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>o</name> <operator>instanceof</operator> <name>String</name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>value</name> <operator>=</operator> <operator>(</operator><name>String</name><operator>)</operator> <name>o</name></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
     </block_content>}</block></if></if_stmt>
    <return>return <expr><name>requestValue</name></expr>;</return>
  </block_content>}</block></if></if_stmt>
 
    <return>return <expr><name>value</name></expr>;</return>
  </block_content>}</block></function>
 </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>events</name><operator>/</operator><name><name>AmbariLdapConfigChangedEvent</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>events</name><operator>/</operator><name><name>AmbariConfigurationChangedEvent</name><operator>.</operator><name>java</name></name>
<name>similarity</name> <name>index</name> <literal type="number">59</literal><operator>%</operator>
<name>rename</name> <name>from</name> <name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>events</name><operator>/</operator><name><name>AmbariLdapConfigChangedEvent</name><operator>.</operator><name>java</name></name>
<name>rename</name> <name>to</name> <name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>events</name><operator>/</operator><name><name>AmbariConfigurationChangedEvent</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">48799d793b</literal><operator>..</operator><literal type="number">69a15b44ea</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>events</name><operator>/</operator><name><name>AmbariLdapConfigChangedEvent</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>events</name><operator>/</operator><name><name>AmbariConfigurationChangedEvent</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">15</literal></expr><operator>,</operator><expr><literal type="number">23</literal> <operator>+</operator><literal type="number">15</literal></expr><operator>,</operator><expr><literal type="number">22</literal> @@</expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>events</name></name>;</package>
 
 <comment type="block" format="javadoc">/**
 * Event signaling the creation or changing of an LDAP configuration entry.
 * Event signaling the creation or changing of an Ambari configuration entry.
  */</comment>
<class><specifier>public</specifier> class <name>AmbariLdapConfigChangedEvent</name> <super_list><extends>extends <super><name>AmbariEvent</name></super></extends></super_list> <block>{
<class><specifier>public</specifier> class <name>AmbariConfigurationChangedEvent</name> <super_list><extends>extends <super><name>AmbariEvent</name></super></extends></super_list> <block>{
 
  <decl_stmt><decl><type><specifier>private</specifier> <name>Long</name></type> <name>configurationId</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>String</name></type> <name>categoryName</name></decl>;</decl_stmt>
 
   <comment type="block" format="javadoc">/**
    * Constructor.
    *
   * @param eventType the type of event (not {@code null}).
    */</comment>
  <constructor><specifier>public</specifier> <name>AmbariLdapConfigChangedEvent</name><parameter_list>(<parameter><decl><type><name>AmbariEventType</name></type> <name>eventType</name></decl></parameter>, <parameter><decl><type><name>Long</name></type> <name>configurationId</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>eventType</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>configurationId</name></name> <operator>=</operator> <name>configurationId</name></expr>;</expr_stmt>
  <constructor><specifier>public</specifier> <name>AmbariConfigurationChangedEvent</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>categoryName</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name><name>AmbariEventType</name><operator>.</operator><name>AMBARI_CONFIGURATION_CHANGED</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>categoryName</name></name> <operator>=</operator> <name>categoryName</name></expr>;</expr_stmt>
   </block_content>}</block></constructor>
 
  <function><type><specifier>public</specifier> <name>Long</name></type> <name>getConfigurationId</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>configurationId</name></expr>;</return>
  <function><type><specifier>public</specifier> <name>String</name></type> <name>getCategoryName</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>categoryName</name></expr>;</return>
   </block_content>}</block></function>
 </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>events</name><operator>/</operator><name><name>AmbariEvent</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>events</name><operator>/</operator><name><name>AmbariEvent</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">0f9ff52147</literal><operator>..</operator><literal type="number">0ece73b50f</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>events</name><operator>/</operator><name><name>AmbariEvent</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>events</name><operator>/</operator><name><name>AmbariEvent</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">143</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">143</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>AmbariEvent</name> <block>{
     <expr><name>USER_CREATED</name></expr>,
 
     <comment type="block" format="javadoc">/**
     * LDAP config changed event;
     * Ambari configuration changed event;
      */</comment>
    <expr><name>LDAP_CONFIG_CHANGED</name></expr>;
    <name>AMBARI_CONFIGURATION_CHANGED</name></block></expr>;</expr_stmt>
 
   </block_content>}</block></constructor>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>ldap</name><operator>/</operator><name>domain</name><operator>/</operator><name><name>AmbariLdapConfiguration</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>ldap</name><operator>/</operator><name>domain</name><operator>/</operator><name><name>AmbariLdapConfiguration</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">8b26cd3e29</literal><operator>..</operator><literal type="number">0c1ec0ae71</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>ldap</name><operator>/</operator><name>domain</name><operator>/</operator><name><name>AmbariLdapConfiguration</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>ldap</name><operator>/</operator><name>domain</name><operator>/</operator><name><name>AmbariLdapConfiguration</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 
 <import>import <name><name>javax</name><operator>.</operator><name>inject</name><operator>.</operator><name>Inject</name></name>;</import>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>lang3</name><operator>.</operator><name>builder</name><operator>.</operator><name>EqualsBuilder</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>lang3</name><operator>.</operator><name>builder</name><operator>.</operator><name>HashCodeBuilder</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>lang</name><operator>.</operator><name>builder</name><operator>.</operator><name>EqualsBuilder</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>lang</name><operator>.</operator><name>builder</name><operator>.</operator><name>HashCodeBuilder</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">179</literal></expr><operator>,</operator><expr><literal type="number">21</literal> <operator>+</operator><literal type="number">179</literal></expr><operator>,</operator><expr><literal type="number">25</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariLdapConfiguration</name> <block>{
 
   @<expr><name>Override</name>
   <specifier>public</specifier> <name>boolean</name> <call><name>equals</name><argument_list>(<argument><expr><name>Object</name> <name>o</name></expr></argument>)</argument_list></call> <block>{
    <if_stmt><if>if <condition>(<expr><name>this</name> <operator>==</operator> <name>o</name></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><literal type="boolean">true</literal></expr>;</return></block_content></block></if></if_stmt></block></expr>
    <if_stmt><if>if <condition>(<expr><name>this</name> <operator>==</operator> <name>o</name></expr>)</condition> <block>{<block_content>
      <return>return <expr><literal type="boolean">true</literal></expr>;</return>
    </block_content>}</block></if></if_stmt></block></expr></expr_stmt>
 
    <if_stmt><if>if <condition>(<expr><name>o</name> <operator>==</operator> <literal type="null">null</literal> <operator>||</operator> <call><name>getClass</name><argument_list>()</argument_list></call> <operator>!=</operator> <call><name><name>o</name><operator>.</operator><name>getClass</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><literal type="boolean">false</literal></expr>;</return></block_content></block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><name>o</name> <operator>==</operator> <literal type="null">null</literal> <operator>||</operator> <call><name>getClass</name><argument_list>()</argument_list></call> <operator>!=</operator> <call><name><name>o</name><operator>.</operator><name>getClass</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <return>return <expr><literal type="boolean">false</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
 
     <decl_stmt><decl><type><name>AmbariLdapConfiguration</name></type> <name>that</name> <init>= <expr><operator>(</operator><name>AmbariLdapConfiguration</name><operator>)</operator> <name>o</name></expr></init></decl>;</decl_stmt>
 
     <return>return <expr><operator>new</operator> <call><name>EqualsBuilder</name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>append</name><argument_list>(<argument><expr><name>configurationMap</name></expr></argument>, <argument><expr><name><name>that</name><operator>.</operator><name>configurationMap</name></name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>isEquals</name><argument_list>()</argument_list></call></expr>;</return>
        <expr_stmt><expr><operator>.</operator><call><name>append</name><argument_list>(<argument><expr><name>configurationMap</name></expr></argument>, <argument><expr><name><name>that</name><operator>.</operator><name>configurationMap</name></name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>isEquals</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
   }</block></class>
 
   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>public</specifier> <name>int</name></type> <name>hashCode</name><parameter_list>()</parameter_list> <block>{<block_content>
     <return>return <expr><operator>new</operator> <call><name>HashCodeBuilder</name><argument_list>(<argument><expr><literal type="number">17</literal></expr></argument>, <argument><expr><literal type="number">37</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>append</name><argument_list>(<argument><expr><name>configurationMap</name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>toHashCode</name><argument_list>()</argument_list></call></expr>;</return>
        <expr_stmt><expr><operator>.</operator><call><name>append</name><argument_list>(<argument><expr><name>configurationMap</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>toHashCode</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
 }</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>ldap</name><operator>/</operator><name>service</name><operator>/</operator><name><name>AmbariLdapConfigurationProvider</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>ldap</name><operator>/</operator><name>service</name><operator>/</operator><name><name>AmbariLdapConfigurationProvider</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>c88d420e9a</name><operator>..</operator><name>b32d1ed9fb</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>ldap</name><operator>/</operator><name>service</name><operator>/</operator><name><name>AmbariLdapConfigurationProvider</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>ldap</name><operator>/</operator><name>service</name><operator>/</operator><name><name>AmbariLdapConfigurationProvider</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">14</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">14</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@</expr></expr_stmt>
 
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>ldap</name><operator>.</operator><name>service</name></name>;</package>
 
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
 
<import>import <name><name>javax</name><operator>.</operator><name>inject</name><operator>.</operator><name>Inject</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>inject</name><operator>.</operator><name>Provider</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>inject</name><operator>.</operator><name>Singleton</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>events</name><operator>.</operator><name>AmbariLdapConfigChangedEvent</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>events</name><operator>.</operator><name>AmbariConfigurationChangedEvent</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>events</name><operator>.</operator><name>publishers</name><operator>.</operator><name>AmbariEventPublisher</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>ldap</name><operator>.</operator><name>domain</name><operator>.</operator><name>AmbariLdapConfiguration</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>ldap</name><operator>.</operator><name>domain</name><operator>.</operator><name>AmbariLdapConfigurationFactory</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">32</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">29</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>
 
 <import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>eventbus</name><operator>.</operator><name>Subscribe</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>gson</name><operator>.</operator><name>Gson</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>gson</name><operator>.</operator><name>GsonBuilder</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>Inject</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>Provider</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>Singleton</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
  * Provider implementation for LDAP configurations.
@@ -41,7 +39,7 @@ import com.google.gson.GsonBuilder;
  * It's responsible for managing LDAP configurations in the application.
  * Whenever requested, this provider returns an AmbariLdapConfiguration which is always in sync with the persisted LDAP
  * configuration resource.
 *
 * &lt;p&gt;
  * The provider receives notifications on CRUD operations related to the persisted resource and reloads the cached
  * configuration instance accordingly.
  */</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">60</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">58</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariLdapConfigurationProvider</name> implements <name>Provider</name><operator>&lt;</operator><name>AmbariLdapConfi</name>
   @<name>Inject</name>
   <specifier>private</specifier> <name>AmbariLdapConfigurationFactory</name> <name>ldapConfigurationFactory</name></expr>;</expr_stmt>
 
  <decl_stmt><decl><type><specifier>private</specifier> <name>Gson</name></type> <name>gson</name> <init>= <expr><operator>new</operator> <call><name>GsonBuilder</name><argument_list>()</argument_list></call><operator>.</operator><call><name>create</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

   <constructor><annotation>@<name>Inject</name></annotation>
   <specifier>public</specifier> <name>AmbariLdapConfigurationProvider</name><parameter_list>()</parameter_list> <block>{<block_content>
   </block_content>}</block></constructor>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">73</literal></expr><operator>,</operator><expr><literal type="number">48</literal> <operator>+</operator><literal type="number">69</literal></expr><operator>,</operator><expr><literal type="number">45</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariLdapConfigurationProvider</name> implements <name>Provider</name><operator>&lt;</operator><name>AmbariLdapConfi</name>
 
   @<name>Override</name>
   <specifier>public</specifier> <name>AmbariLdapConfiguration</name> <call><name>get</name><argument_list>()</argument_list></call> <block>{
    <return>return <expr><name>instance</name> <operator>!=</operator> <literal type="null">null</literal> <operator>?</operator> <name>instance</name> <operator>:</operator> <call><name>loadInstance</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</return></block></expr></expr_stmt>
    <return>return <expr><ternary><condition><expr><name>instance</name> <operator>!=</operator> <literal type="null">null</literal></expr> ?</condition><then> <expr><name>instance</name></expr> </then><else>: <expr><call><name>loadInstance</name><argument_list>()</argument_list></call></expr></else></ternary></expr>;</return>
   </block_content>}</block></if></if_stmt>
 
   <comment type="block" format="javadoc">/**
    * Loads the AmbariLdapConfiguration from the database.
    *
   * @param configurationId the configuration id
    * @return the AmbariLdapConfiguration instance
    */</comment>
  <function><type><specifier>private</specifier> <name>AmbariLdapConfiguration</name></type> <name>loadInstance</name><parameter_list>(<parameter><decl><type><name>Long</name></type> <name>configurationId</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>AmbariConfigurationEntity</name></type> <name>configEntity</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
  <function><type><specifier>private</specifier> <name>AmbariLdapConfiguration</name></type> <name>loadInstance</name><parameter_list>()</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>AmbariConfigurationEntity</name></argument>&gt;</argument_list></name></type> <name>configEntities</name></decl>;</decl_stmt>
 
     <expr_stmt><expr><call><name><name>LOGGER</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Loading LDAP configuration ..."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><literal type="null">null</literal> <operator>==</operator> <name>configurationId</name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><name>configEntities</name> <operator>=</operator> <call><name><name>ambariConfigurationDAOProvider</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>findByCategory</name><argument_list>(<argument><expr><literal type="string">"ldap-configuration"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
      <expr_stmt><expr><call><name><name>LOGGER</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"Initial loading of the ldap configuration ..."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>configEntity</name> <operator>=</operator> <call><name><name>ambariConfigurationDAOProvider</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getLdapConfiguration</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>configEntities</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>properties</name> <init>= <expr><call><name>toProperties</name><argument_list>(<argument><expr><name>configEntities</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><name>instance</name> <operator>=</operator> <call><name><name>ldapConfigurationFactory</name><operator>.</operator><name>createLdapConfiguration</name></name><argument_list>(<argument><expr><name>properties</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
 
    </block_content>}</block></if> <else>else <block>{<block_content>
    <expr_stmt><expr><call><name><name>LOGGER</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Loaded LDAP configuration instance: [ {} ]"</literal></expr></argument>, <argument><expr><name>instance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
      <expr_stmt><expr><call><name><name>LOGGER</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"Reloading configuration based on the provied id: {}"</literal></expr></argument>, <argument><expr><name>configurationId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>configEntity</name> <operator>=</operator> <call><name><name>ambariConfigurationDAOProvider</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>findByPK</name><argument_list>(<argument><expr><name>configurationId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name>instance</name></expr>;</return>
  </block_content>}</block></else></if_stmt>
 
    </block_content>}</block></function>
  <function><type><specifier>private</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>toProperties</name><parameter_list>(<parameter><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>AmbariConfigurationEntity</name></argument>&gt;</argument_list></name></type> <name>configEntities</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>map</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
    <if_stmt><if>if <condition>(<expr><name>configEntity</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>Set</name></type> <name>propertyMaps</name> <init>= <expr><call><name><name>gson</name><operator>.</operator><name>fromJson</name></name><argument_list>(<argument><expr><call><name><name>configEntity</name><operator>.</operator><name>getConfigurationBaseEntity</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getConfigurationData</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>Set</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><name>instance</name> <operator>=</operator> <call><name><name>ldapConfigurationFactory</name><operator>.</operator><name>createLdapConfiguration</name></name><argument_list>(<argument><expr><operator>(</operator><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name><operator>)</operator> <call><name><name>propertyMaps</name><operator>.</operator><name>iterator</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>next</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for>for <control>(<init><decl><type><name>AmbariConfigurationEntity</name></type> <name>entity</name> <range>: <expr><name>configEntities</name></expr></range></decl></init>)</control> <block>{<block_content>
      <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>entity</name><operator>.</operator><name>getPropertyName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>entity</name><operator>.</operator><name>getPropertyValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></for>
 
    <expr_stmt><expr><call><name><name>LOGGER</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Loaded LDAP configuration instance: [ {} ]"</literal></expr></argument>, <argument><expr><name>instance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return>return <expr><name>instance</name></expr>;</return>
    <return>return <expr><name>map</name></expr>;</return>
   </block_content>}</block></if></if_stmt>
 
   <comment type="line">// On changing the configuration, the provider gets updated with the fresh value</comment>
   <function><annotation>@<name>Subscribe</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>ambariLdapConfigChanged</name><parameter_list>(<parameter><decl><type><name>AmbariLdapConfigChangedEvent</name></type> <name>event</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <function><type><specifier>public</specifier> <name>void</name></type> <name>ambariLdapConfigChanged</name><parameter_list>(<parameter><decl><type><name>AmbariConfigurationChangedEvent</name></type> <name>event</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <expr_stmt><expr><call><name><name>LOGGER</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"LDAP config changed event received: {}"</literal></expr></argument>, <argument><expr><name>event</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>loadInstance</name><argument_list>(<argument><expr><call><name><name>event</name><operator>.</operator><name>getConfigurationId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>loadInstance</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>LOGGER</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Refreshed LDAP config instance."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>


 </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>ldap</name><operator>/</operator><name>service</name><operator>/</operator><name>ads</name><operator>/</operator><name><name>LdapConnectionTemplateFactory</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>ldap</name><operator>/</operator><name>service</name><operator>/</operator><name>ads</name><operator>/</operator><name><name>LdapConnectionTemplateFactory</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">8467af08b6</literal><operator>..</operator><literal type="number">5e4e0ca5b6</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>ldap</name><operator>/</operator><name>service</name><operator>/</operator><name>ads</name><operator>/</operator><name><name>LdapConnectionTemplateFactory</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>ldap</name><operator>/</operator><name>service</name><operator>/</operator><name>ads</name><operator>/</operator><name><name>LdapConnectionTemplateFactory</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>javax</name><operator>.</operator><name>inject</name><operator>.</operator><name>Inject</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>inject</name><operator>.</operator><name>Provider</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>inject</name><operator>.</operator><name>Singleton</name></name>;</import>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>events</name><operator>.</operator><name>AmbariLdapConfigChangedEvent</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>events</name><operator>.</operator><name>AmbariConfigurationChangedEvent</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>ldap</name><operator>.</operator><name>domain</name><operator>.</operator><name>AmbariLdapConfiguration</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>ldap</name><operator>.</operator><name>service</name><operator>.</operator><name>AmbariLdapException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>ldap</name><operator>.</operator><name>service</name><operator>.</operator><name>LdapConnectionConfigService</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">103</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">103</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>LdapConnectionTemplateFactory</name> <block>{
    <expr><operator>*</operator> @<throws>throws <argument><expr><name>AmbariLdapException</name>
    <operator>*</operator><operator>/</operator>
   <annotation>@<name>Subscribe</name></annotation>
  <specifier>public</specifier> <name>void</name> <call><name>onConfigChange</name><argument_list>(<argument><expr><name>AmbariLdapConfigChangedEvent</name> <name>event</name></expr></argument>)</argument_list></call></expr></argument></throws> <throws>throws <argument><expr><name>AmbariLdapException</name> <block>{
  <expr><specifier>public</specifier> <name>void</name> <call><name>onConfigChange</name><argument_list>(<argument><expr><name>AmbariConfigurationChangedEvent</name> <name>event</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>AmbariLdapException</name> <block>{
     <expr><name>ldapConnectionTemplateInstance</name> <operator>=</operator> <call><name>create</name><argument_list>(<argument><expr><call><name><name>ambariLdapConfigurationProvider</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
   }</block></expr></expr_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>dao</name><operator>/</operator><name><name>AmbariConfigurationDAO</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>dao</name><operator>/</operator><name><name>AmbariConfigurationDAO</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">83293efb82</literal><operator>..</operator><name>e4446d79b8</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>dao</name><operator>/</operator><name><name>AmbariConfigurationDAO</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>dao</name><operator>/</operator><name><name>AmbariConfigurationDAO</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">14</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">14</literal></expr><operator>,</operator><expr><literal type="number">20</literal> @@</expr></expr_stmt>
 
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>dao</name></name>;</package>
 
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>

 <import>import <name><name>javax</name><operator>.</operator><name>inject</name><operator>.</operator><name>Inject</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>inject</name><operator>.</operator><name>Singleton</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>EntityExistsException</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>EntityNotFoundException</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>TypedQuery</name></name>;</import>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>RequiresSession</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>AmbariConfigurationEntity</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>AmbariConfigurationEntityPK</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>lang</name><operator>.</operator><name>StringUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">32</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">39</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>persist</name><operator>.</operator><name>Transactional</name></name>;</import>
  <expr_stmt><expr><operator>*</operator><operator>/</operator>
 
 @<name>Singleton</name>
<specifier>public</specifier> <name>class</name> <name>AmbariConfigurationDAO</name> extends <name><name>CrudDAO</name><argument_list type="generic">&lt;<argument><name>AmbariConfigurationEntity</name></argument>, <argument><name>Long</name></argument>&gt;</argument_list></name> <block>{
<expr><specifier>public</specifier> <name>class</name> <name>AmbariConfigurationDAO</name> extends <name><name>CrudDAO</name><argument_list type="generic">&lt;<argument><name>AmbariConfigurationEntity</name></argument>, <argument><name>AmbariConfigurationEntityPK</name></argument>&gt;</argument_list></name> <block>{
 
   <expr><specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name>Logger</name> <name>LOGGER</name> <operator>=</operator> <call><name><name>LoggerFactory</name><operator>.</operator><name>getLogger</name></name><argument_list>(<argument><expr><name><name>AmbariConfigurationDAO</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
 
@@ <operator>-</operator><literal type="number">41</literal><operator>,</operator><literal type="number">49</literal> <operator>+</operator><literal type="number">48</literal><operator>,</operator><literal type="number">132</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariConfigurationDAO</name> extends <name>CrudDAO</name><operator>&lt;</operator><name>AmbariConfigurationEntity</name><operator>,</operator> <name>L</name>
     <call><name>super</name><argument_list>(<argument><expr><name><name>AmbariConfigurationEntity</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></block></expr>;
   }</block></expr></expr_stmt>
 
  <comment type="block" format="javadoc">/**
   * Returns the Ambari configuration properties with the requested category name from the database.
   *
   * @param categoryName the configuration category name
   * @return the configuration entity
   */</comment>
  <function><annotation>@<name>RequiresSession</name></annotation>
  <type><specifier>public</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>AmbariConfigurationEntity</name></argument>&gt;</argument_list></name></type> <name>findByCategory</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>categoryName</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name><name>TypedQuery</name><argument_list type="generic">&lt;<argument><name>AmbariConfigurationEntity</name></argument>&gt;</argument_list></name></type> <name>query</name> <init>= <expr><call><name><name>entityManagerProvider</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>createNamedQuery</name><argument_list>(
        <argument><expr><literal type="string">"AmbariConfigurationEntity.findByCategory"</literal></expr></argument>, <argument><expr><name><name>AmbariConfigurationEntity</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"categoryName"</literal></expr></argument>, <argument><expr><name>categoryName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><call><name><name>daoUtils</name><operator>.</operator><name>selectList</name></name><argument_list>(<argument><expr><name>query</name></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <comment type="block" format="javadoc">/**
   * Removes the Ambari configuration properties with the requested category name from the database.
   *
   * @param categoryName the configuration category name
   * @return the number of items removed
   */</comment>
  <function><annotation>@<name>Transactional</name></annotation>
  <type><specifier>public</specifier> <name>int</name></type> <name>removeByCategory</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>categoryName</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name><name>TypedQuery</name><argument_list type="generic">&lt;<argument><name>AmbariConfigurationEntity</name></argument>&gt;</argument_list></name></type> <name>query</name> <init>= <expr><call><name><name>entityManagerProvider</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>createNamedQuery</name><argument_list>(
        <argument><expr><literal type="string">"AmbariConfigurationEntity.deleteByCategory"</literal></expr></argument>, <argument><expr><name><name>AmbariConfigurationEntity</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"categoryName"</literal></expr></argument>, <argument><expr><name>categoryName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><call><name><name>query</name><operator>.</operator><name>executeUpdate</name></name><argument_list>()</argument_list></call></expr>;</return>
  </block_content>}</block></function>

   <function><annotation>@<name>Transactional</name></annotation>
   <type><specifier>public</specifier> <name>void</name></type> <name>create</name><parameter_list>(<parameter><decl><type><name>AmbariConfigurationEntity</name></type> <name>entity</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <comment type="line">// make  sure only one LDAP config entry exists</comment>
    <if_stmt><if>if <condition>(<expr><literal type="string">"ldap-configuration"</literal><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><call><name><name>entity</name><operator>.</operator><name>getConfigurationBaseEntity</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getType</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>AmbariConfigurationEntity</name></type> <name>ldapConfigEntity</name> <init>= <expr><call><name>getLdapConfiguration</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>ldapConfigEntity</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>LOGGER</name><operator>.</operator><name>error</name></name><argument_list>(<argument><expr><literal type="string">"Only one LDAP configuration entry can exist!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <throw>throw <expr><operator>new</operator> <call><name>EntityExistsException</name><argument_list>(<argument><expr><literal type="string">"LDAP configuration entity already exists!"</literal></expr></argument>)</argument_list></call></expr>;</throw>
      </block_content>}</block></if></if_stmt>
    <comment type="line">// make sure only one entry exists per configuration type...</comment>
    <decl_stmt><decl><type><name>AmbariConfigurationEntity</name></type> <name>foundEntity</name> <init>= <expr><call><name>findByPK</name><argument_list>(<argument><expr><operator>new</operator> <call><name>AmbariConfigurationEntityPK</name><argument_list>(<argument><expr><call><name><name>entity</name><operator>.</operator><name>getCategoryName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>entity</name><operator>.</operator><name>getPropertyName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>foundEntity</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>String</name></type> <name>message</name> <init>= <expr><call><name><name>String</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><literal type="string">"Only one configuration entry can exist for the category %s and name %s"</literal></expr></argument>, <argument><expr><call><name><name>entity</name><operator>.</operator><name>getCategoryName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>entity</name><operator>.</operator><name>getPropertyName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>LOGGER</name><operator>.</operator><name>error</name></name><argument_list>(<argument><expr><name>message</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <throw>throw <expr><operator>new</operator> <call><name>EntityExistsException</name><argument_list>(<argument><expr><name>message</name></expr></argument>)</argument_list></call></expr>;</throw>
     </block_content>}</block></if></if_stmt>

     <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><name>entity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></if></if_stmt>
 
  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>AmbariConfigurationEntity</name></type> <name>merge</name><parameter_list>(<parameter><decl><type><name>AmbariConfigurationEntity</name></type> <name>entity</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>AmbariConfigurationEntity</name></type> <name>foundEntity</name> <init>= <expr><call><name>findByPK</name><argument_list>(<argument><expr><operator>new</operator> <call><name>AmbariConfigurationEntityPK</name><argument_list>(<argument><expr><call><name><name>entity</name><operator>.</operator><name>getCategoryName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>entity</name><operator>.</operator><name>getPropertyName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>foundEntity</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>String</name></type> <name>message</name> <init>= <expr><call><name><name>String</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><literal type="string">"The configuration entry for the category %s and name %s does not exist"</literal></expr></argument>, <argument><expr><call><name><name>entity</name><operator>.</operator><name>getCategoryName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>entity</name><operator>.</operator><name>getPropertyName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>LOGGER</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><name>message</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <throw>throw <expr><operator>new</operator> <call><name>EntityNotFoundException</name><argument_list>(<argument><expr><name>message</name></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></if></if_stmt>
 
  <function><annotation>@<name>Transactional</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>update</name><parameter_list>(<parameter><decl><type><name>AmbariConfigurationEntity</name></type> <name>entity</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><call><name><name>entity</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="null">null</literal> <operator>||</operator> <call><name>findByPK</name><argument_list>(<argument><expr><call><name><name>entity</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>String</name></type> <name>msg</name> <init>= <expr><call><name><name>String</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><literal type="string">"The entity with id [ %s ] is not found"</literal></expr></argument>, <argument><expr><call><name><name>entity</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>LOGGER</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><name>msg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <throw>throw <expr><operator>new</operator> <call><name>EntityNotFoundException</name><argument_list>(<argument><expr><name>msg</name></expr></argument>)</argument_list></call></expr>;</throw>
    <decl_stmt><decl><type><name>AmbariConfigurationEntity</name></type> <name>updatedEntity</name> <init>= <expr><name>entity</name></expr></init></decl>;</decl_stmt>

    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>StringUtils</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><call><name><name>foundEntity</name><operator>.</operator><name>getPropertyValue</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>entity</name><operator>.</operator><name>getPropertyValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
      <comment type="line">// updating the existing entity</comment>
      <expr_stmt><expr><name>updatedEntity</name> <operator>=</operator> <call><name><name>super</name><operator>.</operator><name>merge</name></name><argument_list>(<argument><expr><name>entity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>entityManagerProvider</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>flush</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></if></if_stmt>
 
    <comment type="line">// updating the existing entity</comment>
    <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>merge</name></name><argument_list>(<argument><expr><name>entity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>entityManagerProvider</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>flush</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name>updatedEntity</name></expr>;</return>
   </block_content>}</block></if></if_stmt>
 
   <comment type="block" format="javadoc">/**
   * Returns the LDAP configuration from the database.
   * Reconciles the properties associted with an Ambari confgiration category (for example, ldap-configuration)
   * using persisted properties and the supplied properties.
   * &lt;p&gt;
   * if &lt;code&gt;removeIfNotProvided&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, only properties that exist in the new set of
   * properties will be persisted; others will be removed.
   * &lt;p&gt;
   * If &lt;code&gt;removeIfNotProvided&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, then the new properties will be used
   * to update or append to the set of persisted properties.
    *
   * @return the configuration entity
   * @param categoryName        the category name for the set of properties
   * @param properties          a map of name to value pairs
   * @param removeIfNotProvided &lt;code&gt;true&lt;/code&gt; to explicitly set the set of properties for the category; &lt;code&gt;false&lt;/code&gt; to upadate the set of properties for the category
   * @return &lt;code&gt;true&lt;/code&gt; if changes were made; &lt;code&gt;false&lt;/code&gt; if not changes were made.
    */</comment>
   <function><annotation>@<name>Transactional</name></annotation>
  <type><specifier>public</specifier> <name>AmbariConfigurationEntity</name></type> <name>getLdapConfiguration</name><parameter_list>()</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name><name>LOGGER</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Looking up the LDAP configuration ...."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>AmbariConfigurationEntity</name></type> <name>ldapConfigEntity</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
  <function><type><specifier>public</specifier> <name>boolean</name></type> <name>reconcileCategory</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>categoryName</name></decl></parameter>, <parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>properties</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>removeIfNotProvided</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>boolean</name></type> <name>changesDetected</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>AmbariConfigurationEntity</name></argument>&gt;</argument_list></name></type> <name>existingEntities</name> <init>= <expr><call><name>findByCategory</name><argument_list>(<argument><expr><name>categoryName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>propertiesToProcess</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
    <decl_stmt><decl><type><name><name>TypedQuery</name><argument_list type="generic">&lt;<argument><name>AmbariConfigurationEntity</name></argument>&gt;</argument_list></name></type> <name>query</name> <init>= <expr><call><name><name>entityManagerProvider</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>createNamedQuery</name><argument_list>(
      <argument><expr><literal type="string">"AmbariConfigurationEntity.findByType"</literal></expr></argument>, <argument><expr><name><name>AmbariConfigurationEntity</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"typeName"</literal></expr></argument>, <argument><expr><literal type="string">"ldap-configuration"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>properties</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>propertiesToProcess</name><operator>.</operator><name>putAll</name></name><argument_list>(<argument><expr><name>properties</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <if_stmt><if>if <condition>(<expr><name>existingEntities</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <for>for <control>(<init><decl><type><name>AmbariConfigurationEntity</name></type> <name>entity</name> <range>: <expr><name>existingEntities</name></expr></range></decl></init>)</control> <block>{<block_content>
        <decl_stmt><decl><type><name>String</name></type> <name>propertyName</name> <init>= <expr><call><name><name>entity</name><operator>.</operator><name>getPropertyName</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt><if>if <condition>(<expr><call><name><name>propertiesToProcess</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><name>propertyName</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
          <decl_stmt><decl><type><name>String</name></type> <name>newPropertyValue</name> <init>= <expr><call><name><name>propertiesToProcess</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>propertyName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>StringUtils</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>newPropertyValue</name></expr></argument>, <argument><expr><call><name><name>entity</name><operator>.</operator><name>getPropertyValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
            <comment type="line">// Update the entry...</comment>
            <expr_stmt><expr><call><name><name>entity</name><operator>.</operator><name>setPropertyValue</name></name><argument_list>(<argument><expr><name>newPropertyValue</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>merge</name><argument_list>(<argument><expr><name>entity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name>changesDetected</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
          </block_content>}</block></if></if_stmt>
        </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>removeIfNotProvided</name></expr>)</condition> <block>{<block_content>
          <comment type="line">// Remove the entry since it is not in the new set of properties...</comment>
          <expr_stmt><expr><call><name>remove</name><argument_list>(<argument><expr><name>entity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><name>changesDetected</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>

        <comment type="line">// If already processed, remove it so we know no to add it later...</comment>
        <expr_stmt><expr><call><name><name>propertiesToProcess</name><operator>.</operator><name>remove</name></name><argument_list>(<argument><expr><name>propertyName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></for>
    </block_content>}</block></if></if_stmt>

    <comment type="line">// Add the new entries...</comment>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>propertiesToProcess</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <for>for <control>(<init><decl><type><name><name>Map</name><operator>.</operator><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></name></type> <name>property</name> <range>: <expr><call><name><name>propertiesToProcess</name><operator>.</operator><name>entrySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
        <decl_stmt><decl><type><name>AmbariConfigurationEntity</name></type> <name>entity</name> <init>= <expr><operator>new</operator> <call><name>AmbariConfigurationEntity</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>entity</name><operator>.</operator><name>setCategoryName</name></name><argument_list>(<argument><expr><name>categoryName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>entity</name><operator>.</operator><name>setPropertyName</name></name><argument_list>(<argument><expr><call><name><name>property</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>entity</name><operator>.</operator><name>setPropertyValue</name></name><argument_list>(<argument><expr><call><name><name>property</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>create</name><argument_list>(<argument><expr><name>entity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></for>

      <expr_stmt><expr><name>changesDetected</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <if_stmt><if>if <condition>(<expr><name>changesDetected</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>entityManagerProvider</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>flush</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
 
    <expr_stmt><expr><name>ldapConfigEntity</name> <operator>=</operator> <call><name><name>daoUtils</name><operator>.</operator><name>selectSingle</name></name><argument_list>(<argument><expr><name>query</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>LOGGER</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Returned entity: {} "</literal></expr></argument>, <argument><expr><name>ldapConfigEntity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name>ldapConfigEntity</name></expr>;</return>
    <return>return <expr><name>changesDetected</name></expr>;</return>
   </block_content>}</block></function>
 </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>entities</name><operator>/</operator><name><name>AmbariConfigurationEntity</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>entities</name><operator>/</operator><name><name>AmbariConfigurationEntity</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>c9f4695469</name><operator>..</operator><literal type="number">8cd6751927</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>entities</name><operator>/</operator><name><name>AmbariConfigurationEntity</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>entities</name><operator>/</operator><name><name>AmbariConfigurationEntity</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">14</literal></expr><operator>,</operator><expr><literal type="number">57</literal> <operator>+</operator><literal type="number">14</literal></expr><operator>,</operator><expr><literal type="number">99</literal> @@</expr></expr_stmt>
 
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name></name>;</package>
 
<import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>CascadeType</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>Column</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>Entity</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>Id</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>JoinColumn</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>MapsId</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>IdClass</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>NamedQueries</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>NamedQuery</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>OneToOne</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>Table</name></name>;</import>
 
<decl_stmt><decl><annotation>@<name>Entity</name></annotation>
<type><name>import</name></type> <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>lang</name><operator>.</operator><name>builder</name><operator>.</operator><name>EqualsBuilder</name></name></decl>;</decl_stmt>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>lang</name><operator>.</operator><name>builder</name><operator>.</operator><name>HashCodeBuilder</name></name>;</import>

 <class><annotation>@<name>Table</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"ambari_configuration"</literal></expr></argument>)</argument_list></annotation>
 <annotation>@<name>NamedQueries</name><argument_list>(<argument><expr><block>{
  <annotation>@<name>NamedQuery</name><argument_list>(
    <argument><expr><name>name</name> <operator>=</operator> <literal type="string">"AmbariConfigurationEntity.findByType"</literal></expr></argument>,
    <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"select ace from AmbariConfigurationEntity ace where ace.configurationBaseEntity.type = :typeName"</literal></expr></argument>)</argument_list></annotation>
    <annotation>@<name>NamedQuery</name><argument_list>(
        <argument><expr><name>name</name> <operator>=</operator> <literal type="string">"AmbariConfigurationEntity.findByCategory"</literal></expr></argument>,
        <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"select ace from AmbariConfigurationEntity ace where ace.categoryName = :categoryName"</literal></expr></argument>)</argument_list></annotation>,
    <argument><annotation>@<name>NamedQuery</name><argument_list>(
        <argument><expr><name>name</name> <operator>=</operator> <literal type="string">"AmbariConfigurationEntity.deleteByCategory"</literal></expr></argument>,
        <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"delete from AmbariConfigurationEntity ace where ace.categoryName = :categoryName"</literal></expr></argument>)</argument_list></annotation></argument>
 }</block></expr></argument>)</argument_list></annotation>

<annotation>@<name>IdClass</name><argument_list>(<argument><expr><name><name>AmbariConfigurationEntityPK</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></annotation>
<annotation>@<name>Entity</name></annotation>
 <specifier>public</specifier> class <name>AmbariConfigurationEntity</name> <block>{
 
   <decl_stmt><decl><annotation>@<name>Id</name></annotation>
  <annotation>@<name>Column</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"id"</literal></expr></argument>)</argument_list></annotation>
  <type><specifier>private</specifier> <name>Long</name></type> <name>id</name></decl>;</decl_stmt>
  <decl_stmt><decl><annotation>@<name>Column</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"category_name"</literal></expr></argument>)</argument_list></annotation>
  <type><specifier>private</specifier> <name>String</name></type> <name>categoryName</name></decl>;</decl_stmt>

  <decl_stmt><decl><annotation>@<name>Id</name></annotation>
  <annotation>@<name>Column</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"property_name"</literal></expr></argument>)</argument_list></annotation>
  <type><specifier>private</specifier> <name>String</name></type> <name>propertyName</name></decl>;</decl_stmt>

  <decl_stmt><decl><annotation>@<name>Column</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"property_value"</literal></expr></argument>)</argument_list></annotation>
  <type><specifier>private</specifier> <name>String</name></type> <name>propertyValue</name></decl>;</decl_stmt>
 
  <decl_stmt><decl><annotation>@<name>OneToOne</name><argument_list>(<argument><expr><name>cascade</name> <operator>=</operator> <name><name>CascadeType</name><operator>.</operator><name>ALL</name></name></expr></argument>)</argument_list></annotation>
  <annotation>@<name>MapsId</name></annotation>
  <annotation>@<name>JoinColumn</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"id"</literal></expr></argument>)</argument_list></annotation>
  <type><specifier>private</specifier> <name>ConfigurationBaseEntity</name></type> <name>configurationBaseEntity</name></decl>;</decl_stmt>
  <function><type><specifier>public</specifier> <name>String</name></type> <name>getCategoryName</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>categoryName</name></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>void</name></type> <name>setCategoryName</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>category</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>categoryName</name></name> <operator>=</operator> <name>category</name></expr>;</expr_stmt>
  </block_content>}</block></function>
 
  <function><type><specifier>public</specifier> <name>Long</name></type> <name>getId</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>id</name></expr>;</return>
  <function><type><specifier>public</specifier> <name>String</name></type> <name>getPropertyName</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>propertyName</name></expr>;</return>
   </block_content>}</block></function>
 
  <function><type><specifier>public</specifier> <name>void</name></type> <name>setId</name><parameter_list>(<parameter><decl><type><name>Long</name></type> <name>id</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>id</name></name> <operator>=</operator> <name>id</name></expr>;</expr_stmt>
  <function><type><specifier>public</specifier> <name>void</name></type> <name>setPropertyName</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>propertyName</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>propertyName</name></name> <operator>=</operator> <name>propertyName</name></expr>;</expr_stmt>
   </block_content>}</block></function>
 
  <function><type><specifier>public</specifier> <name>ConfigurationBaseEntity</name></type> <name>getConfigurationBaseEntity</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>configurationBaseEntity</name></expr>;</return>
  <function><type><specifier>public</specifier> <name>String</name></type> <name>getPropertyValue</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>propertyValue</name></expr>;</return>
   </block_content>}</block></function>
 
  <function><type><specifier>public</specifier> <name>void</name></type> <name>setConfigurationBaseEntity</name><parameter_list>(<parameter><decl><type><name>ConfigurationBaseEntity</name></type> <name>configurationBaseEntity</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>configurationBaseEntity</name></name> <operator>=</operator> <name>configurationBaseEntity</name></expr>;</expr_stmt>
  <function><type><specifier>public</specifier> <name>void</name></type> <name>setPropertyValue</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>propertyValue</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>propertyValue</name></name> <operator>=</operator> <name>propertyValue</name></expr>;</expr_stmt>
   </block_content>}</block></function>
 
   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>public</specifier> <name>String</name></type> <name>toString</name><parameter_list>()</parameter_list> <block>{<block_content>
     <return>return <expr><literal type="string">"AmbariConfigurationEntity{"</literal> <operator>+</operator>
      <literal type="string">"id="</literal> <operator>+</operator> <name>id</name> <operator>+</operator>
      <literal type="string">", configurationBaseEntity="</literal> <operator>+</operator> <name>configurationBaseEntity</name> <operator>+</operator>
      <literal type="char">'}'</literal></expr>;</return>
        <expr_stmt><expr><literal type="string">", category="</literal> <operator>+</operator> <name>categoryName</name> <operator>+</operator>
        <literal type="string">", name="</literal> <operator>+</operator> <name>propertyName</name> <operator>+</operator>
        <literal type="string">", value="</literal> <operator>+</operator> <name>propertyValue</name> <operator>+</operator>
        <literal type="char">'}'</literal></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>boolean</name></type> <name>equals</name><parameter_list>(<parameter><decl><type><name>Object</name></type> <name>o</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name>this</name> <operator>==</operator> <name>o</name></expr>)</condition> <block>{<block_content>
      <return>return <expr><literal type="boolean">true</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>

    <if_stmt><if>if <condition>(<expr><name>o</name> <operator>==</operator> <literal type="null">null</literal> <operator>||</operator> <call><name>getClass</name><argument_list>()</argument_list></call> <operator>!=</operator> <call><name><name>o</name><operator>.</operator><name>getClass</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <return>return <expr><literal type="boolean">false</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>

    <decl_stmt><decl><type><name>AmbariConfigurationEntity</name></type> <name>that</name> <init>= <expr><operator>(</operator><name>AmbariConfigurationEntity</name><operator>)</operator> <name>o</name></expr></init></decl>;</decl_stmt>

    <return>return <expr><operator>new</operator> <call><name>EqualsBuilder</name><argument_list>()</argument_list></call>
        <operator>.</operator><call><name>append</name><argument_list>(<argument><expr><name>categoryName</name></expr></argument>, <argument><expr><name><name>that</name><operator>.</operator><name>categoryName</name></name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>append</name><argument_list>(<argument><expr><name>propertyName</name></expr></argument>, <argument><expr><name><name>that</name><operator>.</operator><name>propertyName</name></name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>append</name><argument_list>(<argument><expr><name>propertyValue</name></expr></argument>, <argument><expr><name><name>that</name><operator>.</operator><name>propertyValue</name></name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>isEquals</name><argument_list>()</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>int</name></type> <name>hashCode</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><operator>new</operator> <call><name>HashCodeBuilder</name><argument_list>(<argument><expr><literal type="number">17</literal></expr></argument>, <argument><expr><literal type="number">37</literal></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>append</name><argument_list>(<argument><expr><name>categoryName</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>append</name><argument_list>(<argument><expr><name>propertyName</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>append</name><argument_list>(<argument><expr><name>propertyValue</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>toHashCode</name><argument_list>()</argument_list></call></expr>;</return>
   </block_content>}</block></function>
 </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>entities</name><operator>/</operator><name><name>AmbariConfigurationEntityPK</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>entities</name><operator>/</operator><name><name>AmbariConfigurationEntityPK</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">0000000000..3674e12781</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>entities</name><operator>/</operator><name><name>AmbariConfigurationEntityPK</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">88</literal> @@</expr></expr_stmt>
<comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>Serializable</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>lang</name><operator>.</operator><name>builder</name><operator>.</operator><name>EqualsBuilder</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>lang</name><operator>.</operator><name>builder</name><operator>.</operator><name>HashCodeBuilder</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Composite primary key for {@link AmbariConfigurationEntity}.
 */</comment>
<class><specifier>public</specifier> class <name>AmbariConfigurationEntityPK</name> <super_list><implements>implements <super><name>Serializable</name></super></implements></super_list> <block>{

  <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>categoryName</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>propertyName</name></decl>;</decl_stmt>

  <comment type="block" format="javadoc">/**
   * Constructor.
   *
   * @param categoryName configuration category name
   * @param propertyName configuration property name
   */</comment>
  <constructor><specifier>public</specifier> <name>AmbariConfigurationEntityPK</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>categoryName</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>propertyName</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>categoryName</name></name> <operator>=</operator> <name>categoryName</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>propertyName</name></name> <operator>=</operator> <name>propertyName</name></expr>;</expr_stmt>
  </block_content>}</block></constructor>

  <comment type="block" format="javadoc">/**
   * Get the configuration category name.
   *
   * @return category name
   */</comment>
  <function><type><specifier>public</specifier> <name>String</name></type> <name>getCategoryName</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>categoryName</name></expr>;</return>
  </block_content>}</block></function>

  <comment type="block" format="javadoc">/**
   * Get the property name.
   *
   * @return property name
   */</comment>
  <function><type><specifier>public</specifier> <name>String</name></type> <name>getPropertyName</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>propertyName</name></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>boolean</name></type> <name>equals</name><parameter_list>(<parameter><decl><type><name>Object</name></type> <name>o</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name>this</name> <operator>==</operator> <name>o</name></expr>)</condition> <block>{<block_content>
      <return>return <expr><literal type="boolean">true</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>

    <if_stmt><if>if <condition>(<expr><name>o</name> <operator>==</operator> <literal type="null">null</literal> <operator>||</operator> <call><name>getClass</name><argument_list>()</argument_list></call> <operator>!=</operator> <call><name><name>o</name><operator>.</operator><name>getClass</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <return>return <expr><literal type="boolean">false</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>

    <decl_stmt><decl><type><name>AmbariConfigurationEntityPK</name></type> <name>that</name> <init>= <expr><operator>(</operator><name>AmbariConfigurationEntityPK</name><operator>)</operator> <name>o</name></expr></init></decl>;</decl_stmt>

    <return>return <expr><operator>new</operator> <call><name>EqualsBuilder</name><argument_list>()</argument_list></call>
        <operator>.</operator><call><name>append</name><argument_list>(<argument><expr><name>categoryName</name></expr></argument>, <argument><expr><name><name>that</name><operator>.</operator><name>categoryName</name></name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>append</name><argument_list>(<argument><expr><name>propertyName</name></expr></argument>, <argument><expr><name><name>that</name><operator>.</operator><name>propertyName</name></name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>isEquals</name><argument_list>()</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>int</name></type> <name>hashCode</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><operator>new</operator> <call><name>HashCodeBuilder</name><argument_list>(<argument><expr><literal type="number">17</literal></expr></argument>, <argument><expr><literal type="number">37</literal></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>append</name><argument_list>(<argument><expr><name>categoryName</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>append</name><argument_list>(<argument><expr><name>propertyName</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>toHashCode</name><argument_list>()</argument_list></call></expr>;</return>
  </block_content>}</block></function>
}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>entities</name><operator>/</operator><name><name>ConfigurationBaseEntity</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>entities</name><operator>/</operator><name><name>ConfigurationBaseEntity</name><operator>.</operator><name>java</name></name>
<name>deleted</name> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">9ad30d7d1a</literal><operator>..</operator><literal type="number">0000000000</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>entities</name><operator>/</operator><name><name>ConfigurationBaseEntity</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
@@ <operator>-</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">159</literal> <operator>+</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> @@</expr></expr_stmt>
<comment type="block">/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name></name>;</package>

<import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>Column</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>Entity</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>GeneratedValue</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>GenerationType</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>Id</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>Table</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>TableGenerator</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>lang3</name><operator>.</operator><name>builder</name><operator>.</operator><name>EqualsBuilder</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>lang3</name><operator>.</operator><name>builder</name><operator>.</operator><name>HashCodeBuilder</name></name>;</import>

<class><annotation>@<name>Table</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"configuration_base"</literal></expr></argument>)</argument_list></annotation>
<annotation>@<name>TableGenerator</name><argument_list>(
  <argument><expr><name>name</name> <operator>=</operator> <literal type="string">"configuration_id_generator"</literal></expr></argument>,
  <argument><expr><name>table</name> <operator>=</operator> <literal type="string">"ambari_sequences"</literal></expr></argument>,
  <argument><expr><name>pkColumnName</name> <operator>=</operator> <literal type="string">"sequence_name"</literal></expr></argument>,
  <argument><expr><name>valueColumnName</name> <operator>=</operator> <literal type="string">"sequence_value"</literal></expr></argument>,
  <argument><expr><name>pkColumnValue</name> <operator>=</operator> <literal type="string">"configuration_id_seq"</literal></expr></argument>,
  <argument><expr><name>initialValue</name> <operator>=</operator> <literal type="number">1</literal></expr></argument>
)</argument_list></annotation>
<annotation>@<name>Entity</name></annotation>
<specifier>public</specifier> class <name>ConfigurationBaseEntity</name> <block>{

  <decl_stmt><decl><annotation>@<name>Id</name></annotation>
  <annotation>@<name>Column</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"id"</literal></expr></argument>)</argument_list></annotation>
  <annotation>@<name>GeneratedValue</name><argument_list>(<argument><expr><name>strategy</name> <operator>=</operator> <name><name>GenerationType</name><operator>.</operator><name>TABLE</name></name></expr></argument>, <argument><expr><name>generator</name> <operator>=</operator> <literal type="string">"configuration_id_generator"</literal></expr></argument>)</argument_list></annotation>
  <type><specifier>private</specifier> <name>Long</name></type> <name>id</name></decl>;</decl_stmt>

  <decl_stmt><decl><annotation>@<name>Column</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"version"</literal></expr></argument>)</argument_list></annotation>
  <type><specifier>private</specifier> <name>Integer</name></type> <name>version</name></decl>;</decl_stmt>

  <decl_stmt><decl><annotation>@<name>Column</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"version_tag"</literal></expr></argument>)</argument_list></annotation>
  <type><specifier>private</specifier> <name>String</name></type> <name>versionTag</name></decl>;</decl_stmt>

  <decl_stmt><decl><annotation>@<name>Column</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"type"</literal></expr></argument>)</argument_list></annotation>
  <type><specifier>private</specifier> <name>String</name></type> <name>type</name></decl>;</decl_stmt>

  <decl_stmt><decl><annotation>@<name>Column</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"data"</literal></expr></argument>)</argument_list></annotation>
  <type><specifier>private</specifier> <name>String</name></type> <name>configurationData</name></decl>;</decl_stmt>

  <decl_stmt><decl><annotation>@<name>Column</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"attributes"</literal></expr></argument>)</argument_list></annotation>
  <type><specifier>private</specifier> <name>String</name></type> <name>configurationAttributes</name></decl>;</decl_stmt>

  <decl_stmt><decl><annotation>@<name>Column</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"create_timestamp"</literal></expr></argument>)</argument_list></annotation>
  <type><specifier>private</specifier> <name>Long</name></type> <name>createTimestamp</name></decl>;</decl_stmt>

  <function><type><specifier>public</specifier> <name>Long</name></type> <name>getId</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>id</name></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>Integer</name></type> <name>getVersion</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>version</name></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>void</name></type> <name>setVersion</name><parameter_list>(<parameter><decl><type><name>Integer</name></type> <name>version</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>version</name></name> <operator>=</operator> <name>version</name></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>String</name></type> <name>getVersionTag</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>versionTag</name></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>void</name></type> <name>setVersionTag</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>versionTag</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>versionTag</name></name> <operator>=</operator> <name>versionTag</name></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>String</name></type> <name>getType</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>type</name></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>void</name></type> <name>setType</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>type</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>type</name></name> <operator>=</operator> <name>type</name></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>String</name></type> <name>getConfigurationData</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>configurationData</name></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>void</name></type> <name>setConfigurationData</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>configurationData</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>configurationData</name></name> <operator>=</operator> <name>configurationData</name></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>String</name></type> <name>getConfigurationAttributes</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>configurationAttributes</name></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>void</name></type> <name>setConfigurationAttributes</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>configurationAttributes</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>configurationAttributes</name></name> <operator>=</operator> <name>configurationAttributes</name></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>Long</name></type> <name>getCreateTimestamp</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>createTimestamp</name></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>void</name></type> <name>setCreateTimestamp</name><parameter_list>(<parameter><decl><type><name>Long</name></type> <name>createTimestamp</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>createTimestamp</name></name> <operator>=</operator> <name>createTimestamp</name></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>String</name></type> <name>toString</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><literal type="string">"ConfigurationBaseEntity{"</literal> <operator>+</operator>
      <literal type="string">"id="</literal> <operator>+</operator> <name>id</name> <operator>+</operator>
      <literal type="string">", version="</literal> <operator>+</operator> <name>version</name> <operator>+</operator>
      <literal type="string">", versionTag='"</literal> <operator>+</operator> <name>versionTag</name> <operator>+</operator> <literal type="char">'\''</literal> <operator>+</operator>
      <literal type="string">", type='"</literal> <operator>+</operator> <name>type</name> <operator>+</operator> <literal type="char">'\''</literal> <operator>+</operator>
      <literal type="string">", configurationData='"</literal> <operator>+</operator> <name>configurationData</name> <operator>+</operator> <literal type="char">'\''</literal> <operator>+</operator>
      <literal type="string">", configurationAttributes='"</literal> <operator>+</operator> <name>configurationAttributes</name> <operator>+</operator> <literal type="char">'\''</literal> <operator>+</operator>
      <literal type="string">", createTimestamp="</literal> <operator>+</operator> <name>createTimestamp</name> <operator>+</operator>
      <literal type="char">'}'</literal></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>boolean</name></type> <name>equals</name><parameter_list>(<parameter><decl><type><name>Object</name></type> <name>o</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name>this</name> <operator>==</operator> <name>o</name></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><literal type="boolean">true</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt><if>if <condition>(<expr><name>o</name> <operator>==</operator> <literal type="null">null</literal> <operator>||</operator> <call><name>getClass</name><argument_list>()</argument_list></call> <operator>!=</operator> <call><name><name>o</name><operator>.</operator><name>getClass</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><literal type="boolean">false</literal></expr>;</return></block_content></block></if></if_stmt>

    <decl_stmt><decl><type><name>ConfigurationBaseEntity</name></type> <name>that</name> <init>= <expr><operator>(</operator><name>ConfigurationBaseEntity</name><operator>)</operator> <name>o</name></expr></init></decl>;</decl_stmt>

    <return>return <expr><operator>new</operator> <call><name>EqualsBuilder</name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>append</name><argument_list>(<argument><expr><name>id</name></expr></argument>, <argument><expr><name><name>that</name><operator>.</operator><name>id</name></name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>append</name><argument_list>(<argument><expr><name>version</name></expr></argument>, <argument><expr><name><name>that</name><operator>.</operator><name>version</name></name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>append</name><argument_list>(<argument><expr><name>versionTag</name></expr></argument>, <argument><expr><name><name>that</name><operator>.</operator><name>versionTag</name></name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>append</name><argument_list>(<argument><expr><name>type</name></expr></argument>, <argument><expr><name><name>that</name><operator>.</operator><name>type</name></name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>append</name><argument_list>(<argument><expr><name>configurationData</name></expr></argument>, <argument><expr><name><name>that</name><operator>.</operator><name>configurationData</name></name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>append</name><argument_list>(<argument><expr><name>configurationAttributes</name></expr></argument>, <argument><expr><name><name>that</name><operator>.</operator><name>configurationAttributes</name></name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>append</name><argument_list>(<argument><expr><name>createTimestamp</name></expr></argument>, <argument><expr><name><name>that</name><operator>.</operator><name>createTimestamp</name></name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>isEquals</name><argument_list>()</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>int</name></type> <name>hashCode</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><operator>new</operator> <call><name>HashCodeBuilder</name><argument_list>(<argument><expr><literal type="number">17</literal></expr></argument>, <argument><expr><literal type="number">37</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>append</name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>append</name><argument_list>(<argument><expr><name>version</name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>append</name><argument_list>(<argument><expr><name>versionTag</name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>append</name><argument_list>(<argument><expr><name>type</name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>append</name><argument_list>(<argument><expr><name>configurationData</name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>append</name><argument_list>(<argument><expr><name>configurationAttributes</name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>append</name><argument_list>(<argument><expr><name>createTimestamp</name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>toHashCode</name><argument_list>()</argument_list></call></expr>;</return>
  </block_content>}</block></function>
}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>SchemaUpgradeHelper</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>SchemaUpgradeHelper</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">8812ef5bfc</literal><operator>..</operator><literal type="number">9c77129c46</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>SchemaUpgradeHelper</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>SchemaUpgradeHelper</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">34</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">34</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>AmbariException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>audit</name><operator>.</operator><name>AuditLoggerModule</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>configuration</name><operator>.</operator><name>Configuration</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>ControllerModule</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>ldap</name><operator>.</operator><name>LdapModule</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>DBAccessor</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>utils</name><operator>.</operator><name>EventBusSynchronizer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>utils</name><operator>.</operator><name>VersionUtils</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">373</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">374</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SchemaUpgradeHelper</name> <block>{
         <expr><call><name><name>System</name><operator>.</operator><name>exit</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;
       }</block></expr></expr_stmt>
 
      <decl_stmt><decl><type><name>Injector</name></type> <name>injector</name> <init>= <expr><call><name><name>Guice</name><operator>.</operator><name>createInjector</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>UpgradeHelperModule</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <call><name>AuditLoggerModule</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>Injector</name></type> <name>injector</name> <init>= <expr><call><name><name>Guice</name><operator>.</operator><name>createInjector</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>UpgradeHelperModule</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <call><name>AuditLoggerModule</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <call><name>LdapModule</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>SchemaUpgradeHelper</name></type> <name>schemaUpgradeHelper</name> <init>= <expr><call><name><name>injector</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name><name>SchemaUpgradeHelper</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
       <comment type="line">//Fail if MySQL database has tables with MyISAM engine</comment>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog300</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog300</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>d3e924e66c</name><operator>..</operator><literal type="number">2de60957bc</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog300</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog300</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">66</literal></expr><operator>,</operator><expr><literal type="number">21</literal> <operator>+</operator><literal type="number">66</literal></expr><operator>,</operator><expr><literal type="number">21</literal> @@ <specifier>public</specifier> <name>class</name> <name>UpgradeCatalog300</name> extends <name>AbstractUpgradeCatalog</name> <block>{
   <expr><specifier>protected</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>STAGE_DISPLAY_STATUS_COLUMN</name> <operator>=</operator> <literal type="string">"display_status"</literal></expr>;
   <specifier>protected</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>REQUEST_TABLE</name> <operator>=</operator> <literal type="string">"request"</literal></block></expr>;</expr_stmt>
   <decl_stmt><decl><type><specifier>protected</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>REQUEST_DISPLAY_STATUS_COLUMN</name> <init>= <expr><literal type="string">"display_status"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>protected</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>CLUSTER_CONFIG_TABLE</name> <init>= <expr><literal type="string">"clusterconfig"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>protected</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>CLUSTER_CONFIG_SELECTED_COLUMN</name> <init>= <expr><literal type="string">"selected"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>protected</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>CLUSTER_CONFIG_SELECTED_TIMESTAMP_COLUMN</name> <init>= <expr><literal type="string">"selected_timestamp"</literal></expr></init></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>protected</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>HOST_ROLE_COMMAND_TABLE</name> <init>= <expr><literal type="string">"host_role_command"</literal></expr></init></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>protected</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>HRC_OPS_DISPLAY_NAME_COLUMN</name> <init>= <expr><literal type="string">"ops_display_name"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>protected</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>COMPONENT_TABLE</name> <init>= <expr><literal type="string">"servicecomponentdesiredstate"</literal></expr></init></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>protected</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>COMPONENT_DESIRED_STATE_TABLE</name> <init>= <expr><literal type="string">"hostcomponentdesiredstate"</literal></expr></init></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>protected</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>COMPONENT_STATE_TABLE</name> <init>= <expr><literal type="string">"hostcomponentstate"</literal></expr></init></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>protected</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>SERVICE_DESIRED_STATE_TABLE</name> <init>= <expr><literal type="string">"servicedesiredstate"</literal></expr></init></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>protected</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>SECURITY_STATE_COLUMN</name> <init>= <expr><literal type="string">"security_state"</literal></expr></init></decl>;</decl_stmt>
 
  <decl_stmt><decl><type><specifier>protected</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>AMBARI_CONFIGURATION_TABLE</name> <init>= <expr><literal type="string">"ambari_configuration"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>protected</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>AMBARI_CONFIGURATION_CATEGORY_NAME_COLUMN</name> <init>= <expr><literal type="string">"category_name"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>protected</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>AMBARI_CONFIGURATION_PROPERTY_NAME_COLUMN</name> <init>= <expr><literal type="string">"property_name"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>protected</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>AMBARI_CONFIGURATION_PROPERTY_VALUE_COLUMN</name> <init>= <expr><literal type="string">"property_value"</literal></expr></init></decl>;</decl_stmt>

   <decl_stmt><decl><annotation>@<name>Inject</name></annotation>
   <type><name>DaoUtils</name></type> <name>daoUtils</name></decl>;</decl_stmt>
 

   <comment type="line">// ----- Constructors ------------------------------------------------------</comment>
 
   <comment type="block" format="javadoc">/**
@@ -123,6 +123,7 @@ public class UpgradeCatalog300 extends AbstractUpgradeCatalog {
     updateStageTable();
     addOpsDisplayNameColumnToHostRoleCommand();
     removeSecurityState();
    addAmbariConfigurationTable();
   }
 
   protected void updateStageTable() throws SQLException {
@@ -134,6 +135,16 @@ public class UpgradeCatalog300 extends AbstractUpgradeCatalog {
         new DBAccessor.DBColumnInfo(REQUEST_DISPLAY_STATUS_COLUMN, String.class, 255, HostRoleStatus.PENDING, false));
   }
 
  protected void addAmbariConfigurationTable() throws SQLException {
    List&lt;DBAccessor.DBColumnInfo&gt; columns = new ArrayList&lt;&gt;();
    columns.add(new DBAccessor.DBColumnInfo(AMBARI_CONFIGURATION_CATEGORY_NAME_COLUMN, String.class, 100, null, false));
    columns.add(new DBAccessor.DBColumnInfo(AMBARI_CONFIGURATION_PROPERTY_NAME_COLUMN, String.class, 100, null, false));
    columns.add(new DBAccessor.DBColumnInfo(AMBARI_CONFIGURATION_PROPERTY_VALUE_COLUMN, String.class, 255, null, true));

    dbAccessor.createTable(AMBARI_CONFIGURATION_TABLE, columns);
    dbAccessor.addPKConstraint(AMBARI_CONFIGURATION_TABLE, "PK_ambari_configuration", AMBARI_CONFIGURATION_CATEGORY_NAME_COLUMN, AMBARI_CONFIGURATION_PROPERTY_NAME_COLUMN);
  }

   /**
    * {@inheritDoc}
    */</comment>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>resources</name><operator>/</operator><name>Ambari</name><operator>-</operator><name>DDL</name><operator>-</operator><name>Derby</name><operator>-</operator><name><name>CREATE</name><operator>.</operator><name>sql</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>resources</name><operator>/</operator><name>Ambari</name><operator>-</operator><name>DDL</name><operator>-</operator><name>Derby</name><operator>-</operator><name><name>CREATE</name><operator>.</operator><name>sql</name></name>
<name>index</name> <literal type="number">7d634941d9</literal><operator>..</operator><literal type="number">7045240b30</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>resources</name><operator>/</operator><name>Ambari</name><operator>-</operator><name>DDL</name><operator>-</operator><name>Derby</name><operator>-</operator><name><name>CREATE</name><operator>.</operator><name>sql</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>resources</name><operator>/</operator><name>Ambari</name><operator>-</operator><name>DDL</name><operator>-</operator><name>Derby</name><operator>-</operator><name><name>CREATE</name><operator>.</operator><name>sql</name></name>
@@ <operator>-</operator><literal type="number">84</literal></expr><operator>,</operator><expr><literal type="number">22</literal> <operator>+</operator><literal type="number">84</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <name>CREATE</name> <name>TABLE</name> <call><name>clusterconfig</name> <argument_list>(
   <argument><expr><name>CONSTRAINT</name> <name>UQ_config_type_tag</name> <call><name>UNIQUE</name> <argument_list>(<argument><expr><name>version_tag</name></expr></argument>, <argument><expr><name>type_name</name></expr></argument>, <argument><expr><name>cluster_id</name></expr></argument>)</argument_list></call></expr></argument>,
   <argument><expr><name>CONSTRAINT</name> <name>UQ_config_type_version</name> <call><name>UNIQUE</name> <argument_list>(<argument><expr><name>cluster_id</name></expr></argument>, <argument><expr><name>type_name</name></expr></argument>, <argument><expr><name>version</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
<decl_stmt><decl><type><name>CREATE</name> <name>TABLE</name></type> <name>configuration_base</name> <argument_list>(
  <argument><expr><name>id</name> <name>BIGINT</name> <name>NOT</name> <name>NULL</name></expr></argument>,
  <argument><expr><name>version_tag</name> <call><name>VARCHAR</name><argument_list>(<argument><expr><literal type="number">255</literal></expr></argument>)</argument_list></call> <name>NOT</name> <name>NULL</name></expr></argument>,
  <argument><expr><name>version</name> <name>BIGINT</name> <name>NOT</name> <name>NULL</name></expr></argument>,
  <argument><expr><name>type</name> <call><name>VARCHAR</name><argument_list>(<argument><expr><literal type="number">255</literal></expr></argument>)</argument_list></call> <name>NOT</name> <name>NULL</name></expr></argument>,
  <argument><expr><name>data</name> <call><name>VARCHAR</name><argument_list>(<argument><expr><literal type="number">3000</literal></expr></argument>)</argument_list></call> <name>NOT</name> <name>NULL</name></expr></argument>,
  <argument><expr><name>attributes</name> <call><name>VARCHAR</name><argument_list>(<argument><expr><literal type="number">3000</literal></expr></argument>)</argument_list></call></expr></argument>,
  <argument><expr><name>create_timestamp</name> <name>BIGINT</name> <name>NOT</name> <name>NULL</name></expr></argument>,
  <argument><expr><name>CONSTRAINT</name> <name>PK_configuration_base</name> <name>PRIMARY</name> <call><name>KEY</name> <argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr></argument>
)</argument_list></decl>;</decl_stmt>

 <decl_stmt><decl><type><name>CREATE</name> <name>TABLE</name></type> <name>ambari_configuration</name> <argument_list>(
  <argument><expr><name>id</name> <name>BIGINT</name> <name>NOT</name> <name>NULL</name></expr></argument>,
  <argument><expr><name>CONSTRAINT</name> <name>PK_ambari_configuration</name> <name>PRIMARY</name> <call><name>KEY</name> <argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr></argument>,
  <argument><expr><name>CONSTRAINT</name> <name>FK_ambari_conf_conf_base</name> <name>FOREIGN</name> <call><name>KEY</name> <argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call> <name>REFERENCES</name> <call><name>configuration_base</name> <argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr></argument>
)</argument_list></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>category_name</name></type> <name>VARCHAR</name><argument_list>(<argument><expr><literal type="number">100</literal></expr></argument>)</argument_list> <name>NOT</name> <name>NULL</name></decl>,
  <decl><type ref="prev"/><name>property_name</name> <name>VARCHAR</name><argument_list>(<argument><expr><literal type="number">100</literal></expr></argument>)</argument_list> <name>NOT</name> <name>NULL</name></decl>,
  <decl><type ref="prev"/><name>property_value</name> <name>VARCHAR</name><argument_list>(<argument><expr><literal type="number">255</literal></expr></argument>)</argument_list> <name>NOT</name> <name>NULL</name></decl>,
  <decl><type ref="prev"/><name>CONSTRAINT</name> <name>PK_ambari_configuration</name> <name>PRIMARY</name> <name>KEY</name> <argument_list>(<argument><expr><name>category_name</name></expr></argument>, <argument><expr><name>property_name</name></expr></argument>)</argument_list></decl>);</decl_stmt>
 
 <decl_stmt><decl><type><name>CREATE</name> <name>TABLE</name></type> <name>serviceconfig</name> <argument_list>(
   <argument><expr><name>service_config_id</name> <name>BIGINT</name> <name>NOT</name> <name>NULL</name></expr></argument>,
<argument>@@ <expr><operator>-</operator><literal type="number">1175</literal></expr></argument>,<argument><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">1164</literal></expr></argument>,<argument><expr><literal type="number">6</literal> @@ <name>INSERT</name> <name>INTO</name> <call><name>ambari_sequences</name> <argument_list>(<argument><expr><name>sequence_name</name></expr></argument>, <argument><expr><name>sequence_value</name></expr></argument>)</argument_list></call>
   <name>union</name> <name>all</name>
   <name>select</name> <literal type="char">'servicecomponent_version_id_seq'</literal></expr></argument>, <argument><expr><literal type="number">0</literal> <name>FROM</name> <name><name>SYSIBM</name><operator>.</operator><name>SYSDUMMY1</name></name>
   <name>union</name> <name>all</name>
  <name>select</name> <literal type="char">'configuration_id_seq'</literal></expr></argument>, <argument><expr><literal type="number">0</literal> <name>FROM</name> <name><name>SYSIBM</name><operator>.</operator><name>SYSDUMMY1</name></name>
  <name>union</name> <name>all</name>
   <name>select</name> <literal type="char">'hostcomponentdesiredstate_id_seq'</literal></expr></argument>, <argument><expr><literal type="number">0</literal> <name>FROM</name> <name><name>SYSIBM</name><operator>.</operator><name>SYSDUMMY1</name></name></expr></argument>;</argument_list></decl></decl_stmt>
 
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>resources</name><operator>/</operator><name>Ambari</name><operator>-</operator><name>DDL</name><operator>-</operator><name>MySQL</name><operator>-</operator><name><name>CREATE</name><operator>.</operator><name>sql</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>resources</name><operator>/</operator><name>Ambari</name><operator>-</operator><name>DDL</name><operator>-</operator><name>MySQL</name><operator>-</operator><name><name>CREATE</name><operator>.</operator><name>sql</name></name>
<name>index</name> <name>af17353ff3</name><operator>..</operator><name>c950c7ef83</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>resources</name><operator>/</operator><name>Ambari</name><operator>-</operator><name>DDL</name><operator>-</operator><name>MySQL</name><operator>-</operator><name><name>CREATE</name><operator>.</operator><name>sql</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>resources</name><operator>/</operator><name>Ambari</name><operator>-</operator><name>DDL</name><operator>-</operator><name>MySQL</name><operator>-</operator><name><name>CREATE</name><operator>.</operator><name>sql</name></name>
@@ <operator>-</operator><literal type="number">104</literal></expr><operator>,</operator><expr><literal type="number">22</literal> <operator>+</operator><literal type="number">104</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <name>CREATE</name> <name>TABLE</name> <call><name>clusterconfig</name> <argument_list>(
   <argument><expr><name>CONSTRAINT</name> <name>UQ_config_type_tag</name> <call><name>UNIQUE</name> <argument_list>(<argument><expr><name>cluster_id</name></expr></argument>, <argument><expr><name>type_name</name></expr></argument>, <argument><expr><name>version_tag</name></expr></argument>)</argument_list></call></expr></argument>,
   <argument><expr><name>CONSTRAINT</name> <name>UQ_config_type_version</name> <call><name>UNIQUE</name> <argument_list>(<argument><expr><name>cluster_id</name></expr></argument>, <argument><expr><name>type_name</name></expr></argument>, <argument><expr><name>version</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
<decl_stmt><decl><type><name>CREATE</name> <name>TABLE</name></type> <name>configuration_base</name> <argument_list>(
  <argument><expr><name>id</name> <name>BIGINT</name> <name>NOT</name> <name>NULL</name></expr></argument>,
  <argument><expr><name>version_tag</name> <call><name>VARCHAR</name><argument_list>(<argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call> <name>NOT</name> <name>NULL</name></expr></argument>,
  <argument><expr><name>version</name> <name>BIGINT</name> <name>NOT</name> <name>NULL</name></expr></argument>,
  <argument><expr><name>type</name> <call><name>VARCHAR</name><argument_list>(<argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call> <name>NOT</name> <name>NULL</name></expr></argument>,
  <argument><expr><name>data</name> <name>LONGTEXT</name> <name>NOT</name> <name>NULL</name></expr></argument>,
  <argument><expr><name>attributes</name> <name>LONGTEXT</name></expr></argument>,
  <argument><expr><name>create_timestamp</name> <name>BIGINT</name> <name>NOT</name> <name>NULL</name></expr></argument>,
  <argument><expr><name>CONSTRAINT</name> <name>PK_configuration_base</name> <name>PRIMARY</name> <call><name>KEY</name> <argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr></argument>
)</argument_list></decl>;</decl_stmt>

 <decl_stmt><decl><type><name>CREATE</name> <name>TABLE</name></type> <name>ambari_configuration</name> <argument_list>(
  <argument><expr><name>id</name> <name>BIGINT</name> <name>NOT</name> <name>NULL</name></expr></argument>,
  <argument><expr><name>CONSTRAINT</name> <name>PK_ambari_configuration</name> <name>PRIMARY</name> <call><name>KEY</name> <argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr></argument>,
  <argument><expr><name>CONSTRAINT</name> <name>FK_ambari_conf_conf_base</name> <name>FOREIGN</name> <call><name>KEY</name> <argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call> <name>REFERENCES</name> <call><name>configuration_base</name> <argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr></argument>
)</argument_list></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>category_name</name></type> <name>VARCHAR</name><argument_list>(<argument><expr><literal type="number">100</literal></expr></argument>)</argument_list> <name>NOT</name> <name>NULL</name></decl>,
  <decl><type ref="prev"/><name>property_name</name> <name>VARCHAR</name><argument_list>(<argument><expr><literal type="number">100</literal></expr></argument>)</argument_list> <name>NOT</name> <name>NULL</name></decl>,
  <decl><type ref="prev"/><name>property_value</name> <name>VARCHAR</name><argument_list>(<argument><expr><literal type="number">255</literal></expr></argument>)</argument_list> <name>NOT</name> <name>NULL</name></decl>,
  <decl><type ref="prev"/><name>CONSTRAINT</name> <name>PK_ambari_configuration</name> <name>PRIMARY</name> <name>KEY</name> <argument_list>(<argument><expr><name>category_name</name></expr></argument>, <argument><expr><name>property_name</name></expr></argument>)</argument_list></decl>);</decl_stmt>
 
 <decl_stmt><decl><type><name>CREATE</name> <name>TABLE</name></type> <name>serviceconfig</name> <argument_list>(
   <argument><expr><name>service_config_id</name> <name>BIGINT</name> <name>NOT</name> <name>NULL</name></expr></argument>,
<argument>@@ <expr><operator>-</operator><literal type="number">1137</literal></expr></argument>,<argument><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">1126</literal></expr></argument>,<argument><expr><literal type="number">6</literal> @@ <name>INSERT</name> <name>INTO</name> <call><name>ambari_sequences</name><argument_list>(<argument><expr><name>sequence_name</name></expr></argument>, <argument><expr><name>sequence_value</name></expr></argument>)</argument_list></call> <call><name>VALUES</name>
   <argument_list>(<argument><expr><literal type="char">'remote_cluster_id_seq'</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>,
   <argument><expr><operator>(</operator><literal type="char">'remote_cluster_service_id_seq'</literal><operator>,</operator> <literal type="number">0</literal><operator>)</operator></expr></argument>,
   <argument><expr><operator>(</operator><literal type="char">'servicecomponent_version_id_seq'</literal><operator>,</operator> <literal type="number">0</literal><operator>)</operator></expr></argument>,
  <argument><expr><operator>(</operator><literal type="char">'configuration_id_seq'</literal><operator>,</operator> <literal type="number">0</literal><operator>)</operator></expr></argument>,
   <argument><expr><operator>(</operator><literal type="char">'hostcomponentdesiredstate_id_seq'</literal><operator>,</operator> <literal type="number">0</literal><operator>)</operator></expr></argument>;</argument_list></decl></decl_stmt>
 
 <decl_stmt><decl><type><name>INSERT</name> <name>INTO</name></type> <name>adminresourcetype</name> <argument_list>(<argument><expr><name>resource_type_id</name></expr></argument>, <argument><expr><name>resource_type_name</name></expr></argument>)</argument_list> <name>VALUES</name>
<name>diff</name> --<name>git</name> <name>a</name>/<name>ambari</name>-<name>server</name>/<name>src</name>/<name>main</name>/<name>resources</name>/<name>Ambari</name>-<name>DDL</name>-<name>Oracle</name>-<name><name>CREATE</name><operator>.</operator><name>sql</name></name> <name>b</name>/<name>ambari</name>-<name>server</name>/<name>src</name>/<name>main</name>/<name>resources</name>/<name>Ambari</name>-<name>DDL</name>-<name>Oracle</name>-<name><name>CREATE</name><operator>.</operator><name>sql</name></name>
<name>index</name> 89c7971303..537ae196c5 100644
-- <name>a</name>/<name>ambari</name>-<name>server</name>/<name>src</name>/<name>main</name>/<name>resources</name>/<name>Ambari</name>-<name>DDL</name>-<name>Oracle</name>-<name><name>CREATE</name><operator>.</operator><name>sql</name></name>
++ <name>b</name>/<name>ambari</name>-<name>server</name>/<name>src</name>/<name>main</name>/<name>resources</name>/<name>Ambari</name>-<name>DDL</name>-<name>Oracle</name>-<name><name>CREATE</name><operator>.</operator><name>sql</name></name>
@@ -84</decl>,22 +84,11 @@ <decl><type ref="prev"/><name>CREATE</name> <name>TABLE</name> <name>clusterconfig</name> <argument_list>(
   <argument><expr><name>CONSTRAINT</name> <name>UQ_config_type_tag</name> <call><name>UNIQUE</name> <argument_list>(<argument><expr><name>cluster_id</name></expr></argument>, <argument><expr><name>type_name</name></expr></argument>, <argument><expr><name>version_tag</name></expr></argument>)</argument_list></call></expr></argument>,
   <argument><expr><name>CONSTRAINT</name> <name>UQ_config_type_version</name> <call><name>UNIQUE</name> <argument_list>(<argument><expr><name>cluster_id</name></expr></argument>, <argument><expr><name>type_name</name></expr></argument>, <argument><expr><name>version</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
 
<decl_stmt><decl><type><name>CREATE</name> <name>TABLE</name></type> <name>configuration_base</name> <argument_list>(
  <argument><expr><name>id</name> <call><name>NUMBER</name><argument_list>(<argument><expr><literal type="number">19</literal></expr></argument>)</argument_list></call> <name>NOT</name> <name>NULL</name></expr></argument>,
  <argument><expr><name>version_tag</name> <call><name>VARCHAR</name><argument_list>(<argument><expr><literal type="number">255</literal></expr></argument>)</argument_list></call> <name>NOT</name> <name>NULL</name></expr></argument>,
  <argument><expr><name>version</name> <call><name>NUMBER</name><argument_list>(<argument><expr><literal type="number">19</literal></expr></argument>)</argument_list></call> <name>NOT</name> <name>NULL</name></expr></argument>,
  <argument><expr><name>type</name> <call><name>VARCHAR</name><argument_list>(<argument><expr><literal type="number">255</literal></expr></argument>)</argument_list></call> <name>NOT</name> <name>NULL</name></expr></argument>,
  <argument><expr><name>data</name> <name>CLOB</name> <name>NOT</name> <name>NULL</name></expr></argument>,
  <argument><expr><name>attributes</name> <name>CLOB</name></expr></argument>,
  <argument><expr><name>create_timestamp</name> <call><name>NUMBER</name><argument_list>(<argument><expr><literal type="number">19</literal></expr></argument>)</argument_list></call> <name>NOT</name> <name>NULL</name></expr></argument>,
  <argument><expr><name>CONSTRAINT</name> <name>PK_configuration_base</name> <name>PRIMARY</name> <call><name>KEY</name> <argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr></argument>
)</argument_list></decl>;</decl_stmt>

 <decl_stmt><decl><type><name>CREATE</name> <name>TABLE</name></type> <name>ambari_configuration</name> <argument_list>(
  <argument><expr><name>id</name> <call><name>NUMBER</name><argument_list>(<argument><expr><literal type="number">19</literal></expr></argument>)</argument_list></call> <name>NOT</name> <name>NULL</name></expr></argument>,
  <argument><expr><name>CONSTRAINT</name> <name>PK_ambari_configuration</name> <name>PRIMARY</name> <call><name>KEY</name> <argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr></argument>,
  <argument><expr><name>CONSTRAINT</name> <name>FK_ambari_conf_conf_base</name> <name>FOREIGN</name> <call><name>KEY</name> <argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call> <name>REFERENCES</name> <call><name>configuration_base</name> <argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr></argument>
)</argument_list></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>category_name</name></type> <name>VARCHAR2</name><argument_list>(<argument><expr><literal type="number">100</literal></expr></argument>)</argument_list> <name>NOT</name> <name>NULL</name></decl>,
  <decl><type ref="prev"/><name>property_name</name> <name>VARCHAR2</name><argument_list>(<argument><expr><literal type="number">100</literal></expr></argument>)</argument_list> <name>NOT</name> <name>NULL</name></decl>,
  <decl><type ref="prev"/><name>property_value</name> <name>VARCHAR2</name><argument_list>(<argument><expr><literal type="number">255</literal></expr></argument>)</argument_list> <name>NOT</name> <name>NULL</name></decl>,
  <decl><type ref="prev"/><name>CONSTRAINT</name> <name>PK_ambari_configuration</name> <name>PRIMARY</name> <name>KEY</name> <argument_list>(<argument><expr><name>category_name</name></expr></argument>, <argument><expr><name>property_name</name></expr></argument>)</argument_list></decl>);</decl_stmt>
 
 <decl_stmt><decl><type><name>CREATE</name> <name>TABLE</name></type> <name>serviceconfig</name> <argument_list>(
   <argument><expr><name>service_config_id</name> <call><name>NUMBER</name><argument_list>(<argument><expr><literal type="number">19</literal></expr></argument>)</argument_list></call> <name>NOT</name> <name>NULL</name></expr></argument>,
<argument>@@ <expr><operator>-</operator><literal type="number">1116</literal></expr></argument>,<argument><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">1105</literal></expr></argument>,<argument><expr><literal type="number">6</literal> @@ <name>INSERT</name> <name>INTO</name> <call><name>ambari_sequences</name><argument_list>(<argument><expr><name>sequence_name</name></expr></argument>, <argument><expr><name>sequence_value</name></expr></argument>)</argument_list></call> <call><name>values</name> <argument_list>(<argument><expr><literal type="char">'ambari_oper
 INSERT INTO ambari_sequences(sequence_name, sequence_value) values ('</literal><name>remote_cluster_id_seq</name><literal type="char">', 0);
 INSERT INTO ambari_sequences(sequence_name, sequence_value) values ('</literal><name>remote_cluster_service_id_seq</name><literal type="char">', 0);
 INSERT INTO ambari_sequences(sequence_name, sequence_value) values ('</literal><name>servicecomponent_version_id_seq</name><literal type="char">', 0);
INSERT INTO ambari_sequences(sequence_name, sequence_value) values ('</literal><name>configuration_id_seq</name><literal type="char">', 0);
 INSERT INTO ambari_sequences(sequence_name, sequence_value) values ('</literal><name>hostcomponentdesiredstate_id_seq</name><literal type="char">', 0);
 
 INSERT INTO metainfo("metainfo_key", "metainfo_value") values ('</literal><name>version</name><literal type="char">', '</literal><name>$</name><block>{<expr><name>ambariSchemaVersion</name></expr>}</block><literal type="char">');
diff --git a/ambari-server/src/main/resources/Ambari-DDL-Postgres-CREATE.sql b/ambari-server/src/main/resources/Ambari-DDL-Postgres-CREATE.sql
index 3d2bd3a107..b4952c2e86 100644
-- a/ambari-server/src/main/resources/Ambari-DDL-Postgres-CREATE.sql
++ b/ambari-server/src/main/resources/Ambari-DDL-Postgres-CREATE.sql
@@ -66,21 +66,11 @@ CREATE TABLE clusters (
   CONSTRAINT FK_clusters_resource_id FOREIGN KEY (resource_id) REFERENCES adminresource (resource_id)
 );
 
CREATE TABLE configuration_base (
  id BIGINT NOT NULL,
  version_tag VARCHAR(255) NOT NULL,
  version BIGINT NOT NULL,
  type VARCHAR(255) NOT NULL,
  data TEXT NOT NULL,
  attributes TEXT,
  create_timestamp BIGINT NOT NULL,
  CONSTRAINT PK_configuration_base PRIMARY KEY (id)
);

 CREATE TABLE ambari_configuration (
  id BIGINT NOT NULL,
  CONSTRAINT PK_ambari_configuration PRIMARY KEY (id),
  CONSTRAINT FK_ambari_conf_conf_base FOREIGN KEY (id) REFERENCES configuration_base (id)
  category_name VARCHAR(100) NOT NULL,
  property_name VARCHAR(100) NOT NULL,
  property_value VARCHAR(255) NOT NULL,
  CONSTRAINT PK_ambari_configuration PRIMARY KEY (category_name, property_name)
 );
 
 CREATE TABLE clusterconfig (
@@ -1116,7 +1106,6 @@ INSERT INTO ambari_sequences (sequence_name, sequence_value) VALUES
   ('</literal><name>remote_cluster_id_seq</name><literal type="char">', 0),
   ('</literal><name>remote_cluster_service_id_seq</name><literal type="char">', 0),
   ('</literal><name>servicecomponent_version_id_seq</name><literal type="char">', 0),
  ('</literal><name>configuration_id_seq</name><literal type="char">', 0),
   ('</literal><name>hostcomponentdesiredstate_id_seq</name><literal type="char">', 0);
 
 INSERT INTO adminresourcetype (resource_type_id, resource_type_name) VALUES
diff --git a/ambari-server/src/main/resources/Ambari-DDL-SQLAnywhere-CREATE.sql b/ambari-server/src/main/resources/Ambari-DDL-SQLAnywhere-CREATE.sql
index 55a6c61017..4fb0d0981a 100644
-- a/ambari-server/src/main/resources/Ambari-DDL-SQLAnywhere-CREATE.sql
++ b/ambari-server/src/main/resources/Ambari-DDL-SQLAnywhere-CREATE.sql
@@ -83,22 +83,11 @@ CREATE TABLE clusterconfig (
   CONSTRAINT UQ_config_type_tag UNIQUE (cluster_id, type_name, version_tag),
   CONSTRAINT UQ_config_type_version UNIQUE (cluster_id, type_name, version));
 
CREATE TABLE configuration_base (
  id NUMERIC(19) NOT NULL,
  version_tag VARCHAR(255) NOT NULL,
  version NUMERIC(19) NOT NULL,
  type VARCHAR(255) NOT NULL,
  data TEXT NOT NULL,
  attributes TEXT,
  create_timestamp NUMERIC(19) NOT NULL,
  CONSTRAINT PK_configuration_base PRIMARY KEY (id)
);

 CREATE TABLE ambari_configuration (
  id NUMERIC(19) NOT NULL,
  CONSTRAINT PK_ambari_configuration PRIMARY KEY (id),
  CONSTRAINT FK_ambari_conf_conf_base FOREIGN KEY (id) REFERENCES configuration_base (id)
);
  category_name VARCHAR(100) NOT NULL,
  property_name VARCHAR(100) NOT NULL,
  property_value VARCHAR(255) NOT NULL,
  CONSTRAINT PK_ambari_configuration PRIMARY KEY (category_name, property_name));
 
 CREATE TABLE serviceconfig (
   service_config_id NUMERIC(19) NOT NULL,
@@ -1115,7 +1104,6 @@ INSERT INTO ambari_sequences(sequence_name, sequence_value) values ('</literal><name>remote_clus</name>
 <name>INSERT</name> <name>INTO</name> <call><name>ambari_sequences</name><argument_list>(<argument><expr><name>sequence_name</name></expr></argument>, <argument><expr><name>sequence_value</name></expr></argument>)</argument_list></call> <call><name>values</name> <argument_list>(<argument><expr><literal type="char">'remote_cluster_service_id_seq'</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>;</argument_list></call></expr></argument></argument_list></decl></decl_stmt>
 <decl_stmt><decl><type><name>INSERT</name> <name>INTO</name></type> <name>ambari_sequences</name><argument_list>(<argument><expr><name>sequence_name</name></expr></argument>, <argument><expr><name>sequence_value</name></expr></argument>)</argument_list> <name>values</name> <argument_list>(<argument><expr><literal type="char">'servicecomponent_version_id_seq'</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></decl>;</decl_stmt>
 <decl_stmt><decl><type><name>INSERT</name> <name>INTO</name></type> <name>ambari_sequences</name><argument_list>(<argument><expr><name>sequence_name</name></expr></argument>, <argument><expr><name>sequence_value</name></expr></argument>)</argument_list> <name>values</name> <argument_list>(<argument><expr><literal type="char">'hostcomponentdesiredstate_id_seq'</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></decl>;</decl_stmt>
<decl_stmt><decl><type><name>INSERT</name> <name>INTO</name></type> <name>ambari_sequences</name><argument_list>(<argument><expr><name>sequence_name</name></expr></argument>, <argument><expr><name>sequence_value</name></expr></argument>)</argument_list> <name>values</name> <argument_list>(<argument><expr><literal type="char">'configuration_id_seq'</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></decl>;</decl_stmt>
 
 <decl_stmt><decl><type><name>insert</name> <name>into</name></type> <name>adminresourcetype</name> <argument_list>(<argument><expr><name>resource_type_id</name></expr></argument>, <argument><expr><name>resource_type_name</name></expr></argument>)</argument_list>
   <name>select</name> 1</decl>, 'AMBARI'
<decl><type ref="prev"/><name>diff</name> --<name>git</name> <name>a</name>/<name>ambari</name>-<name>server</name>/<name>src</name>/<name>main</name>/<name>resources</name>/<name>Ambari</name>-<name>DDL</name>-<name>SQLServer</name>-<name><name>CREATE</name><operator>.</operator><name>sql</name></name> <name>b</name>/<name>ambari</name>-<name>server</name>/<name>src</name>/<name>main</name>/<name>resources</name>/<name>Ambari</name>-<name>DDL</name>-<name>SQLServer</name>-<name><name>CREATE</name><operator>.</operator><name>sql</name></name>
<name>index</name> <name>e5e8af59c3</name>..8a88aba905 100644
-- <name>a</name>/<name>ambari</name>-<name>server</name>/<name>src</name>/<name>main</name>/<name>resources</name>/<name>Ambari</name>-<name>DDL</name>-<name>SQLServer</name>-<name><name>CREATE</name><operator>.</operator><name>sql</name></name>
++ <name>b</name>/<name>ambari</name>-<name>server</name>/<name>src</name>/<name>main</name>/<name>resources</name>/<name>Ambari</name>-<name>DDL</name>-<name>SQLServer</name>-<name><name>CREATE</name><operator>.</operator><name>sql</name></name>
@@ -97</decl>,21 +97,11 @@ <decl><type ref="prev"/><name>CREATE</name> <name>TABLE</name> <name>clusterconfig</name> <argument_list>(
   <argument><expr><name>CONSTRAINT</name> <name>UQ_config_type_tag</name> <call><name>UNIQUE</name> <argument_list>(<argument><expr><name>cluster_id</name></expr></argument>, <argument><expr><name>type_name</name></expr></argument>, <argument><expr><name>version_tag</name></expr></argument>)</argument_list></call></expr></argument>,
   <argument><expr><name>CONSTRAINT</name> <name>UQ_config_type_version</name> <call><name>UNIQUE</name> <argument_list>(<argument><expr><name>cluster_id</name></expr></argument>, <argument><expr><name>type_name</name></expr></argument>, <argument><expr><name>version</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
 
<decl_stmt><decl><type><name>CREATE</name> <name>TABLE</name></type> <name>configuration_base</name> <argument_list>(
  <argument><expr><name>id</name> <name>BIGINT</name> <name>NOT</name> <name>NULL</name></expr></argument>,
  <argument><expr><name>version_tag</name> <call><name>VARCHAR</name><argument_list>(<argument><expr><literal type="number">255</literal></expr></argument>)</argument_list></call> <name>NOT</name> <name>NULL</name></expr></argument>,
  <argument><expr><name>version</name> <name>BIGINT</name> <name>NOT</name> <name>NULL</name></expr></argument>,
  <argument><expr><name>type</name> <call><name>VARCHAR</name><argument_list>(<argument><expr><literal type="number">255</literal></expr></argument>)</argument_list></call> <name>NOT</name> <name>NULL</name></expr></argument>,
  <argument><expr><name>data</name> <call><name>VARCHAR</name><argument_list>(<argument><expr><name>MAX</name></expr></argument>)</argument_list></call> <name>NOT</name> <name>NULL</name></expr></argument>,
  <argument><expr><name>attributes</name> <call><name>VARCHAR</name><argument_list>(<argument><expr><name>MAX</name></expr></argument>)</argument_list></call></expr></argument>,
  <argument><expr><name>create_timestamp</name> <name>BIGINT</name> <name>NOT</name> <name>NULL</name></expr></argument>,
  <argument><expr><name>CONSTRAINT</name> <name>PK_configuration_base</name> <name>PRIMARY</name> <call><name>KEY</name> <argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr></argument>
)</argument_list></decl>;</decl_stmt>

 <decl_stmt><decl><type><name>CREATE</name> <name>TABLE</name></type> <name>ambari_configuration</name> <argument_list>(
  <argument><expr><name>id</name> <name>BIGINT</name> <name>NOT</name> <name>NULL</name></expr></argument>,
  <argument><expr><name>CONSTRAINT</name> <name>PK_ambari_configuration</name> <name>PRIMARY</name> <call><name>KEY</name> <argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr></argument>,
  <argument><expr><name>CONSTRAINT</name> <name>FK_ambari_conf_conf_base</name> <name>FOREIGN</name> <call><name>KEY</name> <argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call> <name>REFERENCES</name> <call><name>configuration_base</name> <argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call>
  <name>category_name</name> <call><name>VARCHAR</name><argument_list>(<argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call> <name>NOT</name> <name>NULL</name></expr></argument>,
  <argument><expr><name>property_name</name> <call><name>VARCHAR</name><argument_list>(<argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call> <name>NOT</name> <name>NULL</name></expr></argument>,
  <argument><expr><name>property_value</name> <call><name>VARCHAR</name><argument_list>(<argument><expr><literal type="number">255</literal></expr></argument>)</argument_list></call> <name>NOT</name> <name>NULL</name></expr></argument>,
  <argument><expr><name>CONSTRAINT</name> <name>PK_ambari_configuration</name> <name>PRIMARY</name> <call><name>KEY</name> <argument_list>(<argument><expr><name>category_name</name></expr></argument>, <argument><expr><name>property_name</name></expr></argument>)</argument_list></call></expr></argument>
 )</argument_list></decl>;</decl_stmt>
 
 <decl_stmt><decl><type><name>CREATE</name> <name>TABLE</name></type> <name>serviceconfig</name> <argument_list>(
<argument>@@ <expr><operator>-</operator><literal type="number">1140</literal></expr></argument>,<argument><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">1130</literal></expr></argument>,<argument><expr><literal type="number">6</literal> @@ <name>BEGIN</name> <call><name>TRANSACTION</name>
     <argument_list>(<argument><expr><literal type="char">'remote_cluster_id_seq'</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>,
     <argument><expr><operator>(</operator><literal type="char">'remote_cluster_service_id_seq'</literal><operator>,</operator> <literal type="number">0</literal><operator>)</operator></expr></argument>,
     <argument><expr><operator>(</operator><literal type="char">'servicecomponent_version_id_seq'</literal><operator>,</operator> <literal type="number">0</literal><operator>)</operator></expr></argument>,
    <argument><expr><operator>(</operator><literal type="char">'configuration_id_seq'</literal><operator>,</operator> <literal type="number">0</literal><operator>)</operator></expr></argument>,
     <argument><expr><operator>(</operator><literal type="char">'hostcomponentdesiredstate_id_seq'</literal><operator>,</operator> <literal type="number">0</literal><operator>)</operator></expr></argument>;</argument_list></decl></decl_stmt>
 
   <decl_stmt><decl><type><name>insert</name> <name>into</name></type> <name>adminresourcetype</name> <argument_list>(<argument><expr><name>resource_type_id</name></expr></argument>, <argument><expr><name>resource_type_name</name></expr></argument>)</argument_list>
<name>diff</name> --<name>git</name> <name>a</name>/<name>ambari</name>-<name>server</name>/<name>src</name>/<name>main</name>/<name>resources</name>/<name>META</name>-<name>INF</name>/<name><name>persistence</name><operator>.</operator><name>xml</name></name> <name>b</name>/<name>ambari</name>-<name>server</name>/<name>src</name>/<name>main</name>/<name>resources</name>/<name>META</name>-<name>INF</name>/<name><name>persistence</name><operator>.</operator><name>xml</name></name>
<name>index</name> 67eef705af..686c8312cd 100644
-- <name>a</name>/<name>ambari</name>-<name>server</name>/<name>src</name>/<name>main</name>/<name>resources</name>/<name>META</name>-<name>INF</name>/<name><name>persistence</name><operator>.</operator><name>xml</name></name>
++ <name>b</name>/<name>ambari</name>-<name>server</name>/<name>src</name>/<name>main</name>/<name>resources</name>/<name>META</name>-<name>INF</name>/<name><name>persistence</name><operator>.</operator><name>xml</name></name>
@@ -97</decl>,7 +97,6 @@
     <decl><type ref="prev"/><argument_list type="generic">&lt;<argument>class</argument>&gt;</argument_list><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name><name>KerberosDescriptorEntity</name><argument_list type="generic">&lt;<argument><operator>/</operator>class</argument>&gt;</argument_list></name></name>
     <argument_list type="generic">&lt;<argument>class</argument>&gt;</argument_list><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name><name>RemoteAmbariClusterEntity</name><argument_list type="generic">&lt;<argument><operator>/</operator>class</argument>&gt;</argument_list></name></name>
     <argument_list type="generic">&lt;<argument>class</argument>&gt;</argument_list><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name><name>RemoteAmbariClusterServiceEntity</name><argument_list type="generic">&lt;<argument><operator>/</operator>class</argument>&gt;</argument_list></name></name>
    <argument_list type="generic">&lt;<argument>class</argument>&gt;</argument_list><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name><name>ConfigurationBaseEntity</name><argument_list type="generic">&lt;<argument><operator>/</operator>class</argument>&gt;</argument_list></name></name>
     <argument_list type="generic">&lt;<argument>class</argument>&gt;</argument_list><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name><name>AmbariConfigurationEntity</name><argument_list type="generic">&lt;<argument><operator>/</operator>class</argument>&gt;</argument_list></name></name>
 
     <argument_list type="generic">&lt;<argument><name>properties</name></argument>&gt;</argument_list>
<name>diff</name> --<name>git</name> <name>a</name>/<name>ambari</name>-<name>server</name>/<name>src</name>/<name>test</name>/<name>java</name>/<name>org</name>/<name>apache</name>/<name>ambari</name>/<name>server</name>/<name>controller</name>/<name>internal</name>/<name><name>AmbariConfigurationResourceProviderTest</name><operator>.</operator><name>java</name></name> <name>b</name>/<name>ambari</name>-<name>server</name>/<name>src</name>/<name>test</name>/<name>java</name>/<name>org</name>/<name>apache</name>/<name>ambari</name>/<name>server</name>/<name>controller</name>/<name>internal</name>/<name><name>AmbariConfigurationResourceProviderTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>c2a14218e7</name>..<name>a2ecb271ed</name> 100644
-- <name>a</name>/<name>ambari</name>-<name>server</name>/<name>src</name>/<name>test</name>/<name>java</name>/<name>org</name>/<name>apache</name>/<name>ambari</name>/<name>server</name>/<name>controller</name>/<name>internal</name>/<name><name>AmbariConfigurationResourceProviderTest</name><operator>.</operator><name>java</name></name>
++ <name>b</name>/<name>ambari</name>-<name>server</name>/<name>src</name>/<name>test</name>/<name>java</name>/<name>org</name>/<name>apache</name>/<name>ambari</name>/<name>server</name>/<name>controller</name>/<name>internal</name>/<name><name>AmbariConfigurationResourceProviderTest</name><operator>.</operator><name>java</name></name>
@@ -14</decl>,238 +14,364 @@
 
 package <decl><type ref="prev"/><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>internal</name></name></decl>;</decl_stmt>
 
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>internal</name><operator>.</operator><name>AmbariConfigurationResourceProvider</name><operator>.</operator><name>AMBARI_CONFIGURATION_CATEGORY_PROPERTY_ID</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>internal</name><operator>.</operator><name>AmbariConfigurationResourceProvider</name><operator>.</operator><name>AMBARI_CONFIGURATION_PROPERTIES_PROPERTY_ID</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>anyObject</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>capture</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>eq</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>expect</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>expectLastCall</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>newCapture</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>TreeMap</name></name>;</import>

<import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>EntityManager</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>Predicate</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>Request</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>Resource</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>ResourceProvider</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>utilities</name><operator>.</operator><name>PredicateBuilder</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>events</name><operator>.</operator><name>AmbariLdapConfigChangedEvent</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>events</name><operator>.</operator><name>AmbariConfigurationChangedEvent</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>events</name><operator>.</operator><name>publishers</name><operator>.</operator><name>AmbariEventPublisher</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>dao</name><operator>.</operator><name>AmbariConfigurationDAO</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>AmbariConfigurationEntity</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>ConfigurationBaseEntity</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>security</name><operator>.</operator><name>TestAuthenticationFactory</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>security</name><operator>.</operator><name>authorization</name><operator>.</operator><name>AuthorizationException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>Capture</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMockRule</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMockSupport</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>Mock</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>TestSubject</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Before</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Rule</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>After</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>springframework</name><operator>.</operator><name>security</name><operator>.</operator><name>core</name><operator>.</operator><name>Authentication</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>springframework</name><operator>.</operator><name>security</name><operator>.</operator><name>core</name><operator>.</operator><name>context</name><operator>.</operator><name>SecurityContextHolder</name></name>;</import>
 
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>collect</name><operator>.</operator><name>Lists</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>collect</name><operator>.</operator><name>Maps</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>collect</name><operator>.</operator><name>Sets</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>gson</name><operator>.</operator><name>Gson</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>gson</name><operator>.</operator><name>GsonBuilder</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>AbstractModule</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>Guice</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>Injector</name></name>;</import>
 
 <class><specifier>public</specifier> class <name>AmbariConfigurationResourceProviderTest</name> <super_list><extends>extends <super><name>EasyMockSupport</name></super></extends></super_list> <block>{
 
  <decl_stmt><decl><annotation>@<name>Rule</name></annotation>
  <type><specifier>public</specifier> <name>EasyMockRule</name></type> <name>mocks</name> <init>= <expr><operator>new</operator> <call><name>EasyMockRule</name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>CATEGORY_NAME_1</name> <init>= <expr><literal type="string">"test-category-1"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>CATEGORY_NAME_2</name> <init>= <expr><literal type="string">"test-category-2"</literal></expr></init></decl>;</decl_stmt>
 
  <decl_stmt><decl><annotation>@<name>Mock</name></annotation>
  <type><specifier>private</specifier> <name>Request</name></type> <name>requestMock</name></decl>;</decl_stmt>
  <function><annotation>@<name>After</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>clearAuthentication</name><parameter_list>()</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name><name>SecurityContextHolder</name><operator>.</operator><name>getContext</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>setAuthentication</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>
 
  <decl_stmt><decl><annotation>@<name>Mock</name></annotation>
  <type><specifier>private</specifier> <name>AmbariConfigurationDAO</name></type> <name>ambariConfigurationDAO</name></decl>;</decl_stmt>
  <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testCreateResources_Administrator</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name>testCreateResources</name><argument_list>(<argument><expr><call><name><name>TestAuthenticationFactory</name><operator>.</operator><name>createAdministrator</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>
 
  <decl_stmt><decl><annotation>@<name>Mock</name></annotation>
  <type><specifier>private</specifier> <name>AmbariEventPublisher</name></type> <name>publisher</name></decl>;</decl_stmt>
  <function><annotation>@<name>Test</name><argument_list>(<argument><expr><name>expected</name> <operator>=</operator> <name><name>AuthorizationException</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testCreateResources_ClusterAdministrator</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name>testCreateResources</name><argument_list>(<argument><expr><call><name><name>TestAuthenticationFactory</name><operator>.</operator><name>createClusterAdministrator</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>
 
  <decl_stmt><decl><type><specifier>private</specifier> <name><name>Capture</name><argument_list type="generic">&lt;<argument><name>AmbariConfigurationEntity</name></argument>&gt;</argument_list></name></type> <name>ambariConfigurationEntityCapture</name></decl>;</decl_stmt>
  <function><annotation>@<name>Test</name><argument_list>(<argument><expr><name>expected</name> <operator>=</operator> <name><name>AuthorizationException</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testCreateResources_ClusterOperator</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name>testCreateResources</name><argument_list>(<argument><expr><call><name><name>TestAuthenticationFactory</name><operator>.</operator><name>createClusterOperator</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>
 
  <decl_stmt><decl><type><specifier>private</specifier> <name>Gson</name></type> <name>gson</name></decl>;</decl_stmt>
  <function><annotation>@<name>Test</name><argument_list>(<argument><expr><name>expected</name> <operator>=</operator> <name><name>AuthorizationException</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testCreateResources_ServiceAdministrator</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name>testCreateResources</name><argument_list>(<argument><expr><call><name><name>TestAuthenticationFactory</name><operator>.</operator><name>createServiceAdministrator</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>
 
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>DATA_MOCK_STR</name> <init>= <expr><literal type="string">"[\n"</literal> <operator>+</operator>
    <literal type="string">"      {\n"</literal> <operator>+</operator>
    <literal type="string">"        \"authentication.ldap.baseDn\" : \"dc=ambari,dc=apache,dc=org\",\n"</literal> <operator>+</operator>
    <literal type="string">"        \"authentication.ldap.primaryUrl\" : \"localhost:33389\",\n"</literal> <operator>+</operator>
    <literal type="string">"        \"authentication.ldap.secondaryUrl\" : \"localhost:333\"\n"</literal> <operator>+</operator>
    <literal type="string">"      }\n"</literal> <operator>+</operator>
    <literal type="string">"    ]"</literal></expr></init></decl>;</decl_stmt>
  <function><annotation>@<name>Test</name><argument_list>(<argument><expr><name>expected</name> <operator>=</operator> <name><name>AuthorizationException</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testCreateResources_ServiceOperator</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name>testCreateResources</name><argument_list>(<argument><expr><call><name><name>TestAuthenticationFactory</name><operator>.</operator><name>createServiceOperator</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>
 
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>Long</name></type> <name>PK_LONG</name> <init>= <expr><call><name><name>Long</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>PK_STRING</name> <init>= <expr><call><name><name>String</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>VERSION_TAG</name> <init>= <expr><literal type="string">"test version"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>VERSION</name> <init>= <expr><literal type="string">"1"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>TYPE</name> <init>= <expr><literal type="string">"AmbariConfiguration"</literal></expr></init></decl>;</decl_stmt>
  <function><type><specifier>private</specifier> <name>void</name></type> <name>testCreateResources</name><parameter_list>(<parameter><decl><type><name>Authentication</name></type> <name>authentication</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>Injector</name></type> <name>injector</name> <init>= <expr><call><name>createInjector</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
  <decl_stmt><decl><annotation>@<name>TestSubject</name></annotation>
  <type><specifier>private</specifier> <name>AmbariConfigurationResourceProvider</name></type> <name>ambariConfigurationResourceProvider</name> <init>= <expr><operator>new</operator> <call><name>AmbariConfigurationResourceProvider</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>ResourceProvider</name></type> <name>resourceProvider</name> <init>= <expr><call><name><name>injector</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name><name>AmbariConfigurationResourceProvider</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
  <function><annotation>@<name>Before</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>setup</name><parameter_list>()</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name>ambariConfigurationEntityCapture</name> <operator>=</operator> <call><name><name>Capture</name><operator>.</operator><name>newInstance</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>gson</name> <operator>=</operator> <operator>new</operator> <call><name>GsonBuilder</name><argument_list>()</argument_list></call><operator>.</operator><call><name>create</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>
    <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>propertySets</name> <init>= <expr><operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
  <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testCreateAmbariConfigurationRequestResultsInTheProperPersistenceCall</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>

    <comment type="line">// GIVEN</comment>
    <comment type="line">// configuration properties parsed from the request</comment>
    <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>resourcePropertiesSet</name> <init>= <expr><call><name><name>Sets</name><operator>.</operator><name>newHashSet</name></name><argument_list>(
      <argument><expr><operator>new</operator> <call><name>PropertiesMapBuilder</name><argument_list>()</argument_list></call>
        <operator>.</operator><call><name>withId</name><argument_list>(<argument><expr><name>PK_LONG</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>withVersion</name><argument_list>(<argument><expr><name>VERSION</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>withVersionTag</name><argument_list>(<argument><expr><name>VERSION_TAG</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>withData</name><argument_list>(<argument><expr><name>DATA_MOCK_STR</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>withType</name><argument_list>(<argument><expr><name>TYPE</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <comment type="line">// mock the request to return the properties</comment>
    <expr_stmt><expr><call><name><name>EasyMock</name><operator>.</operator><name>expect</name></name><argument_list>(<argument><expr><call><name><name>requestMock</name><operator>.</operator><name>getProperties</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>resourcePropertiesSet</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line">// capture the entity the DAO gets called with</comment>
    <expr_stmt><expr><call><name><name>ambariConfigurationDAO</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><call><name><name>EasyMock</name><operator>.</operator><name>capture</name></name><argument_list>(<argument><expr><name>ambariConfigurationEntityCapture</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>publisher</name><operator>.</operator><name>publish</name></name><argument_list>(<argument><expr><call><name><name>EasyMock</name><operator>.</operator><name>anyObject</name></name><argument_list>(<argument><expr><name><name>AmbariLdapConfigChangedEvent</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>properties1</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>properties1</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"property1a"</literal></expr></argument>, <argument><expr><literal type="string">"value1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>properties1</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"property2a"</literal></expr></argument>, <argument><expr><literal type="string">"value2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>propertySets</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name>toRequestProperties</name><argument_list>(<argument><expr><name>CATEGORY_NAME_1</name></expr></argument>, <argument><expr><name>properties1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>properties2</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>properties2</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"property1b"</literal></expr></argument>, <argument><expr><literal type="string">"value1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>properties2</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"property2b"</literal></expr></argument>, <argument><expr><literal type="string">"value2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>propertySets</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name>toRequestProperties</name><argument_list>(<argument><expr><name>CATEGORY_NAME_2</name></expr></argument>, <argument><expr><name>properties2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>Request</name></type> <name>request</name> <init>= <expr><call><name>createMock</name><argument_list>(<argument><expr><name><name>Request</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>request</name><operator>.</operator><name>getProperties</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>propertySets</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>once</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name><name>Capture</name><argument_list type="generic">&lt;<argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>capturedProperties1</name> <init>= <expr><call><name>newCapture</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>Capture</name><argument_list type="generic">&lt;<argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>capturedProperties2</name> <init>= <expr><call><name>newCapture</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>AmbariConfigurationDAO</name></type> <name>dao</name> <init>= <expr><call><name><name>injector</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name><name>AmbariConfigurationDAO</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>dao</name><operator>.</operator><name>reconcileCategory</name></name><argument_list>(<argument><expr><call><name>eq</name><argument_list>(<argument><expr><name>CATEGORY_NAME_1</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>capture</name><argument_list>(<argument><expr><name>capturedProperties1</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>eq</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>once</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>dao</name><operator>.</operator><name>reconcileCategory</name></name><argument_list>(<argument><expr><call><name>eq</name><argument_list>(<argument><expr><name>CATEGORY_NAME_2</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>capture</name><argument_list>(<argument><expr><name>capturedProperties2</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>eq</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>once</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>AmbariEventPublisher</name></type> <name>publisher</name> <init>= <expr><call><name><name>injector</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name><name>AmbariEventPublisher</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>publisher</name><operator>.</operator><name>publish</name></name><argument_list>(<argument><expr><call><name>anyObject</name><argument_list>(<argument><expr><name><name>AmbariConfigurationChangedEvent</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>expectLastCall</name><argument_list>()</argument_list></call><operator>.</operator><call><name>times</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <expr_stmt><expr><call><name>replayAll</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
    <comment type="line">// WHEN</comment>
    <expr_stmt><expr><call><name><name>ambariConfigurationResourceProvider</name><operator>.</operator><name>createResourcesAuthorized</name></name><argument_list>(<argument><expr><name>requestMock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>SecurityContextHolder</name><operator>.</operator><name>getContext</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>setAuthentication</name><argument_list>(<argument><expr><name>authentication</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
    <comment type="line">// THEN</comment>
    <decl_stmt><decl><type><name>AmbariConfigurationEntity</name></type> <name>capturedAmbariConfigurationEntity</name> <init>= <expr><call><name><name>ambariConfigurationEntityCapture</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertNotNull</name></name><argument_list>(<argument><expr><name>capturedAmbariConfigurationEntity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertNull</name></name><argument_list>(<argument><expr><literal type="string">"The entity identifier should be null"</literal></expr></argument>, <argument><expr><call><name><name>capturedAmbariConfigurationEntity</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="string">"The entity version is not the expected"</literal></expr></argument>, <argument><expr><call><name><name>Integer</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><name>VERSION</name></expr></argument>)</argument_list></call></expr></argument>,
      <argument><expr><call><name><name>capturedAmbariConfigurationEntity</name><operator>.</operator><name>getConfigurationBaseEntity</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getVersion</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="string">"The entity version tag is not the expected"</literal></expr></argument>, <argument><expr><name>VERSION_TAG</name></expr></argument>,
      <argument><expr><call><name><name>capturedAmbariConfigurationEntity</name><operator>.</operator><name>getConfigurationBaseEntity</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getVersionTag</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="string">"The entity data is not the expected"</literal></expr></argument>, <argument><expr><name>DATA_MOCK_STR</name></expr></argument>,
      <argument><expr><call><name><name>gson</name><operator>.</operator><name>fromJson</name></name><argument_list>(<argument><expr><call><name><name>capturedAmbariConfigurationEntity</name><operator>.</operator><name>getConfigurationBaseEntity</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getConfigurationData</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>String</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>resourceProvider</name><operator>.</operator><name>createResources</name></name><argument_list>(<argument><expr><name>request</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>verifyAll</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>validateCapturedProperties</name><argument_list>(<argument><expr><name>properties1</name></expr></argument>, <argument><expr><name>capturedProperties1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>validateCapturedProperties</name><argument_list>(<argument><expr><name>properties2</name></expr></argument>, <argument><expr><name>capturedProperties2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
 
   <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testRemoveAmbariConfigurationRequestResultsInTheProperPersistenceCall</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <comment type="line">// GIVEN</comment>
    <decl_stmt><decl><type><name>Predicate</name></type> <name>predicate</name> <init>= <expr><operator>new</operator> <call><name>PredicateBuilder</name><argument_list>()</argument_list></call><operator>.</operator><call><name>property</name><argument_list>(
      <argument><expr><call><name><name>AmbariConfigurationResourceProvider</name><operator>.</operator><name>ResourcePropertyId</name><operator>.</operator><name>ID</name><operator>.</operator><name>getPropertyId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><literal type="string">"1"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toPredicate</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
  <function><type><specifier>public</specifier> <name>void</name></type> <name>testDeleteResources_Administrator</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name>testDeleteResources</name><argument_list>(<argument><expr><call><name><name>TestAuthenticationFactory</name><operator>.</operator><name>createAdministrator</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>
 
    <decl_stmt><decl><type><name><name>Capture</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>&gt;</argument_list></name></type> <name>pkCapture</name> <init>= <expr><call><name><name>Capture</name><operator>.</operator><name>newInstance</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>ambariConfigurationDAO</name><operator>.</operator><name>removeByPK</name></name><argument_list>(<argument><expr><call><name><name>EasyMock</name><operator>.</operator><name>capture</name></name><argument_list>(<argument><expr><name>pkCapture</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>publisher</name><operator>.</operator><name>publish</name></name><argument_list>(<argument><expr><call><name><name>EasyMock</name><operator>.</operator><name>anyObject</name></name><argument_list>(<argument><expr><name><name>AmbariLdapConfigChangedEvent</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <function><annotation>@<name>Test</name><argument_list>(<argument><expr><name>expected</name> <operator>=</operator> <name><name>AuthorizationException</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testDeleteResources_ClusterAdministrator</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name>testDeleteResources</name><argument_list>(<argument><expr><call><name><name>TestAuthenticationFactory</name><operator>.</operator><name>createClusterAdministrator</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>
 
    <expr_stmt><expr><call><name>replayAll</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  <function><annotation>@<name>Test</name><argument_list>(<argument><expr><name>expected</name> <operator>=</operator> <name><name>AuthorizationException</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testDeleteResources_ClusterOperator</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name>testDeleteResources</name><argument_list>(<argument><expr><call><name><name>TestAuthenticationFactory</name><operator>.</operator><name>createClusterOperator</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>
 
    <comment type="line">// WHEN</comment>
    <expr_stmt><expr><call><name><name>ambariConfigurationResourceProvider</name><operator>.</operator><name>deleteResourcesAuthorized</name></name><argument_list>(<argument><expr><name>requestMock</name></expr></argument>, <argument><expr><name>predicate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <function><annotation>@<name>Test</name><argument_list>(<argument><expr><name>expected</name> <operator>=</operator> <name><name>AuthorizationException</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testDeleteResources_ServiceAdministrator</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name>testDeleteResources</name><argument_list>(<argument><expr><call><name><name>TestAuthenticationFactory</name><operator>.</operator><name>createServiceAdministrator</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>
 
    <comment type="line">// THEN</comment>
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="string">"The pk of the entity to be removed doen't match the expected id"</literal></expr></argument>, <argument><expr><call><name><name>Long</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>pkCapture</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <function><annotation>@<name>Test</name><argument_list>(<argument><expr><name>expected</name> <operator>=</operator> <name><name>AuthorizationException</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testDeleteResources_ServiceOperator</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name>testDeleteResources</name><argument_list>(<argument><expr><call><name><name>TestAuthenticationFactory</name><operator>.</operator><name>createServiceOperator</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
 
  <function><type><specifier>private</specifier> <name>void</name></type> <name>testDeleteResources</name><parameter_list>(<parameter><decl><type><name>Authentication</name></type> <name>authentication</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>Injector</name></type> <name>injector</name> <init>= <expr><call><name>createInjector</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
  <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testRetrieveAmbariConfigurationShouldResultsInTheProperDAOCall</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <comment type="line">// GIVEN</comment>
    <decl_stmt><decl><type><name>Predicate</name></type> <name>predicate</name> <init>= <expr><operator>new</operator> <call><name>PredicateBuilder</name><argument_list>()</argument_list></call><operator>.</operator><call><name>property</name><argument_list>(
      <argument><expr><call><name><name>AmbariConfigurationResourceProvider</name><operator>.</operator><name>ResourcePropertyId</name><operator>.</operator><name>ID</name><operator>.</operator><name>getPropertyId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><literal type="string">"1"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toPredicate</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>ResourceProvider</name></type> <name>resourceProvider</name> <init>= <expr><call><name><name>injector</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name><name>AmbariConfigurationResourceProvider</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>Predicate</name></type> <name>predicate</name> <init>= <expr><operator>new</operator> <call><name>PredicateBuilder</name><argument_list>()</argument_list></call>
        <operator>.</operator><call><name>property</name><argument_list>(<argument><expr><name>AMBARI_CONFIGURATION_CATEGORY_PROPERTY_ID</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>CATEGORY_NAME_1</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>toPredicate</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>Request</name></type> <name>request</name> <init>= <expr><call><name>createMock</name><argument_list>(<argument><expr><name><name>Request</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>AmbariConfigurationDAO</name></type> <name>dao</name> <init>= <expr><call><name><name>injector</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name><name>AmbariConfigurationDAO</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>dao</name><operator>.</operator><name>removeByCategory</name></name><argument_list>(<argument><expr><name>CATEGORY_NAME_1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>once</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>AmbariEventPublisher</name></type> <name>publisher</name> <init>= <expr><call><name><name>injector</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name><name>AmbariEventPublisher</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>publisher</name><operator>.</operator><name>publish</name></name><argument_list>(<argument><expr><call><name>anyObject</name><argument_list>(<argument><expr><name><name>AmbariConfigurationChangedEvent</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>expectLastCall</name><argument_list>()</argument_list></call><operator>.</operator><call><name>once</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
    <expr_stmt><expr><call><name><name>EasyMock</name><operator>.</operator><name>expect</name></name><argument_list>(<argument><expr><call><name><name>ambariConfigurationDAO</name><operator>.</operator><name>findAll</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><call><name><name>Lists</name><operator>.</operator><name>newArrayList</name></name><argument_list>(<argument><expr><call><name>createDummyAmbariConfigurationEntity</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>replayAll</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
    <comment type="line">// WHEN</comment>
    <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>Resource</name></argument>&gt;</argument_list></name></type> <name>resourceSet</name> <init>= <expr><call><name><name>ambariConfigurationResourceProvider</name><operator>.</operator><name>getResourcesAuthorized</name></name><argument_list>(<argument><expr><name>requestMock</name></expr></argument>, <argument><expr><name>predicate</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>SecurityContextHolder</name><operator>.</operator><name>getContext</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>setAuthentication</name><argument_list>(<argument><expr><name>authentication</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>resourceProvider</name><operator>.</operator><name>deleteResources</name></name><argument_list>(<argument><expr><name>request</name></expr></argument>, <argument><expr><name>predicate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
    <comment type="line">// THEN</comment>
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertNotNull</name></name><argument_list>(<argument><expr><name>resourceSet</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertFalse</name></name><argument_list>(<argument><expr><call><name><name>resourceSet</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>verifyAll</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
 
   <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testUpdateAmbariConfigurationShouldResultInTheProperDAOCalls</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <comment type="line">// GIVEN</comment>
  <function><type><specifier>public</specifier> <name>void</name></type> <name>testGetResources_Administrator</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name>testGetResources</name><argument_list>(<argument><expr><call><name><name>TestAuthenticationFactory</name><operator>.</operator><name>createAdministrator</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Test</name><argument_list>(<argument><expr><name>expected</name> <operator>=</operator> <name><name>AuthorizationException</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testGetResources_ClusterAdministrator</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name>testGetResources</name><argument_list>(<argument><expr><call><name><name>TestAuthenticationFactory</name><operator>.</operator><name>createClusterAdministrator</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Test</name><argument_list>(<argument><expr><name>expected</name> <operator>=</operator> <name><name>AuthorizationException</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testGetResources_ClusterOperator</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name>testGetResources</name><argument_list>(<argument><expr><call><name><name>TestAuthenticationFactory</name><operator>.</operator><name>createClusterOperator</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Test</name><argument_list>(<argument><expr><name>expected</name> <operator>=</operator> <name><name>AuthorizationException</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testGetResources_ServiceAdministrator</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name>testGetResources</name><argument_list>(<argument><expr><call><name><name>TestAuthenticationFactory</name><operator>.</operator><name>createServiceAdministrator</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Test</name><argument_list>(<argument><expr><name>expected</name> <operator>=</operator> <name><name>AuthorizationException</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testGetResources_ServiceOperator</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name>testGetResources</name><argument_list>(<argument><expr><call><name><name>TestAuthenticationFactory</name><operator>.</operator><name>createServiceOperator</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><type><specifier>private</specifier> <name>void</name></type> <name>testGetResources</name><parameter_list>(<parameter><decl><type><name>Authentication</name></type> <name>authentication</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>Injector</name></type> <name>injector</name> <init>= <expr><call><name>createInjector</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>ResourceProvider</name></type> <name>resourceProvider</name> <init>= <expr><call><name><name>injector</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name><name>AmbariConfigurationResourceProvider</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
    <decl_stmt><decl><type><name>Predicate</name></type> <name>predicate</name> <init>= <expr><operator>new</operator> <call><name>PredicateBuilder</name><argument_list>()</argument_list></call><operator>.</operator><call><name>property</name><argument_list>(
      <argument><expr><call><name><name>AmbariConfigurationResourceProvider</name><operator>.</operator><name>ResourcePropertyId</name><operator>.</operator><name>ID</name><operator>.</operator><name>getPropertyId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><literal type="string">"1"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toPredicate</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Predicate</name></type> <name>predicate</name> <init>= <expr><operator>new</operator> <call><name>PredicateBuilder</name><argument_list>()</argument_list></call>
        <operator>.</operator><call><name>property</name><argument_list>(<argument><expr><name>AMBARI_CONFIGURATION_CATEGORY_PROPERTY_ID</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>CATEGORY_NAME_1</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>toPredicate</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
    <comment type="line">// properteies in the request, representing the updated configuration</comment>
    <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>resourcePropertiesSet</name> <init>= <expr><call><name><name>Sets</name><operator>.</operator><name>newHashSet</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>PropertiesMapBuilder</name><argument_list>()</argument_list></call>
      <operator>.</operator><call><name>withId</name><argument_list>(<argument><expr><name>PK_LONG</name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>withVersion</name><argument_list>(<argument><expr><literal type="string">"2"</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>withVersionTag</name><argument_list>(<argument><expr><literal type="string">"version-2"</literal></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>withData</name><argument_list>(<argument><expr><name>DATA_MOCK_STR</name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>withType</name><argument_list>(<argument><expr><name>TYPE</name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Request</name></type> <name>request</name> <init>= <expr><call><name>createMock</name><argument_list>(<argument><expr><name><name>Request</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>request</name><operator>.</operator><name>getPropertyIds</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>anyTimes</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
    <expr_stmt><expr><call><name><name>EasyMock</name><operator>.</operator><name>expect</name></name><argument_list>(<argument><expr><call><name><name>requestMock</name><operator>.</operator><name>getProperties</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>resourcePropertiesSet</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>properties</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>properties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"property1a"</literal></expr></argument>, <argument><expr><literal type="string">"value1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>properties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"property2a"</literal></expr></argument>, <argument><expr><literal type="string">"value2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
    <decl_stmt><decl><type><name>AmbariConfigurationEntity</name></type> <name>persistedEntity</name> <init>= <expr><call><name>createDummyAmbariConfigurationEntity</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>EasyMock</name><operator>.</operator><name>expect</name></name><argument_list>(<argument><expr><call><name><name>ambariConfigurationDAO</name><operator>.</operator><name>findByPK</name></name><argument_list>(<argument><expr><name>PK_LONG</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>persistedEntity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ambariConfigurationDAO</name><operator>.</operator><name>update</name></name><argument_list>(<argument><expr><call><name><name>EasyMock</name><operator>.</operator><name>capture</name></name><argument_list>(<argument><expr><name>ambariConfigurationEntityCapture</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>publisher</name><operator>.</operator><name>publish</name></name><argument_list>(<argument><expr><call><name><name>EasyMock</name><operator>.</operator><name>anyObject</name></name><argument_list>(<argument><expr><name><name>AmbariLdapConfigChangedEvent</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>AmbariConfigurationDAO</name></type> <name>dao</name> <init>= <expr><call><name><name>injector</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name><name>AmbariConfigurationDAO</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>dao</name><operator>.</operator><name>findByCategory</name></name><argument_list>(<argument><expr><name>CATEGORY_NAME_1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><call><name>createEntities</name><argument_list>(<argument><expr><name>CATEGORY_NAME_1</name></expr></argument>, <argument><expr><name>properties</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>once</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
     <expr_stmt><expr><call><name>replayAll</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
    <comment type="line">// WHEN</comment>
    <expr_stmt><expr><call><name><name>ambariConfigurationResourceProvider</name><operator>.</operator><name>updateResourcesAuthorized</name></name><argument_list>(<argument><expr><name>requestMock</name></expr></argument>, <argument><expr><name>predicate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>SecurityContextHolder</name><operator>.</operator><name>getContext</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>setAuthentication</name><argument_list>(<argument><expr><name>authentication</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
    <comment type="line">// the captured entity should be the updated one</comment>
    <decl_stmt><decl><type><name>AmbariConfigurationEntity</name></type> <name>updatedEntity</name> <init>= <expr><call><name><name>ambariConfigurationEntityCapture</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>Resource</name></argument>&gt;</argument_list></name></type> <name>response</name> <init>= <expr><call><name><name>resourceProvider</name><operator>.</operator><name>getResources</name></name><argument_list>(<argument><expr><name>request</name></expr></argument>, <argument><expr><name>predicate</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
    <comment type="line">// THEN</comment>
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertNotNull</name></name><argument_list>(<argument><expr><name>updatedEntity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="string">"The updated version is wrong"</literal></expr></argument>, <argument><expr><call><name><name>Integer</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>updatedEntity</name><operator>.</operator><name>getConfigurationBaseEntity</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getVersion</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>
    <expr_stmt><expr><call><name>verifyAll</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
  <class><specifier>private</specifier> class <name>PropertiesMapBuilder</name> <block>{
    <constructor_decl><name><name>junit</name><operator>.</operator><name>framework</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertNotNull</name></name><parameter_list>(<parameter><decl><type><name>response</name></type></decl></parameter>)</parameter_list>;</constructor_decl>
    <expr_stmt><expr><call><name><name>junit</name><operator>.</operator><name>framework</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><call><name><name>response</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
    <decl_stmt><decl><type><specifier>private</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>resourcePropertiesMap</name> <init>= <expr><call><name><name>Maps</name><operator>.</operator><name>newHashMap</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Resource</name></type> <name>resource</name> <init>= <expr><call><name><name>response</name><operator>.</operator><name>iterator</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>next</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>junit</name><operator>.</operator><name>framework</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>AmbariConfiguration</name></name></expr></argument>, <argument><expr><call><name><name>resource</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
    <constructor><specifier>private</specifier> <name>PropertiesMapBuilder</name><parameter_list>()</parameter_list> <block>{<block_content>
    </block_content>}</block></constructor>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>propertiesMap</name> <init>= <expr><call><name><name>resource</name><operator>.</operator><name>getPropertiesMap</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>junit</name><operator>.</operator><name>framework</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><call><name><name>propertiesMap</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
    <function><type><specifier>public</specifier> <name>PropertiesMapBuilder</name></type> <name>withId</name><parameter_list>(<parameter><decl><type><name>Long</name></type> <name>id</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name><name>resourcePropertiesMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>AmbariConfigurationResourceProvider</name><operator>.</operator><name>ResourcePropertyId</name><operator>.</operator><name>ID</name><operator>.</operator><name>getPropertyId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <return>return <expr><name>this</name></expr>;</return>
    </block_content>}</block></function>
    <expr_stmt><expr><call><name><name>junit</name><operator>.</operator><name>framework</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><name>CATEGORY_NAME_1</name></expr></argument>, <argument><expr><call><name><name>propertiesMap</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>AmbariConfiguration</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"category"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
    <function><type><specifier>private</specifier> <name>PropertiesMapBuilder</name></type> <name>withVersion</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>version</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name><name>resourcePropertiesMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>AmbariConfigurationResourceProvider</name><operator>.</operator><name>ResourcePropertyId</name><operator>.</operator><name>VERSION</name><operator>.</operator><name>getPropertyId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>version</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <return>return <expr><name>this</name></expr>;</return>
    </block_content>}</block></function>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>retrievedProperties</name> <init>= <expr><call><name><name>propertiesMap</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>AmbariConfiguration</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"/properties"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>junit</name><operator>.</operator><name>framework</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><call><name><name>retrievedProperties</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
    <function><type><specifier>private</specifier> <name>PropertiesMapBuilder</name></type> <name>withVersionTag</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>versionTag</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name><name>resourcePropertiesMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>AmbariConfigurationResourceProvider</name><operator>.</operator><name>ResourcePropertyId</name><operator>.</operator><name>VERSION_TAG</name><operator>.</operator><name>getPropertyId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>versionTag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <return>return <expr><name>this</name></expr>;</return>
    <for>for <control>(<init><decl><type><name><name>Map</name><operator>.</operator><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></name></type> <name>entry</name> <range>: <expr><call><name><name>properties</name><operator>.</operator><name>entrySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
      <expr_stmt><expr><call><name><name>junit</name><operator>.</operator><name>framework</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>retrievedProperties</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>entry</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></for>
  </block_content>}</block></function>
 
    <function><type><specifier>private</specifier> <name>PropertiesMapBuilder</name></type> <name>withData</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>dataJson</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name><name>resourcePropertiesMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>AmbariConfigurationResourceProvider</name><operator>.</operator><name>ResourcePropertyId</name><operator>.</operator><name>DATA</name><operator>.</operator><name>getPropertyId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>dataJson</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <return>return <expr><name>this</name></expr>;</return>
    </block_content>}</block></function>
  <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testUpdateResources_Administrator</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name>testUpdateResources</name><argument_list>(<argument><expr><call><name><name>TestAuthenticationFactory</name><operator>.</operator><name>createAdministrator</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>
 
    <function><type><specifier>private</specifier> <name>PropertiesMapBuilder</name></type> <name>withType</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>type</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name><name>resourcePropertiesMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>AmbariConfigurationResourceProvider</name><operator>.</operator><name>ResourcePropertyId</name><operator>.</operator><name>TYPE</name><operator>.</operator><name>getPropertyId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <return>return <expr><name>this</name></expr>;</return>
    </block_content>}</block></function>
  <function><annotation>@<name>Test</name><argument_list>(<argument><expr><name>expected</name> <operator>=</operator> <name><name>AuthorizationException</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testUpdateResources_ClusterAdministrator</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name>testUpdateResources</name><argument_list>(<argument><expr><call><name><name>TestAuthenticationFactory</name><operator>.</operator><name>createClusterAdministrator</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>
 
  <function><annotation>@<name>Test</name><argument_list>(<argument><expr><name>expected</name> <operator>=</operator> <name><name>AuthorizationException</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testUpdateResources_ClusterOperator</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name>testUpdateResources</name><argument_list>(<argument><expr><call><name><name>TestAuthenticationFactory</name><operator>.</operator><name>createClusterOperator</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>
 
    <function><type><specifier>public</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>build</name><parameter_list>()</parameter_list> <block>{<block_content>
      <return>return <expr><name><name>this</name><operator>.</operator><name>resourcePropertiesMap</name></name></expr>;</return>
    </block_content>}</block></function>
  <function><annotation>@<name>Test</name><argument_list>(<argument><expr><name>expected</name> <operator>=</operator> <name><name>AuthorizationException</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testUpdateResources_ServiceAdministrator</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name>testUpdateResources</name><argument_list>(<argument><expr><call><name><name>TestAuthenticationFactory</name><operator>.</operator><name>createServiceAdministrator</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Test</name><argument_list>(<argument><expr><name>expected</name> <operator>=</operator> <name><name>AuthorizationException</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testUpdateResources_ServiceOperator</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name>testUpdateResources</name><argument_list>(<argument><expr><call><name><name>TestAuthenticationFactory</name><operator>.</operator><name>createServiceOperator</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><type><specifier>private</specifier> <name>void</name></type> <name>testUpdateResources</name><parameter_list>(<parameter><decl><type><name>Authentication</name></type> <name>authentication</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>Injector</name></type> <name>injector</name> <init>= <expr><call><name>createInjector</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>ResourceProvider</name></type> <name>resourceProvider</name> <init>= <expr><call><name><name>injector</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name><name>AmbariConfigurationResourceProvider</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>Predicate</name></type> <name>predicate</name> <init>= <expr><operator>new</operator> <call><name>PredicateBuilder</name><argument_list>()</argument_list></call>
        <operator>.</operator><call><name>property</name><argument_list>(<argument><expr><name>AMBARI_CONFIGURATION_CATEGORY_PROPERTY_ID</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>CATEGORY_NAME_1</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>toPredicate</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>propertySets</name> <init>= <expr><operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>properties1</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>properties1</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"property1a"</literal></expr></argument>, <argument><expr><literal type="string">"value1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>properties1</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"property2a"</literal></expr></argument>, <argument><expr><literal type="string">"value2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>propertySets</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name>toRequestProperties</name><argument_list>(<argument><expr><name>CATEGORY_NAME_1</name></expr></argument>, <argument><expr><name>properties1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>Request</name></type> <name>request</name> <init>= <expr><call><name>createMock</name><argument_list>(<argument><expr><name><name>Request</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>request</name><operator>.</operator><name>getProperties</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>propertySets</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>once</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name><name>Capture</name><argument_list type="generic">&lt;<argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>capturedProperties1</name> <init>= <expr><call><name>newCapture</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>AmbariConfigurationDAO</name></type> <name>dao</name> <init>= <expr><call><name><name>injector</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name><name>AmbariConfigurationDAO</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>dao</name><operator>.</operator><name>reconcileCategory</name></name><argument_list>(<argument><expr><call><name>eq</name><argument_list>(<argument><expr><name>CATEGORY_NAME_1</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>capture</name><argument_list>(<argument><expr><name>capturedProperties1</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>eq</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>once</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>AmbariEventPublisher</name></type> <name>publisher</name> <init>= <expr><call><name><name>injector</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name><name>AmbariEventPublisher</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>publisher</name><operator>.</operator><name>publish</name></name><argument_list>(<argument><expr><call><name>anyObject</name><argument_list>(<argument><expr><name><name>AmbariConfigurationChangedEvent</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>expectLastCall</name><argument_list>()</argument_list></call><operator>.</operator><call><name>times</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>replayAll</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>SecurityContextHolder</name><operator>.</operator><name>getContext</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>setAuthentication</name><argument_list>(<argument><expr><name>authentication</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>resourceProvider</name><operator>.</operator><name>updateResources</name></name><argument_list>(<argument><expr><name>request</name></expr></argument>, <argument><expr><name>predicate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>verifyAll</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>validateCapturedProperties</name><argument_list>(<argument><expr><name>properties1</name></expr></argument>, <argument><expr><name>capturedProperties1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
 
  <function><type><specifier>private</specifier> <name>AmbariConfigurationEntity</name></type> <name>createDummyAmbariConfigurationEntity</name><parameter_list>()</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>AmbariConfigurationEntity</name></type> <name>acEntity</name> <init>= <expr><operator>new</operator> <call><name>AmbariConfigurationEntity</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>ConfigurationBaseEntity</name></type> <name>configurationBaseEntity</name> <init>= <expr><operator>new</operator> <call><name>ConfigurationBaseEntity</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>acEntity</name><operator>.</operator><name>setConfigurationBaseEntity</name></name><argument_list>(<argument><expr><name>configurationBaseEntity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>acEntity</name><operator>.</operator><name>setId</name></name><argument_list>(<argument><expr><name>PK_LONG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>acEntity</name><operator>.</operator><name>getConfigurationBaseEntity</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>setConfigurationData</name><argument_list>(<argument><expr><name>DATA_MOCK_STR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>acEntity</name><operator>.</operator><name>getConfigurationBaseEntity</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>setVersion</name><argument_list>(<argument><expr><call><name><name>Integer</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><name>VERSION</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>acEntity</name><operator>.</operator><name>getConfigurationBaseEntity</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>setVersionTag</name><argument_list>(<argument><expr><name>VERSION_TAG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>acEntity</name><operator>.</operator><name>getConfigurationBaseEntity</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>setType</name><argument_list>(<argument><expr><literal type="string">"ldap-config"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <function><type><specifier>private</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>AmbariConfigurationEntity</name></argument>&gt;</argument_list></name></type> <name>createEntities</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>categoryName</name></decl></parameter>, <parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>properties</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>AmbariConfigurationEntity</name></argument>&gt;</argument_list></name></type> <name>entities</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
    <return>return <expr><name>acEntity</name></expr>;</return>
    <for>for <control>(<init><decl><type><name><name>Map</name><operator>.</operator><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></name></type> <name>property</name> <range>: <expr><call><name><name>properties</name><operator>.</operator><name>entrySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
      <decl_stmt><decl><type><name>AmbariConfigurationEntity</name></type> <name>entity</name> <init>= <expr><operator>new</operator> <call><name>AmbariConfigurationEntity</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>entity</name><operator>.</operator><name>setCategoryName</name></name><argument_list>(<argument><expr><name>categoryName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>entity</name><operator>.</operator><name>setPropertyName</name></name><argument_list>(<argument><expr><call><name><name>property</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>entity</name><operator>.</operator><name>setPropertyValue</name></name><argument_list>(<argument><expr><call><name><name>property</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>entities</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>entity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>

    <return>return <expr><name>entities</name></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>private</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>toRequestProperties</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>categoryName1</name></decl></parameter>, <parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>properties</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>requestProperties</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>requestProperties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>AMBARI_CONFIGURATION_CATEGORY_PROPERTY_ID</name></expr></argument>, <argument><expr><name>categoryName1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for>for <control>(<init><decl><type><name><name>Map</name><operator>.</operator><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></name></type> <name>entry</name> <range>: <expr><call><name><name>properties</name><operator>.</operator><name>entrySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
      <expr_stmt><expr><call><name><name>requestProperties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>AMBARI_CONFIGURATION_PROPERTIES_PROPERTY_ID</name> <operator>+</operator> <literal type="string">"/"</literal> <operator>+</operator> <call><name><name>entry</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <return>return <expr><name>requestProperties</name></expr>;</return>
   </block_content>}</block></function>
 
  <function><type><specifier>private</specifier> <name>void</name></type> <name>validateCapturedProperties</name><parameter_list>(<parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>expectedProperties</name></decl></parameter>, <parameter><decl><type><name><name>Capture</name><argument_list type="generic">&lt;<argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>capturedProperties</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name><name>junit</name><operator>.</operator><name>framework</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertTrue</name></name><argument_list>(<argument><expr><call><name><name>capturedProperties</name><operator>.</operator><name>hasCaptured</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>properties</name> <init>= <expr><call><name><name>capturedProperties</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>junit</name><operator>.</operator><name>framework</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertNotNull</name></name><argument_list>(<argument><expr><name>properties</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line">// Convert the Map to a TreeMap to help with comparisons</comment>
    <expr_stmt><expr><name>expectedProperties</name> <operator>=</operator> <operator>new</operator> <call><name><name>TreeMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>(<argument><expr><name>expectedProperties</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>properties</name> <operator>=</operator> <operator>new</operator> <call><name><name>TreeMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>(<argument><expr><name>properties</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>junit</name><operator>.</operator><name>framework</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><name>expectedProperties</name></expr></argument>, <argument><expr><name>properties</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><type><specifier>private</specifier> <name>Injector</name></type> <name>createInjector</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <return>return <expr><call><name><name>Guice</name><operator>.</operator><name>createInjector</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>AbstractModule</name></super><argument_list>()</argument_list> <block>{
      <function><annotation>@<name>Override</name></annotation>
      <type><specifier>protected</specifier> <name>void</name></type> <name>configure</name><parameter_list>()</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name>bind</name><argument_list>(<argument><expr><name><name>EntityManager</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><call><name>createNiceMock</name><argument_list>(<argument><expr><name><name>EntityManager</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>bind</name><argument_list>(<argument><expr><name><name>AmbariConfigurationDAO</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><call><name>createMock</name><argument_list>(<argument><expr><name><name>AmbariConfigurationDAO</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>bind</name><argument_list>(<argument><expr><name><name>AmbariEventPublisher</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><call><name>createMock</name><argument_list>(<argument><expr><name><name>AmbariEventPublisher</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></function>
    }</block></class></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>
 </block_content>}</block></function>
<expr_stmt><expr><operator>\</operator> <name>No</name> <name>newline</name> <name>at</name> <name>end</name> <name>of</name> <name>file</name>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>dao</name><operator>/</operator><name><name>AmbariConfigurationDAOTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>dao</name><operator>/</operator><name><name>AmbariConfigurationDAOTest</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">0000000000..f801fd61ee</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>dao</name><operator>/</operator><name><name>AmbariConfigurationDAOTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">298</literal> @@</expr></expr_stmt>
<comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>dao</name></name>;</package>

<import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>capture</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>expect</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>expectLastCall</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>newCapture</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>reflect</name><operator>.</operator><name>Field</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>reflect</name><operator>.</operator><name>Method</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>TreeMap</name></name>;</import>

<import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>EntityManager</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>AmbariConfigurationEntity</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>Capture</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>CaptureType</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMockSupport</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>BeforeClass</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>Provider</name></name>;</import>

<import>import <name><name>junit</name><operator>.</operator><name>framework</name><operator>.</operator><name>Assert</name></name>;</import>

<class><specifier>public</specifier> class <name>AmbariConfigurationDAOTest</name> <super_list><extends>extends <super><name>EasyMockSupport</name></super></extends></super_list> <block>{

  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>CATEGORY_NAME</name> <init>= <expr><literal type="string">"test-category"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>Method</name></type> <name>methodMerge</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>Method</name></type> <name>methodRemove</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>Method</name></type> <name>methodCreate</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>Method</name></type> <name>methodFindByCategory</name></decl>;</decl_stmt>

  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>Field</name></type> <name>fieldEntityManagerProvider</name></decl>;</decl_stmt>

  <function><annotation>@<name>BeforeClass</name></annotation>
  <type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>beforeKDCKerberosOperationHandlerTest</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><name>methodMerge</name> <operator>=</operator> <call><name><name>AmbariConfigurationDAO</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getMethod</name></name></name><argument_list>(<argument><expr><literal type="string">"merge"</literal></expr></argument>, <argument><expr><name><name>AmbariConfigurationEntity</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>methodRemove</name> <operator>=</operator> <call><name><name>CrudDAO</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getMethod</name></name></name><argument_list>(<argument><expr><literal type="string">"remove"</literal></expr></argument>, <argument><expr><name><name>Object</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>methodCreate</name> <operator>=</operator> <call><name><name>AmbariConfigurationDAO</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getMethod</name></name></name><argument_list>(<argument><expr><literal type="string">"create"</literal></expr></argument>, <argument><expr><name><name>AmbariConfigurationEntity</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>methodFindByCategory</name> <operator>=</operator> <call><name><name>AmbariConfigurationDAO</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getMethod</name></name></name><argument_list>(<argument><expr><literal type="string">"findByCategory"</literal></expr></argument>, <argument><expr><name><name>String</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name>fieldEntityManagerProvider</name> <operator>=</operator> <call><name><name>CrudDAO</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getDeclaredField</name></name></name><argument_list>(<argument><expr><literal type="string">"entityManagerProvider"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testReconcileCategoryNewCategory</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name><name>Capture</name><argument_list type="generic">&lt;<argument><name>AmbariConfigurationEntity</name></argument>&gt;</argument_list></name></type> <name>capturedEntities</name> <init>= <expr><call><name>newCapture</name><argument_list>(<argument><expr><name><name>CaptureType</name><operator>.</operator><name>ALL</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>AmbariConfigurationDAO</name></type> <name>dao</name> <init>= <expr><call><name>createDao</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>dao</name><operator>.</operator><name>findByCategory</name></name><argument_list>(<argument><expr><name>CATEGORY_NAME</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>once</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>dao</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><call><name>capture</name><argument_list>(<argument><expr><name>capturedEntities</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>expectLastCall</name><argument_list>()</argument_list></call><operator>.</operator><call><name>anyTimes</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>replayAll</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>properties</name></decl>;</decl_stmt>
    <expr_stmt><expr><name>properties</name> <operator>=</operator> <operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>properties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"property1"</literal></expr></argument>, <argument><expr><literal type="string">"value1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>properties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"property2"</literal></expr></argument>, <argument><expr><literal type="string">"value2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>dao</name><operator>.</operator><name>reconcileCategory</name></name><argument_list>(<argument><expr><name>CATEGORY_NAME</name></expr></argument>, <argument><expr><name>properties</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>verifyAll</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>validateCapturedEntities</name><argument_list>(<argument><expr><name>CATEGORY_NAME</name></expr></argument>, <argument><expr><name>properties</name></expr></argument>, <argument><expr><name>capturedEntities</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testReconcileCategoryReplaceCategory</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>

    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>existingProperties</name></decl>;</decl_stmt>
    <expr_stmt><expr><name>existingProperties</name> <operator>=</operator> <operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>existingProperties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"property1"</literal></expr></argument>, <argument><expr><literal type="string">"value1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>existingProperties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"property2"</literal></expr></argument>, <argument><expr><literal type="string">"value2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name><name>Capture</name><argument_list type="generic">&lt;<argument><name>AmbariConfigurationEntity</name></argument>&gt;</argument_list></name></type> <name>capturedCreatedEntities</name> <init>= <expr><call><name>newCapture</name><argument_list>(<argument><expr><name><name>CaptureType</name><operator>.</operator><name>ALL</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>Capture</name><argument_list type="generic">&lt;<argument><name>AmbariConfigurationEntity</name></argument>&gt;</argument_list></name></type> <name>capturedRemovedEntities</name> <init>= <expr><call><name>newCapture</name><argument_list>(<argument><expr><name><name>CaptureType</name><operator>.</operator><name>ALL</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>AmbariConfigurationDAO</name></type> <name>dao</name> <init>= <expr><call><name>createDao</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>dao</name><operator>.</operator><name>findByCategory</name></name><argument_list>(<argument><expr><name>CATEGORY_NAME</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><call><name>toEntities</name><argument_list>(<argument><expr><name>CATEGORY_NAME</name></expr></argument>, <argument><expr><name>existingProperties</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>once</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>dao</name><operator>.</operator><name>remove</name></name><argument_list>(<argument><expr><call><name>capture</name><argument_list>(<argument><expr><name>capturedRemovedEntities</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>expectLastCall</name><argument_list>()</argument_list></call><operator>.</operator><call><name>anyTimes</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>dao</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><call><name>capture</name><argument_list>(<argument><expr><name>capturedCreatedEntities</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>expectLastCall</name><argument_list>()</argument_list></call><operator>.</operator><call><name>anyTimes</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>replayAll</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>newProperties</name></decl>;</decl_stmt>
    <expr_stmt><expr><name>newProperties</name> <operator>=</operator> <operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>newProperties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"property1_new"</literal></expr></argument>, <argument><expr><literal type="string">"value1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>newProperties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"property2_new"</literal></expr></argument>, <argument><expr><literal type="string">"value2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>dao</name><operator>.</operator><name>reconcileCategory</name></name><argument_list>(<argument><expr><name>CATEGORY_NAME</name></expr></argument>, <argument><expr><name>newProperties</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>verifyAll</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>validateCapturedEntities</name><argument_list>(<argument><expr><name>CATEGORY_NAME</name></expr></argument>, <argument><expr><name>newProperties</name></expr></argument>, <argument><expr><name>capturedCreatedEntities</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>validateCapturedEntities</name><argument_list>(<argument><expr><name>CATEGORY_NAME</name></expr></argument>, <argument><expr><name>existingProperties</name></expr></argument>, <argument><expr><name>capturedRemovedEntities</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testReconcileCategoryUpdateCategoryKeepNotSpecified</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>

    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>existingProperties</name></decl>;</decl_stmt>
    <expr_stmt><expr><name>existingProperties</name> <operator>=</operator> <operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>existingProperties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"property1"</literal></expr></argument>, <argument><expr><literal type="string">"value1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>existingProperties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"property2"</literal></expr></argument>, <argument><expr><literal type="string">"value2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name><name>Capture</name><argument_list type="generic">&lt;<argument><name>AmbariConfigurationEntity</name></argument>&gt;</argument_list></name></type> <name>capturedCreatedEntities</name> <init>= <expr><call><name>newCapture</name><argument_list>(<argument><expr><name><name>CaptureType</name><operator>.</operator><name>ALL</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>Capture</name><argument_list type="generic">&lt;<argument><name>AmbariConfigurationEntity</name></argument>&gt;</argument_list></name></type> <name>capturedMergedEntities</name> <init>= <expr><call><name>newCapture</name><argument_list>(<argument><expr><name><name>CaptureType</name><operator>.</operator><name>ALL</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>AmbariConfigurationDAO</name></type> <name>dao</name> <init>= <expr><call><name>createDao</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>dao</name><operator>.</operator><name>findByCategory</name></name><argument_list>(<argument><expr><name>CATEGORY_NAME</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><call><name>toEntities</name><argument_list>(<argument><expr><name>CATEGORY_NAME</name></expr></argument>, <argument><expr><name>existingProperties</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>once</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>dao</name><operator>.</operator><name>merge</name></name><argument_list>(<argument><expr><call><name>capture</name><argument_list>(<argument><expr><name>capturedMergedEntities</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><call><name>createNiceMock</name><argument_list>(<argument><expr><name><name>AmbariConfigurationEntity</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>anyTimes</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>dao</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><call><name>capture</name><argument_list>(<argument><expr><name>capturedCreatedEntities</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>expectLastCall</name><argument_list>()</argument_list></call><operator>.</operator><call><name>anyTimes</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>replayAll</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>newProperties</name></decl>;</decl_stmt>
    <expr_stmt><expr><name>newProperties</name> <operator>=</operator> <operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>newProperties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"property1"</literal></expr></argument>, <argument><expr><literal type="string">"new_value1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>newProperties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"property2_new"</literal></expr></argument>, <argument><expr><literal type="string">"value2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>newProperties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"property3"</literal></expr></argument>, <argument><expr><literal type="string">"value3"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>dao</name><operator>.</operator><name>reconcileCategory</name></name><argument_list>(<argument><expr><name>CATEGORY_NAME</name></expr></argument>, <argument><expr><name>newProperties</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>verifyAll</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>expectedProperties</name></decl>;</decl_stmt>

    <expr_stmt><expr><name>expectedProperties</name> <operator>=</operator> <operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>expectedProperties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"property2_new"</literal></expr></argument>, <argument><expr><literal type="string">"value2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>expectedProperties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"property3"</literal></expr></argument>, <argument><expr><literal type="string">"value3"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>validateCapturedEntities</name><argument_list>(<argument><expr><name>CATEGORY_NAME</name></expr></argument>, <argument><expr><name>expectedProperties</name></expr></argument>, <argument><expr><name>capturedCreatedEntities</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name>expectedProperties</name> <operator>=</operator> <operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>expectedProperties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"property1"</literal></expr></argument>, <argument><expr><literal type="string">"new_value1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>validateCapturedEntities</name><argument_list>(<argument><expr><name>CATEGORY_NAME</name></expr></argument>, <argument><expr><name>expectedProperties</name></expr></argument>, <argument><expr><name>capturedMergedEntities</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testReconcileCategoryUpdateCategoryRemoveNotSpecified</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>

    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>existingProperties</name></decl>;</decl_stmt>
    <expr_stmt><expr><name>existingProperties</name> <operator>=</operator> <operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>existingProperties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"property1"</literal></expr></argument>, <argument><expr><literal type="string">"value1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>existingProperties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"property2"</literal></expr></argument>, <argument><expr><literal type="string">"value2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name><name>Capture</name><argument_list type="generic">&lt;<argument><name>AmbariConfigurationEntity</name></argument>&gt;</argument_list></name></type> <name>capturedCreatedEntities</name> <init>= <expr><call><name>newCapture</name><argument_list>(<argument><expr><name><name>CaptureType</name><operator>.</operator><name>ALL</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>Capture</name><argument_list type="generic">&lt;<argument><name>AmbariConfigurationEntity</name></argument>&gt;</argument_list></name></type> <name>capturedRemovedEntities</name> <init>= <expr><call><name>newCapture</name><argument_list>(<argument><expr><name><name>CaptureType</name><operator>.</operator><name>ALL</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>Capture</name><argument_list type="generic">&lt;<argument><name>AmbariConfigurationEntity</name></argument>&gt;</argument_list></name></type> <name>capturedMergedEntities</name> <init>= <expr><call><name>newCapture</name><argument_list>(<argument><expr><name><name>CaptureType</name><operator>.</operator><name>ALL</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>AmbariConfigurationDAO</name></type> <name>dao</name> <init>= <expr><call><name>createDao</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>dao</name><operator>.</operator><name>findByCategory</name></name><argument_list>(<argument><expr><name>CATEGORY_NAME</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><call><name>toEntities</name><argument_list>(<argument><expr><name>CATEGORY_NAME</name></expr></argument>, <argument><expr><name>existingProperties</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>once</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>dao</name><operator>.</operator><name>merge</name></name><argument_list>(<argument><expr><call><name>capture</name><argument_list>(<argument><expr><name>capturedMergedEntities</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><call><name>createNiceMock</name><argument_list>(<argument><expr><name><name>AmbariConfigurationEntity</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>anyTimes</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>dao</name><operator>.</operator><name>remove</name></name><argument_list>(<argument><expr><call><name>capture</name><argument_list>(<argument><expr><name>capturedRemovedEntities</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>expectLastCall</name><argument_list>()</argument_list></call><operator>.</operator><call><name>anyTimes</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>dao</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><call><name>capture</name><argument_list>(<argument><expr><name>capturedCreatedEntities</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>expectLastCall</name><argument_list>()</argument_list></call><operator>.</operator><call><name>anyTimes</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>replayAll</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>newProperties</name></decl>;</decl_stmt>
    <expr_stmt><expr><name>newProperties</name> <operator>=</operator> <operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>newProperties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"property1"</literal></expr></argument>, <argument><expr><literal type="string">"new_value1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>newProperties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"property2_new"</literal></expr></argument>, <argument><expr><literal type="string">"value2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>newProperties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"property3"</literal></expr></argument>, <argument><expr><literal type="string">"value3"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>dao</name><operator>.</operator><name>reconcileCategory</name></name><argument_list>(<argument><expr><name>CATEGORY_NAME</name></expr></argument>, <argument><expr><name>newProperties</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>verifyAll</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>expectedProperties</name></decl>;</decl_stmt>

    <expr_stmt><expr><name>expectedProperties</name> <operator>=</operator> <operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>expectedProperties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"property2_new"</literal></expr></argument>, <argument><expr><literal type="string">"value2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>expectedProperties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"property3"</literal></expr></argument>, <argument><expr><literal type="string">"value3"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>validateCapturedEntities</name><argument_list>(<argument><expr><name>CATEGORY_NAME</name></expr></argument>, <argument><expr><name>expectedProperties</name></expr></argument>, <argument><expr><name>capturedCreatedEntities</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name>expectedProperties</name> <operator>=</operator> <operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>expectedProperties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"property2"</literal></expr></argument>, <argument><expr><literal type="string">"value2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>validateCapturedEntities</name><argument_list>(<argument><expr><name>CATEGORY_NAME</name></expr></argument>, <argument><expr><name>expectedProperties</name></expr></argument>, <argument><expr><name>capturedRemovedEntities</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name>expectedProperties</name> <operator>=</operator> <operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>expectedProperties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"property1"</literal></expr></argument>, <argument><expr><literal type="string">"new_value1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>validateCapturedEntities</name><argument_list>(<argument><expr><name>CATEGORY_NAME</name></expr></argument>, <argument><expr><name>expectedProperties</name></expr></argument>, <argument><expr><name>capturedMergedEntities</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testReconcileCategoryAppendCategory</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>

    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>existingProperties</name></decl>;</decl_stmt>
    <expr_stmt><expr><name>existingProperties</name> <operator>=</operator> <operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>existingProperties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"property1"</literal></expr></argument>, <argument><expr><literal type="string">"value1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>existingProperties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"property2"</literal></expr></argument>, <argument><expr><literal type="string">"value2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name><name>Capture</name><argument_list type="generic">&lt;<argument><name>AmbariConfigurationEntity</name></argument>&gt;</argument_list></name></type> <name>capturedCreatedEntities</name> <init>= <expr><call><name>newCapture</name><argument_list>(<argument><expr><name><name>CaptureType</name><operator>.</operator><name>ALL</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>AmbariConfigurationDAO</name></type> <name>dao</name> <init>= <expr><call><name>createDao</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>dao</name><operator>.</operator><name>findByCategory</name></name><argument_list>(<argument><expr><name>CATEGORY_NAME</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><call><name>toEntities</name><argument_list>(<argument><expr><name>CATEGORY_NAME</name></expr></argument>, <argument><expr><name>existingProperties</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>once</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>dao</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><call><name>capture</name><argument_list>(<argument><expr><name>capturedCreatedEntities</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>expectLastCall</name><argument_list>()</argument_list></call><operator>.</operator><call><name>anyTimes</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>replayAll</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>newProperties</name></decl>;</decl_stmt>
    <expr_stmt><expr><name>newProperties</name> <operator>=</operator> <operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>newProperties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"property3"</literal></expr></argument>, <argument><expr><literal type="string">"value3"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>newProperties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"property4"</literal></expr></argument>, <argument><expr><literal type="string">"value3"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>dao</name><operator>.</operator><name>reconcileCategory</name></name><argument_list>(<argument><expr><name>CATEGORY_NAME</name></expr></argument>, <argument><expr><name>newProperties</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>verifyAll</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>validateCapturedEntities</name><argument_list>(<argument><expr><name>CATEGORY_NAME</name></expr></argument>, <argument><expr><name>newProperties</name></expr></argument>, <argument><expr><name>capturedCreatedEntities</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><type><specifier>private</specifier> <name>AmbariConfigurationDAO</name></type> <name>createDao</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IllegalAccessException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>AmbariConfigurationDAO</name></type> <name>dao</name> <init>= <expr><call><name>createMockBuilder</name><argument_list>(<argument><expr><name><name>AmbariConfigurationDAO</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>addMockedMethods</name><argument_list>(<argument><expr><name>methodMerge</name></expr></argument>, <argument><expr><name>methodRemove</name></expr></argument>, <argument><expr><name>methodCreate</name></expr></argument>, <argument><expr><name>methodFindByCategory</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>createMock</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>EntityManager</name></type> <name>entityManager</name> <init>= <expr><call><name>createMock</name><argument_list>(<argument><expr><name><name>EntityManager</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>entityManager</name><operator>.</operator><name>flush</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>expectLastCall</name><argument_list>()</argument_list></call><operator>.</operator><call><name>anyTimes</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name><name>Provider</name><argument_list type="generic">&lt;<argument><name>EntityManager</name></argument>&gt;</argument_list></name></type> <name>entityManagerProvider</name> <init>= <expr><call><name>createMock</name><argument_list>(<argument><expr><name><name>Provider</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>entityManagerProvider</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>entityManager</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>anyTimes</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>fieldEntityManagerProvider</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name>dao</name></expr></argument>, <argument><expr><name>entityManagerProvider</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return>return <expr><name>dao</name></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>private</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>AmbariConfigurationEntity</name></argument>&gt;</argument_list></name></type> <name>toEntities</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>categoryName</name></decl></parameter>, <parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>properties</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>AmbariConfigurationEntity</name></argument>&gt;</argument_list></name></type> <name>entities</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <for>for <control>(<init><decl><type><name><name>Map</name><operator>.</operator><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></name></type> <name>property</name> <range>: <expr><call><name><name>properties</name><operator>.</operator><name>entrySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
      <decl_stmt><decl><type><name>AmbariConfigurationEntity</name></type> <name>entity</name> <init>= <expr><operator>new</operator> <call><name>AmbariConfigurationEntity</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>entity</name><operator>.</operator><name>setCategoryName</name></name><argument_list>(<argument><expr><name>categoryName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>entity</name><operator>.</operator><name>setPropertyName</name></name><argument_list>(<argument><expr><call><name><name>property</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>entity</name><operator>.</operator><name>setPropertyValue</name></name><argument_list>(<argument><expr><call><name><name>property</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>entities</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>entity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>

    <return>return <expr><name>entities</name></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>private</specifier> <name>void</name></type> <name>validateCapturedEntities</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>expectedCategoryName</name></decl></parameter>, <parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>expectedProperties</name></decl></parameter>, <parameter><decl><type><name><name>Capture</name><argument_list type="generic">&lt;<argument><name>AmbariConfigurationEntity</name></argument>&gt;</argument_list></name></type> <name>capturedEntities</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertTrue</name></name><argument_list>(<argument><expr><call><name><name>capturedEntities</name><operator>.</operator><name>hasCaptured</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>AmbariConfigurationEntity</name></argument>&gt;</argument_list></name></type> <name>entities</name> <init>= <expr><call><name><name>capturedEntities</name><operator>.</operator><name>getValues</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertNotNull</name></name><argument_list>(<argument><expr><name>entities</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>capturedProperties</name> <init>= <expr><operator>new</operator> <call><name><name>TreeMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <for>for <control>(<init><decl><type><name>AmbariConfigurationEntity</name></type> <name>entity</name> <range>: <expr><name>entities</name></expr></range></decl></init>)</control> <block>{<block_content>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><name>expectedCategoryName</name></expr></argument>, <argument><expr><call><name><name>entity</name><operator>.</operator><name>getCategoryName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>capturedProperties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>entity</name><operator>.</operator><name>getPropertyName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>entity</name><operator>.</operator><name>getPropertyValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>

    <comment type="line">// Convert the Map to a TreeMap to help with comparisons</comment>
    <expr_stmt><expr><name>expectedProperties</name> <operator>=</operator> <operator>new</operator> <call><name><name>TreeMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>(<argument><expr><name>expectedProperties</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><name>expectedProperties</name></expr></argument>, <argument><expr><name>capturedProperties</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

}</block></class>
<expr_stmt><expr><operator>\</operator> <name>No</name> <name>newline</name> <name>at</name> <name>end</name> <name>of</name> <name>file</name>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog300Test</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog300Test</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>bd8f5cbd57</name><operator>..</operator><literal type="number">747f99b618</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog300Test</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog300Test</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@
  <operator>*</operator><operator>/</operator></expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>upgrade</name></name>;</package>
 
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>upgrade</name><operator>.</operator><name>UpgradeCatalog300</name><operator>.</operator><name>AMBARI_CONFIGURATION_CATEGORY_NAME_COLUMN</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>upgrade</name><operator>.</operator><name>UpgradeCatalog300</name><operator>.</operator><name>AMBARI_CONFIGURATION_PROPERTY_NAME_COLUMN</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>upgrade</name><operator>.</operator><name>UpgradeCatalog300</name><operator>.</operator><name>AMBARI_CONFIGURATION_PROPERTY_VALUE_COLUMN</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>upgrade</name><operator>.</operator><name>UpgradeCatalog300</name><operator>.</operator><name>AMBARI_CONFIGURATION_TABLE</name></name>;</import>
 <import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>upgrade</name><operator>.</operator><name>UpgradeCatalog300</name><operator>.</operator><name>COMPONENT_DESIRED_STATE_TABLE</name></name>;</import>
 <import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>upgrade</name><operator>.</operator><name>UpgradeCatalog300</name><operator>.</operator><name>COMPONENT_STATE_TABLE</name></name>;</import>
 <import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>upgrade</name><operator>.</operator><name>UpgradeCatalog300</name><operator>.</operator><name>SECURITY_STATE_COLUMN</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">42</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">46</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collection</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 
 <import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>EntityManager</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">186</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">191</literal></expr><operator>,</operator><expr><literal type="number">15</literal> @@ <specifier>public</specifier> <name>class</name> <name>UpgradeCatalog300Test</name> <block>{
     <expr><call><name><name>dbAccessor</name><operator>.</operator><name>dropColumn</name></name><argument_list>(<argument><expr><name>SERVICE_DESIRED_STATE_TABLE</name></expr></argument>, <argument><expr><name>SECURITY_STATE_COLUMN</name></expr></argument>)</argument_list></call></expr>;
     <call><name>expectLastCall</name><argument_list>()</argument_list></call><operator>.</operator><call><name>once</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
 
    <comment type="line">// Ambari configuration table addition...</comment>
    <decl_stmt><decl><type><name><name>Capture</name><argument_list type="generic">&lt;<argument><name><name>List</name><argument_list type="generic">&lt;<argument><name><name>DBAccessor</name><operator>.</operator><name>DBColumnInfo</name></name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>ambariConfigurationTableColumns</name> <init>= <expr><call><name>newCapture</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name><name>dbAccessor</name><operator>.</operator><name>createTable</name></name><argument_list>(<argument><expr><call><name>eq</name><argument_list>(<argument><expr><name>AMBARI_CONFIGURATION_TABLE</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>capture</name><argument_list>(<argument><expr><name>ambariConfigurationTableColumns</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>expectLastCall</name><argument_list>()</argument_list></call><operator>.</operator><call><name>once</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>dbAccessor</name><operator>.</operator><name>addPKConstraint</name></name><argument_list>(<argument><expr><name>AMBARI_CONFIGURATION_TABLE</name></expr></argument>, <argument><expr><literal type="string">"PK_ambari_configuration"</literal></expr></argument>, <argument><expr><name>AMBARI_CONFIGURATION_CATEGORY_NAME_COLUMN</name></expr></argument>, <argument><expr><name>AMBARI_CONFIGURATION_PROPERTY_NAME_COLUMN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>expectLastCall</name><argument_list>()</argument_list></call><operator>.</operator><call><name>once</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <comment type="line">// Ambari configuration table addition...</comment>

     <constructor_decl><name>replay</name><parameter_list>(<parameter><decl><type><name>dbAccessor</name></type></decl></parameter>, <parameter><decl><type><name>configuration</name></type></decl></parameter>)</parameter_list>;</constructor_decl>
 
     <decl_stmt><decl><type><name>Injector</name></type> <name>injector</name> <init>= <expr><call><name><name>Guice</name><operator>.</operator><name>createInjector</name></name><argument_list>(<argument><expr><name>module</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">197</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">211</literal></expr><operator>,</operator><expr><literal type="number">35</literal> @@ <specifier>public</specifier> <name>class</name> <name>UpgradeCatalog300Test</name> <block>{
     <expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><call><name><name>capturedOpsDisplayNameColumn</name><operator>.</operator><name>getDefaultValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><name><name>String</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><call><name><name>capturedOpsDisplayNameColumn</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
 
    <comment type="line">// Ambari configuration table addition...</comment>
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertTrue</name></name><argument_list>(<argument><expr><call><name><name>ambariConfigurationTableColumns</name><operator>.</operator><name>hasCaptured</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name><name>DBAccessor</name><operator>.</operator><name>DBColumnInfo</name></name></argument>&gt;</argument_list></name></type> <name>columns</name> <init>= <expr><call><name><name>ambariConfigurationTableColumns</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><call><name><name>columns</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for>for <control>(<init><decl><type><name><name>DBAccessor</name><operator>.</operator><name>DBColumnInfo</name></name></type> <name>column</name> <range>: <expr><name>columns</name></expr></range></decl></init>)</control> <block>{<block_content>
      <decl_stmt><decl><type><name>String</name></type> <name>columnName</name> <init>= <expr><call><name><name>column</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

      <if_stmt><if>if <condition>(<expr><call><name><name>AMBARI_CONFIGURATION_CATEGORY_NAME_COLUMN</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>columnName</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><name><name>String</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><call><name><name>column</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><call><name><name>Integer</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>column</name><operator>.</operator><name>getLength</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><call><name><name>column</name><operator>.</operator><name>getDefaultValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertFalse</name></name><argument_list>(<argument><expr><call><name><name>column</name><operator>.</operator><name>isNullable</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><call><name><name>AMBARI_CONFIGURATION_PROPERTY_NAME_COLUMN</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>columnName</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><name><name>String</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><call><name><name>column</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><call><name><name>Integer</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>column</name><operator>.</operator><name>getLength</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><call><name><name>column</name><operator>.</operator><name>getDefaultValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertFalse</name></name><argument_list>(<argument><expr><call><name><name>column</name><operator>.</operator><name>isNullable</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><call><name><name>AMBARI_CONFIGURATION_PROPERTY_VALUE_COLUMN</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>columnName</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><name><name>String</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><call><name><name>column</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><call><name><name>Integer</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><literal type="number">255</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>column</name><operator>.</operator><name>getLength</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><call><name><name>column</name><operator>.</operator><name>getDefaultValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertTrue</name></name><argument_list>(<argument><expr><call><name><name>column</name><operator>.</operator><name>isNullable</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if> <else>else <block>{<block_content>
        <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>fail</name></name><argument_list>(<argument><expr><literal type="string">"Unexpected column name: "</literal> <operator>+</operator> <name>columnName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></else></if_stmt>
    </block_content>}</block></for>
    <comment type="line">// Ambari configuration table addition...</comment>

     <constructor_decl><name>verify</name><parameter_list>(<parameter><decl><type><name>dbAccessor</name></type></decl></parameter>)</parameter_list>;</constructor_decl>
   }</block></class>
 
<expr_stmt><expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></expr_stmt></block_content></block></function></block_content></block></function></block_content></block></function></block_content></block></function></block></class></block_content></block></function></block_content></block></function></block_content></block></function></block></class></block_content></block></function></block_content></block></function></block_content></block></function></block_content></block></function></block_content></block></function></block_content></block></function></block_content></block></function></block_content></block></if></if_stmt></block_content></block></for></block_content></block></catch></block_content></block></function></block_content></block></function></block_content></block></function></block_content></block></block></if></if_stmt></block_content></block></switch></block_content></block></function></block_content></block></function>

</unit>
