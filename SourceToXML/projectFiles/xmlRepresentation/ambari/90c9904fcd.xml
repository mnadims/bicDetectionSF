<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/ambari/90c9904fcd.java"><expr_stmt><expr><name>From</name> <literal type="number">90c9904fcdeaf5a970cdd837a79144c9d18fd4e9</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Bob</name> <name><name>Nettleton</name> <argument_list type="generic">&lt;<argument><name>rnettleton</name><annotation>@<name><name>hortonworks</name><operator>.</operator><name>com</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Fri</name></expr><operator>,</operator> <expr><literal type="number">1</literal> <name>Jul</name> <literal type="number">2016</literal> <literal type="number">14</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">27</literal> <operator>-</operator><literal type="number">0400</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>AMBARI</name><operator>-</operator><literal type="number">17510.</literal> <name>LogSearch</name> <name>REST</name> <name>Integration</name> <name>component</name> <name>can</name> <name>cause</name>
 <name>performance</name> <name><name>issues</name><operator>.</operator></name> (<name>rnettleton</name></expr></expr_stmt>)

<expr_stmt><expr><operator>--</operator>
 <operator>...</operator><operator>/</operator><name><name>AmbariManagementController</name><operator>.</operator><name>java</name></name>           <operator>|</operator>   <literal type="number">8</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name><name>AmbariManagementControllerImpl</name><operator>.</operator><name>java</name></name>       <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>internal</name><operator>/</operator><name><name>AbstractProviderModule</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">8</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>LogSearchDataRetrievalService</name><operator>.</operator><name>java</name></name>        <operator>|</operator> <literal type="number">231</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator>
 <operator>...</operator><operator>/</operator><name>logging</name><operator>/</operator><name><name>LoggingRequestHelperImpl</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">7</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name><name>LoggingSearchPropertyProvider</name><operator>.</operator><name>java</name></name>        <operator>|</operator>  <literal type="number">55</literal> <operator>++</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>LoggingSearchPropertyProviderTest</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">79</literal> <operator>++</operator><operator>--</operator><operator>--</operator>
 <literal type="number">7</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">300</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">94</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>logging</name><operator>/</operator><name><name>LogSearchDataRetrievalService</name><operator>.</operator><name>java</name></name>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>AmbariManagementController</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>AmbariManagementController</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">947a9f4631</literal><operator>..</operator><literal type="number">5cf2de7b95</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>AmbariManagementController</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>AmbariManagementController</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">29</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">29</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>actionmanager</name><operator>.</operator><name>ActionManager</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>agent</name><operator>.</operator><name>ExecutionCommand</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>api</name><operator>.</operator><name>services</name><operator>.</operator><name>AmbariMetaInfo</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>internal</name><operator>.</operator><name>RequestStageContainer</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>logging</name><operator>.</operator><name>LoggingSearchPropertyProvider</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>metrics</name><operator>.</operator><name>MetricPropertyProviderFactory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>metrics</name><operator>.</operator><name>timeline</name><operator>.</operator><name>cache</name><operator>.</operator><name>TimelineMetricCacheProvider</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>events</name><operator>.</operator><name>AmbariEvent</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">859</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">860</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> interface <name>AmbariManagementController</name> <block>{
    <expr><operator>*</operator><operator>/</operator>
   <name>MetricPropertyProviderFactory</name> <call><name>getMetricPropertyProviderFactory</name><argument_list>()</argument_list></call></expr>;
 
  <comment type="block" format="javadoc">/**
   * Gets the LoggingSearchPropertyProvider instance.
   *
   * @return the injected {@link LoggingSearchPropertyProvider}
   */</comment>
  <expr><name>LoggingSearchPropertyProvider</name> <call><name>getLoggingSearchPropertyProvider</name><argument_list>()</argument_list></call></expr>;

   <comment type="block" format="javadoc">/**
    * Returns KerberosHelper instance
    * @return
diff --git a/ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariManagementControllerImpl.java b/ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariManagementControllerImpl.java
index fe7e757ae8..5b4dae2140 100644
-- a/ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariManagementControllerImpl.java
++ b/ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariManagementControllerImpl.java
@@ -95,6 +95,7 @@ import org.apache.ambari.server.controller.internal.RequestStageContainer;
 import org.apache.ambari.server.controller.internal.URLStreamProvider;
 import org.apache.ambari.server.controller.internal.WidgetLayoutResourceProvider;
 import org.apache.ambari.server.controller.internal.WidgetResourceProvider;
import org.apache.ambari.server.controller.logging.LoggingSearchPropertyProvider;
 import org.apache.ambari.server.controller.metrics.MetricPropertyProviderFactory;
 import org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricCacheProvider;
 import org.apache.ambari.server.controller.spi.Resource;
@@ -4872,6 +4873,11 @@ public class AmbariManagementControllerImpl implements AmbariManagementControlle
     return injector.getInstance(MetricPropertyProviderFactory.class);
   }
 
  @Override
  public LoggingSearchPropertyProvider getLoggingSearchPropertyProvider() {
    return injector.getInstance(LoggingSearchPropertyProvider.class);
  }

   /**
    * {@inheritDoc}
    */</comment>
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>AbstractProviderModule</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>AbstractProviderModule</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">5ac66d8ef3</literal><operator>..</operator><literal type="number">75d8449ffe</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>AbstractProviderModule</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>AbstractProviderModule</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">33</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">33</literal></expr>,<expr><literal type="number">7</literal> @@</expr> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import></block></expr></expr_stmt>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>ConcurrentHashMap</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>ConcurrentMap</name></name>;</import>
 
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>Injector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>AmbariException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>Role</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>configuration</name><operator>.</operator><name>ComponentSSLConfiguration</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">237</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">238</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>AbstractProviderModule</name> implements <name>ProviderModule</name></expr><operator>,</operator>
   @<expr><name>Inject</name>
   <specifier>protected</specifier> <name>AmbariEventPublisher</name> <name>eventPublisher</name></expr>;</expr_stmt>
 

   <comment type="block" format="javadoc">/**
    * The map of host components.
    */</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">857</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">859</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>AbstractProviderModule</name> implements <name>ProviderModule</name></expr><operator>,</operator>
             <expr><call><name><name>PropertyHelper</name><operator>.</operator><name>getPropertyId</name></name><argument_list>(<argument><expr><literal type="string">"HostRoles"</literal></expr></argument>, <argument><expr><literal type="string">"component_name"</literal></expr></argument>)</argument_list></call></expr><operator>,</operator>
             <expr><name>HTTP_PROPERTY_REQUESTS</name></expr></expr_stmt>))<empty_stmt>;</empty_stmt>
 
          <comment type="line">//TODO, this may need to be conditional based on the presence/absence of LogSearch</comment>
          <expr_stmt><expr><call><name><name>providers</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>LoggingSearchPropertyProvider</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <comment type="line">// injecting the Injector type won't seem to work in this module, so</comment>
          <comment type="line">// this follows the current pattern of relying on the management controller</comment>
          <comment type="line">// to instantiate this PropertyProvider</comment>
          <expr_stmt><expr><call><name><name>providers</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name><name>managementController</name><operator>.</operator><name>getLoggingSearchPropertyProvider</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         }
         break<empty_stmt>;</empty_stmt>
         <case>case <expr><name>RootServiceComponent</name></expr>:</case>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>logging</name><operator>/</operator><name><name>LogSearchDataRetrievalService</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>logging</name><operator>/</operator><name><name>LogSearchDataRetrievalService</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">0000000000..877f4e3b26</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>logging</name><operator>/</operator><name><name>LogSearchDataRetrievalService</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">231</literal> @@</expr></expr_stmt>
<comment type="block" format="javadoc">/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * &lt;p&gt;
 * http://www.apache.org/licenses/LICENSE-2.0
 * &lt;p&gt;
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>logging</name></name>;</package>

<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>cache</name><operator>.</operator><name>Cache</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>cache</name><operator>.</operator><name>CacheBuilder</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>AbstractService</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>Inject</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>AmbariService</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>configuration</name><operator>.</operator><name>Configuration</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>AmbariManagementController</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>AmbariServer</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>Executor</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>Executors</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>TimeUnit</name></name>;</import>

<comment type="block" format="javadoc">/**
 * The {@link LogSearchDataRetrievalService} is an Ambari Service that
 *   is used by the Ambari LogSearch integration code to obtain response
 *   data from the LogSearch server.
 *
 * In order to improve the performance of the LogSearch integration layer in
 *   Ambari, this service implements the following:
 *
 *  &lt;ul&gt;
 *    &lt;li&gt;A cache for LogSearch data that typically is returned by the LogSearch REST API&lt;/li&gt;
 *    &lt;li&gt;Implements the remote request for LogSearch data not found in the cache on a separate
 *        thread, which keeps the request from affecting the overall performance of the
 *        Ambari REST API&lt;/li&gt;
 *  &lt;/ul&gt;
 *
 *  As with other services annotated with {@link AmbariService}, this class may be
 *    injected in order to obtain cached access to the LogSearch responses.
 *
 *  Caches are initially empty in this implementation, and a remote request
 *    to the LogSearch server will be made upon the first request for a given
 *    response.
 *
 *
 */</comment>
<class><annotation>@<name>AmbariService</name></annotation>
<specifier>public</specifier> class <name>LogSearchDataRetrievalService</name> <super_list><extends>extends <super><name>AbstractService</name></super></extends></super_list> <block>{

  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>Logger</name></type> <name>LOG</name> <init>= <expr><call><name><name>LoggerFactory</name><operator>.</operator><name>getLogger</name></name><argument_list>(<argument><expr><name><name>LogSearchDataRetrievalService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><annotation>@<name>Inject</name></annotation>
  <type><specifier>private</specifier> <name>Configuration</name></type> <name>configuration</name></decl>;</decl_stmt>

  <comment type="block" format="javadoc">/**
   * A Cache of host+component names to a set of log files associated with
   *  that Host/Component combination.  This data is retrieved from the
   *  LogSearch server, but cached here for better performance.
   */</comment>
  <decl_stmt><decl><type><specifier>private</specifier> <name><name>Cache</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>logFileNameCache</name></decl>;</decl_stmt>

  <comment type="block" format="javadoc">/**
   * a Cache of host+component names to a generated URI that
   *  can be used to access the "tail" of a given log file.
   *
   * This data is generated by ambari-server, but cached here to
   *  avoid re-creating these strings upon multiple calls to the
   *  associated HostComponent resource.
   */</comment>
  <decl_stmt><decl><type><specifier>private</specifier> <name><name>Cache</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>logFileTailURICache</name></decl>;</decl_stmt>

  <comment type="block" format="javadoc">/**
   * Executor instance to be used to run REST queries against
   * the LogSearch service.
   */</comment>
  <decl_stmt><decl><type><specifier>private</specifier> <name>Executor</name></type> <name>executor</name></decl>;</decl_stmt>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>protected</specifier> <name>void</name></type> <name>doStart</name><parameter_list>()</parameter_list> <block>{<block_content>

    <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"Initializing caches"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="line">// initialize the log file name cache</comment>
    <expr_stmt><expr><name>logFileNameCache</name> <operator>=</operator> <call><name><name>CacheBuilder</name><operator>.</operator><name>newBuilder</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>expireAfterWrite</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name><name>TimeUnit</name><operator>.</operator><name>HOURS</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <comment type="line">// initialize the log file tail URI cache</comment>
    <expr_stmt><expr><name>logFileTailURICache</name> <operator>=</operator> <call><name><name>CacheBuilder</name><operator>.</operator><name>newBuilder</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>expireAfterWrite</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name><name>TimeUnit</name><operator>.</operator><name>HOURS</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <comment type="line">// initialize the Executor</comment>
    <expr_stmt><expr><name>executor</name> <operator>=</operator> <call><name><name>Executors</name><operator>.</operator><name>newSingleThreadExecutor</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>protected</specifier> <name>void</name></type> <name>doStop</name><parameter_list>()</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"Invalidating LogSearch caches"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="line">// invalidate the cache</comment>
    <expr_stmt><expr><call><name><name>logFileNameCache</name><operator>.</operator><name>invalidateAll</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>logFileTailURICache</name><operator>.</operator><name>invalidateAll</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <comment type="block" format="javadoc">/**
   * This method attempts to obtain the log file names for the specified component
   *   on the specified host.  A cache lookup is first attempted. If the cache does not contain
   *   this data, an asynchronous task is launched in order to make the REST request to
   *   the LogSearch server to obtain this data.
   *
   * Once the data is available in the cache, subsequent calls for a given Host/Component
   *   combination should return non-null.
   *
   * @param component the component name
   * @param host the host name
   * @param cluster the cluster name
   *
   * @return a Set&lt;String&gt; that includes the log file names associated with this Host/Component
   *         combination, or null if that object does not exist in the cache.
   */</comment>
  <function><type><specifier>public</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>getLogFileNames</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>component</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>host</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>cluster</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>String</name></type> <name>key</name> <init>= <expr><call><name>generateKey</name><argument_list>(<argument><expr><name>component</name></expr></argument>, <argument><expr><name>host</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <comment type="line">// check cache for data</comment>
    <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>cacheResult</name> <init>=
      <expr><call><name><name>logFileNameCache</name><operator>.</operator><name>getIfPresent</name></name><argument_list>(<argument><expr><name>key</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt><if>if <condition>(<expr><name>cacheResult</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"LogFileNames result for key = {} found in cache"</literal></expr></argument>, <argument><expr><name>key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <return>return <expr><name>cacheResult</name></expr>;</return>
    </block_content>}</block></if> <else>else <block>{<block_content>
      <comment type="line">// queue up a thread to make the LogSearch REST request to obtain this information</comment>
      <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"LogFileNames result for key = {} not in cache, queueing up remote request"</literal></expr></argument>, <argument><expr><name>key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>startLogSearchFileNameRequest</name><argument_list>(<argument><expr><name>host</name></expr></argument>, <argument><expr><name>component</name></expr></argument>, <argument><expr><name>cluster</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>

    <return>return <expr><literal type="null">null</literal></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>String</name></type> <name>getLogFileTailURI</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>baseURI</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>component</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>host</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>cluster</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>String</name></type> <name>key</name> <init>= <expr><call><name>generateKey</name><argument_list>(<argument><expr><name>component</name></expr></argument>, <argument><expr><name>host</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>String</name></type> <name>result</name> <init>= <expr><call><name><name>logFileTailURICache</name><operator>.</operator><name>getIfPresent</name></name><argument_list>(<argument><expr><name>key</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>result</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <comment type="line">// return cached result</comment>
      <return>return <expr><name>result</name></expr>;</return>
    </block_content>}</block></if> <else>else <block>{<block_content>
      <comment type="line">// create URI and add to cache before returning</comment>
      <decl_stmt><decl><type><name>LoggingRequestHelper</name></type> <name>helper</name> <init>=
        <expr><operator>new</operator> <call><name>LoggingRequestHelperFactoryImpl</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getHelper</name><argument_list>(<argument><expr><call><name>getController</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>cluster</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>String</name></type> <name>tailFileURI</name> <init>=
        <expr><call><name><name>helper</name><operator>.</operator><name>createLogFileTailURI</name></name><argument_list>(<argument><expr><name>baseURI</name></expr></argument>, <argument><expr><name>component</name></expr></argument>, <argument><expr><name>host</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

      <if_stmt><if>if <condition>(<expr><name>tailFileURI</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>logFileTailURICache</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>key</name></expr></argument>, <argument><expr><name>tailFileURI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return>return <expr><name>tailFileURI</name></expr>;</return>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block></else></if_stmt>

    <return>return <expr><literal type="null">null</literal></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>private</specifier> <name>void</name></type> <name>startLogSearchFileNameRequest</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>host</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>component</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>cluster</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name><name>executor</name><operator>.</operator><name>execute</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>LogSearchFileNameRequestRunnable</name><argument_list>(<argument><expr><name>host</name></expr></argument>, <argument><expr><name>component</name></expr></argument>, <argument><expr><name>cluster</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><type><specifier>private</specifier> <name>AmbariManagementController</name></type> <name>getController</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><call><name><name>AmbariServer</name><operator>.</operator><name>getController</name></name><argument_list>()</argument_list></call></expr>;</return>
  </block_content>}</block></function>



  <function><type><specifier>private</specifier> <specifier>static</specifier> <name>String</name></type> <name>generateKey</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>component</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>host</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <return>return <expr><name>component</name> <operator>+</operator> <literal type="string">"+"</literal> <operator>+</operator> <name>host</name></expr>;</return>
  </block_content>}</block></function>


  <comment type="block" format="javadoc">/**
   * A {@link Runnable} used to make requests to the remote LogSearch server's
   *   REST API.
   *
   * This implementation will update a cache shared with the {@link LogSearchDataRetrievalService},
   *   which can then be used for subsequent requests for the same data.
   *
   */</comment>
  <class><specifier>private</specifier> class <name>LogSearchFileNameRequestRunnable</name> <super_list><implements>implements <super><name>Runnable</name></super></implements></super_list> <block>{

    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>String</name></type> <name>host</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>String</name></type> <name>component</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>String</name></type> <name>cluster</name></decl>;</decl_stmt>

    <constructor><specifier>private</specifier> <name>LogSearchFileNameRequestRunnable</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>host</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>component</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>cluster</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>host</name></name> <operator>=</operator> <name>host</name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>component</name></name> <operator>=</operator> <name>component</name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>cluster</name></name> <operator>=</operator> <name>cluster</name></expr>;</expr_stmt>
    </block_content>}</block></constructor>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>run</name><parameter_list>()</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"LogSearchFileNameRequestRunnable: starting..."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>LoggingRequestHelper</name></type> <name>helper</name> <init>=
        <expr><operator>new</operator> <call><name>LoggingRequestHelperFactoryImpl</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getHelper</name><argument_list>(<argument><expr><call><name>getController</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>cluster</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

      <if_stmt><if>if <condition>(<expr><name>helper</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <comment type="line">// make request to LogSearch service</comment>
        <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>logFileNamesResult</name> <init>=
          <expr><call><name><name>helper</name><operator>.</operator><name>sendGetLogFileNamesRequest</name></name><argument_list>(<argument><expr><name>component</name></expr></argument>, <argument><expr><name>host</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <comment type="line">// update the cache if result is available</comment>
        <if_stmt><if>if <condition>(<expr><name>logFileNamesResult</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"LogSearchFileNameRequestRunnable: request was successful, updating cache"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>logFileNameCache</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name>generateKey</name><argument_list>(<argument><expr><name>component</name></expr></argument>, <argument><expr><name>host</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>logFileNamesResult</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if> <else>else <block>{<block_content>
          <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"LogSearchFileNameRequestRunnable: remote request was not successful"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
      </block_content>}</block></if> <else>else <block>{<block_content>
        <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"LogSearchFileNameRequestRunnable: request helper was null.  This may mean that LogSearch is not available, or could be a potential connection problem."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></else></if_stmt>
    </block_content>}</block></function>
  }</block></class>
}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>logging</name><operator>/</operator><name><name>LoggingRequestHelperImpl</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>logging</name><operator>/</operator><name><name>LoggingRequestHelperImpl</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>d8c71e2465</name><operator>..</operator><literal type="number">276a65e1ce</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>logging</name><operator>/</operator><name><name>LoggingRequestHelperImpl</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>logging</name><operator>/</operator><name><name>LoggingRequestHelperImpl</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">76</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">76</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>LoggingRequestHelperImpl</name> implements <name>LoggingRequestHelper</name> <block>{
 
   <expr><specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>PAGE_SIZE_QUERY_PARAMETER_NAME</name> <operator>=</operator> <literal type="string">"pageSize"</literal></expr>;
 
  <expr><specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name>int</name> <name>DEFAULT_LOGSEARCH_CONNECT_TIMEOUT_IN_MILLISECONDS</name> <operator>=</operator> <literal type="number">5000</literal></expr>;

  <expr><specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name>int</name> <name>DEFAULT_LOGSEARCH_READ_TIMEOUT_IN_MILLISECONDS</name> <operator>=</operator> <literal type="number">5000</literal></expr>;

   <expr><specifier>private</specifier> <specifier>static</specifier> <name>AtomicInteger</name> <name>errorLogCounterForLogSearchConnectionExceptions</name> <operator>=</operator> <operator>new</operator> <call><name>AtomicInteger</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;
 
   <expr><specifier>private</specifier> <name>final</name> <name>String</name> <name>hostName</name></expr>;
@@ <expr><operator>-</operator><literal type="number">108</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">112</literal></expr>,<expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>LoggingRequestHelperImpl</name> implements <name>LoggingRequestHelper</name> <block>{
 
       <expr><name>HttpURLConnection</name> <name>httpURLConnection</name>  <operator>=</operator> <operator>(</operator><name>HttpURLConnection</name><operator>)</operator><call><name><name>logSearchURI</name><operator>.</operator><name>toURL</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>openConnection</name><argument_list>()</argument_list></call></expr>;
       <expr><call><name><name>httpURLConnection</name><operator>.</operator><name>setRequestMethod</name></name><argument_list>(<argument><expr><literal type="string">"GET"</literal></expr></argument>)</argument_list></call></expr>;
      <expr><call><name><name>httpURLConnection</name><operator>.</operator><name>setConnectTimeout</name></name><argument_list>(<argument><expr><name>DEFAULT_LOGSEARCH_CONNECT_TIMEOUT_IN_MILLISECONDS</name></expr></argument>)</argument_list></call></expr>;
      <expr><call><name><name>httpURLConnection</name><operator>.</operator><name>setReadTimeout</name></name><argument_list>(<argument><expr><name>DEFAULT_LOGSEARCH_READ_TIMEOUT_IN_MILLISECONDS</name></expr></argument>)</argument_list></call></expr>;

 
       <expr><call><name>setupCredentials</name><argument_list>(<argument><expr><name>httpURLConnection</name></expr></argument>)</argument_list></call></expr>;
 
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>logging</name><operator>/</operator><name><name>LoggingSearchPropertyProvider</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>logging</name><operator>/</operator><name><name>LoggingSearchPropertyProvider</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>ff7e7f5a96</name><operator>..</operator><name>a28e04acd8</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>logging</name><operator>/</operator><name><name>LoggingSearchPropertyProvider</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>logging</name><operator>/</operator><name><name>LoggingSearchPropertyProvider</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr>,<expr><literal type="number">10</literal> <operator>+</operator><literal type="number">17</literal></expr>,<expr><literal type="number">10</literal> @@
  <operator>*</operator><operator>/</operator></expr>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>logging</name></name>;</package></block></expr>
 
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>Inject</name></name>;</import></block></expr></expr_stmt>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>AmbariException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>api</name><operator>.</operator><name>services</name><operator>.</operator><name>AmbariMetaInfo</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>AmbariManagementController</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>AmbariServer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>Predicate</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>PropertyProvider</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>Request</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">48</literal></expr><operator>,</operator><expr><literal type="number">25</literal> <operator>+</operator><literal type="number">48</literal></expr><operator>,</operator><expr><literal type="number">18</literal> @@ <specifier>public</specifier> <name>class</name> <name>LoggingSearchPropertyProvider</name> implements <name>PropertyProvider</name> <block>{
 
   <expr><specifier>private</specifier> <specifier>static</specifier> <name>AtomicInteger</name> <name>errorLogCounterForLogSearchConnectionExceptions</name> <operator>=</operator> <operator>new</operator> <call><name>AtomicInteger</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;
 
  <expr><specifier>private</specifier> <name>final</name> <name>LoggingRequestHelperFactory</name> <name>requestHelperFactory</name></expr>;
  @<expr><name>Inject</name>
  <specifier>private</specifier> <name>AmbariManagementController</name> <name>ambariManagementController</name></expr>;
 
  <expr><specifier>private</specifier> <name>final</name> <name>ControllerFactory</name> <name>controllerFactory</name></expr>;
  @<expr><name>Inject</name>
  <specifier>private</specifier> <name>LogSearchDataRetrievalService</name> <name>logSearchDataRetrievalService</name></expr>;
 
   <expr><specifier>public</specifier> <call><name>LoggingSearchPropertyProvider</name><argument_list>()</argument_list></call> <block>{
    <expr><call><name>this</name><argument_list>(<argument><expr><operator>new</operator> <call><name>LoggingRequestHelperFactoryImpl</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <call><name>DefaultControllerFactory</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
  }</block>

  <specifier>protected</specifier> <call><name>LoggingSearchPropertyProvider</name><argument_list>(<argument><expr><name>LoggingRequestHelperFactory</name> <name>requestHelperFactory</name></expr></argument>, <argument><expr><name>ControllerFactory</name> <name>controllerFactory</name></expr></argument>)</argument_list></call> <block>{
    <expr><name><name>this</name><operator>.</operator><name>requestHelperFactory</name></name> <operator>=</operator> <name>requestHelperFactory</name></expr>;
    <expr><name><name>this</name><operator>.</operator><name>controllerFactory</name></name> <operator>=</operator> <name>controllerFactory</name></expr>;
   }</block>
 
   @<name>Override</name>
   <specifier>public</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>Resource</name></argument>&gt;</argument_list></name> <call><name>populateResources</name><argument_list>(<argument><expr><name><name>Set</name><argument_list type="generic">&lt;<argument><name>Resource</name></argument>&gt;</argument_list></name> <name>resources</name></expr></argument>, <argument><expr><name>Request</name> <name>request</name></expr></argument>, <argument><expr><name>Predicate</name> <name>predicate</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>SystemException</name> <block>{
 
    <expr><name>AmbariManagementController</name> <name>controller</name> <operator>=</operator>
      <call><name><name>controllerFactory</name><operator>.</operator><name>getAmbariManagementController</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;

     <for>for <control>(<init><decl><type><name>Resource</name></type> <name>resource</name> <range>: <expr><name>resources</name></expr></range></decl></init>)</control> <block>{<block_content>
       <comment type="line">// obtain the required identifying properties on the host component resource</comment>
       <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>componentName</name> <init>= <expr><operator>(</operator><name>String</name><operator>)</operator><call><name><name>resource</name><operator>.</operator><name>getPropertyValue</name></name><argument_list>(<argument><expr><call><name><name>PropertyHelper</name><operator>.</operator><name>getPropertyId</name></name><argument_list>(<argument><expr><literal type="string">"HostRoles"</literal></expr></argument>, <argument><expr><literal type="string">"component_name"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">75</literal></expr><operator>,</operator><expr><literal type="number">25</literal> <operator>+</operator><literal type="number">68</literal></expr><operator>,</operator><expr><literal type="number">18</literal> @@ <specifier>public</specifier> <name>class</name> <name>LoggingSearchPropertyProvider</name> implements <name>PropertyProvider</name> <block>{
 
       <comment type="line">// query the stack definitions to find the correct component name (stack name mapped to LogSearch-defined name)</comment>
       <expr><name>final</name> <name>String</name> <name>mappedComponentNameForLogSearch</name> <operator>=</operator>
        <call><name>getMappedComponentNameForSearch</name><argument_list>(<argument><expr><name>clusterName</name></expr></argument>, <argument><expr><name>componentName</name></expr></argument>, <argument><expr><name>controller</name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>getMappedComponentNameForSearch</name><argument_list>(<argument><expr><name>clusterName</name></expr></argument>, <argument><expr><name>componentName</name></expr></argument>, <argument><expr><name>ambariManagementController</name></expr></argument>)</argument_list></call></expr>;
 
       <if_stmt><if>if <condition>(<expr><name>mappedComponentNameForLogSearch</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
         <decl_stmt><decl><type><name>HostComponentLoggingInfo</name></type> <name>loggingInfo</name> <init>=
           <expr><operator>new</operator> <call><name>HostComponentLoggingInfo</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
        <comment type="line">// make query to LogSearch server to find the associated file names</comment>
        <comment type="line">// create helper instance using factory</comment>
        <decl_stmt><decl><type><name>LoggingRequestHelper</name></type> <name>requestHelper</name> <init>=
          <expr><call><name><name>requestHelperFactory</name><operator>.</operator><name>getHelper</name></name><argument_list>(<argument><expr><name>controller</name></expr></argument>, <argument><expr><name>clusterName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
         <comment type="line">// if LogSearch service is available</comment>
        <if_stmt><if>if <condition>(<expr><name>requestHelper</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name>logSearchDataRetrievalService</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
           <comment type="line">// send query to obtain logging metadata</comment>
           <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>logFileNames</name> <init>=
            <expr><call><name><name>requestHelper</name><operator>.</operator><name>sendGetLogFileNamesRequest</name></name><argument_list>(<argument><expr><name>mappedComponentNameForLogSearch</name></expr></argument>, <argument><expr><name>hostName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

          <decl_stmt><decl><type><name>LogLevelQueryResponse</name></type> <name>levelQueryResponse</name> <init>=
            <expr><call><name><name>requestHelper</name><operator>.</operator><name>sendLogLevelQueryRequest</name></name><argument_list>(<argument><expr><name>mappedComponentNameForLogSearch</name></expr></argument>, <argument><expr><name>hostName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>logSearchDataRetrievalService</name><operator>.</operator><name>getLogFileNames</name></name><argument_list>(<argument><expr><name>mappedComponentNameForLogSearch</name></expr></argument>, <argument><expr><name>hostName</name></expr></argument>, <argument><expr><name>clusterName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
           <if_stmt><if>if <condition>(<expr><operator>(</operator><name>logFileNames</name> <operator>!=</operator> <literal type="null">null</literal><operator>)</operator> <operator>&amp;&amp;</operator> <operator>(</operator><operator>!</operator><call><name><name>logFileNames</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call><operator>)</operator></expr>)</condition> <block>{<block_content>
             <expr_stmt><expr><call><name><name>loggingInfo</name><operator>.</operator><name>setComponentName</name></name><argument_list>(<argument><expr><name>mappedComponentNameForLogSearch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">102</literal></expr><operator>,</operator><expr><literal type="number">19</literal> <operator>+</operator><literal type="number">88</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ <specifier>public</specifier> <name>class</name> <name>LoggingSearchPropertyProvider</name> implements <name>PropertyProvider</name> <block>{
 
             <for>for <control>(<init><decl><type><name>String</name></type> <name>fileName</name> <range>: <expr><name>logFileNames</name></expr></range></decl></init>)</control> <block>{<block_content>
               <comment type="line">// generate the URIs that can be used by clients to obtain search results/tail log results/etc</comment>
              <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>searchEngineURI</name> <init>= <expr><call><name><name>controller</name><operator>.</operator><name>getAmbariServerURI</name></name><argument_list>(<argument><expr><call><name>getFullPathToSearchEngine</name><argument_list>(<argument><expr><name>clusterName</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
              <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>logFileTailURI</name> <init>= <expr><call><name><name>requestHelper</name><operator>.</operator><name>createLogFileTailURI</name></name><argument_list>(<argument><expr><name>searchEngineURI</name></expr></argument>, <argument><expr><name>mappedComponentNameForLogSearch</name></expr></argument>, <argument><expr><name>hostName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
              <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>searchEngineURI</name> <init>= <expr><call><name><name>ambariManagementController</name><operator>.</operator><name>getAmbariServerURI</name></name><argument_list>(<argument><expr><call><name>getFullPathToSearchEngine</name><argument_list>(<argument><expr><name>clusterName</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
              <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>logFileTailURI</name> <init>= <expr><call><name><name>logSearchDataRetrievalService</name><operator>.</operator><name>getLogFileTailURI</name></name><argument_list>(<argument><expr><name>searchEngineURI</name></expr></argument>, <argument><expr><name>mappedComponentNameForLogSearch</name></expr></argument>, <argument><expr><name>hostName</name></expr></argument>, <argument><expr><name>clusterName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
               <comment type="line">// all log files are assumed to be service types for now</comment>
               <expr_stmt><expr><call><name><name>listOfFileDefinitions</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>LogFileDefinitionInfo</name><argument_list>(<argument><expr><name>fileName</name></expr></argument>, <argument><expr><name><name>LogFileType</name><operator>.</operator><name>SERVICE</name></name></expr></argument>, <argument><expr><name>searchEngineURI</name></expr></argument>, <argument><expr><name>logFileTailURI</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <expr_stmt/></block_content></block></for></block></expr></expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt>}</block>
 
             <call><name><name>loggingInfo</name><operator>.</operator><name>setListOfLogFileDefinitions</name></name><argument_list>(<argument><expr><name>listOfFileDefinitions</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
            <comment type="line">// add the log levels for this host component to the logging structure</comment>
            <if_stmt><if>if <condition>(<expr><name>levelQueryResponse</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
              <expr_stmt><expr><call><name><name>loggingInfo</name><operator>.</operator><name>setListOfLogLevels</name></name><argument_list>(<argument><expr><call><name><name>levelQueryResponse</name><operator>.</operator><name>getNameValueList</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt/></block_content></block></if></if_stmt></block_content></block></for>}</block>

             <call><name><name>LOG</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"Adding logging info for component name = "</literal> <operator>+</operator> <name>componentName</name> <operator>+</operator> <literal type="string">" on host name = "</literal> <operator>+</operator> <name>hostName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <comment type="line">// add the logging metadata for this host component</comment>
             <expr_stmt><expr><call><name><name>resource</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"logging"</literal></expr></argument>, <argument><expr><name>loggingInfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">170</literal></expr><operator>,</operator><expr><literal type="number">18</literal> <operator>+</operator><literal type="number">151</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>LoggingSearchPropertyProvider</name> implements <name>PropertyProvider</name> <block>{
     <return>return <expr><call><name><name>Collections</name><operator>.</operator><name>emptySet</name></name><argument_list>()</argument_list></call></expr>;</return>
   }</block></expr></expr_stmt>
 
  <comment type="block" format="javadoc">/**
   * Internal interface used to control how the AmbariManagementController
   * instance is obtained.  This is useful for unit testing as well.
   */</comment>
  <interface>interface <name>ControllerFactory</name> <block>{
    <function_decl><type><name>AmbariManagementController</name></type> <name>getAmbariManagementController</name><parameter_list>()</parameter_list>;</function_decl>
  <function><type><specifier>protected</specifier> <name>void</name></type> <name>setAmbariManagementController</name><parameter_list>(<parameter><decl><type><name>AmbariManagementController</name></type> <name>ambariManagementController</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>ambariManagementController</name></name> <operator>=</operator> <name>ambariManagementController</name></expr>;</expr_stmt>
   </block_content>}</block></function>
 
  <class><specifier>private</specifier> <specifier>static</specifier> class <name>DefaultControllerFactory</name> <super_list><implements>implements <super><name>ControllerFactory</name></super></implements></super_list> <block>{
    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>AmbariManagementController</name></type> <name>getAmbariManagementController</name><parameter_list>()</parameter_list> <block>{<block_content>
      <return>return <expr><call><name><name>AmbariServer</name><operator>.</operator><name>getController</name></name><argument_list>()</argument_list></call></expr>;</return>
    </block_content>}</block></function>
  <function><type><specifier>protected</specifier> <name>void</name></type> <name>setLogSearchDataRetrievalService</name><parameter_list>(<parameter><decl><type><name>LogSearchDataRetrievalService</name></type> <name>logSearchDataRetrievalService</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>logSearchDataRetrievalService</name></name> <operator>=</operator> <name>logSearchDataRetrievalService</name></expr>;</expr_stmt>
   </block_content>}</block></function>

 }</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>logging</name><operator>/</operator><name><name>LoggingSearchPropertyProviderTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>logging</name><operator>/</operator><name><name>LoggingSearchPropertyProviderTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">593f6609a9</literal><operator>..</operator><literal type="number">8b71b65cf9</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>logging</name><operator>/</operator><name><name>LoggingSearchPropertyProviderTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>logging</name><operator>/</operator><name><name>LoggingSearchPropertyProviderTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>logging</name></name>;</package>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>api</name><operator>.</operator><name>services</name><operator>.</operator><name>AmbariMetaInfo</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>AmbariManagementController</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>Predicate</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>PropertyProvider</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>Request</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>Resource</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>utilities</name><operator>.</operator><name>PropertyHelper</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">44</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">43</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>expect</name></name>;</import>
 
 <import>import static <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertEquals</name></name>;</import>
 <import>import static <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertNotNull</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertNull</name></name>;</import>
 <import>import static <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertSame</name></name>;</import></block></interface>
 
 <comment type="block" format="javadoc">/**
@@ -101,12 +101,6 @@ public class LoggingSearchPropertyProviderTest {
     // expect set method to be called
     resourceMock.setProperty(eq("logging"), capture(captureLogInfo));
 
    LoggingRequestHelperFactory helperFactoryMock =
      mockSupport.createMock(LoggingRequestHelperFactory.class);

    LoggingRequestHelper helperMock =
      mockSupport.createMock(LoggingRequestHelper.class);

     LogLevelQueryResponse levelQueryResponse =
       new LogLevelQueryResponse();
 
@@ -120,20 +114,12 @@ public class LoggingSearchPropertyProviderTest {
 
     levelQueryResponse.setNameValueList(testListOfLogLevels);
 

    expect(helperMock.sendGetLogFileNamesRequest(expectedLogSearchComponentName, "c6401.ambari.apache.org")).andReturn(Collections.singleton(expectedLogFilePath));
    expect(helperMock.sendLogLevelQueryRequest(expectedLogSearchComponentName,"c6401.ambari.apache.org")).andReturn(levelQueryResponse).atLeastOnce();
    expect(helperMock.createLogFileTailURI(expectedAmbariURL + expectedSearchEnginePath, expectedLogSearchComponentName, "c6401.ambari.apache.org")).andReturn("").atLeastOnce();

     Request requestMock =
       mockSupport.createMock(Request.class);
 
     Predicate predicateMock =
       mockSupport.createMock(Predicate.class);
 
    LoggingSearchPropertyProvider.ControllerFactory factoryMock =
      mockSupport.createMock(LoggingSearchPropertyProvider.ControllerFactory.class);

     AmbariManagementController controllerMock =
       mockSupport.createMock(AmbariManagementController.class);
 
@@ -155,7 +141,13 @@ public class LoggingSearchPropertyProviderTest {
     LogDefinition logDefinitionMock =
       mockSupport.createMock(LogDefinition.class);
 
    expect(factoryMock.getAmbariManagementController()).andReturn(controllerMock);
    LogSearchDataRetrievalService dataRetrievalServiceMock =
      mockSupport.createMock(LogSearchDataRetrievalService.class);

    expect(dataRetrievalServiceMock.getLogFileNames(expectedLogSearchComponentName, "c6401.ambari.apache.org", "clusterone")).andReturn(Collections.singleton(expectedLogFilePath)).atLeastOnce();
    expect(dataRetrievalServiceMock.getLogFileTailURI(expectedAmbariURL + expectedSearchEnginePath, expectedLogSearchComponentName, "c6401.ambari.apache.org", "clusterone")).andReturn("").atLeastOnce();


     expect(controllerMock.getAmbariServerURI(expectedSearchEnginePath)).
       andReturn(expectedAmbariURL + expectedSearchEnginePath).atLeastOnce();
     expect(controllerMock.getAmbariMetaInfo()).andReturn(metaInfoMock).atLeastOnce();
@@ -171,12 +163,13 @@ public class LoggingSearchPropertyProviderTest {
     expect(componentInfoMock.getLogs()).andReturn(Collections.singletonList(logDefinitionMock)).atLeastOnce();
     expect(logDefinitionMock.getLogId()).andReturn(expectedLogSearchComponentName).atLeastOnce();
 
    expect(helperFactoryMock.getHelper(controllerMock, "clusterone")).andReturn(helperMock).atLeastOnce();

     mockSupport.replayAll();
 
    PropertyProvider propertyProvider =
      new LoggingSearchPropertyProvider(helperFactoryMock, factoryMock);
    LoggingSearchPropertyProvider propertyProvider =
      new LoggingSearchPropertyProvider();

    propertyProvider.setAmbariManagementController(controllerMock);
    propertyProvider.setLogSearchDataRetrievalService(dataRetrievalServiceMock);
 
 
     Set&lt;Resource&gt; returnedResources =
@@ -210,32 +203,9 @@ public class LoggingSearchPropertyProviderTest {
     assertEquals("Incorrect URL path to searchEngine",
       expectedAmbariURL + expectedSearchEnginePath, definitionInfo.getSearchEngineURL());
 

     // verify that the log level count information
    // was properly added to the HostComponent resource
    assertNotNull("LogLevel counts should not be null",
      returnedLogInfo.getListOfLogLevels());
    assertEquals("LogLevel counts were of an incorrect size",
      3, returnedLogInfo.getListOfLogLevels().size());

    List&lt;NameValuePair&gt; returnedLevelList =
      returnedLogInfo.getListOfLogLevels();

    assertEquals("NameValue name for log level was incorrect",
      "ERROR", returnedLevelList.get(0).getName());
    assertEquals("NameValue name for log level was incorrect",
      "150", returnedLevelList.get(0).getValue());

    assertEquals("NameValue name for log level was incorrect",
      "WARN", returnedLevelList.get(1).getName());
    assertEquals("NameValue name for log level was incorrect",
      "500", returnedLevelList.get(1).getValue());

    assertEquals("NameValue name for log level was incorrect",
      "INFO", returnedLevelList.get(2).getName());
    assertEquals("NameValue name for log level was incorrect",
      "2200", returnedLevelList.get(2).getValue());

    // was not added to the HostComponent resource
    assertNull(returnedLogInfo.getListOfLogLevels());
 
     mockSupport.verifyAll();
   }
@@ -273,9 +243,6 @@ public class LoggingSearchPropertyProviderTest {
     Predicate predicateMock =
       mockSupport.createMock(Predicate.class);
 
    LoggingSearchPropertyProvider.ControllerFactory factoryMock =
      mockSupport.createMock(LoggingSearchPropertyProvider.ControllerFactory.class);

     AmbariManagementController controllerMock =
       mockSupport.createMock(AmbariManagementController.class);
 
@@ -297,7 +264,9 @@ public class LoggingSearchPropertyProviderTest {
     LogDefinition logDefinitionMock =
       mockSupport.createMock(LogDefinition.class);
 
    expect(factoryMock.getAmbariManagementController()).andReturn(controllerMock);
    LogSearchDataRetrievalService dataRetrievalServiceMock =
      mockSupport.createMock(LogSearchDataRetrievalService.class);

     expect(controllerMock.getAmbariMetaInfo()).andReturn(metaInfoMock).atLeastOnce();
     expect(controllerMock.getClusters()).andReturn(clustersMock).atLeastOnce();
     expect(clustersMock.getCluster("clusterone")).andReturn(clusterMock).atLeastOnce();
@@ -308,16 +277,22 @@ public class LoggingSearchPropertyProviderTest {
     expect(metaInfoMock.getComponentToService(expectedStackName, expectedStackVersion, expectedComponentName)).andReturn(expectedServiceName).atLeastOnce();
     expect(metaInfoMock.getComponent(expectedStackName, expectedStackVersion, expectedServiceName, expectedComponentName)).andReturn(componentInfoMock).atLeastOnce();
 


     // simulate the case when LogSearch is not deployed, or is not available for some reason
    expect(helperFactoryMock.getHelper(controllerMock, "clusterone")).andReturn(null).atLeastOnce();
    expect(dataRetrievalServiceMock.getLogFileNames(expectedLogSearchComponentName, "c6401.ambari.apache.org", "clusterone")).andReturn(null).atLeastOnce();
 
     expect(componentInfoMock.getLogs()).andReturn(Collections.singletonList(logDefinitionMock)).atLeastOnce();
     expect(logDefinitionMock.getLogId()).andReturn(expectedLogSearchComponentName).atLeastOnce();
 
     mockSupport.replayAll();
 
    PropertyProvider propertyProvider =
      new LoggingSearchPropertyProvider(helperFactoryMock, factoryMock);
    LoggingSearchPropertyProvider propertyProvider =
      new LoggingSearchPropertyProvider();

    propertyProvider.setAmbariManagementController(controllerMock);
    propertyProvider.setLogSearchDataRetrievalService(dataRetrievalServiceMock);

 
     // execute the populate resources method, verify that no exceptions occur, due to
     // the LogSearch helper not being available
- 
2.19.1.windows.1

</comment></unit>
