<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/ambari/3b2e103b7e.java"><expr_stmt><expr><name>From</name> <literal type="number">3b2e103b7e36af9acd91fe3f6f057fb2163f7ef7</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Robert</name> <name><name>Levas</name> <argument_list type="generic">&lt;<argument><name>rlevas</name><annotation>@<name><name>hortonworks</name><operator>.</operator><name>com</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Wed</name></expr><operator>,</operator> <expr><literal type="number">2</literal> <name>Nov</name> <literal type="number">2016</literal> <literal type="number">12</literal><operator>:</operator><literal type="number">16</literal><operator>:</operator><literal type="number">40</literal> <operator>-</operator><literal type="number">0400</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>AMBARI</name><operator>-</operator><literal type="number">18751.</literal> <name>Upgrade</name> <name>Fails</name> <name>From</name> <literal type="number">2.4.2</literal> <name>to</name> <literal type="number">2.5</literal> <name>Due</name> <name>To</name> <name>Existing</name>
 <name>Role</name> <call><name>Authorizations</name> <argument_list>(<argument><expr><name>rlevas</name></expr></argument>)</argument_list></call>

<operator>--</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog242</name><operator>.</operator><name>java</name></name>     <operator>|</operator> <literal type="number">17</literal> <operator>++</operator><operator>++</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog250</name><operator>.</operator><name>java</name></name>     <operator>|</operator> <literal type="number">17</literal> <operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog242Test</name><operator>.</operator><name>java</name></name> <operator>|</operator> <literal type="number">90</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog250Test</name><operator>.</operator><name>java</name></name> <operator>|</operator> <literal type="number">92</literal> <operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <literal type="number">4</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">106</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">110</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog242</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog242</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">541f4da3dd</literal><operator>..</operator><name>f5445ea0be</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog242</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog242</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>upgrade</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>sql</name><operator>.</operator><name>SQLException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">123</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">125</literal></expr><operator>,</operator><expr><literal type="number">24</literal> @@ <specifier>public</specifier> <name>class</name> <name>UpgradeCatalog242</name> extends <name>AbstractUpgradeCatalog</name> <block>{
   @<expr><name>Override</name>
   <specifier>protected</specifier> <name>void</name> <call><name>executeDMLUpdates</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>AmbariException</name></expr></argument>, <argument><expr><name>SQLException</name> <block>{
     <expr><call><name>addNewConfigurationsFromXml</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <expr><call><name>createRoleAuthorizations</name><argument_list>()</argument_list></call></expr>;
     <expr><call><name>convertRolePrincipals</name><argument_list>()</argument_list></call></expr>;
   }</block>
 
  <comment type="block" format="javadoc">/**
   * Create new role authorizations: CLUSTER.RUN_CUSTOM_COMMAND and AMBARI.RUN_CUSTOM_COMMAND
   *
   * @throws SQLException
   */</comment>
  @<name>Transactional</name>
  <specifier>protected</specifier> <name>void</name> <call><name>createRoleAuthorizations</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>SQLException</name> <block>{
    <expr><call><name>addRoleAuthorization</name><argument_list>(<argument><expr><literal type="string">"CLUSTER.RUN_CUSTOM_COMMAND"</literal></expr></argument>, <argument><expr><literal type="string">"Perform custom cluster-level actions"</literal></expr></argument>,
        <argument><expr><call><name><name>Arrays</name><operator>.</operator><name>asList</name></name><argument_list>(<argument><expr><literal type="string">"AMBARI.ADMINISTRATOR:AMBARI"</literal></expr></argument>, <argument><expr><literal type="string">"CLUSTER.ADMINISTRATOR:CLUSTER"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>addRoleAuthorization</name><argument_list>(<argument><expr><literal type="string">"AMBARI.RUN_CUSTOM_COMMAND"</literal></expr></argument>, <argument><expr><literal type="string">"Perform custom administrative actions"</literal></expr></argument>,
        <argument><expr><call><name><name>Collections</name><operator>.</operator><name>singletonList</name></name><argument_list>(<argument><expr><literal type="string">"AMBARI.ADMINISTRATOR:AMBARI"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }

   protected <function><type><name>void</name></type> <name>updateTablesForMysql</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>SQLException</name></expr></argument></throws> <block>{<block_content>
     <decl_stmt><decl><type><specifier>final</specifier> <name><name>Configuration</name><operator>.</operator><name>DatabaseType</name></name></type> <name>databaseType</name> <init>= <expr><call><name><name>configuration</name><operator>.</operator><name>getDatabaseType</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <if_stmt><if>if <condition>(<expr><name>databaseType</name> <operator>==</operator> <name><name>Configuration</name><operator>.</operator><name>DatabaseType</name><operator>.</operator><name>MYSQL</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog250</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog250</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">723edf4c89</literal><operator>..</operator><name>fa7121c81f</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog250</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog250</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>upgrade</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>sql</name><operator>.</operator><name>SQLException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">131</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">130</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>UpgradeCatalog250</name> extends <name>AbstractUpgradeCatalog</name> <block>{
   @<expr><name>Override</name>
   <specifier>protected</specifier> <name>void</name> <call><name>executeDMLUpdates</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>AmbariException</name></expr></argument>, <argument><expr><name>SQLException</name> <block>{
     <expr><call><name>updateAMSConfigs</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <call><name>createRoleAuthorizations</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>updateKafkaConfigs</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></if></if_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">192</literal></expr><operator>,</operator><expr><literal type="number">21</literal> <operator>+</operator><literal type="number">190</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>UpgradeCatalog250</name> extends <name>AbstractUpgradeCatalog</name> <block>{
     <return>return <expr><name>content</name></expr>;</return>
   }</block></expr></expr_stmt>
 
  <comment type="block" format="javadoc">/**
   * Create new role authorizations: CLUSTER.RUN_CUSTOM_COMMAND and AMBARI.RUN_CUSTOM_COMMAND
   *
   * @throws SQLException
   */</comment>
  <function><type><specifier>protected</specifier> <name>void</name></type> <name>createRoleAuthorizations</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>SQLException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Adding authorizations"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>addRoleAuthorization</name><argument_list>(<argument><expr><literal type="string">"CLUSTER.RUN_CUSTOM_COMMAND"</literal></expr></argument>, <argument><expr><literal type="string">"Perform custom cluster-level actions"</literal></expr></argument>,
        <argument><expr><call><name><name>Arrays</name><operator>.</operator><name>asList</name></name><argument_list>(<argument><expr><literal type="string">"AMBARI.ADMINISTRATOR:AMBARI"</literal></expr></argument>, <argument><expr><literal type="string">"CLUSTER.ADMINISTRATOR:CLUSTER"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>addRoleAuthorization</name><argument_list>(<argument><expr><literal type="string">"AMBARI.RUN_CUSTOM_COMMAND"</literal></expr></argument>, <argument><expr><literal type="string">"Perform custom administrative actions"</literal></expr></argument>,
      <argument><expr><call><name><name>Collections</name><operator>.</operator><name>singletonList</name></name><argument_list>(<argument><expr><literal type="string">"AMBARI.ADMINISTRATOR:AMBARI"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

   <function><type><specifier>protected</specifier> <name>void</name></type> <name>updateKafkaConfigs</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>AmbariException</name></expr></argument></throws> <block>{<block_content>
     <decl_stmt><decl><type><name>AmbariManagementController</name></type> <name>ambariManagementController</name> <init>= <expr><call><name><name>injector</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name><name>AmbariManagementController</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>Clusters</name></type> <name>clusters</name> <init>= <expr><call><name><name>ambariManagementController</name><operator>.</operator><name>getClusters</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog242Test</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog242Test</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>d6f33369ab</name><operator>..</operator><name>d98a2162d6</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog242Test</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog242Test</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>upgrade</name></name>;</package>
 
 <import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>EntityManager</name></name>;</import>
 <import>import <name><name>junit</name><operator>.</operator><name>framework</name><operator>.</operator><name>Assert</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>aryEq</name></name>;</import>
 
 <import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>anyString</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>aryEq</name></name>;</import>
 <import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>capture</name></name>;</import>
 <import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>createMockBuilder</name></name>;</import>
 <import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>createNiceMock</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">38</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">38</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>verify</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>reflect</name><operator>.</operator><name>Method</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>sql</name><operator>.</operator><name>SQLException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collection</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">57</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">58</literal></expr><operator>,</operator><expr><literal type="number">16</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>dao</name><operator>.</operator><name>PrincipalDAO</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>dao</name><operator>.</operator><name>PrincipalTypeDAO</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>dao</name><operator>.</operator><name>PrivilegeDAO</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>dao</name><operator>.</operator><name>RepositoryVersionDAO</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>dao</name><operator>.</operator><name>ResourceTypeDAO</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>dao</name><operator>.</operator><name>RoleAuthorizationDAO</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>dao</name><operator>.</operator><name>StackDAO</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>PermissionEntity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>PrincipalEntity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>PrincipalTypeEntity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>PrivilegeEntity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>ResourceEntity</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>ResourceTypeEntity</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>RoleAuthorizationEntity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>StackEntity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>stack</name><operator>.</operator><name>OsFamily</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>Capture</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">239</literal></expr><operator>,</operator><expr><literal type="number">16</literal> <operator>+</operator><literal type="number">244</literal></expr><operator>,</operator><expr><literal type="number">21</literal> @@ <specifier>public</specifier> <name>class</name> <name>UpgradeCatalog242Test</name> <block>{
   <expr><specifier>public</specifier> <name>void</name> <call><name>testExecuteDMLUpdates</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><name>Method</name> <name>addNewConfigurationsFromXml</name> <operator>=</operator> <call><name><name>AbstractUpgradeCatalog</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getDeclaredMethod</name></name></name><argument_list>(<argument><expr><literal type="string">"addNewConfigurationsFromXml"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
     <expr><name>Method</name> <name>convertRolePrincipals</name> <operator>=</operator> <call><name><name>UpgradeCatalog242</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getDeclaredMethod</name></name></name><argument_list>(<argument><expr><literal type="string">"convertRolePrincipals"</literal></expr></argument>)</argument_list></call></expr>;
    <expr><name>Method</name> <name>createRoleAuthorizations</name> <operator>=</operator> <call><name><name>UpgradeCatalog242</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getDeclaredMethod</name></name></name><argument_list>(<argument><expr><literal type="string">"createRoleAuthorizations"</literal></expr></argument>)</argument_list></call></expr>;
 
     <expr><name>UpgradeCatalog242</name> <name>upgradeCatalog242</name> <operator>=</operator> <call><name>createMockBuilder</name><argument_list>(<argument><expr><name><name>UpgradeCatalog242</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call>
         <operator>.</operator><call><name>addMockedMethod</name><argument_list>(<argument><expr><name>addNewConfigurationsFromXml</name></expr></argument>)</argument_list></call>
         <operator>.</operator><call><name>addMockedMethod</name><argument_list>(<argument><expr><name>convertRolePrincipals</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>addMockedMethod</name><argument_list>(<argument><expr><name>createRoleAuthorizations</name></expr></argument>)</argument_list></call>
         <operator>.</operator><call><name>createMock</name><argument_list>()</argument_list></call></expr>;
 
 
     <expr><call><name><name>upgradeCatalog242</name><operator>.</operator><name>addNewConfigurationsFromXml</name></name><argument_list>()</argument_list></call></expr>;
     <expr><call><name>expectLastCall</name><argument_list>()</argument_list></call><operator>.</operator><call><name>once</name><argument_list>()</argument_list></call></expr>;
 
    <expr><call><name><name>upgradeCatalog242</name><operator>.</operator><name>createRoleAuthorizations</name></name><argument_list>()</argument_list></call></expr>;
    <expr><call><name>expectLastCall</name><argument_list>()</argument_list></call><operator>.</operator><call><name>once</name><argument_list>()</argument_list></call></expr>;

     <expr><call><name><name>upgradeCatalog242</name><operator>.</operator><name>convertRolePrincipals</name></name><argument_list>()</argument_list></call></expr>;
     <expr><call><name>expectLastCall</name><argument_list>()</argument_list></call><operator>.</operator><call><name>once</name><argument_list>()</argument_list></call></expr>;
 
@@ <expr><operator>-</operator><literal type="number">365</literal></expr>,<expr><literal type="number">4</literal> <operator>+</operator><literal type="number">375</literal></expr>,<expr><literal type="number">82</literal> @@ <specifier>public</specifier> <name>class</name> <name>UpgradeCatalog242Test</name> <block>{
     <expr><call><name><name>upgradeCatalog</name><operator>.</operator><name>convertRolePrincipals</name></name><argument_list>()</argument_list></call></expr>;
     <expr><call><name><name>easyMockSupport</name><operator>.</operator><name>verifyAll</name></name><argument_list>()</argument_list></call></expr>;
   }</block>

  @<name>Test</name>
  <specifier>public</specifier> <name>void</name> <call><name>testCreateRoleAuthorizations</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>AmbariException</name></expr></argument>, <argument><expr><name>SQLException</name> <block>{

    <expr><name>EasyMockSupport</name> <name>easyMockSupport</name> <operator>=</operator> <operator>new</operator> <call><name>EasyMockSupport</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;

    <expr><name>ResourceTypeEntity</name> <name>ambariResourceTypeEntity</name> <operator>=</operator> <call><name><name>easyMockSupport</name><operator>.</operator><name>createMock</name></name><argument_list>(<argument><expr><name><name>ResourceTypeEntity</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;

    <expr><name>ResourceTypeEntity</name> <name>clusterResourceTypeEntity</name> <operator>=</operator> <call><name><name>easyMockSupport</name><operator>.</operator><name>createMock</name></name><argument_list>(<argument><expr><name><name>ResourceTypeEntity</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;

    <expr><name><name>Collection</name><argument_list type="generic">&lt;<argument><name>RoleAuthorizationEntity</name></argument>&gt;</argument_list></name> <name>ambariAdministratorAuthorizations</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>RoleAuthorizationEntity</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
    <expr><name><name>Collection</name><argument_list type="generic">&lt;<argument><name>RoleAuthorizationEntity</name></argument>&gt;</argument_list></name> <name>clusterAdministratorAuthorizations</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>RoleAuthorizationEntity</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;

    <expr><name>PermissionEntity</name> <name>clusterAdministratorPermissionEntity</name> <operator>=</operator> <call><name><name>easyMockSupport</name><operator>.</operator><name>createMock</name></name><argument_list>(<argument><expr><name><name>PermissionEntity</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>clusterAdministratorPermissionEntity</name><operator>.</operator><name>getAuthorizations</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>clusterAdministratorAuthorizations</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>times</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;

    <expr><name>PermissionEntity</name> <name>ambariAdministratorPermissionEntity</name> <operator>=</operator> <call><name><name>easyMockSupport</name><operator>.</operator><name>createMock</name></name><argument_list>(<argument><expr><name><name>PermissionEntity</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>ambariAdministratorPermissionEntity</name><operator>.</operator><name>getAuthorizations</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>ambariAdministratorAuthorizations</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>times</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;

    <expr><name>PermissionDAO</name> <name>permissionDAO</name> <operator>=</operator> <call><name><name>easyMockSupport</name><operator>.</operator><name>createMock</name></name><argument_list>(<argument><expr><name><name>PermissionDAO</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>permissionDAO</name><operator>.</operator><name>findPermissionByNameAndType</name></name><argument_list>(<argument><expr><literal type="string">"AMBARI.ADMINISTRATOR"</literal></expr></argument>, <argument><expr><name>ambariResourceTypeEntity</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>ambariAdministratorPermissionEntity</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>times</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>permissionDAO</name><operator>.</operator><name>findPermissionByNameAndType</name></name><argument_list>(<argument><expr><literal type="string">"CLUSTER.ADMINISTRATOR"</literal></expr></argument>, <argument><expr><name>clusterResourceTypeEntity</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>clusterAdministratorPermissionEntity</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>times</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>permissionDAO</name><operator>.</operator><name>merge</name></name><argument_list>(<argument><expr><name>ambariAdministratorPermissionEntity</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>ambariAdministratorPermissionEntity</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>times</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>permissionDAO</name><operator>.</operator><name>merge</name></name><argument_list>(<argument><expr><name>clusterAdministratorPermissionEntity</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>clusterAdministratorPermissionEntity</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>times</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;

    <expr><name>ResourceTypeDAO</name> <name>resourceTypeDAO</name> <operator>=</operator> <call><name><name>easyMockSupport</name><operator>.</operator><name>createMock</name></name><argument_list>(<argument><expr><name><name>ResourceTypeDAO</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>resourceTypeDAO</name><operator>.</operator><name>findByName</name></name><argument_list>(<argument><expr><literal type="string">"AMBARI"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>ambariResourceTypeEntity</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>times</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>resourceTypeDAO</name><operator>.</operator><name>findByName</name></name><argument_list>(<argument><expr><literal type="string">"CLUSTER"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>clusterResourceTypeEntity</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>times</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;

    <expr><name>RoleAuthorizationDAO</name> <name>roleAuthorizationDAO</name> <operator>=</operator> <call><name><name>easyMockSupport</name><operator>.</operator><name>createMock</name></name><argument_list>(<argument><expr><name><name>RoleAuthorizationDAO</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>roleAuthorizationDAO</name><operator>.</operator><name>findById</name></name><argument_list>(<argument><expr><literal type="string">"CLUSTER.RUN_CUSTOM_COMMAND"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>times</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>roleAuthorizationDAO</name><operator>.</operator><name>findById</name></name><argument_list>(<argument><expr><literal type="string">"AMBARI.RUN_CUSTOM_COMMAND"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>times</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;

    <expr><name><name>Capture</name><argument_list type="generic">&lt;<argument><name>RoleAuthorizationEntity</name></argument>&gt;</argument_list></name> <name>captureClusterRunCustomCommandEntity</name> <operator>=</operator> <call><name>newCapture</name><argument_list>()</argument_list></call></expr>;
    <expr><call><name><name>roleAuthorizationDAO</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><call><name>capture</name><argument_list>(<argument><expr><name>captureClusterRunCustomCommandEntity</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>expectLastCall</name><argument_list>()</argument_list></call><operator>.</operator><call><name>times</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;

    <expr><name><name>Capture</name><argument_list type="generic">&lt;<argument><name>RoleAuthorizationEntity</name></argument>&gt;</argument_list></name> <name>captureAmbariRunCustomCommandEntity</name> <operator>=</operator> <call><name>newCapture</name><argument_list>()</argument_list></call></expr>;
    <expr><call><name><name>roleAuthorizationDAO</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><call><name>capture</name><argument_list>(<argument><expr><name>captureAmbariRunCustomCommandEntity</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>expectLastCall</name><argument_list>()</argument_list></call><operator>.</operator><call><name>times</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;

    <expr><name>Injector</name> <name>injector</name> <operator>=</operator> <call><name><name>easyMockSupport</name><operator>.</operator><name>createNiceMock</name></name><argument_list>(<argument><expr><name><name>Injector</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>injector</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name><name>RoleAuthorizationDAO</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>roleAuthorizationDAO</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>atLeastOnce</name><argument_list>()</argument_list></call></expr>;
    <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>injector</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name><name>PermissionDAO</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>permissionDAO</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>atLeastOnce</name><argument_list>()</argument_list></call></expr>;
    <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>injector</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name><name>ResourceTypeDAO</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>resourceTypeDAO</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>atLeastOnce</name><argument_list>()</argument_list></call></expr>;

    <expr><call><name><name>easyMockSupport</name><operator>.</operator><name>replayAll</name></name><argument_list>()</argument_list></call></expr>;
    <expr><operator>new</operator> <call><name>UpgradeCatalog242</name><argument_list>(<argument><expr><name>injector</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>createRoleAuthorizations</name><argument_list>()</argument_list></call></expr>;
    <expr><call><name><name>easyMockSupport</name><operator>.</operator><name>verifyAll</name></name><argument_list>()</argument_list></call></expr>;

    <expr><name>RoleAuthorizationEntity</name> <name>ambariRunCustomCommandEntity</name> <operator>=</operator> <call><name><name>captureAmbariRunCustomCommandEntity</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr>;
    <expr><name>RoleAuthorizationEntity</name> <name>clusterRunCustomCommandEntity</name> <operator>=</operator> <call><name><name>captureClusterRunCustomCommandEntity</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr>;

    <expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="string">"AMBARI.RUN_CUSTOM_COMMAND"</literal></expr></argument>, <argument><expr><call><name><name>ambariRunCustomCommandEntity</name><operator>.</operator><name>getAuthorizationId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="string">"Perform custom administrative actions"</literal></expr></argument>, <argument><expr><call><name><name>ambariRunCustomCommandEntity</name><operator>.</operator><name>getAuthorizationName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;

    <expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="string">"CLUSTER.RUN_CUSTOM_COMMAND"</literal></expr></argument>, <argument><expr><call><name><name>clusterRunCustomCommandEntity</name><operator>.</operator><name>getAuthorizationId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="string">"Perform custom cluster-level actions"</literal></expr></argument>, <argument><expr><call><name><name>clusterRunCustomCommandEntity</name><operator>.</operator><name>getAuthorizationName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;

    <expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><call><name><name>ambariAdministratorAuthorizations</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>Assert</name><operator>.</operator><name>assertTrue</name></name><argument_list>(<argument><expr><call><name><name>ambariAdministratorAuthorizations</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><name>clusterRunCustomCommandEntity</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>Assert</name><operator>.</operator><name>assertTrue</name></name><argument_list>(<argument><expr><call><name><name>ambariAdministratorAuthorizations</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><name>ambariRunCustomCommandEntity</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;

    <expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><call><name><name>clusterAdministratorAuthorizations</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>Assert</name><operator>.</operator><name>assertTrue</name></name><argument_list>(<argument><expr><call><name><name>clusterAdministratorAuthorizations</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><name>clusterRunCustomCommandEntity</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
  }</block></expr></expr_stmt>
 </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog250Test</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog250Test</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">65ba406183</literal><operator>..</operator><literal type="number">6d2011b6a4</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog250Test</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog250Test</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">36</literal></expr><operator>,</operator><expr><literal type="number">17</literal> <operator>+</operator><literal type="number">36</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@</expr></expr_stmt> <import>import static <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertTrue</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>reflect</name><operator>.</operator><name>Method</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>sql</name><operator>.</operator><name>Connection</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>sql</name><operator>.</operator><name>ResultSet</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>sql</name><operator>.</operator><name>SQLException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>sql</name><operator>.</operator><name>Statement</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collection</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 
 <import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>EntityManager</name></name>;</import>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>AmbariException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>actionmanager</name><operator>.</operator><name>ActionManager</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>configuration</name><operator>.</operator><name>Configuration</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>AmbariManagementController</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">54</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">50</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>AmbariManagementControllerImpl</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>KerberosHelper</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>MaintenanceStateHelper</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>DBAccessor</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>dao</name><operator>.</operator><name>PermissionDAO</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>dao</name><operator>.</operator><name>ResourceTypeDAO</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>dao</name><operator>.</operator><name>RoleAuthorizationDAO</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>PermissionEntity</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>ResourceTypeEntity</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>RoleAuthorizationEntity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>Cluster</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>Clusters</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>Config</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">209</literal></expr><operator>,</operator><expr><literal type="number">21</literal> <operator>+</operator><literal type="number">199</literal></expr><operator>,</operator><expr><literal type="number">16</literal> @@ <specifier>public</specifier> <name>class</name> <name>UpgradeCatalog250Test</name> <block>{
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testExecuteDMLUpdates</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><name>Method</name> <name>updateAmsConfigs</name> <operator>=</operator> <call><name><name>UpgradeCatalog250</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getDeclaredMethod</name></name></name><argument_list>(<argument><expr><literal type="string">"updateAMSConfigs"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <expr><name>Method</name> <name>createRoleAuthorizations</name> <operator>=</operator> <call><name><name>UpgradeCatalog250</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getDeclaredMethod</name></name></name><argument_list>(<argument><expr><literal type="string">"createRoleAuthorizations"</literal></expr></argument>)</argument_list></call></expr>;
     <expr><name>Method</name> <name>updateKafkaConfigs</name> <operator>=</operator> <call><name><name>UpgradeCatalog250</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getDeclaredMethod</name></name></name><argument_list>(<argument><expr><literal type="string">"updateKafkaConfigs"</literal></expr></argument>)</argument_list></call></expr>;
 
     <expr><name>UpgradeCatalog250</name> <name>upgradeCatalog250</name> <operator>=</operator> <call><name>createMockBuilder</name><argument_list>(<argument><expr><name><name>UpgradeCatalog250</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call>
         <operator>.</operator><call><name>addMockedMethod</name><argument_list>(<argument><expr><name>updateAmsConfigs</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>addMockedMethod</name><argument_list>(<argument><expr><name>createRoleAuthorizations</name></expr></argument>)</argument_list></call>
         <operator>.</operator><call><name>addMockedMethod</name><argument_list>(<argument><expr><name>updateKafkaConfigs</name></expr></argument>)</argument_list></call>
         <operator>.</operator><call><name>createMock</name><argument_list>()</argument_list></call></expr>;
 
     <expr><call><name><name>upgradeCatalog250</name><operator>.</operator><name>updateAMSConfigs</name></name><argument_list>()</argument_list></call></expr>;
     <expr><call><name>expectLastCall</name><argument_list>()</argument_list></call><operator>.</operator><call><name>once</name><argument_list>()</argument_list></call></expr>;
 
    <expr><call><name><name>upgradeCatalog250</name><operator>.</operator><name>createRoleAuthorizations</name></name><argument_list>()</argument_list></call></expr>;
    <expr><call><name>expectLastCall</name><argument_list>()</argument_list></call><operator>.</operator><call><name>once</name><argument_list>()</argument_list></call></expr>;

     <expr><call><name><name>upgradeCatalog250</name><operator>.</operator><name>updateKafkaConfigs</name></name><argument_list>()</argument_list></call></expr>;
     <expr><call><name>expectLastCall</name><argument_list>()</argument_list></call><operator>.</operator><call><name>once</name><argument_list>()</argument_list></call></expr>;
 
@@ <expr><operator>-</operator><literal type="number">305</literal></expr>,<expr><literal type="number">83</literal> <operator>+</operator><literal type="number">290</literal></expr>,<expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>UpgradeCatalog250Test</name> <block>{
     <expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>Maps</name><operator>.</operator><name>difference</name></name><argument_list>(<argument><expr><name>newPropertiesAmsEnv</name></expr></argument>, <argument><expr><name>updatedProperties</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>areEqual</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
   }</block>
 
  @<name>Test</name>
  <specifier>public</specifier> <name>void</name> <call><name>testCreateRoleAuthorizations</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>AmbariException</name></expr></argument>, <argument><expr><name>SQLException</name> <block>{

    <expr><name>EasyMockSupport</name> <name>easyMockSupport</name> <operator>=</operator> <operator>new</operator> <call><name>EasyMockSupport</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;

    <expr><name>ResourceTypeEntity</name> <name>ambariResourceTypeEntity</name> <operator>=</operator> <call><name><name>easyMockSupport</name><operator>.</operator><name>createMock</name></name><argument_list>(<argument><expr><name><name>ResourceTypeEntity</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;

    <expr><name>ResourceTypeEntity</name> <name>clusterResourceTypeEntity</name> <operator>=</operator> <call><name><name>easyMockSupport</name><operator>.</operator><name>createMock</name></name><argument_list>(<argument><expr><name><name>ResourceTypeEntity</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;

    <expr><name><name>Collection</name><argument_list type="generic">&lt;<argument><name>RoleAuthorizationEntity</name></argument>&gt;</argument_list></name> <name>ambariAdministratorAuthorizations</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>RoleAuthorizationEntity</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
    <expr><name><name>Collection</name><argument_list type="generic">&lt;<argument><name>RoleAuthorizationEntity</name></argument>&gt;</argument_list></name> <name>clusterAdministratorAuthorizations</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>RoleAuthorizationEntity</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;

    <expr><name>PermissionEntity</name> <name>clusterAdministratorPermissionEntity</name> <operator>=</operator> <call><name><name>easyMockSupport</name><operator>.</operator><name>createMock</name></name><argument_list>(<argument><expr><name><name>PermissionEntity</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>clusterAdministratorPermissionEntity</name><operator>.</operator><name>getAuthorizations</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>clusterAdministratorAuthorizations</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>times</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;

    <expr><name>PermissionEntity</name> <name>ambariAdministratorPermissionEntity</name> <operator>=</operator> <call><name><name>easyMockSupport</name><operator>.</operator><name>createMock</name></name><argument_list>(<argument><expr><name><name>PermissionEntity</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>ambariAdministratorPermissionEntity</name><operator>.</operator><name>getAuthorizations</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>ambariAdministratorAuthorizations</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>times</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;

    <expr><name>PermissionDAO</name> <name>permissionDAO</name> <operator>=</operator> <call><name><name>easyMockSupport</name><operator>.</operator><name>createMock</name></name><argument_list>(<argument><expr><name><name>PermissionDAO</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>permissionDAO</name><operator>.</operator><name>findPermissionByNameAndType</name></name><argument_list>(<argument><expr><literal type="string">"AMBARI.ADMINISTRATOR"</literal></expr></argument>, <argument><expr><name>ambariResourceTypeEntity</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>ambariAdministratorPermissionEntity</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>times</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>permissionDAO</name><operator>.</operator><name>findPermissionByNameAndType</name></name><argument_list>(<argument><expr><literal type="string">"CLUSTER.ADMINISTRATOR"</literal></expr></argument>, <argument><expr><name>clusterResourceTypeEntity</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>clusterAdministratorPermissionEntity</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>times</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>permissionDAO</name><operator>.</operator><name>merge</name></name><argument_list>(<argument><expr><name>ambariAdministratorPermissionEntity</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>ambariAdministratorPermissionEntity</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>times</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>permissionDAO</name><operator>.</operator><name>merge</name></name><argument_list>(<argument><expr><name>clusterAdministratorPermissionEntity</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>clusterAdministratorPermissionEntity</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>times</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;

    <expr><name>ResourceTypeDAO</name> <name>resourceTypeDAO</name> <operator>=</operator> <call><name><name>easyMockSupport</name><operator>.</operator><name>createMock</name></name><argument_list>(<argument><expr><name><name>ResourceTypeDAO</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>resourceTypeDAO</name><operator>.</operator><name>findByName</name></name><argument_list>(<argument><expr><literal type="string">"AMBARI"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>ambariResourceTypeEntity</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>times</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>resourceTypeDAO</name><operator>.</operator><name>findByName</name></name><argument_list>(<argument><expr><literal type="string">"CLUSTER"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>clusterResourceTypeEntity</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>times</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;

    <expr><name>RoleAuthorizationDAO</name> <name>roleAuthorizationDAO</name> <operator>=</operator> <call><name><name>easyMockSupport</name><operator>.</operator><name>createMock</name></name><argument_list>(<argument><expr><name><name>RoleAuthorizationDAO</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>roleAuthorizationDAO</name><operator>.</operator><name>findById</name></name><argument_list>(<argument><expr><literal type="string">"CLUSTER.RUN_CUSTOM_COMMAND"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>times</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>roleAuthorizationDAO</name><operator>.</operator><name>findById</name></name><argument_list>(<argument><expr><literal type="string">"AMBARI.RUN_CUSTOM_COMMAND"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>times</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;

    <expr><name><name>Capture</name><argument_list type="generic">&lt;<argument><name>RoleAuthorizationEntity</name></argument>&gt;</argument_list></name> <name>captureClusterRunCustomCommandEntity</name> <operator>=</operator> <call><name>newCapture</name><argument_list>()</argument_list></call></expr>;
    <expr><call><name><name>roleAuthorizationDAO</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><call><name>capture</name><argument_list>(<argument><expr><name>captureClusterRunCustomCommandEntity</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>expectLastCall</name><argument_list>()</argument_list></call><operator>.</operator><call><name>times</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;

    <expr><name><name>Capture</name><argument_list type="generic">&lt;<argument><name>RoleAuthorizationEntity</name></argument>&gt;</argument_list></name> <name>captureAmbariRunCustomCommandEntity</name> <operator>=</operator> <call><name>newCapture</name><argument_list>()</argument_list></call></expr>;
    <expr><call><name><name>roleAuthorizationDAO</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><call><name>capture</name><argument_list>(<argument><expr><name>captureAmbariRunCustomCommandEntity</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>expectLastCall</name><argument_list>()</argument_list></call><operator>.</operator><call><name>times</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;

    <expr><name>Injector</name> <name>injector</name> <operator>=</operator> <call><name><name>easyMockSupport</name><operator>.</operator><name>createNiceMock</name></name><argument_list>(<argument><expr><name><name>Injector</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>injector</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name><name>RoleAuthorizationDAO</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>roleAuthorizationDAO</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>atLeastOnce</name><argument_list>()</argument_list></call></expr>;
    <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>injector</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name><name>PermissionDAO</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>permissionDAO</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>atLeastOnce</name><argument_list>()</argument_list></call></expr>;
    <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>injector</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name><name>ResourceTypeDAO</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>resourceTypeDAO</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>atLeastOnce</name><argument_list>()</argument_list></call></expr>;

    <expr><call><name><name>easyMockSupport</name><operator>.</operator><name>replayAll</name></name><argument_list>()</argument_list></call></expr>;
    <expr><operator>new</operator> <call><name>UpgradeCatalog250</name><argument_list>(<argument><expr><name>injector</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>createRoleAuthorizations</name><argument_list>()</argument_list></call></expr>;
    <expr><call><name><name>easyMockSupport</name><operator>.</operator><name>verifyAll</name></name><argument_list>()</argument_list></call></expr>;

    <expr><name>RoleAuthorizationEntity</name> <name>ambariRunCustomCommandEntity</name> <operator>=</operator> <call><name><name>captureAmbariRunCustomCommandEntity</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr>;
    <expr><name>RoleAuthorizationEntity</name> <name>clusterRunCustomCommandEntity</name> <operator>=</operator> <call><name><name>captureClusterRunCustomCommandEntity</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr>;

    <expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="string">"AMBARI.RUN_CUSTOM_COMMAND"</literal></expr></argument>, <argument><expr><call><name><name>ambariRunCustomCommandEntity</name><operator>.</operator><name>getAuthorizationId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="string">"Perform custom administrative actions"</literal></expr></argument>, <argument><expr><call><name><name>ambariRunCustomCommandEntity</name><operator>.</operator><name>getAuthorizationName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;

    <expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="string">"CLUSTER.RUN_CUSTOM_COMMAND"</literal></expr></argument>, <argument><expr><call><name><name>clusterRunCustomCommandEntity</name><operator>.</operator><name>getAuthorizationId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="string">"Perform custom cluster-level actions"</literal></expr></argument>, <argument><expr><call><name><name>clusterRunCustomCommandEntity</name><operator>.</operator><name>getAuthorizationName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;

    <expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><call><name><name>ambariAdministratorAuthorizations</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>Assert</name><operator>.</operator><name>assertTrue</name></name><argument_list>(<argument><expr><call><name><name>ambariAdministratorAuthorizations</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><name>clusterRunCustomCommandEntity</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>Assert</name><operator>.</operator><name>assertTrue</name></name><argument_list>(<argument><expr><call><name><name>ambariAdministratorAuthorizations</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><name>ambariRunCustomCommandEntity</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;

    <expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><call><name><name>clusterAdministratorAuthorizations</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>Assert</name><operator>.</operator><name>assertTrue</name></name><argument_list>(<argument><expr><call><name><name>clusterAdministratorAuthorizations</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><name>clusterRunCustomCommandEntity</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
  }</block>
 
   @<name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testKafkaUpdateConfigs</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name><block>{
<expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></block></expr></argument></throws></expr></expr_stmt></block_content></block></function>

</unit>
