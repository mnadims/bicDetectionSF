<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/ambari/8a2cb5b35a.java"><expr_stmt><expr><name>From</name> <literal type="number">8a2cb5b35a6c9b7a98185e96808551123e7fc647</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Artem</name> <name><name>Baranchuk</name> <argument_list type="generic">&lt;<argument><name>abaranchuk</name><annotation>@<name><name>hortonworks</name><operator>.</operator><name>con</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Fri</name></expr><operator>,</operator> <expr><literal type="number">19</literal> <name>Jun</name> <literal type="number">2015</literal> <literal type="number">16</literal><operator>:</operator><literal type="number">32</literal><operator>:</operator><literal type="number">03</literal> <operator>+</operator><literal type="number">0300</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>AMBARI</name><operator>-</operator><literal type="number">11991</literal> <operator>-</operator> <name>Fixing</name> <name>of</name> <name>leak</name> <name>resources</name> <name>which</name> <name>potentially</name> <name>can</name>
 <name>reduce</name> <name>system</name> <name>performance</name> <name>and</name> <call><name>security</name> <argument_list>(<argument><expr><name>Dmytro</name> <name>Shkvyra</name> <name>via</name> <name>abaranchuk</name></expr></argument>)</argument_list></call>

<operator>--</operator>
 <operator>...</operator><operator>/</operator><name>timeline</name><operator>/</operator><name><name>PhoenixHBaseAccessor</name><operator>.</operator><name>java</name></name>        <operator>|</operator>  <literal type="number">18</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>timeline</name><operator>/</operator><name>query</name><operator>/</operator><name><name>PhoenixTransactSQL</name><operator>.</operator><name>java</name></name>    <operator>|</operator> <literal type="number">153</literal> <operator>++</operator><operator>++</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>ambari</name><operator>/</operator><name>eventdb</name><operator>/</operator><name>db</name><operator>/</operator><name><name>PostgresConnector</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">12</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>agent</name><operator>/</operator><name><name>HeartBeatHandler</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">7</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name><name>AmbariMetaInfo</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>services</name><operator>/</operator><name>serializers</name><operator>/</operator><name><name>CsvSerializer</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">23</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>gsinstaller</name><operator>/</operator><name><name>ClusterDefinition</name><operator>.</operator><name>java</name></name>        <operator>|</operator>  <literal type="number">10</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>internal</name><operator>/</operator><name><name>URLStreamProvider</name><operator>.</operator><name>java</name></name>           <operator>|</operator>  <literal type="number">13</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>controller</name><operator>/</operator><name>jdbc</name><operator>/</operator><name><name>JDBCResourceProvider</name><operator>.</operator><name>java</name></name> <operator>|</operator> <literal type="number">154</literal> <operator>++</operator><operator>++</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>metrics</name><operator>/</operator><name><name>RestMetricsPropertyProvider</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">9</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name><name>DBAccessorImpl</name><operator>.</operator><name>java</name></name>     <operator>|</operator> <literal type="number">337</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>entities</name><operator>/</operator><name><name>ViewEntity</name><operator>.</operator><name>java</name></name>       <operator>|</operator>   <literal type="number">1</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>helpers</name><operator>/</operator><name><name>ScriptRunner</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">14</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>CredentialStoreServiceImpl</name><operator>.</operator><name>java</name></name>           <operator>|</operator>   <literal type="number">9</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog170</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">86</literal> <operator>++</operator><operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name>view</name><operator>/</operator><name><name>ViewArchiveUtility</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  <literal type="number">30</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>view</name><operator>/</operator><name><name>ViewRegistry</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>CredentialStoreServiceTest</name><operator>.</operator><name>java</name></name>           <operator>|</operator>   <literal type="number">1</literal> <operator>-</operator>
 <operator>...</operator><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>view</name><operator>/</operator><name><name>ViewRegistryTest</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">14</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>shell</name><operator>/</operator><name><name>AmbariShell</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">1</literal> <operator>-</operator>
 <operator>...</operator><operator>/</operator><name>shell</name><operator>/</operator><name>commands</name><operator>/</operator><name><name>BlueprintCommands</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">11</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>shell</name><operator>/</operator><name>commands</name><operator>/</operator><name><name>ElephantCommand</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  <literal type="number">13</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>shell</name><operator>/</operator><name>customization</name><operator>/</operator><name><name>AmbariBanner</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">18</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>ambari</name><operator>/</operator><name>shell</name><operator>/</operator><name>flash</name><operator>/</operator><name><name>InstallProgress</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <literal type="number">24</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">585</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">363</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>metrics</name><operator>/</operator><name>ambari</name><operator>-</operator><name>metrics</name><operator>-</operator><name>timelineservice</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>yarn</name><operator>/</operator><name>server</name><operator>/</operator><name>applicationhistoryservice</name><operator>/</operator><name>metrics</name><operator>/</operator><name>timeline</name><operator>/</operator><name><name>PhoenixHBaseAccessor</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>metrics</name><operator>/</operator><name>ambari</name><operator>-</operator><name>metrics</name><operator>-</operator><name>timelineservice</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>yarn</name><operator>/</operator><name>server</name><operator>/</operator><name>applicationhistoryservice</name><operator>/</operator><name>metrics</name><operator>/</operator><name>timeline</name><operator>/</operator><name><name>PhoenixHBaseAccessor</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">8e5d101ebb</literal><operator>..</operator><name>d018f2984c</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>metrics</name><operator>/</operator><name>ambari</name><operator>-</operator><name>metrics</name><operator>-</operator><name>timelineservice</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>yarn</name><operator>/</operator><name>server</name><operator>/</operator><name>applicationhistoryservice</name><operator>/</operator><name>metrics</name><operator>/</operator><name>timeline</name><operator>/</operator><name><name>PhoenixHBaseAccessor</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>metrics</name><operator>/</operator><name>ambari</name><operator>-</operator><name>metrics</name><operator>-</operator><name>timelineservice</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>hadoop</name><operator>/</operator><name>yarn</name><operator>/</operator><name>server</name><operator>/</operator><name>applicationhistoryservice</name><operator>/</operator><name>metrics</name><operator>/</operator><name>timeline</name><operator>/</operator><name><name>PhoenixHBaseAccessor</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">396</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">396</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>PhoenixHBaseAccessor</name> <block>{
     <try>try <block>{<block_content>
       <comment type="line">//get latest</comment>
       <if_stmt><if>if<condition>(<expr><call><name><name>condition</name><operator>.</operator><name>isPointInTime</name></name><argument_list>()</argument_list></call></expr>)</condition><block>{<block_content>
        <expr_stmt><expr><name>stmt</name> <operator>=</operator> <call><name>getLatestMetricRecords</name><argument_list>(<argument><expr><name>condition</name></expr></argument>, <argument><expr><name>conn</name></expr></argument>, <argument><expr><name>metrics</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>getLatestMetricRecords</name><argument_list>(<argument><expr><name>condition</name></expr></argument>, <argument><expr><name>conn</name></expr></argument>, <argument><expr><name>metrics</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt/></block_content></block></if></if_stmt></block_content></block></try>}</block></expr></expr_stmt> <if_stmt><else>else <block>{<block_content>
         <expr_stmt><expr><name>stmt</name> <operator>=</operator> <call><name><name>PhoenixTransactSQL</name><operator>.</operator><name>prepareGetMetricsSqlStmt</name></name><argument_list>(<argument><expr><name>conn</name></expr></argument>, <argument><expr><name>condition</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><name>rs</name> <operator>=</operator> <call><name><name>stmt</name><operator>.</operator><name>executeQuery</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">465</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">465</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>PhoenixHBaseAccessor</name> <block>{
     }</block></expr></expr_stmt>
   </block_content>}</block></else></if_stmt>
 
  <decl_stmt><decl><type><specifier>private</specifier> <name>PreparedStatement</name></type> <name>getLatestMetricRecords</name><argument_list>(
  <argument><expr><specifier>private</specifier> <name>void</name> <call><name>getLatestMetricRecords</name><argument_list>(
     <argument><expr><name>Condition</name> <name>condition</name></expr></argument>, <argument><expr><name>Connection</name> <name>conn</name></expr></argument>, <argument><expr><name>TimelineMetrics</name> <name>metrics</name></expr></argument>)</argument_list></call>
     <throws>throws <argument><expr><name>SQLException</name></expr></argument>, <argument><expr><name>IOException</name> <block>{</block></expr></argument>
 
@<argument>@ <expr><operator>-</operator><literal type="number">490</literal></expr></argument>,<argument><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">490</literal></expr></argument>,<argument><expr><literal type="number">10</literal> @@ <specifier>public</specifier> class <name>PhoenixHBaseAccessor</name></expr></argument></throws> <block>{<block_content>
           <comment type="line">// Ignore</comment>
         </block_content>}</block></expr></argument></argument_list></decl></decl_stmt>
       }
      if <expr_stmt><expr><operator>(</operator><name>stmt</name> <operator>!=</operator> <literal type="null">null</literal><operator>)</operator> <block>{
        <expr><call><name><name>stmt</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;
      }</block></expr></expr_stmt>
     }

    return <expr_stmt><expr><name>stmt</name></expr>;</expr_stmt>
   }
 
   <comment type="block" format="javadoc">/**
@@ -515,7 +516,7 @@ public class PhoenixHBaseAccessor {
     try {
       //get latest
       if(condition.isPointInTime()) {
        stmt = getLatestAggregateMetricRecords(condition, conn, metrics, metricFunctions);
        getLatestAggregateMetricRecords(condition, conn, metrics, metricFunctions);
       } else {
         stmt = PhoenixTransactSQL.prepareGetAggregateSqlStmt(conn, condition);
 
@@ -577,7 +578,7 @@ public class PhoenixHBaseAccessor {
     }
   }
 
  private PreparedStatement getLatestAggregateMetricRecords(Condition condition,
  private void getLatestAggregateMetricRecords(Condition condition,
       Connection conn, TimelineMetrics metrics,
       Map&lt;String, List&lt;Function&gt;&gt; metricFunctions) throws SQLException {
 
@@ -619,10 +620,11 @@ public class PhoenixHBaseAccessor {
             // Ignore
           }
         }
        if (stmt != null) {
          stmt.close();
        }        
       }
     }

    return stmt;
   }
 
   private SingleValuedTimelineMetric getAggregateTimelineMetricFromResultSet(ResultSet rs,
diff --git a/ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/metrics/timeline/query/PhoenixTransactSQL.java b/ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/metrics/timeline/query/PhoenixTransactSQL.java
index 2606773329..71f53caa8c 100644
-- a/ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/metrics/timeline/query/PhoenixTransactSQL.java
++ b/ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/metrics/timeline/query/PhoenixTransactSQL.java
@@ -318,7 +318,9 @@ public class PhoenixTransactSQL {
     if (LOG.isDebugEnabled()) {
       LOG.debug("SQL: " + sb.toString() + ", condition: " + condition);
     }
    PreparedStatement stmt = connection.prepareStatement(sb.toString());
    PreparedStatement stmt = null;
    try {
    stmt = connection.prepareStatement(sb.toString());
     int pos = 1;
     if (condition.getMetricNames() != null) {
       for (; pos &lt;= condition.getMetricNames().size(); pos++) {
@@ -363,6 +365,12 @@ public class PhoenixTransactSQL {
     if (condition.getFetchSize() != null) {
       stmt.setFetchSize(condition.getFetchSize());
     }
    } catch (SQLException e) {
      if (stmt != null) {
        stmt.close();
      }
      throw e;
    }
 
     return stmt;
   }
@@ -375,7 +383,7 @@ public class PhoenixTransactSQL {
 
   private static void validateRowCountLimit(Condition condition) {
     if (condition.getMetricNames() == null
      || condition.getMetricNames().size() ==0 ) {
      || condition.getMetricNames().isEmpty() ) {
       //aggregator can use empty metrics query
       return;
     }
@@ -399,14 +407,14 @@ public class PhoenixTransactSQL {
   }
 
   public static PreparedStatement prepareGetLatestMetricSqlStmt(
    Connection connection, Condition condition) throws SQLException {
          Connection connection, Condition condition) throws SQLException {
 
     validateConditionIsNotEmpty(condition);
 
     if (condition.getMetricNames() == null
      || condition.getMetricNames().size() == 0) {
      throw new IllegalArgumentException("Point in time query without " +
        "metric names not supported ");
            || condition.getMetricNames().isEmpty()) {
      throw new IllegalArgumentException("Point in time query without "
              + "metric names not supported ");
     }
 
     String stmtStr;
@@ -415,15 +423,15 @@ public class PhoenixTransactSQL {
     } else {
       //if not a single metric for a single host
       if (condition.getHostnames().size() &gt; 1
        &amp;&amp; condition.getMetricNames().size() &gt; 1) {
              &amp;&amp; condition.getMetricNames().size() &gt; 1) {
         stmtStr = String.format(GET_LATEST_METRIC_SQL,
          METRICS_RECORD_TABLE_NAME,
          METRICS_RECORD_TABLE_NAME,
          condition.getConditionClause());
                METRICS_RECORD_TABLE_NAME,
                METRICS_RECORD_TABLE_NAME,
                condition.getConditionClause());
       } else {
         StringBuilder sb = new StringBuilder(String.format(GET_METRIC_SQL,
          "",
          METRICS_RECORD_TABLE_NAME));
                "",
                METRICS_RECORD_TABLE_NAME));
         sb.append(" WHERE ");
         sb.append(condition.getConditionClause());
         String orderByClause = condition.getOrderByClause(false);
@@ -439,47 +447,55 @@ public class PhoenixTransactSQL {
     if (LOG.isDebugEnabled()) {
       LOG.debug("SQL: " + stmtStr + ", condition: " + condition);
     }
    PreparedStatement stmt = connection.prepareStatement(stmtStr);
    int pos = 1;
    if (condition.getMetricNames() != null) {
      //IGNORE condition limit, set one based on number of metric names
      for (; pos &lt;= condition.getMetricNames().size(); pos++) {
    PreparedStatement stmt = null;
    try {
      stmt = connection.prepareStatement(stmtStr);
      int pos = 1;
      if (condition.getMetricNames() != null) {
        //IGNORE condition limit, set one based on number of metric names
        for (; pos &lt;= condition.getMetricNames().size(); pos++) {
          if (LOG.isDebugEnabled()) {
            LOG.debug("Setting pos: " + pos + ", value = " + condition.getMetricNames().get(pos - 1));
          }
          stmt.setString(pos, condition.getMetricNames().get(pos - 1));
        }
      }
      if (condition.getHostnames() != null) {
        for (String hostname : condition.getHostnames()) {
          if (LOG.isDebugEnabled()) {
            LOG.debug("Setting pos: " + pos + ", value: " + hostname);
          }
          stmt.setString(pos++, hostname);
        }
      }
      if (condition.getAppId() != null) {
         if (LOG.isDebugEnabled()) {
          LOG.debug("Setting pos: " + pos + ", value = " + condition.getMetricNames().get(pos - 1));
          LOG.debug("Setting pos: " + pos + ", value: " + condition.getAppId());
         }
        stmt.setString(pos, condition.getMetricNames().get(pos - 1));
        stmt.setString(pos++, condition.getAppId());
       }
    }
    if (condition.getHostnames() != null) {
      for (String hostname: condition.getHostnames()) {
      if (condition.getInstanceId() != null) {
         if (LOG.isDebugEnabled()) {
          LOG.debug("Setting pos: " + pos + ", value: " + hostname);
          LOG.debug("Setting pos: " + pos + ", value: " + condition.getInstanceId());
         }
        stmt.setString(pos++, hostname);
        stmt.setString(pos, condition.getInstanceId());
       }
    }
    if (condition.getAppId() != null) {
      if (LOG.isDebugEnabled()) {
        LOG.debug("Setting pos: " + pos + ", value: " + condition.getAppId());

      if (condition.getFetchSize() != null) {
        stmt.setFetchSize(condition.getFetchSize());
       }
      stmt.setString(pos++, condition.getAppId());
    }
    if (condition.getInstanceId() != null) {
      if (LOG.isDebugEnabled()) {
        LOG.debug("Setting pos: " + pos + ", value: " + condition.getInstanceId());
    } catch (SQLException e) {
      if (stmt != null) {
        stmt.close();
       }
      stmt.setString(pos, condition.getInstanceId());
    }

    if (condition.getFetchSize() != null) {
      stmt.setFetchSize(condition.getFetchSize());
      throw e;
     }
 
     return stmt;
   }
 
   public static PreparedStatement prepareGetAggregateSqlStmt(
    Connection connection, Condition condition) throws SQLException {
          Connection connection, Condition condition) throws SQLException {
 
     validateConditionIsNotEmpty(condition);
 
@@ -519,8 +535,8 @@ public class PhoenixTransactSQL {
     }
 
     queryStmt = String.format(queryStmt,
      getNaiveTimeRangeHint(condition.getStartTime(), NATIVE_TIME_RANGE_DELTA),
      metricsAggregateTable);
            getNaiveTimeRangeHint(condition.getStartTime(), NATIVE_TIME_RANGE_DELTA),
            metricsAggregateTable);
 
     StringBuilder sb = new StringBuilder(queryStmt);
     sb.append(" WHERE ");
@@ -534,25 +550,34 @@ public class PhoenixTransactSQL {
     if (LOG.isDebugEnabled()) {
       LOG.debug("SQL =&gt; " + query + ", condition =&gt; " + condition);
     }
    PreparedStatement stmt = connection.prepareStatement(query);
    int pos = 1;
    if (condition.getMetricNames() != null) {
      for (; pos &lt;= condition.getMetricNames().size(); pos++) {
        stmt.setString(pos, condition.getMetricNames().get(pos - 1));
    PreparedStatement stmt = null;
    try {
      stmt = connection.prepareStatement(query);
      int pos = 1;

      if (condition.getMetricNames() != null) {
        for (; pos &lt;= condition.getMetricNames().size(); pos++) {
          stmt.setString(pos, condition.getMetricNames().get(pos - 1));
        }
       }
    }
    // TODO: Upper case all strings on POST
    if (condition.getAppId() != null) {
      stmt.setString(pos++, condition.getAppId());
    }
    if (condition.getInstanceId() != null) {
      stmt.setString(pos++, condition.getInstanceId());
    }
    if (condition.getStartTime() != null) {
      stmt.setLong(pos++, condition.getStartTime());
    }
    if (condition.getEndTime() != null) {
      stmt.setLong(pos, condition.getEndTime());
      // TODO: Upper case all strings on POST
      if (condition.getAppId() != null) {
        stmt.setString(pos++, condition.getAppId());
      }
      if (condition.getInstanceId() != null) {
        stmt.setString(pos++, condition.getInstanceId());
      }
      if (condition.getStartTime() != null) {
        stmt.setLong(pos++, condition.getStartTime());
      }
      if (condition.getEndTime() != null) {
        stmt.setLong(pos, condition.getEndTime());
      }
    } catch (SQLException e) {
      if (stmt != null) {
        stmt.close();
      }
      throw e;
     }
 
     return stmt;
@@ -588,7 +613,9 @@ public class PhoenixTransactSQL {
       LOG.debug("SQL: " + query + ", condition: " + condition);
     }
 
    PreparedStatement stmt = connection.prepareStatement(query);
    PreparedStatement stmt = null;
    try {
    stmt = connection.prepareStatement(query);
     int pos = 1;
     if (condition.getMetricNames() != null) {
       for (; pos &lt;= condition.getMetricNames().size(); pos++) {
@@ -604,6 +631,12 @@ public class PhoenixTransactSQL {
     if (condition.getInstanceId() != null) {
       stmt.setString(pos, condition.getInstanceId());
     }
    } catch (SQLException e) {
      if (stmt != null) {
        
      }
      throw e;
    }
 
     return stmt;
   }
diff --git a/ambari-server/src/main/java/org/apache/ambari/eventdb/db/PostgresConnector.java b/ambari-server/src/main/java/org/apache/ambari/eventdb/db/PostgresConnector.java
index 552df9cfef..421d0019e8 100644
-- a/ambari-server/src/main/java/org/apache/ambari/eventdb/db/PostgresConnector.java
++ b/ambari-server/src/main/java/org/apache/ambari/eventdb/db/PostgresConnector.java
@@ -164,8 +164,12 @@ public class PostgresConnector implements DBConnector {
       throw new IOException(e);
     } finally {
       try {
        if (rs != null)
        if (rs != null){
           rs.close();
        }
        if (ps != null) {
          ps.close();
        }
       } catch (SQLException e) {
         LOG.error("Exception while closing ResultSet", e);
       }
@@ -193,8 +197,12 @@ public class PostgresConnector implements DBConnector {
       throw new IOException(e);
     } finally {
       try {
        if (rs != null)
        if (rs != null) {
           rs.close();
        }
        if (ps != null) {
          ps.close();
        }        
       } catch (SQLException e) {
         LOG.error("Exception while closing ResultSet", e);
       }
diff --git a/ambari-server/src/main/java/org/apache/ambari/server/agent/HeartBeatHandler.java b/ambari-server/src/main/java/org/apache/ambari/server/agent/HeartBeatHandler.java
index 1c993ef38e..6f34b62d78 100644
-- a/ambari-server/src/main/java/org/apache/ambari/server/agent/HeartBeatHandler.java
++ b/ambari-server/src/main/java/org/apache/ambari/server/agent/HeartBeatHandler.java
@@ -1125,7 +1125,12 @@ public class HeartBeatHandler {
                   keytabMap.put(KerberosIdentityDataFileReader.KEYTAB_FILE_GROUP_ACCESS, record.get(KerberosIdentityDataFileReader.KEYTAB_FILE_GROUP_ACCESS));
 
                   BufferedInputStream bufferedIn = new BufferedInputStream(new FileInputStream(keytabFile));
                  byte[] keytabContent = IOUtils.toByteArray(bufferedIn);
                  byte[] keytabContent = null;
                  try {
                    keytabContent = IOUtils.toByteArray(bufferedIn);
                  } finally {
                    bufferedIn.close();
                  }
                   String keytabContentBase64 = Base64.encodeBase64String(keytabContent);
                   keytabMap.put(KerberosServerAction.KEYTAB_CONTENT_BASE64, keytabContentBase64);
 
diff --git a/ambari-server/src/main/java/org/apache/ambari/server/api/services/AmbariMetaInfo.java b/ambari-server/src/main/java/org/apache/ambari/server/api/services/AmbariMetaInfo.java
index a77f7b1fa9..4afa9b0ca5 100644
-- a/ambari-server/src/main/java/org/apache/ambari/server/api/services/AmbariMetaInfo.java
++ b/ambari-server/src/main/java/org/apache/ambari/server/api/services/AmbariMetaInfo.java
@@ -736,7 +736,9 @@ public class AmbariMetaInfo {
     if (!versionFile.exists()) {
       throw new AmbariException("Server version file does not exist.");
     }
    serverVersion = new Scanner(versionFile).useDelimiter("\\Z").next();
    Scanner scanner = new Scanner(versionFile);
    serverVersion = scanner.useDelimiter("\\Z").next();
    scanner.close();
   }
 
   private void getCustomActionDefinitions(File customActionDefinitionRoot) throws JAXBException, AmbariException {
diff --git a/ambari-server/src/main/java/org/apache/ambari/server/api/services/serializers/CsvSerializer.java b/ambari-server/src/main/java/org/apache/ambari/server/api/services/serializers/CsvSerializer.java
index 87751dc728..04dd1abe2a 100644
-- a/ambari-server/src/main/java/org/apache/ambari/server/api/services/serializers/CsvSerializer.java
++ b/ambari-server/src/main/java/org/apache/ambari/server/api/services/serializers/CsvSerializer.java
@@ -32,6 +32,8 @@ import java.util.Collection;
 import java.util.List;
 import java.util.Map;
 import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
 
 /**
  * CSV serializer used to generate a CSV-formatted document from a result.
@@ -77,7 +79,7 @@ public class CsvSerializer implements ResultSerializer {
     if (result.getStatus().isErrorState()) {
       return serializeError(result.getStatus());
     } else {

      CSVPrinter csvPrinter = null;
       try {
         // A StringBuffer to store the CSV-formatted document while building it.  It may be
         // necessary to use file-based storage if the data set is expected to be really large.
@@ -86,7 +88,7 @@ public class CsvSerializer implements ResultSerializer {
         TreeNode&lt;Resource&gt; root = result.getResultTree();
 
         if (root != null) {
          CSVPrinter csvPrinter = new CSVPrinter(buffer, CSVFormat.DEFAULT);
          csvPrinter = new CSVPrinter(buffer, CSVFormat.DEFAULT);
 
           // TODO: recursively handle tree structure, for now only handle single level of detail
           if ("true".equalsIgnoreCase(root.getStringProperty("isCollection"))) {
@@ -107,15 +109,23 @@ public class CsvSerializer implements ResultSerializer {
       } catch (IOException e) {
         //todo: exception handling.  Create ResultStatus 500 and call serializeError
         throw new RuntimeException("Unable to serialize to csv: " + e, e);
      } finally {
        if (csvPrinter != null) {
          try {
            csvPrinter.close();
          } catch (IOException ex) {
          }
        }
       }
     }
   }
 
   @Override
   public Object serializeError(ResultStatus error) {
    CSVPrinter csvPrinter = null;
     try {
       StringBuffer buffer = new StringBuffer();
      CSVPrinter csvPrinter = new CSVPrinter(buffer, CSVFormat.DEFAULT);
      csvPrinter = new CSVPrinter(buffer, CSVFormat.DEFAULT);
 
       csvPrinter.printRecord(Arrays.asList("status", "message"));
       csvPrinter.printRecord(Arrays.asList(error.getStatus().getStatus(), error.getMessage()));
@@ -124,6 +134,13 @@ public class CsvSerializer implements ResultSerializer {
     } catch (IOException e) {
       //todo: exception handling.  Create ResultStatus 500 and call serializeError
       throw new RuntimeException("Unable to serialize to csv: " + e, e);
    } finally {
      if (csvPrinter != null) {
        try {
          csvPrinter.close();
        } catch (IOException ex) {
        }
      }
     }
   }
 
diff --git a/ambari-server/src/main/java/org/apache/ambari/server/controller/gsinstaller/ClusterDefinition.java b/ambari-server/src/main/java/org/apache/ambari/server/controller/gsinstaller/ClusterDefinition.java
index b6dfa30e1b..6f9876abfa 100644
-- a/ambari-server/src/main/java/org/apache/ambari/server/controller/gsinstaller/ClusterDefinition.java
++ b/ambari-server/src/main/java/org/apache/ambari/server/controller/gsinstaller/ClusterDefinition.java
@@ -228,8 +228,9 @@ public class ClusterDefinition {
    * Read the gsInstaller cluster definition file.
    */</comment>
   private <function><type><name>void</name></type> <name>readClusterDefinition</name><parameter_list>()</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>InputStream</name></type> <name>is</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
     <try>try <block>{<block_content>
      <decl_stmt><decl><type><name>InputStream</name></type>    <name>is</name> <init>= <expr><call><name><name>this</name><operator>.</operator><name>getClass</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClassLoader</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getResourceAsStream</name><argument_list>(<argument><expr><name>CLUSTER_DEFINITION_FILE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><name>is</name> <operator>=</operator> <call><name><name>this</name><operator>.</operator><name>getClass</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClassLoader</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getResourceAsStream</name><argument_list>(<argument><expr><name>CLUSTER_DEFINITION_FILE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <decl_stmt><decl><type><name>BufferedReader</name></type> <name>br</name> <init>= <expr><operator>new</operator> <call><name>BufferedReader</name><argument_list>(<argument><expr><operator>new</operator> <call><name>InputStreamReader</name><argument_list>(<argument><expr><name>is</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
       <decl_stmt><decl><type><name>String</name></type> <name>line</name></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">280</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">281</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>ClusterDefinition</name> <block>{
     }</block></expr></expr_stmt> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
       <decl_stmt><decl><type><name>String</name></type> <name>msg</name> <init>= <expr><literal type="string">"Caught exception reading "</literal> <operator>+</operator> <name>CLUSTER_DEFINITION_FILE</name> <operator>+</operator> <literal type="string">"."</literal></expr></init></decl>;</decl_stmt>
       <throw>throw <expr><operator>new</operator> <call><name>IllegalStateException</name><argument_list>(<argument><expr><name>msg</name></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></catch> <finally>finally <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><name>is</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <try>try <block>{<block_content>
          <expr_stmt><expr><call><name><name>is</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
        </block_content>}</block></catch></try>
      </block_content>}</block></if></if_stmt>
     </block_content>}</block></finally>
   </block_content>}</block></try>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>URLStreamProvider</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>URLStreamProvider</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">94940e6da6</literal><operator>..</operator><name>bc11646396</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>URLStreamProvider</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>URLStreamProvider</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">285</literal></expr><operator>,</operator><expr><literal type="number">25</literal> <operator>+</operator><literal type="number">285</literal></expr><operator>,</operator><expr><literal type="number">24</literal> @@ <specifier>public</specifier> <name>class</name> <name>URLStreamProvider</name> implements <name>StreamProvider</name> <block>{
             <expr><call><name><name>LOG</name><operator>.</operator><name>error</name></name><argument_list>(<argument><expr><name>msg</name></expr></argument>)</argument_list></call></expr>;
             <throw>throw <argument_list>new <argument><expr><call><name>IllegalStateException</name><argument_list>(<argument><expr><name>msg</name></expr></argument>)</argument_list></call></expr></argument></argument_list></throw>;
           }</block>

          <name>FileInputStream</name> <name>in</name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
           <try>try <block>{<block_content>
            <decl_stmt><decl><type><name>FileInputStream</name></type> <name>in</name> <init>= <expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>trustStorePath</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name>in</name> <operator>=</operator> <operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>trustStorePath</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <decl_stmt><decl><type><name>KeyStore</name></type> <name>store</name> <init>= <expr><call><name><name>KeyStore</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><ternary><condition><expr><name>trustStoreType</name> <operator>==</operator> <literal type="null">null</literal></expr> ?</condition><then>
                 <expr><call><name><name>KeyStore</name><operator>.</operator><name>getDefaultType</name></name><argument_list>()</argument_list></call></expr> </then><else>: <expr><name>trustStoreType</name></expr></else></ternary></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

             <expr_stmt><expr><call><name><name>store</name><operator>.</operator><name>load</name></name><argument_list>(<argument><expr><name>in</name></expr></argument>, <argument><expr><call><name><name>trustStorePassword</name><operator>.</operator><name>toCharArray</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>in</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

             <decl_stmt><decl><type><name>TrustManagerFactory</name></type> <name>tmf</name> <init>= <expr><call><name><name>TrustManagerFactory</name>
                 <operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><call><name><name>TrustManagerFactory</name><operator>.</operator><name>getDefaultAlgorithm</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

             <expr_stmt><expr><call><name><name>tmf</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>store</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <decl_stmt><decl><type><name>SSLContext</name></type> <name>context</name> <init>= <expr><call><name><name>SSLContext</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><literal type="string">"TLS"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
             <expr_stmt><expr><call><name><name>context</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><call><name><name>tmf</name><operator>.</operator><name>getTrustManagers</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

             <expr_stmt><expr><name>sslSocketFactory</name> <operator>=</operator> <call><name><name>context</name><operator>.</operator><name>getSocketFactory</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
           </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
             <throw>throw <expr><operator>new</operator> <call><name>IOException</name><argument_list>(<argument><expr><literal type="string">"Can't get connection."</literal></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
          </block_content>}</block></catch> <finally>finally <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><name>in</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
              <expr_stmt><expr><call><name><name>in</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
           </block_content>}</block></finally></try>
         </block_content>}</block></function>
       }
diff <expr_stmt><expr><operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>jdbc</name><operator>/</operator><name><name>JDBCResourceProvider</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>jdbc</name><operator>/</operator><name><name>JDBCResourceProvider</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">2f2eab1998</literal><operator>..</operator><name>e9695059ce</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>jdbc</name><operator>/</operator><name><name>JDBCResourceProvider</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>jdbc</name><operator>/</operator><name><name>JDBCResourceProvider</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">40</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">40</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>logging</name><operator>.</operator><name>Level</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
  * Generic JDBC based resource provider.
@@ -162,86 +163,109 @@ public class JDBCResourceProvider extends BaseProvider implements ResourceProvid
                UnsupportedPropertyException,
                ResourceAlreadyExistsException,
                NoSuchParentResourceException {

        Connection connection = null;
         try {
            Connection connection = connectionFactory.getConnection();

            connection = connectionFactory.getConnection();
            Statement statement = null;
             try {

                 Set&lt;Map&lt;String, Object&gt;&gt; propertySet = request.getProperties();

                statement = connection.createStatement(); 
                 for (Map&lt;String, Object&gt; properties : propertySet) {
                     String sql = getInsertSQL(properties);

                    Statement statement = connection.createStatement();

                     statement.execute(sql);

                    statement.close();
                 }
             } finally {
                connection.close();
              if (statement != null) {
                statement.close();
              }  
             }
 
         } catch (SQLException e) {
             throw new IllegalStateException("DB error : ", e);
        } finally {
          if (connection != null) {
            try {
              connection.close();
            } catch (SQLException ex) {
              throw new IllegalStateException("DB error : ", ex);
            }
          }
         }
 
         return getRequestStatus();
     }
 
     @Override
    public RequestStatus updateResources(Request request, Predicate predicate)
        throws SystemException, UnsupportedPropertyException, NoSuchResourceException, NoSuchParentResourceException {

        try {
            Connection connection = connectionFactory.getConnection();
            try {
                Set&lt;Map&lt;String, Object&gt;&gt; propertySet = request.getProperties();
  public RequestStatus updateResources(Request request, Predicate predicate)
          throws SystemException, UnsupportedPropertyException, NoSuchResourceException, NoSuchParentResourceException {
    Connection connection = null;
    try {
      connection = connectionFactory.getConnection();
      Statement statement = null;
      try {
        Set&lt;Map&lt;String, Object&gt;&gt; propertySet = request.getProperties();
 
                Map&lt;String, Object&gt; properties = propertySet.iterator().next();
        Map&lt;String, Object&gt; properties = propertySet.iterator().next();
 
                String sql = getUpdateSQL(properties, predicate);
        String sql = getUpdateSQL(properties, predicate);
 
                Statement statement = connection.createStatement();
        statement = connection.createStatement();
 
                statement.execute(sql);
        statement.execute(sql);
 
                statement.close();
            } finally {
                connection.close();
            }

        } catch (SQLException e) {
            throw new IllegalStateException("DB error : ", e);
      } finally {
        if (statement != null) {
          statement.close();
         }
      }
 
        return getRequestStatus();
    } catch (SQLException e) {
      throw new IllegalStateException("DB error : ", e);
    } finally {
      if (connection != null) {
        try {
          connection.close();
        } catch (SQLException ex) {
          throw new IllegalStateException("DB error : ", ex);
        }
      }
     }
 
    @Override
    public RequestStatus deleteResources(Predicate predicate)
        throws SystemException, UnsupportedPropertyException, NoSuchResourceException, NoSuchParentResourceException {
    return getRequestStatus();
  }

  @Override
  public RequestStatus deleteResources(Predicate predicate)
          throws SystemException, UnsupportedPropertyException, NoSuchResourceException, NoSuchParentResourceException {
    Connection connection = null;
    try {
      connection = connectionFactory.getConnection();
      Statement statement = null;
      try {
        String sql = getDeleteSQL(predicate);
        statement = connection.createStatement();
        statement.execute(sql);
      } finally {
        if (statement != null) {
          statement.close();
        }
      }
 
    } catch (SQLException e) {
      throw new IllegalStateException("DB error : ", e);
    } finally {
      if (connection != null) {
         try {
            Connection connection = connectionFactory.getConnection();
            try {
                String sql = getDeleteSQL(predicate);

                Statement statement = connection.createStatement();
                statement.execute(sql);
                statement.close();
            } finally {
                connection.close();
            }

        } catch (SQLException e) {
            throw new IllegalStateException("DB error : ", e);
          connection.close();
        } catch (SQLException ex) {
          throw new IllegalStateException("DB error : ", ex);
         }

        return getRequestStatus();
      }
     }
 
    return getRequestStatus();
  }

 
     private String getInsertSQL(Map&lt;String, Object&gt; properties) {
 
@@ -409,28 +433,34 @@ public class JDBCResourceProvider extends BaseProvider implements ResourceProvid
      * @param table      the table
      * @throws SQLException thrown if the meta data for the given connection cannot be obtained
      */</comment>
    <function><type><specifier>private</specifier> <name>void</name></type> <name>getImportedKeys</name><parameter_list>(<parameter><decl><type><name>Connection</name></type> <name>connection</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>table</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>SQLException</name></expr></argument></throws> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>this</name><operator>.</operator><name>importedKeys</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><name>table</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

            <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>importedKeys</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>importedKeys</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>table</name></expr></argument>, <argument><expr><name>importedKeys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <function><type><specifier>private</specifier> <name>void</name></type> <name>getImportedKeys</name><parameter_list>(<parameter><decl><type><name>Connection</name></type> <name>connection</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>table</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>SQLException</name></expr></argument></throws> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>this</name><operator>.</operator><name>importedKeys</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><name>table</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
 
            <decl_stmt><decl><type><name>DatabaseMetaData</name></type> <name>metaData</name> <init>= <expr><call><name><name>connection</name><operator>.</operator><name>getMetaData</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>importedKeys</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>importedKeys</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>table</name></expr></argument>, <argument><expr><name>importedKeys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
            <decl_stmt><decl><type><name>ResultSet</name></type> <name>rs</name> <init>= <expr><call><name><name>metaData</name><operator>.</operator><name>getImportedKeys</name></name><argument_list>(<argument><expr><call><name><name>connection</name><operator>.</operator><name>getCatalog</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>table</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>DatabaseMetaData</name></type> <name>metaData</name> <init>= <expr><call><name><name>connection</name><operator>.</operator><name>getMetaData</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>ResultSet</name></type> <name>rs</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
      <try>try <block>{<block_content>
        <expr_stmt><expr><name>rs</name> <operator>=</operator> <call><name><name>metaData</name><operator>.</operator><name>getImportedKeys</name></name><argument_list>(<argument><expr><call><name><name>connection</name><operator>.</operator><name>getCatalog</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
            <while>while <condition>(<expr><call><name><name>rs</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
        <while>while <condition>(<expr><call><name><name>rs</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
 
                <decl_stmt><decl><type><name>String</name></type> <name>pkPropertyId</name> <init>= <expr><call><name><name>PropertyHelper</name><operator>.</operator><name>getPropertyId</name></name><argument_list>(
                    <argument><expr><call><name><name>rs</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><literal type="string">"PKTABLE_NAME"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>rs</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><literal type="string">"PKCOLUMN_NAME"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <decl_stmt><decl><type><name>String</name></type> <name>pkPropertyId</name> <init>= <expr><call><name><name>PropertyHelper</name><operator>.</operator><name>getPropertyId</name></name><argument_list>(
                  <argument><expr><call><name><name>rs</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><literal type="string">"PKTABLE_NAME"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>rs</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><literal type="string">"PKCOLUMN_NAME"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
                <decl_stmt><decl><type><name>String</name></type> <name>fkPropertyId</name> <init>= <expr><call><name><name>PropertyHelper</name><operator>.</operator><name>getPropertyId</name></name><argument_list>(
                    <argument><expr><call><name><name>rs</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><literal type="string">"FKTABLE_NAME"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>rs</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><literal type="string">"FKCOLUMN_NAME"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <decl_stmt><decl><type><name>String</name></type> <name>fkPropertyId</name> <init>= <expr><call><name><name>PropertyHelper</name><operator>.</operator><name>getPropertyId</name></name><argument_list>(
                  <argument><expr><call><name><name>rs</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><literal type="string">"FKTABLE_NAME"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>rs</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><literal type="string">"FKCOLUMN_NAME"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
                <expr_stmt><expr><call><name><name>importedKeys</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>pkPropertyId</name></expr></argument>, <argument><expr><name>fkPropertyId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></while>
          <expr_stmt><expr><call><name><name>importedKeys</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>pkPropertyId</name></expr></argument>, <argument><expr><name>fkPropertyId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></while>
      </block_content>}</block> <finally>finally <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name>rs</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name><name>rs</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></if></if_stmt>
      </block_content>}</block></finally></try>
     </block_content>}</block></if></if_stmt>
  </block_content>}</block></function>
 
     <comment type="block" format="javadoc">/**
      * Get a request status
diff --git a/ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/RestMetricsPropertyProvider.java b/ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/RestMetricsPropertyProvider.java
index b92537b634..b32adda106 100644
-- a/ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/RestMetricsPropertyProvider.java
++ b/ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/RestMetricsPropertyProvider.java
@@ -225,13 +225,16 @@ public class RestMetricsPropertyProvider extends ThreadPoolEnabledPropertyProvid
       try {
         InputStream in = streamProvider.readFrom(getSpec(protocol, hostname, port, url));
         if (!ticket.isValid()) {
          if (in != null) {
            in.close();
          }
           return resource;
        }
        }       
         try {
           extractValuesFromJSON(in, urls.get(url), resource, propertyInfos);
         } finally {
          in.close();
        }
            in.close();
          }
       } catch (IOException e) {
         logException(e);
       }
diff --git a/ambari-server/src/main/java/org/apache/ambari/server/orm/DBAccessorImpl.java b/ambari-server/src/main/java/org/apache/ambari/server/orm/DBAccessorImpl.java
index c8916913ea..6e31eee8e1 100644
-- a/ambari-server/src/main/java/org/apache/ambari/server/orm/DBAccessorImpl.java
++ b/ambari-server/src/main/java/org/apache/ambari/server/orm/DBAccessorImpl.java
@@ -41,11 +41,12 @@ import org.eclipse.persistence.sessions.DatabaseLogin;
 import org.eclipse.persistence.sessions.DatabaseSession;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 

 import java.io.BufferedReader;
 import java.io.FileReader;
 import java.io.IOException;
 import java.io.InputStreamReader;
import java.nio.charset.Charset;
 import java.sql.Blob;
 import java.sql.Connection;
 import java.sql.DatabaseMetaData;
@@ -70,7 +71,7 @@ public class DBAccessorImpl implements DBAccessor {
   private static final String dbURLPatternString = "jdbc:(.*?):.*";
   private Pattern dbURLPattern = Pattern.compile(dbURLPatternString, Pattern.CASE_INSENSITIVE);
   private DbType dbType;

  
   @Inject
   public DBAccessorImpl(Configuration configuration) {
     this.configuration = configuration;
@@ -79,14 +80,14 @@ public class DBAccessorImpl implements DBAccessor {
       Class.forName(configuration.getDatabaseDriver());
 
       connection = DriverManager.getConnection(configuration.getDatabaseUrl(),
        configuration.getDatabaseUser(),
        configuration.getDatabasePassword());
              configuration.getDatabaseUser(),
              configuration.getDatabasePassword());
 
       connection.setAutoCommit(true); //enable autocommit
 
       //TODO create own mapping and platform classes for supported databases
      String vendorName = connection.getMetaData().getDatabaseProductName() +
        connection.getMetaData().getDatabaseMajorVersion();
      String vendorName = connection.getMetaData().getDatabaseProductName()
              + connection.getMetaData().getDatabaseMajorVersion();
       String dbPlatform = DBPlatformHelper.getDBPlatform(vendorName, new AbstractSessionLog() {
         @Override
         public void log(SessionLogEntry sessionLogEntry) {
@@ -106,13 +107,13 @@ public class DBAccessorImpl implements DBAccessor {
     if (databasePlatform instanceof OraclePlatform) {
       dbType = DbType.ORACLE;
       return new OracleHelper(databasePlatform);
    }else if (databasePlatform instanceof MySQLPlatform) {
    } else if (databasePlatform instanceof MySQLPlatform) {
       dbType = DbType.MYSQL;
       return new MySqlHelper(databasePlatform);
    }else if (databasePlatform instanceof PostgreSQLPlatform) {
    } else if (databasePlatform instanceof PostgreSQLPlatform) {
       dbType = DbType.POSTGRES;
       return new PostgresHelper(databasePlatform);
    }else if (databasePlatform instanceof DerbyPlatform) {
    } else if (databasePlatform instanceof DerbyPlatform) {
       dbType = DbType.DERBY;
       return new DerbyHelper(databasePlatform);
     } else {
@@ -129,8 +130,8 @@ public class DBAccessorImpl implements DBAccessor {
   public Connection getNewConnection() {
     try {
       return DriverManager.getConnection(configuration.getDatabaseUrl(),
        configuration.getDatabaseUser(),
        configuration.getDatabasePassword());
              configuration.getDatabaseUser(),
              configuration.getDatabasePassword());
     } catch (SQLException e) {
       throw new RuntimeException("Unable to connect to database", e);
     }
@@ -143,7 +144,7 @@ public class DBAccessorImpl implements DBAccessor {
 
   @Override
   public void createTable(String tableName, List&lt;DBColumnInfo&gt; columnInfo,
                          String... primaryKeyColumns) throws SQLException {
          String... primaryKeyColumns) throws SQLException {
     if (!tableExists(tableName)) {
       String query = dbmsHelper.getCreateTableStatement(tableName, columnInfo, Arrays.asList(primaryKeyColumns));
 
@@ -167,27 +168,24 @@ public class DBAccessorImpl implements DBAccessor {
     DatabaseMetaData metaData = getDatabaseMetaData();
     if (metaData.storesLowerCaseIdentifiers()) {
       return objectName.toLowerCase();
    }else if (metaData.storesUpperCaseIdentifiers()) {
    } else if (metaData.storesUpperCaseIdentifiers()) {
       return objectName.toUpperCase();
     }
 
     return objectName;
   }
 


   @Override
   public boolean tableExists(String tableName) throws SQLException {
     boolean result = false;
     DatabaseMetaData metaData = getDatabaseMetaData();
 
    ResultSet res = metaData.getTables(null, null, convertObjectName(tableName), new String[] { "TABLE" });
    ResultSet res = metaData.getTables(null, null, convertObjectName(tableName), new String[]{"TABLE"});
 
     if (res != null) {
       try {
         if (res.next()) {
          return res.getString("TABLE_NAME") != null &amp;&amp; res.getString
            ("TABLE_NAME").equalsIgnoreCase(tableName);
          return res.getString("TABLE_NAME") != null &amp;&amp; res.getString("TABLE_NAME").equalsIgnoreCase(tableName);
         }
       } finally {
         res.close();
@@ -208,7 +206,7 @@ public class DBAccessorImpl implements DBAccessor {
     boolean retVal = false;
     ResultSet rs = null;
     try {
       rs = statement.executeQuery(query);
      rs = statement.executeQuery(query);
       if (rs != null) {
         if (rs.next()) {
           return rs.getInt(1) &gt; 0;
@@ -217,6 +215,9 @@ public class DBAccessorImpl implements DBAccessor {
     } catch (Exception e) {
       LOG.error("Unable to check if table " + tableName + " has any data. Exception: " + e.getMessage());
     } finally {
      if (statement != null) {
        statement.close();
      }
       if (rs != null) {
         rs.close();
       }
@@ -233,8 +234,7 @@ public class DBAccessorImpl implements DBAccessor {
     if (rs != null) {
       try {
         if (rs.next()) {
          return rs.getString("COLUMN_NAME") != null &amp;&amp; rs.getString
            ("COLUMN_NAME").equalsIgnoreCase(columnName);
          return rs.getString("COLUMN_NAME") != null &amp;&amp; rs.getString("COLUMN_NAME").equalsIgnoreCase(columnName);
         }
       } finally {
         rs.close();
@@ -245,7 +245,7 @@ public class DBAccessorImpl implements DBAccessor {
   }
 
   @Override
  public boolean tableHasColumn(String tableName, String... columnName) throws SQLException{
  public boolean tableHasColumn(String tableName, String... columnName) throws SQLException {
     List&lt;String&gt; columnsList = new ArrayList&lt;String&gt;(Arrays.asList(columnName));
     DatabaseMetaData metaData = getDatabaseMetaData();
 
@@ -292,19 +292,18 @@ public class DBAccessorImpl implements DBAccessor {
 
   @Override
   public boolean tableHasForeignKey(String tableName, String refTableName,
              String columnName, String refColumnName) throws SQLException {
          String columnName, String refColumnName) throws SQLException {
     return tableHasForeignKey(tableName, refTableName, new String[]{columnName}, new String[]{refColumnName});
   }
 
   @Override
   public boolean tableHasForeignKey(String tableName, String referenceTableName, String[] keyColumns,
                                    String[] referenceColumns) throws SQLException {
          String[] referenceColumns) throws SQLException {
     DatabaseMetaData metaData = getDatabaseMetaData();
 
     //NB: reference table contains pk columns while key table contains fk columns

     ResultSet rs = metaData.getCrossReference(null, null, convertObjectName(referenceTableName),
      null, null, convertObjectName(tableName));
            null, null, convertObjectName(tableName));
 
     List&lt;String&gt; pkColumns = new ArrayList&lt;String&gt;(referenceColumns.length);
     for (String referenceColumn : referenceColumns) {
@@ -332,12 +331,10 @@ public class DBAccessorImpl implements DBAccessor {
               fkColumns.remove(fkIndex);
             }
 

           } else {
             LOG.debug("pkCol={}, fkCol={} not found in provided column names, skipping", pkColumn, fkColumn); //TODO debug
           }
 

         }
         if (pkColumns.isEmpty() &amp;&amp; fkColumns.isEmpty()) {
           return true;
@@ -348,14 +345,13 @@ public class DBAccessorImpl implements DBAccessor {
       }
     }
 

     return false;
 
   }
 
   @Override
   public void createIndex(String indexName, String tableName,
                          String... columnNames) throws SQLException {
          String... columnNames) throws SQLException {
     String query = dbmsHelper.getCreateIndexStatement(indexName, tableName, columnNames);
 
     executeQuery(query);
@@ -363,48 +359,49 @@ public class DBAccessorImpl implements DBAccessor {
 
   @Override
   public void addFKConstraint(String tableName, String constraintName,
                              String keyColumn, String referenceTableName,
                              String referenceColumn, boolean ignoreFailure) throws SQLException {
          String keyColumn, String referenceTableName,
          String referenceColumn, boolean ignoreFailure) throws SQLException {
 
     addFKConstraint(tableName, constraintName, new String[]{keyColumn}, referenceTableName,
        new String[]{referenceColumn}, false, ignoreFailure);
            new String[]{referenceColumn}, false, ignoreFailure);
   }

   @Override
   public void addFKConstraint(String tableName, String constraintName,
                              String keyColumn, String referenceTableName,
                              String referenceColumn, boolean shouldCascadeOnDelete,
                              boolean ignoreFailure) throws SQLException {
          String keyColumn, String referenceTableName,
          String referenceColumn, boolean shouldCascadeOnDelete,
          boolean ignoreFailure) throws SQLException {
 
     addFKConstraint(tableName, constraintName, new String[]{keyColumn}, referenceTableName,
      new String[]{referenceColumn}, shouldCascadeOnDelete, ignoreFailure);
            new String[]{referenceColumn}, shouldCascadeOnDelete, ignoreFailure);
   }
 
   @Override
   public void addFKConstraint(String tableName, String constraintName,
                              String[] keyColumns, String referenceTableName,
                              String[] referenceColumns,
                              boolean ignoreFailure) throws SQLException {
          String[] keyColumns, String referenceTableName,
          String[] referenceColumns,
          boolean ignoreFailure) throws SQLException {
     addFKConstraint(tableName, constraintName, keyColumns, referenceTableName, referenceColumns, false, ignoreFailure);
   }
 
   @Override
   public void addFKConstraint(String tableName, String constraintName,
                              String[] keyColumns, String referenceTableName,
                              String[] referenceColumns, boolean shouldCascadeOnDelete,
                              boolean ignoreFailure) throws SQLException {
          String[] keyColumns, String referenceTableName,
          String[] referenceColumns, boolean shouldCascadeOnDelete,
          boolean ignoreFailure) throws SQLException {
     if (!tableHasForeignKey(tableName, referenceTableName, keyColumns, referenceColumns)) {
       String query = dbmsHelper.getAddForeignKeyStatement(tableName, constraintName,
          Arrays.asList(keyColumns),
          referenceTableName,
          Arrays.asList(referenceColumns),
          shouldCascadeOnDelete);
              Arrays.asList(keyColumns),
              referenceTableName,
              Arrays.asList(referenceColumns),
              shouldCascadeOnDelete);
 
       try {
         executeQuery(query, ignoreFailure);
       } catch (SQLException e) {
        LOG.warn("Add FK constraint failed" +
                ", constraintName = " + constraintName +
                ", tableName = " + tableName, e.getMessage());
        LOG.warn("Add FK constraint failed"
                + ", constraintName = " + constraintName
                + ", tableName = " + tableName, e.getMessage());
         if (!ignoreFailure) {
           throw e;
         }
@@ -414,13 +411,13 @@ public class DBAccessorImpl implements DBAccessor {
     }
   }
 
  public boolean tableHasConstraint(String tableName, String constraintName) throws SQLException{
  public boolean tableHasConstraint(String tableName, String constraintName) throws SQLException {
     // this kind of request is well lower level as we querying system tables, due that we need for some the name of catalog.
     String query = dbmsHelper.getTableConstraintsStatement(connection.getCatalog(), tableName);
     ResultSet rs = executeSelect(query);
    if (rs != null){
    if (rs != null) {
       while (rs.next()) {
        if (rs.getString("CONSTRAINT_NAME").equalsIgnoreCase(constraintName)){
        if (rs.getString("CONSTRAINT_NAME").equalsIgnoreCase(constraintName)) {
           return true;
         }
       }
@@ -430,7 +427,7 @@ public class DBAccessorImpl implements DBAccessor {
 
   @Override
   public void addUniqueConstraint(String tableName, String constraintName, String... columnNames)
    throws SQLException{
          throws SQLException {
     if (!tableHasConstraint(tableName, constraintName)) {
       String query = dbmsHelper.getAddUniqueConstraintStatement(tableName, constraintName, columnNames);
       try {
@@ -445,25 +442,25 @@ public class DBAccessorImpl implements DBAccessor {
   }
 
   @Override
  public void addPKConstraint(String tableName, String constraintName, boolean ignoreErrors, String... columnName) throws SQLException{
  public void addPKConstraint(String tableName, String constraintName, boolean ignoreErrors, String... columnName) throws SQLException {
     if (!tableHasPrimaryKey(tableName, null) &amp;&amp; tableHasColumn(tableName, columnName)) {
       String query = dbmsHelper.getAddPrimaryKeyConstraintStatement(tableName, constraintName, columnName);
 
       executeQuery(query, ignoreErrors);
     } else {
       LOG.warn("Primary constraint {} not altered to table {} as column {} not present or constraint already exists",
        constraintName, tableName, columnName);
              constraintName, tableName, columnName);
     }
   }
 
   @Override
  public void addPKConstraint(String tableName, String constraintName, String... columnName) throws SQLException{
  public void addPKConstraint(String tableName, String constraintName, String... columnName) throws SQLException {
     addPKConstraint(tableName, constraintName, false, columnName);
   }
 
   @Override
   public void renameColumn(String tableName, String oldColumnName,
                           DBColumnInfo columnInfo) throws SQLException {
          DBColumnInfo columnInfo) throws SQLException {
     //it is mandatory to specify type in column change clause for mysql
     String renameColumnStatement = dbmsHelper.getRenameColumnStatement(tableName, oldColumnName, columnInfo);
     executeQuery(renameColumnStatement);
@@ -488,7 +485,7 @@ public class DBAccessorImpl implements DBAccessor {
 
   @Override
   public void alterColumn(String tableName, DBColumnInfo columnInfo)
      throws SQLException {
          throws SQLException {
     //varchar extension only (derby limitation, but not too much for others),
     if (dbmsHelper.supportsColumnTypeChange()) {
       String statement = dbmsHelper.getAlterColumnStatement(tableName,
@@ -497,9 +494,9 @@ public class DBAccessorImpl implements DBAccessor {
     } else {
       //use addColumn: add_tmp-update-drop-rename for Derby
       DBColumnInfo columnInfoTmp = new DBColumnInfo(
          columnInfo.getName() + "_TMP",
          columnInfo.getType(),
          columnInfo.getLength());
              columnInfo.getName() + "_TMP",
              columnInfo.getType(),
              columnInfo.getLength());
       String statement = dbmsHelper.getAddColumnStatement(tableName, columnInfoTmp);
       executeQuery(statement);
       updateTable(tableName, columnInfo, columnInfoTmp);
@@ -510,32 +507,43 @@ public class DBAccessorImpl implements DBAccessor {
 
   @Override
   public void updateTable(String tableName, DBColumnInfo columnNameFrom,
      DBColumnInfo columnNameTo) throws SQLException {
          DBColumnInfo columnNameTo) throws SQLException {
     LOG.info("Executing query: UPDATE TABLE " + tableName + " SET "
        + columnNameTo.getName() + "=" + columnNameFrom.getName());
            + columnNameTo.getName() + "=" + columnNameFrom.getName());
 
     String statement = "SELECT * FROM " + tableName;
     int typeFrom = getColumnType(tableName, columnNameFrom.getName());
     int typeTo = getColumnType(tableName, columnNameTo.getName());
    ResultSet rs = executeSelect(statement, ResultSet.TYPE_SCROLL_SENSITIVE,
            ResultSet.CONCUR_UPDATABLE);
    Statement dbStatement = null;
    ResultSet rs = null;
    try {
    dbStatement = getConnection().createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,
            ResultSet.CONCUR_UPDATABLE); 
    rs = dbStatement.executeQuery(statement);
 
     while (rs.next()) {
       convertUpdateData(rs, columnNameFrom, typeFrom, columnNameTo, typeTo);
       rs.updateRow();
     }
    rs.close();
    } finally {
      if (rs != null) {
        rs.close();
      }
      if (dbStatement != null) {
        dbStatement.close();
      }
    }
   }
 
   private void convertUpdateData(ResultSet rs, DBColumnInfo columnNameFrom,
      int typeFrom,
      DBColumnInfo columnNameTo, int typeTo) throws SQLException {
          int typeFrom,
          DBColumnInfo columnNameTo, int typeTo) throws SQLException {
     if (typeFrom == Types.BLOB &amp;&amp; typeTo == Types.CLOB) {
       //BLOB--&gt;CLOB
       Blob data = rs.getBlob(columnNameFrom.getName());
       if (data != null) {
         rs.updateClob(columnNameTo.getName(),
            new BufferedReader(new InputStreamReader(data.getBinaryStream())));
                new BufferedReader(new InputStreamReader(data.getBinaryStream(), Charset.defaultCharset())));
       }
     } else {
       Object data = rs.getObject(columnNameFrom.getName());
@@ -554,7 +562,7 @@ public class DBAccessorImpl implements DBAccessor {
 
     for (int i = 0; i &lt; columnNames.length; i++) {
       builder.append(columnNames[i]);
      if(i!=columnNames.length-1){
      if (i != columnNames.length - 1) {
         builder.append(",");
       }
     }
@@ -563,7 +571,7 @@ public class DBAccessorImpl implements DBAccessor {
 
     for (int i = 0; i &lt; values.length; i++) {
       builder.append(values[i]);
      if(i!=values.length-1){
      if (i != values.length - 1) {
         builder.append(",");
       }
     }
@@ -580,18 +588,20 @@ public class DBAccessorImpl implements DBAccessor {
       if (!ignoreFailure) {
         throw e;
       }
    } finally {
      if (statement != null) {
        statement.close();
      }
     }
 
     return rowsUpdated != 0;
   }
 

   @Override
   public int updateTable(String tableName, String columnName, Object value,
                         String whereClause) throws SQLException {
          String whereClause) throws SQLException {
 
    StringBuilder query = new StringBuilder
      (String.format("UPDATE %s SET %s = ", tableName, columnName));
    StringBuilder query = new StringBuilder(String.format("UPDATE %s SET %s = ", tableName, columnName));
 
     // Only String and number supported.
     // Taken from: org.eclipse.persistence.internal.databaseaccess.appendParameterInternal
@@ -606,24 +616,31 @@ public class DBAccessorImpl implements DBAccessor {
     query.append(whereClause);
 
     Statement statement = getConnection().createStatement();

    return statement.executeUpdate(query.toString());
    int res = -1;
    try {
      res = statement.executeUpdate(query.toString());
    } finally {
      if (statement != null) {
        statement.close();
      }
    }
    return res;
   }
 
   @Override
  public int executeUpdate(String query) throws SQLException{
    return  executeUpdate(query, false);
  public int executeUpdate(String query) throws SQLException {
    return executeUpdate(query, false);
   }
 
   @Override
  public int executeUpdate(String query, boolean ignoreErrors) throws SQLException{
  public int executeUpdate(String query, boolean ignoreErrors) throws SQLException {
     Statement statement = getConnection().createStatement();
     try {
       return statement.executeUpdate(query);
    } catch (SQLException e){
      LOG.warn("Error executing query: " + query + ", " +
                 "errorCode = " + e.getErrorCode() + ", message = " + e.getMessage());
      if (!ignoreErrors){
    } catch (SQLException e) {
      LOG.warn("Error executing query: " + query + ", "
              + "errorCode = " + e.getErrorCode() + ", message = " + e.getMessage());
      if (!ignoreErrors) {
         throw e;
       }
     }
@@ -631,8 +648,8 @@ public class DBAccessorImpl implements DBAccessor {
   }
 
   @Override
  public void executeQuery(String query, String tableName, String hasColumnName) throws SQLException{
    if (tableHasColumn(tableName, hasColumnName)){
  public void executeQuery(String query, String tableName, String hasColumnName) throws SQLException {
    if (tableHasColumn(tableName, hasColumnName)) {
       executeQuery(query);
     }
   }
@@ -645,9 +662,19 @@ public class DBAccessorImpl implements DBAccessor {
   @Override
   public ResultSet executeSelect(String query) throws SQLException {
     Statement statement = getConnection().createStatement();
    return statement.executeQuery(query);
    ResultSet rs = statement.executeQuery(query);
    statement.closeOnCompletion();
    return rs;
   }
 
  @Override
  public ResultSet executeSelect(String query, int resultSetType, int resultSetConcur) throws SQLException {
    Statement statement = getConnection().createStatement(resultSetType, resultSetConcur);
    ResultSet rs = statement.executeQuery(query);
    statement.closeOnCompletion();
    return rs;
  }  
  
   @Override
   public void executeQuery(String query, boolean ignoreFailure) throws SQLException {
     LOG.info("Executing query: {}", query);
@@ -659,8 +686,12 @@ public class DBAccessorImpl implements DBAccessor {
         LOG.error("Error executing query: " + query, e);
         throw e;
       } else {
        LOG.warn("Error executing query: " + query + ", " +
          "errorCode = " + e.getErrorCode() + ", message = " + e.getMessage());
        LOG.warn("Error executing query: " + query + ", "
                + "errorCode = " + e.getErrorCode() + ", message = " + e.getMessage());
      }
    } finally {
      if (statement != null) {
        statement.close();
       }
     }
   }
@@ -671,12 +702,8 @@ public class DBAccessorImpl implements DBAccessor {
     executeQuery(query);
   }
 
  @Override
  public ResultSet executeSelect(String query, int resultSetType, int resultSetConcur) throws SQLException {
    Statement statement = getConnection().createStatement(resultSetType, resultSetConcur);
    return statement.executeQuery(query);
  }
 
  @Override
   public void truncateTable(String tableName) throws SQLException {
     String query = "DELETE FROM " + tableName;
     executeQuery(query);
@@ -712,8 +739,8 @@ public class DBAccessorImpl implements DBAccessor {
   }
 
   @Override
  public void dropUniqueConstraint(String tableName, String constraintName, boolean ignoreFailure) throws SQLException{
    if (tableHasConstraint(convertObjectName(tableName), convertObjectName(constraintName))){
  public void dropUniqueConstraint(String tableName, String constraintName, boolean ignoreFailure) throws SQLException {
    if (tableHasConstraint(convertObjectName(tableName), convertObjectName(constraintName))) {
       String query = dbmsHelper.getDropUniqueConstraintStatement(tableName, constraintName);
       executeQuery(query, ignoreFailure);
     } else {
@@ -722,22 +749,22 @@ public class DBAccessorImpl implements DBAccessor {
   }
 
   @Override
  public void dropUniqueConstraint(String tableName, String constraintName) throws SQLException{
  public void dropUniqueConstraint(String tableName, String constraintName) throws SQLException {
     dropUniqueConstraint(tableName, constraintName, false);
   }
 
   @Override
  public void dropPKConstraint(String tableName, String constraintName, String columnName) throws SQLException{
    if (tableHasPrimaryKey(tableName, columnName)){
        String query = dbmsHelper.getDropPrimaryKeyStatement(convertObjectName(tableName), constraintName);
        executeQuery(query, false);
    } else{
        LOG.warn("Primary key doesn't exists for {} table, skipping", tableName);
  public void dropPKConstraint(String tableName, String constraintName, String columnName) throws SQLException {
    if (tableHasPrimaryKey(tableName, columnName)) {
      String query = dbmsHelper.getDropPrimaryKeyStatement(convertObjectName(tableName), constraintName);
      executeQuery(query, false);
    } else {
      LOG.warn("Primary key doesn't exists for {} table, skipping", tableName);
     }
   }
 
   @Override
  public void dropPKConstraint(String tableName, String constraintName, boolean ignoreFailure) throws SQLException{
  public void dropPKConstraint(String tableName, String constraintName, boolean ignoreFailure) throws SQLException {
     /*
      * Note, this is un-safe implementation as constraint name checking will work only for PostgresSQL,
      * MySQL and Oracle doesn't use constraint name for drop primary key
@@ -746,24 +773,31 @@ public class DBAccessorImpl implements DBAccessor {
     if (tableHasPrimaryKey(tableName, null)) {
       String query = dbmsHelper.getDropPrimaryKeyStatement(convertObjectName(tableName), constraintName);
       executeQuery(query, ignoreFailure);
    } else{
    } else {
       LOG.warn("Primary key doesn't exists for {} table, skipping", tableName);
     }
   }
 
   @Override
  public void dropPKConstraint(String tableName, String constraintName) throws SQLException{
  public void dropPKConstraint(String tableName, String constraintName) throws SQLException {
     dropPKConstraint(tableName, constraintName, false);
   }
 
   @Override
   /**
   * Execute script with autocommit and error tolerance, like psql and sqlplus do by default
   * Execute script with autocommit and error tolerance, like psql and sqlplus
   * do by default
    */</comment>
   <function><type><specifier>public</specifier> <name>void</name></type> <name>executeScript</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>filePath</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>SQLException</name></expr></argument>, <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
     <decl_stmt><decl><type><name>BufferedReader</name></type> <name>br</name> <init>= <expr><operator>new</operator> <call><name>BufferedReader</name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileReader</name><argument_list>(<argument><expr><name>filePath</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>ScriptRunner</name></type> <name>scriptRunner</name> <init>= <expr><operator>new</operator> <call><name>ScriptRunner</name><argument_list>(<argument><expr><call><name>getConnection</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>scriptRunner</name><operator>.</operator><name>runScript</name></name><argument_list>(<argument><expr><name>br</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <try>try <block>{<block_content>
      <decl_stmt><decl><type><name>ScriptRunner</name></type> <name>scriptRunner</name> <init>= <expr><operator>new</operator> <call><name>ScriptRunner</name><argument_list>(<argument><expr><call><name>getConnection</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>scriptRunner</name><operator>.</operator><name>runScript</name></name><argument_list>(<argument><expr><name>br</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> <finally>finally <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><name>br</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>br</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block></finally></try>
   </block_content>}</block></function>
 
   <annotation>@<name>Override</name></annotation>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">779</literal></expr><operator>,</operator><expr><literal type="number">31</literal> <operator>+</operator><literal type="number">813</literal></expr><operator>,</operator><expr><literal type="number">55</literal> @@ <specifier>public</specifier> <name>class</name> <name>DBAccessorImpl</name> implements <name>DBAccessor</name> <block>{
   }</block>
 
   @<name>Override</name>
  <specifier>public</specifier> <name>boolean</name> <call><name>tableHasPrimaryKey</name><argument_list>(<argument><expr><name>String</name> <name>tableName</name></expr></argument>, <argument><expr><name>String</name> <name>columnName</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>SQLException</name><block>{
  <expr><specifier>public</specifier> <name>boolean</name> <call><name>tableHasPrimaryKey</name><argument_list>(<argument><expr><name>String</name> <name>tableName</name></expr></argument>, <argument><expr><name>String</name> <name>columnName</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>SQLException</name> <block>{
     <expr><name>ResultSet</name> <name>rs</name> <operator>=</operator> <call><name>getDatabaseMetaData</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getPrimaryKeys</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><call><name>convertObjectName</name><argument_list>(<argument><expr><name>tableName</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>rs</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <name>columnName</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><block>{<block_content>
      <while>while <condition>(<expr><call><name><name>rs</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr>)</condition><block>{<block_content>
        <if_stmt><if>if <condition>(<expr><call><name><name>rs</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><literal type="string">"COLUMN_NAME"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>equalsIgnoreCase</name><argument_list>(<argument><expr><name>columnName</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
          <return>return <expr><literal type="boolean">true</literal></expr>;</return>
    <decl_stmt><decl><type><name>boolean</name></type> <name>res</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
    <try>try <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><name>rs</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <name>columnName</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <while>while <condition>(<expr><call><name><name>rs</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
          <if_stmt><if>if <condition>(<expr><call><name><name>rs</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><literal type="string">"COLUMN_NAME"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>equalsIgnoreCase</name><argument_list>(<argument><expr><name>columnName</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><name>res</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
            <break>break;</break>
          </block_content>}</block></if></if_stmt>
         </block_content>}</block></while>
      </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>rs</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>res</name> <operator>=</operator> <call><name><name>rs</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block> <finally>finally <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><name>rs</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>rs</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></if></if_stmt>
    </block_content>}</block></finally></try> <if_stmt><if type="elseif">else if <condition>(<expr><name>rs</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><block>{<block_content>
      <return>return <expr><call><name><name>rs</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr>;</return>
     </block_content>}</block></if></if_stmt>
    <return>return <expr><literal type="boolean">false</literal></expr>;</return>
    <return>return <expr><name>res</name></expr>;</return>
   </block_content>}</block></if></if_stmt>
 
   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>public</specifier> <name>int</name></type> <name>getColumnType</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>tableName</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>columnName</name></decl></parameter>)</parameter_list>
      <throws>throws <argument><expr><name>SQLException</name></expr></argument></throws> <block>{<block_content>
          <throws>throws <argument><expr><name>SQLException</name> <block>{
     <comment type="line">// We doesn't require any actual result except metadata, so WHERE clause shouldn't match</comment>
    <expr><name>String</name> <name>query</name> <operator>=</operator> <call><name><name>String</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><literal type="string">"SELECT %s FROM %s WHERE 1=2"</literal></expr></argument>, <argument><expr><name>columnName</name></expr></argument>, <argument><expr><call><name>convertObjectName</name><argument_list>(<argument><expr><name>tableName</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws><empty_stmt>;</empty_stmt>
    <decl_stmt><decl><type><name>ResultSet</name></type> <name>rs</name> <init>= <expr><call><name>executeSelect</name><argument_list>(<argument><expr><name>query</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>ResultSetMetaData</name></type> <name>rsmd</name> <init>= <expr><call><name><name>rs</name><operator>.</operator><name>getMetaData</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <return>return <expr><call><name><name>rsmd</name><operator>.</operator><name>getColumnType</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
    <decl_stmt><decl><type><name>int</name></type> <name>res</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>query</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Statement</name></type> <name>statement</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>ResultSet</name></type> <name>rs</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>ResultSetMetaData</name></type> <name>rsmd</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
    <try>try <block>{<block_content>
    <expr_stmt><expr><name>query</name> <operator>=</operator> <call><name><name>String</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><literal type="string">"SELECT %s FROM %s WHERE 1=2"</literal></expr></argument>, <argument><expr><name>columnName</name></expr></argument>, <argument><expr><call><name>convertObjectName</name><argument_list>(<argument><expr><name>tableName</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>statement</name> <operator>=</operator> <call><name>getConnection</name><argument_list>()</argument_list></call><operator>.</operator><call><name>createStatement</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>rs</name> <operator>=</operator> <call><name><name>statement</name><operator>.</operator><name>executeQuery</name></name><argument_list>(<argument><expr><name>query</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>rsmd</name> <operator>=</operator> <call><name><name>rs</name><operator>.</operator><name>getMetaData</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>res</name> <operator>=</operator> <call><name><name>rsmd</name><operator>.</operator><name>getColumnType</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> <finally>finally <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><name>rs</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><block>{<block_content>
        <expr_stmt><expr><call><name><name>rs</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
      <if_stmt><if>if <condition>(<expr><name>statement</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>statement</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block></finally></try>
    <return>return <expr><name>res</name></expr>;</return>
   </block_content>}</block></function>
 
  <function><type><specifier>private</specifier> <name>ResultSetMetaData</name></type> <name>getColumnMetadata</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>tableName</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>columnName</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>SQLException</name></expr></argument></throws><block>{<block_content>
  <function><type><specifier>private</specifier> <name>ResultSetMetaData</name></type> <name>getColumnMetadata</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>tableName</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>columnName</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>SQLException</name></expr></argument></throws> <block>{<block_content>
     <comment type="line">// We doesn't require any actual result except metadata, so WHERE clause shouldn't match</comment>
     <decl_stmt><decl><type><name>String</name></type> <name>query</name> <init>= <expr><call><name><name>String</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><literal type="string">"SELECT %s FROM %s WHERE 1=2"</literal></expr></argument>, <argument><expr><call><name>convertObjectName</name><argument_list>(<argument><expr><name>columnName</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>convertObjectName</name><argument_list>(<argument><expr><name>tableName</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>ResultSet</name></type> <name>rs</name> <init>= <expr><call><name>executeSelect</name><argument_list>(<argument><expr><name>query</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">812</literal></expr><operator>,</operator><expr><literal type="number">20</literal> <operator>+</operator><literal type="number">870</literal></expr><operator>,</operator><expr><literal type="number">20</literal> @@ <specifier>public</specifier> <name>class</name> <name>DBAccessorImpl</name> implements <name>DBAccessor</name> <block>{
 
   @<expr><name>Override</name>
   <specifier>public</specifier> <name>Class</name> <call><name>getColumnClass</name><argument_list>(<argument><expr><name>String</name> <name>tableName</name></expr></argument>, <argument><expr><name>String</name> <name>columnName</name></expr></argument>)</argument_list></call>
          <throws>throws <argument><expr><name>SQLException</name></expr></argument>, <argument><expr><name>ClassNotFoundException</name><block>{
      <expr><name>ResultSetMetaData</name> <name>rsmd</name> <operator>=</operator> <call><name>getColumnMetadata</name><argument_list>(<argument><expr><name>tableName</name></expr></argument>, <argument><expr><name>columnName</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</block></expr></expr_stmt>
      <return>return <expr><call><name><name>Class</name><operator>.</operator><name>forName</name></name><argument_list>(<argument><expr><call><name><name>rsmd</name><operator>.</operator><name>getColumnClassName</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
          <throws>throws <argument><expr><name>SQLException</name></expr></argument>, <argument><expr><name>ClassNotFoundException</name> <block>{
    <expr><name>ResultSetMetaData</name> <name>rsmd</name> <operator>=</operator> <call><name>getColumnMetadata</name><argument_list>(<argument><expr><name>tableName</name></expr></argument>, <argument><expr><name>columnName</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws><empty_stmt>;</empty_stmt>
    <return>return <expr><call><name><name>Class</name><operator>.</operator><name>forName</name></name><argument_list>(<argument><expr><call><name><name>rsmd</name><operator>.</operator><name>getColumnClassName</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
 
   <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>boolean</name></type> <name>isColumnNullable</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>tableName</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>columnName</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>SQLException</name></expr></argument></throws><block>{<block_content>
  <function><type><specifier>public</specifier> <name>boolean</name></type> <name>isColumnNullable</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>tableName</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>columnName</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>SQLException</name></expr></argument></throws> <block>{<block_content>
     <decl_stmt><decl><type><name>ResultSetMetaData</name></type> <name>rsmd</name> <init>= <expr><call><name>getColumnMetadata</name><argument_list>(<argument><expr><name>tableName</name></expr></argument>, <argument><expr><name>columnName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <return>return <expr><operator>!</operator><operator>(</operator><call><name><name>rsmd</name><operator>.</operator><name>isNullable</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call> <operator>==</operator> <name><name>ResultSetMetaData</name><operator>.</operator><name>columnNoNulls</name></name><operator>)</operator></expr>;</return>
   </block_content>}</block></function>
 
   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>public</specifier> <name>void</name></type> <name>setColumnNullable</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>tableName</name></decl></parameter>, <parameter><decl><type><name><name>DBAccessor</name><operator>.</operator><name>DBColumnInfo</name></name></type> <name>columnInfo</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>nullable</name></decl></parameter>)</parameter_list>
      <throws>throws <argument><expr><name>SQLException</name></expr></argument></throws> <block>{<block_content>
          <throws>throws <argument><expr><name>SQLException</name> <block>{
 
     <expr><name>String</name> <name>statement</name> <operator>=</operator> <call><name><name>dbmsHelper</name><operator>.</operator><name>getSetNullableStatement</name></name><argument_list>(<argument><expr><name>tableName</name></expr></argument>, <argument><expr><name>columnInfo</name></expr></argument>, <argument><expr><name>nullable</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws><empty_stmt>;</empty_stmt>
     <expr_stmt><expr><call><name>executeQuery</name><argument_list>(<argument><expr><name>statement</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">842</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">900</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>DBAccessorImpl</name> implements <name>DBAccessor</name> <block>{
         <expr><call><name>executeQuery</name><argument_list>(<argument><expr><name>query</name></expr></argument>)</argument_list></call></expr>;
       }</block></expr></expr_stmt> <if_stmt><else>else <block>{<block_content>
         <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Column nullability property is not changed due to {} column from {} table is already in {} state, skipping"</literal></expr></argument>,
                   <argument><expr><name>columnName</name></expr></argument>, <argument><expr><name>tableName</name></expr></argument>, <argument><expr><ternary><condition><expr><operator>(</operator><name>nullable</name><operator>)</operator></expr>?</condition><then><expr><literal type="string">"nullable"</literal></expr></then><else>:<expr><literal type="string">"not nullable"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name>columnName</name></expr><operator>,</operator> <expr><name>tableName</name></expr><operator>,</operator> <expr><ternary><condition><expr><operator>(</operator><name>nullable</name><operator>)</operator></expr> ?</condition><then> <expr><literal type="string">"nullable"</literal></expr> </then><else>: <expr><literal type="string">"not nullable"</literal></expr></else></ternary></expr></expr_stmt>)</block_content></block><empty_stmt>;</empty_stmt></else></if_stmt>
       </block_content>}</block></function>
     </block_content>}</block></function> <catch>catch <parameter_list>(<parameter><decl><type><name>ClassNotFoundException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
       <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>error</name></name><argument_list>(<argument><expr><literal type="string">"Could not modify table=[], column={}, error={}"</literal></expr></argument>, <argument><expr><name>tableName</name></expr></argument>, <argument><expr><name>columnName</name></expr></argument>, <argument><expr><call><name><name>e</name><operator>.</operator><name>getMessage</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">854</literal></expr><operator>,</operator><expr><literal type="number">27</literal> <operator>+</operator><literal type="number">912</literal></expr><operator>,</operator><expr><literal type="number">22</literal> @@ <specifier>public</specifier> <name>class</name> <name>DBAccessorImpl</name> implements <name>DBAccessor</name> <block>{
     <comment type="line">// ToDo: create column with more random name</comment>
     <expr><name>String</name> <name>tempColumnName</name> <operator>=</operator> <name>columnName</name> <operator>+</operator> <literal type="string">"_temp"</literal></expr>;</block></expr></expr_stmt>
 
    <switch>switch <condition>(<expr><call><name><name>configuration</name><operator>.</operator><name>getDatabaseType</name></name><argument_list>()</argument_list></call></expr>)</condition><block>{<block_content>
    <switch>switch <condition>(<expr><call><name><name>configuration</name><operator>.</operator><name>getDatabaseType</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
       <case>case <expr><name>ORACLE</name></expr>:</case>
        <comment type="line">// ToDo: add check, if target column is a part of constraint.</comment>
        <comment type="line">// oracle doesn't support direct type change from varchar2 -&gt; clob</comment>
        <if_stmt><if>if <condition>(<expr><call><name><name>String</name><operator>.</operator><name><name>class</name><operator>.</operator><name>equals</name></name></name><argument_list>(<argument><expr><name>fromType</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <operator>(</operator><name><name>Character</name><index>[]</index></name><operator>.</operator>class<operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>toType</name></expr></argument>)</argument_list></call> <operator>||</operator> <name><name>char</name><index>[]</index></name><operator>.</operator>class<operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>toType</name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition><block>{<block_content>
        <if_stmt><if>if <condition>(<expr><call><name><name>String</name><operator>.</operator><name><name>class</name><operator>.</operator><name>equals</name></name></name><argument_list>(<argument><expr><name>fromType</name></expr></argument>)</argument_list></call>
                <operator>&amp;&amp;</operator> <operator>(</operator><call><name><name>toType</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name><name>Character</name><index>[]</index></name><operator>.</operator>class</expr></argument>)</argument_list></call><operator>)</operator>
                <operator>||</operator> <call><name><name>toType</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name><name>char</name><index>[]</index></name><operator>.</operator>class</expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
           <expr_stmt><expr><call><name>addColumn</name><argument_list>(<argument><expr><name>tableName</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>DBColumnInfo</name><argument_list>(<argument><expr><name>tempColumnName</name></expr></argument>, <argument><expr><name>toType</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           <expr_stmt><expr><call><name>executeUpdate</name><argument_list>(<argument><expr><call><name><name>String</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><literal type="string">"UPDATE %s SET %s = %s"</literal></expr></argument>, <argument><expr><call><name>convertObjectName</name><argument_list>(<argument><expr><name>tableName</name></expr></argument>)</argument_list></call></expr></argument>,
                                       <argument><expr><call><name>convertObjectName</name><argument_list>(<argument><expr><name>tempColumnName</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>convertObjectName</name><argument_list>(<argument><expr><name>columnName</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                  <expr_stmt><expr><call><name>convertObjectName</name><argument_list>(<argument><expr><name>tempColumnName</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>convertObjectName</name><argument_list>(<argument><expr><name>columnName</name></expr></argument>)</argument_list></call></expr></expr_stmt>)</block_content></block></if></if_stmt>)</block_content></block><empty_stmt>;</empty_stmt></if></if_stmt>
           <expr_stmt><expr><call><name>dropColumn</name><argument_list>(<argument><expr><name>tableName</name></expr></argument>, <argument><expr><name>columnName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name>renameColumn</name><argument_list>(<argument><expr><name>tableName</name></expr></argument>,<argument><expr><name>tempColumnName</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>DBColumnInfo</name><argument_list>(<argument><expr><name>columnName</name></expr></argument>, <argument><expr><name>toType</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name>renameColumn</name><argument_list>(<argument><expr><name>tableName</name></expr></argument>, <argument><expr><name>tempColumnName</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>DBColumnInfo</name><argument_list>(<argument><expr><name>columnName</name></expr></argument>, <argument><expr><name>toType</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           <return>return;</return>
         </block_content>}</block></switch>
        <break>break;</break>
     </block_content>}</block></switch>
 
     <expr_stmt><expr><call><name>alterColumn</name><argument_list>(<argument><expr><name>tableName</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>DBColumnInfo</name><argument_list>(<argument><expr><name>columnName</name></expr></argument>, <argument><expr><name>toType</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></catch>
 






 </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>entities</name><operator>/</operator><name><name>ViewEntity</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>entities</name><operator>/</operator><name><name>ViewEntity</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>f3ddaffab2</name><operator>..</operator><name>c7630edfdd</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>entities</name><operator>/</operator><name><name>ViewEntity</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>entities</name><operator>/</operator><name><name>ViewEntity</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">802</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">802</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ViewEntity</name> implements <name>ViewDefinition</name> <block>{
    <expr><operator>*</operator>
    <operator>*</operator> @</expr><return>return <expr><name>the</name> <name>mask</name> <name>class</name> <name><name>name</name><operator>.</operator></name>
    *<operator>/</operator>
  @<name>Override</name>
   <specifier>public</specifier> <name>String</name> <call><name>getMask</name><argument_list>()</argument_list></call> <block>{
     <return>return <expr><name>mask</name></expr>;</return>
   }</block></expr></return>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>helpers</name><operator>/</operator><name><name>ScriptRunner</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>helpers</name><operator>/</operator><name><name>ScriptRunner</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">539532961b</literal><operator>..</operator><literal type="number">29fb370a0c</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>helpers</name><operator>/</operator><name><name>ScriptRunner</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>helpers</name><operator>/</operator><name><name>ScriptRunner</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">128</literal><operator>,</operator><literal type="number">9</literal> <operator>+</operator><literal type="number">128</literal><operator>,</operator><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>ScriptRunner</name> <block>{
   <expr><specifier>private</specifier> <name>void</name> <call><name>runScript</name><argument_list>(<argument><expr><name>Connection</name> <name>conn</name></expr></argument>, <argument><expr><name>Reader</name> <name>reader</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name></expr></argument>,
     <argument><expr><name>SQLException</name> <block>{
     <expr><name>StringBuffer</name> <name>command</name> <operator>=</operator> <literal type="null">null</literal></expr></block></expr></argument></throws></expr>;
    <name>Statement</name> <name>statement</name> <operator>=</operator> <literal type="null">null</literal></block></block></expr>;</expr_stmt>
     <try>try <block>{<block_content>
       <decl_stmt><decl><type><name>LineNumberReader</name></type> <name>lineReader</name> <init>= <expr><operator>new</operator> <call><name>LineNumberReader</name><argument_list>(<argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>String</name></type> <name>line</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><name>statement</name> <operator>=</operator> <call><name><name>conn</name><operator>.</operator><name>createStatement</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <while>while <condition>(<expr><operator>(</operator><name>line</name> <operator>=</operator> <call><name><name>lineReader</name><operator>.</operator><name>readLine</name></name><argument_list>()</argument_list></call><operator>)</operator> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
         <if_stmt><if>if <condition>(<expr><name>command</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
           <expr_stmt><expr><name>command</name> <operator>=</operator> <operator>new</operator> <call><name>StringBuffer</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">151</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">153</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>ScriptRunner</name> <block>{
           <expr><call><name><name>command</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><call><name><name>line</name><operator>.</operator><name>substring</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><call><name><name>line</name>
             <operator>.</operator><name>lastIndexOf</name></name><argument_list>(<argument><expr><call><name>getDelimiter</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
           <call><name><name>command</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><literal type="string">" "</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
          <decl_stmt><decl><type><name>Statement</name></type> <name>statement</name> <init>= <expr><call><name><name>conn</name><operator>.</operator><name>createStatement</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
           <expr_stmt><expr><call><name>println</name><argument_list>(<argument><expr><name>command</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">162</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">163</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>ScriptRunner</name> <block>{
             <try>try <block>{<block_content>
               <expr_stmt><expr><call><name><name>statement</name><operator>.</operator><name>execute</name></name><argument_list>(<argument><expr><call><name><name>command</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>SQLException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
              <expr_stmt><expr><call><name><name>e</name><operator>.</operator><name>fillInStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
               <expr_stmt><expr><call><name>printlnError</name><argument_list>(<argument><expr><literal type="string">"Error executing: "</literal> <operator>+</operator> <name>command</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
               <expr_stmt><expr><call><name>printlnError</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             </block_content>}</block></catch></try>
@@ <operator>-</operator><literal type="number">191</literal><operator>,</operator><literal type="number">11</literal> <operator>+</operator><literal type="number">191</literal><operator>,</operator><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>ScriptRunner</name> <block>{
           }</block></block>
 
           <name>command</name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
          <try>try <block>{<block_content>
            <expr_stmt><expr><call><name><name>statement</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
          </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <comment type="line">// Ignore to workaround a bug in Jakarta DBCP</comment>
          </block_content>}</block></catch></try>
           <expr_stmt><expr><call><name><name>Thread</name><operator>.</operator><name>yield</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></if> <else>else <block>{<block_content>
           <expr_stmt><expr><call><name><name>command</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><name>line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">206</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">201</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>ScriptRunner</name> <block>{
         <expr><call><name><name>conn</name><operator>.</operator><name>commit</name></name><argument_list>()</argument_list></call></expr>;
       }</block></expr></expr_stmt>
     </block_content>}</block></else></if_stmt> <catch>catch <parameter_list>(<parameter><decl><type><name>SQLException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name><name>e</name><operator>.</operator><name>fillInStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>printlnError</name><argument_list>(<argument><expr><literal type="string">"Error executing: "</literal> <operator>+</operator> <name>command</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>printlnError</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <throw>throw <expr><name>e</name></expr>;</throw>
     </block_content>}</block></catch> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name><name>e</name><operator>.</operator><name>fillInStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>printlnError</name><argument_list>(<argument><expr><literal type="string">"Error executing: "</literal> <operator>+</operator> <name>command</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>printlnError</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <throw>throw <expr><name>e</name></expr>;</throw>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">219</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">212</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>ScriptRunner</name> <block>{
       <if_stmt><if>if <condition>(<expr><operator>!</operator><name>autoCommit</name></expr>)</condition> <block>{<block_content>
         <expr_stmt><expr><call><name><name>conn</name><operator>.</operator><name>rollback</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></if></if_stmt></block></expr></expr_stmt>
      <if_stmt><if>if <condition>(<expr><name>statement</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>statement</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
       <expr_stmt><expr><call><name>flush</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></catch>
   </block_content>}</block></while>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>encryption</name><operator>/</operator><name><name>CredentialStoreServiceImpl</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>encryption</name><operator>/</operator><name><name>CredentialStoreServiceImpl</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">767911c7ec</literal><operator>..</operator><name>d93faecb71</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>encryption</name><operator>/</operator><name><name>CredentialStoreServiceImpl</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>encryption</name><operator>/</operator><name><name>CredentialStoreServiceImpl</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">131</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">131</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>CredentialStoreServiceImpl</name> implements <name>CredentialStoreService</name> <block>{
   }</block>
 
   <specifier>private</specifier> <name>void</name> <call><name>createKeystore</name><argument_list>(<argument><expr><name>String</name> <name>filename</name></expr></argument>, <argument><expr><name>String</name> <name>keystoreType</name></expr></argument>)</argument_list></call> <block>{
    <expr><name>FileOutputStream</name> <name>out</name> <operator>=</operator> <literal type="null">null</literal></expr>;</block></expr></expr_stmt>
     <try>try <block>{<block_content>
      <decl_stmt><decl><type><name>FileOutputStream</name></type> <name>out</name> <init>= <expr><operator>new</operator> <call><name>FileOutputStream</name><argument_list>(<argument><expr><name>filename</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><name>out</name> <operator>=</operator> <operator>new</operator> <call><name>FileOutputStream</name><argument_list>(<argument><expr><name>filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <decl_stmt><decl><type><name>KeyStore</name></type> <name>ks</name> <init>= <expr><call><name><name>KeyStore</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name>keystoreType</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>ks</name><operator>.</operator><name>load</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>ks</name><operator>.</operator><name>store</name></name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><call><name><name>masterService</name><operator>.</operator><name>getMasterSecret</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">146</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">147</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>CredentialStoreServiceImpl</name> implements <name>CredentialStoreService</name> <block>{
       <expr><call><name><name>e</name><operator>.</operator><name>printStackTrace</name></name><argument_list>()</argument_list></call></expr>;
     }</block></expr></expr_stmt> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
       <expr_stmt><expr><call><name><name>e</name><operator>.</operator><name>printStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></catch> <finally>finally <block>{<block_content>
      <try>try <block>{<block_content>
        <expr_stmt><expr><call><name><name>out</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name><name>e</name><operator>.</operator><name>printStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></catch></try>
     </block_content>}</block></finally>
   </block_content>}</block></try>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog170</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog170</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">0558c09640</literal><operator>..</operator><literal type="number">508b5dac4c</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog170</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog170</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">543</literal></expr><operator>,</operator><expr><literal type="number">51</literal> <operator>+</operator><literal type="number">543</literal></expr><operator>,</operator><expr><literal type="number">63</literal> @@ <specifier>public</specifier> <name>class</name> <name>UpgradeCatalog170</name> extends <name>AbstractUpgradeCatalog</name> <block>{
     }</block>
 
     <comment type="line">//use new connection to not affect state of internal one</comment>
    <name>Connection</name> <name>connection</name> <operator>=</operator> <call><name><name>dbAccessor</name><operator>.</operator><name>getNewConnection</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>PreparedStatement</name></type> <name>orderedConfigsStatement</name> <init>=
      <expr><call><name><name>connection</name><operator>.</operator><name>prepareStatement</name></name><argument_list>(<argument><expr><literal type="string">"SELECT config_id FROM clusterconfig WHERE type_name = ? ORDER BY create_timestamp"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>Connection</name></type> <name>connection</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>PreparedStatement</name></type> <name>orderedConfigsStatement</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>List</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>configVersionMap</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>List</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <for>for <control>(<init><decl><type><name>String</name></type> <name>configType</name> <range>: <expr><name>configTypes</name></expr></range></decl></init>)</control> <block>{<block_content>
      <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>&gt;</argument_list></name></type> <name>configIds</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>orderedConfigsStatement</name><operator>.</operator><name>setString</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>configType</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>resultSet</name> <operator>=</operator> <call><name><name>orderedConfigsStatement</name><operator>.</operator><name>executeQuery</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <if_stmt><if>if <condition>(<expr><name>resultSet</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <try>try <block>{<block_content>
          <while>while <condition>(<expr><call><name><name>resultSet</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>configIds</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name><name>resultSet</name><operator>.</operator><name>getLong</name></name><argument_list>(<argument><expr><literal type="string">"config_id"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <try>try <block>{<block_content>
      <expr_stmt><expr><name>connection</name> <operator>=</operator> <call><name><name>dbAccessor</name><operator>.</operator><name>getNewConnection</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <try>try <block>{<block_content>
        <expr_stmt><expr><name>orderedConfigsStatement</name>
                <operator>=</operator> <call><name><name>connection</name><operator>.</operator><name>prepareStatement</name></name><argument_list>(<argument><expr><literal type="string">"SELECT config_id FROM clusterconfig WHERE type_name = ? ORDER BY create_timestamp"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for>for <control>(<init><decl><type><name>String</name></type> <name>configType</name> <range>: <expr><name>configTypes</name></expr></range></decl></init>)</control> <block>{<block_content>
          <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>&gt;</argument_list></name></type> <name>configIds</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
          <expr_stmt><expr><call><name><name>orderedConfigsStatement</name><operator>.</operator><name>setString</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>configType</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><name>resultSet</name> <operator>=</operator> <call><name><name>orderedConfigsStatement</name><operator>.</operator><name>executeQuery</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
          <if_stmt><if>if <condition>(<expr><name>resultSet</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <try>try <block>{<block_content>
              <while>while <condition>(<expr><call><name><name>resultSet</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><call><name><name>configIds</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name><name>resultSet</name><operator>.</operator><name>getLong</name></name><argument_list>(<argument><expr><literal type="string">"config_id"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
              </block_content>}</block></while>
            </block_content>}</block> <finally>finally <block>{<block_content>
              <expr_stmt><expr><call><name><name>resultSet</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></finally></try>
           </block_content>}</block></if></if_stmt>
        </block_content>}</block></for> <finally>finally <block>{<block_content>
          <expr_stmt><expr><call><name><name>resultSet</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>configVersionMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>configType</name></expr></argument>, <argument><expr><name>configIds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></finally>
      </block_content>}</block> <finally>finally <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name>orderedConfigsStatement</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name><name>orderedConfigsStatement</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></if></if_stmt>
       </block_content>}</block></finally></try>
      <expr_stmt><expr><call><name><name>configVersionMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>configType</name></expr></argument>, <argument><expr><name>configIds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></try>

    <expr_stmt><expr><call><name><name>orderedConfigsStatement</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>connection</name><operator>.</operator><name>setAutoCommit</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">//disable autocommit</comment>
    <decl_stmt><decl><type><name>PreparedStatement</name></type> <name>configVersionStatement</name> <init>=
      <expr><call><name><name>connection</name><operator>.</operator><name>prepareStatement</name></name><argument_list>(<argument><expr><literal type="string">"UPDATE clusterconfig SET version = ? WHERE config_id = ?"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 

    <try>try <block>{<block_content>
      <for>for <control>(<init><decl><type><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>List</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>entry</name> <range>: <expr><call><name><name>configVersionMap</name><operator>.</operator><name>entrySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
        <decl_stmt><decl><type><name>long</name></type> <name>version</name> <init>= <expr><literal type="number">1L</literal></expr></init></decl>;</decl_stmt>
        <for>for <control>(<init><decl><type><name>Long</name></type> <name>configId</name> <range>: <expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
          <expr_stmt><expr><call><name><name>configVersionStatement</name><operator>.</operator><name>setLong</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>version</name><operator>++</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>configVersionStatement</name><operator>.</operator><name>setLong</name></name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name>configId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>configVersionStatement</name><operator>.</operator><name>addBatch</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>connection</name><operator>.</operator><name>setAutoCommit</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">//disable autocommit</comment>
      <decl_stmt><decl><type><name>PreparedStatement</name></type> <name>configVersionStatement</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
      <try>try <block>{<block_content>
        <expr_stmt><expr><name>configVersionStatement</name> <operator>=</operator> <call><name><name>connection</name><operator>.</operator><name>prepareStatement</name></name><argument_list>(<argument><expr><literal type="string">"UPDATE clusterconfig SET version = ? WHERE config_id = ?"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for>for <control>(<init><decl><type><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>List</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>entry</name> <range>: <expr><call><name><name>configVersionMap</name><operator>.</operator><name>entrySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
          <decl_stmt><decl><type><name>long</name></type> <name>version</name> <init>= <expr><literal type="number">1L</literal></expr></init></decl>;</decl_stmt>
          <for>for <control>(<init><decl><type><name>Long</name></type> <name>configId</name> <range>: <expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
            <expr_stmt><expr><call><name><name>configVersionStatement</name><operator>.</operator><name>setLong</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>version</name><operator>++</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>configVersionStatement</name><operator>.</operator><name>setLong</name></name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name>configId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>configVersionStatement</name><operator>.</operator><name>addBatch</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
          </block_content>}</block></for>
          <expr_stmt><expr><call><name><name>configVersionStatement</name><operator>.</operator><name>executeBatch</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
        <expr_stmt><expr><call><name><name>connection</name><operator>.</operator><name>commit</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt> <comment type="line">//commit changes manually</comment>
      </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>SQLException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name><name>connection</name><operator>.</operator><name>rollback</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <throw>throw <expr><name>e</name></expr>;</throw>
      </block_content>}</block></catch> <finally>finally <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name>configVersionStatement</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><block>{<block_content>
          <expr_stmt><expr><call><name><name>configVersionStatement</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></if></if_stmt>
        <expr_stmt><expr><call><name><name>configVersionStatement</name><operator>.</operator><name>executeBatch</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></finally></try>
      <expr_stmt><expr><call><name><name>connection</name><operator>.</operator><name>commit</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt> <comment type="line">//commit changes manually</comment>
    </block_content>}</block></for> <catch>catch <parameter_list>(<parameter><decl><type><name>SQLException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name><name>connection</name><operator>.</operator><name>rollback</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <throw>throw <expr><name>e</name></expr>;</throw>
     </block_content>}</block></catch> <finally>finally <block>{<block_content>
      <expr_stmt><expr><call><name><name>configVersionStatement</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>connection</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <if_stmt><if>if <condition>(<expr><name>connection</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>connection</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
     </block_content>}</block></finally>
 
   </block_content>}</block></for>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>view</name><operator>/</operator><name><name>ViewArchiveUtility</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>view</name><operator>/</operator><name><name>ViewArchiveUtility</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">3ff640e03d</literal><operator>..</operator><literal type="number">04727562ea</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>view</name><operator>/</operator><name><name>ViewArchiveUtility</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>view</name><operator>/</operator><name><name>ViewArchiveUtility</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">64</literal></expr><operator>,</operator><expr><literal type="number">18</literal> <operator>+</operator><literal type="number">64</literal></expr><operator>,</operator><expr><literal type="number">26</literal> @@ <specifier>public</specifier> <name>class</name> <name>ViewArchiveUtility</name> <block>{
    <expr><operator>*</operator> @<throws>throws <argument><expr><name>JAXBException</name></expr></argument></throws></expr> <if_stmt><if>if xml is malformed
    */
   public ViewConfig getViewConfigFromArchive<condition>(<expr><name>File</name> <name>archiveFile</name></expr>)</condition><block type="pseudo"><block_content>
      <throws>throws <argument><expr><name>MalformedURLException</name></expr></argument>, <argument><expr><name>JAXBException</name> <block>{</block></expr></argument></throws>
      <throws>throws <argument><expr><name>MalformedURLException</name></expr></argument>, <argument><expr><name>JAXBException</name></expr></argument>, <argument><expr><name>IOException</name> <block>{
    <expr><name>ViewConfig</name> <name>res</name> <operator>=</operator> <literal type="null">null</literal></expr></block></expr></argument></throws><empty_stmt>;</empty_stmt></block_content></block></if></if_stmt>
    <name>InputStream</name> <name>configStream</name> <operator>=</operator> <literal type="null">null</literal></block></expr>;</expr_stmt>
    <try>try <block>{<block_content>
     <decl_stmt><decl><type><name>ClassLoader</name></type> <name>cl</name> <init>= <expr><call><name><name>URLClassLoader</name><operator>.</operator><name>newInstance</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>URL</name><index>[]</index></name><block>{<expr><call><name><name>archiveFile</name><operator>.</operator><name>toURI</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toURL</name><argument_list>()</argument_list></call></expr>}</block></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
    <decl_stmt><decl><type><name>InputStream</name></type> <name>configStream</name> <init>= <expr><call><name><name>cl</name><operator>.</operator><name>getResourceAsStream</name></name><argument_list>(<argument><expr><name>VIEW_XML</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>configStream</name> <operator>=</operator> <call><name><name>cl</name><operator>.</operator><name>getResourceAsStream</name></name><argument_list>(<argument><expr><name>VIEW_XML</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <if_stmt><if>if <condition>(<expr><name>configStream</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><name>configStream</name> <operator>=</operator> <call><name><name>cl</name><operator>.</operator><name>getResourceAsStream</name></name><argument_list>(<argument><expr><name>WEB_INF_VIEW_XML</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></if></if_stmt>
 
     <decl_stmt><decl><type><name>JAXBContext</name></type> <name>jaxbContext</name>       <init>= <expr><call><name><name>JAXBContext</name><operator>.</operator><name>newInstance</name></name><argument_list>(<argument><expr><name><name>ViewConfig</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>Unmarshaller</name></type> <name>jaxbUnmarshaller</name> <init>= <expr><call><name><name>jaxbContext</name><operator>.</operator><name>createUnmarshaller</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <return>return <expr><operator>(</operator><name>ViewConfig</name><operator>)</operator> <call><name><name>jaxbUnmarshaller</name><operator>.</operator><name>unmarshal</name></name><argument_list>(<argument><expr><name>configStream</name></expr></argument>)</argument_list></call></expr>;</return>
    <expr_stmt><expr><name>res</name> <operator>=</operator> <operator>(</operator><name>ViewConfig</name><operator>)</operator> <call><name><name>jaxbUnmarshaller</name><operator>.</operator><name>unmarshal</name></name><argument_list>(<argument><expr><name>configStream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> <finally>finally <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><name>configStream</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>configStream</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block></finally></try>
    <return>return <expr><name>res</name></expr>;</return>
   </block_content>}</block></try>
 
   <comment type="block" format="javadoc">/**
@@ -92,7 +100,9 @@ public class ViewArchiveUtility {
    */</comment>
   <function><type><specifier>public</specifier> <name>ViewConfig</name></type> <name>getViewConfigFromExtractedArchive</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>archivePath</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>validate</name></decl></parameter>)</parameter_list>
       <throws>throws <argument><expr><name>JAXBException</name></expr></argument>, <argument><expr><name>IOException</name></expr></argument>, <argument><expr><name>SAXException</name></expr></argument></throws> <block>{<block_content>

    <decl_stmt><decl><type><name>ViewConfig</name></type> <name>res</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>InputStream</name></type>  <name>configStream</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
    <try>try <block>{<block_content>
     <decl_stmt><decl><type><name>File</name></type> <name>configFile</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>archivePath</name> <operator>+</operator> <name><name>File</name><operator>.</operator><name>separator</name></name> <operator>+</operator> <name>VIEW_XML</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>configFile</name><operator>.</operator><name>exists</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">103</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">113</literal></expr><operator>,</operator><expr><literal type="number">17</literal> @@ <specifier>public</specifier> <name>class</name> <name>ViewArchiveUtility</name> <block>{
       <expr><call><name>validateConfig</name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>configFile</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     }</block></expr></expr_stmt>
 
    <decl_stmt><decl><type><name>InputStream</name></type>  <name>configStream</name>     <init>= <expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>configFile</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>configStream</name>     <operator>=</operator> <operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>configFile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>JAXBContext</name></type>  <name>jaxbContext</name>      <init>= <expr><call><name><name>JAXBContext</name><operator>.</operator><name>newInstance</name></name><argument_list>(<argument><expr><name><name>ViewConfig</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>Unmarshaller</name></type> <name>jaxbUnmarshaller</name> <init>= <expr><call><name><name>jaxbContext</name><operator>.</operator><name>createUnmarshaller</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>res</name> <operator>=</operator> <operator>(</operator><name>ViewConfig</name><operator>)</operator> <call><name><name>jaxbUnmarshaller</name><operator>.</operator><name>unmarshal</name></name><argument_list>(<argument><expr><name>configStream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt> <finally>finally <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><name>configStream</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>configStream</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block></finally>
 
    <return>return <expr><operator>(</operator><name>ViewConfig</name><operator>)</operator> <call><name><name>jaxbUnmarshaller</name><operator>.</operator><name>unmarshal</name></name><argument_list>(<argument><expr><name>configStream</name></expr></argument>)</argument_list></call></expr>;</return>
    <return>return <expr><name>res</name></expr>;</return>
   </block_content>}</block></try>
 
   <comment type="block" format="javadoc">/**
diff --git a/ambari-server/src/main/java/org/apache/ambari/server/view/ViewRegistry.java b/ambari-server/src/main/java/org/apache/ambari/server/view/ViewRegistry.java
index 61b93272e2..28016eaef2 100644
-- a/ambari-server/src/main/java/org/apache/ambari/server/view/ViewRegistry.java
++ b/ambari-server/src/main/java/org/apache/ambari/server/view/ViewRegistry.java
@@ -1535,8 +1535,6 @@ public class ViewRegistry {
     LOG.info("Reading view archive " + archiveFile + ".");
 
     try {
      // extract the archive and get the class loader
      ClassLoader cl = extractor.extractViewArchive(viewDefinition, archiveFile, extractedArchiveDirFile);
 
       ViewConfig viewConfig = archiveUtility.getViewConfigFromExtractedArchive(extractedArchiveDirPath,
           configuration.isViewValidationEnabled());
@@ -1547,7 +1545,7 @@ public class ViewRegistry {
       viewDefinition.setConfiguration(viewConfig);
 
       if (checkViewVersions(viewDefinition, serverVersion)) {
        setupViewDefinition(viewDefinition, cl);
        setupViewDefinition(viewDefinition, extractor.extractViewArchive(viewDefinition, archiveFile, extractedArchiveDirFile));
 
         Set&lt;ViewInstanceEntity&gt; instanceDefinitions = new HashSet&lt;ViewInstanceEntity&gt;();
 
diff --git a/ambari-server/src/test/java/org/apache/ambari/server/security/encryption/CredentialStoreServiceTest.java b/ambari-server/src/test/java/org/apache/ambari/server/security/encryption/CredentialStoreServiceTest.java
index 877d2f415e..0652a52c00 100644
-- a/ambari-server/src/test/java/org/apache/ambari/server/security/encryption/CredentialStoreServiceTest.java
++ b/ambari-server/src/test/java/org/apache/ambari/server/security/encryption/CredentialStoreServiceTest.java
@@ -21,7 +21,6 @@ import junit.framework.Assert;
 import junit.framework.TestCase;
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
import org.junit.Before;
 import org.junit.Rule;
 import org.junit.Test;
 import org.junit.rules.TemporaryFolder;
diff --git a/ambari-server/src/test/java/org/apache/ambari/server/view/ViewRegistryTest.java b/ambari-server/src/test/java/org/apache/ambari/server/view/ViewRegistryTest.java
index ebe607b1e0..09df011ca3 100644
-- a/ambari-server/src/test/java/org/apache/ambari/server/view/ViewRegistryTest.java
++ b/ambari-server/src/test/java/org/apache/ambari/server/view/ViewRegistryTest.java
@@ -108,19 +108,19 @@ import org.springframework.security.core.GrantedAuthority;
  */</comment>
 <class><specifier>public</specifier> class <name>ViewRegistryTest</name> <block>{
 
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>String</name></type> <name>view_xml1</name> <init>= <expr><literal type="string">"&lt;view&gt;\n"</literal> <operator>+</operator>
  <specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>view_xml1</name> <operator>=</operator> <literal type="string">"&lt;view&gt;\n"</literal> <operator>+</operator>
       <literal type="string">"    &lt;name&gt;MY_VIEW&lt;/name&gt;\n"</literal> <operator>+</operator>
       <literal type="string">"    &lt;label&gt;My View!&lt;/label&gt;\n"</literal> <operator>+</operator>
       <literal type="string">"    &lt;version&gt;1.0.0&lt;/version&gt;\n"</literal> <operator>+</operator>
       <literal type="string">"&lt;/view&gt;"</literal></expr></init></decl>;</decl_stmt>
 
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>String</name></type> <name>view_xml2</name> <init>= <expr><literal type="string">"&lt;view&gt;\n"</literal> <operator>+</operator>
  <specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>view_xml2</name> <operator>=</operator> <literal type="string">"&lt;view&gt;\n"</literal> <operator>+</operator>
       <literal type="string">"    &lt;name&gt;MY_VIEW&lt;/name&gt;\n"</literal> <operator>+</operator>
       <literal type="string">"    &lt;label&gt;My View!&lt;/label&gt;\n"</literal> <operator>+</operator>
       <literal type="string">"    &lt;version&gt;2.0.0&lt;/version&gt;\n"</literal> <operator>+</operator>
       <literal type="string">"&lt;/view&gt;"</literal></expr></init></decl>;</decl_stmt>
 
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>String</name></type> <name>xml_valid_instance</name> <init>= <expr><literal type="string">"&lt;view&gt;\n"</literal> <operator>+</operator>
  <specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>xml_valid_instance</name> <operator>=</operator> <literal type="string">"&lt;view&gt;\n"</literal> <operator>+</operator>
       <literal type="string">"    &lt;name&gt;MY_VIEW&lt;/name&gt;\n"</literal> <operator>+</operator>
       <literal type="string">"    &lt;label&gt;My View!&lt;/label&gt;\n"</literal> <operator>+</operator>
       <literal type="string">"    &lt;version&gt;1.0.0&lt;/version&gt;\n"</literal> <operator>+</operator>
@@ <operator>-</operator><literal type="number">149</literal></expr></init></decl>,7 +149,7 @@ public <decl><type ref="prev"/><name>class</name> <name>ViewRegistryTest</name> <block>{<block_content>
       <expr_stmt><expr><literal type="string">"    &lt;/instance&gt;\n"</literal> <operator>+</operator>
       <literal type="string">"&lt;/view&gt;"</literal></expr>;</expr_stmt>
 
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>String</name></type> <name>xml_invalid_instance</name> <init>= <expr><literal type="string">"&lt;view&gt;\n"</literal> <operator>+</operator>
  <specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>xml_invalid_instance</name> <operator>=</operator> <literal type="string">"&lt;view&gt;\n"</literal> <operator>+</operator>
       <literal type="string">"    &lt;name&gt;MY_VIEW&lt;/name&gt;\n"</literal> <operator>+</operator>
       <literal type="string">"    &lt;label&gt;My View!&lt;/label&gt;\n"</literal> <operator>+</operator>
       <literal type="string">"    &lt;version&gt;1.0.0&lt;/version&gt;\n"</literal> <operator>+</operator>
@@ <operator>-</operator><literal type="number">169</literal></expr></init></decl>,7 +169,7 @@ public <decl><type ref="prev"/><name>class</name> <name>ViewRegistryTest</name> <block>{<block_content>
       <expr_stmt><expr><literal type="string">"    &lt;/instance&gt;\n"</literal> <operator>+</operator>
       <literal type="string">"&lt;/view&gt;"</literal></expr>;</expr_stmt>
 
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>String</name></type> <name>AUTO_VIEW_XML</name> <init>= <expr><literal type="string">"&lt;view&gt;\n"</literal> <operator>+</operator>
  <specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>AUTO_VIEW_XML</name> <operator>=</operator> <literal type="string">"&lt;view&gt;\n"</literal> <operator>+</operator>
       <literal type="string">"    &lt;name&gt;MY_VIEW&lt;/name&gt;\n"</literal> <operator>+</operator>
       <literal type="string">"    &lt;label&gt;My View!&lt;/label&gt;\n"</literal> <operator>+</operator>
       <literal type="string">"    &lt;version&gt;1.0.0&lt;/version&gt;\n"</literal> <operator>+</operator>
@@ <operator>-</operator><literal type="number">180</literal></expr></init></decl>,7 +180,7 @@ public <decl><type ref="prev"/><name>class</name> <name>ViewRegistryTest</name> <block>{<block_content>
       <expr_stmt><expr><literal type="string">"    &lt;/auto-instance&gt;\n"</literal> <operator>+</operator>
       <literal type="string">"&lt;/view&gt;"</literal></expr>;</expr_stmt>
 
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>String</name></type> <name>AUTO_VIEW_WILD_STACK_XML</name> <init>= <expr><literal type="string">"&lt;view&gt;\n"</literal> <operator>+</operator>
  <specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>AUTO_VIEW_WILD_STACK_XML</name> <operator>=</operator> <literal type="string">"&lt;view&gt;\n"</literal> <operator>+</operator>
       <literal type="string">"    &lt;name&gt;MY_VIEW&lt;/name&gt;\n"</literal> <operator>+</operator>
       <literal type="string">"    &lt;label&gt;My View!&lt;/label&gt;\n"</literal> <operator>+</operator>
       <literal type="string">"    &lt;version&gt;1.0.0&lt;/version&gt;\n"</literal> <operator>+</operator>
@@ <operator>-</operator><literal type="number">191</literal></expr></init></decl>,7 +191,7 @@ public <decl><type ref="prev"/><name>class</name> <name>ViewRegistryTest</name> <block>{<block_content>
       <expr_stmt><expr><literal type="string">"    &lt;/auto-instance&gt;\n"</literal> <operator>+</operator>
       <literal type="string">"&lt;/view&gt;"</literal></expr>;</expr_stmt>
 
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>String</name></type> <name>AUTO_VIEW_BAD_STACK_XML</name> <init>= <expr><literal type="string">"&lt;view&gt;\n"</literal> <operator>+</operator>
  <specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>AUTO_VIEW_BAD_STACK_XML</name> <operator>=</operator> <literal type="string">"&lt;view&gt;\n"</literal> <operator>+</operator>
       <literal type="string">"    &lt;name&gt;MY_VIEW&lt;/name&gt;\n"</literal> <operator>+</operator>
       <literal type="string">"    &lt;label&gt;My View!&lt;/label&gt;\n"</literal> <operator>+</operator>
       <literal type="string">"    &lt;version&gt;1.0.0&lt;/version&gt;\n"</literal> <operator>+</operator>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>shell</name><operator>/</operator><name>ambari</name><operator>-</operator><name>groovy</name><operator>-</operator><name>shell</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>shell</name><operator>/</operator><name><name>AmbariShell</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>shell</name><operator>/</operator><name>ambari</name><operator>-</operator><name>groovy</name><operator>-</operator><name>shell</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>shell</name><operator>/</operator><name><name>AmbariShell</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>e842620c7f</name><operator>..</operator><literal type="number">02269a89d2</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>shell</name><operator>/</operator><name>ambari</name><operator>-</operator><name>groovy</name><operator>-</operator><name>shell</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>shell</name><operator>/</operator><name><name>AmbariShell</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>shell</name><operator>/</operator><name>ambari</name><operator>-</operator><name>groovy</name><operator>-</operator><name>shell</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>shell</name><operator>/</operator><name><name>AmbariShell</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">55</literal></expr></init></decl>,7 +55,6 @@ public <decl><type ref="prev"/><name>class</name> <name>AmbariShell</name> implements <name>CommandLineRunner</name></decl>, <decl><type ref="prev"/><name>ShellStatusListener</name> <block>{<block_content>
           <break>break;</break>
         </block_content>}</block></decl></decl_stmt>
       </block_content>}</block></decl></decl_stmt>
      <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>exit</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></decl></decl_stmt> <if_stmt><else>else <block>{<block_content>
       <expr_stmt><expr><call><name><name>shell</name><operator>.</operator><name>addShellStatusListener</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>shell</name><operator>.</operator><name>start</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>shell</name><operator>/</operator><name>ambari</name><operator>-</operator><name>groovy</name><operator>-</operator><name>shell</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>shell</name><operator>/</operator><name>commands</name><operator>/</operator><name><name>BlueprintCommands</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>shell</name><operator>/</operator><name>ambari</name><operator>-</operator><name>groovy</name><operator>-</operator><name>shell</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>shell</name><operator>/</operator><name>commands</name><operator>/</operator><name><name>BlueprintCommands</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">73000d0627</literal><operator>..</operator><literal type="number">96549090cb</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>shell</name><operator>/</operator><name>ambari</name><operator>-</operator><name>groovy</name><operator>-</operator><name>shell</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>shell</name><operator>/</operator><name>commands</name><operator>/</operator><name><name>BlueprintCommands</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>shell</name><operator>/</operator><name>ambari</name><operator>-</operator><name>groovy</name><operator>-</operator><name>shell</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>shell</name><operator>/</operator><name>commands</name><operator>/</operator><name><name>BlueprintCommands</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">168</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">168</literal></expr><operator>,</operator><expr><literal type="number">19</literal> @@ <specifier>public</specifier> <name>class</name> <name>BlueprintCommands</name> implements <name>CommandMarker</name> <block>{
 
   <expr><specifier>private</specifier> <name>String</name> <call><name>readContent</name><argument_list>(<argument><expr><name>File</name> <name>file</name></expr></argument>)</argument_list></call> <block>{
     <expr><name>String</name> <name>content</name> <operator>=</operator> <literal type="null">null</literal></expr>;
    <name>FileInputStream</name> <name>fis</name> <operator>=</operator> <literal type="null">null</literal></block></expr>;</block></expr></expr_stmt>
     <try>try <block>{<block_content>
      <expr_stmt><expr><name>content</name> <operator>=</operator> <call><name><name>IOUtils</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>fis</name> <operator>=</operator> <operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>content</name> <operator>=</operator> <call><name><name>IOUtils</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><name>fis</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
       <comment type="line">// not important</comment>
    </block_content>}</block></catch> <finally>finally <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><name>fis</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <try>try <block>{<block_content>
          <expr_stmt><expr><call><name><name>fis</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
        </block_content>}</block></catch></try>
      </block_content>}</block></if></if_stmt>
     </block_content>}</block></finally></try>
     <return>return <expr><name>content</name></expr>;</return>
   </block_content>}</block></else></if_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>shell</name><operator>/</operator><name>ambari</name><operator>-</operator><name>groovy</name><operator>-</operator><name>shell</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>shell</name><operator>/</operator><name>commands</name><operator>/</operator><name><name>ElephantCommand</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>shell</name><operator>/</operator><name>ambari</name><operator>-</operator><name>groovy</name><operator>-</operator><name>shell</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>shell</name><operator>/</operator><name>commands</name><operator>/</operator><name><name>ElephantCommand</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>a236054982</name><operator>..</operator><literal type="number">3988c6f846</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>shell</name><operator>/</operator><name>ambari</name><operator>-</operator><name>groovy</name><operator>-</operator><name>shell</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>shell</name><operator>/</operator><name>commands</name><operator>/</operator><name><name>ElephantCommand</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>shell</name><operator>/</operator><name>ambari</name><operator>-</operator><name>groovy</name><operator>-</operator><name>shell</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>shell</name><operator>/</operator><name>commands</name><operator>/</operator><name><name>ElephantCommand</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>shell</name><operator>.</operator><name>commands</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStream</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>io</name><operator>.</operator><name>IOUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>springframework</name><operator>.</operator><name>shell</name><operator>.</operator><name>core</name><operator>.</operator><name>CommandMarker</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">48</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">49</literal></expr><operator>,</operator><expr><literal type="number">16</literal> @@ <specifier>public</specifier> <name>class</name> <name>ElephantCommand</name> implements <name>CommandMarker</name> <block>{
    <expr><operator>*</operator><operator>/</operator>
   @<call><name>CliCommand</name><argument_list>(<argument><expr><name>value</name> <operator>=</operator> <literal type="string">"hello"</literal></expr></argument>, <argument><expr><name>help</name> <operator>=</operator> <literal type="string">"Prints a simple elephant to the console"</literal></expr></argument>)</argument_list></call>
   <specifier>public</specifier> <name>String</name> <call><name>elephant</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr>
    <return>return <expr><call><name><name>IOUtils</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><call><name>getClass</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getResourceAsStream</name><argument_list>(<argument><expr><literal type="string">"/elephant.txt"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
    <name>String</name> <name>res</name> <operator>=</operator> <literal type="null">null</literal></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>InputStream</name></type> <name>is</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
    <try>try<block>{<block_content>
    <expr_stmt><expr><name>is</name> <operator>=</operator> <call><name>getClass</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getResourceAsStream</name><argument_list>(<argument><expr><literal type="string">"/elephant.txt"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>res</name> <operator>=</operator> <call><name><name>IOUtils</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><name>is</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> <finally>finally <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><name>is</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>is</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block></finally></try>
    <return>return <expr><name>res</name></expr>;</return>
   </block_content>}</block></decl></decl_stmt>
 </block_content>}</block></decl></decl_stmt>
<expr_stmt><expr><operator>\</operator> <name>No</name> <name>newline</name> <name>at</name> <name>end</name> <name>of</name> <name>file</name>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>shell</name><operator>/</operator><name>ambari</name><operator>-</operator><name>groovy</name><operator>-</operator><name>shell</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>shell</name><operator>/</operator><name>customization</name><operator>/</operator><name><name>AmbariBanner</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>shell</name><operator>/</operator><name>ambari</name><operator>-</operator><name>groovy</name><operator>-</operator><name>shell</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>shell</name><operator>/</operator><name>customization</name><operator>/</operator><name><name>AmbariBanner</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">850687eca2</literal><operator>..</operator><name>ea0e39d942</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>shell</name><operator>/</operator><name>ambari</name><operator>-</operator><name>groovy</name><operator>-</operator><name>shell</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>shell</name><operator>/</operator><name>customization</name><operator>/</operator><name><name>AmbariBanner</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>shell</name><operator>/</operator><name>ambari</name><operator>-</operator><name>groovy</name><operator>-</operator><name>shell</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>shell</name><operator>/</operator><name>customization</name><operator>/</operator><name><name>AmbariBanner</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@</expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>shell</name><operator>.</operator><name>customization</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>logging</name><operator>.</operator><name>Level</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>logging</name><operator>.</operator><name>Logger</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>io</name><operator>.</operator><name>IOUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>springframework</name><operator>.</operator><name>shell</name><operator>.</operator><name>plugin</name><operator>.</operator><name>BannerProvider</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">36</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">39</literal></expr><operator>,</operator><expr><literal type="number">22</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariBanner</name> implements <name>BannerProvider</name> <block>{
 
   @<expr><name>Override</name>
   <specifier>public</specifier> <name>String</name> <call><name>getBanner</name><argument_list>()</argument_list></call> <block>{
    <expr><name>String</name> <name>res</name> <operator>=</operator> <literal type="null">null</literal></expr>;
    <name>InputStream</name> <name>is</name> <operator>=</operator> <literal type="null">null</literal></block></expr>;</block></expr></expr_stmt>
     <try>try <block>{<block_content>
      <return>return <expr><call><name><name>IOUtils</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><call><name>getClass</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getResourceAsStream</name><argument_list>(<argument><expr><literal type="string">"/banner.txt"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
      <expr_stmt><expr><name>is</name> <operator>=</operator> <call><name>getClass</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getResourceAsStream</name><argument_list>(<argument><expr><literal type="string">"/banner.txt"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>res</name> <operator>=</operator> <call><name><name>IOUtils</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><name>is</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <return>return <expr><literal type="string">"AmbariShell"</literal></expr>;</return>
      <expr_stmt><expr><name>res</name> <operator>=</operator> <literal type="string">"AmbariShell"</literal></expr>;</expr_stmt>
    </block_content>}</block></catch> <finally>finally <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><name>is</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <try>try <block>{<block_content>
          <expr_stmt><expr><call><name><name>is</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
        </block_content>}</block></catch></try>
      </block_content>}</block></if></if_stmt>
     </block_content>}</block></finally></try>
    <return>return <expr><name>res</name></expr>;</return>
   }</block></class>
 
   <annotation>@<name>Override</name></annotation>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>shell</name><operator>/</operator><name>ambari</name><operator>-</operator><name>groovy</name><operator>-</operator><name>shell</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>shell</name><operator>/</operator><name>flash</name><operator>/</operator><name><name>InstallProgress</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>shell</name><operator>/</operator><name>ambari</name><operator>-</operator><name>groovy</name><operator>-</operator><name>shell</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>shell</name><operator>/</operator><name>flash</name><operator>/</operator><name><name>InstallProgress</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>dbf8e65c87</name><operator>..</operator><name>bad5b30180</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>shell</name><operator>/</operator><name>ambari</name><operator>-</operator><name>groovy</name><operator>-</operator><name>shell</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>shell</name><operator>/</operator><name>flash</name><operator>/</operator><name><name>InstallProgress</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>shell</name><operator>/</operator><name>ambari</name><operator>-</operator><name>groovy</name><operator>-</operator><name>shell</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>shell</name><operator>/</operator><name>flash</name><operator>/</operator><name><name>InstallProgress</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">51</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">51</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>InstallProgress</name> extends <name>AbstractFlash</name> <block>{
         <expr><name>int</name> <name>intValue</name> <operator>=</operator> <call><name><name>decimal</name><operator>.</operator><name>intValue</name></name><argument_list>()</argument_list></call></expr>;</block></expr></expr_stmt>
         <if_stmt><if>if <condition>(<expr><name>intValue</name> <operator>!=</operator> <name>SUCCESS</name> <operator>&amp;&amp;</operator> <name>intValue</name> <operator>!=</operator> <name>FAILED</name></expr>)</condition> <block>{<block_content>
           <expr_stmt><expr><call><name><name>sb</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><literal type="string">"Installation: "</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>append</name><argument_list>(<argument><expr><name>decimal</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>append</name><argument_list>(<argument><expr><literal type="string">"% "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <decl_stmt><decl><type><name>int</name></type> <name>rounded</name> <init>= <expr><call><name>round</name><argument_list>(<argument><expr><call><name><name>progress</name><operator>.</operator><name>setScale</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name><name>BigDecimal</name><operator>.</operator><name>ROUND_UP</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>intValue</name><argument_list>()</argument_list></call> <operator>/</operator> <literal type="number">10</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">10</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
          <decl_stmt><decl><type><name>long</name></type> <name>rounded</name> <init>= <expr><call><name>round</name><argument_list>(<argument><expr><call><name><name>progress</name><operator>.</operator><name>setScale</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name><name>BigDecimal</name><operator>.</operator><name>ROUND_UP</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>floatValue</name><argument_list>()</argument_list></call> <operator>/</operator> <literal type="number">10</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <for>for <control>(<init><decl><type><name>long</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">10</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
             <if_stmt><if>if <condition>(<expr><name>i</name> <operator>&lt;</operator> <name>rounded</name></expr>)</condition> <block>{<block_content>
               <expr_stmt><expr><call><name><name>sb</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><literal type="string">"="</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             </block_content>}</block></if> <else>else <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">71</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">71</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>InstallProgress</name> extends <name>AbstractFlash</name> <block>{
       }</block></expr></expr_stmt>
     </block_content>}</block></else></if_stmt> <if_stmt><else>else <block>{<block_content>
       <if_stmt><if>if <condition>(<expr><name>exit</name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>exit</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>done</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
       </block_content>}</block></if></if_stmt>
     </block_content>}</block></else></if_stmt>
     <return>return <expr><call><name><name>sb</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr>;</return>
<expr_stmt><expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></expr_stmt></block_content></block></for></block_content></block></for></block_content></block></if></if_stmt></block_content></block></function></block_content></block></while></block_content></block></try></block_content></block></if></if_stmt></block_content></block></for></block_content></block></try></block_content></block></while></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function>

</unit>
