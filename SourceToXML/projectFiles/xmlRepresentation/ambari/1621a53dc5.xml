<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/ambari/1621a53dc5.java"><expr_stmt><expr><name>From</name> <literal type="number">1621a53dc5820ba1ca5bf5204628b51d341f0caa</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Jonathan</name> <name><name>Hurley</name> <argument_list type="generic">&lt;<argument><name>jhurley</name><annotation>@<name><name>hortonworks</name><operator>.</operator><name>com</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Wed</name></expr><operator>,</operator> <expr><literal type="number">24</literal> <name>Feb</name> <literal type="number">2016</literal> <literal type="number">18</literal><operator>:</operator><literal type="number">02</literal><operator>:</operator><literal type="number">00</literal> <operator>-</operator><literal type="number">0500</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>AMBARI</name><operator>-</operator><literal type="number">15173</literal> <operator>-</operator> <name>Express</name> <name>Upgrade</name> <name>Stuck</name> <name>At</name> <name>Manual</name> <name>Prompt</name> <name>Due</name> <name>To</name>
 <name>HRC</name> <name>Status</name> <name>Calculation</name> <name>Cache</name> <call><name>Problem</name> <argument_list>(<argument><expr><name>jonathanhurley</name></expr></argument>)</argument_list></call>

<operator>--</operator>
 <operator>...</operator><operator>/</operator><name>persist</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>AmbariJpaPersistModule</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">64</literal> <operator>++</operator><operator>++</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>ambari</name><operator>/</operator><name>annotations</name><operator>/</operator><name><name>TransactionalLock</name><operator>.</operator><name>java</name></name> <operator>|</operator> <literal type="number">148</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator>
 <operator>...</operator><operator>/</operator><name>actionmanager</name><operator>/</operator><name><name>ActionDBAccessorImpl</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">28</literal> <operator>++</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>orm</name><operator>/</operator><name><name>AmbariJpaLocalTxnInterceptor</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">45</literal> <operator>++</operator><operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>orm</name><operator>/</operator><name><name>TransactionalLockInterceptor</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">84</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator>
 <operator>...</operator><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name><name>TransactionalLocks</name><operator>.</operator><name>java</name></name> <operator>|</operator> <literal type="number">170</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>dao</name><operator>/</operator><name><name>HostRoleCommandDAO</name><operator>.</operator><name>java</name></name>    <operator>|</operator> <literal type="number">137</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>stacks</name><operator>/</operator><name>HDP</name><operator>/</operator><literal type="number">2.3</literal><operator>/</operator><name>upgrades</name><operator>/</operator><name>upgrade</name><operator>-</operator><literal type="number">2.4.xml</literal>   <operator>|</operator>   <literal type="number">8</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>annotations</name><operator>/</operator><name><name>TransactionalLockTest</name><operator>.</operator><name>java</name></name>    <operator>|</operator> <literal type="number">126</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator>
 <literal type="number">9</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">710</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">100</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>annotations</name><operator>/</operator><name><name>TransactionalLock</name><operator>.</operator><name>java</name></name>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name><name>TransactionalLockInterceptor</name><operator>.</operator><name>java</name></name>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name><name>TransactionalLocks</name><operator>.</operator><name>java</name></name>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>annotations</name><operator>/</operator><name><name>TransactionalLockTest</name><operator>.</operator><name>java</name></name>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>com</name><operator>/</operator><name>google</name><operator>/</operator><name>inject</name><operator>/</operator><name>persist</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>AmbariJpaPersistModule</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>com</name><operator>/</operator><name>google</name><operator>/</operator><name>inject</name><operator>/</operator><name>persist</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>AmbariJpaPersistModule</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">4e4dd35ee2</literal><operator>..</operator><literal type="number">604546ca05</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>com</name><operator>/</operator><name>google</name><operator>/</operator><name>inject</name><operator>/</operator><name>persist</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>AmbariJpaPersistModule</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>com</name><operator>/</operator><name>google</name><operator>/</operator><name>inject</name><operator>/</operator><name>persist</name><operator>/</operator><name>jpa</name><operator>/</operator><name><name>AmbariJpaPersistModule</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">26</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@
  <operator>*</operator><operator>/</operator></expr></expr_stmt>
 <package>package <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>persist</name><operator>.</operator><name>jpa</name></name>;</package>
 
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>collect</name><operator>.</operator><name>Lists</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>Inject</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>Singleton</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>persist</name><operator>.</operator><name>PersistModule</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>persist</name><operator>.</operator><name>PersistService</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>persist</name><operator>.</operator><name>UnitOfWork</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>persist</name><operator>.</operator><name>finder</name><operator>.</operator><name>DynamicFinder</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>persist</name><operator>.</operator><name>finder</name><operator>.</operator><name>Finder</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>util</name><operator>.</operator><name>Providers</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>aopalliance</name><operator>.</operator><name>intercept</name><operator>.</operator><name>MethodInterceptor</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>aopalliance</name><operator>.</operator><name>intercept</name><operator>.</operator><name>MethodInvocation</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>AmbariJpaLocalTxnInterceptor</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>AmbariLocalSessionInterceptor</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>RequiresSession</name></name>;</import>

 <import>import static <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>matcher</name><operator>.</operator><name>Matchers</name><operator>.</operator><name>annotatedWith</name></name>;</import>
 <import>import static <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>matcher</name><operator>.</operator><name>Matchers</name><operator>.</operator><name>any</name></name>;</import>
 
<import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>EntityManager</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>EntityManagerFactory</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>reflect</name><operator>.</operator><name>AccessibleObject</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>reflect</name><operator>.</operator><name>InvocationHandler</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>reflect</name><operator>.</operator><name>Method</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">44</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">27</literal></expr><operator>,</operator><expr><literal type="number">27</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>reflect</name><operator>.</operator><name>Proxy</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Properties</name></name>;</import>
 
<import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>EntityManager</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>EntityManagerFactory</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>aopalliance</name><operator>.</operator><name>intercept</name><operator>.</operator><name>MethodInterceptor</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>aopalliance</name><operator>.</operator><name>intercept</name><operator>.</operator><name>MethodInvocation</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>annotations</name><operator>.</operator><name>TransactionalLock</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>AmbariJpaLocalTxnInterceptor</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>AmbariLocalSessionInterceptor</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>TransactionalLockInterceptor</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>RequiresSession</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>collect</name><operator>.</operator><name>Lists</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>Inject</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>Singleton</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>persist</name><operator>.</operator><name>PersistModule</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>persist</name><operator>.</operator><name>PersistService</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>persist</name><operator>.</operator><name>UnitOfWork</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>persist</name><operator>.</operator><name>finder</name><operator>.</operator><name>DynamicFinder</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>persist</name><operator>.</operator><name>finder</name><operator>.</operator><name>Finder</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>util</name><operator>.</operator><name>Providers</name></name>;</import>

 <comment type="block" format="javadoc">/**
  * Copy of guice persist module for local modifications
  */</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">60</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">64</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariJpaPersistModule</name> extends <name>PersistModule</name> <block>{
 
   <expr><specifier>private</specifier> <name>Properties</name> <name>properties</name></expr>;
   <expr><specifier>private</specifier> <name>MethodInterceptor</name> <name>transactionInterceptor</name></expr>;
  <expr><specifier>private</specifier> <name>MethodInterceptor</name> <name>sessionInterceptor</name></expr>;
 
   @<expr><name>Override</name> <specifier>protected</specifier> <name>void</name> <call><name>configurePersistence</name><argument_list>()</argument_list></call> <block>{
     <expr><call><name>bindConstant</name><argument_list>()</argument_list></call><operator>.</operator><call><name>annotatedWith</name><argument_list>(<argument><expr><name><name>Jpa</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>to</name><argument_list>(<argument><expr><name>jpaUnit</name></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">68</literal></expr>,<expr><literal type="number">8</literal> <operator>+</operator><literal type="number">71</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariJpaPersistModule</name> extends <name>PersistModule</name> <block>{
     <if_stmt><if>if <condition>(<expr><literal type="null">null</literal> <operator>!=</operator> <name>properties</name></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><call><name>bind</name><argument_list>(<argument><expr><name><name>Properties</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>annotatedWith</name><argument_list>(<argument><expr><name><name>Jpa</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><name>properties</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt/></block_content></block></if></if_stmt>}</block></expr> <if_stmt><else>else <block>{<block_content>
      <expr_stmt><expr><call><name>bind</name><argument_list>(<argument><expr><name><name>Properties</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>annotatedWith</name><argument_list>(<argument><expr><name><name>Jpa</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>toProvider</name><argument_list>(<argument><expr><name><name>Providers</name><operator>.</operator></name>&lt;<name>Properties</name><operator>&gt;</operator><call><name>of</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>bind</name><argument_list>(<argument><expr><name><name>Properties</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>annotatedWith</name><argument_list>(<argument><expr><name><name>Jpa</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toProvider</name><argument_list>(<argument><expr><name><name>Providers</name><operator>.</operator></name>&lt;<name>Properties</name><operator>&gt;</operator> <call><name>of</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt/></block_content></block></else></if_stmt>}</block>
 
     <call><name>bind</name><argument_list>(<argument><expr><name><name>AmbariJpaPersistService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>in</name><argument_list>(<argument><expr><name><name>Singleton</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">77</literal></expr>,<expr><literal type="number">16</literal> <operator>+</operator><literal type="number">79</literal></expr>,<expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariJpaPersistModule</name> extends <name>PersistModule</name> <block>{
     <expr><call><name>bind</name><argument_list>(<argument><expr><name><name>PersistService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>to</name><argument_list>(<argument><expr><name><name>AmbariJpaPersistService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>bind</name><argument_list>(<argument><expr><name><name>UnitOfWork</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>to</name><argument_list>(<argument><expr><name><name>AmbariJpaPersistService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>bind</name><argument_list>(<argument><expr><name><name>EntityManager</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toProvider</name><argument_list>(<argument><expr><name><name>AmbariJpaPersistService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>bind</name><argument_list>(<argument><expr><name><name>EntityManagerFactory</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>toProvider</name><argument_list>(<argument><expr><name><name>JpaPersistService</name><operator>.</operator><name>EntityManagerFactoryProvider</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;


    <expr><call><name>bind</name><argument_list>(<argument><expr><name><name>EntityManagerFactory</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toProvider</name><argument_list>(<argument><expr><name><name>JpaPersistService</name><operator>.</operator><name>EntityManagerFactoryProvider</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
 
     <expr><name>transactionInterceptor</name> <operator>=</operator> <operator>new</operator> <call><name>AmbariJpaLocalTxnInterceptor</name><argument_list>()</argument_list></call></expr>;
     <expr><call><name>requestInjection</name><argument_list>(<argument><expr><name>transactionInterceptor</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>sessionInterceptor</name> <operator>=</operator> <operator>new</operator> <call><name>AmbariLocalSessionInterceptor</name><argument_list>()</argument_list></call></expr>;
    <expr><call><name>requestInjection</name><argument_list>(<argument><expr><name>sessionInterceptor</name></expr></argument>)</argument_list></call></expr>;
 
    <expr><name>MethodInterceptor</name> <name>sessionInterceptor</name> <operator>=</operator> <operator>new</operator> <call><name>AmbariLocalSessionInterceptor</name><argument_list>()</argument_list></call></expr>;
    <expr><call><name>requestInjection</name><argument_list>(<argument><expr><name>sessionInterceptor</name></expr></argument>)</argument_list></call></expr>;
 
     <comment type="line">// Bind dynamic finders.</comment>
     <for>for <control>(<init><decl><type><name><name>Class</name><argument_list type="generic">&lt;<argument><name>?</name></argument>&gt;</argument_list></name></type> <name>finder</name> <range>: <expr><name>dynamicFinders</name></expr></range></decl></init>)</control> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">95</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">94</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariJpaPersistModule</name> extends <name>PersistModule</name> <block>{
 
     <expr><call><name>bindInterceptor</name><argument_list>(<argument><expr><call><name>annotatedWith</name><argument_list>(<argument><expr><name><name>RequiresSession</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>any</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>sessionInterceptor</name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>bindInterceptor</name><argument_list>(<argument><expr><call><name>any</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>annotatedWith</name><argument_list>(<argument><expr><name><name>RequiresSession</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>sessionInterceptor</name></expr></argument>)</argument_list></call></expr>;

    <comment type="line">// method-level binding for cross-cutting locks</comment>
    <comment type="line">// this runs before the base class binds Transactional, so it always runs</comment>
    <comment type="line">// first</comment>
    <expr><name>MethodInterceptor</name> <name>lockAwareInterceptor</name> <operator>=</operator> <operator>new</operator> <call><name>TransactionalLockInterceptor</name><argument_list>()</argument_list></call></expr>;
    <expr><call><name>requestInjection</name><argument_list>(<argument><expr><name>lockAwareInterceptor</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>bindInterceptor</name><argument_list>(<argument><expr><call><name>any</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>annotatedWith</name><argument_list>(<argument><expr><name><name>TransactionalLock</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>lockAwareInterceptor</name></expr></argument>)</argument_list></call></expr>;
   }</block>
 
 
@@ <operator>-</operator><literal type="number">135</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">141</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariJpaPersistModule</name> extends <name>PersistModule</name> <block>{
       @<expr><name>Inject</name>
       <name>JpaFinderProxy</name> <name>finderProxy</name></expr>;
 
      @<expr><name>Override</name>
       <specifier>public</specifier> <name>Object</name> <call><name>invoke</name><argument_list>(<argument><expr><name>final</name> <name>Object</name> <name>thisObject</name></expr></argument>, <argument><expr><name>final</name> <name>Method</name> <name>method</name></expr></argument>, <argument><expr><name>final</name> <name><name>Object</name><index>[]</index></name> <name>args</name></expr></argument>)</argument_list></call>
           <throws>throws <argument><expr><name>Throwable</name> <block>{</block></expr></argument>
 
@<argument>@ <expr><operator>-</operator><literal type="number">146</literal></expr></argument>,<argument><expr><literal type="number">22</literal> <operator>+</operator><literal type="number">153</literal></expr></argument>,<argument><expr><literal type="number">27</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariJpaPersistModule</name> extends <name>PersistModule</name></expr></argument></throws> <block>{<block_content>
         <expr_stmt/></block_content></block></expr>}</block></expr></expr_stmt>
 
         <return>return <expr><call><name><name>finderProxy</name><operator>.</operator><name>invoke</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>MethodInvocation</name></super><argument_list>()</argument_list> <block>{
          <function><annotation>@<name>Override</name></annotation>
           <type><specifier>public</specifier> <name>Method</name></type> <name>getMethod</name><parameter_list>()</parameter_list> <block>{<block_content>
             <return>return <expr><name>method</name></expr>;</return>
           <expr_stmt/>}</block_content>
 
          @Override
           public Object[] getArguments(</block></function>)</block> <block>{
             <return>return <expr><ternary><condition><expr><literal type="null">null</literal> <operator>==</operator> <name>args</name></expr> ?</condition><then> <expr><operator>new</operator> <name><name>Object</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr> </then><else>: <expr><name>args</name></expr></else></ternary></expr>;</return>
           <expr_stmt/>}</block>
 
          <function><annotation>@<name>Override</name></annotation>
           <type><specifier>public</specifier> <name>Object</name></type> <name>proceed</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Throwable</name></expr></argument></throws> <block>{<block_content>
             <return>return <expr><call><name><name>method</name><operator>.</operator><name>invoke</name></name><argument_list>(<argument><expr><name>thisObject</name></expr></argument>, <argument><expr><name>args</name></expr></argument>)</argument_list></call></expr>;</return>
           <expr_stmt/>}</block_content>
 
          @Override
           public Object getThis(</block></function></class></expr></argument>)</argument_list></call> <block>{
             <throw>throw <argument_list>new <argument><expr><call><name>UnsupportedOperationException</name><argument_list>(<argument><expr><literal type="string">"Bottomless proxies don't expose a this."</literal></expr></argument>)</argument_list></call></expr></argument></argument_list></throw>;
           }</block>
 
          @<name>Override</name>
           <specifier>public</specifier> <name>AccessibleObject</name> <call><name>getStaticPart</name><argument_list>()</argument_list></call> <block>{
             <throw>throw <argument_list>new <argument><expr><call><name>UnsupportedOperationException</name><argument_list>()</argument_list></call></expr></argument></argument_list></throw>;
           }</block>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>annotations</name><operator>/</operator><name><name>TransactionalLock</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>annotations</name><operator>/</operator><name><name>TransactionalLock</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">0000000000..cd961ba4b5</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>annotations</name><operator>/</operator><name><name>TransactionalLock</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">148</literal> @@</expr></return>
<comment type="block" format="javadoc">/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>annotations</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>annotation</name><operator>.</operator><name>ElementType</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>annotation</name><operator>.</operator><name>Inherited</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>annotation</name><operator>.</operator><name>Retention</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>annotation</name><operator>.</operator><name>RetentionPolicy</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>annotation</name><operator>.</operator><name>Target</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>locks</name><operator>.</operator><name>ReadWriteLock</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>configuration</name><operator>.</operator><name>Configuration</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>persist</name><operator>.</operator><name>Transactional</name></name>;</import>

<comment type="block" format="javadoc">/**
 * The {@link TransactionalLock} annotation is used to provide advice around a
 * joinpoint which will invoke a lock. The lock is invoked before the method
 * begins and is released after it has executed.
 * &lt;p/&gt;
 * This is mainly used in combination with {@link Transactional} methods to
 * provide locking around the entire transaction in order to prevent other
 * methods from performing work before a transaction has completed.
 */</comment>
<annotation_defn><annotation>@<name>Inherited</name></annotation>
<annotation>@<name>Retention</name><argument_list>(<argument><expr><name><name>RetentionPolicy</name><operator>.</operator><name>RUNTIME</name></name></expr></argument>)</argument_list></annotation>
<annotation>@<name>Target</name><argument_list>(<argument><expr><block>{ <expr><name><name>ElementType</name><operator>.</operator><name>METHOD</name></name></expr> }</block></expr></argument>)</argument_list></annotation>
<specifier>public</specifier> @interface <name>TransactionalLock</name> <block>{

  <comment type="block" format="javadoc">/**
   * The logic unit of work being locked.
   *
   * @return
   */</comment>
  <function_decl><type><name>LockArea</name></type> <name>lockArea</name><parameter_list>()</parameter_list>;</function_decl>

  <comment type="block" format="javadoc">/**
   * @return
   */</comment>
  <function_decl><type><name>LockType</name></type> <name>lockType</name><parameter_list>()</parameter_list>;</function_decl>

  <comment type="block" format="javadoc">/**
   * The area that the lock is being applied to. There is exactly 1
   * {@link ReadWriteLock} for every area defined.
   */</comment>
  <enum><specifier>public</specifier> enum <name>LockArea</name> <block>{
    <comment type="block" format="javadoc">/**
     * Joinpoint lock around work performed on caching the host role command
     * status in a given stage and request.
     */</comment>
    <decl><name>HRC_STATUS_CACHE</name><argument_list>(<argument><expr><name><name>Configuration</name><operator>.</operator><name>SERVER_HRC_STATUS_SUMMARY_CACHE_ENABLED</name></name></expr></argument>)</argument_list></decl>;

    <comment type="block" format="javadoc">/**
     * Logger.
     */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <specifier>static</specifier> <name>Logger</name></type> <name>LOG</name> <init>= <expr><call><name><name>LoggerFactory</name><operator>.</operator><name>getLogger</name></name><argument_list>(<argument><expr><name><name>LockArea</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <comment type="block" format="javadoc">/**
     * The property which governs whether the lock area is enabled or disabled.
     * Because of the inherent nature of deadlocks with interceptors that lock,
     * it's wise to be able to disable a lock area dynamically.
     */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>m_configurationProperty</name></decl>;</decl_stmt>

    <comment type="block" format="javadoc">/**
     * {@code true} if the lock area is enabled and should be lockable.
     */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <name>Boolean</name></type> <name>m_enabled</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>

    <comment type="block" format="javadoc">/**
     * Constructor.
     *
     * @param configurationProperty
     */</comment>
    <constructor><specifier>private</specifier> <name>LockArea</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>configurationProperty</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><name>m_configurationProperty</name> <operator>=</operator> <name>configurationProperty</name></expr>;</expr_stmt>
    <expr_stmt/></block_content></block></constructor></block></enum></block></annotation_defn></block_content></block></for>}</block>

    <comment type="block" format="javadoc">/**
     * Gets whether this {@link LockArea} is enabled.
     *
     * @param configuration
     *          the configuration to read from (not {@code null}).
     * @return {@code true} if enabled, {@code false} otherwise.
     */</comment>
    <specifier>public</specifier> <name>boolean</name> <call><name>isEnabled</name><argument_list>(<argument><expr><name>Configuration</name> <name>configuration</name></expr></argument>)</argument_list></call> <block>{
      <if_stmt><if>if <condition>(<expr><literal type="null">null</literal> <operator>!=</operator> <name>m_enabled</name></expr>)</condition> <block>{<block_content>
        <return>return <expr><call><name><name>m_enabled</name><operator>.</operator><name>booleanValue</name></name><argument_list>()</argument_list></call></expr>;</return>
      <expr_stmt/></block_content></block></if></if_stmt>}</block>

      <comment type="line">// start with TRUE</comment>
      <name>m_enabled</name> <operator>=</operator> <name><name>Boolean</name><operator>.</operator><name>TRUE</name></name></expr>;
      <expr><name>String</name> <name>property</name> <operator>=</operator> <call><name><name>configuration</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><name>m_configurationProperty</name></expr></argument>)</argument_list></call></expr>;

      <if_stmt><if>if <condition>(<expr><literal type="null">null</literal> <operator>!=</operator> <name>property</name></expr>)</condition> <block>{<block_content>
        <try>try <block>{<block_content>
          <expr_stmt><expr><name>m_enabled</name> <operator>=</operator> <call><name><name>Boolean</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><name>property</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt/></block_content></block></try></block_content></block></if></if_stmt>}</block></expr></expr_stmt> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>exception</name></decl></parameter>)</parameter_list> <block>{<block_content>
          <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>error</name></name><argument_list>(<argument><expr><literal type="string">"Unable to determine if the lock area {} is enabled, defaulting to TRUE"</literal></expr></argument>,
              <argument><expr><name>m_configurationProperty</name></expr></argument>, <argument><expr><name>exception</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></catch>
      }

      LOG<expr_stmt><expr><operator>.</operator><call><name>info</name><argument_list>(<argument><expr><literal type="string">"LockArea {} is {}"</literal></expr></argument>, <argument><expr><call><name>name</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><ternary><condition><expr><name>m_enabled</name></expr> ?</condition><then> <expr><literal type="string">"enabled"</literal></expr> </then><else>: <expr><literal type="string">"disabled"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <return>return <expr><call><name><name>m_enabled</name><operator>.</operator><name>booleanValue</name></name><argument_list>()</argument_list></call></expr>;</return>
    }

    <comment type="block" format="javadoc">/**
     * Used for testing to clean the internal state of enabled. This should not
     * be used directly.
     */</comment>
    void <expr_stmt><expr><call><name>clearEnabled</name><argument_list>()</argument_list></call> <block>{
      <expr><name>m_enabled</name> <operator>=</operator> <literal type="null">null</literal></expr>;
    }</block></expr></expr_stmt>
  }

  <comment type="block" format="javadoc">/**
   * The type of lock which should be acquired.
   */</comment>
  public <enum>enum <name>LockType</name> <block>{
    <comment type="block" format="javadoc">/**
     * Read Lock.
     */</comment>
    <decl><name>READ</name></decl>,

    <comment type="block" format="javadoc">/**
     * Write lock.
     */</comment>
    <decl><name>WRITE</name></decl>;
  }</block></enum>
}
diff <expr_stmt><expr><operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>actionmanager</name><operator>/</operator><name><name>ActionDBAccessorImpl</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>actionmanager</name><operator>/</operator><name><name>ActionDBAccessorImpl</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">23686c3cf1</literal><operator>..</operator><literal type="number">3f4ffeb4a2</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>actionmanager</name><operator>/</operator><name><name>ActionDBAccessorImpl</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>actionmanager</name><operator>/</operator><name><name>ActionDBAccessorImpl</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">198</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">198</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>ActionDBAccessorImpl</name> implements <name>ActionDBAccessor</name> <block>{
       }</block></expr></expr_stmt>
     }
 
    hostRoleCommandDAO<expr_stmt><expr><operator>.</operator><call><name>mergeAll</name><argument_list>(<argument><expr><name>commands</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="line">// no need to merge if there's nothing to merge</comment>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>commands</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>hostRoleCommandDAO</name><operator>.</operator><name>mergeAll</name></name><argument_list>(<argument><expr><name>commands</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
   }
 
   <comment type="block">/* (non-Javadoc)
@@ -214,7 +217,12 @@ public class ActionDBAccessorImpl implements ActionDBAccessor {
       command.setStatus(command.isRetryAllowed() ? HostRoleStatus.HOLDING_TIMEDOUT : HostRoleStatus.TIMEDOUT);
       command.setEndTime(now);
     }
    hostRoleCommandDAO.mergeAll(commands);

    // no need to merge if there's nothing to merge
    if (!commands.isEmpty()) {
      hostRoleCommandDAO.mergeAll(commands);
    }

     endRequestIfCompleted(requestId);
   }
 
@@ -475,7 +483,11 @@ public class ActionDBAccessorImpl implements ActionDBAccessor {
       }
     }
 
    hostRoleCommandDAO.mergeAll(commandEntities);
    // no need to merge if there's nothing to merge
    if (!commandEntities.isEmpty()) {
      hostRoleCommandDAO.mergeAll(commandEntities);
    }

     // Invalidate cache because of updates to ABORTED commands
     hostRoleCommandCache.invalidateAll(abortedCommandUpdates);
 
@@ -526,7 +538,10 @@ public class ActionDBAccessorImpl implements ActionDBAccessor {
       command.setExitcode(report.getExitCode());
     }
 
    hostRoleCommandDAO.mergeAll(commands);
    // no need to merge if there's nothing to merge
    if (!commands.isEmpty()) {
      hostRoleCommandDAO.mergeAll(commands);
    }
 
     if (checkRequest) {
       endRequestIfCompleted(requestId);
@@ -723,7 +738,10 @@ public class ActionDBAccessorImpl implements ActionDBAccessor {
       task.setEndTime(-1L);
     }
 
    hostRoleCommandDAO.mergeAll(tasks);
    // no need to merge if there's nothing to merge
    if (!tasks.isEmpty()) {
      hostRoleCommandDAO.mergeAll(tasks);
    }
   }
 
   /**
diff --git a/ambari-server/src/main/java/org/apache/ambari/server/orm/AmbariJpaLocalTxnInterceptor.java b/ambari-server/src/main/java/org/apache/ambari/server/orm/AmbariJpaLocalTxnInterceptor.java
index 6d7901c465..3c953cacc6 100644
-- a/ambari-server/src/main/java/org/apache/ambari/server/orm/AmbariJpaLocalTxnInterceptor.java
++ b/ambari-server/src/main/java/org/apache/ambari/server/orm/AmbariJpaLocalTxnInterceptor.java
@@ -18,32 +18,38 @@
 
 package org.apache.ambari.server.orm;
 
import com.google.inject.Inject;
import com.google.inject.persist.Transactional;
import com.google.inject.persist.UnitOfWork;
import com.google.inject.persist.jpa.AmbariJpaPersistService;
import java.lang.reflect.Method;
import java.sql.SQLException;

import javax.persistence.EntityManager;
import javax.persistence.EntityTransaction;
import javax.persistence.PersistenceException;

 import org.aopalliance.intercept.MethodInterceptor;
 import org.aopalliance.intercept.MethodInvocation;
 import org.eclipse.persistence.exceptions.EclipseLinkException;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
import javax.persistence.EntityManager;
import javax.persistence.EntityTransaction;
import javax.persistence.PersistenceException;
import java.lang.reflect.Method;
import java.sql.SQLException;
import com.google.inject.Inject;
import com.google.inject.persist.Transactional;
import com.google.inject.persist.UnitOfWork;
import com.google.inject.persist.jpa.AmbariJpaPersistService;
 
 public class AmbariJpaLocalTxnInterceptor implements MethodInterceptor {
 
   private static final Logger LOG = LoggerFactory.getLogger(AmbariJpaLocalTxnInterceptor.class);

   @Inject
   private final AmbariJpaPersistService emProvider = null;

   @Inject
   private final UnitOfWork unitOfWork = null;

   // Tracks if the unit of work was begun implicitly by this transaction.
   private final ThreadLocal&lt;Boolean&gt; didWeStartWork = new ThreadLocal&lt;Boolean&gt;();
 
  @Override
   public Object invoke(MethodInvocation methodInvocation) throws Throwable {
 
     // Should we start a unit of work?
@@ -53,54 +59,57 @@ public class AmbariJpaLocalTxnInterceptor implements MethodInterceptor {
     }
 
     Transactional transactional = readTransactionMetadata(methodInvocation);
    EntityManager em = this.emProvider.get();
    EntityManager em = emProvider.get();
 
     // Allow 'joining' of transactions if there is an enclosing @Transactional method.
     if (em.getTransaction().isActive()) {
       return methodInvocation.proceed();
     }
 
    Object result;

     final EntityTransaction txn = em.getTransaction();
     txn.begin();
 
    Object result;
     try {
       result = methodInvocation.proceed();
 
     } catch (Exception e) {
      //commit transaction only if rollback didn't occur
      // commit transaction only if rollback didn't occur
       if (rollbackIfNecessary(transactional, e, txn)) {
         txn.commit();
       }
 
       detailedLogForPersistenceError(e);
 
      //propagate whatever exception is thrown anyway
      // propagate whatever exception is thrown anyway
       throw e;
     } finally {
      // Close the em if necessary (guarded so this code doesn't run unless catch fired).
      // Close the em if necessary (guarded so this code doesn't run unless
      // catch fired).
       if (null != didWeStartWork.get() &amp;&amp; !txn.isActive()) {
         didWeStartWork.remove();
         unitOfWork.end();
       }
     }
 
    //everything was normal so commit the txn (do not move into try block above as it
    //  interferes with the advised method's throwing semantics)
    // everything was normal so commit the txn (do not move into try block
    // above as it
    // interferes with the advised method's throwing semantics)
     try {
       txn.commit();
     } catch (Exception e) {
       detailedLogForPersistenceError(e);
       throw e;
     } finally {
      //close the em if necessary
      // close the em if necessary
       if (null != didWeStartWork.get()) {
         didWeStartWork.remove();
         unitOfWork.end();
       }
     }
 
    //or return result
    // or return result
     return result;
   }
 
diff --git a/ambari-server/src/main/java/org/apache/ambari/server/orm/TransactionalLockInterceptor.java b/ambari-server/src/main/java/org/apache/ambari/server/orm/TransactionalLockInterceptor.java
new file mode 100644
index 0000000000..0cf73cb440
-- /dev/null
++ b/ambari-server/src/main/java/org/apache/ambari/server/orm/TransactionalLockInterceptor.java
@@ -0,0 +1,84 @@
/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

package <expr_stmt><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name></name></expr>;</expr_stmt>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>locks</name><operator>.</operator><name>Lock</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>locks</name><operator>.</operator><name>ReadWriteLock</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>aopalliance</name><operator>.</operator><name>intercept</name><operator>.</operator><name>MethodInterceptor</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>aopalliance</name><operator>.</operator><name>intercept</name><operator>.</operator><name>MethodInvocation</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>annotations</name><operator>.</operator><name>TransactionalLock</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>annotations</name><operator>.</operator><name>TransactionalLock</name><operator>.</operator><name>LockArea</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>annotations</name><operator>.</operator><name>TransactionalLock</name><operator>.</operator><name>LockType</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>Inject</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>persist</name><operator>.</operator><name>Transactional</name></name>;</import>

<comment type="block" format="javadoc">/**
 * The {@link TransactionalLockInterceptor} is a method level intercept which
 * will use the properties of {@link TransactionalLock} to acquire a
 * {@link ReadWriteLock} around a particular {@link LockArea}.
 * &lt;p/&gt;
 * It is mainly used to provide a lock around an method annotated with
 * {@link Transactional}. Consider the case where an action must happen after a
 * method has completed and the transaction has been committed.
 */</comment>
<class><specifier>public</specifier> class <name>TransactionalLockInterceptor</name> <super_list><implements>implements <super><name>MethodInterceptor</name></super></implements></super_list> <block>{

  <comment type="block" format="javadoc">/**
   * Logger.
   */</comment>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>Logger</name></type> <name>LOG</name> <init>= <expr><call><name><name>LoggerFactory</name><operator>.</operator><name>getLogger</name></name><argument_list>(<argument><expr><name><name>TransactionalLockInterceptor</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <comment type="block" format="javadoc">/**
   * Used to ensure that methods which rely on the completion of
   * {@link Transactional} can detect when they are able to run.
   *
   * @see TransactionalLock
   */</comment>
  <decl_stmt><decl><annotation>@<name>Inject</name></annotation>
  <type><specifier>private</specifier> <specifier>final</specifier> <name>TransactionalLocks</name></type> <name>transactionLocks</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>

  <comment type="block" format="javadoc">/**
   * {@inheritDoc}
   */</comment>
  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>Object</name></type> <name>invoke</name><parameter_list>(<parameter><decl><type><name>MethodInvocation</name></type> <name>methodInvocation</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Throwable</name></expr></argument></throws> <block>{<block_content>

    <decl_stmt><decl><type><name>TransactionalLock</name></type> <name>annotation</name> <init>= <expr><call><name><name>methodInvocation</name><operator>.</operator><name>getMethod</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAnnotation</name><argument_list>(
        <argument><expr><name><name>TransactionalLock</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>LockArea</name></type> <name>lockArea</name> <init>= <expr><call><name><name>annotation</name><operator>.</operator><name>lockArea</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>LockType</name></type> <name>lockType</name> <init>= <expr><call><name><name>annotation</name><operator>.</operator><name>lockType</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>ReadWriteLock</name></type> <name>rwLock</name> <init>= <expr><call><name><name>transactionLocks</name><operator>.</operator><name>getLock</name></name><argument_list>(<argument><expr><name>lockArea</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Lock</name></type> <name>lock</name> <init>= <expr><ternary><condition><expr><name>lockType</name> <operator>==</operator> <name><name>LockType</name><operator>.</operator><name>READ</name></name></expr> ?</condition><then> <expr><call><name><name>rwLock</name><operator>.</operator><name>readLock</name></name><argument_list>()</argument_list></call></expr> </then><else>: <expr><call><name><name>rwLock</name><operator>.</operator><name>writeLock</name></name><argument_list>()</argument_list></call></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name><name>lock</name><operator>.</operator><name>lock</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <try>try <block>{<block_content>
      <decl_stmt><decl><type><name>Object</name></type> <name>object</name> <init>= <expr><call><name><name>methodInvocation</name><operator>.</operator><name>proceed</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <return>return <expr><name>object</name></expr>;</return>
    </block_content>}</block> <finally>finally <block>{<block_content>
      <expr_stmt><expr><call><name><name>lock</name><operator>.</operator><name>unlock</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></finally></try>
  </block_content>}</block></function>
}</block></class>
<expr_stmt><expr><operator>\</operator> <name>No</name> <name>newline</name> <name>at</name> <name>end</name> <name>of</name> <name>file</name>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name><name>TransactionalLocks</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name><name>TransactionalLocks</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">0000000000..1768dd802f</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name><name>TransactionalLocks</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">170</literal> @@</expr></expr_stmt>
<comment type="block" format="javadoc">/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>ConcurrentHashMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>TimeUnit</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>locks</name><operator>.</operator><name>Condition</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>locks</name><operator>.</operator><name>Lock</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>locks</name><operator>.</operator><name>ReadWriteLock</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>locks</name><operator>.</operator><name>ReentrantReadWriteLock</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>annotations</name><operator>.</operator><name>TransactionalLock</name><operator>.</operator><name>LockArea</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>configuration</name><operator>.</operator><name>Configuration</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>Inject</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>Singleton</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>persist</name><operator>.</operator><name>Transactional</name></name>;</import>

<comment type="block" format="javadoc">/**
 * The {@link TransactionalLocks} class is used to manage the locks associated
 * with each {@link LockArea}. It's a singlegon that shoudl always be injected.
 */</comment>
<class><annotation>@<name>Singleton</name></annotation>
<specifier>public</specifier> class <name>TransactionalLocks</name> <block>{

  <comment type="block" format="javadoc">/**
   * Used to lookup whether {@link LockArea}s are enabled.
   */</comment>
  <decl_stmt><decl><annotation>@<name>Inject</name></annotation>
  <type><specifier>private</specifier> <name>Configuration</name></type> <name>m_configuration</name></decl>;</decl_stmt>

  <comment type="block" format="javadoc">/**
   * Manages the locks for each class which uses the {@link Transactional}
   * annotation.
   */</comment>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name><name>ConcurrentHashMap</name><argument_list type="generic">&lt;<argument><name>LockArea</name></argument>, <argument><name>ReadWriteLock</name></argument>&gt;</argument_list></name></type> <name>m_locks</name> <init>= <expr><operator>new</operator> <call><name><name>ConcurrentHashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

  <comment type="block" format="javadoc">/**
   * Gets a lock for the specified lock area. There is a 1:1 relationship
   * between a lock area and a lock.
   * &lt;p/&gt;
   * If the {@link LockArea} is not enabled, then this will return an empty
   * {@link Lock} implementation which doesn't actually lock anything.
   *
   * @param lockArea
   *          the lock area to get the lock for (not {@code null}).
   * @return the lock to use for the specified lock area (never {@code null}).
   */</comment>
  <function><type><specifier>public</specifier> <name>ReadWriteLock</name></type> <name>getLock</name><parameter_list>(<parameter><decl><type><name>LockArea</name></type> <name>lockArea</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>ReadWriteLock</name></type> <name>lock</name> <init>= <expr><call><name><name>m_locks</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>lockArea</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><literal type="null">null</literal> <operator>==</operator> <name>lock</name></expr>)</condition> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><call><name><name>lockArea</name><operator>.</operator><name>isEnabled</name></name><argument_list>(<argument><expr><name>m_configuration</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>lock</name> <operator>=</operator> <operator>new</operator> <call><name>ReentrantReadWriteLock</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if> <else>else <block>{<block_content>
        <expr_stmt><expr><name>lock</name> <operator>=</operator> <operator>new</operator> <call><name>NoOperationReadWriteLock</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></else></if_stmt>

      <expr_stmt><expr><call><name><name>m_locks</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>lockArea</name></expr></argument>, <argument><expr><name>lock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <return>return <expr><name>lock</name></expr>;</return>
  </block_content>}</block></function>

  <comment type="block" format="javadoc">/**
   * A dummy implementation of a {@link ReadWriteLock} that returns locks which
   * only NOOP. This is used for cases where dependant code doesn't want to
   * {@code if/else} all over the place.
   */</comment>
  <class><specifier>private</specifier> <specifier>final</specifier> <specifier>static</specifier> class <name>NoOperationReadWriteLock</name> <super_list><implements>implements <super><name>ReadWriteLock</name></super></implements></super_list> <block>{

    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>Lock</name></type> <name>m_readLock</name> <init>= <expr><operator>new</operator> <call><name>NoOperationLock</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>Lock</name></type> <name>m_writeLock</name> <init>= <expr><operator>new</operator> <call><name>NoOperationLock</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <comment type="block" format="javadoc">/**
     * {@inheritDoc}
     */</comment>
    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>Lock</name></type> <name>readLock</name><parameter_list>()</parameter_list> <block>{<block_content>
      <return>return <expr><name>m_readLock</name></expr>;</return>
    </block_content>}</block></function>

    <comment type="block" format="javadoc">/**
     * {@inheritDoc}
     */</comment>
    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>Lock</name></type> <name>writeLock</name><parameter_list>()</parameter_list> <block>{<block_content>
      <return>return <expr><name>m_writeLock</name></expr>;</return>
    </block_content>}</block></function>
  }</block></class>

  <comment type="block" format="javadoc">/**
   * A dummy implementation of a {@link Lock} that only NOOPs. This is used for
   * cases where dependant code doesn't want to {@code if/else} all over the
   * place.
   */</comment>
  <class><specifier>private</specifier> <specifier>final</specifier> <specifier>static</specifier> class <name>NoOperationLock</name> <super_list><implements>implements <super><name>Lock</name></super></implements></super_list> <block>{

    <comment type="block" format="javadoc">/**
     * NOOP
     * &lt;p/&gt;
     * {@inheritDoc}
     */</comment>
    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>lock</name><parameter_list>()</parameter_list> <block>{<block_content>
    </block_content>}</block></function>

    <comment type="block" format="javadoc">/**
     * NOOP
     * &lt;p/&gt;
     * {@inheritDoc}
     */</comment>
    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>lockInterruptibly</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>InterruptedException</name></expr></argument></throws> <block>{<block_content>
    </block_content>}</block></function>

    <comment type="block" format="javadoc">/**
     * NOOP, returns {@code true} always.
     * &lt;p/&gt;
     * {@inheritDoc}
     */</comment>
    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>boolean</name></type> <name>tryLock</name><parameter_list>()</parameter_list> <block>{<block_content>
      <return>return <expr><literal type="boolean">true</literal></expr>;</return>
    </block_content>}</block></function>

    <comment type="block" format="javadoc">/**
     * NOOP, returns {@code true} always.
     * &lt;p/&gt;
     * {@inheritDoc}
     */</comment>
    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>boolean</name></type> <name>tryLock</name><parameter_list>(<parameter><decl><type><name>long</name></type> <name>time</name></decl></parameter>, <parameter><decl><type><name>TimeUnit</name></type> <name>unit</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>InterruptedException</name></expr></argument></throws> <block>{<block_content>
      <return>return <expr><literal type="boolean">true</literal></expr>;</return>
    </block_content>}</block></function>

    <comment type="block" format="javadoc">/**
     * NOOP
     * &lt;p/&gt;
     * {@inheritDoc}
     */</comment>
    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>unlock</name><parameter_list>()</parameter_list> <block>{<block_content>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <comment type="block" format="javadoc">/**
     * NOOP
     * &lt;p/&gt;
     * {@inheritDoc}
     */</comment>
    <type><specifier>public</specifier> <name>Condition</name></type> <name>newCondition</name><parameter_list>()</parameter_list> <block>{<block_content>
      <return>return <expr><literal type="null">null</literal></expr>;</return>
    </block_content>}</block></function>
  }</block></class>
}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>dao</name><operator>/</operator><name><name>HostRoleCommandDAO</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>dao</name><operator>/</operator><name><name>HostRoleCommandDAO</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>deca9b1735</name><operator>..</operator><name>c2ded2f6a1</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>dao</name><operator>/</operator><name><name>HostRoleCommandDAO</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>dao</name><operator>/</operator><name><name>HostRoleCommandDAO</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@</expr></expr_stmt>
 
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>dao</name></name>;</package>
 
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>DBAccessor</name><operator>.</operator><name>DbType</name><operator>.</operator><name>ORACLE</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>dao</name><operator>.</operator><name>DaoUtils</name><operator>.</operator><name>ORACLE_LIST_LIMIT</name></name>;</import>

 <import>import <name><name>java</name><operator>.</operator><name>text</name><operator>.</operator><name>MessageFormat</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collection</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">26</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">29</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>TimeUnit</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>locks</name><operator>.</operator><name>ReadWriteLock</name></name>;</import>
 
 <import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>EntityManager</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>TypedQuery</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">33</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">37</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@</expr></expr_stmt> <import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>criteria</name><operator>.</operator><name>CriteriaQuery</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>criteria</name><operator>.</operator><name>Order</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>metamodel</name><operator>.</operator><name>SingularAttribute</name></name>;</import>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>annotations</name><operator>.</operator><name>TransactionalLock</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>annotations</name><operator>.</operator><name>TransactionalLock</name><operator>.</operator><name>LockArea</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>annotations</name><operator>.</operator><name>TransactionalLock</name><operator>.</operator><name>LockType</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>RoleCommand</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>actionmanager</name><operator>.</operator><name>HostRoleStatus</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>api</name><operator>.</operator><name>query</name><operator>.</operator><name>JpaPredicateVisitor</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">43</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">50</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>Request</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>SortRequest</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>utilities</name><operator>.</operator><name>PredicateHelper</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>RequiresSession</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>TransactionalLocks</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>HostEntity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>HostRoleCommandEntity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>HostRoleCommandEntity_</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">60</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">68</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>Singleton</name></name>;</import>
 <import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>name</name><operator>.</operator><name>Named</name></name>;</import>
 <import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>persist</name><operator>.</operator><name>Transactional</name></name>;</import>
 
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>DBAccessor</name><operator>.</operator><name>DbType</name><operator>.</operator><name>ORACLE</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>dao</name><operator>.</operator><name>DaoUtils</name><operator>.</operator><name>ORACLE_LIST_LIMIT</name></name>;</import>

 <class><annotation>@<name>Singleton</name></annotation>
 <specifier>public</specifier> class <name>HostRoleCommandDAO</name> <block>{
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">102</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">107</literal></expr><operator>,</operator><expr><literal type="number">17</literal> @@ <specifier>public</specifier> <name>class</name> <name>HostRoleCommandDAO</name> <block>{
   <expr><specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>COMPLETED_REQUESTS_SQL</name> <operator>=</operator> <literal type="string">"SELECT DISTINCT task.requestId FROM HostRoleCommandEntity task WHERE task.requestId NOT IN (SELECT task.requestId FROM HostRoleCommandEntity task WHERE task.status IN :notCompletedStatuses) ORDER BY task.requestId {0}"</literal></expr>;
 
   <comment type="block" format="javadoc">/**
   * A cache that holds {@link HostRoleCommandStatusSummaryDTO} grouped by stage id for requests by request id.
   * The JPQL computing the host role command status summary for a request is rather expensive
   * thus this cache helps reducing the load on the database
   * A cache that holds {@link HostRoleCommandStatusSummaryDTO} grouped by stage
   * id for requests by request id. The JPQL computing the host role command
   * status summary for a request is rather expensive thus this cache helps
   * reducing the load on the database.
   * &lt;p/&gt;
   * Methods which interact with this cache, including invalidation and
   * population, should use the {@link TransactionalLock} annotation along with
   * the {@link LockArea#HRC_STATUS_CACHE}. This will prevent stale data from
   * being read during a transaction which has updated a
   * {@link HostRoleCommandEntity}'s {@link HostRoleStatus} but has not
   * committed yet.
    */</comment>
   <expr><specifier>private</specifier> <name>final</name> <name><name>LoadingCache</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>, <argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>, <argument><name>HostRoleCommandStatusSummaryDTO</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name> <name>hrcStatusSummaryCache</name></expr>;
 
@@ <expr><operator>-</operator><literal type="number">121</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">134</literal></expr>,<expr><literal type="number">15</literal> @@ <specifier>public</specifier> <name>class</name> <name>HostRoleCommandDAO</name> <block>{
   @<expr><name>Inject</name>
   <name>DaoUtils</name> <name>daoUtils</name></expr>;
 
  <comment type="block" format="javadoc">/**
   * Used to ensure that methods which rely on the completion of
   * {@link Transactional} can detect when they are able to run.
   *
   * @see TransactionalLock
   */</comment>
  @<expr><name>Inject</name>
  <specifier>private</specifier> <name>final</name> <name>TransactionalLocks</name> <name>transactionLocks</name> <operator>=</operator> <literal type="null">null</literal></expr>;

   <expr><specifier>public</specifier> <name>final</name> <specifier>static</specifier> <name>String</name> <name>HRC_STATUS_SUMMARY_CACHE_SIZE</name> <operator>=</operator>  <literal type="string">"hostRoleCommandStatusSummaryCacheSize"</literal></expr>;
   <expr><specifier>public</specifier> <name>final</name> <specifier>static</specifier> <name>String</name> <name>HRC_STATUS_SUMMARY_CACHE_EXPIRY_DURATION_MINUTES</name> <operator>=</operator> <literal type="string">"hostRoleCommandStatusCacheExpiryDurationMins"</literal></expr>;
   <expr><specifier>public</specifier> <name>final</name> <specifier>static</specifier> <name>String</name> <name>HRC_STATUS_SUMMARY_CACHE_ENABLED</name> <operator>=</operator>  <literal type="string">"hostRoleCommandStatusSummaryCacheEnabled"</literal></expr>;
@@ <expr><operator>-</operator><literal type="number">130</literal></expr>,<expr><literal type="number">12</literal> <operator>+</operator><literal type="number">152</literal></expr>,<expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>HostRoleCommandDAO</name> <block>{
    <expr><operator>*</operator> @<name>param</name> <name>requestId</name> <name>the</name> <name>key</name> <name>of</name> <name>the</name> <name>cache</name> <name>entry</name> <name>to</name> <name>be</name> <name><name>invalidated</name><operator>.</operator></name>
    *<operator>/</operator>
   <specifier>protected</specifier> <name>void</name> <call><name>invalidateHostRoleCommandStatusSummaryCache</name><argument_list>(<argument><expr><name>Long</name> <name>requestId</name></expr></argument>)</argument_list></call> <block>{
    <if_stmt><if>if <condition>(<expr><operator>!</operator><name>hostRoleCommandStatusSummaryCacheEnabled</name></expr> )</condition><block type="pseudo"><block_content>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><name>hostRoleCommandStatusSummaryCacheEnabled</name></expr> )</condition> <block>{<block_content>
       <return>return;</return>
    <expr_stmt/></block_content></block></if></if_stmt></block_content></block></if></if_stmt>}</block>
 
     <call><name><name>LOG</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"Invalidating host role command status summary cache for request {} !"</literal></expr></argument>, <argument><expr><name>requestId</name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>hrcStatusSummaryCache</name><operator>.</operator><name>invalidate</name></name><argument_list>(<argument><expr><name>requestId</name></expr></argument>)</argument_list></call></expr>;

   }</block>
 
   <comment type="block" format="javadoc">/**
@@ -144,21 +166,23 @@ public class HostRoleCommandDAO {
    * @param hostRoleCommandEntity
    */</comment>
   <specifier>protected</specifier> <name>void</name> <call><name>invalidateHostRoleCommandStatusCache</name><argument_list>(<argument><expr><name>HostRoleCommandEntity</name> <name>hostRoleCommandEntity</name></expr></argument>)</argument_list></call> <block>{
    <if_stmt><if>if <condition>( <expr><operator>!</operator><name>hostRoleCommandStatusSummaryCacheEnabled</name></expr> )</condition><block type="pseudo"><block_content>
    <if_stmt><if>if <condition>( <expr><operator>!</operator><name>hostRoleCommandStatusSummaryCacheEnabled</name></expr> )</condition> <block>{<block_content>
       <return>return;</return>
    <expr_stmt/></block_content></block></if></if_stmt></block_content></block></if></if_stmt>}</block></expr>
 
     <if_stmt><if>if <condition>(<expr><name>hostRoleCommandEntity</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
       <decl_stmt><decl><type><name>Long</name></type> <name>requestId</name> <init>= <expr><call><name><name>hostRoleCommandEntity</name><operator>.</operator><name>getRequestId</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <if_stmt><if>if <condition>(<expr><name>requestId</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
         <decl_stmt><decl><type><name>StageEntity</name></type> <name>stageEntity</name> <init>= <expr><call><name><name>hostRoleCommandEntity</name><operator>.</operator><name>getStage</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><name>stageEntity</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content>
        <if_stmt><if>if <condition>(<expr><name>stageEntity</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
           <expr_stmt><expr><name>requestId</name> <operator>=</operator> <call><name><name>stageEntity</name><operator>.</operator><name>getRequestId</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt/></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt>}</block></expr>
       }</block></expr></expr_stmt>
 
      <if_stmt><if>if <condition>(<expr><name>requestId</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content>
      <if_stmt><if>if <condition>(<expr><name>requestId</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
         <expr_stmt><expr><call><name>invalidateHostRoleCommandStatusSummaryCache</name><argument_list>(<argument><expr><call><name><name>requestId</name><operator>.</operator><name>longValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt></block_content></block></if></if_stmt>
     }</block></class>

   }
 
   <comment type="block" format="javadoc">/**
@@ -170,42 +194,52 @@ public class HostRoleCommandDAO {
    */</comment>
   @<function><type><name>RequiresSession</name>
   <specifier>protected</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>, <argument><name>HostRoleCommandStatusSummaryDTO</name></argument>&gt;</argument_list></name></type> <name>loadAggregateCounts</name><parameter_list>(<parameter><decl><type><name>Long</name></type> <name>requestId</name></decl></parameter>)</parameter_list> <block>{<block_content>

    <decl_stmt><decl><type><name><name>TypedQuery</name><argument_list type="generic">&lt;<argument><name>HostRoleCommandStatusSummaryDTO</name></argument>&gt;</argument_list></name></type> <name>query</name> <init>= <expr><call><name><name>entityManagerProvider</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>createQuery</name><argument_list>(
      <argument><expr><name>SUMMARY_DTO</name></expr></argument>, <argument><expr><name><name>HostRoleCommandStatusSummaryDTO</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"requestId"</literal></expr></argument>, <argument><expr><name>requestId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"aborted"</literal></expr></argument>, <argument><expr><name><name>HostRoleStatus</name><operator>.</operator><name>ABORTED</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"completed"</literal></expr></argument>, <argument><expr><name><name>HostRoleStatus</name><operator>.</operator><name>COMPLETED</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"failed"</literal></expr></argument>, <argument><expr><name><name>HostRoleStatus</name><operator>.</operator><name>FAILED</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"holding"</literal></expr></argument>, <argument><expr><name><name>HostRoleStatus</name><operator>.</operator><name>HOLDING</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"holding_failed"</literal></expr></argument>, <argument><expr><name><name>HostRoleStatus</name><operator>.</operator><name>HOLDING_FAILED</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"holding_timedout"</literal></expr></argument>, <argument><expr><name><name>HostRoleStatus</name><operator>.</operator><name>HOLDING_TIMEDOUT</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"in_progress"</literal></expr></argument>, <argument><expr><name><name>HostRoleStatus</name><operator>.</operator><name>IN_PROGRESS</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"pending"</literal></expr></argument>, <argument><expr><name><name>HostRoleStatus</name><operator>.</operator><name>PENDING</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"queued"</literal></expr></argument>, <argument><expr><name><name>HostRoleStatus</name><operator>.</operator><name>QUEUED</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"timedout"</literal></expr></argument>, <argument><expr><name><name>HostRoleStatus</name><operator>.</operator><name>TIMEDOUT</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"skipped_failed"</literal></expr></argument>, <argument><expr><name><name>HostRoleStatus</name><operator>.</operator><name>SKIPPED_FAILED</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

     <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>, <argument><name>HostRoleCommandStatusSummaryDTO</name></argument>&gt;</argument_list></name></type> <name>map</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>, <argument><name>HostRoleCommandStatusSummaryDTO</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
    <for>for <control>(<init><decl><type><name>HostRoleCommandStatusSummaryDTO</name></type> <name>dto</name> <range>: <expr><call><name><name>daoUtils</name><operator>.</operator><name>selectList</name></name><argument_list>(<argument><expr><name>query</name></expr></argument>)</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
      <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>dto</name><operator>.</operator><name>getStageId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>dto</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="line">// ensure that we wait for any running transactions working on this cache to</comment>
    <comment type="line">// complete</comment>
    <decl_stmt><decl><type><name>ReadWriteLock</name></type> <name>lock</name> <init>= <expr><call><name><name>transactionLocks</name><operator>.</operator><name>getLock</name></name><argument_list>(<argument><expr><name><name>LockArea</name><operator>.</operator><name>HRC_STATUS_CACHE</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>lock</name><operator>.</operator><name>readLock</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>lock</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <try>try <block>{<block_content>
      <decl_stmt><decl><type><name><name>TypedQuery</name><argument_list type="generic">&lt;<argument><name>HostRoleCommandStatusSummaryDTO</name></argument>&gt;</argument_list></name></type> <name>query</name> <init>= <expr><call><name><name>entityManagerProvider</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>createQuery</name><argument_list>(
          <argument><expr><name>SUMMARY_DTO</name></expr></argument>, <argument><expr><name><name>HostRoleCommandStatusSummaryDTO</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

      <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"requestId"</literal></expr></argument>, <argument><expr><name>requestId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"aborted"</literal></expr></argument>, <argument><expr><name><name>HostRoleStatus</name><operator>.</operator><name>ABORTED</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"completed"</literal></expr></argument>, <argument><expr><name><name>HostRoleStatus</name><operator>.</operator><name>COMPLETED</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"failed"</literal></expr></argument>, <argument><expr><name><name>HostRoleStatus</name><operator>.</operator><name>FAILED</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"holding"</literal></expr></argument>, <argument><expr><name><name>HostRoleStatus</name><operator>.</operator><name>HOLDING</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"holding_failed"</literal></expr></argument>, <argument><expr><name><name>HostRoleStatus</name><operator>.</operator><name>HOLDING_FAILED</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"holding_timedout"</literal></expr></argument>, <argument><expr><name><name>HostRoleStatus</name><operator>.</operator><name>HOLDING_TIMEDOUT</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"in_progress"</literal></expr></argument>, <argument><expr><name><name>HostRoleStatus</name><operator>.</operator><name>IN_PROGRESS</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"pending"</literal></expr></argument>, <argument><expr><name><name>HostRoleStatus</name><operator>.</operator><name>PENDING</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"queued"</literal></expr></argument>, <argument><expr><name><name>HostRoleStatus</name><operator>.</operator><name>QUEUED</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"timedout"</literal></expr></argument>, <argument><expr><name><name>HostRoleStatus</name><operator>.</operator><name>TIMEDOUT</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"skipped_failed"</literal></expr></argument>, <argument><expr><name><name>HostRoleStatus</name><operator>.</operator><name>SKIPPED_FAILED</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <for>for <control>(<init><decl><type><name>HostRoleCommandStatusSummaryDTO</name></type> <name>dto</name> <range>: <expr><call><name><name>daoUtils</name><operator>.</operator><name>selectList</name></name><argument_list>(<argument><expr><name>query</name></expr></argument>)</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
        <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>dto</name><operator>.</operator><name>getStageId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>dto</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></for>
    </block_content>}</block> <finally>finally <block>{<block_content>
      <expr_stmt><expr><call><name><name>lock</name><operator>.</operator><name>readLock</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>unlock</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></finally></try>
 
     <return>return <expr><name>map</name></expr>;</return>
   </block_content>}</block></for>
 
   <constructor><annotation>@<name>Inject</name></annotation>
  <specifier>public</specifier> <name>HostRoleCommandDAO</name><parameter_list>(<parameter><decl><type><annotation>@<name>Named</name><argument_list>(<argument><expr><name>HRC_STATUS_SUMMARY_CACHE_ENABLED</name></expr></argument>)</argument_list></annotation> <name>boolean</name></type> <name>hostRoleCommandStatusSummaryCacheEnabled</name></decl></parameter>, <parameter><decl><type><annotation>@<name>Named</name><argument_list>(<argument><expr><name>HRC_STATUS_SUMMARY_CACHE_SIZE</name></expr></argument>)</argument_list></annotation> <name>long</name></type> <name>hostRoleCommandStatusSummaryCacheLimit</name></decl></parameter>, <parameter><decl><type><annotation>@<name>Named</name><argument_list>(<argument><expr><name>HRC_STATUS_SUMMARY_CACHE_EXPIRY_DURATION_MINUTES</name></expr></argument>)</argument_list></annotation> <name>long</name></type> <name>hostRoleCommandStatusSummaryCacheExpiryDurationMins</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <constructor><specifier>public</specifier> <name>HostRoleCommandDAO</name><parameter_list>(
      <parameter><decl><type><annotation>@<name>Named</name><argument_list>(<argument><expr><name>HRC_STATUS_SUMMARY_CACHE_ENABLED</name></expr></argument>)</argument_list></annotation> <name>boolean</name></type> <name>hostRoleCommandStatusSummaryCacheEnabled</name></decl></parameter>,
      <parameter><decl><type><annotation>@<name>Named</name><argument_list>(<argument><expr><name>HRC_STATUS_SUMMARY_CACHE_SIZE</name></expr></argument>)</argument_list></annotation> <name>long</name></type> <name>hostRoleCommandStatusSummaryCacheLimit</name></decl></parameter>,
      <parameter><decl><type><annotation>@<name>Named</name><argument_list>(<argument><expr><name>HRC_STATUS_SUMMARY_CACHE_EXPIRY_DURATION_MINUTES</name></expr></argument>)</argument_list></annotation> <name>long</name></type> <name>hostRoleCommandStatusSummaryCacheExpiryDurationMins</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <expr_stmt><expr><name><name>this</name><operator>.</operator><name>hostRoleCommandStatusSummaryCacheEnabled</name></name> <operator>=</operator> <name>hostRoleCommandStatusSummaryCacheEnabled</name></expr>;</expr_stmt>
 
     <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Host role command status summary cache {} !"</literal></expr></argument>, <argument><expr><ternary><condition><expr><name>hostRoleCommandStatusSummaryCacheEnabled</name></expr> ?</condition><then> <expr><literal type="string">"enabled"</literal></expr> </then><else>: <expr><literal type="string">"disabled"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 

     <expr_stmt><expr><name>hrcStatusSummaryCache</name> <operator>=</operator> <call><name><name>CacheBuilder</name><operator>.</operator><name>newBuilder</name></name><argument_list>()</argument_list></call>
       <operator>.</operator><call><name>maximumSize</name><argument_list>(<argument><expr><name>hostRoleCommandStatusSummaryCacheLimit</name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>expireAfterAccess</name><argument_list>(<argument><expr><name>hostRoleCommandStatusSummaryCacheExpiryDurationMins</name></expr></argument>, <argument><expr><name><name>TimeUnit</name><operator>.</operator><name>MINUTES</name></name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>expireAfterWrite</name><argument_list>(<argument><expr><name>hostRoleCommandStatusSummaryCacheExpiryDurationMins</name></expr></argument>, <argument><expr><name><name>TimeUnit</name><operator>.</operator><name>MINUTES</name></name></expr></argument>)</argument_list></call>
       <operator>.</operator><call><name>build</name><argument_list>(<argument><expr><operator>new</operator> <class><super><name><name>CacheLoader</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>, <argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>, <argument><name>HostRoleCommandStatusSummaryDTO</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{
         <function><annotation>@<name>Override</name></annotation>
         <type><specifier>public</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>, <argument><name>HostRoleCommandStatusSummaryDTO</name></argument>&gt;</argument_list></name></type> <name>load</name><parameter_list>(<parameter><decl><type><name>Long</name></type> <name>requestId</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">542</literal></expr><operator>,</operator><expr><literal type="number">15</literal> <operator>+</operator><literal type="number">576</literal></expr><operator>,</operator><expr><literal type="number">19</literal> @@ <specifier>public</specifier> class <name>HostRoleCommandDAO</name> <block>{
   }</block>
 
   @<name>Transactional</name>
  <specifier>public</specifier> <name>void</name> <call><name>create</name><argument_list>(<argument><expr><name>HostRoleCommandEntity</name> <name>stageEntity</name></expr></argument>)</argument_list></call> <block>{
    <expr><call><name><name>entityManagerProvider</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>persist</name><argument_list>(<argument><expr><name>stageEntity</name></expr></argument>)</argument_list></call></expr>;
  @<expr><call><name>TransactionalLock</name><argument_list>(<argument><expr><name>lockArea</name> <operator>=</operator> <name><name>LockArea</name><operator>.</operator><name>HRC_STATUS_CACHE</name></name></expr></argument>, <argument><expr><name>lockType</name> <operator>=</operator> <name><name>LockType</name><operator>.</operator><name>WRITE</name></name></expr></argument>)</argument_list></call>
  <specifier>public</specifier> <name>void</name> <call><name>create</name><argument_list>(<argument><expr><name>HostRoleCommandEntity</name> <name>entity</name></expr></argument>)</argument_list></call> <block>{
    <expr><name>EntityManager</name> <name>entityManager</name> <operator>=</operator> <call><name><name>entityManagerProvider</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr>;
    <expr><call><name><name>entityManager</name><operator>.</operator><name>persist</name></name><argument_list>(<argument><expr><name>entity</name></expr></argument>)</argument_list></call></expr>;
 
    <expr><call><name>invalidateHostRoleCommandStatusCache</name><argument_list>(<argument><expr><name>stageEntity</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>invalidateHostRoleCommandStatusCache</name><argument_list>(<argument><expr><name>entity</name></expr></argument>)</argument_list></call></expr>;
   }</block>
 
   @<name>Transactional</name>
  <specifier>public</specifier> <name>HostRoleCommandEntity</name> <call><name>merge</name><argument_list>(<argument><expr><name>HostRoleCommandEntity</name> <name>stageEntity</name></expr></argument>)</argument_list></call> <block>{
    <expr><name>HostRoleCommandEntity</name> <name>entity</name> <operator>=</operator> <call><name><name>entityManagerProvider</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>merge</name><argument_list>(<argument><expr><name>stageEntity</name></expr></argument>)</argument_list></call></expr>;
  @<expr><call><name>TransactionalLock</name><argument_list>(<argument><expr><name>lockArea</name> <operator>=</operator> <name><name>LockArea</name><operator>.</operator><name>HRC_STATUS_CACHE</name></name></expr></argument>, <argument><expr><name>lockType</name> <operator>=</operator> <name><name>LockType</name><operator>.</operator><name>WRITE</name></name></expr></argument>)</argument_list></call>
  <specifier>public</specifier> <name>HostRoleCommandEntity</name> <call><name>merge</name><argument_list>(<argument><expr><name>HostRoleCommandEntity</name> <name>entity</name></expr></argument>)</argument_list></call> <block>{
    <expr><name>EntityManager</name> <name>entityManager</name> <operator>=</operator> <call><name><name>entityManagerProvider</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr>;
    <expr><name>entity</name> <operator>=</operator> <call><name><name>entityManager</name><operator>.</operator><name>merge</name></name><argument_list>(<argument><expr><name>entity</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><call><name>invalidateHostRoleCommandStatusCache</name><argument_list>(<argument><expr><name>entity</name></expr></argument>)</argument_list></call></expr>;
 
@@ <expr><operator>-</operator><literal type="number">566</literal></expr>,<expr><literal type="number">21</literal> <operator>+</operator><literal type="number">604</literal></expr>,<expr><literal type="number">24</literal> @@ <specifier>public</specifier> class <name>HostRoleCommandDAO</name> <block>{
   }</block>
 
   @<name>Transactional</name>
  @<call><name>TransactionalLock</name><argument_list>(<argument><expr><name>lockArea</name> <operator>=</operator> <name><name>LockArea</name><operator>.</operator><name>HRC_STATUS_CACHE</name></name></expr></argument>, <argument><expr><name>lockType</name> <operator>=</operator> <name><name>LockType</name><operator>.</operator><name>WRITE</name></name></expr></argument>)</argument_list></call>
   <specifier>public</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>HostRoleCommandEntity</name></argument>&gt;</argument_list></name> <call><name>mergeAll</name><argument_list>(<argument><expr><name><name>Collection</name><argument_list type="generic">&lt;<argument><name>HostRoleCommandEntity</name></argument>&gt;</argument_list></name> <name>entities</name></expr></argument>)</argument_list></call> <block>{
     <expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>HostRoleCommandEntity</name></argument>&gt;</argument_list></name> <name>managedList</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>HostRoleCommandEntity</name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><call><name><name>entities</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <for>for <control>(<init><decl><type><name>HostRoleCommandEntity</name></type> <name>entity</name> <range>: <expr><name>entities</name></expr></range></decl></init>)</control> <block>{<block_content>
      <expr_stmt><expr><call><name><name>managedList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name><name>entityManagerProvider</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>merge</name><argument_list>(<argument><expr><name>entity</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <decl_stmt><decl><type><name>EntityManager</name></type> <name>entityManager</name> <init>= <expr><call><name><name>entityManagerProvider</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>managedList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name><name>entityManager</name><operator>.</operator><name>merge</name></name><argument_list>(<argument><expr><name>entity</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>invalidateHostRoleCommandStatusCache</name><argument_list>(<argument><expr><name>entity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt/>}</block_content>

     return managedList</block><empty_stmt>;</empty_stmt></for>
   }</block>
 
   @<name>Transactional</name>
  <specifier>public</specifier> <name>void</name> <call><name>remove</name><argument_list>(<argument><expr><name>HostRoleCommandEntity</name> <name>stageEntity</name></expr></argument>)</argument_list></call> <block>{
    <expr><call><name><name>entityManagerProvider</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>remove</name><argument_list>(<argument><expr><call><name>merge</name><argument_list>(<argument><expr><name>stageEntity</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;

    <expr><call><name>invalidateHostRoleCommandStatusCache</name><argument_list>(<argument><expr><name>stageEntity</name></expr></argument>)</argument_list></call></expr>;
  @<expr><call><name>TransactionalLock</name><argument_list>(<argument><expr><name>lockArea</name> <operator>=</operator> <name><name>LockArea</name><operator>.</operator><name>HRC_STATUS_CACHE</name></name></expr></argument>, <argument><expr><name>lockType</name> <operator>=</operator> <name><name>LockType</name><operator>.</operator><name>WRITE</name></name></expr></argument>)</argument_list></call>
  <specifier>public</specifier> <name>void</name> <call><name>remove</name><argument_list>(<argument><expr><name>HostRoleCommandEntity</name> <name>entity</name></expr></argument>)</argument_list></call> <block>{
    <expr><name>EntityManager</name> <name>entityManager</name> <operator>=</operator> <call><name><name>entityManagerProvider</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr>;
    <expr><call><name><name>entityManager</name><operator>.</operator><name>remove</name></name><argument_list>(<argument><expr><call><name>merge</name><argument_list>(<argument><expr><name>entity</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>invalidateHostRoleCommandStatusCache</name><argument_list>(<argument><expr><name>entity</name></expr></argument>)</argument_list></call></expr>;
   }</block>
 
   @<name>Transactional</name>
@@ <operator>-</operator><literal type="number">595</literal></expr>,<expr><literal type="number">10</literal> <operator>+</operator><literal type="number">636</literal></expr>,<expr><literal type="number">12</literal> @@ <specifier>public</specifier> class <name>HostRoleCommandDAO</name> <block>{
    <expr><operator>*</operator> @</expr><return>return <expr><name>the</name> <name>map</name> <name>of</name> <name>stage</name><operator>-</operator><name>to</name><operator>-</operator><name>summary</name> <name>objects</name>
    <operator>*</operator><operator>/</operator>
   <specifier>public</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>, <argument><name>HostRoleCommandStatusSummaryDTO</name></argument>&gt;</argument_list></name> <call><name>findAggregateCounts</name><argument_list>(<argument><expr><name>Long</name> <name>requestId</name></expr></argument>)</argument_list></call> <block>{
    <if_stmt><if>if <condition>(<expr><name>hostRoleCommandStatusSummaryCacheEnabled</name></expr>)</condition><block type="pseudo"><block_content>
    <if_stmt><if>if <condition>(<expr><name>hostRoleCommandStatusSummaryCacheEnabled</name></expr>)</condition> <block>{<block_content>
       <return>return <expr><call><name><name>hrcStatusSummaryCache</name><operator>.</operator><name>getUnchecked</name></name><argument_list>(<argument><expr><name>requestId</name></expr></argument>)</argument_list></call></expr>;</return>
    <if_stmt><else>else<block type="pseudo"><block_content>
    <expr_stmt/></block_content></block></else></if_stmt>}</block_content>
    else <block>{<block_content>
       <return>return <expr><call><name>loadAggregateCounts</name><argument_list>(<argument><expr><name>requestId</name></expr></argument>)</argument_list></call></expr>;</return> <comment type="line">// if caching not enabled fall back to fetching through JPA</comment>
    <expr_stmt/>}</block_content>
   }
 
 
diff --git a/ambari-server/src/main/resources/stacks/HDP/2.3/upgrades/upgrade-2.4.xml b/ambari-server/src/main/resources/stacks/HDP/2.3/upgrades/upgrade-2.4.xml
index 29ebc1fa22..f7753145db 100644
-- a/ambari-server/src/main/resources/stacks/HDP/2.3/upgrades/upgrade-2.4.xml
++ b/ambari-server/src/main/resources/stacks/HDP/2.3/upgrades/upgrade-2.4.xml
@@ -370</block></block><operator>,</operator><expr_stmt><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">370</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@
 
     <operator>&lt;</operator><name>group</name> <name>xsi</name><operator>:</operator><name>type</name><operator>=</operator><literal type="string">"cluster"</literal> <name>name</name><operator>=</operator><literal type="string">"FINALIZE_PRE_CHECK"</literal> <name>title</name><operator>=</operator><literal type="string">"Finalize {{direction.text.proper}} Pre-Check"</literal><operator>&gt;</operator>
       <operator>&lt;</operator><name>direction</name><operator>&gt;</operator><name><name>UPGRADE</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>direction</name></argument>&gt;</argument_list></name>
      

       <operator>&lt;</operator><name>execute</name><operator>-</operator><name>stage</name> <name>title</name><operator>=</operator><literal type="string">"Check Component Versions"</literal><operator>&gt;</operator>
         <operator>&lt;</operator><name>task</name> <name>xsi</name><operator>:</operator><name>type</name><operator>=</operator><literal type="string">"server_action"</literal> class<operator>=</operator><literal type="string">"org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckAction"</literal> <operator>/</operator><operator>&gt;</operator>
       <operator>&lt;</operator><operator>/</operator><name>execute</name><operator>-</operator><name>stage</name><operator>&gt;</operator>
@@ <operator>-</operator><literal type="number">548</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">548</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@
           <operator>&lt;</operator><name>task</name> <name>xsi</name><operator>:</operator><name>type</name><operator>=</operator><literal type="string">"restart-task"</literal> <operator>/</operator><operator>&gt;</operator>
         <operator>&lt;</operator><operator>/</operator><name>upgrade</name><operator>&gt;</operator>
       <operator>&lt;</operator><operator>/</operator><name>component</name><operator>&gt;</operator>
      

       <operator>&lt;</operator><name>component</name> <name>name</name><operator>=</operator><literal type="string">"PHOENIX_QUERY_SERVER"</literal><operator>&gt;</operator>
         <operator>&lt;</operator><name>upgrade</name><operator>&gt;</operator>
           <operator>&lt;</operator><name>task</name> <name>xsi</name><operator>:</operator><name>type</name><operator>=</operator><literal type="string">"restart-task"</literal><operator>/</operator><operator>&gt;</operator>
@@ <operator>-</operator><literal type="number">688</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">688</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@
           <operator>&lt;</operator><name>task</name> <name>xsi</name><operator>:</operator><name>type</name><operator>=</operator><literal type="string">"configure"</literal> <name>id</name><operator>=</operator><literal type="string">"hdp_2_4_0_0_oozie_remove_service_classes"</literal> <operator>/</operator><operator>&gt;</operator>
 
           <operator>&lt;</operator><name>task</name> <name>xsi</name><operator>:</operator><name>type</name><operator>=</operator><literal type="string">"server_action"</literal> <name>summary</name><operator>=</operator><literal type="string">"Adjusting Oozie properties"</literal> class<operator>=</operator><literal type="string">"org.apache.ambari.server.serveraction.upgrades.OozieConfigCalculation"</literal><operator>/</operator><operator>&gt;</operator>
        

           <operator>&lt;</operator><name>task</name> <name>xsi</name><operator>:</operator><name>type</name><operator>=</operator><literal type="string">"execute"</literal> <name>hosts</name><operator>=</operator><literal type="string">"all"</literal> <name>sequential</name><operator>=</operator><literal type="string">"true"</literal> <name>summary</name><operator>=</operator><literal type="string">"Shut down all Oozie servers"</literal><operator>&gt;</operator>
             <operator>&lt;</operator><name>script</name><operator>&gt;</operator><name>scripts</name><operator>/</operator><name><name>oozie_server</name><operator>.</operator><name><name>py</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>script</name></argument>&gt;</argument_list></name></name>
             <operator>&lt;</operator><name>function</name><operator>&gt;</operator><name><name>stop</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>function</name></argument>&gt;</argument_list></name>
@@ <operator>-</operator><literal type="number">745</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">745</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@
         <operator>&lt;</operator><name>pre</name><operator>-</operator><name>upgrade</name><operator>&gt;</operator>
           <operator>&lt;</operator><name>task</name> <name>xsi</name><operator>:</operator><name>type</name><operator>=</operator><literal type="string">"configure"</literal> <name>id</name> <operator>=</operator><literal type="string">"hdp_2_4_0_0_kafka_broker_deprecate_port"</literal><operator>/</operator><operator>&gt;</operator>
         <operator>&lt;</operator><operator>/</operator><name>pre</name><operator>-</operator><name>upgrade</name><operator>&gt;</operator>
        

         <operator>&lt;</operator><name>upgrade</name><operator>&gt;</operator>
           <operator>&lt;</operator><name>task</name> <name>xsi</name><operator>:</operator><name>type</name><operator>=</operator><literal type="string">"restart-task"</literal> <operator>/</operator><operator>&gt;</operator>
         <operator>&lt;</operator><operator>/</operator><name>upgrade</name><operator>&gt;</operator>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>annotations</name><operator>/</operator><name><name>TransactionalLockTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>annotations</name><operator>/</operator><name><name>TransactionalLockTest</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">0000000000..fbaa343ff5</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>annotations</name><operator>/</operator><name><name>TransactionalLockTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">126</literal> @@</expr></expr_stmt></if></if_stmt></block_content></block></if></if_stmt>
<comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>annotations</name></name>;</package></block></expr></return>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Properties</name></name>;</import></block></expr>

<import>import <name><name>org</name><operator>.</operator><name>aopalliance</name><operator>.</operator><name>intercept</name><operator>.</operator><name>MethodInvocation</name></name>;</import></block></expr>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>annotations</name><operator>.</operator><name>TransactionalLock</name><operator>.</operator><name>LockArea</name></name>;</import></block></expr>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>configuration</name><operator>.</operator><name>Configuration</name></name>;</import></block></expr>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>AmbariJpaLocalTxnInterceptor</name></name>;</import></block></expr></expr_stmt>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>InMemoryDefaultTestModule</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>TransactionalLockInterceptor</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>dao</name><operator>.</operator><name>HostRoleCommandDAO</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>HostRoleCommandEntity</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>runner</name><operator>.</operator><name>RunWith</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>powermock</name><operator>.</operator><name>api</name><operator>.</operator><name>easymock</name><operator>.</operator><name>PowerMock</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>powermock</name><operator>.</operator><name>api</name><operator>.</operator><name>mockito</name><operator>.</operator><name>PowerMockito</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>powermock</name><operator>.</operator><name>core</name><operator>.</operator><name>classloader</name><operator>.</operator><name>annotations</name><operator>.</operator><name>PowerMockIgnore</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>powermock</name><operator>.</operator><name>core</name><operator>.</operator><name>classloader</name><operator>.</operator><name>annotations</name><operator>.</operator><name>PrepareForTest</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>powermock</name><operator>.</operator><name>modules</name><operator>.</operator><name>junit4</name><operator>.</operator><name>PowerMockRunner</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>Guice</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>Injector</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>persist</name><operator>.</operator><name>Transactional</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>persist</name><operator>.</operator><name>jpa</name><operator>.</operator><name>AmbariJpaPersistModule</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>persist</name><operator>.</operator><name>jpa</name><operator>.</operator><name>AmbariJpaPersistService</name></name>;</import>

<import>import <name><name>junit</name><operator>.</operator><name>framework</name><operator>.</operator><name>Assert</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Tests {@link TransactionalLock} and associated classes.
 */</comment>
<class><annotation>@<name>RunWith</name><argument_list>(<argument><expr><name><name>PowerMockRunner</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></annotation>
<annotation>@<name>PrepareForTest</name><argument_list>(
    <argument><expr><name>value</name> <operator>=</operator> <block>{ <expr><name><name>HostRoleCommandDAO</name><operator>.</operator><name>class</name></name></expr>, <argument><expr><name><name>AmbariJpaLocalTxnInterceptor</name><operator>.</operator><name>class</name></name></expr></argument>,
        <argument><expr><name><name>TransactionalLockInterceptor</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><name><name>AmbariJpaPersistModule</name><operator>.</operator><name>class</name></name></expr></argument>,
        <argument><expr><name><name>AmbariJpaPersistService</name><operator>.</operator><name>class</name></name></expr></argument> }</block></expr></argument>)</argument_list></annotation>
<annotation>@<name>PowerMockIgnore</name><argument_list>(<argument><expr><literal type="string">"javax.management.*"</literal></expr></argument>)</argument_list></annotation>
<specifier>public</specifier> class <name>TransactionalLockTest</name> <block>{

  <comment type="block" format="javadoc">/**
   * Tests that {@link LockArea} is correctly enabled/disabled.
   */</comment>
  <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testLockAreaEnabled</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><specifier>final</specifier> <name>Properties</name></type> <name>ambariProperties</name> <init>= <expr><operator>new</operator> <call><name>Properties</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>ambariProperties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name><name>Configuration</name><operator>.</operator><name>SERVER_HRC_STATUS_SUMMARY_CACHE_ENABLED</name></name></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Configuration</name></type> <name>configuration</name> <init>= <expr><operator>new</operator> <call><name>Configuration</name><argument_list>(<argument><expr><name>ambariProperties</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>LockArea</name></type> <name>lockArea</name> <init>= <expr><name><name>LockArea</name><operator>.</operator><name>HRC_STATUS_CACHE</name></name></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>lockArea</name><operator>.</operator><name>clearEnabled</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertTrue</name></name><argument_list>(<argument><expr><call><name><name>lockArea</name><operator>.</operator><name>isEnabled</name></name><argument_list>(<argument><expr><name>configuration</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <comment type="block" format="javadoc">/**
   * Tests that {@link LockArea} is correctly enabled/disabled.
   */</comment>
  <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testLockAreaEnabledDisabled</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><specifier>final</specifier> <name>Properties</name></type> <name>ambariProperties</name> <init>= <expr><operator>new</operator> <call><name>Properties</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>ambariProperties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name><name>Configuration</name><operator>.</operator><name>SERVER_HRC_STATUS_SUMMARY_CACHE_ENABLED</name></name></expr></argument>, <argument><expr><literal type="string">"false"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Configuration</name></type> <name>configuration</name> <init>= <expr><operator>new</operator> <call><name>Configuration</name><argument_list>(<argument><expr><name>ambariProperties</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>LockArea</name></type> <name>lockArea</name> <init>= <expr><name><name>LockArea</name><operator>.</operator><name>HRC_STATUS_CACHE</name></name></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>lockArea</name><operator>.</operator><name>clearEnabled</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertFalse</name></name><argument_list>(<argument><expr><call><name><name>lockArea</name><operator>.</operator><name>isEnabled</name></name><argument_list>(<argument><expr><name>configuration</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <comment type="block" format="javadoc">/**
   * Tests that the {@link Transactional} and {@link TransactionalLock}
   * annotations cause the interceptors to be called in the correct order.
   *
   * @throws Throwable
   */</comment>
  <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testTransactionLockOrdering</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Throwable</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>AmbariJpaLocalTxnInterceptor</name></type> <name>ambariJPAInterceptor</name> <init>= <expr><call><name><name>PowerMock</name><operator>.</operator><name>createNiceMock</name></name><argument_list>(
        <argument><expr><name><name>AmbariJpaLocalTxnInterceptor</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>TransactionalLockInterceptor</name></type> <name>lockInterceptor</name> <init>= <expr><call><name><name>PowerMock</name><operator>.</operator><name>createNiceMock</name></name><argument_list>(
        <argument><expr><name><name>TransactionalLockInterceptor</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name><name>PowerMockito</name><operator>.</operator><name>whenNew</name></name><argument_list>(<argument><expr><name><name>AmbariJpaLocalTxnInterceptor</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>withAnyArguments</name><argument_list>()</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(
        <argument><expr><name>ambariJPAInterceptor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>PowerMockito</name><operator>.</operator><name>whenNew</name></name><argument_list>(<argument><expr><name><name>TransactionalLockInterceptor</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>withAnyArguments</name><argument_list>()</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(
        <argument><expr><name>lockInterceptor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>Object</name></type> <name>object</name> <init>= <expr><operator>new</operator> <call><name>Object</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name><name>EasyMock</name><operator>.</operator><name>expect</name></name><argument_list>(<argument><expr><call><name><name>lockInterceptor</name><operator>.</operator><name>invoke</name></name><argument_list>(<argument><expr><call><name><name>EasyMock</name><operator>.</operator><name>anyObject</name></name><argument_list>(<argument><expr><name><name>MethodInvocation</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(
        <argument><expr><name>object</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>once</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>EasyMock</name><operator>.</operator><name>expect</name></name><argument_list>(
        <argument><expr><call><name><name>ambariJPAInterceptor</name><operator>.</operator><name>invoke</name></name><argument_list>(<argument><expr><call><name><name>EasyMock</name><operator>.</operator><name>anyObject</name></name><argument_list>(<argument><expr><name><name>MethodInvocation</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(
            <argument><expr><name>object</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>once</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>EasyMock</name><operator>.</operator><name>replay</name></name><argument_list>(<argument><expr><name>ambariJPAInterceptor</name></expr></argument>, <argument><expr><name>lockInterceptor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>Injector</name></type> <name>injector</name> <init>= <expr><call><name><name>Guice</name><operator>.</operator><name>createInjector</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>InMemoryDefaultTestModule</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>HostRoleCommandDAO</name></type> <name>hostRoleCommandDAO</name> <init>= <expr><call><name><name>injector</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name><name>HostRoleCommandDAO</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>hostRoleCommandDAO</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>HostRoleCommandEntity</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>EasyMock</name><operator>.</operator><name>verify</name></name><argument_list>(<argument><expr><name>lockInterceptor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

}</block></class>
<expr_stmt><expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></expr_stmt></block_content></block></function></block></class></expr></argument></argument_list></call></expr></expr_stmt></block_content></block></constructor></block_content></block></constructor></block_content></block></function>

</unit>
