<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/ambari/2e14098c19.java"><expr_stmt><expr><name>From</name> <literal type="number">2e14098c19afd5d22d879e5ea31eb0c793abbccf</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Myroslav</name> <name><name>Papirkovskyi</name> <argument_list type="generic">&lt;<argument><name>mpapyrkovskyy</name><annotation>@<name><name>hortonworks</name><operator>.</operator><name>com</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Wed</name></expr><operator>,</operator> <expr><literal type="number">22</literal> <name>Jun</name> <literal type="number">2016</literal> <literal type="number">18</literal><operator>:</operator><literal type="number">43</literal><operator>:</operator><literal type="number">40</literal> <operator>+</operator><literal type="number">0300</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>AMBARI</name><operator>-</operator><literal type="number">17199.</literal> <name>Scheduled</name> <name>requests</name> <name>works</name> <name>incorrectly</name></expr></expr_stmt> <for>for LDAP
 and Jwt users. <control>(<init><expr><name>mpapirkovskyy</name></expr></init>)</control><block type="pseudo"><block_content>

<expr_stmt><expr><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>authorization</name><operator>/</operator><name><name>AmbariAuthentication</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">11</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>AmbariLdapAuthenticationProvider</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">31</literal> <operator>++</operator><operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>AmbariUserAuthentication</name><operator>.</operator><name>java</name></name>             <operator>|</operator>   <literal type="number">7</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>authorization</name><operator>/</operator><name><name>AuthorizationHelper</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">8</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>authorization</name><operator>/</operator><name><name>UserIdAuthentication</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">24</literal> <operator>++</operator><operator>+</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>Users</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">23</literal> <operator>++</operator><operator>+</operator>
 <operator>...</operator><operator>/</operator><name>authorization</name><operator>/</operator><name>jwt</name><operator>/</operator><name><name>JwtAuthentication</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">50</literal> <operator>+</operator><operator>--</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog240</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">31</literal> <operator>++</operator><operator>++</operator>
 <operator>...</operator><operator>/</operator><name><name>AmbariAuthenticationTest</name><operator>.</operator><name>java</name></name>             <operator>|</operator>  <literal type="number">32</literal> <operator>++</operator><operator>--</operator>
 <operator>...</operator><name><name>henticationProviderForDNWithSpaceTest</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">3</literal> <operator>+</operator>
 <operator>...</operator><name><name>nticationProviderForDuplicateUserTest</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>AmbariLdapAuthenticationProviderTest</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">20</literal> <operator>++</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>AuthorizationHelperTest</name><operator>.</operator><name>java</name></name>              <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>TestUsers</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">11</literal> <operator>++</operator>
 <operator>...</operator><operator>/</operator><name>jwt</name><operator>/</operator><name><name>JwtAuthenticationFilterTest</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">9</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog240Test</name><operator>.</operator><name>java</name></name> <operator>|</operator> <literal type="number">140</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator><operator>--</operator><operator>-</operator>
 <literal type="number">16</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">307</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">101</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>UserIdAuthentication</name><operator>.</operator><name>java</name></name>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>AmbariAuthentication</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>AmbariAuthentication</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">9b1939fddb</literal><operator>..</operator><literal type="number">7eed77d936</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>AmbariAuthentication</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>AmbariAuthentication</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">31</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">31</literal></expr><operator>,</operator><expr><literal type="number">15</literal> @@</expr></expr_stmt></block_content></block></for> <import>import <name><name>org</name><operator>.</operator><name>springframework</name><operator>.</operator><name>security</name><operator>.</operator><name>core</name><operator>.</operator><name>userdetails</name><operator>.</operator><name>User</name></name>;</import>
  <expr_stmt><expr><operator>*</operator> <name>provide</name> <name>functionality</name></expr></expr_stmt> <for>for resolving login aliases to
  * ambari user names.
  */
public final class AmbariAuthentication implements Authentication <block>{<block_content>
<class><specifier>public</specifier> <specifier>final</specifier> class <name>AmbariAuthentication</name> <super_list><implements>implements <super><name>Authentication</name></super>, <super><name>UserIdAuthentication</name></super></implements></super_list> <block>{
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>Authentication</name></type> <name>authentication</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>Object</name></type> <name>principalOverride</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>Integer</name></type> <name>userId</name></decl>;</decl_stmt>
 
  <constructor><specifier>public</specifier> <name>AmbariAuthentication</name><parameter_list>(<parameter><decl><type><name>Authentication</name></type> <name>authentication</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <constructor><specifier>public</specifier> <name>AmbariAuthentication</name><parameter_list>(<parameter><decl><type><name>Authentication</name></type> <name>authentication</name></decl></parameter>, <parameter><decl><type><name>Integer</name></type> <name>userId</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <expr_stmt><expr><name><name>this</name><operator>.</operator><name>authentication</name></name> <operator>=</operator> <name>authentication</name></expr>;</expr_stmt>
     <expr_stmt><expr><name><name>this</name><operator>.</operator><name>principalOverride</name></name> <operator>=</operator> <call><name>getPrincipalOverride</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>userId</name></name> <operator>=</operator> <name>userId</name></expr>;</expr_stmt>
   </block_content>}</block></constructor>
 
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">219</literal></expr><operator>,</operator><expr><literal type="number">4</literal> <operator>+</operator><literal type="number">221</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>AmbariAuthentication</name> implements <name>Authentication</name> <block>{
 
     <return>return <expr><name>principal</name></expr>;</return>
   }</block></expr></expr_stmt>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>Integer</name></type> <name>getUserId</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>userId</name></expr>;</return>
  </block_content>}</block></function>
 </block_content>}</block></constructor>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>AmbariLdapAuthenticationProvider</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>AmbariLdapAuthenticationProvider</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>da47407d63</name><operator>..</operator><literal type="number">0bf7ec269f</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>AmbariLdapAuthenticationProvider</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>AmbariLdapAuthenticationProvider</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">16</literal> @@</expr></expr_stmt> <import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>Inject</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>configuration</name><operator>.</operator><name>Configuration</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>dao</name><operator>.</operator><name>UserDAO</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>UserEntity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>security</name><operator>.</operator><name>ClientSecurityType</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>lang</name><operator>.</operator><name>StringUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>springframework</name><operator>.</operator><name>dao</name><operator>.</operator><name>IncorrectResultSizeDataAccessException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>springframework</name><operator>.</operator><name>ldap</name><operator>.</operator><name>core</name><operator>.</operator><name>support</name><operator>.</operator><name>LdapContextSource</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>springframework</name><operator>.</operator><name>security</name><operator>.</operator><name>authentication</name><operator>.</operator><name>AuthenticationProvider</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>springframework</name><operator>.</operator><name>security</name><operator>.</operator><name>authentication</name><operator>.</operator><name>DisabledException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>springframework</name><operator>.</operator><name>security</name><operator>.</operator><name>authentication</name><operator>.</operator><name>UsernamePasswordAuthenticationToken</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>springframework</name><operator>.</operator><name>security</name><operator>.</operator><name>core</name><operator>.</operator><name>Authentication</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>springframework</name><operator>.</operator><name>security</name><operator>.</operator><name>core</name><operator>.</operator><name>AuthenticationException</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">44</literal></expr><operator>,</operator><expr><literal type="number">15</literal> <operator>+</operator><literal type="number">48</literal></expr><operator>,</operator><expr><literal type="number">18</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariLdapAuthenticationProvider</name> implements <name>AuthenticationProvider</name>
   <name>Configuration</name> <name>configuration</name></expr>;</expr_stmt>
 
   <decl_stmt><decl><type><specifier>private</specifier> <name>AmbariLdapAuthoritiesPopulator</name></type> <name>authoritiesPopulator</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>UserDAO</name></type> <name>userDAO</name></decl>;</decl_stmt>
 
   <decl_stmt><decl><type><specifier>private</specifier> <name><name>ThreadLocal</name><argument_list type="generic">&lt;<argument><name>LdapServerProperties</name></argument>&gt;</argument_list></name></type> <name>ldapServerProperties</name> <init>= <expr><operator>new</operator> <call><name><name>ThreadLocal</name><argument_list type="generic">&lt;<argument><name>LdapServerProperties</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <name><name>ThreadLocal</name><argument_list type="generic">&lt;<argument><name>LdapAuthenticationProvider</name></argument>&gt;</argument_list></name></type> <name>providerThreadLocal</name> <init>= <expr><operator>new</operator> <call><name><name>ThreadLocal</name><argument_list type="generic">&lt;<argument><name>LdapAuthenticationProvider</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <name><name>ThreadLocal</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>ldapUserSearchFilterThreadLocal</name> <init>= <expr><operator>new</operator> <call><name><name>ThreadLocal</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
   <constructor><annotation>@<name>Inject</name></annotation>
  <specifier>public</specifier> <name>AmbariLdapAuthenticationProvider</name><parameter_list>(<parameter><decl><type><name>Configuration</name></type> <name>configuration</name></decl></parameter>, <parameter><decl><type><name>AmbariLdapAuthoritiesPopulator</name></type> <name>authoritiesPopulator</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <constructor><specifier>public</specifier> <name>AmbariLdapAuthenticationProvider</name><parameter_list>(<parameter><decl><type><name>Configuration</name></type> <name>configuration</name></decl></parameter>,
                                          <parameter><decl><type><name>AmbariLdapAuthoritiesPopulator</name></type> <name>authoritiesPopulator</name></decl></parameter>, <parameter><decl><type><name>UserDAO</name></type> <name>userDAO</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <expr_stmt><expr><name><name>this</name><operator>.</operator><name>configuration</name></name> <operator>=</operator> <name>configuration</name></expr>;</expr_stmt>
     <expr_stmt><expr><name><name>this</name><operator>.</operator><name>authoritiesPopulator</name></name> <operator>=</operator> <name>authoritiesPopulator</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>userDAO</name></name> <operator>=</operator> <name>userDAO</name></expr>;</expr_stmt>
   </block_content>}</block></constructor>
 
   <annotation>@<name>Override</name></annotation>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">62</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">69</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariLdapAuthenticationProvider</name> implements <name>AuthenticationProvider</name></expr></expr_stmt>
 
       <try>try <block>{<block_content>
         <decl_stmt><decl><type><name>Authentication</name></type> <name>auth</name> <init>= <expr><call><name>loadLdapAuthenticationProvider</name><argument_list>(<argument><expr><name>username</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>authenticate</name><argument_list>(<argument><expr><name>authentication</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Integer</name></type> <name>userId</name> <init>= <expr><call><name>getUserId</name><argument_list>(<argument><expr><name>auth</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
        <return>return <expr><operator>new</operator> <call><name>AmbariAuthentication</name><argument_list>(<argument><expr><name>auth</name></expr></argument>)</argument_list></call></expr>;</return>
        <return>return <expr><operator>new</operator> <call><name>AmbariAuthentication</name><argument_list>(<argument><expr><name>auth</name></expr></argument>, <argument><expr><name>userId</name></expr></argument>)</argument_list></call></expr>;</return>
       </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>AuthenticationException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"Got exception during LDAP authentification attempt"</literal></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <comment type="line">// Try to help in troubleshooting</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">182</literal></expr><operator>,</operator><expr><literal type="number">4</literal> <operator>+</operator><literal type="number">190</literal></expr><operator>,</operator><expr><literal type="number">23</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariLdapAuthenticationProvider</name> implements <call><name><name>AuthenticationProvider</name>
       <operator>.</operator><name>getUserSearchFilter</name></name><argument_list>(<argument><expr><call><name><name>configuration</name><operator>.</operator><name>isLdapAlternateUserSearchEnabled</name></name><argument_list>()</argument_list></call> <operator>&amp;&amp;</operator> <call><name><name>AmbariLdapUtils</name><operator>.</operator><name>isUserPrincipalNameFormat</name></name><argument_list>(<argument><expr><name>userName</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></catch></try>
 
  <function><type><specifier>private</specifier> <name>Integer</name></type> <name>getUserId</name><parameter_list>(<parameter><decl><type><name>Authentication</name></type> <name>authentication</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>String</name></type> <name>userName</name> <init>= <expr><call><name><name>authentication</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>UserEntity</name></type> <name>userEntity</name> <init>= <expr><call><name><name>userDAO</name><operator>.</operator><name>findLdapUserByName</name></name><argument_list>(<argument><expr><name>userName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt><if>if <condition>(<expr><name>userEntity</name> <operator>==</operator> <literal type="null">null</literal> <operator>||</operator> <operator>!</operator><call><name><name>StringUtils</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><call><name><name>userEntity</name><operator>.</operator><name>getUserName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>userName</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"user not found "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <throw>throw <expr><operator>new</operator> <call><name>UsernameNotFoundException</name><argument_list>(<argument><expr><literal type="string">"Username "</literal> <operator>+</operator> <name>userName</name> <operator>+</operator> <literal type="string">" not found"</literal></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></if></if_stmt>

    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>userEntity</name><operator>.</operator><name>getActive</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"User account is disabled"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <throw>throw <expr><operator>new</operator> <call><name>DisabledException</name><argument_list>(<argument><expr><literal type="string">"Username "</literal> <operator>+</operator> <name>userName</name> <operator>+</operator> <literal type="string">" is disabled"</literal></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></if></if_stmt>

    <return>return <expr><call><name><name>userEntity</name><operator>.</operator><name>getUserId</name></name><argument_list>()</argument_list></call></expr>;</return>
  </block_content>}</block></function>

 </block_content>}</block></constructor>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>AmbariUserAuthentication</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>AmbariUserAuthentication</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>f9c5cf4886</name><operator>..</operator><name>ae764e51db</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>AmbariUserAuthentication</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>AmbariUserAuthentication</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>springframework</name><operator>.</operator><name>security</name><operator>.</operator><name>core</name><operator>.</operator><name>Authentication</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collection</name></name>;</import>
 
<class><specifier>public</specifier> class <name>AmbariUserAuthentication</name> <super_list><implements>implements <super><name>Authentication</name></super></implements></super_list> <block>{
<class><specifier>public</specifier> class <name>AmbariUserAuthentication</name> <super_list><implements>implements <super><name>Authentication</name></super>, <super><name>UserIdAuthentication</name></super></implements></super_list> <block>{
 
   <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>serializedToken</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <name>User</name></type> <name>user</name></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">68</literal></expr><operator>,</operator><expr><literal type="number">4</literal> <operator>+</operator><literal type="number">68</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariUserAuthentication</name> implements <name>Authentication</name> <block>{
   <expr><specifier>public</specifier> <name>String</name> <call><name>getName</name><argument_list>()</argument_list></call> <block>{
     <return>return <expr><call><name><name>user</name><operator>.</operator><name>getUserName</name></name><argument_list>()</argument_list></call></expr>;</return></block></expr>
   }</block>

  @<name>Override</name>
  <specifier>public</specifier> <name>Integer</name> <call><name>getUserId</name><argument_list>()</argument_list></call> <block>{
    <return>return <expr><call><name><name>user</name><operator>.</operator><name>getUserId</name></name><argument_list>()</argument_list></call></expr>;</return>
  }</block></expr></expr_stmt>
 }</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>AuthorizationHelper</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>AuthorizationHelper</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">8befc3f71a</literal><operator>..</operator><literal type="number">8639a2f2b8</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>AuthorizationHelper</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>AuthorizationHelper</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">107</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">107</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ <specifier>public</specifier> <name>class</name> <name>AuthorizationHelper</name> <block>{
     <expr><name>SecurityContext</name> <name>securityContext</name> <operator>=</operator> <call><name><name>SecurityContextHolder</name><operator>.</operator><name>getContext</name></name><argument_list>()</argument_list></call></expr>;
 
     <expr><name>Authentication</name> <name>authentication</name> <operator>=</operator> <call><name><name>securityContext</name><operator>.</operator><name>getAuthentication</name></name><argument_list>()</argument_list></call></expr>;
    <expr><name>AmbariUserAuthentication</name> <name>auth</name></expr>;
    <if_stmt><if>if <condition>(<expr><name>authentication</name> <operator>instanceof</operator> <name>AmbariUserAuthentication</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>auth</name> <operator>=</operator> <operator>(</operator><name>AmbariUserAuthentication</name><operator>)</operator> <name>authentication</name></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>UserIdAuthentication</name></type> <name>auth</name></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>authentication</name> <operator>instanceof</operator> <name>UserIdAuthentication</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>auth</name> <operator>=</operator> <operator>(</operator><name>UserIdAuthentication</name><operator>)</operator> <name>authentication</name></expr>;</expr_stmt>
     <expr_stmt/></block_content></block></if></if_stmt></block_content></block></if></if_stmt>}</block></expr></expr_stmt> <if_stmt><else>else <block>{<block_content>
       <return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
     </block_content>}</block></else></if_stmt>
 
    <return>return <expr><call><name><name>auth</name><operator>.</operator><name>getPrincipal</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getUserId</name><argument_list>()</argument_list></call></expr>;</return>
    <return>return <expr><call><name><name>auth</name><operator>.</operator><name>getUserId</name></name><argument_list>()</argument_list></call></expr>;</return>
   }</block></class>
 
   <comment type="block" format="javadoc">/**
diff --git a/ambari-server/src/main/java/org/apache/ambari/server/security/authorization/UserIdAuthentication.java b/ambari-server/src/main/java/org/apache/ambari/server/security/authorization/UserIdAuthentication.java
new file mode 100644
index 0000000000..f2a9daf2a4
-- /dev/null
++ b/ambari-server/src/main/java/org/apache/ambari/server/security/authorization/UserIdAuthentication.java
@@ -0,0 +1,24 @@
/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>security</name><operator>.</operator><name>authorization</name></name>;</package>

<interface><specifier>public</specifier> interface <name>UserIdAuthentication</name> <block>{

  <function_decl><type><name>Integer</name></type> <name>getUserId</name><parameter_list>()</parameter_list>;</function_decl>
}</block></interface>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>Users</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>Users</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>f1abb90692</name><operator>..</operator><literal type="number">1a7b58db37</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>Users</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>Users</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">123</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">123</literal></expr><operator>,</operator><expr><literal type="number">29</literal> @@ <specifier>public</specifier> <name>class</name> <name>Users</name> <block>{
     <return>return <expr><operator>(</operator><literal type="null">null</literal> <operator>==</operator> <name>userEntity</name><operator>)</operator> <operator>?</operator> <literal type="null">null</literal> <operator>:</operator> <operator>new</operator> <call><name>User</name><argument_list>(<argument><expr><name>userEntity</name></expr></argument>)</argument_list></call></expr>;</return>
   }</block></expr></expr_stmt>
 
  <comment type="block" format="javadoc">/**
   * Retrieves User then userName is unique in users DB. Will return null if there no user with provided userName or
   * there are some users with provided userName but with different types.
   * @param userName
   * @return User if userName is unique in DB, null otherwise
   */</comment>
  <function><type><specifier>public</specifier> <name>User</name></type> <name>getUserIfUnique</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>userName</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>UserEntity</name></argument>&gt;</argument_list></name></type> <name>userEntities</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>UserEntity</name></type> <name>userEntity</name> <init>= <expr><call><name><name>userDAO</name><operator>.</operator><name>findUserByNameAndType</name></name><argument_list>(<argument><expr><name>userName</name></expr></argument>, <argument><expr><name><name>UserType</name><operator>.</operator><name>LOCAL</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>userEntity</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>userEntities</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>userEntity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt><expr><name>userEntity</name> <operator>=</operator> <call><name><name>userDAO</name><operator>.</operator><name>findUserByNameAndType</name></name><argument_list>(<argument><expr><name>userName</name></expr></argument>, <argument><expr><name><name>UserType</name><operator>.</operator><name>LDAP</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>userEntity</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>userEntities</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>userEntity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt><expr><name>userEntity</name> <operator>=</operator> <call><name><name>userDAO</name><operator>.</operator><name>findUserByNameAndType</name></name><argument_list>(<argument><expr><name>userName</name></expr></argument>, <argument><expr><name><name>UserType</name><operator>.</operator><name>JWT</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>userEntity</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>userEntities</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>userEntity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <return>return <expr><ternary><condition><expr><operator>(</operator><call><name><name>userEntities</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call> <operator>||</operator> <call><name><name>userEntities</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">1</literal><operator>)</operator></expr> ?</condition><then> <expr><literal type="null">null</literal></expr> </then><else>: <expr><operator>new</operator> <call><name>User</name><argument_list>(<argument><expr><call><name><name>userEntities</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</return>
  </block_content>}</block></function>

   <comment type="block" format="javadoc">/**
    * Modifies password of local user
    * @throws AmbariException
diff --git a/ambari-server/src/main/java/org/apache/ambari/server/security/authorization/jwt/JwtAuthentication.java b/ambari-server/src/main/java/org/apache/ambari/server/security/authorization/jwt/JwtAuthentication.java
index 1b7442c65f..3088b09716 100644
-- a/ambari-server/src/main/java/org/apache/ambari/server/security/authorization/jwt/JwtAuthentication.java
++ b/ambari-server/src/main/java/org/apache/ambari/server/security/authorization/jwt/JwtAuthentication.java
@@ -17,62 +17,18 @@
  */</comment>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>security</name><operator>.</operator><name>authorization</name><operator>.</operator><name>jwt</name></name>;</package>
 
<import>import <name><name>com</name><operator>.</operator><name>nimbusds</name><operator>.</operator><name>jwt</name><operator>.</operator><name>SignedJWT</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>security</name><operator>.</operator><name>authorization</name><operator>.</operator><name>AmbariGrantedAuthority</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>security</name><operator>.</operator><name>authorization</name><operator>.</operator><name>AmbariUserAuthentication</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>security</name><operator>.</operator><name>authorization</name><operator>.</operator><name>User</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>springframework</name><operator>.</operator><name>security</name><operator>.</operator><name>core</name><operator>.</operator><name>Authentication</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>springframework</name><operator>.</operator><name>security</name><operator>.</operator><name>core</name><operator>.</operator><name>GrantedAuthority</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collection</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
  * Internal token which describes JWT authentication
  */</comment>
<class><specifier>public</specifier> class <name>JwtAuthentication</name> <super_list><implements>implements <super><name>Authentication</name></super></implements></super_list> <block>{

  <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>serializedToken</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>User</name></type> <name>user</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name><name>Collection</name><argument_list type="generic">&lt;<argument><name>AmbariGrantedAuthority</name></argument>&gt;</argument_list></name></type> <name>userAuthorities</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>boolean</name></type> <name>authenticated</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
<class><specifier>public</specifier> class <name>JwtAuthentication</name> <super_list><extends>extends <super><name>AmbariUserAuthentication</name></super></extends></super_list> <block>{
 
   <constructor><specifier>public</specifier> <name>JwtAuthentication</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>token</name></decl></parameter>, <parameter><decl><type><name>User</name></type> <name>user</name></decl></parameter>, <parameter><decl><type><name><name>Collection</name><argument_list type="generic">&lt;<argument><name>AmbariGrantedAuthority</name></argument>&gt;</argument_list></name></type> <name>userAuthorities</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>serializedToken</name></name> <operator>=</operator> <name>token</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>user</name></name> <operator>=</operator> <name>user</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>userAuthorities</name></name> <operator>=</operator> <name>userAuthorities</name></expr>;</expr_stmt>
  </block_content>}</block></constructor>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name><name>Collection</name><argument_list type="generic">&lt;<argument><name>?</name> <extends>extends <name>AmbariGrantedAuthority</name></extends></argument>&gt;</argument_list></name></type> <name>getAuthorities</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>userAuthorities</name></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>String</name></type> <name>getCredentials</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>serializedToken</name></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>Object</name></type> <name>getDetails</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><literal type="null">null</literal></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>User</name></type> <name>getPrincipal</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>user</name></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>boolean</name></type> <name>isAuthenticated</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>authenticated</name></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>setAuthenticated</name><parameter_list>(<parameter><decl><type><name>boolean</name></type> <name>authenticated</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IllegalArgumentException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>authenticated</name></name> <operator>=</operator> <name>authenticated</name></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>String</name></type> <name>getName</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><call><name><name>user</name><operator>.</operator><name>getUserName</name></name><argument_list>()</argument_list></call></expr>;</return>
    <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>token</name></expr></argument>, <argument><expr><name>user</name></expr></argument>, <argument><expr><name>userAuthorities</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
 }</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog240</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog240</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">6ecfa717dc</literal><operator>..</operator><name>b0d52114ea</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog240</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog240</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">54</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">54</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>dao</name><operator>.</operator><name>PrincipalDAO</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>dao</name><operator>.</operator><name>PrincipalTypeDAO</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>dao</name><operator>.</operator><name>PrivilegeDAO</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>dao</name><operator>.</operator><name>RemoteAmbariClusterDAO</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>dao</name><operator>.</operator><name>RequestScheduleDAO</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>dao</name><operator>.</operator><name>ResourceTypeDAO</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>dao</name><operator>.</operator><name>RoleAuthorizationDAO</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>dao</name><operator>.</operator><name>UserDAO</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">67</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">68</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>PrincipalEntity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>PrincipalTypeEntity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>PrivilegeEntity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>RemoteAmbariClusterEntity</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>RequestScheduleEntity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>ResourceEntity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>ResourceTypeEntity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>RoleAuthorizationEntity</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">75</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">77</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>ViewEntityEntity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>ViewInstanceEntity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>WidgetEntity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>security</name><operator>.</operator><name>authorization</name><operator>.</operator><name>ResourceType</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>security</name><operator>.</operator><name>authorization</name><operator>.</operator><name>User</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>security</name><operator>.</operator><name>authorization</name><operator>.</operator><name>Users</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>AlertFirmness</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>Cluster</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>Clusters</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">223</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">227</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>UpgradeCatalog240</name> extends <name>AbstractUpgradeCatalog</name> <block>{
   @<expr><name>Inject</name>
   <name>PrincipalDAO</name> <name>principalDAO</name></expr>;
 
  @<expr><name>Inject</name>
  <name>RequestScheduleDAO</name> <name>requestScheduleDAO</name></expr>;

  @<expr><name>Inject</name>
  <name>Users</name> <name>users</name></expr>;

   <comment type="block" format="javadoc">/**
    * Logger.
    */</comment>
@@ <expr><operator>-</operator><literal type="number">398</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">408</literal></expr>,<expr><literal type="number">27</literal> @@ <specifier>public</specifier> <name>class</name> <name>UpgradeCatalog240</name> extends <name>AbstractUpgradeCatalog</name> <block>{
     <expr><call><name>removeAuthorizations</name><argument_list>()</argument_list></call></expr>;
     <expr><call><name>addConnectionTimeoutParamForWebAndMetricAlerts</name><argument_list>()</argument_list></call></expr>;
     <expr><call><name>addSliderClientConfig</name><argument_list>()</argument_list></call></expr>;
    <expr><call><name>updateRequestScheduleEntityUserIds</name><argument_list>()</argument_list></call></expr>;
  }</block>

  <comment type="block" format="javadoc">/**
   * Populates authenticated_user_id field by correct user id calculated from user name
   * @throws SQLException
   */</comment>
  <specifier>protected</specifier> <name>void</name> <call><name>updateRequestScheduleEntityUserIds</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>SQLException</name> <block>{
    <expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>RequestScheduleEntity</name></argument>&gt;</argument_list></name> <name>requestScheduleEntities</name> <operator>=</operator> <call><name><name>requestScheduleDAO</name><operator>.</operator><name>findAll</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <for>for <control>(<init><decl><type><name>RequestScheduleEntity</name></type> <name>requestScheduleEntity</name> <range>: <expr><name>requestScheduleEntities</name></expr></range></decl></init>)</control> <block>{<block_content>
      <decl_stmt><decl><type><name>String</name></type> <name>createdUserName</name> <init>= <expr><call><name><name>requestScheduleEntity</name><operator>.</operator><name>getCreateUser</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

      <if_stmt><if>if <condition>(<expr><name>createdUserName</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <decl_stmt><decl><type><name>User</name></type> <name>user</name> <init>= <expr><call><name><name>users</name><operator>.</operator><name>getUserIfUnique</name></name><argument_list>(<argument><expr><name>createdUserName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt><if>if <condition>(<expr><name>user</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>StringUtils</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><call><name><name>user</name><operator>.</operator><name>getUserName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>createdUserName</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name><name>requestScheduleEntity</name><operator>.</operator><name>setAuthenticatedUserId</name></name><argument_list>(<argument><expr><call><name><name>user</name><operator>.</operator><name>getUserId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>requestScheduleDAO</name><operator>.</operator><name>merge</name></name><argument_list>(<argument><expr><name>requestScheduleEntity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt/></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for>}</block></expr></expr_stmt>
      }</block></class>
    }</block></class>
   </block_content>}</block></for>
 
   <function><type><specifier>protected</specifier> <name>void</name></type> <name>updateClusterInheritedPermissionsConfig</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>SQLException</name></expr></argument></throws> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>AmbariAuthenticationTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>AmbariAuthenticationTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">19656b1329</literal><operator>..</operator><name>d8c6be8fcd</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>AmbariAuthenticationTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>AmbariAuthenticationTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">48</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">48</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt> <import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>verify</name></name>;</import>
 
 <class><specifier>public</specifier> class <name>AmbariAuthenticationTest</name> <super_list><extends>extends <super><name>EasyMockSupport</name></super></extends></super_list> <block>{
 
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>Integer</name></type> <name>DEFAULT_USER_ID</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

   <decl_stmt><decl><annotation>@<name>Rule</name></annotation>
   <type><specifier>public</specifier> <name>EasyMockRule</name></type> <name>mocks</name> <init>= <expr><operator>new</operator> <call><name>EasyMockRule</name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">76</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">78</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariAuthenticationTest</name> extends <name>EasyMockSupport</name> <block>{
     }</block></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><name>Authentication</name></type> <name>authentication</name> <init>= <expr><operator>new</operator> <call><name>TestingAuthenticationToken</name><argument_list>(<argument><expr><name>origPrincipal</name></expr></argument>, <argument><expr><literal type="string">"password"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Authentication</name></type> <name>ambariAuthentication</name> <init>= <expr><operator>new</operator> <call><name>AmbariAuthentication</name><argument_list>(<argument><expr><name>authentication</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Authentication</name></type> <name>ambariAuthentication</name> <init>= <expr><operator>new</operator> <call><name>AmbariAuthentication</name><argument_list>(<argument><expr><name>authentication</name></expr></argument>, <argument><expr><name>DEFAULT_USER_ID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <comment type="line">// When</comment>
     <decl_stmt><decl><type><name>Object</name></type> <name>principal</name> <init>= <expr><call><name><name>ambariAuthentication</name><operator>.</operator><name>getPrincipal</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">90</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">92</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariAuthenticationTest</name> extends <name>EasyMockSupport</name> <block>{
   <expr><specifier>public</specifier> <name>void</name> <call><name>testGetPrincipal</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <comment type="line">// Given</comment>
     <expr><name>Authentication</name> <name>authentication</name> <operator>=</operator> <operator>new</operator> <call><name>TestingAuthenticationToken</name><argument_list>(<argument><expr><literal type="string">"user"</literal></expr></argument>, <argument><expr><literal type="string">"password"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <expr><name>Authentication</name> <name>ambariAuthentication</name> <operator>=</operator> <operator>new</operator> <call><name>AmbariAuthentication</name><argument_list>(<argument><expr><name>authentication</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>Authentication</name> <name>ambariAuthentication</name> <operator>=</operator> <operator>new</operator> <call><name>AmbariAuthentication</name><argument_list>(<argument><expr><name>authentication</name></expr></argument>, <argument><expr><name>DEFAULT_USER_ID</name></expr></argument>)</argument_list></call></expr>;
 
     <comment type="line">// When</comment>
     <expr><name>Object</name> <name>principal</name> <operator>=</operator> <call><name><name>ambariAuthentication</name><operator>.</operator><name>getPrincipal</name></name><argument_list>()</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">108</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">110</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariAuthenticationTest</name> extends <name>EasyMockSupport</name> <block>{
 
     <expr><call><name>replayAll</name><argument_list>()</argument_list></call></expr>;
 
    <expr><name>Authentication</name> <name>ambariAuthentication</name> <operator>=</operator> <operator>new</operator> <call><name>AmbariAuthentication</name><argument_list>(<argument><expr><name>authentication</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>Authentication</name> <name>ambariAuthentication</name> <operator>=</operator> <operator>new</operator> <call><name>AmbariAuthentication</name><argument_list>(<argument><expr><name>authentication</name></expr></argument>, <argument><expr><name>DEFAULT_USER_ID</name></expr></argument>)</argument_list></call></expr>;
 
     <comment type="line">// When</comment>
     <expr><call><name>verifyAll</name><argument_list>()</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">124</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">126</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariAuthenticationTest</name> extends <name>EasyMockSupport</name> <block>{
     <expr><name>UserDetails</name> <name>userDetails</name> <operator>=</operator> <operator>new</operator> <call><name>User</name><argument_list>(<argument><expr><literal type="string">"user"</literal></expr></argument>, <argument><expr><literal type="string">"password"</literal></expr></argument>, <argument><expr><name><name>Collections</name><operator>.</operator></name>&lt;<name>GrantedAuthority</name><operator>&gt;</operator><call><name>emptyList</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <expr><name>Authentication</name> <name>authentication</name> <operator>=</operator> <operator>new</operator> <call><name>TestingAuthenticationToken</name><argument_list>(<argument><expr><name>userDetails</name></expr></argument>, <argument><expr><call><name><name>userDetails</name><operator>.</operator><name>getPassword</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
    <expr><name>Authentication</name> <name>ambariAuthentication</name> <operator>=</operator> <operator>new</operator> <call><name>AmbariAuthentication</name><argument_list>(<argument><expr><name>authentication</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>Authentication</name> <name>ambariAuthentication</name> <operator>=</operator> <operator>new</operator> <call><name>AmbariAuthentication</name><argument_list>(<argument><expr><name>authentication</name></expr></argument>, <argument><expr><name>DEFAULT_USER_ID</name></expr></argument>)</argument_list></call></expr>;
 
     <comment type="line">// When</comment>
     <expr><name>Object</name> <name>principal</name> <operator>=</operator> <call><name><name>ambariAuthentication</name><operator>.</operator><name>getPrincipal</name></name><argument_list>()</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">144</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">146</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariAuthenticationTest</name> extends <name>EasyMockSupport</name> <block>{
 
     <expr><call><name>replayAll</name><argument_list>()</argument_list></call></expr>;
 
    <expr><name>Authentication</name> <name>ambariAuthentication</name> <operator>=</operator> <operator>new</operator> <call><name>AmbariAuthentication</name><argument_list>(<argument><expr><name>authentication</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>Authentication</name> <name>ambariAuthentication</name> <operator>=</operator> <operator>new</operator> <call><name>AmbariAuthentication</name><argument_list>(<argument><expr><name>authentication</name></expr></argument>, <argument><expr><name>DEFAULT_USER_ID</name></expr></argument>)</argument_list></call></expr>;
 
     <comment type="line">// When</comment>
     <expr><name>Object</name> <name>principal</name> <operator>=</operator> <call><name><name>ambariAuthentication</name><operator>.</operator><name>getPrincipal</name></name><argument_list>()</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">168</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">170</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariAuthenticationTest</name> extends <name>EasyMockSupport</name> <block>{
       }</block></expr>
     }</block></expr>;
     <expr><name>Authentication</name> <name>authentication</name> <operator>=</operator> <operator>new</operator> <call><name>TestingAuthenticationToken</name><argument_list>(<argument><expr><name>origPrincipal</name></expr></argument>, <argument><expr><literal type="string">"password"</literal></expr></argument>)</argument_list></call></expr>;
    <expr><name>Authentication</name> <name>ambariAuthentication</name> <operator>=</operator> <operator>new</operator> <call><name>AmbariAuthentication</name><argument_list>(<argument><expr><name>authentication</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>Authentication</name> <name>ambariAuthentication</name> <operator>=</operator> <operator>new</operator> <call><name>AmbariAuthentication</name><argument_list>(<argument><expr><name>authentication</name></expr></argument>, <argument><expr><name>DEFAULT_USER_ID</name></expr></argument>)</argument_list></call></expr>;
 
     <comment type="line">// When</comment>
     <expr><name>String</name> <name>name</name> <operator>=</operator> <call><name><name>ambariAuthentication</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">181</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">183</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariAuthenticationTest</name> extends <name>EasyMockSupport</name> <block>{
   <expr><specifier>public</specifier> <name>void</name> <call><name>testGetName</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <comment type="line">// Given</comment>
     <expr><name>Authentication</name> <name>authentication</name> <operator>=</operator> <operator>new</operator> <call><name>TestingAuthenticationToken</name><argument_list>(<argument><expr><literal type="string">"user"</literal></expr></argument>, <argument><expr><literal type="string">"password"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <expr><name>Authentication</name> <name>ambariAuthentication</name> <operator>=</operator> <operator>new</operator> <call><name>AmbariAuthentication</name><argument_list>(<argument><expr><name>authentication</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>Authentication</name> <name>ambariAuthentication</name> <operator>=</operator> <operator>new</operator> <call><name>AmbariAuthentication</name><argument_list>(<argument><expr><name>authentication</name></expr></argument>, <argument><expr><name>DEFAULT_USER_ID</name></expr></argument>)</argument_list></call></expr>;
 
     <comment type="line">// When</comment>
     <expr><name>String</name> <name>name</name> <operator>=</operator> <call><name><name>ambariAuthentication</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">199</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">201</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariAuthenticationTest</name> extends <name>EasyMockSupport</name> <block>{
 
     <expr><call><name>replayAll</name><argument_list>()</argument_list></call></expr>;
 
    <expr><name>Authentication</name> <name>ambariAuthentication</name> <operator>=</operator> <operator>new</operator> <call><name>AmbariAuthentication</name><argument_list>(<argument><expr><name>authentication</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>Authentication</name> <name>ambariAuthentication</name> <operator>=</operator> <operator>new</operator> <call><name>AmbariAuthentication</name><argument_list>(<argument><expr><name>authentication</name></expr></argument>, <argument><expr><name>DEFAULT_USER_ID</name></expr></argument>)</argument_list></call></expr>;
 
     <comment type="line">// When</comment>
     <expr><name>String</name> <name>name</name> <operator>=</operator> <call><name><name>ambariAuthentication</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">215</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">217</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariAuthenticationTest</name> extends <name>EasyMockSupport</name> <block>{
     <expr><name>UserDetails</name> <name>userDetails</name> <operator>=</operator> <operator>new</operator> <call><name>User</name><argument_list>(<argument><expr><literal type="string">"user"</literal></expr></argument>, <argument><expr><literal type="string">"password"</literal></expr></argument>, <argument><expr><name><name>Collections</name><operator>.</operator></name>&lt;<name>GrantedAuthority</name><operator>&gt;</operator><call><name>emptyList</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <expr><name>Authentication</name> <name>authentication</name> <operator>=</operator> <operator>new</operator> <call><name>TestingAuthenticationToken</name><argument_list>(<argument><expr><name>userDetails</name></expr></argument>, <argument><expr><call><name><name>userDetails</name><operator>.</operator><name>getPassword</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
    <expr><name>Authentication</name> <name>ambariAuthentication</name> <operator>=</operator> <operator>new</operator> <call><name>AmbariAuthentication</name><argument_list>(<argument><expr><name>authentication</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>Authentication</name> <name>ambariAuthentication</name> <operator>=</operator> <operator>new</operator> <call><name>AmbariAuthentication</name><argument_list>(<argument><expr><name>authentication</name></expr></argument>, <argument><expr><name>DEFAULT_USER_ID</name></expr></argument>)</argument_list></call></expr>;
 
     <comment type="line">// When</comment>
     <expr><name>String</name> <name>name</name> <operator>=</operator> <call><name><name>ambariAuthentication</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">235</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">237</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariAuthenticationTest</name> extends <name>EasyMockSupport</name> <block>{
 
     <expr><call><name>replayAll</name><argument_list>()</argument_list></call></expr>;
 
    <expr><name>Authentication</name> <name>ambariAuthentication</name> <operator>=</operator> <operator>new</operator> <call><name>AmbariAuthentication</name><argument_list>(<argument><expr><name>authentication</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>Authentication</name> <name>ambariAuthentication</name> <operator>=</operator> <operator>new</operator> <call><name>AmbariAuthentication</name><argument_list>(<argument><expr><name>authentication</name></expr></argument>, <argument><expr><name>DEFAULT_USER_ID</name></expr></argument>)</argument_list></call></expr>;
 
     <comment type="line">// When</comment>
     <expr><name>String</name> <name>name</name> <operator>=</operator> <call><name><name>ambariAuthentication</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">249</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">251</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariAuthenticationTest</name> extends <name>EasyMockSupport</name> <block>{
   <expr><specifier>public</specifier> <name>void</name> <call><name>testGetAuthorities</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <comment type="line">// Given</comment>
     <expr><name>Authentication</name> <name>authentication</name> <operator>=</operator> <operator>new</operator> <call><name>TestingAuthenticationToken</name><argument_list>(<argument><expr><literal type="string">"user"</literal></expr></argument>, <argument><expr><literal type="string">"password"</literal></expr></argument>, <argument><expr><literal type="string">"test_role"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <expr><name>Authentication</name> <name>ambariAuthentication</name> <operator>=</operator> <operator>new</operator> <call><name>AmbariAuthentication</name><argument_list>(<argument><expr><name>authentication</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>Authentication</name> <name>ambariAuthentication</name> <operator>=</operator> <operator>new</operator> <call><name>AmbariAuthentication</name><argument_list>(<argument><expr><name>authentication</name></expr></argument>, <argument><expr><name>DEFAULT_USER_ID</name></expr></argument>)</argument_list></call></expr>;
 
     <comment type="line">// When</comment>
     <expr><name><name>Collection</name><argument_list type="generic">&lt;<argument><name>?</name></argument>&gt;</argument_list></name>  <name>grantedAuthorities</name> <operator>=</operator>  <call><name><name>ambariAuthentication</name><operator>.</operator><name>getAuthorities</name></name><argument_list>()</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">265</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">267</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariAuthenticationTest</name> extends <name>EasyMockSupport</name> <block>{
     <comment type="line">// Given</comment>
     <expr><name>String</name> <name>passord</name> <operator>=</operator> <literal type="string">"password"</literal></expr>;
     <expr><name>Authentication</name> <name>authentication</name> <operator>=</operator> <operator>new</operator> <call><name>TestingAuthenticationToken</name><argument_list>(<argument><expr><literal type="string">"user"</literal></expr></argument>, <argument><expr><name>passord</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>Authentication</name> <name>ambariAuthentication</name> <operator>=</operator> <operator>new</operator> <call><name>AmbariAuthentication</name><argument_list>(<argument><expr><name>authentication</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>Authentication</name> <name>ambariAuthentication</name> <operator>=</operator> <operator>new</operator> <call><name>AmbariAuthentication</name><argument_list>(<argument><expr><name>authentication</name></expr></argument>, <argument><expr><name>DEFAULT_USER_ID</name></expr></argument>)</argument_list></call></expr>;
 
     <comment type="line">// When</comment>
     <expr><name>Object</name> <name>credentials</name> <operator>=</operator> <call><name><name>ambariAuthentication</name><operator>.</operator><name>getCredentials</name></name><argument_list>()</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">279</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">281</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariAuthenticationTest</name> extends <name>EasyMockSupport</name> <block>{
     <comment type="line">// Given</comment>
     <expr><name>TestingAuthenticationToken</name> <name>authentication</name> <operator>=</operator> <operator>new</operator> <call><name>TestingAuthenticationToken</name><argument_list>(<argument><expr><literal type="string">"user"</literal></expr></argument>, <argument><expr><literal type="string">"password"</literal></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>authentication</name><operator>.</operator><name>setDetails</name></name><argument_list>(<argument><expr><literal type="string">"test auth details"</literal></expr></argument>)</argument_list></call></expr>;
    <expr><name>Authentication</name> <name>ambariAuthentication</name> <operator>=</operator> <operator>new</operator> <call><name>AmbariAuthentication</name><argument_list>(<argument><expr><name>authentication</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>Authentication</name> <name>ambariAuthentication</name> <operator>=</operator> <operator>new</operator> <call><name>AmbariAuthentication</name><argument_list>(<argument><expr><name>authentication</name></expr></argument>, <argument><expr><name>DEFAULT_USER_ID</name></expr></argument>)</argument_list></call></expr>;
 
     <comment type="line">// When</comment>
     <expr><name>Object</name> <name>authDetails</name> <operator>=</operator> <call><name><name>ambariAuthentication</name><operator>.</operator><name>getDetails</name></name><argument_list>()</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">297</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">299</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariAuthenticationTest</name> extends <name>EasyMockSupport</name> <block>{
 
     <expr><call><name>replayAll</name><argument_list>()</argument_list></call></expr>;
 
    <expr><name>Authentication</name> <name>ambariAuthentication</name> <operator>=</operator> <operator>new</operator> <call><name>AmbariAuthentication</name><argument_list>(<argument><expr><name>testAuthentication</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>Authentication</name> <name>ambariAuthentication</name> <operator>=</operator> <operator>new</operator> <call><name>AmbariAuthentication</name><argument_list>(<argument><expr><name>testAuthentication</name></expr></argument>, <argument><expr><name>DEFAULT_USER_ID</name></expr></argument>)</argument_list></call></expr>;
 
     <comment type="line">// When</comment>
     <expr><call><name><name>ambariAuthentication</name><operator>.</operator><name>isAuthenticated</name></name><argument_list>()</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">314</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">316</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariAuthenticationTest</name> extends <name>EasyMockSupport</name> <block>{
 
     <expr><call><name>replayAll</name><argument_list>()</argument_list></call></expr>;
 
    <expr><name>Authentication</name> <name>ambariAuthentication</name> <operator>=</operator> <operator>new</operator> <call><name>AmbariAuthentication</name><argument_list>(<argument><expr><name>testAuthentication</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>Authentication</name> <name>ambariAuthentication</name> <operator>=</operator> <operator>new</operator> <call><name>AmbariAuthentication</name><argument_list>(<argument><expr><name>testAuthentication</name></expr></argument>, <argument><expr><name>DEFAULT_USER_ID</name></expr></argument>)</argument_list></call></expr>;
 
     <comment type="line">// When</comment>
     <expr><call><name><name>ambariAuthentication</name><operator>.</operator><name>setAuthenticated</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>AmbariLdapAuthenticationProviderForDNWithSpaceTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>AmbariLdapAuthenticationProviderForDNWithSpaceTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">65347057c4</literal><operator>..</operator><name>ece3dab536</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>AmbariLdapAuthenticationProviderForDNWithSpaceTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>AmbariLdapAuthenticationProviderForDNWithSpaceTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">72</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">72</literal></expr>,<expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariLdapAuthenticationProviderForDNWithSpaceTest</name> extends <name>AmbariLd</name>
   @<name>Inject</name>
   <specifier>private</specifier> <name>UserDAO</name> <name>userDAO</name></expr>;
   @<expr><name>Inject</name>
  <specifier>private</specifier> <name>Users</name> <name>users</name></expr>;
  @<expr><name>Inject</name>
   <name>Configuration</name> <name>configuration</name></expr>;
 
   @<expr><name>Before</name>
@@ <operator>-</operator><literal type="number">96</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">98</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariLdapAuthenticationProviderForDNWithSpaceTest</name> extends <name>AmbariLd</name>
   @<name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testAuthenticate</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><call><name>assertNull</name><argument_list>(<argument><expr><literal type="string">"User alread exists in DB"</literal></expr></argument>, <argument><expr><call><name><name>userDAO</name><operator>.</operator><name>findLdapUserByName</name></name><argument_list>(<argument><expr><literal type="string">"the allowedUser"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <expr><call><name><name>users</name><operator>.</operator><name>createUser</name></name><argument_list>(<argument><expr><literal type="string">"the allowedUser"</literal></expr></argument>, <argument><expr><literal type="string">"password"</literal></expr></argument>, <argument><expr><name><name>UserType</name><operator>.</operator><name>LDAP</name></name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;
     <expr><name>Authentication</name> <name>authentication</name> <operator>=</operator> <operator>new</operator> <call><name>UsernamePasswordAuthenticationToken</name><argument_list>(<argument><expr><literal type="string">"the allowedUser"</literal></expr></argument>, <argument><expr><literal type="string">"password"</literal></expr></argument>)</argument_list></call></expr>;
     <expr><name>Authentication</name> <name>result</name> <operator>=</operator> <call><name><name>authenticationProvider</name><operator>.</operator><name>authenticate</name></name><argument_list>(<argument><expr><name>authentication</name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>result</name><operator>.</operator><name>isAuthenticated</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>AmbariLdapAuthenticationProviderForDuplicateUserTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>AmbariLdapAuthenticationProviderForDuplicateUserTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">43f860e8f0</literal><operator>..</operator><literal type="number">02e4021abb</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>AmbariLdapAuthenticationProviderForDuplicateUserTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>AmbariLdapAuthenticationProviderForDuplicateUserTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">20</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">20</literal></expr>,<expr><literal type="number">7</literal> @@</expr> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>security</name><operator>.</operator><name>authorization</name></name>;</package></block></expr>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Properties</name></name>;</import></block></expr>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>configuration</name><operator>.</operator><name>Configuration</name></name>;</import></block></expr>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>dao</name><operator>.</operator><name>UserDAO</name></name>;</import></block></expr>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>directory</name><operator>.</operator><name>server</name><operator>.</operator><name>annotations</name><operator>.</operator><name>CreateLdapServer</name></name>;</import></block></expr>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>directory</name><operator>.</operator><name>server</name><operator>.</operator><name>annotations</name><operator>.</operator><name>CreateTransport</name></name>;</import></block></expr>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>directory</name><operator>.</operator><name>server</name><operator>.</operator><name>core</name><operator>.</operator><name>annotations</name><operator>.</operator><name>ApplyLdifFiles</name></name>;</import>
@@ <operator>-</operator><literal type="number">71</literal><operator>,</operator><literal type="number">6</literal> <operator>+</operator><literal type="number">72</literal><operator>,</operator><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariLdapAuthenticationProviderForDuplicateUserTest</name> extends <name>Ambari</name>
   @<call><name>Mock</name><argument_list>(<argument><expr><name>type</name> <operator>=</operator> <name><name>MockType</name><operator>.</operator><name>NICE</name></name></expr></argument>)</argument_list></call>
   <specifier>private</specifier> <name>AmbariLdapAuthoritiesPopulator</name> <name>authoritiesPopulator</name></block></expr>;
 
  @<expr><call><name>Mock</name><argument_list>(<argument><expr><name>type</name> <operator>=</operator> <name><name>MockType</name><operator>.</operator><name>NICE</name></name></expr></argument>)</argument_list></call>
  <specifier>private</specifier> <name>UserDAO</name> <name>userDAO</name></expr>;

   <expr><specifier>private</specifier> <name>AmbariLdapAuthenticationProvider</name> <name>authenticationProvider</name></expr>;
 
   @<expr><name>Before</name>
@@ <operator>-</operator><literal type="number">86</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">90</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariLdapAuthenticationProviderForDuplicateUserTest</name> extends <name>Ambari</name>
 
     <name>Configuration</name> <name>configuration</name> <operator>=</operator> <operator>new</operator> <call><name>Configuration</name><argument_list>(<argument><expr><name>properties</name></expr></argument>)</argument_list></call></expr>;
 
    <expr><name>authenticationProvider</name> <operator>=</operator> <operator>new</operator> <call><name>AmbariLdapAuthenticationProvider</name><argument_list>(<argument><expr><name>configuration</name></expr></argument>, <argument><expr><name>authoritiesPopulator</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>authenticationProvider</name> <operator>=</operator> <operator>new</operator> <call><name>AmbariLdapAuthenticationProvider</name><argument_list>(<argument><expr><name>configuration</name></expr></argument>, <argument><expr><name>authoritiesPopulator</name></expr></argument>, <argument><expr><name>userDAO</name></expr></argument>)</argument_list></call></expr>;
   }</block>
 
   @<name>Test</name>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>AmbariLdapAuthenticationProviderTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>AmbariLdapAuthenticationProviderTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">6d4ec609fe</literal><operator>..</operator><literal type="number">9392910095</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>AmbariLdapAuthenticationProviderTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>AmbariLdapAuthenticationProviderTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">28</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">28</literal></expr>,<expr><literal type="number">7</literal> @@</expr> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>audit</name><operator>.</operator><name>AuditLoggerModule</name></name>;</import></block></expr>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>configuration</name><operator>.</operator><name>Configuration</name></name>;</import></block></expr>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>GuiceJpaInitializer</name></name>;</import></block></expr>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>dao</name><operator>.</operator><name>UserDAO</name></name>;</import></block></expr></expr_stmt>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>UserEntity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>security</name><operator>.</operator><name>ClientSecurityType</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>directory</name><operator>.</operator><name>server</name><operator>.</operator><name>annotations</name><operator>.</operator><name>CreateLdapServer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>directory</name><operator>.</operator><name>server</name><operator>.</operator><name>annotations</name><operator>.</operator><name>CreateTransport</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">86</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">87</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariLdapAuthenticationProviderTest</name> extends <name>AmbariLdapAuthenticati</name>
   @<name>Inject</name>
   <specifier>private</specifier> <name>UserDAO</name> <name>userDAO</name></expr>;</expr_stmt>
   <decl_stmt><decl><annotation>@<name>Inject</name></annotation>
  <type><specifier>private</specifier> <name>Users</name></type> <name>users</name></decl>;</decl_stmt>
  <decl_stmt><decl><annotation>@<name>Inject</name></annotation>
   <type><name>Configuration</name></type> <name>configuration</name></decl>;</decl_stmt>
 
   <annotation>@<name>Before</name></annotation>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">115</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">118</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariLdapAuthenticationProviderTest</name> extends <name>AmbariLdapAuthenticati</name>
     <name>AmbariLdapAuthenticationProvider</name> <name>provider</name> <operator>=</operator> <call><name>createMockBuilder</name><argument_list>(<argument><expr><name><name>AmbariLdapAuthenticationProvider</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call>
             <operator>.</operator><call><name>addMockedMethod</name><argument_list>(<argument><expr><literal type="string">"loadLdapAuthenticationProvider"</literal></expr></argument>)</argument_list></call>
             <operator>.</operator><call><name>addMockedMethod</name><argument_list>(<argument><expr><literal type="string">"isLdapEnabled"</literal></expr></argument>)</argument_list></call>
            <operator>.</operator><call><name>withConstructor</name><argument_list>(<argument><expr><name>configuration</name></expr></argument>, <argument><expr><name>authoritiesPopulator</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>createMock</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><operator>.</operator><call><name>withConstructor</name><argument_list>(<argument><expr><name>configuration</name></expr></argument>, <argument><expr><name>authoritiesPopulator</name></expr></argument>, <argument><expr><name>userDAO</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>createMock</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <comment type="line">// Create the last thrown exception</comment>
     <decl_stmt><decl><type><name><name>org</name><operator>.</operator><name>springframework</name><operator>.</operator><name>security</name><operator>.</operator><name>core</name><operator>.</operator><name>AuthenticationException</name></name></type> <name>exception</name> <init>=
             <expr><call><name>createNiceMock</name><argument_list>(<argument><expr><name><name>org</name><operator>.</operator><name>springframework</name><operator>.</operator><name>security</name><operator>.</operator><name>core</name><operator>.</operator><name>AuthenticationException</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">151</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">154</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariLdapAuthenticationProviderTest</name> extends <name>AmbariLdapAuthenticati</name>
     <name>AmbariLdapAuthenticationProvider</name> <name>provider</name> <operator>=</operator> <call><name>createMockBuilder</name><argument_list>(<argument><expr><name><name>AmbariLdapAuthenticationProvider</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call>
             <operator>.</operator><call><name>addMockedMethod</name><argument_list>(<argument><expr><literal type="string">"loadLdapAuthenticationProvider"</literal></expr></argument>)</argument_list></call>
             <operator>.</operator><call><name>addMockedMethod</name><argument_list>(<argument><expr><literal type="string">"isLdapEnabled"</literal></expr></argument>)</argument_list></call>
            <operator>.</operator><call><name>withConstructor</name><argument_list>(<argument><expr><name>configuration</name></expr></argument>, <argument><expr><name>authoritiesPopulator</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>createMock</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><operator>.</operator><call><name>withConstructor</name><argument_list>(<argument><expr><name>configuration</name></expr></argument>, <argument><expr><name>authoritiesPopulator</name></expr></argument>, <argument><expr><name>userDAO</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>createMock</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <comment type="line">// Create the cause</comment>
     <decl_stmt><decl><type><name><name>org</name><operator>.</operator><name>springframework</name><operator>.</operator><name>ldap</name><operator>.</operator><name>AuthenticationException</name></name></type> <name>cause</name> <init>=
             <expr><call><name>createNiceMock</name><argument_list>(<argument><expr><name><name>org</name><operator>.</operator><name>springframework</name><operator>.</operator><name>ldap</name><operator>.</operator><name>AuthenticationException</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">181</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">184</literal></expr><operator>,</operator><expr><literal type="number">17</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariLdapAuthenticationProviderTest</name> extends <name>AmbariLdapAuthenticati</name>
   @<name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testAuthenticate</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><call><name>assertNull</name><argument_list>(<argument><expr><literal type="string">"User alread exists in DB"</literal></expr></argument>, <argument><expr><call><name><name>userDAO</name><operator>.</operator><name>findLdapUserByName</name></name><argument_list>(<argument><expr><literal type="string">"allowedUser"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>users</name><operator>.</operator><name>createUser</name></name><argument_list>(<argument><expr><literal type="string">"allowedUser"</literal></expr></argument>, <argument><expr><literal type="string">"password"</literal></expr></argument>, <argument><expr><name><name>UserType</name><operator>.</operator><name>LDAP</name></name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>UserEntity</name></type> <name>ldapUser</name> <init>= <expr><call><name><name>userDAO</name><operator>.</operator><name>findLdapUserByName</name></name><argument_list>(<argument><expr><literal type="string">"allowedUser"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>Authentication</name></type> <name>authentication</name> <init>= <expr><operator>new</operator> <call><name>UsernamePasswordAuthenticationToken</name><argument_list>(<argument><expr><literal type="string">"allowedUser"</literal></expr></argument>, <argument><expr><literal type="string">"password"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Authentication</name></type> <name>result</name> <init>= <expr><call><name><name>authenticationProvider</name><operator>.</operator><name>authenticate</name></name><argument_list>(<argument><expr><name>authentication</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    
    <decl_stmt><decl><type><name>AmbariAuthentication</name></type> <name>result</name> <init>= <expr><operator>(</operator><name>AmbariAuthentication</name><operator>)</operator> <call><name><name>authenticationProvider</name><operator>.</operator><name>authenticate</name></name><argument_list>(<argument><expr><name>authentication</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>result</name><operator>.</operator><name>isAuthenticated</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name><name>authenticationProvider</name><operator>.</operator><name>authenticate</name></name><argument_list>(<argument><expr><name>authentication</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>ldapUser</name><operator>.</operator><name>getUserId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>result</name><operator>.</operator><name>getUserId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name>result</name> <operator>=</operator> <operator>(</operator><name>AmbariAuthentication</name><operator>)</operator> <call><name><name>authenticationProvider</name><operator>.</operator><name>authenticate</name></name><argument_list>(<argument><expr><name>authentication</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>result</name><operator>.</operator><name>isAuthenticated</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>ldapUser</name><operator>.</operator><name>getUserId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>result</name><operator>.</operator><name>getUserId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   }</block></class>
 
   <annotation>@<name>Test</name></annotation>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">199</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">208</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariLdapAuthenticationProviderTest</name> extends <name>AmbariLdapAuthenticati</name>
   @<name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testAuthenticateLoginAlias</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <comment type="line">// Given</comment>
    <expr><call><name>assertNull</name><argument_list>(<argument><expr><literal type="string">"User already exists in DB"</literal></expr></argument>, <argument><expr><call><name><name>userDAO</name><operator>.</operator><name>findLdapUserByName</name></name><argument_list>(<argument><expr><literal type="string">"allowedUser"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertNull</name><argument_list>(<argument><expr><literal type="string">"User already exists in DB"</literal></expr></argument>, <argument><expr><call><name><name>userDAO</name><operator>.</operator><name>findLdapUserByName</name></name><argument_list>(<argument><expr><literal type="string">"allowedUser@ambari.apache.org"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>users</name><operator>.</operator><name>createUser</name></name><argument_list>(<argument><expr><literal type="string">"allowedUser@ambari.apache.org"</literal></expr></argument>, <argument><expr><literal type="string">"password"</literal></expr></argument>, <argument><expr><name><name>UserType</name><operator>.</operator><name>LDAP</name></name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>Authentication</name></type> <name>authentication</name> <init>= <expr><operator>new</operator> <call><name>UsernamePasswordAuthenticationToken</name><argument_list>(<argument><expr><literal type="string">"allowedUser@ambari.apache.org"</literal></expr></argument>, <argument><expr><literal type="string">"password"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>configuration</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><name><name>Configuration</name><operator>.</operator><name>LDAP_ALT_USER_SEARCH_ENABLED_KEY</name></name></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>AuthorizationHelperTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>AuthorizationHelperTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">56f224c242</literal><operator>..</operator><literal type="number">8409a6b372</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>AuthorizationHelperTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>AuthorizationHelperTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">185</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">185</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>AuthorizationHelperTest</name>  extends <name>EasyMockSupport</name> <block>{
     <expr><call><name>replay</name><argument_list>(<argument><expr><name>servletRequestAttributes</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><name>Authentication</name> <name>auth</name> <operator>=</operator> <operator>new</operator> <call><name>UsernamePasswordAuthenticationToken</name><argument_list>(<argument><expr><literal type="string">"user1@domain.com"</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>SecurityContextHolder</name><operator>.</operator><name>getContext</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>setAuthentication</name><argument_list>(<argument><expr><operator>new</operator> <call><name>AmbariAuthentication</name><argument_list>(<argument><expr><name>auth</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>SecurityContextHolder</name><operator>.</operator><name>getContext</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>setAuthentication</name><argument_list>(<argument><expr><operator>new</operator> <call><name>AmbariAuthentication</name><argument_list>(<argument><expr><name>auth</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
     <expr><name>String</name> <name>user</name> <operator>=</operator> <call><name><name>AuthorizationHelper</name><operator>.</operator><name>getAuthenticatedName</name></name><argument_list>()</argument_list></call></expr>;
     <expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="string">"user1"</literal></expr></argument>, <argument><expr><name>user</name></expr></argument>)</argument_list></call></expr>;
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>TestUsers</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>TestUsers</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>bcff6b4ea1</name><operator>..</operator><literal type="number">44fb73c264</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>TestUsers</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>TestUsers</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">495</literal></expr>,<expr><literal type="number">4</literal> <operator>+</operator><literal type="number">495</literal></expr>,<expr><literal type="number">15</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestUsers</name> <block>{
     <expr><call><name><name>Assert</name><operator>.</operator><name>assertTrue</name></name><argument_list>(<argument><expr><call><name><name>users</name><operator>.</operator><name>isUserCanBeRemoved</name></name><argument_list>(<argument><expr><call><name><name>userDAO</name><operator>.</operator><name>findUserByName</name></name><argument_list>(<argument><expr><literal type="string">"admin3"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
   }</block>
 
  @<name>Test</name>
  <specifier>public</specifier> <name>void</name> <call><name>testGetUserIfUnique</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><call><name><name>users</name><operator>.</operator><name>createUser</name></name><argument_list>(<argument><expr><literal type="string">"admin"</literal></expr></argument>, <argument><expr><literal type="string">"admin"</literal></expr></argument>, <argument><expr><name><name>UserType</name><operator>.</operator><name>LOCAL</name></name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;

    <expr><call><name><name>Assert</name><operator>.</operator><name>assertNotNull</name></name><argument_list>(<argument><expr><call><name><name>users</name><operator>.</operator><name>getUserIfUnique</name></name><argument_list>(<argument><expr><literal type="string">"admin"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;

    <expr><call><name><name>users</name><operator>.</operator><name>createUser</name></name><argument_list>(<argument><expr><literal type="string">"admin"</literal></expr></argument>, <argument><expr><literal type="string">"admin"</literal></expr></argument>, <argument><expr><name><name>UserType</name><operator>.</operator><name>LDAP</name></name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;

    <expr><call><name><name>Assert</name><operator>.</operator><name>assertNull</name></name><argument_list>(<argument><expr><call><name><name>users</name><operator>.</operator><name>getUserIfUnique</name></name><argument_list>(<argument><expr><literal type="string">"admin"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
  }</block></expr></expr_stmt>

 </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name>jwt</name><operator>/</operator><name><name>JwtAuthenticationFilterTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name>jwt</name><operator>/</operator><name><name>JwtAuthenticationFilterTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>a2730c4223</name><operator>..</operator><literal type="number">71bbf110c8</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name>jwt</name><operator>/</operator><name><name>JwtAuthenticationFilterTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name>jwt</name><operator>/</operator><name><name>JwtAuthenticationFilterTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">25</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">25</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>com</name><operator>.</operator><name>nimbusds</name><operator>.</operator><name>jose</name><operator>.</operator><name>crypto</name><operator>.</operator><name>RSASSASigner</name></name>;</import>
 <import>import <name><name>com</name><operator>.</operator><name>nimbusds</name><operator>.</operator><name>jwt</name><operator>.</operator><name>JWTClaimsSet</name></name>;</import>
 <import>import <name><name>com</name><operator>.</operator><name>nimbusds</name><operator>.</operator><name>jwt</name><operator>.</operator><name>SignedJWT</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>security</name><operator>.</operator><name>authorization</name><operator>.</operator><name>AmbariGrantedAuthority</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>security</name><operator>.</operator><name>authorization</name><operator>.</operator><name>AuthorizationHelper</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>security</name><operator>.</operator><name>authorization</name><operator>.</operator><name>User</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>security</name><operator>.</operator><name>authorization</name><operator>.</operator><name>UserType</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>security</name><operator>.</operator><name>authorization</name><operator>.</operator><name>Users</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">178</literal></expr><operator>,</operator><expr><literal type="number">16</literal> <operator>+</operator><literal type="number">179</literal></expr><operator>,</operator><expr><literal type="number">18</literal> @@ <specifier>public</specifier> <name>class</name> <name>JwtAuthenticationFilterTest</name> <block>{
     <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>user</name><operator>.</operator><name>getUserName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><literal type="string">"test-user"</literal></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>user</name><operator>.</operator><name>getUserType</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name><name>UserType</name><operator>.</operator><name>JWT</name></name></expr></argument>)</argument_list></call></expr>;
 
    <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>user</name><operator>.</operator><name>getUserId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;

     <expr><call><name>replay</name><argument_list>(<argument><expr><name>users</name></expr></argument>, <argument><expr><name>request</name></expr></argument>, <argument><expr><name>response</name></expr></argument>, <argument><expr><name>chain</name></expr></argument>, <argument><expr><name>filter</name></expr></argument>, <argument><expr><name>entryPoint</name></expr></argument>, <argument><expr><name>user</name></expr></argument>, <argument><expr><name>authority</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><call><name><name>filter</name><operator>.</operator><name>doFilter</name></name><argument_list>(<argument><expr><name>request</name></expr></argument>, <argument><expr><name>response</name></expr></argument>, <argument><expr><name>chain</name></expr></argument>)</argument_list></call></expr>;
 
    <expr><call><name>verify</name><argument_list>(<argument><expr><name>users</name></expr></argument>, <argument><expr><name>request</name></expr></argument>, <argument><expr><name>response</name></expr></argument>, <argument><expr><name>chain</name></expr></argument>, <argument><expr><name>filter</name></expr></argument>, <argument><expr><name>entryPoint</name></expr></argument>, <argument><expr><name>user</name></expr></argument>, <argument><expr><name>authority</name></expr></argument>)</argument_list></call></expr>;

     <expr><name>Authentication</name> <name>authentication</name> <operator>=</operator> <call><name><name>SecurityContextHolder</name><operator>.</operator><name>getContext</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAuthentication</name><argument_list>()</argument_list></call></expr>;
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1L</literal></expr></argument>, <argument><expr><call><name><name>AuthorizationHelper</name><operator>.</operator><name>getAuthenticatedId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><call><name><name>authentication</name><operator>.</operator><name>isAuthenticated</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>verify</name><argument_list>(<argument><expr><name>users</name></expr></argument>, <argument><expr><name>request</name></expr></argument>, <argument><expr><name>response</name></expr></argument>, <argument><expr><name>chain</name></expr></argument>, <argument><expr><name>filter</name></expr></argument>, <argument><expr><name>entryPoint</name></expr></argument>, <argument><expr><name>user</name></expr></argument>, <argument><expr><name>authority</name></expr></argument>)</argument_list></call></expr>;
 
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><call><name><name>authentication</name><operator>.</operator><name>isAuthenticated</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
   }</block>
 
   @<name>Test</name>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog240Test</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog240Test</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>dfb87b1cd9</name><operator>..</operator><name>d2bb499945</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog240Test</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog240Test</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">27</literal> @@</expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>upgrade</name></name>;</package>
 
 
<import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>EntityManager</name></name>;</import>
<import>import <name><name>junit</name><operator>.</operator><name>framework</name><operator>.</operator><name>Assert</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>anyObject</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>anyString</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>capture</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>createMock</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>createMockBuilder</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>createNiceMock</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>createStrictMock</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>eq</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>expect</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>expectLastCall</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>newCapture</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>replay</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>reset</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>verify</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertEquals</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertFalse</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertNull</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertTrue</name></name>;</import>

 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>reflect</name><operator>.</operator><name>Field</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>reflect</name><operator>.</operator><name>InvocationTargetException</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">52</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">73</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>dao</name><operator>.</operator><name>AlertDefinitionDAO</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>dao</name><operator>.</operator><name>ClusterDAO</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>dao</name><operator>.</operator><name>PrivilegeDAO</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>dao</name><operator>.</operator><name>RemoteAmbariClusterDAO</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>dao</name><operator>.</operator><name>RequestScheduleDAO</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>dao</name><operator>.</operator><name>StackDAO</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>dao</name><operator>.</operator><name>UserDAO</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>dao</name><operator>.</operator><name>ViewInstanceDAO</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">62</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">84</literal></expr><operator>,</operator><expr><literal type="number">15</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>PermissionEntity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>PrincipalEntity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>PrivilegeEntity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>RemoteAmbariClusterEntity</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>RequestScheduleEntity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>ResourceEntity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>ResourceTypeEntity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>UserEntity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>ViewInstanceEntity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>WidgetEntity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>security</name><operator>.</operator><name>authorization</name><operator>.</operator><name>ResourceType</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>security</name><operator>.</operator><name>authorization</name><operator>.</operator><name>User</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>security</name><operator>.</operator><name>authorization</name><operator>.</operator><name>Users</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>stack</name><operator>.</operator><name>StackManagerFactory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>AlertFirmness</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>Cluster</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">108</literal></expr><operator>,</operator><expr><literal type="number">25</literal> <operator>+</operator><literal type="number">133</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>Injector</name></name>;</import>
 <import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>Module</name></name>;</import>
 <import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>Provider</name></name>;</import>
 
<import>import <name><name>junit</name><operator>.</operator><name>framework</name><operator>.</operator><name>Assert</name></name>;</import>

<import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>anyObject</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>anyString</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>capture</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>createMockBuilder</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>createNiceMock</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>createStrictMock</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>eq</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>expect</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>expectLastCall</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>newCapture</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>replay</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>reset</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>verify</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertEquals</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertFalse</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertNull</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertTrue</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>springframework</name><operator>.</operator><name>security</name><operator>.</operator><name>crypto</name><operator>.</operator><name>password</name><operator>.</operator><name>PasswordEncoder</name></name>;</import>
 
 <class><specifier>public</specifier> class <name>UpgradeCatalog240Test</name> <block>{
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>CAPACITY_SCHEDULER_CONFIG_TYPE</name> <init>= <expr><literal type="string">"capacity-scheduler"</literal></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">192</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">199</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>UpgradeCatalog240Test</name> <block>{
     <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>dbAccessor</name><operator>.</operator><name>getConnection</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>connection</name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>dbAccessor</name><operator>.</operator><name>createTable</name></name><argument_list>(<argument><expr><call><name>eq</name><argument_list>(<argument><expr><literal type="string">"extensionlink"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>capture</name><argument_list>(<argument><expr><name>capturedExtensionLinkColumns</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>eq</name><argument_list>(<argument><expr><literal type="string">"link_id"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>dbAccessor</name><operator>.</operator><name>addUniqueConstraint</name></name><argument_list>(<argument><expr><literal type="string">"extensionlink"</literal></expr></argument>, <argument><expr><literal type="string">"UQ_extension_link"</literal></expr></argument>, <argument><expr><literal type="string">"stack_id"</literal></expr></argument>, <argument><expr><literal type="string">"extension_id"</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>dbAccessor</name><operator>.</operator><name>addFKConstraint</name></name><argument_list>(<argument><expr><literal type="string">"extensionlink"</literal></expr></argument>, <argument><expr><literal type="string">"FK_extensionlink_extension_id"</literal></expr></argument>, <argument><expr><literal type="string">"extension_id"</literal></expr></argument>, <argument><expr><literal type="string">"extension"</literal></expr></argument>, 
    <argument><expr><call><name><name>dbAccessor</name><operator>.</operator><name>addFKConstraint</name></name><argument_list>(<argument><expr><literal type="string">"extensionlink"</literal></expr></argument>, <argument><expr><literal type="string">"FK_extensionlink_extension_id"</literal></expr></argument>, <argument><expr><literal type="string">"extension_id"</literal></expr></argument>, <argument><expr><literal type="string">"extension"</literal></expr></argument>,
                                <argument><expr><literal type="string">"extension_id"</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></argument>;
     <argument><expr><call><name><name>dbAccessor</name><operator>.</operator><name>addFKConstraint</name></name><argument_list>(<argument><expr><literal type="string">"extensionlink"</literal></expr></argument>, <argument><expr><literal type="string">"FK_extensionlink_stack_id"</literal></expr></argument>, <argument><expr><literal type="string">"stack_id"</literal></expr></argument>, <argument><expr><literal type="string">"stack"</literal></expr></argument>,
                                <argument><expr><literal type="string">"stack_id"</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></argument>;
<argument>@@ <expr><operator>-</operator><literal type="number">328</literal></expr></argument>,<argument><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">335</literal></expr></argument>,<argument><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>UpgradeCatalog240Test</name> <block>{
         <expr><call><name><name>binder</name><operator>.</operator><name>bind</name></name><argument_list>(<argument><expr><name><name>DBAccessor</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><name>dbAccessor</name></expr></argument>)</argument_list></call></expr>;
         <expr><call><name><name>binder</name><operator>.</operator><name>bind</name></name><argument_list>(<argument><expr><name><name>OsFamily</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><call><name>createNiceMock</name><argument_list>(<argument><expr><name><name>OsFamily</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name><name>binder</name><operator>.</operator><name>bind</name></name><argument_list>(<argument><expr><name><name>EntityManager</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><name>entityManager</name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>binder</name><operator>.</operator><name>bind</name></name><argument_list>(<argument><expr><name><name>PasswordEncoder</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><call><name>createNiceMock</name><argument_list>(<argument><expr><name><name>PasswordEncoder</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
       }</block></expr></argument>
       }</argument_list></call></expr>;
 
@@ <expr><operator>-</operator><literal type="number">566</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">574</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>UpgradeCatalog240Test</name> <block>{
     <expr><name>Method</name> <name>removeAuthorizations</name> <operator>=</operator> <call><name><name>UpgradeCatalog240</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getDeclaredMethod</name></name></name><argument_list>(<argument><expr><literal type="string">"removeAuthorizations"</literal></expr></argument>)</argument_list></call></expr>;
     <expr><name>Method</name> <name>addConnectionTimeoutParamForWebAndMetricAlerts</name> <operator>=</operator> <call><name><name>AbstractUpgradeCatalog</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getDeclaredMethod</name></name></name><argument_list>(<argument><expr><literal type="string">"addConnectionTimeoutParamForWebAndMetricAlerts"</literal></expr></argument>)</argument_list></call></expr>;
     <expr><name>Method</name> <name>addSliderClientConfig</name> <operator>=</operator> <call><name><name>UpgradeCatalog240</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getDeclaredMethod</name></name></name><argument_list>(<argument><expr><literal type="string">"addSliderClientConfig"</literal></expr></argument>)</argument_list></call></expr>;
    <expr><name>Method</name> <name>updateRequestScheduleEntityUserIds</name> <operator>=</operator> <call><name><name>UpgradeCatalog240</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getDeclaredMethod</name></name></name><argument_list>(<argument><expr><literal type="string">"updateRequestScheduleEntityUserIds"</literal></expr></argument>)</argument_list></call></expr>;
 
     <expr><name><name>Capture</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name> <name>capturedStatements</name> <operator>=</operator> <call><name>newCapture</name><argument_list>(<argument><expr><name><name>CaptureType</name><operator>.</operator><name>ALL</name></name></expr></argument>)</argument_list></call></expr>;
 
@@ <expr><operator>-</operator><literal type="number">608</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">617</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>UpgradeCatalog240Test</name> <block>{
             <expr><operator>.</operator><call><name>addMockedMethod</name><argument_list>(<argument><expr><name>addConnectionTimeoutParamForWebAndMetricAlerts</name></expr></argument>)</argument_list></call>
             <operator>.</operator><call><name>addMockedMethod</name><argument_list>(<argument><expr><name>updateHBaseConfigs</name></expr></argument>)</argument_list></call>
             <operator>.</operator><call><name>addMockedMethod</name><argument_list>(<argument><expr><name>addSliderClientConfig</name></expr></argument>)</argument_list></call>
            <operator>.</operator><call><name>addMockedMethod</name><argument_list>(<argument><expr><name>updateRequestScheduleEntityUserIds</name></expr></argument>)</argument_list></call>
             <operator>.</operator><call><name>createMock</name><argument_list>()</argument_list></call></expr>;
 
     <expr><name>Field</name> <name>field</name> <operator>=</operator> <call><name><name>AbstractUpgradeCatalog</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getDeclaredField</name></name></name><argument_list>(<argument><expr><literal type="string">"dbAccessor"</literal></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">645</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">655</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>UpgradeCatalog240Test</name> <block>{
     <expr><call><name><name>upgradeCatalog240</name><operator>.</operator><name>addConnectionTimeoutParamForWebAndMetricAlerts</name></name><argument_list>()</argument_list></call></expr>;
     <expr><call><name><name>upgradeCatalog240</name><operator>.</operator><name>updateHBaseConfigs</name></name><argument_list>()</argument_list></call></expr>;
     <expr><call><name><name>upgradeCatalog240</name><operator>.</operator><name>addSliderClientConfig</name></name><argument_list>()</argument_list></call></expr>;
    <expr><call><name><name>upgradeCatalog240</name><operator>.</operator><name>updateRequestScheduleEntityUserIds</name></name><argument_list>()</argument_list></call></expr>;
 
     <expr><call><name>replay</name><argument_list>(<argument><expr><name>upgradeCatalog240</name></expr></argument>, <argument><expr><name>dbAccessor</name></expr></argument>)</argument_list></call></expr>;
 
@@ <expr><operator>-</operator><literal type="number">698</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">709</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>UpgradeCatalog240Test</name> <block>{
         <expr><call><name><name>binder</name><operator>.</operator><name>bind</name></name><argument_list>(<argument><expr><name><name>EntityManager</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><name>entityManager</name></expr></argument>)</argument_list></call></expr>;
         <expr><call><name><name>binder</name><operator>.</operator><name>bind</name></name><argument_list>(<argument><expr><name><name>DBAccessor</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><call><name>createNiceMock</name><argument_list>(<argument><expr><name><name>DBAccessor</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name><name>binder</name><operator>.</operator><name>bind</name></name><argument_list>(<argument><expr><name><name>OsFamily</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><call><name>createNiceMock</name><argument_list>(<argument><expr><name><name>OsFamily</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>binder</name><operator>.</operator><name>bind</name></name><argument_list>(<argument><expr><name><name>PasswordEncoder</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><call><name>createNiceMock</name><argument_list>(<argument><expr><name><name>PasswordEncoder</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
       }</block></expr>
     }</block></expr>)</block></expr>;
 
@@ <expr><operator>-</operator><literal type="number">753</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">765</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>UpgradeCatalog240Test</name> <block>{
         <expr><call><name><name>binder</name><operator>.</operator><name>bind</name></name><argument_list>(<argument><expr><name><name>EntityManager</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><name>entityManager</name></expr></argument>)</argument_list></call></expr>;
         <expr><call><name><name>binder</name><operator>.</operator><name>bind</name></name><argument_list>(<argument><expr><name><name>DBAccessor</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><call><name>createNiceMock</name><argument_list>(<argument><expr><name><name>DBAccessor</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name><name>binder</name><operator>.</operator><name>bind</name></name><argument_list>(<argument><expr><name><name>OsFamily</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><call><name>createNiceMock</name><argument_list>(<argument><expr><name><name>OsFamily</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>binder</name><operator>.</operator><name>bind</name></name><argument_list>(<argument><expr><name><name>PasswordEncoder</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><call><name>createNiceMock</name><argument_list>(<argument><expr><name><name>PasswordEncoder</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
       }</block></expr>
     }</block></expr>)</block></expr>;</expr_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1447</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">1460</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>UpgradeCatalog240Test</name> <block>{
         <expr><call><name>bind</name><argument_list>(<argument><expr><name><name>DBAccessor</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><name>dbAccessor</name></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>bind</name><argument_list>(<argument><expr><name><name>OsFamily</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><name>osFamily</name></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>bind</name><argument_list>(<argument><expr><name><name>EntityManager</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><name>entityManager</name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>bind</name><argument_list>(<argument><expr><name><name>PasswordEncoder</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><call><name>createNiceMock</name><argument_list>(<argument><expr><name><name>PasswordEncoder</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
       }</block></expr></expr_stmt>
     }</block></class>)<empty_stmt>;</empty_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1593</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">1607</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>UpgradeCatalog240Test</name> <block>{
         <expr><call><name>bind</name><argument_list>(<argument><expr><name><name>DBAccessor</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><name>dbAccessor</name></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>bind</name><argument_list>(<argument><expr><name><name>OsFamily</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><name>osFamily</name></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>bind</name><argument_list>(<argument><expr><name><name>EntityManager</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><name>entityManager</name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>bind</name><argument_list>(<argument><expr><name><name>PasswordEncoder</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><call><name>createNiceMock</name><argument_list>(<argument><expr><name><name>PasswordEncoder</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
       }</block></expr></expr_stmt>
     })<empty_stmt>;</empty_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1647</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">1662</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>UpgradeCatalog240Test</name> <block>{
         <expr><call><name>bind</name><argument_list>(<argument><expr><name><name>AlertDefinitionDAO</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><name>mockAlertDefinitionDAO</name></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>bind</name><argument_list>(<argument><expr><name><name>DBAccessor</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><call><name>createNiceMock</name><argument_list>(<argument><expr><name><name>DBAccessor</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>bind</name><argument_list>(<argument><expr><name><name>OsFamily</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><call><name>createNiceMock</name><argument_list>(<argument><expr><name><name>OsFamily</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>bind</name><argument_list>(<argument><expr><name><name>PasswordEncoder</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><call><name>createNiceMock</name><argument_list>(<argument><expr><name><name>PasswordEncoder</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
       }</block></expr></expr_stmt>
     })<empty_stmt>;</empty_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1854</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">1870</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>UpgradeCatalog240Test</name> <block>{
         <expr><call><name>bind</name><argument_list>(<argument><expr><name><name>ClusterDAO</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><name>clusterDAO</name></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>bind</name><argument_list>(<argument><expr><name><name>DBAccessor</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><call><name><name>ems</name><operator>.</operator><name>createNiceMock</name></name><argument_list>(<argument><expr><name><name>DBAccessor</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>bind</name><argument_list>(<argument><expr><name><name>OsFamily</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><call><name><name>ems</name><operator>.</operator><name>createNiceMock</name></name><argument_list>(<argument><expr><name><name>OsFamily</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>bind</name><argument_list>(<argument><expr><name><name>PasswordEncoder</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><call><name>createNiceMock</name><argument_list>(<argument><expr><name><name>PasswordEncoder</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
       }</block></expr></expr_stmt>
     })<empty_stmt>;</empty_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1911</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">1928</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>UpgradeCatalog240Test</name> <block>{
         <expr><call><name>bind</name><argument_list>(<argument><expr><name><name>WidgetDAO</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><name>widgetDAO</name></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>bind</name><argument_list>(<argument><expr><name><name>StackManagerFactory</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><call><name>createNiceMock</name><argument_list>(<argument><expr><name><name>StackManagerFactory</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>bind</name><argument_list>(<argument><expr><name><name>AmbariMetaInfo</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><name>metaInfo</name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>bind</name><argument_list>(<argument><expr><name><name>PasswordEncoder</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><call><name>createNiceMock</name><argument_list>(<argument><expr><name><name>PasswordEncoder</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
       }</block></expr></expr_stmt>
     })<empty_stmt>;</empty_stmt>
     <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>controller</name><operator>.</operator><name>getClusters</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>clusters</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>anyTimes</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1967</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">1985</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>UpgradeCatalog240Test</name> <block>{
         <expr><call><name>bind</name><argument_list>(<argument><expr><name><name>OsFamily</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><call><name>createNiceMock</name><argument_list>(<argument><expr><name><name>OsFamily</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>bind</name><argument_list>(<argument><expr><name><name>RemoteAmbariClusterDAO</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><name>clusterDAO</name></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>bind</name><argument_list>(<argument><expr><name><name>ViewInstanceDAO</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><name>instanceDAO</name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>bind</name><argument_list>(<argument><expr><name><name>PasswordEncoder</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><call><name>createNiceMock</name><argument_list>(<argument><expr><name><name>PasswordEncoder</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
       }</block></expr></expr_stmt>
     })<empty_stmt>;</empty_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">2117</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">2136</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>UpgradeCatalog240Test</name> <block>{
         <expr><call><name>bind</name><argument_list>(<argument><expr><name><name>AlertDefinitionDAO</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><name>mockAlertDefinitionDAO</name></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>bind</name><argument_list>(<argument><expr><name><name>DBAccessor</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><call><name>createNiceMock</name><argument_list>(<argument><expr><name><name>DBAccessor</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>bind</name><argument_list>(<argument><expr><name><name>OsFamily</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><call><name>createNiceMock</name><argument_list>(<argument><expr><name><name>OsFamily</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>bind</name><argument_list>(<argument><expr><name><name>PasswordEncoder</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><call><name>createNiceMock</name><argument_list>(<argument><expr><name><name>PasswordEncoder</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
       }</block></expr></expr_stmt>
     })<empty_stmt>;</empty_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">2239</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">2259</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>UpgradeCatalog240Test</name> <block>{
       @<expr><name>Override</name>
       <specifier>protected</specifier> <name>void</name> <call><name>configure</name><argument_list>()</argument_list></call> <block>{
         <expr><call><name>bind</name><argument_list>(<argument><expr><name><name>AmbariManagementController</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><name>mockAmbariManagementController</name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>bind</name><argument_list>(<argument><expr><name><name>PasswordEncoder</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><call><name>createMock</name><argument_list>(<argument><expr><name><name>PasswordEncoder</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>bind</name><argument_list>(<argument><expr><name><name>Clusters</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><name>mockClusters</name></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>bind</name><argument_list>(<argument><expr><name><name>EntityManager</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><name>entityManager</name></expr></argument>)</argument_list></call></expr>;
         <expr><call><name>bind</name><argument_list>(<argument><expr><name><name>DBAccessor</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><call><name>createNiceMock</name><argument_list>(<argument><expr><name><name>DBAccessor</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">2267</literal></expr>,<expr><literal type="number">5</literal> <operator>+</operator><literal type="number">2288</literal></expr>,<expr><literal type="number">84</literal> @@ <specifier>public</specifier> <name>class</name> <name>UpgradeCatalog240Test</name> <block>{
   }</block>
 
 

  @<name>Test</name>
  <specifier>public</specifier> <name>void</name> <call><name>testUpdateRequestScheduleEntityUserIds</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name><block>{
    <expr><name>final</name> <name>RequestScheduleDAO</name> <name>requestScheduleDAO</name> <operator>=</operator> <call><name>createMock</name><argument_list>(<argument><expr><name><name>RequestScheduleDAO</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <expr><name>final</name> <name>Users</name> <name>users</name> <operator>=</operator> <call><name>createMock</name><argument_list>(<argument><expr><name><name>Users</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;

    <expr><name>RequestScheduleEntity</name> <name>requestScheduleEntity</name> <operator>=</operator> <operator>new</operator> <call><name>RequestScheduleEntity</name><argument_list>()</argument_list></call></expr>;
    <expr><call><name><name>requestScheduleEntity</name><operator>.</operator><name>setCreateUser</name></name><argument_list>(<argument><expr><literal type="string">"createdUser"</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>requestScheduleEntity</name><operator>.</operator><name>setClusterId</name></name><argument_list>(<argument><expr><literal type="number">1L</literal></expr></argument>)</argument_list></call></expr>;

    <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>requestScheduleDAO</name><operator>.</operator><name>findAll</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><call><name><name>Collections</name><operator>.</operator><name>singletonList</name></name><argument_list>(<argument><expr><name>requestScheduleEntity</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>once</name><argument_list>()</argument_list></call></expr>;

    <expr><name>UserEntity</name> <name>userEntity</name> <operator>=</operator> <operator>new</operator> <call><name>UserEntity</name><argument_list>()</argument_list></call></expr>;
    <expr><call><name><name>userEntity</name><operator>.</operator><name>setUserName</name></name><argument_list>(<argument><expr><literal type="string">"createdUser"</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>userEntity</name><operator>.</operator><name>setUserId</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>userEntity</name><operator>.</operator><name>setPrincipal</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>PrincipalEntity</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><name>User</name> <name>user</name> <operator>=</operator> <operator>new</operator> <call><name>User</name><argument_list>(<argument><expr><name>userEntity</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>users</name><operator>.</operator><name>getUserIfUnique</name></name><argument_list>(<argument><expr><literal type="string">"createdUser"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>user</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>once</name><argument_list>()</argument_list></call></expr>;

    <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>requestScheduleDAO</name><operator>.</operator><name>merge</name></name><argument_list>(<argument><expr><name>requestScheduleEntity</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>requestScheduleEntity</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>once</name><argument_list>()</argument_list></call></expr>;

    <expr><name>final</name> <name>Injector</name> <name>injector</name> <operator>=</operator> <call><name><name>Guice</name><operator>.</operator><name>createInjector</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>AbstractModule</name></super><argument_list>()</argument_list> <block>{
      <function><annotation>@<name>Override</name></annotation>
      <type><specifier>protected</specifier> <name>void</name></type> <name>configure</name><parameter_list>()</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name>bind</name><argument_list>(<argument><expr><name><name>RequestScheduleDAO</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><name>requestScheduleDAO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>bind</name><argument_list>(<argument><expr><name><name>Users</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><name>users</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>bind</name><argument_list>(<argument><expr><name><name>PasswordEncoder</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><call><name>createMock</name><argument_list>(<argument><expr><name><name>PasswordEncoder</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>bind</name><argument_list>(<argument><expr><name><name>DBAccessor</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><call><name>createMock</name><argument_list>(<argument><expr><name><name>DBAccessor</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>bind</name><argument_list>(<argument><expr><name><name>OsFamily</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><call><name>createNiceMock</name><argument_list>(<argument><expr><name><name>OsFamily</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>bind</name><argument_list>(<argument><expr><name><name>EntityManager</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><name>entityManager</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt/>}</block_content>
    }</block></function>)</block><empty_stmt>;</empty_stmt></class></expr></argument></argument_list></call></expr>

    <name>UpgradeCatalog240</name> <name>upgradeCatalog240</name> <operator>=</operator> <operator>new</operator> <call><name>UpgradeCatalog240</name><argument_list>(<argument><expr><name>injector</name></expr></argument>)</argument_list></call></block></expr>;

    <expr><call><name>replay</name><argument_list>(<argument><expr><name>requestScheduleDAO</name></expr></argument>, <argument><expr><name>users</name></expr></argument>)</argument_list></call></expr>;

    <expr><call><name><name>upgradeCatalog240</name><operator>.</operator><name>updateRequestScheduleEntityUserIds</name></name><argument_list>()</argument_list></call></expr>;

    <expr><call><name>verify</name><argument_list>(<argument><expr><name>requestScheduleDAO</name></expr></argument>, <argument><expr><name>users</name></expr></argument>)</argument_list></call></expr>;

    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>Integer</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>requestScheduleEntity</name><operator>.</operator><name>getAuthenticatedUserId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
  }</block>

  @<name>Test</name>
  <specifier>public</specifier> <name>void</name> <call><name>testUpdateRequestScheduleEntityWithUnuniqueUser</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name><block>{
    <expr><name>final</name> <name>RequestScheduleDAO</name> <name>requestScheduleDAO</name> <operator>=</operator> <call><name>createMock</name><argument_list>(<argument><expr><name><name>RequestScheduleDAO</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>Users</name></type> <name>users</name> <init>= <expr><call><name>createMock</name><argument_list>(<argument><expr><name><name>Users</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>RequestScheduleEntity</name></type> <name>requestScheduleEntity</name> <init>= <expr><operator>new</operator> <call><name>RequestScheduleEntity</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>requestScheduleEntity</name><operator>.</operator><name>setCreateUser</name></name><argument_list>(<argument><expr><literal type="string">"createdUser"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>requestScheduleEntity</name><operator>.</operator><name>setClusterId</name></name><argument_list>(<argument><expr><literal type="number">1L</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>requestScheduleDAO</name><operator>.</operator><name>findAll</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><call><name><name>Collections</name><operator>.</operator><name>singletonList</name></name><argument_list>(<argument><expr><name>requestScheduleEntity</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>once</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>users</name><operator>.</operator><name>getUserIfUnique</name></name><argument_list>(<argument><expr><literal type="string">"createdUser"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>once</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><specifier>final</specifier> <name>Injector</name></type> <name>injector</name> <init>= <expr><call><name><name>Guice</name><operator>.</operator><name>createInjector</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>AbstractModule</name></super><argument_list>()</argument_list> <block>{
      <function><annotation>@<name>Override</name></annotation>
      <type><specifier>protected</specifier> <name>void</name></type> <name>configure</name><parameter_list>()</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name>bind</name><argument_list>(<argument><expr><name><name>RequestScheduleDAO</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><name>requestScheduleDAO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>bind</name><argument_list>(<argument><expr><name><name>Users</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><name>users</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>bind</name><argument_list>(<argument><expr><name><name>PasswordEncoder</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><call><name>createMock</name><argument_list>(<argument><expr><name><name>PasswordEncoder</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>bind</name><argument_list>(<argument><expr><name><name>DBAccessor</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><call><name>createMock</name><argument_list>(<argument><expr><name><name>DBAccessor</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>bind</name><argument_list>(<argument><expr><name><name>OsFamily</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><call><name>createNiceMock</name><argument_list>(<argument><expr><name><name>OsFamily</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>bind</name><argument_list>(<argument><expr><name><name>EntityManager</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><name>entityManager</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></function>
    }</block></class></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>UpgradeCatalog240</name></type> <name>upgradeCatalog240</name> <init>= <expr><operator>new</operator> <call><name>UpgradeCatalog240</name><argument_list>(<argument><expr><name>injector</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name>replay</name><argument_list>(<argument><expr><name>requestScheduleDAO</name></expr></argument>, <argument><expr><name>users</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>upgradeCatalog240</name><operator>.</operator><name>updateRequestScheduleEntityUserIds</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>verify</name><argument_list>(<argument><expr><name>requestScheduleDAO</name></expr></argument>, <argument><expr><name>users</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><call><name><name>requestScheduleEntity</name><operator>.</operator><name>getAuthenticatedUserId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }
 }
 
<expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr>

</unit>
