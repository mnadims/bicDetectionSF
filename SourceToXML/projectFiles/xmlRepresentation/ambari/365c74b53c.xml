<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/ambari/365c74b53c.java"><expr_stmt><expr><name>From</name> <literal type="number">365c74b53c653a96fda189846ad5e07ab268e0fc</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Jonathan</name> <name><name>Hurley</name> <argument_list type="generic">&lt;<argument><name>jhurley</name><annotation>@<name><name>hortonworks</name><operator>.</operator><name>com</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Mon</name></expr><operator>,</operator> <expr><literal type="number">29</literal> <name>Feb</name> <literal type="number">2016</literal> <literal type="number">12</literal><operator>:</operator><literal type="number">56</literal><operator>:</operator><literal type="number">35</literal> <operator>-</operator><literal type="number">0500</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>AMBARI</name><operator>-</operator><literal type="number">15173</literal> <operator>-</operator> <name>Express</name> <name>Upgrade</name> <name>Stuck</name> <name>At</name> <name>Manual</name> <name>Prompt</name> <name>Due</name> <name>To</name>
 <name>HRC</name> <name>Status</name> <name>Calculation</name> <name>Cache</name> <call><name>Problem</name> <argument_list>(<argument><expr><name>part3</name></expr></argument>)</argument_list></call> <operator>(</operator><name>jonathanhurley</name><operator>)</operator>

<operator>--</operator>
 <operator>...</operator><operator>/</operator><name>actionmanager</name><operator>/</operator><name><name>ActionDBAccessorImpl</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">7</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>orm</name><operator>/</operator><name><name>AmbariJpaLocalTxnInterceptor</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">5</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name><name>TransactionalLocks</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">40</literal> <operator>++</operator><operator>++</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>dao</name><operator>/</operator><name><name>HostRoleCommandDAO</name><operator>.</operator><name>java</name></name>    <operator>|</operator> <literal type="number">102</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>ambari</name><operator>/</operator><name>annotations</name><operator>/</operator><name><name>LockAreaTest</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">78</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator>
 <operator>...</operator><operator>/</operator><name><name>TransactionalLockInterceptorTest</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">80</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>annotations</name><operator>/</operator><name><name>TransactionalLockTest</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">5</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>internal</name><operator>/</operator><name><name>AlertResourceProviderTest</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">54</literal> <operator>++</operator><operator>++</operator><operator>+</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <literal type="number">8</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">280</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">91</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>annotations</name><operator>/</operator><name><name>LockAreaTest</name><operator>.</operator><name>java</name></name>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>actionmanager</name><operator>/</operator><name><name>ActionDBAccessorImpl</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>actionmanager</name><operator>/</operator><name><name>ActionDBAccessorImpl</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">003e2e6b1b</literal><operator>..</operator><literal type="number">429f573a36</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>actionmanager</name><operator>/</operator><name><name>ActionDBAccessorImpl</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>actionmanager</name><operator>/</operator><name><name>ActionDBAccessorImpl</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">735</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">735</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>ActionDBAccessorImpl</name> implements <name>ActionDBAccessor</name> <block>{
 
   @<expr><name>Override</name>
   <specifier>public</specifier> <name>void</name> <call><name>resubmitTasks</name><argument_list>(<argument><expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>&gt;</argument_list></name> <name>taskIds</name></expr></argument>)</argument_list></call> <block>{
    <expr><call><name><name>hostRoleCommandCache</name><operator>.</operator><name>invalidateAll</name></name><argument_list>(<argument><expr><name>taskIds</name></expr></argument>)</argument_list></call></expr>;

     <expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>HostRoleCommandEntity</name></argument>&gt;</argument_list></name> <name>tasks</name> <operator>=</operator> <call><name><name>hostRoleCommandDAO</name><operator>.</operator><name>findByPKs</name></name><argument_list>(<argument><expr><name>taskIds</name></expr></argument>)</argument_list></call></expr>;
     <for>for <control>(<init><decl><type><name>HostRoleCommandEntity</name></type> <name>task</name> <range>: <expr><name>tasks</name></expr></range></decl></init>)</control> <block>{<block_content>
       <expr_stmt><expr><call><name><name>task</name><operator>.</operator><name>setStatus</name></name><argument_list>(<argument><expr><name><name>HostRoleStatus</name><operator>.</operator><name>PENDING</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">748</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">746</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>ActionDBAccessorImpl</name> implements <name>ActionDBAccessor</name> <block>{
     <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>tasks</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><call><name><name>hostRoleCommandDAO</name><operator>.</operator><name>mergeAll</name></name><argument_list>(<argument><expr><name>tasks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt/></block_content></block></if></if_stmt>}</block>

    <call><name><name>hostRoleCommandCache</name><operator>.</operator><name>invalidateAll</name></name><argument_list>(<argument><expr><name>taskIds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   <expr_stmt/></block_content></block></for>}</block>
 
   <comment type="block" format="javadoc">/**
@@ -756,8 +756,7 @@ public class ActionDBAccessorImpl implements ActionDBAccessor {
    */</comment>
   @<name>Subscribe</name>
   <specifier>public</specifier> <name>void</name> <call><name>invalidateCommandCacheOnHostRemove</name><argument_list>(<argument><expr><name>HostRemovedEvent</name> <name>event</name></expr></argument>)</argument_list></call> <block>{
    <expr><call><name><name>LOG</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Invalidating command cache on host delete event."</literal></expr></argument> )</argument_list></call></expr>;
    <expr><call><name><name>LOG</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"HostRemovedEvent =&gt; "</literal> <operator>+</operator> <name>event</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>LOG</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Invalidating HRC cache after receiveing {}"</literal></expr></argument>, <argument><expr><name>event</name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>hostRoleCommandCache</name><operator>.</operator><name>invalidateAll</name></name><argument_list>()</argument_list></call></expr>;
   }</block></expr>
 }</block>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name><name>AmbariJpaLocalTxnInterceptor</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name><name>AmbariJpaLocalTxnInterceptor</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>b5442c2d42</name><operator>..</operator><name>d7ba4631da</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name><name>AmbariJpaLocalTxnInterceptor</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name><name>AmbariJpaLocalTxnInterceptor</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">276</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">276</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariJpaLocalTxnInterceptor</name> implements <name>MethodInterceptor</name> <block>{
       <return>return;</return>
     }</block></expr></expr_stmt>
 
    <comment type="line">// no need to lock again</comment>
    <if_stmt><if>if <condition>(<expr><call><name><name>s_transactionalLocks</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>contains</name><argument_list>(<argument><expr><name>annotation</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
      <return>return;</return>
    </block_content>}</block></if></if_stmt>

     <comment type="line">// there is a lock area, so acquire the lock</comment>
     <decl_stmt><decl><type><name>LockArea</name></type> <name>lockArea</name> <init>= <expr><call><name><name>annotation</name><operator>.</operator><name>lockArea</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>LockType</name></type> <name>lockType</name> <init>= <expr><call><name><name>annotation</name><operator>.</operator><name>lockType</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name><name>TransactionalLocks</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name><name>TransactionalLocks</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">1768dd802f</literal><operator>..</operator><literal type="number">2c35b618f4</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name><name>TransactionalLocks</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name><name>TransactionalLocks</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">41</literal></expr><operator>,</operator><expr><literal type="number">29</literal> <operator>+</operator><literal type="number">41</literal></expr><operator>,</operator><expr><literal type="number">26</literal> @@ <specifier>public</specifier> <name>class</name> <name>TransactionalLocks</name> <block>{
   <comment type="block" format="javadoc">/**
    * Used to lookup whether {@link LockArea}s are enabled.
    */</comment>
  @<expr><name>Inject</name>
  <specifier>private</specifier> <name>Configuration</name> <name>m_configuration</name></expr>;
  <expr><specifier>private</specifier> <name>final</name> <name>Configuration</name> <name>m_configuration</name></expr>;
 
   <comment type="block" format="javadoc">/**
    * Manages the locks for each class which uses the {@link Transactional}
    * annotation.
    */</comment>
  <expr><specifier>private</specifier> <name>final</name> <name><name>ConcurrentHashMap</name><argument_list type="generic">&lt;<argument><name>LockArea</name></argument>, <argument><name>ReadWriteLock</name></argument>&gt;</argument_list></name> <name>m_locks</name> <operator>=</operator> <operator>new</operator> <call><name><name>ConcurrentHashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
  <expr><specifier>private</specifier> <name>final</name> <name><name>ConcurrentHashMap</name><argument_list type="generic">&lt;<argument><name>LockArea</name></argument>, <argument><name>ReadWriteLock</name></argument>&gt;</argument_list></name> <name>m_locks</name></expr>;

 
   <comment type="block" format="javadoc">/**
   * Gets a lock for the specified lock area. There is a 1:1 relationship
   * between a lock area and a lock.
   * &lt;p/&gt;
   * If the {@link LockArea} is not enabled, then this will return an empty
   * {@link Lock} implementation which doesn't actually lock anything.
   * Constructor.
    *
   * @param lockArea
   *          the lock area to get the lock for (not {@code null}).
   * @return the lock to use for the specified lock area (never {@code null}).
    */</comment>
  <expr><specifier>public</specifier> <name>ReadWriteLock</name> <call><name>getLock</name><argument_list>(<argument><expr><name>LockArea</name> <name>lockArea</name></expr></argument>)</argument_list></call> <block>{
    <expr><name>ReadWriteLock</name> <name>lock</name> <operator>=</operator> <call><name><name>m_locks</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>lockArea</name></expr></argument>)</argument_list></call></expr>;
    <if_stmt><if>if <condition>(<expr><literal type="null">null</literal> <operator>==</operator> <name>lock</name></expr>)</condition> <block>{<block_content>
  <constructor><annotation>@<name>Inject</name></annotation>
  <specifier>private</specifier> <name>TransactionalLocks</name><parameter_list>(<parameter><decl><type><name>Configuration</name></type> <name>configuration</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name>m_configuration</name> <operator>=</operator> <name>configuration</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>m_locks</name> <operator>=</operator> <operator>new</operator> <call><name><name>ConcurrentHashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <for>for <control>(<init><decl><type><name>LockArea</name></type> <name>lockArea</name> <range>: <expr><call><name><name>LockArea</name><operator>.</operator><name>values</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
      <decl_stmt><decl><type><specifier>final</specifier> <name>ReadWriteLock</name></type> <name>lock</name></decl>;</decl_stmt>
       <if_stmt><if>if <condition>(<expr><call><name><name>lockArea</name><operator>.</operator><name>isEnabled</name></name><argument_list>(<argument><expr><name>m_configuration</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
         <expr_stmt><expr><name>lock</name> <operator>=</operator> <operator>new</operator> <call><name>ReentrantReadWriteLock</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt/></block_content></block></if></if_stmt></block_content></block></for></block_content></block></constructor></block_content></block></if></if_stmt>}</block></expr> <if_stmt><else>else <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">72</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">69</literal></expr><operator>,</operator><expr><literal type="number">21</literal> @@ <specifier>public</specifier> <name>class</name> <name>TransactionalLocks</name> <block>{
 
       <expr><call><name><name>m_locks</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>lockArea</name></expr></argument>, <argument><expr><name>lock</name></expr></argument>)</argument_list></call></expr>;</block></expr></expr_stmt></block_content></block></else></if_stmt>
     }</block></expr></expr_stmt>
  }
 
    return <expr_stmt><expr><name>lock</name></expr>;</expr_stmt>
  <comment type="block" format="javadoc">/**
   * Gets a lock for the specified lock area. There is a 1:1 relationship
   * between a lock area and a lock.
   * &lt;p/&gt;
   * If the {@link LockArea} is not enabled, then this will return an empty
   * {@link Lock} implementation which doesn't actually lock anything.
   *
   * @param lockArea
   *          the lock area to get the lock for (not {@code null}).
   * @return the lock to use for the specified lock area (never {@code null}).
   */</comment>
  <function><type><specifier>public</specifier> <name>ReadWriteLock</name></type> <name>getLock</name><parameter_list>(<parameter><decl><type><name>LockArea</name></type> <name>lockArea</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <return>return <expr><call><name><name>m_locks</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>lockArea</name></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
 
   <comment type="block" format="javadoc">/**
diff --git a/ambari-server/src/main/java/org/apache/ambari/server/orm/dao/HostRoleCommandDAO.java b/ambari-server/src/main/java/org/apache/ambari/server/orm/dao/HostRoleCommandDAO.java
index c2ded2f6a1..c25606685c 100644
-- a/ambari-server/src/main/java/org/apache/ambari/server/orm/dao/HostRoleCommandDAO.java
++ b/ambari-server/src/main/java/org/apache/ambari/server/orm/dao/HostRoleCommandDAO.java
@@ -26,8 +26,10 @@ import java.util.ArrayList;
 import java.util.Collection;
 import java.util.Collections;
 import java.util.HashMap;
import java.util.LinkedHashSet;
 import java.util.List;
 import java.util.Map;
import java.util.Set;
 import java.util.concurrent.TimeUnit;
 import java.util.concurrent.locks.ReadWriteLock;
 
@@ -161,11 +163,29 @@ public class HostRoleCommandDAO {
   }
 
   /**
   * Invalidates those entries in host role command status cache which are dependent on the passed {@link org.apache.ambari.server.orm.entities.HostRoleCommandEntity}
   * entity.
   * Invalidates the host role command status summary cache entry that
   * corresponds to each request.
   *
   * @param requestIds
   *          the requests to invalidate
   */</comment>
  <function><type><specifier>protected</specifier> <name>void</name></type> <name>invalidateHostRoleCommandStatusSummaryCache</name><parameter_list>(<parameter><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>&gt;</argument_list></name></type> <name>requestIds</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <for>for <control>(<init><decl><type><name>Long</name></type> <name>requestId</name> <range>: <expr><name>requestIds</name></expr></range></decl></init>)</control> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><literal type="null">null</literal> <operator>!=</operator> <name>requestId</name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name>invalidateHostRoleCommandStatusSummaryCache</name><argument_list>(<argument><expr><name>requestId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
  </block_content>}</block></function>

  <comment type="block" format="javadoc">/**
   * Invalidates those entries in host role command status cache which are
   * dependent on the passed
   * {@link org.apache.ambari.server.orm.entities.HostRoleCommandEntity} entity.
   *
    * @param hostRoleCommandEntity
    */</comment>
  <function><type><specifier>protected</specifier> <name>void</name></type> <name>invalidateHostRoleCommandStatusCache</name><parameter_list>(<parameter><decl><type><name>HostRoleCommandEntity</name></type> <name>hostRoleCommandEntity</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <function><type><specifier>protected</specifier> <name>void</name></type> <name>invalidateHostRoleCommandStatusSummaryCache</name><parameter_list>(
      <parameter><decl><type><name>HostRoleCommandEntity</name></type> <name>hostRoleCommandEntity</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <if_stmt><if>if <condition>( <expr><operator>!</operator><name>hostRoleCommandStatusSummaryCacheEnabled</name></expr> )</condition> <block>{<block_content>
       <return>return;</return>
     </block_content>}</block></if></if_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">193</literal></expr><operator>,</operator><expr><literal type="number">36</literal> <operator>+</operator><literal type="number">213</literal></expr><operator>,</operator><expr><literal type="number">28</literal> @@ <specifier>public</specifier> <name>class</name> <name>HostRoleCommandDAO</name> <block>{
    <expr><operator>*</operator> @</expr><return>return <expr><name>the</name> <name>map</name> <name>of</name> <name>stage</name><operator>-</operator><name>to</name><operator>-</operator><name>summary</name> <name>objects</name>
    <operator>*</operator><operator>/</operator>
   @<name>RequiresSession</name>
  <specifier>protected</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>, <argument><name>HostRoleCommandStatusSummaryDTO</name></argument>&gt;</argument_list></name> <call><name>loadAggregateCounts</name><argument_list>(<argument><expr><name>Long</name> <name>requestId</name></expr></argument>)</argument_list></call> <block>{
  <expr><specifier>private</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>, <argument><name>HostRoleCommandStatusSummaryDTO</name></argument>&gt;</argument_list></name> <call><name>loadAggregateCounts</name><argument_list>(<argument><expr><name>Long</name> <name>requestId</name></expr></argument>)</argument_list></call> <block>{
     <expr><name><name>Map</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>, <argument><name>HostRoleCommandStatusSummaryDTO</name></argument>&gt;</argument_list></name> <name>map</name> <operator>=</operator> <operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>, <argument><name>HostRoleCommandStatusSummaryDTO</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
 
    <comment type="line">// ensure that we wait for any running transactions working on this cache to</comment>
    <comment type="line">// complete</comment>
    <expr><name>ReadWriteLock</name> <name>lock</name> <operator>=</operator> <call><name><name>transactionLocks</name><operator>.</operator><name>getLock</name></name><argument_list>(<argument><expr><name><name>LockArea</name><operator>.</operator><name>HRC_STATUS_CACHE</name></name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>lock</name><operator>.</operator><name>readLock</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>lock</name><argument_list>()</argument_list></call></expr>;

    <try>try <block>{<block_content>
      <decl_stmt><decl><type><name><name>TypedQuery</name><argument_list type="generic">&lt;<argument><name>HostRoleCommandStatusSummaryDTO</name></argument>&gt;</argument_list></name></type> <name>query</name> <init>= <expr><call><name><name>entityManagerProvider</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>createQuery</name><argument_list>(
          <argument><expr><name>SUMMARY_DTO</name></expr></argument>, <argument><expr><name><name>HostRoleCommandStatusSummaryDTO</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

      <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"requestId"</literal></expr></argument>, <argument><expr><name>requestId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"aborted"</literal></expr></argument>, <argument><expr><name><name>HostRoleStatus</name><operator>.</operator><name>ABORTED</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"completed"</literal></expr></argument>, <argument><expr><name><name>HostRoleStatus</name><operator>.</operator><name>COMPLETED</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"failed"</literal></expr></argument>, <argument><expr><name><name>HostRoleStatus</name><operator>.</operator><name>FAILED</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"holding"</literal></expr></argument>, <argument><expr><name><name>HostRoleStatus</name><operator>.</operator><name>HOLDING</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"holding_failed"</literal></expr></argument>, <argument><expr><name><name>HostRoleStatus</name><operator>.</operator><name>HOLDING_FAILED</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"holding_timedout"</literal></expr></argument>, <argument><expr><name><name>HostRoleStatus</name><operator>.</operator><name>HOLDING_TIMEDOUT</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"in_progress"</literal></expr></argument>, <argument><expr><name><name>HostRoleStatus</name><operator>.</operator><name>IN_PROGRESS</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"pending"</literal></expr></argument>, <argument><expr><name><name>HostRoleStatus</name><operator>.</operator><name>PENDING</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"queued"</literal></expr></argument>, <argument><expr><name><name>HostRoleStatus</name><operator>.</operator><name>QUEUED</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"timedout"</literal></expr></argument>, <argument><expr><name><name>HostRoleStatus</name><operator>.</operator><name>TIMEDOUT</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"skipped_failed"</literal></expr></argument>, <argument><expr><name><name>HostRoleStatus</name><operator>.</operator><name>SKIPPED_FAILED</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <for>for <control>(<init><decl><type><name>HostRoleCommandStatusSummaryDTO</name></type> <name>dto</name> <range>: <expr><call><name><name>daoUtils</name><operator>.</operator><name>selectList</name></name><argument_list>(<argument><expr><name>query</name></expr></argument>)</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
        <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>dto</name><operator>.</operator><name>getStageId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>dto</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt/></block_content></block></for></block_content></block></try>}</block></expr>
    }</block></expr></return> <finally>finally <block>{<block_content>
      <expr_stmt><expr><call><name><name>lock</name><operator>.</operator><name>readLock</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>unlock</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>EntityManager</name></type> <name>entityManager</name> <init>= <expr><call><name><name>entityManagerProvider</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>TypedQuery</name><argument_list type="generic">&lt;<argument><name>HostRoleCommandStatusSummaryDTO</name></argument>&gt;</argument_list></name></type> <name>query</name> <init>= <expr><call><name><name>entityManager</name><operator>.</operator><name>createQuery</name></name><argument_list>(<argument><expr><name>SUMMARY_DTO</name></expr></argument>,
        <argument><expr><name><name>HostRoleCommandStatusSummaryDTO</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"requestId"</literal></expr></argument>, <argument><expr><name>requestId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"aborted"</literal></expr></argument>, <argument><expr><name><name>HostRoleStatus</name><operator>.</operator><name>ABORTED</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"completed"</literal></expr></argument>, <argument><expr><name><name>HostRoleStatus</name><operator>.</operator><name>COMPLETED</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"failed"</literal></expr></argument>, <argument><expr><name><name>HostRoleStatus</name><operator>.</operator><name>FAILED</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"holding"</literal></expr></argument>, <argument><expr><name><name>HostRoleStatus</name><operator>.</operator><name>HOLDING</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"holding_failed"</literal></expr></argument>, <argument><expr><name><name>HostRoleStatus</name><operator>.</operator><name>HOLDING_FAILED</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"holding_timedout"</literal></expr></argument>, <argument><expr><name><name>HostRoleStatus</name><operator>.</operator><name>HOLDING_TIMEDOUT</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"in_progress"</literal></expr></argument>, <argument><expr><name><name>HostRoleStatus</name><operator>.</operator><name>IN_PROGRESS</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"pending"</literal></expr></argument>, <argument><expr><name><name>HostRoleStatus</name><operator>.</operator><name>PENDING</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"queued"</literal></expr></argument>, <argument><expr><name><name>HostRoleStatus</name><operator>.</operator><name>QUEUED</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"timedout"</literal></expr></argument>, <argument><expr><name><name>HostRoleStatus</name><operator>.</operator><name>TIMEDOUT</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"skipped_failed"</literal></expr></argument>, <argument><expr><name><name>HostRoleStatus</name><operator>.</operator><name>SKIPPED_FAILED</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for>for <control>(<init><decl><type><name>HostRoleCommandStatusSummaryDTO</name></type> <name>dto</name> <range>: <expr><call><name><name>daoUtils</name><operator>.</operator><name>selectList</name></name><argument_list>(<argument><expr><name>query</name></expr></argument>)</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
      <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>dto</name><operator>.</operator><name>getStageId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>dto</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></for>
 
     <return>return <expr><name>map</name></expr>;</return>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">244</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">256</literal></expr><operator>,</operator><expr><literal type="number">18</literal> @@ <specifier>public</specifier> <name>class</name> <name>HostRoleCommandDAO</name> <block>{
         @<expr><name>Override</name>
         <specifier>public</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>, <argument><name>HostRoleCommandStatusSummaryDTO</name></argument>&gt;</argument_list></name> <call><name>load</name><argument_list>(<argument><expr><name>Long</name> <name>requestId</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
           <expr><call><name><name>LOG</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"Cache miss for host role command status summary object for request {}, fetching from JPA"</literal></expr></argument>, <argument><expr><name>requestId</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
          <expr><name><name>Map</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>, <argument><name>HostRoleCommandStatusSummaryDTO</name></argument>&gt;</argument_list></name> <name>hrcCommandStatusByStageId</name> <operator>=</operator> <call><name>loadAggregateCounts</name><argument_list>(<argument><expr><name>requestId</name></expr></argument>)</argument_list></call></expr>;
 
          <return>return <expr><name>hrcCommandStatusByStageId</name></expr>;</return>
          <comment type="line">// ensure that we wait for any running transactions working on this cache to</comment>
          <comment type="line">// complete</comment>
          <name>ReadWriteLock</name> <name>lock</name> <operator>=</operator> <call><name><name>transactionLocks</name><operator>.</operator><name>getLock</name></name><argument_list>(<argument><expr><name><name>LockArea</name><operator>.</operator><name>HRC_STATUS_CACHE</name></name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>lock</name><operator>.</operator><name>readLock</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>lock</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

          <try>try<block>{<block_content>
            <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>, <argument><name>HostRoleCommandStatusSummaryDTO</name></argument>&gt;</argument_list></name></type> <name>hrcCommandStatusByStageId</name> <init>= <expr><call><name>loadAggregateCounts</name><argument_list>(<argument><expr><name>requestId</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <return>return <expr><name>hrcCommandStatusByStageId</name></expr>;</return>
          </block_content>}</block> <finally>finally <block>{<block_content>
            <expr_stmt><expr><call><name><name>lock</name><operator>.</operator><name>readLock</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>unlock</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
          </block_content>}</block></finally></try>
         </block_content>}</block></finally>
       }</block></expr></expr_stmt>)</block_content></block>;</function>
   </block_content>}</block></function>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">581</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">602</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>HostRoleCommandDAO</name> <block>{
     <expr><name>EntityManager</name> <name>entityManager</name> <operator>=</operator> <call><name><name>entityManagerProvider</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr>;
     <expr><call><name><name>entityManager</name><operator>.</operator><name>persist</name></name><argument_list>(<argument><expr><name>entity</name></expr></argument>)</argument_list></call></expr>;
 
    <expr><call><name>invalidateHostRoleCommandStatusCache</name><argument_list>(<argument><expr><name>entity</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>invalidateHostRoleCommandStatusSummaryCache</name><argument_list>(<argument><expr><name>entity</name></expr></argument>)</argument_list></call></expr>;
   }</block>
 
   @<name>Transactional</name>
@@ <operator>-</operator><literal type="number">590</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">611</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>HostRoleCommandDAO</name> <block>{
     <expr><name>EntityManager</name> <name>entityManager</name> <operator>=</operator> <call><name><name>entityManagerProvider</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr>;
     <expr><name>entity</name> <operator>=</operator> <call><name><name>entityManager</name><operator>.</operator><name>merge</name></name><argument_list>(<argument><expr><name>entity</name></expr></argument>)</argument_list></call></expr>;
 
    <expr><call><name>invalidateHostRoleCommandStatusCache</name><argument_list>(<argument><expr><name>entity</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>invalidateHostRoleCommandStatusSummaryCache</name><argument_list>(<argument><expr><name>entity</name></expr></argument>)</argument_list></call></expr>;
 
     <return>return <expr><name>entity</name></expr>;</return>
   }</block></expr></expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">606</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">627</literal></expr><operator>,</operator><expr><literal type="number">18</literal> @@ <specifier>public</specifier> <name>class</name> <name>HostRoleCommandDAO</name> <block>{
   @<expr><name>Transactional</name>
   @<call><name>TransactionalLock</name><argument_list>(<argument><expr><name>lockArea</name> <operator>=</operator> <name><name>LockArea</name><operator>.</operator><name>HRC_STATUS_CACHE</name></name></expr></argument>, <argument><expr><name>lockType</name> <operator>=</operator> <name><name>LockType</name><operator>.</operator><name>WRITE</name></name></expr></argument>)</argument_list></call>
   <specifier>public</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>HostRoleCommandEntity</name></argument>&gt;</argument_list></name> <call><name>mergeAll</name><argument_list>(<argument><expr><name><name>Collection</name><argument_list type="generic">&lt;<argument><name>HostRoleCommandEntity</name></argument>&gt;</argument_list></name> <name>entities</name></expr></argument>)</argument_list></call> <block>{
    <expr><name><name>Set</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>&gt;</argument_list></name> <name>requestsToInvalidate</name> <operator>=</operator> <operator>new</operator> <call><name><name>LinkedHashSet</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
     <expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>HostRoleCommandEntity</name></argument>&gt;</argument_list></name> <name>managedList</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>HostRoleCommandEntity</name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><call><name><name>entities</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <for>for <control>(<init><decl><type><name>HostRoleCommandEntity</name></type> <name>entity</name> <range>: <expr><name>entities</name></expr></range></decl></init>)</control> <block>{<block_content>
       <decl_stmt><decl><type><name>EntityManager</name></type> <name>entityManager</name> <init>= <expr><call><name><name>entityManagerProvider</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>managedList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name><name>entityManager</name><operator>.</operator><name>merge</name></name><argument_list>(<argument><expr><name>entity</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>invalidateHostRoleCommandStatusCache</name><argument_list>(<argument><expr><name>entity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>entity</name> <operator>=</operator> <call><name><name>entityManager</name><operator>.</operator><name>merge</name></name><argument_list>(<argument><expr><name>entity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>managedList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>entity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt><expr><call><name><name>requestsToInvalidate</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name><name>entity</name><operator>.</operator><name>getRequestId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt/></block_content></block></for>}</block>
 
    <call><name>invalidateHostRoleCommandStatusSummaryCache</name><argument_list>(<argument><expr><name>requestsToInvalidate</name></expr></argument>)</argument_list></call></expr>;

     <return>return <expr><name>managedList</name></expr>;</return>
   }</block></expr></expr_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">621</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">647</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>HostRoleCommandDAO</name> <block>{
   <expr><specifier>public</specifier> <name>void</name> <call><name>remove</name><argument_list>(<argument><expr><name>HostRoleCommandEntity</name> <name>entity</name></expr></argument>)</argument_list></call> <block>{
     <expr><name>EntityManager</name> <name>entityManager</name> <operator>=</operator> <call><name><name>entityManagerProvider</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr>;
     <expr><call><name><name>entityManager</name><operator>.</operator><name>remove</name></name><argument_list>(<argument><expr><call><name>merge</name><argument_list>(<argument><expr><name>entity</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>invalidateHostRoleCommandStatusCache</name><argument_list>(<argument><expr><name>entity</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>invalidateHostRoleCommandStatusSummaryCache</name><argument_list>(<argument><expr><name>entity</name></expr></argument>)</argument_list></call></expr>;
   }</block>
 
   @<name>Transactional</name>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>annotations</name><operator>/</operator><name><name>LockAreaTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>annotations</name><operator>/</operator><name><name>LockAreaTest</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">0000000000..2208ce48db</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>annotations</name><operator>/</operator><name><name>LockAreaTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr>,<expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr>,<expr><literal type="number">78</literal> @@</expr>
<comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>annotations</name></name>;</package></block></expr></expr_stmt>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>EnumSet</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>locks</name><operator>.</operator><name>Lock</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>locks</name><operator>.</operator><name>ReadWriteLock</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>annotations</name><operator>.</operator><name>TransactionalLock</name><operator>.</operator><name>LockArea</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>AmbariException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>GuiceJpaInitializer</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>InMemoryDefaultTestModule</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>TransactionalLocks</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>After</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Before</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>Guice</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>Injector</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>persist</name><operator>.</operator><name>PersistService</name></name>;</import>

<import>import <name><name>junit</name><operator>.</operator><name>framework</name><operator>.</operator><name>Assert</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Tests {@link TransactionalLocks} and {@link LockArea} and associated classes.
 */</comment>
<class><specifier>public</specifier> class <name>LockAreaTest</name> <block>{

  <decl_stmt><decl><type><specifier>private</specifier> <name>Injector</name></type> <name>m_injector</name></decl>;</decl_stmt>

  <function><annotation>@<name>Before</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>setup</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><name>m_injector</name> <operator>=</operator> <call><name><name>Guice</name><operator>.</operator><name>createInjector</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>InMemoryDefaultTestModule</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>m_injector</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name><name>GuiceJpaInitializer</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>After</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>teardown</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>AmbariException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>m_injector</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name><name>PersistService</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>stop</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <comment type="block" format="javadoc">/**
   * Tests that for each {@link LockArea}, there's a single {@link Lock}.
   */</comment>
  <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testTransactionalLockInstantiation</name><parameter_list>()</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>TransactionalLocks</name></type> <name>locks</name> <init>= <expr><call><name><name>m_injector</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name><name>TransactionalLocks</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>ReadWriteLock</name></argument>&gt;</argument_list></name></type> <name>lockList</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>LockArea</name></argument>&gt;</argument_list></name></type> <name>lockAreas</name> <init>= <expr><call><name><name>EnumSet</name><operator>.</operator><name>allOf</name></name><argument_list>(<argument><expr><name><name>LockArea</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <for>for <control>(<init><decl><type><name>LockArea</name></type> <name>lockArea</name> <range>: <expr><name>lockAreas</name></expr></range></decl></init>)</control> <block>{<block_content>
      <decl_stmt><decl><type><name>ReadWriteLock</name></type> <name>lock</name> <init>= <expr><call><name><name>locks</name><operator>.</operator><name>getLock</name></name><argument_list>(<argument><expr><name>lockArea</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertNotNull</name></name><argument_list>(<argument><expr><name>lock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>lockList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>lock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>

    <for>for <control>(<init><decl><type><name>LockArea</name></type> <name>lockArea</name> <range>: <expr><name>lockAreas</name></expr></range></decl></init>)</control> <block>{<block_content>
      <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertTrue</name></name><argument_list>(<argument><expr><call><name><name>lockList</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><call><name><name>locks</name><operator>.</operator><name>getLock</name></name><argument_list>(<argument><expr><name>lockArea</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
  </block_content>}</block></function>
}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>annotations</name><operator>/</operator><name><name>TransactionalLockInterceptorTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>annotations</name><operator>/</operator><name><name>TransactionalLockInterceptorTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">6ebdc0b6dd</literal><operator>..</operator><literal type="number">7d7f47be8a</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>annotations</name><operator>/</operator><name><name>TransactionalLockInterceptorTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>annotations</name><operator>/</operator><name><name>TransactionalLockInterceptorTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">122</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">122</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TransactionalLockInterceptorTest</name> <block>{
 
     <comment type="line">// invoke method with annotations</comment>
     <expr><name>TestObject</name> <name>testObject</name> <operator>=</operator> <call><name><name>m_injector</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name><name>TestObject</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>testObject</name><operator>.</operator><name>testNestedLockMethod</name></name><argument_list>()</argument_list></call></expr>;
    <expr><call><name><name>testObject</name><operator>.</operator><name>testLockMethodAsChildOfActiveTransaction</name></name><argument_list>()</argument_list></call></expr>;
 
     <comment type="line">// verify locks are called</comment>
     <expr><call><name><name>EasyMock</name><operator>.</operator><name>verify</name></name><argument_list>(<argument><expr><name>transactionalLocks</name></expr></argument>, <argument><expr><name>readWriteLock</name></expr></argument>, <argument><expr><name>readLock</name></expr></argument>, <argument><expr><name>writeLock</name></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">169</literal></expr>,<expr><literal type="number">28</literal> <operator>+</operator><literal type="number">169</literal></expr>,<expr><literal type="number">98</literal> @@ <specifier>public</specifier> <name>class</name> <name>TransactionalLockInterceptorTest</name> <block>{
     <expr><call><name><name>EasyMock</name><operator>.</operator><name>verify</name></name><argument_list>(<argument><expr><name>transactionalLocks</name></expr></argument>, <argument><expr><name>readWriteLock</name></expr></argument>, <argument><expr><name>readLock</name></expr></argument>, <argument><expr><name>writeLock</name></expr></argument>)</argument_list></call></expr>;
   }</block>
 
  <comment type="block" format="javadoc">/**
   * Tests that two invocations of a {@link TransactionalLock} with the same
   * {@link TransactionalLock} will only lock once on the {@link LockArea}.
   *
   * @throws Throwable
   */</comment>
  @<name>Test</name>
  <specifier>public</specifier> <name>void</name> <call><name>testNestedMultipleLocks</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Throwable</name> <block>{
    <comment type="line">// create mocks</comment>
    <expr><name>TransactionalLocks</name> <name>transactionalLocks</name> <operator>=</operator> <call><name><name>m_injector</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name><name>TransactionalLocks</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <expr><name>ReadWriteLock</name> <name>readWriteLock</name> <operator>=</operator> <call><name><name>EasyMock</name><operator>.</operator><name>createStrictMock</name></name><argument_list>(<argument><expr><name><name>ReadWriteLock</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
    <expr><name>Lock</name> <name>readLock</name> <operator>=</operator> <call><name><name>EasyMock</name><operator>.</operator><name>createStrictMock</name></name><argument_list>(<argument><expr><name><name>Lock</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
    <expr><name>Lock</name> <name>writeLock</name> <operator>=</operator> <call><name><name>EasyMock</name><operator>.</operator><name>createStrictMock</name></name><argument_list>(<argument><expr><name><name>Lock</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;

    <comment type="line">// expectations</comment>
    <expr><call><name><name>EasyMock</name><operator>.</operator><name>expect</name></name><argument_list>(<argument><expr><call><name><name>transactionalLocks</name><operator>.</operator><name>getLock</name></name><argument_list>(<argument><expr><name><name>LockArea</name><operator>.</operator><name>HRC_STATUS_CACHE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>readWriteLock</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>times</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>EasyMock</name><operator>.</operator><name>expect</name></name><argument_list>(<argument><expr><call><name><name>readWriteLock</name><operator>.</operator><name>writeLock</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>writeLock</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>times</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>writeLock</name><operator>.</operator><name>lock</name></name><argument_list>()</argument_list></call></expr>;
    <expr><call><name><name>EasyMock</name><operator>.</operator><name>expectLastCall</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>once</name><argument_list>()</argument_list></call></expr>;
    <expr><call><name><name>writeLock</name><operator>.</operator><name>unlock</name></name><argument_list>()</argument_list></call></expr>;
    <expr><call><name><name>EasyMock</name><operator>.</operator><name>expectLastCall</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>once</name><argument_list>()</argument_list></call></expr>;

    <comment type="line">// replay</comment>
    <expr><call><name><name>EasyMock</name><operator>.</operator><name>replay</name></name><argument_list>(<argument><expr><name>transactionalLocks</name></expr></argument>, <argument><expr><name>readWriteLock</name></expr></argument>, <argument><expr><name>readLock</name></expr></argument>, <argument><expr><name>writeLock</name></expr></argument>)</argument_list></call></expr>;

    <comment type="line">// invoke method with annotations</comment>
    <expr><name>TestObject</name> <name>testObject</name> <operator>=</operator> <call><name><name>m_injector</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name><name>TestObject</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>testObject</name><operator>.</operator><name>testMultipleNestedLocks</name></name><argument_list>()</argument_list></call></expr>;

    <comment type="line">// verify locks are called</comment>
    <expr><call><name><name>EasyMock</name><operator>.</operator><name>verify</name></name><argument_list>(<argument><expr><name>transactionalLocks</name></expr></argument>, <argument><expr><name>readWriteLock</name></expr></argument>, <argument><expr><name>readLock</name></expr></argument>, <argument><expr><name>writeLock</name></expr></argument>)</argument_list></call></expr>;
  }</block>

   <comment type="block" format="javadoc">/**
    * A test object which has methods annotated for use with this test class.
    */</comment>
   <specifier>public</specifier> <specifier>static</specifier> <name>class</name> <name>TestObject</name> <block>{
    <expr><specifier>public</specifier> <name>void</name> <call><name>testNestedLockMethod</name><argument_list>()</argument_list></call> <block>{
      <expr><call><name>transactionMethod</name><argument_list>()</argument_list></call></expr>;
      <expr><call><name>transactionMethodWithLock</name><argument_list>()</argument_list></call></expr>;
    <comment type="block" format="javadoc">/**
     * Calls:
     * &lt;ul&gt;
     * &lt;li&gt;@Transactional&lt;/li&gt;
     * &lt;li&gt;-&gt; @TransactionalLock(lockArea = LockArea.HRC_STATUS_CACHE, lockType
     * = LockType.WRITE)&lt;/li&gt;
     * &lt;/ul&gt;
     */</comment>
    <expr><specifier>public</specifier> <name>void</name> <call><name>testLockMethodAsChildOfActiveTransaction</name><argument_list>()</argument_list></call> <block>{
      <expr><call><name>transactionMethodCallingAnotherWithLock</name><argument_list>()</argument_list></call></expr>;
     }</block>
 
    <comment type="block" format="javadoc">/**
     * Calls:
     * &lt;ul&gt;
     * &lt;li&gt;@TransactionalLock(lockArea = LockArea.HRC_STATUS_CACHE, lockType =
     * LockType.WRITE)&lt;/li&gt;
     * &lt;li&gt;@TransactionalLock(lockArea = LockArea.HRC_STATUS_CACHE, lockType =
     * LockType.WRITE)&lt;/li&gt;
     * &lt;/ul&gt;
     */</comment>
     <specifier>public</specifier> <name>void</name> <call><name>testMultipleLocks</name><argument_list>()</argument_list></call> <block>{
       <expr><call><name>transactionMethodWithLock</name><argument_list>()</argument_list></call></expr>;
       <expr><call><name>transactionMethodWithLock</name><argument_list>()</argument_list></call></expr>;
     }</block>
 
    <comment type="block" format="javadoc">/**
     * Calls:
     * &lt;ul&gt;
     * &lt;li&gt;@TransactionalLock(lockArea = LockArea.HRC_STATUS_CACHE, lockType =
     * LockType.WRITE)&lt;/li&gt;
     * &lt;li&gt;-&gt; @TransactionalLock(lockArea = LockArea.HRC_STATUS_CACHE, lockType
     * = LockType.WRITE)&lt;/li&gt;
     * &lt;/ul&gt;
     */</comment>
    <specifier>public</specifier> <name>void</name> <call><name>testMultipleNestedLocks</name><argument_list>()</argument_list></call> <block>{
      <expr><call><name>transactionMethodWithLockCallingAnotherWithLock</name><argument_list>()</argument_list></call></expr>;
    }</block>

     @<name>Transactional</name>
    <specifier>public</specifier> <name>void</name> <call><name>transactionMethod</name><argument_list>()</argument_list></call> <block>{
    <expr><specifier>public</specifier> <name>void</name> <call><name>transactionMethodCallingAnotherWithLock</name><argument_list>()</argument_list></call> <block>{
      <expr><call><name>transactionMethodWithLock</name><argument_list>()</argument_list></call></expr>;
     }</block>
 
     @<name>Transactional</name>
     @<call><name>TransactionalLock</name><argument_list>(<argument><expr><name>lockArea</name> <operator>=</operator> <name><name>LockArea</name><operator>.</operator><name>HRC_STATUS_CACHE</name></name></expr></argument>, <argument><expr><name>lockType</name> <operator>=</operator> <name><name>LockType</name><operator>.</operator><name>WRITE</name></name></expr></argument>)</argument_list></call>
     <specifier>public</specifier> <name>void</name> <call><name>transactionMethodWithLock</name><argument_list>()</argument_list></call> <block>{
     }</block>


    @<name>Transactional</name>
    @<call><name>TransactionalLock</name><argument_list>(<argument><expr><name>lockArea</name> <operator>=</operator> <name><name>LockArea</name><operator>.</operator><name>HRC_STATUS_CACHE</name></name></expr></argument>, <argument><expr><name>lockType</name> <operator>=</operator> <name><name>LockType</name><operator>.</operator><name>WRITE</name></name></expr></argument>)</argument_list></call>
    <specifier>public</specifier> <name>void</name> <call><name>transactionMethodWithLockCallingAnotherWithLock</name><argument_list>()</argument_list></call> <block>{
      <expr><call><name>transactionMethodWithLock</name><argument_list>()</argument_list></call></expr>;
    }</block></expr>
   }</block>
 
   <comment type="block" format="javadoc">/**
diff --git a/ambari-server/src/test/java/org/apache/ambari/annotations/TransactionalLockTest.java b/ambari-server/src/test/java/org/apache/ambari/annotations/TransactionalLockTest.java
index 186208879f..2c4b4450b2 100644
-- a/ambari-server/src/test/java/org/apache/ambari/annotations/TransactionalLockTest.java
++ b/ambari-server/src/test/java/org/apache/ambari/annotations/TransactionalLockTest.java
@@ -64,7 +64,8 @@ public class TransactionalLockTest {
   }
 
   /**
   *
   * Tests that annotations are actually equal (more of a proof of the javadoc
   * than anything).
    */</comment>
   @<name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testAnnotationEquality</name><argument_list>()</argument_list></call> <block>{
@@ <expr><operator>-</operator><literal type="number">86</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">87</literal></expr>,<expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>TransactionalLockTest</name> <block>{
     <expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>annotationsFound</name></expr></argument>)</argument_list></call></expr>;
   }</block>
 

   @<call><name>TransactionalLock</name><argument_list>(<argument><expr><name>lockArea</name> <operator>=</operator> <name><name>LockArea</name><operator>.</operator><name>HRC_STATUS_CACHE</name></name></expr></argument>, <argument><expr><name>lockType</name> <operator>=</operator> <name><name>LockType</name><operator>.</operator><name>READ</name></name></expr></argument>)</argument_list></call>
   <specifier>private</specifier> <name>void</name> <call><name>transactionalHRCRead</name><argument_list>()</argument_list></call> <block>{
   }</block>
@@ <operator>-</operator><literal type="number">98</literal></expr>,<expr><literal type="number">5</literal> <operator>+</operator><literal type="number">98</literal></expr>,<expr><literal type="number">4</literal> @@ <specifier>public</specifier> <name>class</name> <name>TransactionalLockTest</name> <block>{
   @<expr><call><name>TransactionalLock</name><argument_list>(<argument><expr><name>lockArea</name> <operator>=</operator> <name><name>LockArea</name><operator>.</operator><name>HRC_STATUS_CACHE</name></name></expr></argument>, <argument><expr><name>lockType</name> <operator>=</operator> <name><name>LockType</name><operator>.</operator><name>WRITE</name></name></expr></argument>)</argument_list></call>
   <specifier>private</specifier> <name>void</name> <call><name>transactionalHRCWrite</name><argument_list>()</argument_list></call> <block>{
   }</block></expr>

 }</block>
<operator>\</operator> <name>No</name> <name>newline</name> <name>at</name> <name>end</name> <name>of</name> <name>file</name>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>AlertResourceProviderTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>AlertResourceProviderTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">6aa3702de2</literal><operator>..</operator><literal type="number">34270527b6</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>AlertResourceProviderTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>AlertResourceProviderTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr>,<expr><literal type="number">11</literal> <operator>+</operator><literal type="number">17</literal></expr>,<expr><literal type="number">28</literal> @@
  <operator>*</operator><operator>/</operator></expr>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>internal</name></name>;</package></block></expr>
 
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>Binder</name></name>;</import></block></expr>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>Guice</name></name>;</import></block></expr></expr_stmt>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>Injector</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>Module</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>util</name><operator>.</operator><name>Modules</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>configuration</name><operator>.</operator><name>Configuration</name><operator>.</operator><name>JDBC_IN_MEMORY_URL</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>configuration</name><operator>.</operator><name>Configuration</name><operator>.</operator><name>JDBC_IN_MEMROY_DRIVER</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>capture</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>createMock</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>expect</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>replay</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>verify</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertEquals</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertFalse</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertTrue</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>atomic</name><operator>.</operator><name>AtomicInteger</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>atomic</name><operator>.</operator><name>AtomicLong</name></name>;</import>

<import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>EntityManager</name></name>;</import>

 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>api</name><operator>.</operator><name>query</name><operator>.</operator><name>render</name><operator>.</operator><name>AlertStateSummary</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>api</name><operator>.</operator><name>query</name><operator>.</operator><name>render</name><operator>.</operator><name>AlertSummaryGroupedRenderer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>api</name><operator>.</operator><name>query</name><operator>.</operator><name>render</name><operator>.</operator><name>AlertSummaryGroupedRenderer</name><operator>.</operator><name>AlertDefinitionSummary</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">63</literal></expr><operator>,</operator><expr><literal type="number">26</literal> <operator>+</operator><literal type="number">80</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>springframework</name><operator>.</operator><name>security</name><operator>.</operator><name>core</name><operator>.</operator><name>Authentication</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>springframework</name><operator>.</operator><name>security</name><operator>.</operator><name>core</name><operator>.</operator><name>context</name><operator>.</operator><name>SecurityContextHolder</name></name>;</import>
 
<import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>EntityManager</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>atomic</name><operator>.</operator><name>AtomicInteger</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>atomic</name><operator>.</operator><name>AtomicLong</name></name>;</import>

<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>configuration</name><operator>.</operator><name>Configuration</name><operator>.</operator><name>JDBC_IN_MEMORY_URL</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>configuration</name><operator>.</operator><name>Configuration</name><operator>.</operator><name>JDBC_IN_MEMROY_DRIVER</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>capture</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>createMock</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>expect</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>replay</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>EasyMock</name><operator>.</operator><name>verify</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertEquals</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertFalse</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertTrue</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>Binder</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>Guice</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>Injector</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>Module</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>util</name><operator>.</operator><name>Modules</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
  * Test the AlertResourceProvider class
@@ -721,7 +723,7 @@ public class AlertResourceProviderTest {
       binder.bind(DBAccessor.class).to(DBAccessorImpl.class);
 
       Clusters clusters = EasyMock.createNiceMock(Clusters.class);
      Configuration configuration = EasyMock.createMock(Configuration.class);
      Configuration configuration = EasyMock.createNiceMock(Configuration.class);
 
       binder.bind(Clusters.class).toInstance(clusters);
       binder.bind(Configuration.class).toInstance(configuration);
- 
2.19.1.windows.1

</comment></unit>
