<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/ambari/97f3089bad.java"><expr_stmt><expr><name>From</name> <literal type="number">97f3089badbf4f16f828d92b317bb623605ee66b</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Jonathan</name> <name><name>Hurley</name> <argument_list type="generic">&lt;<argument><name>jhurley</name><annotation>@<name><name>hortonworks</name><operator>.</operator><name>com</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Tue</name></expr><operator>,</operator> <expr><literal type="number">1</literal> <name>Mar</name> <literal type="number">2016</literal> <literal type="number">12</literal><operator>:</operator><literal type="number">38</literal><operator>:</operator><literal type="number">30</literal> <operator>-</operator><literal type="number">0500</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>AMBARI</name><operator>-</operator><literal type="number">15173</literal> <operator>-</operator> <name>Express</name> <name>Upgrade</name> <name>Stuck</name> <name>At</name> <name>Manual</name> <name>Prompt</name> <name>Due</name> <name>To</name>
 <name>HRC</name> <name>Status</name> <name>Calculation</name> <name>Cache</name> <call><name>Problem</name> <argument_list>(<argument><expr><name>part5</name></expr></argument>)</argument_list></call> <operator>(</operator><name>jonathanhurley</name><operator>)</operator>

<operator>--</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>dao</name><operator>/</operator><name><name>HostRoleCommandDAO</name><operator>.</operator><name>java</name></name>    <operator>|</operator> <literal type="number">63</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator>
 <literal type="number">1</literal> <name>file</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">37</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">26</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>dao</name><operator>/</operator><name><name>HostRoleCommandDAO</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>dao</name><operator>/</operator><name><name>HostRoleCommandDAO</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">14dac797bf</literal><operator>..</operator><name>b48ffa8a8c</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>dao</name><operator>/</operator><name><name>HostRoleCommandDAO</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>dao</name><operator>/</operator><name><name>HostRoleCommandDAO</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">60</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">60</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>StageEntity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>
 
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>cache</name><operator>.</operator><name>Cache</name></name>;</import>
 <import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>cache</name><operator>.</operator><name>CacheBuilder</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>cache</name><operator>.</operator><name>CacheLoader</name></name>;</import>
 <import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>cache</name><operator>.</operator><name>LoadingCache</name></name>;</import>
 <import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>collect</name><operator>.</operator><name>Lists</name></name>;</import>
 <import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>Inject</name></name>;</import>
<annotation>@</annotation>@ <expr><operator>-</operator><literal type="number">120</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">120</literal></expr><operator>,</operator><expr><literal type="number">15</literal> @@ <specifier>public</specifier> <name>class</name> <name>HostRoleCommandDAO</name> <block>{
    <expr><operator>*</operator> <name>being</name> <name>read</name> <name>during</name> <name>a</name> <name>transaction</name> <name>which</name> <name>has</name> <name>updated</name> <name>a</name>
    <operator>*</operator> <block>{@<expr><name>link</name> <name>HostRoleCommandEntity</name></expr>}</block><literal type="char">'</literal></expr></block></expr>s {@link HostRoleStatus} but has not
    * committed yet.
   * &lt;p/&gt;
   * This cache cannot be a {@link LoadingCache} since there is an inherent
   * problem with concurrency of reloads. Namely, if the entry has been read
   * during a load, but not yet put into the cache and another invalidation is
   * registered. The old value would eventually make it into the cache and the
   * last invalidation would not invalidate anything since the cache was empty
   * at the time.
    */
  private final LoadingCache&lt;Long, Map&lt;Long, HostRoleCommandStatusSummaryDTO&gt;&gt; hrcStatusSummaryCache;
  private final Cache&lt;Long, Map&lt;Long, HostRoleCommandStatusSummaryDTO&gt;&gt; hrcStatusSummaryCache;
 
   /**
    * Specifies whether caching for {@link HostRoleCommandStatusSummaryDTO} grouped by stage id for requests
@@ -252,24 +259,7 @@ public class HostRoleCommandDAO {
     hrcStatusSummaryCache = CacheBuilder.newBuilder()
       .maximumSize(hostRoleCommandStatusSummaryCacheLimit)
       .expireAfterWrite(hostRoleCommandStatusSummaryCacheExpiryDurationMins, TimeUnit.MINUTES)
      .build(new CacheLoader&lt;Long, Map&lt;Long, HostRoleCommandStatusSummaryDTO&gt;&gt;() {
        @Override
        public Map&lt;Long, HostRoleCommandStatusSummaryDTO&gt; load(Long requestId) throws Exception {
          LOG.debug("Cache miss for host role command status summary object for request {}, fetching from JPA", requestId);

          // ensure that we wait for any running transactions working on this cache to
          // complete
          ReadWriteLock lock = transactionLocks.getLock(LockArea.HRC_STATUS_CACHE);
          lock.readLock().lock();

          try{
            Map&lt;Long, HostRoleCommandStatusSummaryDTO&gt; hrcCommandStatusByStageId = loadAggregateCounts(requestId);
            return hrcCommandStatusByStageId;
          } finally {
            lock.readLock().unlock();
          }
        }
      });
      .build();
   }
 
   @RequiresSession
@@ -665,16 +655,37 @@ public class HostRoleCommandDAO {
 
 
   /**
   * Finds the counts of tasks for a request and groups them by stage id.
   * @param requestId the request id
   * Finds the counts of tasks for a request and groups them by stage id. If
   * caching is enabled, this will first consult the cache. Cache misses will
   * then defer to loading the data from the database and then caching the
   * result.
   *
   * @param requestId
   *          the request id
    * @return the map of stage-to-summary objects
    */
   public Map&lt;Long, HostRoleCommandStatusSummaryDTO&gt; findAggregateCounts(Long requestId) {
    if (hostRoleCommandStatusSummaryCacheEnabled) {
      return hrcStatusSummaryCache.getUnchecked(requestId);
    if (!hostRoleCommandStatusSummaryCacheEnabled) {
      return loadAggregateCounts(requestId);
     }
    else {
      return loadAggregateCounts(requestId); // if caching not enabled fall back to fetching through JPA

    Map&lt;Long, HostRoleCommandStatusSummaryDTO&gt; map = hrcStatusSummaryCache.getIfPresent(requestId);
    if (null != map) {
      return map;
    }

    // ensure that we wait for any running transactions working on this cache to
    // complete
    ReadWriteLock lock = transactionLocks.getLock(LockArea.HRC_STATUS_CACHE);
    lock.readLock().lock();

    try {
      map = loadAggregateCounts(requestId);
      hrcStatusSummaryCache.put(requestId, map);

      return map;
    } finally {
      lock.readLock().unlock();
     }
   }
 
- 
2.19.1.windows.1

</unit>
