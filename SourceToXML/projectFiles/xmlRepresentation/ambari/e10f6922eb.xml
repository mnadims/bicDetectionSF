<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/ambari/e10f6922eb.java"><expr_stmt><expr><name>From</name> <name>e10f6922eb972c581102b75d7fa50eabe0487fa2</name> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Jonathan</name> <name><name>Hurley</name> <argument_list type="generic">&lt;<argument><name>jhurley</name><annotation>@<name><name>hortonworks</name><operator>.</operator><name>com</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Mon</name></expr><operator>,</operator> <expr><literal type="number">9</literal> <name>Jan</name> <literal type="number">2017</literal> <literal type="number">20</literal><operator>:</operator><literal type="number">51</literal><operator>:</operator><literal type="number">20</literal> <operator>-</operator><literal type="number">0500</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>AMBARI</name><operator>-</operator><literal type="number">19435</literal> <operator>-</operator> <name>NodeManager</name> <name>restart</name> <name>fails</name> <name>during</name> <name>HOU</name></expr></expr_stmt> <if_stmt><if>if it is
 on same host as RM <condition>(<expr><name>jonathanhurley</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>ControllerModule</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>internal</name><operator>/</operator><name><name>UpgradeResourceProvider</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">13</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>stageplanner</name><operator>/</operator><name><name>RoleGraph</name><operator>.</operator><name>java</name></name> <operator>|</operator> <literal type="number">120</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name><name>Cluster</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">8</literal> <operator>++</operator>
 <operator>...</operator><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name><name>UpgradeContext</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">43</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name><name>UpgradeContextFactory</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">47</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name>cluster</name><operator>/</operator><name><name>ClusterImpl</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">17</literal> <operator>++</operator><operator>+</operator>
 <operator>...</operator><operator>/</operator><name>stack</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>HostOrderGrouping</name><operator>.</operator><name>java</name></name>      <operator>|</operator> <literal type="number">114</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>state</name><operator>/</operator><name>stack</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>StageWrapper</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">11</literal> <operator>++</operator>
 <operator>...</operator><operator>/</operator><name>state</name><operator>/</operator><name>stack</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>TaskWrapper</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">14</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name>agent</name><operator>/</operator><name><name>AgentResourceTest</name><operator>.</operator><name>java</name></name>       <operator>|</operator>   <literal type="number">3</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>KerberosHelperTest</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator>
 <operator>...</operator><name><name>ctiveWidgetLayoutResourceProviderTest</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">3</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name><name>StackUpgradeConfigurationMergeTest</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><name><name>UserAuthorizationResourceProviderTest</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">3</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>internal</name><operator>/</operator><name><name>UserResourceProviderTest</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">3</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>metadata</name><operator>/</operator><name><name>RoleGraphTest</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">73</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name><name>UpgradeHelperTest</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  <literal type="number">74</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>cluster</name><operator>/</operator><name><name>ClusterEffectiveVersionTest</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>HDP</name><operator>/</operator><literal type="number">2.1.1</literal><operator>/</operator><name>services</name><operator>/</operator><name>HBASE</name><operator>/</operator><name><name>metainfo</name><operator>.</operator><name>xml</name></name>     <operator>|</operator>  <literal type="number">44</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator>
 <literal type="number">20</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">553</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">55</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name><name>UpgradeContextFactory</name><operator>.</operator><name>java</name></name>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>resources</name><operator>/</operator><name>stacks</name><operator>/</operator><name>HDP</name><operator>/</operator><literal type="number">2.1.1</literal><operator>/</operator><name>services</name><operator>/</operator><name>HBASE</name><operator>/</operator><name><name>metainfo</name><operator>.</operator><name>xml</name></name>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>ControllerModule</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>ControllerModule</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">9c93c6089e</literal><operator>..</operator><name>b7c9e85ab8</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>ControllerModule</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>ControllerModule</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">124</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">124</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt></block_content></block></if></if_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>ServiceComponentHostFactory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>ServiceComponentImpl</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>ServiceFactory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>ServiceImpl</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>UpgradeContextFactory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>cluster</name><operator>.</operator><name>ClusterFactory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>cluster</name><operator>.</operator><name>ClusterImpl</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>cluster</name><operator>.</operator><name>ClustersImpl</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">477</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">478</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ControllerModule</name> extends <name>AbstractModule</name> <block>{
     <expr><call><name>install</name><argument_list>(<argument><expr><operator>new</operator> <call><name>FactoryModuleBuilder</name><argument_list>()</argument_list></call><operator>.</operator><call><name>build</name><argument_list>(<argument><expr><name><name>StackManagerFactory</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>install</name><argument_list>(<argument><expr><operator>new</operator> <call><name>FactoryModuleBuilder</name><argument_list>()</argument_list></call><operator>.</operator><call><name>build</name><argument_list>(<argument><expr><name><name>ExecutionCommandWrapperFactory</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>install</name><argument_list>(<argument><expr><operator>new</operator> <call><name>FactoryModuleBuilder</name><argument_list>()</argument_list></call><operator>.</operator><call><name>build</name><argument_list>(<argument><expr><name><name>MetricPropertyProviderFactory</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>install</name><argument_list>(<argument><expr><operator>new</operator> <call><name>FactoryModuleBuilder</name><argument_list>()</argument_list></call><operator>.</operator><call><name>build</name><argument_list>(<argument><expr><name><name>UpgradeContextFactory</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
     <expr><call><name>bind</name><argument_list>(<argument><expr><name><name>HostRoleCommandFactory</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>to</name><argument_list>(<argument><expr><name><name>HostRoleCommandFactoryImpl</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>bind</name><argument_list>(<argument><expr><name><name>SecurityHelper</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toInstance</name><argument_list>(<argument><expr><call><name><name>SecurityHelperImpl</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>UpgradeResourceProvider</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>UpgradeResourceProvider</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">5191e835ad</literal><operator>..</operator><literal type="number">4c01964337</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>UpgradeResourceProvider</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>UpgradeResourceProvider</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">97</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">97</literal></expr>,<expr><literal type="number">7</literal> @@</expr> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>ServiceInfo</name></name>;</import></block></expr></expr_stmt>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>StackId</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>StackInfo</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>UpgradeContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>UpgradeContextFactory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>UpgradeHelper</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>UpgradeHelper</name><operator>.</operator><name>UpgradeGroupHolder</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>stack</name><operator>.</operator><name>ConfigUpgradePack</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">290</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">291</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>UpgradeResourceProvider</name> extends <name>AbstractControllerResourceProvider</name>
   @<name>Inject</name>
   <specifier>private</specifier> <specifier>static</specifier> <name>Gson</name> <name>s_gson</name></expr>;</expr_stmt>
 
  <comment type="block" format="javadoc">/**
   * Used to create instances of {@link UpgradeContext} with injected
   * dependencies.
   */</comment>
  <decl_stmt><decl><annotation>@<name>Inject</name></annotation>
  <type><specifier>private</specifier> <specifier>static</specifier> <name>UpgradeContextFactory</name></type> <name>s_upgradeContextFactory</name></decl>;</decl_stmt>

   <static>static <block>{<block_content>
     <comment type="line">// properties</comment>
     <expr_stmt><expr><call><name><name>PROPERTY_IDS</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>UPGRADE_CLUSTER_NAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">385</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">393</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>UpgradeResourceProvider</name> extends <name>AbstractControllerResourceProvider</name></expr></expr_stmt>
           </block_content>}</block></static>
         }
 
        final <decl_stmt><decl><type><name>UpgradeContext</name></type> <name>upgradeContext</name> <init>= <expr><operator>new</operator> <call><name>UpgradeContext</name><argument_list>(<argument><expr><name>cluster</name></expr></argument>, <argument><expr><name>upgradeType</name></expr></argument>, <argument><expr><name>direction</name></expr></argument>,
            <argument><expr><name>requestMap</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier>final</specifier> <name>UpgradeContext</name></type> <name>upgradeContext</name> <init>= <expr><call><name><name>s_upgradeContextFactory</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><name>cluster</name></expr></argument>, <argument><expr><name>upgradeType</name></expr></argument>,
            <argument><expr><name>direction</name></expr></argument>, <argument><expr><name>requestMap</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
         <decl_stmt><decl><type><name>UpgradePack</name></type> <name>upgradePack</name> <init>= <expr><call><name>validateRequest</name><argument_list>(<argument><expr><name>upgradeContext</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <expr_stmt><expr><call><name><name>upgradeContext</name><operator>.</operator><name>setUpgradePack</name></name><argument_list>(<argument><expr><name>upgradePack</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1475</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">1483</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>UpgradeResourceProvider</name> extends <name>AbstractControllerResourceProvider</name></expr></expr_stmt>
     }
 
     s_commandExecutionHelper<expr_stmt><expr><operator>.</operator><call><name>get</name><argument_list>()</argument_list></call><operator>.</operator><call><name>addExecutionCommandsToStage</name><argument_list>(<argument><expr><name>actionContext</name></expr></argument>, <argument><expr><name>stage</name></expr></argument>, <argument><expr><name>requestParams</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

     <expr_stmt><expr><call><name><name>request</name><operator>.</operator><name>addStages</name></name><argument_list>(<argument><expr><call><name><name>Collections</name><operator>.</operator><name>singletonList</name></name><argument_list>(<argument><expr><name>stage</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   }
 
diff <expr_stmt><expr><operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>stageplanner</name><operator>/</operator><name><name>RoleGraph</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>stageplanner</name><operator>/</operator><name><name>RoleGraph</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">404e4ffa64</literal><operator>..</operator><literal type="number">65a86c00f7</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>stageplanner</name><operator>/</operator><name><name>RoleGraph</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>stageplanner</name><operator>/</operator><name><name>RoleGraph</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">16</literal> @@</expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>stageplanner</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>TreeMap</name></name>;</import>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>Role</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>RoleCommand</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>actionmanager</name><operator>.</operator><name>CommandExecutionType</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>actionmanager</name><operator>.</operator><name>HostRoleCommand</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>actionmanager</name><operator>.</operator><name>HostRoleCommandFactory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>actionmanager</name><operator>.</operator><name>Stage</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>actionmanager</name><operator>.</operator><name>StageFactory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>metadata</name><operator>.</operator><name>RoleCommandOrder</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">48</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">51</literal></expr><operator>,</operator><expr><literal type="number">20</literal> @@ <specifier>public</specifier> <name>class</name> <name>RoleGraph</name> <block>{
   @<expr><name>Inject</name>
   <specifier>private</specifier> <name>StageFactory</name> <name>stageFactory</name></expr>;
 
  <comment type="block" format="javadoc">/**
   * Used for created {@link HostRoleCommand}s when building structures to
   * represent an ordered set of stages.
   */</comment>
  @<expr><name>Inject</name>
  <specifier>private</specifier> <name>HostRoleCommandFactory</name> <name>hrcFactory</name></expr>;

   @<expr><name>AssistedInject</name>
   <specifier>public</specifier> <call><name>RoleGraph</name><argument_list>()</argument_list></call> <block>{
   }</block>
 
   @<name>AssistedInject</name>
   <specifier>public</specifier> <call><name>RoleGraph</name><argument_list>(<argument><expr><annotation>@<name>Assisted</name></annotation> <name>RoleCommandOrder</name> <name>rd</name></expr></argument>)</argument_list></call> <block>{
    <expr><name><name>this</name><operator>.</operator><name>roleDependencies</name></name> <operator>=</operator> <name>rd</name></expr>;
    <expr><name>roleDependencies</name> <operator>=</operator> <name>rd</name></expr>;
   }</block>
 
   <specifier>public</specifier> <name>CommandExecutionType</name> <call><name>getCommandExecutionType</name><argument_list>()</argument_list></call> <block>{
@@ <expr><operator>-</operator><literal type="number">67</literal></expr>,<expr><literal type="number">15</literal> <operator>+</operator><literal type="number">77</literal></expr>,<expr><literal type="number">41</literal> @@ <specifier>public</specifier> <name>class</name> <name>RoleGraph</name> <block>{
 
   <comment type="block" format="javadoc">/**
    * Given a stage builds a DAG of all execution commands within the stage.
   *
   * @see #getStages()
    */</comment>
   <expr><specifier>public</specifier> <name>void</name> <call><name>build</name><argument_list>(<argument><expr><name>Stage</name> <name>stage</name></expr></argument>)</argument_list></call> <block>{
     <if_stmt><if>if <condition>(<expr><name>stage</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
       <throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><literal type="string">"Null stage"</literal></expr></argument>)</argument_list></call></expr>;</throw>
     <expr_stmt/></block_content></block></if></if_stmt>}</block>
    <name>graph</name> <operator>=</operator> <operator>new</operator> <call><name><name>TreeMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>RoleGraphNode</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;

    <if_stmt><if>if <condition>(<expr><name>commandExecutionType</name> <operator>==</operator> <name><name>CommandExecutionType</name><operator>.</operator><name>DEPENDENCY_ORDERED</name></name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Build stage with DEPENDENCY_ORDERED commandExecutionType: {} "</literal></expr></argument>,
          <argument><expr><call><name><name>stage</name><operator>.</operator><name>getRequestContext</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt/></block_content></block></if></if_stmt>}</block>

     <name>initialStage</name> <operator>=</operator> <name>stage</name></expr>;
 
     <expr><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>HostRoleCommand</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name> <name>hostRoleCommands</name> <operator>=</operator> <call><name><name>stage</name><operator>.</operator><name>getHostRoleCommands</name></name><argument_list>()</argument_list></call></expr>;
    <expr><call><name>build</name><argument_list>(<argument><expr><name>hostRoleCommands</name></expr></argument>)</argument_list></call></expr>;
  }</block>

  <comment type="block" format="javadoc">/**
   * Initializes {@link #graph} with the supplied unordered commands. The
   * commands specified are in the following format: Input:
   * 
   * &lt;pre&gt;
   * {c6401={NAMENODE=STOP}, c6402={DATANODE=STOP}, NODEMANAGER=STOP}}
   * &lt;/pre&gt;
   *
   * @param hostRoleCommands
   *          the unordered commands to build a DAG from. The map is keyed first
   *          by host and the for each host it is keyed by {@link Role} to
   *          {@link RoleCommand}.
   */</comment>
  <specifier>private</specifier> <name>void</name> <call><name>build</name><argument_list>(<argument><expr><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>HostRoleCommand</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name> <name>hostRoleCommands</name></expr></argument>)</argument_list></call> <block>{
    <expr><name>graph</name> <operator>=</operator> <operator>new</operator> <call><name><name>TreeMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>RoleGraphNode</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;

     <for>for <control>(<init><decl><type><name>String</name></type> <name>host</name> <range>: <expr><call><name><name>hostRoleCommands</name><operator>.</operator><name>keySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
       <for>for <control>(<init><decl><type><name>String</name></type> <name>role</name> <range>: <expr><call><name><name>hostRoleCommands</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>host</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>keySet</name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
         <decl_stmt><decl><type><name>HostRoleCommand</name></type> <name>hostRoleCommand</name> <init>= <expr><call><name><name>hostRoleCommands</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>host</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name>role</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">110</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">146</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>RoleGraph</name> <block>{
           }</block></expr></expr_stmt></block_content></block></for></block_content></block></for>
         }</block></expr>
       }</block></expr></expr_stmt>
    } else <block>{<block_content>
      <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Build stage with DEPENDENCY_ORDERED commandExecutionType: {} "</literal></expr></argument>, <argument><expr><call><name><name>stage</name><operator>.</operator><name>getRequestContext</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block>
   }

   <comment type="block" format="javadoc">/**
    * This method return more detailed RoleCommand type. For now, i've added code
    * only for RESTART name of CUSTOM COMMAND, but in future i think all other will be added too.
@@ -136,7 +171,7 @@ public class RoleGraph {
     List&lt;RoleGraphNode&gt; firstStageNodes = new ArrayList&lt;RoleGraphNode&gt;();
     while (!graph.isEmpty()) {
       if (LOG.isDebugEnabled()) {
        LOG.debug(this.stringifyGraph());
        LOG.debug(stringifyGraph());
       }
 
       for (String role: graph.keySet()) {
@@ -151,7 +186,7 @@ public class RoleGraph {
       //Remove first stage nodes from the graph, we know that none of
       //these nodes have an incoming edges.
       for (RoleGraphNode rgn : firstStageNodes) {
        if (this.sameHostOptimization) {
        if (sameHostOptimization) {
           //Perform optimization
         }
         removeZeroInDegreeNode(rgn.getRole().toString());
@@ -161,12 +196,83 @@ public class RoleGraph {
     return stageList;
   }
 
  /**
   * Gets a representation of the role ordering of the specified commands
   * without constructing {@link Stage} instances. The commands to order are
   * supplied as mapping of host to role/command. Each item of the returned list
   * represents a single stage. The map is of host to commands. For example:
   * &lt;br/&gt;
   * &lt;br/&gt;
   * Input:
   * &lt;pre&gt;
   * {c6401={NAMENODE=STOP}, c6402={DATANODE=STOP}, NODEMANAGER=STOP}}
   * &lt;/pre&gt;
   *
   * Output:
   * &lt;pre&gt;
   * [{c6402=[NODEMANAGER/STOP, DATANODE-STOP]}, c6401=[NAMENODE/STOP]]
   *
   * &lt;pre&gt;
   *
   * @param unorderedCommands
   *          a mapping of {@link Role} to {@link HostRoleCommand} by host.
   * @return and ordered list where each item represents a single stage and each
   *         stage's commands are mapped by host.
   */</comment>
  public <function><type><name><name>List</name><argument_list type="generic">&lt;<argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>List</name><argument_list type="generic">&lt;<argument><name>HostRoleCommand</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>getOrderedHostRoleCommands</name><parameter_list>(
      <parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>HostRoleCommand</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>unorderedCommands</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>build</name><argument_list>(<argument><expr><name>unorderedCommands</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line">// represents an ordered list of stages</comment>
    <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>List</name><argument_list type="generic">&lt;<argument><name>HostRoleCommand</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>orderedCommands</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>RoleGraphNode</name></argument>&gt;</argument_list></name></type> <name>firstStageNodes</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>RoleGraphNode</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <while>while <condition>(<expr><operator>!</operator><call><name><name>graph</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <for>for <control>(<init><decl><type><name>String</name></type> <name>role</name> <range>: <expr><call><name><name>graph</name><operator>.</operator><name>keySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
        <decl_stmt><decl><type><name>RoleGraphNode</name></type> <name>rgn</name> <init>= <expr><call><name><name>graph</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>role</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><call><name><name>rgn</name><operator>.</operator><name>getInDegree</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name><name>firstStageNodes</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>rgn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
      </block_content>}</block></for>

      <comment type="line">// represents a stage</comment>
      <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>List</name><argument_list type="generic">&lt;<argument><name>HostRoleCommand</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>commandsPerHost</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

      <for>for <control>(<init><decl><type><name>RoleGraphNode</name></type> <name>rgn</name> <range>: <expr><name>firstStageNodes</name></expr></range></decl></init>)</control> <block>{<block_content>
        <comment type="line">// for every host for this stage, create the ordered commands</comment>
        <for>for <control>(<init><decl><type><name>String</name></type> <name>host</name> <range>: <expr><call><name><name>rgn</name><operator>.</operator><name>getHosts</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
          <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>HostRoleCommand</name></argument>&gt;</argument_list></name></type> <name>commands</name> <init>= <expr><call><name><name>commandsPerHost</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>host</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <if_stmt><if>if <condition>(<expr><literal type="null">null</literal> <operator>==</operator> <name>commands</name></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><name>commands</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>commandsPerHost</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>host</name></expr></argument>, <argument><expr><name>commands</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          </block_content>}</block></if></if_stmt>

          <decl_stmt><decl><type><name>HostRoleCommand</name></type> <name>hrc</name> <init>= <expr><call><name><name>hrcFactory</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><name>host</name></expr></argument>, <argument><expr><call><name><name>rgn</name><operator>.</operator><name>getRole</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><call><name><name>rgn</name><operator>.</operator><name>getCommand</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <expr_stmt><expr><call><name><name>commands</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>hrc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
      </block_content>}</block></for>

      <comment type="line">// add the stage to the list of stages</comment>
      <expr_stmt><expr><call><name><name>orderedCommands</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>commandsPerHost</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <comment type="line">// Remove first stage nodes from the graph, we know that none of</comment>
      <comment type="line">// these nodes have an incoming edges.</comment>
      <for>for <control>(<init><decl><type><name>RoleGraphNode</name></type> <name>rgn</name> <range>: <expr><name>firstStageNodes</name></expr></range></decl></init>)</control> <block>{<block_content>
        <expr_stmt><expr><call><name>removeZeroInDegreeNode</name><argument_list>(<argument><expr><call><name><name>rgn</name><operator>.</operator><name>getRole</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></for>

      <expr_stmt><expr><call><name><name>firstStageNodes</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>

    <return>return <expr><name>orderedCommands</name></expr>;</return>
  </block_content>}</block></function>

   <comment type="block" format="javadoc">/**
    * Assumes there are no incoming edges.
    */</comment>
   <function><type><specifier>private</specifier> <specifier>synchronized</specifier> <name>void</name></type> <name>removeZeroInDegreeNode</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>role</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <decl_stmt><decl><type><name>RoleGraphNode</name></type> <name>nodeToRemove</name> <init>= <expr><call><name><name>graph</name><operator>.</operator><name>remove</name></name><argument_list>(<argument><expr><name>role</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <for>for <control>(<init><decl><type><name>RoleGraphNode</name></type> <name>edgeNode</name><range>: <expr><call><name><name>nodeToRemove</name><operator>.</operator><name>getEdges</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
    <for>for <control>(<init><decl><type><name>RoleGraphNode</name></type> <name>edgeNode</name> <range>: <expr><call><name><name>nodeToRemove</name><operator>.</operator><name>getEdges</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
       <expr_stmt><expr><call><name><name>edgeNode</name><operator>.</operator><name>decrementInDegree</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></for>
   </block_content>}</block></for>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name><name>Cluster</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name><name>Cluster</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>c6ae0502fb</name><operator>..</operator><literal type="number">4e37c926af</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name><name>Cluster</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name><name>Cluster</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">27</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">27</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>AmbariException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>ClusterResponse</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>ServiceConfigVersionResponse</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>events</name><operator>.</operator><name>ClusterConfigChangedEvent</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>metadata</name><operator>.</operator><name>RoleCommandOrder</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>ClusterVersionEntity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>HostEntity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>HostVersionEntity</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">738</literal></expr><operator>,</operator><expr><literal type="number">4</literal> <operator>+</operator><literal type="number">739</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> interface <name>Cluster</name> <block>{
    <expr><operator>*</operator> @</expr><return>return <expr><name>number</name> <name>of</name> <name>hosts</name> <name>that</name> <name>form</name> <name>the</name> <name>cluster</name>
    <operator>*</operator><operator>/</operator>
   <name>int</name>  <call><name>getClusterSize</name><argument_list>()</argument_list></call></expr>;</return>

  <comment type="block" format="javadoc">/**
   * Gets a new instance of a {@link RoleCommandOrder} for this cluster.
   *
   * @return the role command order instance (not {@code null}).
   */</comment>
  <name>RoleCommandOrder</name> <call><name>getRoleCommandOrder</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
 </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name><name>UpgradeContext</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name><name>UpgradeContext</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">8e7e5de334</literal><operator>..</operator><literal type="number">1d51b0d818</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name><name>UpgradeContext</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name><name>UpgradeContext</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">26</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">26</literal></expr><operator>,</operator><expr><literal type="number">19</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>annotations</name><operator>.</operator><name>Experimental</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>annotations</name><operator>.</operator><name>ExperimentalFeature</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>actionmanager</name><operator>.</operator><name>HostRoleCommandFactory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>api</name><operator>.</operator><name>services</name><operator>.</operator><name>AmbariMetaInfo</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>stack</name><operator>.</operator><name>MasterHostResolver</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>stageplanner</name><operator>.</operator><name>RoleGraphFactory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>stack</name><operator>.</operator><name>UpgradePack</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>stack</name><operator>.</operator><name>upgrade</name><operator>.</operator><name>Direction</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>stack</name><operator>.</operator><name>upgrade</name><operator>.</operator><name>Grouping</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>stack</name><operator>.</operator><name>upgrade</name><operator>.</operator><name>UpgradeScope</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>stack</name><operator>.</operator><name>upgrade</name><operator>.</operator><name>UpgradeType</name></name>;</import>
 
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>Inject</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>assistedinject</name><operator>.</operator><name>Assisted</name></name>;</import>

 <comment type="block" format="javadoc">/**
  * Used to hold various helper objects required to process an upgrade pack.
  */</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">120</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">126</literal></expr><operator>,</operator><expr><literal type="number">20</literal> @@ <specifier>public</specifier> <name>class</name> <name>UpgradeContext</name> <block>{
 
   <expr><specifier>private</specifier> <name>UpgradeScope</name> <name>m_scope</name> <operator>=</operator> <name><name>UpgradeScope</name><operator>.</operator><name>ANY</name></name></expr>;
 
  <comment type="block" format="javadoc">/**
   * Used by some {@link Grouping}s to generate commands. It is exposed here
   * mainly for injection purposes since the XML is not created by Guice.
   */</comment>
  @<expr><name>Inject</name>
  <specifier>private</specifier> <name>HostRoleCommandFactory</name> <name>m_hrcFactory</name></expr>;

  <comment type="block" format="javadoc">/**
   * Used by some {@link Grouping}s to determine command ordering. It is exposed
   * here mainly for injection purposes since the XML is not created by Guice.
   */</comment>
  @<expr><name>Inject</name>
  <specifier>private</specifier> <name>RoleGraphFactory</name> <name>m_roleGraphFactory</name></expr>;

   <comment type="block" format="javadoc">/**
    * Constructor.
    *
@@ -132,8 +152,9 @@ public class UpgradeContext {
    * @param upgradeRequestMap
    *          the original map of paramters used to create the upgrade
    */</comment>
  <expr><specifier>public</specifier> <call><name>UpgradeContext</name><argument_list>(<argument><expr><name>Cluster</name> <name>cluster</name></expr></argument>, <argument><expr><name>UpgradeType</name> <name>type</name></expr></argument>, <argument><expr><name>Direction</name> <name>direction</name></expr></argument>,
      <argument><expr><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name> <name>upgradeRequestMap</name></expr></argument>)</argument_list></call> <block>{
  @<expr><name>Inject</name>
  <specifier>public</specifier> <call><name>UpgradeContext</name><argument_list>(<argument><expr><annotation>@<name>Assisted</name></annotation> <name>Cluster</name> <name>cluster</name></expr></argument>, <argument><expr><annotation>@<name>Assisted</name></annotation> <name>UpgradeType</name> <name>type</name></expr></argument>,
      <argument><expr><annotation>@<name>Assisted</name></annotation> <name>Direction</name> <name>direction</name></expr></argument>, <argument><expr><annotation>@<name>Assisted</name></annotation> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name> <name>upgradeRequestMap</name></expr></argument>)</argument_list></call> <block>{
     <expr><name>m_cluster</name> <operator>=</operator> <name>cluster</name></expr>;
     <expr><name>m_type</name> <operator>=</operator> <name>type</name></expr>;
     <expr><name>m_direction</name> <operator>=</operator> <name>direction</name></expr>;
@@ <expr><operator>-</operator><literal type="number">482</literal></expr>,<expr><literal type="number">4</literal> <operator>+</operator><literal type="number">503</literal></expr>,<expr><literal type="number">22</literal> @@ <specifier>public</specifier> <name>class</name> <name>UpgradeContext</name> <block>{
   <expr><specifier>public</specifier> <name>boolean</name> <call><name>isScoped</name><argument_list>(<argument><expr><name>UpgradeScope</name> <name>scope</name></expr></argument>)</argument_list></call> <block>{
     <return>return <expr><call><name><name>m_scope</name><operator>.</operator><name>isScoped</name></name><argument_list>(<argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;</return></block></expr>
   }</block>

  <comment type="block" format="javadoc">/**
   * Gets the injected instance of a {@link RoleGraphFactory}.
   *
   * @return a {@link RoleGraphFactory} instance (never {@code null}).
   */</comment>
  <specifier>public</specifier> <name>RoleGraphFactory</name> <call><name>getRoleGraphFactory</name><argument_list>()</argument_list></call> <block>{
    <return>return <expr><name>m_roleGraphFactory</name></expr>;</return></block></expr>
  }</block>

  <comment type="block" format="javadoc">/**
   * Gets the injected instance of a {@link HostRoleCommandFactory}.
   *
   * @return a {@link HostRoleCommandFactory} instance (never {@code null}).
   */</comment>
  <specifier>public</specifier> <name>HostRoleCommandFactory</name> <call><name>getHostRoleCommandFactory</name><argument_list>()</argument_list></call> <block>{
    <return>return <expr><name>m_hrcFactory</name></expr>;</return></block></expr>
  }</block></expr>
 }</block>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name><name>UpgradeContextFactory</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name><name>UpgradeContextFactory</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">0000000000..4b988e8b1f</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name><name>UpgradeContextFactory</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">47</literal> @@</expr></expr_stmt>
<comment type="block" format="javadoc">/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>stack</name><operator>.</operator><name>upgrade</name><operator>.</operator><name>Direction</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>stack</name><operator>.</operator><name>upgrade</name><operator>.</operator><name>UpgradeType</name></name>;</import>

<comment type="block" format="javadoc">/**
 * The {@link UpgradeContextFactory} is used to create dependency-injected
 * instances of {@link UpgradeContext}s.
 */</comment>
<interface><specifier>public</specifier> interface <name>UpgradeContextFactory</name> <block>{

  <comment type="block" format="javadoc">/**
   * Creates an {@link UpgradeContext} which is injected with dependencies.
   *
   * @param cluster
   *          the cluster that the upgrade is for
   * @param type
   *          the type of upgrade, either rolling or non_rolling
   * @param direction
   *          the direction for the upgrade
   * @param upgradeRequestMap
   *          the original map of paramters used to create the upgrade
   *
   * @return an initialized {@link UpgradeContext}.
   */</comment>
  <function_decl><type><name>UpgradeContext</name></type> <name>create</name><parameter_list>(<parameter><decl><type><name>Cluster</name></type> <name>cluster</name></decl></parameter>, <parameter><decl><type><name>UpgradeType</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><name>Direction</name></type> <name>direction</name></decl></parameter>,
      <parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>upgradeRequestMap</name></decl></parameter>)</parameter_list>;</function_decl>
}</block></interface>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name>cluster</name><operator>/</operator><name><name>ClusterImpl</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name>cluster</name><operator>/</operator><name><name>ClusterImpl</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">46e2f8e386</literal><operator>..</operator><literal type="number">6455d6ea37</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name>cluster</name><operator>/</operator><name><name>ClusterImpl</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name>cluster</name><operator>/</operator><name><name>ClusterImpl</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">47</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">47</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>ConfigGroupNotFoundException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>DuplicateResourceException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>ObjectNotFoundException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>ParentObjectNotFoundException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>RoleCommand</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>ServiceComponentHostNotFoundException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>ServiceComponentNotFoundException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>ServiceNotFoundException</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">68</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">69</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>events</name><operator>.</operator><name>jpa</name><operator>.</operator><name>JPAEvent</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>events</name><operator>.</operator><name>publishers</name><operator>.</operator><name>AmbariEventPublisher</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>events</name><operator>.</operator><name>publishers</name><operator>.</operator><name>JPAEventPublisher</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>logging</name><operator>.</operator><name>LockFactory</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>metadata</name><operator>.</operator><name>RoleCommandOrder</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>metadata</name><operator>.</operator><name>RoleCommandOrderProvider</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>RequiresSession</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>cache</name><operator>.</operator><name>HostConfigMapping</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>dao</name><operator>.</operator><name>AlertDefinitionDAO</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">306</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">309</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>ClusterImpl</name> implements <name>Cluster</name> <block>{
   @<expr><name>Inject</name>
   <specifier>private</specifier> <name>JPAEventPublisher</name> <name>jpaEventPublisher</name></expr>;
 
  <comment type="block" format="javadoc">/**
   * Used for getting instances of {@link RoleCommand} for this cluster.
   */</comment>
  @<expr><name>Inject</name>
  <specifier>private</specifier> <name>RoleCommandOrderProvider</name> <name>roleCommandOrderProvider</name></expr>;

   <comment type="block" format="javadoc">/**
    * A simple cache for looking up {@code cluster-env} properties for a cluster.
    * This map is changed whenever {{cluster-env}} is changed and we receive a
@@ -3474,4 +3483,12 @@ public class ClusterImpl implements Cluster {
 
     m_clusterPropertyCache.clear();
   }

  /**
   * {@inheritDoc}
   */</comment>
  @<expr><name>Override</name>
  <specifier>public</specifier> <name>RoleCommandOrder</name> <call><name>getRoleCommandOrder</name><argument_list>()</argument_list></call> <block>{
    <return>return <expr><call><name><name>roleCommandOrderProvider</name><operator>.</operator><name>getRoleCommandOrder</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</return></block></expr>
  }</block></expr></expr_stmt>
 }
diff <expr_stmt><expr><operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name>stack</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>HostOrderGrouping</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name>stack</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>HostOrderGrouping</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">5d723f5715</literal><operator>..</operator><name>abb2aab5f2</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name>stack</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>HostOrderGrouping</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name>stack</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>HostOrderGrouping</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">22</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>stack</name><operator>.</operator><name>upgrade</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 
 <import>import <name><name>javax</name><operator>.</operator><name>xml</name><operator>.</operator><name>bind</name><operator>.</operator><name>annotation</name><operator>.</operator><name>XmlType</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>AmbariException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>Role</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>RoleCommand</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>actionmanager</name><operator>.</operator><name>HostRoleCommand</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>actionmanager</name><operator>.</operator><name>HostRoleCommandFactory</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>api</name><operator>.</operator><name>services</name><operator>.</operator><name>AmbariMetaInfo</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>metadata</name><operator>.</operator><name>RoleCommandOrder</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>stack</name><operator>.</operator><name>HostsType</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>stageplanner</name><operator>.</operator><name>RoleGraph</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>stageplanner</name><operator>.</operator><name>RoleGraphFactory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>Cluster</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>ComponentInfo</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>ServiceComponentHost</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">114</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">123</literal></expr><operator>,</operator><expr><literal type="number">16</literal> @@ <specifier>public</specifier> <name>class</name> <name>HostOrderGrouping</name> extends <name>Grouping</name> <block>{
     }</block>
 
     <comment type="block" format="javadoc">/**
     * @param upgradeContext  the context
     * @param hosts           the list of hostnames
     * @return  the wrappers for a host
     * Builds the stages for each host which typically consist of a STOP, a
     * manual wait, and a START. The starting of components can be a single
     * stage or may consist of several stages if the host components have
     * dependencies on each other.
     *
     * @param upgradeContext
     *          the context
     * @param hosts
     *          the list of hostnames
     * @return the wrappers for a host
      */</comment>
     <specifier>private</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>StageWrapper</name></argument>&gt;</argument_list></name> <call><name>buildHosts</name><argument_list>(<argument><expr><name>UpgradeContext</name> <name>upgradeContext</name></expr></argument>, <argument><expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name> <name>hosts</name></expr></argument>)</argument_list></call> <block>{
       <if_stmt><if>if <condition>(<expr><call><name><name>CollectionUtils</name><operator>.</operator><name>isEmpty</name></name><argument_list>(<argument><expr><name>hosts</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">126</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">142</literal></expr><operator>,</operator><expr><literal type="number">20</literal> @@ <specifier>public</specifier> <name>class</name> <name>HostOrderGrouping</name> extends <name>Grouping</name> <block>{
       <expr><name>Cluster</name> <name>cluster</name> <operator>=</operator> <call><name><name>upgradeContext</name><operator>.</operator><name>getCluster</name></name><argument_list>()</argument_list></call></expr>;
       <name><name>List</name><argument_list type="generic">&lt;<argument><name>StageWrapper</name></argument>&gt;</argument_list></name> <name>wrappers</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
 
      <for>for <control>(<init><decl><type><name>String</name></type> <name>hostName</name> <range>: <expr><name>hosts</name></expr></range></decl></init>)</control> <block>{<block_content>
      <decl_stmt><decl><type><name>HostRoleCommandFactory</name></type> <name>hrcFactory</name> <init>= <expr><call><name><name>upgradeContext</name><operator>.</operator><name>getHostRoleCommandFactory</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
      <for>for <control>(<init><decl><type><name>String</name></type> <name>hostName</name> <range>: <expr><name>hosts</name></expr></range></decl></init>)</control> <block>{<block_content>
        <comment type="line">// initialize the collection for all stop tasks for every component on</comment>
        <comment type="line">// the host</comment>
         <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>TaskWrapper</name></argument>&gt;</argument_list></name></type> <name>stopTasks</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>TaskWrapper</name></argument>&gt;</argument_list></name></type> <name>upgradeTasks</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
        <comment type="line">// initialize the collection which will be passed into the RoleGraph for</comment>
        <comment type="line">// ordering</comment>
        <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>HostRoleCommand</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>restartCommandsForHost</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>HostRoleCommand</name></argument>&gt;</argument_list></name></type> <name>restartCommandsByRole</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>restartCommandsForHost</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>hostName</name></expr></argument>, <argument><expr><name>restartCommandsByRole</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// iterating over every host component, build the commands</comment>
         <for>for <control>(<init><decl><type><name>ServiceComponentHost</name></type> <name>sch</name> <range>: <expr><call><name><name>cluster</name><operator>.</operator><name>getServiceComponentHosts</name></name><argument_list>(<argument><expr><name>hostName</name></expr></argument>)</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
           <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>isVersionAdvertised</name><argument_list>(<argument><expr><name>upgradeContext</name></expr></argument>, <argument><expr><name>sch</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
             <continue>continue;</continue>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">149</literal></expr><operator>,</operator><expr><literal type="number">31</literal> <operator>+</operator><literal type="number">174</literal></expr><operator>,</operator><expr><literal type="number">90</literal> @@ <specifier>public</specifier> <name>class</name> <name>HostOrderGrouping</name> extends <name>Grouping</name> <block>{
             <continue>continue;</continue></block></expr></expr_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></for></block_content></block></for></block_content></block></if></if_stmt>
           }</block></expr></expr_stmt>
 
          <comment type="line">// create a STOP task for this host component</comment>
           <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>sch</name><operator>.</operator><name>isClientComponent</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
             <expr_stmt><expr><call><name><name>stopTasks</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>TaskWrapper</name><argument_list>(<argument><expr><call><name><name>sch</name><operator>.</operator><name>getServiceName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>sch</name><operator>.</operator><name>getServiceComponentName</name></name><argument_list>()</argument_list></call></expr></argument>,
                 <argument><expr><call><name><name>Collections</name><operator>.</operator><name>singleton</name></name><argument_list>(<argument><expr><name>hostName</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <call><name>StopTask</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           </block_content>}</block></if></if_stmt>
 
          <comment type="line">// !!! simple restart will do</comment>
          <expr_stmt><expr><call><name><name>upgradeTasks</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>TaskWrapper</name><argument_list>(<argument><expr><call><name><name>sch</name><operator>.</operator><name>getServiceName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>sch</name><operator>.</operator><name>getServiceComponentName</name></name><argument_list>()</argument_list></call></expr></argument>,
              <argument><expr><call><name><name>Collections</name><operator>.</operator><name>singleton</name></name><argument_list>(<argument><expr><name>hostName</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <call><name>RestartTask</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <comment type="line">// generate a placeholder HRC that can be used to generate the</comment>
          <comment type="line">// dependency graph - we must use START here since that's what the</comment>
          <comment type="line">// role command order is defined with - each of these will turn into a</comment>
          <comment type="line">// RESTART when we create the wrappers later on</comment>
          <decl_stmt><decl><type><name>Role</name></type> <name>role</name> <init>= <expr><call><name><name>Role</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><call><name><name>sch</name><operator>.</operator><name>getServiceComponentName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <decl_stmt><decl><type><name>HostRoleCommand</name></type> <name>hostRoleCommand</name> <init>= <expr><call><name><name>hrcFactory</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><name>hostName</name></expr></argument>, <argument><expr><name>role</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>,
              <argument><expr><name><name>RoleCommand</name><operator>.</operator><name>START</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

          <comment type="line">// add the newly created HRC RESTART</comment>
          <expr_stmt><expr><call><name><name>restartCommandsByRole</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>role</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>hostRoleCommand</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         }
 
        if <expr_stmt><expr><operator>(</operator><call><name><name>stopTasks</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call> <operator>&amp;&amp;</operator> <call><name><name>upgradeTasks</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call><operator>)</operator> <block>{
          <expr><call><name><name>LOG</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"No tasks for {}"</literal></expr></argument>, <argument><expr><name>hostName</name></expr></argument>)</argument_list></call></expr>;
        <comment type="line">// short circuit and move to the next host if there are no commands</comment>
        <if_stmt><if>if <condition>(<expr><call><name><name>stopTasks</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call> <operator>&amp;&amp;</operator> <call><name><name>restartCommandsByRole</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"There were no {} commands generated for {}"</literal></expr></argument>,
              <argument><expr><call><name><name>upgradeContext</name><operator>.</operator><name>getDirection</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getText</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>hostName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

           <continue>continue;</continue>
         <expr_stmt/></block_content></block></if></if_stmt>}</block>
 
        <comment type="line">// build the single STOP stage</comment>
         <name>StageWrapper</name> <name>stopWrapper</name> <operator>=</operator> <operator>new</operator> <call><name>StageWrapper</name><argument_list>(<argument><expr><name><name>StageWrapper</name><operator>.</operator><name>Type</name><operator>.</operator><name>STOP</name></name></expr></argument>, <argument><expr><call><name><name>String</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><literal type="string">"Stop on %s"</literal></expr></argument>, <argument><expr><name>hostName</name></expr></argument>)</argument_list></call></expr></argument>,
             <argument><expr><call><name><name>stopTasks</name><operator>.</operator><name>toArray</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>TaskWrapper</name><index>[<expr><call><name><name>stopTasks</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
        <decl_stmt><decl><type><name>StageWrapper</name></type> <name>startWrapper</name> <init>= <expr><operator>new</operator> <call><name>StageWrapper</name><argument_list>(<argument><expr><name><name>StageWrapper</name><operator>.</operator><name>Type</name><operator>.</operator><name>RESTART</name></name></expr></argument>, <argument><expr><call><name><name>String</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><literal type="string">"Start on %s"</literal></expr></argument>, <argument><expr><name>hostName</name></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><call><name><name>upgradeTasks</name><operator>.</operator><name>toArray</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>TaskWrapper</name><index>[<expr><call><name><name>upgradeTasks</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <comment type="line">// now process the HRCs created so that we can create the appropriate</comment>
        <comment type="line">// stage/task wrappers for the RESTARTs</comment>
        <decl_stmt><decl><type><name>RoleGraphFactory</name></type> <name>roleGraphFactory</name> <init>= <expr><call><name><name>upgradeContext</name><operator>.</operator><name>getRoleGraphFactory</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>RoleCommandOrder</name></type> <name>roleCommandOrder</name> <init>= <expr><call><name><name>cluster</name><operator>.</operator><name>getRoleCommandOrder</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>RoleGraph</name></type> <name>roleGraph</name> <init>= <expr><call><name><name>roleGraphFactory</name><operator>.</operator><name>createNew</name></name><argument_list>(<argument><expr><name>roleCommandOrder</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>List</name><argument_list type="generic">&lt;<argument><name>HostRoleCommand</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>stages</name> <init>= <expr><call><name><name>roleGraph</name><operator>.</operator><name>getOrderedHostRoleCommands</name></name><argument_list>(
            <argument><expr><name>restartCommandsForHost</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <comment type="line">// initialize the list of stage wrappers</comment>
        <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>StageWrapper</name></argument>&gt;</argument_list></name></type> <name>stageWrappers</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

        <comment type="line">// for every stage, create a stage wrapper around the tasks</comment>
        <decl_stmt><decl><type><name>int</name></type> <name>phaseCounter</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
        <for>for <control>(<init><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>List</name><argument_list type="generic">&lt;<argument><name>HostRoleCommand</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>stage</name> <range>: <expr><name>stages</name></expr></range></decl></init>)</control> <block>{<block_content>
          <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>HostRoleCommand</name></argument>&gt;</argument_list></name></type> <name>stageCommandsForHost</name> <init>= <expr><call><name><name>stage</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>hostName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <decl_stmt><decl><type><name>String</name></type> <name>stageTitle</name> <init>= <expr><call><name><name>String</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><literal type="string">"Starting components on %s (phase %d)"</literal></expr></argument>, <argument><expr><name>hostName</name></expr></argument>,
              <argument><expr><name>phaseCounter</name><operator>++</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

          <comment type="line">// create task wrappers</comment>
          <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>TaskWrapper</name></argument>&gt;</argument_list></name></type> <name>taskWrappers</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
          <for>for <control>(<init><decl><type><name>HostRoleCommand</name></type> <name>command</name> <range>: <expr><name>stageCommandsForHost</name></expr></range></decl></init>)</control> <block>{<block_content>
            <decl_stmt><decl><type><name>StackId</name></type> <name>stackId</name> <init>= <expr><call><name><name>upgradeContext</name><operator>.</operator><name>getEffectiveStackId</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>String</name></type> <name>componentName</name> <init>= <expr><call><name><name>command</name><operator>.</operator><name>getRole</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>name</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name>String</name></type> <name>serviceName</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>

            <try>try <block>{<block_content>
              <decl_stmt><decl><type><name>AmbariMetaInfo</name></type> <name>ambariMetaInfo</name> <init>= <expr><call><name><name>upgradeContext</name><operator>.</operator><name>getAmbariMetaInfo</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
              <expr_stmt><expr><name>serviceName</name> <operator>=</operator> <call><name><name>ambariMetaInfo</name><operator>.</operator><name>getComponentToService</name></name><argument_list>(<argument><expr><call><name><name>stackId</name><operator>.</operator><name>getStackName</name></name><argument_list>()</argument_list></call></expr></argument>,
                  <argument><expr><call><name><name>stackId</name><operator>.</operator><name>getStackVersion</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>componentName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>AmbariException</name></type> <name>ambariException</name></decl></parameter>)</parameter_list> <block>{<block_content>
              <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>error</name></name><argument_list>(<argument><expr><literal type="string">"Unable to lookup service by component {} for stack {}-{}"</literal></expr></argument>, <argument><expr><name>componentName</name></expr></argument>,
                  <argument><expr><call><name><name>stackId</name><operator>.</operator><name>getStackName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>stackId</name><operator>.</operator><name>getStackVersion</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></catch></try>

            <decl_stmt><decl><type><name>TaskWrapper</name></type> <name>taskWrapper</name> <init>= <expr><operator>new</operator> <call><name>TaskWrapper</name><argument_list>(<argument><expr><name>serviceName</name></expr></argument>, <argument><expr><name>componentName</name></expr></argument>,
                <argument><expr><call><name><name>Collections</name><operator>.</operator><name>singleton</name></name><argument_list>(<argument><expr><name>hostName</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <call><name>RestartTask</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name>taskWrappers</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>taskWrapper</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          </block_content>}</block></for>
 
        <decl_stmt><decl><type><name>String</name></type> <name>message</name> <init>= <expr><call><name><name>String</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><literal type="string">"Please acknowledge that host %s has been prepared."</literal></expr></argument>, <argument><expr><name>hostName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>taskWrappers</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
            <decl_stmt><decl><type><name>StageWrapper</name></type> <name>startWrapper</name> <init>= <expr><operator>new</operator> <call><name>StageWrapper</name><argument_list>(<argument><expr><name><name>StageWrapper</name><operator>.</operator><name>Type</name><operator>.</operator><name>RESTART</name></name></expr></argument>, <argument><expr><name>stageTitle</name></expr></argument>,
                <argument><expr><call><name><name>taskWrappers</name><operator>.</operator><name>toArray</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>TaskWrapper</name><index>[<expr><call><name><name>taskWrappers</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name>stageWrappers</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>startWrapper</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
 
        <comment type="line">// create the manual task between the STOP and START stages</comment>
         <decl_stmt><decl><type><name>ManualTask</name></type> <name>mt</name> <init>= <expr><operator>new</operator> <call><name>ManualTask</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>message</name> <init>= <expr><call><name><name>String</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><literal type="string">"Please acknowledge that host %s has been prepared."</literal></expr></argument>, <argument><expr><name>hostName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <expr_stmt><expr><call><name><name>mt</name><operator>.</operator><name>messages</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>message</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

         <decl_stmt><decl><type><name>JsonObject</name></type> <name>structuredOut</name> <init>= <expr><operator>new</operator> <call><name>JsonObject</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
         <expr_stmt><expr><call><name><name>structuredOut</name><operator>.</operator><name>addProperty</name></name><argument_list>(<argument><expr><name>TYPE</name></expr></argument>, <argument><expr><call><name><name>HostOrderItem</name><operator>.</operator><name>HostOrderActionType</name><operator>.</operator><name>HOST_UPGRADE</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><call><name><name>structuredOut</name><operator>.</operator><name>addProperty</name></name><argument_list>(<argument><expr><name>HOST</name></expr></argument>, <argument><expr><name>hostName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">184</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">268</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>HostOrderGrouping</name> extends <name>Grouping</name> <block>{
 
         <expr><call><name><name>wrappers</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>stopWrapper</name></expr></argument>)</argument_list></call></expr>;
         <expr><call><name><name>wrappers</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>manualWrapper</name></expr></argument>)</argument_list></call></expr>;
        <comment type="line">// !!! TODO install_packages for hdp and conf-select changes.  Hopefully these will no-op.</comment>
        <expr><call><name><name>wrappers</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>startWrapper</name></expr></argument>)</argument_list></call></expr>;
 
        <comment type="line">// !!! TODO install_packages for hdp and conf-select changes.  Hopefully these will no-op.</comment>
        <expr><call><name><name>wrappers</name><operator>.</operator><name>addAll</name></name><argument_list>(<argument><expr><name>stageWrappers</name></expr></argument>)</argument_list></call></expr>;
       }</block></expr></expr_stmt>
 
       <return>return <expr><name>wrappers</name></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name>stack</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>StageWrapper</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name>stack</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>StageWrapper</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">5ec7ddb25f</literal><operator>..</operator><literal type="number">669d50fe14</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name>stack</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>StageWrapper</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name>stack</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>StageWrapper</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">25</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">25</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
 
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>base</name><operator>.</operator><name>Objects</name></name>;</import>
 <import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>gson</name><operator>.</operator><name>Gson</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
@@ -152,4 +153,14 @@ public class StageWrapper {
     START,
     CONFIGURE
   }

  /**
   * {@inheritDoc}
   */</comment>
  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>String</name></type> <name>toString</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><call><name><name>Objects</name><operator>.</operator><name>toStringHelper</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>add</name><argument_list>(<argument><expr><literal type="string">"type"</literal></expr></argument>, <argument><expr><name>type</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>add</name><argument_list>(<argument><expr><literal type="string">"text"</literal></expr></argument>,<argument><expr><name>text</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>omitNullValues</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr>;</return>
  </block_content>}</block></function>
 }
diff <expr_stmt><expr><operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name>stack</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>TaskWrapper</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name>stack</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>TaskWrapper</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">5fdf91c321</literal><operator>..</operator><literal type="number">11e27cfb9f</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name>stack</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>TaskWrapper</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name>stack</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>TaskWrapper</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">23</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">23</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
 
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>base</name><operator>.</operator><name>Objects</name></name>;</import>

 <comment type="block" format="javadoc">/**
  * Aggregates all upgrade tasks for a HostComponent into one wrapper.
  */</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">43</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">45</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TaskWrapper</name> <block>{
   <expr><specifier>public</specifier> <call><name>TaskWrapper</name><argument_list>(<argument><expr><name>String</name> <name>s</name></expr></argument>, <argument><expr><name>String</name> <name>c</name></expr></argument>, <argument><expr><name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name> <name>hosts</name></expr></argument>, <argument><expr><name>Task</name><operator>...</operator> <name>tasks</name></expr></argument>)</argument_list></call> <block>{
     <expr><call><name>this</name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>hosts</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><call><name><name>Arrays</name><operator>.</operator><name>asList</name></name><argument_list>(<argument><expr><name>tasks</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
   }</block>
  

   <comment type="block" format="javadoc">/**
    * @param s the service name for the tasks
    * @param c the component name for the tasks
@@ -92,10 +94,16 @@ public class TaskWrapper {
     return hosts;
   }
 

  /**
   * {@inheritDoc}
   */</comment>
   @<name>Override</name>
   <specifier>public</specifier> <name>String</name> <call><name>toString</name><argument_list>()</argument_list></call> <block>{
    <return>return <expr><name>service</name> <operator>+</operator> <literal type="string">":"</literal> <operator>+</operator> <name>component</name> <operator>+</operator> <literal type="string">":"</literal> <operator>+</operator> <name>tasks</name> <operator>+</operator> <literal type="string">":"</literal> <operator>+</operator> <name>hosts</name></expr>;</return></block></expr>
    <return>return <expr><call><name><name>Objects</name><operator>.</operator><name>toStringHelper</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>add</name><argument_list>(<argument><expr><literal type="string">"service"</literal></expr></argument>, <argument><expr><name>service</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>add</name><argument_list>(<argument><expr><literal type="string">"component"</literal></expr></argument>, <argument><expr><name>component</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>add</name><argument_list>(<argument><expr><literal type="string">"tasks"</literal></expr></argument>, <argument><expr><name>tasks</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>add</name><argument_list>(<argument><expr><literal type="string">"hosts"</literal></expr></argument>, <argument><expr><name>hosts</name></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>omitNullValues</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr>;</return>
   }</block></expr></expr_stmt>
 
   <comment type="block" format="javadoc">/**
diff --git a/ambari-server/src/test/java/org/apache/ambari/server/agent/AgentResourceTest.java b/ambari-server/src/test/java/org/apache/ambari/server/agent/AgentResourceTest.java
index 674025cbd1..17b1e27ae8 100644
-- a/ambari-server/src/test/java/org/apache/ambari/server/agent/AgentResourceTest.java
++ b/ambari-server/src/test/java/org/apache/ambari/server/agent/AgentResourceTest.java
@@ -36,6 +36,8 @@ import org.apache.ambari.server.actionmanager.StageFactory;
 import org.apache.ambari.server.agent.rest.AgentResource;
 import org.apache.ambari.server.api.services.AmbariMetaInfo;
 import org.apache.ambari.server.events.publishers.AmbariEventPublisher;
import org.apache.ambari.server.metadata.CachedRoleCommandOrderProvider;
import org.apache.ambari.server.metadata.RoleCommandOrderProvider;
 import org.apache.ambari.server.orm.DBAccessor;
 import org.apache.ambari.server.orm.dao.HostDAO;
 import org.apache.ambari.server.orm.dao.HostRoleCommandDAO;
@@ -316,6 +318,7 @@ public class AgentResourceTest extends RandomPortJerseyTest {
       bind(HostDAO.class).toInstance(createNiceMock(HostDAO.class));
       bind(Clusters.class).toInstance(createNiceMock(Clusters.class));
       bind(PersistedState.class).toInstance(createNiceMock(PersistedState.class));
      bind(RoleCommandOrderProvider.class).to(CachedRoleCommandOrderProvider.class);
     }
 
     private void installDependencies() {
diff --git a/ambari-server/src/test/java/org/apache/ambari/server/controller/KerberosHelperTest.java b/ambari-server/src/test/java/org/apache/ambari/server/controller/KerberosHelperTest.java
index 8a70f0cf2b..91cd6084ce 100644
-- a/ambari-server/src/test/java/org/apache/ambari/server/controller/KerberosHelperTest.java
++ b/ambari-server/src/test/java/org/apache/ambari/server/controller/KerberosHelperTest.java
@@ -58,6 +58,8 @@ import org.apache.ambari.server.AmbariException;
 import org.apache.ambari.server.Role;
 import org.apache.ambari.server.actionmanager.ActionManager;
 import org.apache.ambari.server.actionmanager.HostRoleCommand;
import org.apache.ambari.server.actionmanager.HostRoleCommandFactory;
import org.apache.ambari.server.actionmanager.HostRoleCommandFactoryImpl;
 import org.apache.ambari.server.actionmanager.RequestFactory;
 import org.apache.ambari.server.actionmanager.Stage;
 import org.apache.ambari.server.actionmanager.StageFactory;
@@ -70,7 +72,9 @@ import org.apache.ambari.server.configuration.Configuration;
 import org.apache.ambari.server.controller.internal.RequestStageContainer;
 import org.apache.ambari.server.controller.spi.ClusterController;
 import org.apache.ambari.server.controller.utilities.KerberosChecker;
import org.apache.ambari.server.metadata.CachedRoleCommandOrderProvider;
 import org.apache.ambari.server.metadata.RoleCommandOrder;
import org.apache.ambari.server.metadata.RoleCommandOrderProvider;
 import org.apache.ambari.server.orm.DBAccessor;
 import org.apache.ambari.server.orm.dao.ArtifactDAO;
 import org.apache.ambari.server.orm.dao.HostRoleCommandDAO;
@@ -247,6 +251,8 @@ public class KerberosHelperTest extends EasyMockSupport {
         bind(AuditLogger.class).toInstance(createNiceMock(AuditLogger.class));
         bind(ArtifactDAO.class).toInstance(createNiceMock(ArtifactDAO.class));
         bind(KerberosPrincipalDAO.class).toInstance(createNiceMock(KerberosPrincipalDAO.class));
        bind(RoleCommandOrderProvider.class).to(CachedRoleCommandOrderProvider.class);
        bind(HostRoleCommandFactory.class).to(HostRoleCommandFactoryImpl.class);
 
         requestStaticInjection(KerberosChecker.class);
       }
diff --git a/ambari-server/src/test/java/org/apache/ambari/server/controller/internal/ActiveWidgetLayoutResourceProviderTest.java b/ambari-server/src/test/java/org/apache/ambari/server/controller/internal/ActiveWidgetLayoutResourceProviderTest.java
index 4b3782f709..5cce3fc2dc 100644
-- a/ambari-server/src/test/java/org/apache/ambari/server/controller/internal/ActiveWidgetLayoutResourceProviderTest.java
++ b/ambari-server/src/test/java/org/apache/ambari/server/controller/internal/ActiveWidgetLayoutResourceProviderTest.java
@@ -34,6 +34,8 @@ import javax.persistence.EntityManager;
 
 import org.apache.ambari.server.actionmanager.ActionDBAccessor;
 import org.apache.ambari.server.actionmanager.ActionManager;
import org.apache.ambari.server.actionmanager.HostRoleCommandFactory;
import org.apache.ambari.server.actionmanager.HostRoleCommandFactoryImpl;
 import org.apache.ambari.server.actionmanager.StageFactory;
 import org.apache.ambari.server.api.services.AmbariMetaInfo;
 import org.apache.ambari.server.controller.AbstractRootServiceResponseFactory;
@@ -405,6 +407,7 @@ public class ActiveWidgetLayoutResourceProviderTest extends EasyMockSupport {
         bind(HostRoleCommandDAO.class).toInstance(createMock(HostRoleCommandDAO.class));
         bind(HookContextFactory.class).toInstance(createMock(HookContextFactory.class));
         bind(HookService.class).toInstance(createMock(HookService.class));
        bind(HostRoleCommandFactory.class).to(HostRoleCommandFactoryImpl.class);
       }
     });
   }
diff --git a/ambari-server/src/test/java/org/apache/ambari/server/controller/internal/StackUpgradeConfigurationMergeTest.java b/ambari-server/src/test/java/org/apache/ambari/server/controller/internal/StackUpgradeConfigurationMergeTest.java
index 27d3d7bb94..1c45589c47 100644
-- a/ambari-server/src/test/java/org/apache/ambari/server/controller/internal/StackUpgradeConfigurationMergeTest.java
++ b/ambari-server/src/test/java/org/apache/ambari/server/controller/internal/StackUpgradeConfigurationMergeTest.java
@@ -24,6 +24,8 @@ import java.util.Map;
 import javax.persistence.EntityManager;
 
 import org.apache.ambari.server.actionmanager.ActionManager;
import org.apache.ambari.server.actionmanager.HostRoleCommandFactory;
import org.apache.ambari.server.actionmanager.HostRoleCommandFactoryImpl;
 import org.apache.ambari.server.actionmanager.RequestFactory;
 import org.apache.ambari.server.actionmanager.StageFactory;
 import org.apache.ambari.server.api.services.AmbariMetaInfo;
@@ -53,6 +55,7 @@ import org.apache.ambari.server.state.ServiceComponentHostFactory;
 import org.apache.ambari.server.state.ServiceFactory;
 import org.apache.ambari.server.state.ServiceInfo;
 import org.apache.ambari.server.state.StackId;
import org.apache.ambari.server.state.UpgradeContextFactory;
 import org.apache.ambari.server.state.configgroup.ConfigGroupFactory;
 import org.apache.ambari.server.state.scheduler.RequestExecutionFactory;
 import org.apache.ambari.server.state.stack.OsFamily;
@@ -295,7 +298,8 @@ public class StackUpgradeConfigurationMergeTest extends EasyMockSupport {
       binder.bind(RepositoryVersionDAO.class).toInstance(createNiceMock(RepositoryVersionDAO.class));
       binder.bind(HookContextFactory.class).toInstance(createMock(HookContextFactory.class));
       binder.bind(HookService.class).toInstance(createMock(HookService.class));

      binder.install(new FactoryModuleBuilder().build(UpgradeContextFactory.class));
      binder.bind(HostRoleCommandFactory.class).to(HostRoleCommandFactoryImpl.class);
 
       binder.requestStaticInjection(UpgradeResourceProvider.class);
     }
diff --git a/ambari-server/src/test/java/org/apache/ambari/server/controller/internal/UserAuthorizationResourceProviderTest.java b/ambari-server/src/test/java/org/apache/ambari/server/controller/internal/UserAuthorizationResourceProviderTest.java
index 37c48c3a24..fd96c8e1f3 100644
-- a/ambari-server/src/test/java/org/apache/ambari/server/controller/internal/UserAuthorizationResourceProviderTest.java
++ b/ambari-server/src/test/java/org/apache/ambari/server/controller/internal/UserAuthorizationResourceProviderTest.java
@@ -32,6 +32,8 @@ import javax.persistence.EntityManager;
 
 import org.apache.ambari.server.actionmanager.ActionDBAccessor;
 import org.apache.ambari.server.actionmanager.ActionManager;
import org.apache.ambari.server.actionmanager.HostRoleCommandFactory;
import org.apache.ambari.server.actionmanager.HostRoleCommandFactoryImpl;
 import org.apache.ambari.server.actionmanager.StageFactory;
 import org.apache.ambari.server.api.services.AmbariMetaInfo;
 import org.apache.ambari.server.controller.AbstractRootServiceResponseFactory;
@@ -417,6 +419,7 @@ public class UserAuthorizationResourceProviderTest extends EasyMockSupport {
         bind(HostRoleCommandDAO.class).toInstance(createMock(HostRoleCommandDAO.class));
         bind(HookContextFactory.class).toInstance(createMock(HookContextFactory.class));
         bind(HookService.class).toInstance(createMock(HookService.class));
        bind(HostRoleCommandFactory.class).to(HostRoleCommandFactoryImpl.class);
       }
     });
   }
diff --git a/ambari-server/src/test/java/org/apache/ambari/server/controller/internal/UserResourceProviderTest.java b/ambari-server/src/test/java/org/apache/ambari/server/controller/internal/UserResourceProviderTest.java
index b8e027f280..cc0f2b6846 100644
-- a/ambari-server/src/test/java/org/apache/ambari/server/controller/internal/UserResourceProviderTest.java
++ b/ambari-server/src/test/java/org/apache/ambari/server/controller/internal/UserResourceProviderTest.java
@@ -34,6 +34,8 @@ import javax.persistence.EntityManager;
 
 import org.apache.ambari.server.actionmanager.ActionDBAccessor;
 import org.apache.ambari.server.actionmanager.ActionManager;
import org.apache.ambari.server.actionmanager.HostRoleCommandFactory;
import org.apache.ambari.server.actionmanager.HostRoleCommandFactoryImpl;
 import org.apache.ambari.server.actionmanager.RequestFactory;
 import org.apache.ambari.server.actionmanager.StageFactory;
 import org.apache.ambari.server.api.services.AmbariMetaInfo;
@@ -252,6 +254,7 @@ public class UserResourceProviderTest extends EasyMockSupport {
         bind(HostRoleCommandDAO.class).toInstance(createMock(HostRoleCommandDAO.class));
         bind(HookService.class).toInstance(createMock(HookService.class));
         bind(HookContextFactory.class).toInstance(createMock(HookContextFactory.class));
        bind(HostRoleCommandFactory.class).to(HostRoleCommandFactoryImpl.class);
       }
     });
   }
diff --git a/ambari-server/src/test/java/org/apache/ambari/server/metadata/RoleGraphTest.java b/ambari-server/src/test/java/org/apache/ambari/server/metadata/RoleGraphTest.java
index 53686aa0c0..f04efde611 100644
-- a/ambari-server/src/test/java/org/apache/ambari/server/metadata/RoleGraphTest.java
++ b/ambari-server/src/test/java/org/apache/ambari/server/metadata/RoleGraphTest.java
@@ -22,16 +22,25 @@ package org.apache.ambari.server.metadata;
 import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.when;
 
import java.util.HashMap;
import java.util.List;
import java.util.Map;

 import org.apache.ambari.server.AmbariException;
 import org.apache.ambari.server.Role;
 import org.apache.ambari.server.RoleCommand;
import org.apache.ambari.server.actionmanager.HostRoleCommand;
import org.apache.ambari.server.actionmanager.HostRoleCommandFactory;
 import org.apache.ambari.server.orm.GuiceJpaInitializer;
 import org.apache.ambari.server.orm.InMemoryDefaultTestModule;
import org.apache.ambari.server.stageplanner.RoleGraph;
import org.apache.ambari.server.stageplanner.RoleGraphFactory;
 import org.apache.ambari.server.stageplanner.RoleGraphNode;
 import org.apache.ambari.server.state.Service;
 import org.apache.ambari.server.state.ServiceComponent;
 import org.apache.ambari.server.state.StackId;
 import org.apache.ambari.server.state.cluster.ClusterImpl;
import org.apache.hadoop.metrics2.sink.relocated.google.common.collect.Lists;
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Test;
@@ -46,12 +55,16 @@ public class RoleGraphTest {
 
   private Injector injector;
   private RoleCommandOrderProvider roleCommandOrderProvider;
  private RoleGraphFactory roleGraphFactory;
  private HostRoleCommandFactory hrcFactory;
 
   @Before
   public void setup() throws Exception {
     injector = Guice.createInjector(new InMemoryDefaultTestModule());
     injector.getInstance(GuiceJpaInitializer.class);
     roleCommandOrderProvider = injector.getInstance(RoleCommandOrderProvider.class);
    roleGraphFactory = injector.getInstance(RoleGraphFactory.class);
    hrcFactory = injector.getInstance(HostRoleCommandFactory.class);
   }
 
   @After
@@ -139,4 +152,64 @@ public class RoleGraphTest {
     Assert.assertEquals(1, rco.order(nn_start, zk_server_start));
     Assert.assertEquals(1, rco.order(zkfc_start, nn_start));
   }

  /**
   * Tests the ordering of
   * {@link RoleGraph#getOrderedHostRoleCommands(java.util.Map)}.
   *
   * @throws AmbariException
   */</comment>
  <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testGetOrderedHostRoleCommands</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>AmbariException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>ClusterImpl</name></type> <name>cluster</name> <init>= <expr><call><name>mock</name><argument_list>(<argument><expr><name><name>ClusterImpl</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>cluster</name><operator>.</operator><name>getCurrentStackVersion</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><operator>new</operator> <call><name>StackId</name><argument_list>(<argument><expr><literal type="string">"HDP-2.0.6"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>cluster</name><operator>.</operator><name>getClusterId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="number">1L</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>RoleCommandOrder</name></type> <name>rco</name> <init>= <expr><call><name><name>roleCommandOrderProvider</name><operator>.</operator><name>getRoleCommandOrder</name></name><argument_list>(<argument><expr><name>cluster</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>RoleGraph</name></type> <name>roleGraph</name> <init>= <expr><call><name><name>roleGraphFactory</name><operator>.</operator><name>createNew</name></name><argument_list>(<argument><expr><name>rco</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>HostRoleCommand</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>unorderedCommands</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>HostRoleCommand</name></argument>&gt;</argument_list></name></type> <name>c6401Commands</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>HostRoleCommand</name></argument>&gt;</argument_list></name></type> <name>c6402Commands</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>HostRoleCommand</name></argument>&gt;</argument_list></name></type> <name>c6403Commands</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>HostRoleCommand</name></type> <name>hrcNameNode</name> <init>= <expr><call><name><name>hrcFactory</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><literal type="string">"c6041"</literal></expr></argument>, <argument><expr><name><name>Role</name><operator>.</operator><name>NAMENODE</name></name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name><name>RoleCommand</name><operator>.</operator><name>START</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>HostRoleCommand</name></type> <name>hrcZooKeeperHost1</name> <init>= <expr><call><name><name>hrcFactory</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><literal type="string">"c6041"</literal></expr></argument>, <argument><expr><name><name>Role</name><operator>.</operator><name>ZOOKEEPER_SERVER</name></name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name><name>RoleCommand</name><operator>.</operator><name>START</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>HostRoleCommand</name></type> <name>hrcHBaseMaster</name> <init>= <expr><call><name><name>hrcFactory</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><literal type="string">"c6042"</literal></expr></argument>, <argument><expr><name><name>Role</name><operator>.</operator><name>HBASE_MASTER</name></name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name><name>RoleCommand</name><operator>.</operator><name>START</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>HostRoleCommand</name></type> <name>hrcZooKeeperHost3</name> <init>= <expr><call><name><name>hrcFactory</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><literal type="string">"c6043"</literal></expr></argument>, <argument><expr><name><name>Role</name><operator>.</operator><name>ZOOKEEPER_SERVER</name></name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name><name>RoleCommand</name><operator>.</operator><name>START</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name><name>c6401Commands</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>hrcNameNode</name><operator>.</operator><name>getRole</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>name</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>hrcNameNode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>c6401Commands</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>hrcZooKeeperHost1</name><operator>.</operator><name>getRole</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>name</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>hrcZooKeeperHost1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>c6402Commands</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>hrcHBaseMaster</name><operator>.</operator><name>getRole</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>name</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>hrcHBaseMaster</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>c6403Commands</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>hrcZooKeeperHost3</name><operator>.</operator><name>getRole</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>name</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>hrcZooKeeperHost3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>unorderedCommands</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"c6401"</literal></expr></argument>, <argument><expr><name>c6401Commands</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>unorderedCommands</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"c6402"</literal></expr></argument>, <argument><expr><name>c6402Commands</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>unorderedCommands</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"c6403"</literal></expr></argument>, <argument><expr><name>c6403Commands</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>List</name><argument_list type="generic">&lt;<argument><name>HostRoleCommand</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>stages</name> <init>= <expr><call><name><name>roleGraph</name><operator>.</operator><name>getOrderedHostRoleCommands</name></name><argument_list>(<argument><expr><name>unorderedCommands</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><call><name><name>stages</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>List</name><argument_list type="generic">&lt;<argument><name>HostRoleCommand</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>stage1</name> <init>= <expr><call><name><name>stages</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>List</name><argument_list type="generic">&lt;<argument><name>HostRoleCommand</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>stage2</name> <init>= <expr><call><name><name>stages</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><call><name><name>stage1</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><call><name><name>stage2</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>HostRoleCommand</name></argument>&gt;</argument_list></name></type> <name>stage1CommandsHost1</name> <init>= <expr><call><name><name>stage1</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"c6401"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>HostRoleCommand</name></argument>&gt;</argument_list></name></type> <name>stage1CommandsHost3</name> <init>= <expr><call><name><name>stage1</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"c6403"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>HostRoleCommand</name></argument>&gt;</argument_list></name></type> <name>stage2CommandsHost2</name> <init>= <expr><call><name><name>stage2</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"c6402"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><call><name><name>stage1CommandsHost1</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>+</operator> <call><name><name>stage1CommandsHost3</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><call><name><name>stage2CommandsHost2</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>Role</name></argument>&gt;</argument_list></name></type> <name>stage1Roles</name> <init>= <expr><call><name><name>Lists</name><operator>.</operator><name>newArrayList</name></name><argument_list>(<argument><expr><call><name><name>stage1CommandsHost1</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getRole</name><argument_list>()</argument_list></call></expr></argument>,
        <argument><expr><call><name><name>stage1CommandsHost1</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getRole</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>stage1CommandsHost3</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getRole</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertTrue</name></name><argument_list>(<argument><expr><call><name><name>stage1Roles</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><name><name>Role</name><operator>.</operator><name>NAMENODE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertTrue</name></name><argument_list>(<argument><expr><call><name><name>stage1Roles</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><name><name>Role</name><operator>.</operator><name>ZOOKEEPER_SERVER</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><name><name>Role</name><operator>.</operator><name>ZOOKEEPER_SERVER</name></name></expr></argument>, <argument><expr><call><name><name>stage1CommandsHost3</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getRole</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><name><name>Role</name><operator>.</operator><name>HBASE_MASTER</name></name></expr></argument>, <argument><expr><call><name><name>stage2CommandsHost2</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getRole</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>
 }
diff <expr_stmt><expr><operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name><name>UpgradeHelperTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name><name>UpgradeHelperTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>ea1f18afdf</name><operator>..</operator><literal type="number">0d1a2fa9ec</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name><name>UpgradeHelperTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name><name>UpgradeHelperTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">107</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">107</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>UpgradeHelperTest</name> <block>{
   <expr><specifier>private</specifier> <name>ConfigHelper</name> <name>m_configHelper</name></expr>;
   <expr><specifier>private</specifier> <name>AmbariManagementController</name> <name>m_managementController</name></expr>;
   <expr><specifier>private</specifier> <name>Gson</name> <name>m_gson</name> <operator>=</operator> <operator>new</operator> <call><name>Gson</name><argument_list>()</argument_list></call></expr>;
  <expr><specifier>private</specifier> <name>UpgradeContextFactory</name> <name>m_upgradeContextFactory</name></expr>;
 
   <comment type="block" format="javadoc">/**
    * Because test cases need to share config mocks, put common ones in this function.
@@ -147,6 +148,7 @@ public class UpgradeHelperTest {
     m_upgradeHelper = injector.getInstance(UpgradeHelper.class);
     m_masterHostResolver = EasyMock.createMock(MasterHostResolver.class);
     m_managementController = injector.getInstance(AmbariManagementController.class);
    m_upgradeContextFactory = injector.getInstance(UpgradeContextFactory.class);
 
     // Set the authenticated user
     // TODO: remove this or replace the authenticated user to test authorization rules
@@ -1879,9 +1881,15 @@ public class UpgradeHelperTest {
     assertTrue(groups.isEmpty());
   }
 
  /**
   * Tests {@link UpgradeType#HOST_ORDERED}, specifically that the orchestration
   * can properly expand the single {@link HostOrderGrouping} and create the
   * correct stages based on the dependencies of the components.
   *
   * @throws Exception
   */</comment>
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testHostGroupingOrchestration</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{

     <expr><name>Clusters</name> <name>clusters</name> <operator>=</operator> <call><name><name>injector</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name><name>Clusters</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
     <expr><name>ServiceFactory</name> <name>serviceFactory</name> <operator>=</operator> <call><name><name>injector</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name><name>ServiceFactory</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
 
@@ <expr><operator>-</operator><literal type="number">1894</literal></expr>,<expr><literal type="number">12</literal> <operator>+</operator><literal type="number">1902</literal></expr>,<expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>UpgradeHelperTest</name> <block>{
 
     <expr><call><name><name>helper</name><operator>.</operator><name>getOrCreateRepositoryVersion</name></name><argument_list>(<argument><expr><name>stackId</name></expr></argument>,
         <argument><expr><call><name><name>c</name><operator>.</operator><name>getDesiredStackVersion</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getStackVersion</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>helper</name><operator>.</operator><name>getOrCreateRepositoryVersion</name></name><argument_list>(<argument><expr><name>stackId2</name></expr></argument>,<argument><expr><literal type="string">"2.2.0"</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>helper</name><operator>.</operator><name>getOrCreateRepositoryVersion</name></name><argument_list>(<argument><expr><name>stackId2</name></expr></argument>, <argument><expr><literal type="string">"2.2.0"</literal></expr></argument>)</argument_list></call></expr>;
 
     <expr><call><name><name>c</name><operator>.</operator><name>createClusterVersion</name></name><argument_list>(<argument><expr><name>stackId</name></expr></argument>,
         <argument><expr><call><name><name>c</name><operator>.</operator><name>getDesiredStackVersion</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getStackVersion</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"admin"</literal></expr></argument>,
         <argument><expr><name><name>RepositoryVersionState</name><operator>.</operator><name>INSTALLING</name></name></expr></argument>)</argument_list></call></expr>;
 
    <comment type="line">// create 2 hosts</comment>
     <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">2</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
       <decl_stmt><decl><type><name>String</name></type> <name>hostName</name> <init>= <expr><literal type="string">"h"</literal> <operator>+</operator> <operator>(</operator><name>i</name><operator>+</operator><literal type="number">1</literal><operator>)</operator></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>clusters</name><operator>.</operator><name>addHost</name></name><argument_list>(<argument><expr><name>hostName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1914</literal></expr><operator>,</operator><expr><literal type="number">19</literal> <operator>+</operator><literal type="number">1923</literal></expr><operator>,</operator><expr><literal type="number">24</literal> @@ <specifier>public</specifier> <name>class</name> <name>UpgradeHelperTest</name> <block>{
       <expr><call><name><name>clusters</name><operator>.</operator><name>mapHostToCluster</name></name><argument_list>(<argument><expr><name>hostName</name></expr></argument>, <argument><expr><name>clusterName</name></expr></argument>)</argument_list></call></expr>;
     }</block>
 
    <comment type="line">// !!! add storm</comment>
    <comment type="line">// add ZK Server to both hosts, and then Nimbus to only 1 - this will test</comment>
    <comment type="line">// how the HOU breaks out dependencies into stages</comment>
     <call><name><name>c</name><operator>.</operator><name>addService</name></name><argument_list>(<argument><expr><call><name><name>serviceFactory</name><operator>.</operator><name>createNew</name></name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="string">"ZOOKEEPER"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>Service</name></type> <name>s</name> <init>= <expr><call><name><name>c</name><operator>.</operator><name>getService</name></name><argument_list>(<argument><expr><literal type="string">"ZOOKEEPER"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>ServiceComponent</name></type> <name>sc</name> <init>= <expr><call><name><name>s</name><operator>.</operator><name>addServiceComponent</name></name><argument_list>(<argument><expr><literal type="string">"ZOOKEEPER_SERVER"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>ServiceComponentHost</name></type> <name>sch1</name> <init>= <expr><call><name><name>sc</name><operator>.</operator><name>addServiceComponentHost</name></name><argument_list>(<argument><expr><literal type="string">"h1"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>ServiceComponentHost</name></type> <name>sch2</name> <init>= <expr><call><name><name>sc</name><operator>.</operator><name>addServiceComponentHost</name></name><argument_list>(<argument><expr><literal type="string">"h2"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>c</name><operator>.</operator><name>addService</name></name><argument_list>(<argument><expr><call><name><name>serviceFactory</name><operator>.</operator><name>createNew</name></name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="string">"HBASE"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Service</name></type> <name>zookeeper</name> <init>= <expr><call><name><name>c</name><operator>.</operator><name>getService</name></name><argument_list>(<argument><expr><literal type="string">"ZOOKEEPER"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Service</name></type> <name>hbase</name> <init>= <expr><call><name><name>c</name><operator>.</operator><name>getService</name></name><argument_list>(<argument><expr><literal type="string">"HBASE"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>ServiceComponent</name></type> <name>zookeeperServer</name> <init>= <expr><call><name><name>zookeeper</name><operator>.</operator><name>addServiceComponent</name></name><argument_list>(<argument><expr><literal type="string">"ZOOKEEPER_SERVER"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>ServiceComponentHost</name></type> <name>zookeeperServer1</name> <init>= <expr><call><name><name>zookeeperServer</name><operator>.</operator><name>addServiceComponentHost</name></name><argument_list>(<argument><expr><literal type="string">"h1"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>ServiceComponentHost</name></type> <name>zookeeperServer2</name> <init>= <expr><call><name><name>zookeeperServer</name><operator>.</operator><name>addServiceComponentHost</name></name><argument_list>(<argument><expr><literal type="string">"h2"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>ServiceComponent</name></type> <name>hbaseMaster</name> <init>= <expr><call><name><name>hbase</name><operator>.</operator><name>addServiceComponent</name></name><argument_list>(<argument><expr><literal type="string">"HBASE_MASTER"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>ServiceComponentHost</name></type> <name>hbaseMaster1</name> <init>= <expr><call><name><name>hbaseMaster</name><operator>.</operator><name>addServiceComponentHost</name></name><argument_list>(<argument><expr><literal type="string">"h1"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <comment type="line">// !!! make a custom grouping</comment>
     <decl_stmt><decl><type><name>HostOrderItem</name></type> <name>hostItem</name> <init>= <expr><operator>new</operator> <call><name>HostOrderItem</name><argument_list>(<argument><expr><name><name>HostOrderActionType</name><operator>.</operator><name>HOST_UPGRADE</name></name></expr></argument>,
         <argument><expr><call><name><name>Lists</name><operator>.</operator><name>newArrayList</name></name><argument_list>(<argument><expr><literal type="string">"h1"</literal></expr></argument>, <argument><expr><literal type="string">"h2"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

     <decl_stmt><decl><type><name>HostOrderItem</name></type> <name>checkItem</name> <init>= <expr><operator>new</operator> <call><name>HostOrderItem</name><argument_list>(<argument><expr><name><name>HostOrderActionType</name><operator>.</operator><name>SERVICE_CHECK</name></name></expr></argument>,
        <argument><expr><call><name><name>Lists</name><operator>.</operator><name>newArrayList</name></name><argument_list>(<argument><expr><literal type="string">"ZOOKEEPER"</literal></expr></argument>, <argument><expr><literal type="string">"STORM"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>Lists</name><operator>.</operator><name>newArrayList</name></name><argument_list>(<argument><expr><literal type="string">"ZOOKEEPER"</literal></expr></argument>, <argument><expr><literal type="string">"HBASE"</literal></expr></argument>)</argument_list></call></expr></expr_stmt>)</block_content></block><empty_stmt>;</empty_stmt></for>
 
     <name>Grouping</name> <name>g</name> <operator>=</operator> <operator>new</operator> <call><name>HostOrderGrouping</name><argument_list>()</argument_list></call></block></expr>;
     <expr><operator>(</operator><operator>(</operator><name>HostOrderGrouping</name><operator>)</operator> <name>g</name><operator>)</operator><operator>.</operator><call><name>setHostOrderItems</name><argument_list>(<argument><expr><call><name><name>Lists</name><operator>.</operator><name>newArrayList</name></name><argument_list>(<argument><expr><name>hostItem</name></expr></argument>, <argument><expr><name>checkItem</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">1943</literal></expr>,<expr><literal type="number">9</literal> <operator>+</operator><literal type="number">1957</literal></expr>,<expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>UpgradeHelperTest</name> <block>{
     <expr><call><name><name>field</name><operator>.</operator><name>setAccessible</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>field</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name>upgradePack</name></expr></argument>, <argument><expr><name><name>UpgradeType</name><operator>.</operator><name>HOST_ORDERED</name></name></expr></argument>)</argument_list></call></expr>;
 

     <expr><name>MasterHostResolver</name> <name>resolver</name> <operator>=</operator> <operator>new</operator> <call><name>MasterHostResolver</name><argument_list>(<argument><expr><name>m_configHelper</name></expr></argument>, <argument><expr><name>c</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>UpgradeContext</name> <name>context</name> <operator>=</operator> <operator>new</operator> <call><name>UpgradeContext</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name><name>UpgradeType</name><operator>.</operator><name>HOST_ORDERED</name></name></expr></argument>, <argument><expr><name><name>Direction</name><operator>.</operator><name>UPGRADE</name></name></expr></argument>, <argument><expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;

    <expr><name>UpgradeContext</name> <name>context</name> <operator>=</operator> <call><name><name>m_upgradeContextFactory</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name><name>UpgradeType</name><operator>.</operator><name>HOST_ORDERED</name></name></expr></argument>,
        <argument><expr><name><name>Direction</name><operator>.</operator><name>UPGRADE</name></name></expr></argument>, <argument><expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;

     <expr><call><name><name>context</name><operator>.</operator><name>setResolver</name></name><argument_list>(<argument><expr><name>resolver</name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>context</name><operator>.</operator><name>setSourceAndTargetStacks</name></name><argument_list>(<argument><expr><name>stackId</name></expr></argument>, <argument><expr><name>stackId2</name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>context</name><operator>.</operator><name>setVersion</name></name><argument_list>(<argument><expr><literal type="string">"2.2.0"</literal></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">1954</literal></expr>,<expr><literal type="number">13</literal> <operator>+</operator><literal type="number">1970</literal></expr>,<expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>UpgradeHelperTest</name> <block>{
     <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><call><name><name>groups</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
     <expr><name>UpgradeGroupHolder</name> <name>holder</name> <operator>=</operator> <call><name><name>groups</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><call><name><name>holder</name><operator>.</operator><name>items</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">9</literal></expr></argument>, <argument><expr><call><name><name>holder</name><operator>.</operator><name>items</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">6</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">7</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
       <decl_stmt><decl><type><name>StageWrapper</name></type> <name>w</name> <init>= <expr><call><name><name>holder</name><operator>.</operator><name>items</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>i</name> <operator>==</operator> <literal type="number">0</literal> <operator>||</operator> <name>i</name> <operator>==</operator> <literal type="number">3</literal></expr>)</condition> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><name>i</name> <operator>==</operator> <literal type="number">0</literal> <operator>||</operator> <name>i</name> <operator>==</operator> <literal type="number">4</literal></expr>)</condition> <block>{<block_content>
         <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name><name>StageWrapper</name><operator>.</operator><name>Type</name><operator>.</operator><name>STOP</name></name></expr></argument>, <argument><expr><call><name><name>w</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt/></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></for>}</block></expr> <if_stmt><if type="elseif">else if <condition>(<expr><name>i</name> <operator>==</operator> <literal type="number">1</literal> <operator>||</operator> <name>i</name> <operator>==</operator> <literal type="number">4</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt/></block_content></block></if></if_stmt>}</block></expr> <if_stmt><if type="elseif">else if <condition>(<expr><name>i</name> <operator>==</operator> <literal type="number">1</literal> <operator>||</operator> <name>i</name> <operator>==</operator> <literal type="number">5</literal></expr>)</condition> <block>{<block_content>
         <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name><name>StageWrapper</name><operator>.</operator><name>Type</name><operator>.</operator><name>SERVER_SIDE_ACTION</name></name></expr></argument>, <argument><expr><call><name><name>w</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><call><name><name>w</name><operator>.</operator><name>getTasks</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><call><name><name>w</name><operator>.</operator><name>getTasks</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getTasks</name><argument_list>()</argument_list></call><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1976</literal></expr><operator>,</operator><expr><literal type="number">33</literal> <operator>+</operator><literal type="number">1992</literal></expr><operator>,</operator><expr><literal type="number">43</literal> @@ <specifier>public</specifier> <name>class</name> <name>UpgradeHelperTest</name> <block>{
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><name><name>StageWrapper</name><operator>.</operator><name>Type</name><operator>.</operator><name>RESTART</name></name></expr></argument>, <argument><expr><call><name><name>w</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</block></expr></expr_stmt></block_content></block></if></if_stmt>
       }</block></expr></expr_stmt>
     }
    assertEquals<expr_stmt><expr><operator>(</operator><name><name>StageWrapper</name><operator>.</operator><name>Type</name><operator>.</operator><name>SERVICE_CHECK</name></name><operator>,</operator> <call><name><name>holder</name><operator>.</operator><name>items</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getType</name><argument_list>()</argument_list></call><operator>)</operator></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name><name>StageWrapper</name><operator>.</operator><name>Type</name><operator>.</operator><name>SERVICE_CHECK</name></name></expr></argument>, <argument><expr><call><name><name>holder</name><operator>.</operator><name>items</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getType</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name><name>StageWrapper</name><operator>.</operator><name>Type</name><operator>.</operator><name>SERVICE_CHECK</name></name></expr></argument>, <argument><expr><call><name><name>holder</name><operator>.</operator><name>items</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getType</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <comment type="line">// !!! test downgrade when all host components have failed</comment>
    <expr_stmt><expr><call><name><name>sch1</name><operator>.</operator><name>setVersion</name></name><argument_list>(<argument><expr><literal type="string">"2.1.1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>sch2</name><operator>.</operator><name>setVersion</name></name><argument_list>(<argument><expr><literal type="string">"2.1.1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>zookeeperServer1</name><operator>.</operator><name>setVersion</name></name><argument_list>(<argument><expr><literal type="string">"2.1.1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>zookeeperServer2</name><operator>.</operator><name>setVersion</name></name><argument_list>(<argument><expr><literal type="string">"2.1.1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>hbaseMaster1</name><operator>.</operator><name>setVersion</name></name><argument_list>(<argument><expr><literal type="string">"2.1.1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>resolver</name> <operator>=</operator> <operator>new</operator> <call><name>MasterHostResolver</name><argument_list>(<argument><expr><name>m_configHelper</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="string">"2.1.1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>context</name> <operator>=</operator> <operator>new</operator> <call><name>UpgradeContext</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name><name>UpgradeType</name><operator>.</operator><name>HOST_ORDERED</name></name></expr></argument>, <argument><expr><name><name>Direction</name><operator>.</operator><name>DOWNGRADE</name></name></expr></argument>, <argument><expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>m_upgradeContextFactory</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name><name>UpgradeType</name><operator>.</operator><name>HOST_ORDERED</name></name></expr></argument>, <argument><expr><name><name>Direction</name><operator>.</operator><name>DOWNGRADE</name></name></expr></argument>,
        <argument><expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

     <expr_stmt><expr><call><name><name>context</name><operator>.</operator><name>setResolver</name></name><argument_list>(<argument><expr><name>resolver</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>context</name><operator>.</operator><name>setSourceAndTargetStacks</name></name><argument_list>(<argument><expr><name>stackId2</name></expr></argument>, <argument><expr><name>stackId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>context</name><operator>.</operator><name>setVersion</name></name><argument_list>(<argument><expr><literal type="string">"2.1.1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>groups</name> <operator>=</operator> <call><name><name>m_upgradeHelper</name><operator>.</operator><name>createSequence</name></name><argument_list>(<argument><expr><name>upgradePack</name></expr></argument>, <argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><call><name><name>groups</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><call><name><name>groups</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name><name>items</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><call><name><name>groups</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name><name>items</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <comment type="line">// !!! test downgrade when one of the hosts had failed</comment>
    <expr_stmt><expr><call><name><name>sch1</name><operator>.</operator><name>setVersion</name></name><argument_list>(<argument><expr><literal type="string">"2.1.1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>sch2</name><operator>.</operator><name>setVersion</name></name><argument_list>(<argument><expr><literal type="string">"2.2.0"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>zookeeperServer1</name><operator>.</operator><name>setVersion</name></name><argument_list>(<argument><expr><literal type="string">"2.1.1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>zookeeperServer2</name><operator>.</operator><name>setVersion</name></name><argument_list>(<argument><expr><literal type="string">"2.2.0"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>hbaseMaster1</name><operator>.</operator><name>setVersion</name></name><argument_list>(<argument><expr><literal type="string">"2.1.1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>resolver</name> <operator>=</operator> <operator>new</operator> <call><name>MasterHostResolver</name><argument_list>(<argument><expr><name>m_configHelper</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="string">"2.1.1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>context</name> <operator>=</operator> <operator>new</operator> <call><name>UpgradeContext</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name><name>UpgradeType</name><operator>.</operator><name>HOST_ORDERED</name></name></expr></argument>, <argument><expr><name><name>Direction</name><operator>.</operator><name>DOWNGRADE</name></name></expr></argument>, <argument><expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>m_upgradeContextFactory</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name><name>UpgradeType</name><operator>.</operator><name>HOST_ORDERED</name></name></expr></argument>, <argument><expr><name><name>Direction</name><operator>.</operator><name>DOWNGRADE</name></name></expr></argument>,
        <argument><expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

     <expr_stmt><expr><call><name><name>context</name><operator>.</operator><name>setResolver</name></name><argument_list>(<argument><expr><name>resolver</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>context</name><operator>.</operator><name>setSourceAndTargetStacks</name></name><argument_list>(<argument><expr><name>stackId2</name></expr></argument>, <argument><expr><name>stackId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>context</name><operator>.</operator><name>setVersion</name></name><argument_list>(<argument><expr><literal type="string">"2.1.1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>groups</name> <operator>=</operator> <call><name><name>m_upgradeHelper</name><operator>.</operator><name>createSequence</name></name><argument_list>(<argument><expr><name>upgradePack</name></expr></argument>, <argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><call><name><name>groups</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><call><name><name>groups</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name><name>items</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><call><name><name>groups</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name><name>items</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   }
 
   <comment type="block" format="javadoc">/**
diff --git a/ambari-server/src/test/java/org/apache/ambari/server/state/cluster/ClusterEffectiveVersionTest.java b/ambari-server/src/test/java/org/apache/ambari/server/state/cluster/ClusterEffectiveVersionTest.java
index 8ba891a702..d01249d63e 100644
-- a/ambari-server/src/test/java/org/apache/ambari/server/state/cluster/ClusterEffectiveVersionTest.java
++ b/ambari-server/src/test/java/org/apache/ambari/server/state/cluster/ClusterEffectiveVersionTest.java
@@ -34,6 +34,8 @@ import org.apache.ambari.server.controller.spi.ClusterController;
 import org.apache.ambari.server.events.publishers.AmbariEventPublisher;
 import org.apache.ambari.server.hooks.HookContextFactory;
 import org.apache.ambari.server.hooks.HookService;
import org.apache.ambari.server.metadata.CachedRoleCommandOrderProvider;
import org.apache.ambari.server.metadata.RoleCommandOrderProvider;
 import org.apache.ambari.server.orm.DBAccessor;
 import org.apache.ambari.server.orm.dao.ClusterDAO;
 import org.apache.ambari.server.orm.dao.HostRoleCommandDAO;
@@ -277,6 +279,8 @@ public class ClusterEffectiveVersionTest extends EasyMockSupport {
       binder.install(new FactoryModuleBuilder().implement(
           Cluster.class, ClusterImpl.class).build(ClusterFactory.class));
 
      binder.bind(RoleCommandOrderProvider.class).to(CachedRoleCommandOrderProvider.class);

       try {
         AmbariMetaInfo ambariMetaInfo = EasyMock.createNiceMock(AmbariMetaInfo.class);
         EasyMock.expect(
diff --git a/ambari-server/src/test/resources/stacks/HDP/2.1.1/services/HBASE/metainfo.xml b/ambari-server/src/test/resources/stacks/HDP/2.1.1/services/HBASE/metainfo.xml
new file mode 100644
index 0000000000..5725d571f7
-- /dev/null
++ b/ambari-server/src/test/resources/stacks/HDP/2.1.1/services/HBASE/metainfo.xml
@@ -0,0 +1,44 @@
&lt;?xml version="1.0"?&gt;
&lt;!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
--&gt;
&lt;metainfo&gt;
  &lt;schemaVersion&gt;2.0&lt;/schemaVersion&gt;
  &lt;services&gt;
    &lt;service&gt;
      &lt;name&gt;HBASE&lt;/name&gt;
      &lt;comment&gt;Non-relational distributed database and centralized service for configuration management &amp;amp; synchronization&lt;/comment&gt;
      &lt;version&gt;0.95.2.2.0.5.0&lt;/version&gt;

      &lt;components&gt;
        &lt;component&gt;
          &lt;name&gt;HBASE_MASTER&lt;/name&gt;
          &lt;versionAdvertised&gt;true&lt;/versionAdvertised&gt;
        &lt;/component&gt;

        &lt;component&gt;
          &lt;name&gt;HBASE_REGIONSERVER&lt;/name&gt;
          &lt;versionAdvertised&gt;true&lt;/versionAdvertised&gt;
        &lt;/component&gt;

        &lt;component&gt;
          &lt;name&gt;HBASE_CLIENT&lt;/name&gt;
          &lt;versionAdvertised&gt;false&lt;/versionAdvertised&gt;
        &lt;/component&gt;
      &lt;/components&gt;
    &lt;/service&gt;
  &lt;/services&gt;
&lt;/metainfo&gt;
- 
2.19.1.windows.1

</comment></unit>
