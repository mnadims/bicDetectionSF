<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/ambari/4b4bcbfb67.java"><expr_stmt><expr><name>From</name> <literal type="number">4b4bcbfb67f2cbd18da39276a59de61d0540c2e6</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Vitaly</name> <name><name>Brodetskyi</name> <argument_list type="generic">&lt;<argument><name>vbrodetskyi</name><annotation>@<name><name>hortonworks</name><operator>.</operator><name>com</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Thu</name></expr><operator>,</operator> <expr><literal type="number">9</literal> <name>Apr</name> <literal type="number">2015</literal> <literal type="number">01</literal><operator>:</operator><literal type="number">09</literal><operator>:</operator><literal type="number">51</literal> <operator>+</operator><literal type="number">0300</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>AMBARI</name><operator>-</operator><literal type="number">4782.</literal> <name>Error</name> <name>in</name> <name>getting</name> <name>host</name> <name>components</name> <name>with</name> <name>state</name>
 <name><name>INSTALL_FAILED</name><operator>.</operator></name>(<name>vbrodetskyi</name></expr></expr_stmt>)

<expr_stmt><expr><operator>--</operator>
 <operator>...</operator><operator>/</operator><name><name>AmbariManagementControllerImpl</name><operator>.</operator><name>java</name></name>       <operator>|</operator> <literal type="number">107</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>--</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name><name>ServiceComponentHostRequest</name><operator>.</operator><name>java</name></name>          <operator>|</operator>  <literal type="number">16</literal> <operator>++</operator><operator>+</operator>
 <operator>...</operator><operator>/</operator><name><name>HostComponentResourceProvider</name><operator>.</operator><name>java</name></name>        <operator>|</operator> <literal type="number">131</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>AmbariManagementControllerImplTest</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">76</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator>
 <literal type="number">4</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">248</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">82</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>AmbariManagementControllerImpl</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>AmbariManagementControllerImpl</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>f323920761</name><operator>..</operator><literal type="number">9e3d98d669</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>AmbariManagementControllerImpl</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>AmbariManagementControllerImpl</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">44</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@</expr></expr_stmt>
 
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name></name>;</package>
 
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>agent</name><operator>.</operator><name>ExecutionCommand</name><operator>.</operator><name>KeyNames</name><operator>.</operator><name>AMBARI_DB_RCA_DRIVER</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>agent</name><operator>.</operator><name>ExecutionCommand</name><operator>.</operator><name>KeyNames</name><operator>.</operator><name>AMBARI_DB_RCA_PASSWORD</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>agent</name><operator>.</operator><name>ExecutionCommand</name><operator>.</operator><name>KeyNames</name><operator>.</operator><name>AMBARI_DB_RCA_URL</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>agent</name><operator>.</operator><name>ExecutionCommand</name><operator>.</operator><name>KeyNames</name><operator>.</operator><name>AMBARI_DB_RCA_USERNAME</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>agent</name><operator>.</operator><name>ExecutionCommand</name><operator>.</operator><name>KeyNames</name><operator>.</operator><name>CLIENTS_TO_UPDATE_CONFIGS</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>agent</name><operator>.</operator><name>ExecutionCommand</name><operator>.</operator><name>KeyNames</name><operator>.</operator><name>COMMAND_TIMEOUT</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>agent</name><operator>.</operator><name>ExecutionCommand</name><operator>.</operator><name>KeyNames</name><operator>.</operator><name>DB_DRIVER_FILENAME</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>agent</name><operator>.</operator><name>ExecutionCommand</name><operator>.</operator><name>KeyNames</name><operator>.</operator><name>GROUP_LIST</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>agent</name><operator>.</operator><name>ExecutionCommand</name><operator>.</operator><name>KeyNames</name><operator>.</operator><name>HOOKS_FOLDER</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>agent</name><operator>.</operator><name>ExecutionCommand</name><operator>.</operator><name>KeyNames</name><operator>.</operator><name>PACKAGE_LIST</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>agent</name><operator>.</operator><name>ExecutionCommand</name><operator>.</operator><name>KeyNames</name><operator>.</operator><name>REPO_INFO</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>agent</name><operator>.</operator><name>ExecutionCommand</name><operator>.</operator><name>KeyNames</name><operator>.</operator><name>SCRIPT</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>agent</name><operator>.</operator><name>ExecutionCommand</name><operator>.</operator><name>KeyNames</name><operator>.</operator><name>SCRIPT_TYPE</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>agent</name><operator>.</operator><name>ExecutionCommand</name><operator>.</operator><name>KeyNames</name><operator>.</operator><name>SERVICE_PACKAGE_FOLDER</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>agent</name><operator>.</operator><name>ExecutionCommand</name><operator>.</operator><name>KeyNames</name><operator>.</operator><name>SERVICE_REPO_INFO</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>agent</name><operator>.</operator><name>ExecutionCommand</name><operator>.</operator><name>KeyNames</name><operator>.</operator><name>USER_LIST</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>agent</name><operator>.</operator><name>ExecutionCommand</name><operator>.</operator><name>KeyNames</name><operator>.</operator><name>VERSION</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>InetAddress</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>text</name><operator>.</operator><name>MessageFormat</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collection</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>EnumMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>LinkedHashSet</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>LinkedList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name><operator>.</operator><name>Entry</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>TreeMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>TimeUnit</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>cache</name><operator>.</operator><name>Cache</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>cache</name><operator>.</operator><name>CacheBuilder</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>gson</name><operator>.</operator><name>Gson</name></name>;</import>
 <import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>gson</name><operator>.</operator><name>reflect</name><operator>.</operator><name>TypeToken</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>Inject</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>Injector</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>Singleton</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>persist</name><operator>.</operator><name>Transactional</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>AmbariException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>ClusterNotFoundException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>DuplicateResourceException</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">144</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">114</literal></expr><operator>,</operator><expr><literal type="number">42</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>http</name><operator>.</operator><name>client</name><operator>.</operator><name>utils</name><operator>.</operator><name>URIBuilder</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>
 
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>cache</name><operator>.</operator><name>Cache</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>cache</name><operator>.</operator><name>CacheBuilder</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>gson</name><operator>.</operator><name>Gson</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>Inject</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>Injector</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>Singleton</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>persist</name><operator>.</operator><name>Transactional</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>InetAddress</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>text</name><operator>.</operator><name>MessageFormat</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collection</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>EnumMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>LinkedHashSet</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>LinkedList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name><operator>.</operator><name>Entry</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>TreeMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>TimeUnit</name></name>;</import>

<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>agent</name><operator>.</operator><name>ExecutionCommand</name><operator>.</operator><name>KeyNames</name><operator>.</operator><name>AMBARI_DB_RCA_DRIVER</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>agent</name><operator>.</operator><name>ExecutionCommand</name><operator>.</operator><name>KeyNames</name><operator>.</operator><name>AMBARI_DB_RCA_PASSWORD</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>agent</name><operator>.</operator><name>ExecutionCommand</name><operator>.</operator><name>KeyNames</name><operator>.</operator><name>AMBARI_DB_RCA_URL</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>agent</name><operator>.</operator><name>ExecutionCommand</name><operator>.</operator><name>KeyNames</name><operator>.</operator><name>AMBARI_DB_RCA_USERNAME</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>agent</name><operator>.</operator><name>ExecutionCommand</name><operator>.</operator><name>KeyNames</name><operator>.</operator><name>CLIENTS_TO_UPDATE_CONFIGS</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>agent</name><operator>.</operator><name>ExecutionCommand</name><operator>.</operator><name>KeyNames</name><operator>.</operator><name>COMMAND_TIMEOUT</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>agent</name><operator>.</operator><name>ExecutionCommand</name><operator>.</operator><name>KeyNames</name><operator>.</operator><name>DB_DRIVER_FILENAME</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>agent</name><operator>.</operator><name>ExecutionCommand</name><operator>.</operator><name>KeyNames</name><operator>.</operator><name>GROUP_LIST</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>agent</name><operator>.</operator><name>ExecutionCommand</name><operator>.</operator><name>KeyNames</name><operator>.</operator><name>HOOKS_FOLDER</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>agent</name><operator>.</operator><name>ExecutionCommand</name><operator>.</operator><name>KeyNames</name><operator>.</operator><name>PACKAGE_LIST</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>agent</name><operator>.</operator><name>ExecutionCommand</name><operator>.</operator><name>KeyNames</name><operator>.</operator><name>REPO_INFO</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>agent</name><operator>.</operator><name>ExecutionCommand</name><operator>.</operator><name>KeyNames</name><operator>.</operator><name>SCRIPT</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>agent</name><operator>.</operator><name>ExecutionCommand</name><operator>.</operator><name>KeyNames</name><operator>.</operator><name>SCRIPT_TYPE</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>agent</name><operator>.</operator><name>ExecutionCommand</name><operator>.</operator><name>KeyNames</name><operator>.</operator><name>SERVICE_PACKAGE_FOLDER</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>agent</name><operator>.</operator><name>ExecutionCommand</name><operator>.</operator><name>KeyNames</name><operator>.</operator><name>SERVICE_REPO_INFO</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>agent</name><operator>.</operator><name>ExecutionCommand</name><operator>.</operator><name>KeyNames</name><operator>.</operator><name>USER_LIST</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>agent</name><operator>.</operator><name>ExecutionCommand</name><operator>.</operator><name>KeyNames</name><operator>.</operator><name>VERSION</name></name>;</import>
 
 <class><annotation>@<name>Singleton</name></annotation>
 <specifier>public</specifier> class <name>AmbariManagementControllerImpl</name> <super_list><implements>implements <super><name>AmbariManagementController</name></super></implements></super_list> <block>{
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">964</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">963</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariManagementControllerImpl</name> implements <name>AmbariManagementControlle</name>
 
     <name>boolean</name> <name>checkDesiredState</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>State</name></type> <name>desiredStateToCheck</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>boolean</name></type> <name>checkState</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>State</name></type> <name>stateToCheck</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>boolean</name></type> <name>filterBasedConfigStaleness</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>boolean</name></type> <name>staleConfig</name> <init>= <expr><literal type="boolean">true</literal></expr></init></decl>;</decl_stmt>
     <if_stmt><if>if <condition>(<expr><call><name><name>request</name><operator>.</operator><name>getStaleConfig</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">980</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">981</literal></expr><operator>,</operator><expr><literal type="number">15</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariManagementControllerImpl</name> implements <name>AmbariManagementControlle</name>
       <name>checkDesiredState</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
     </block_content>}</block></if></if_stmt>
 
    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>StringUtils</name><operator>.</operator><name>isEmpty</name></name><argument_list>(<argument><expr><call><name><name>request</name><operator>.</operator><name>getState</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>stateToCheck</name> <operator>=</operator> <call><name><name>State</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><call><name><name>request</name><operator>.</operator><name>getState</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <comment type="line">// maybe check should be more wider</comment>
      <if_stmt><if>if <condition>(<expr><name>stateToCheck</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><literal type="string">"Invalid arguments, invalid state, State="</literal> <operator>+</operator> <call><name><name>request</name><operator>.</operator><name>getState</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
      </block_content>}</block></if></if_stmt>
      <expr_stmt><expr><name>checkState</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

     <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Host</name></argument>&gt;</argument_list></name></type> <name>hosts</name> <init>= <expr><call><name><name>clusters</name><operator>.</operator><name>getHostsForCluster</name></name><argument_list>(<argument><expr><call><name><name>cluster</name><operator>.</operator><name>getClusterName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <for>for <control>(<init><decl><type><name>Service</name></type> <name>s</name> <range>: <expr><name>services</name></expr></range></decl></init>)</control> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1016</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">1026</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariManagementControllerImpl</name> implements <name>AmbariManagementControlle</name></expr></expr_stmt>
             <if_stmt><if>if <condition>(<expr><name>checkDesiredState</name> <operator>&amp;&amp;</operator> <operator>(</operator><name>desiredStateToCheck</name> <operator>!=</operator> <call><name><name>sch</name><operator>.</operator><name>getDesiredState</name></name><argument_list>()</argument_list></call><operator>)</operator></expr>)</condition> <block>{<block_content>
               <continue>continue;</continue>
             </block_content>}</block></if></if_stmt>

            <if_stmt><if>if <condition>(<expr><name>checkState</name> <operator>&amp;&amp;</operator> <name>stateToCheck</name> <operator>!=</operator> <call><name><name>sch</name><operator>.</operator><name>getState</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
              <continue>continue;</continue>
            </block_content>}</block></if></if_stmt>

             <if_stmt><if>if <condition>(<expr><call><name><name>request</name><operator>.</operator><name>getAdminState</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
               <decl_stmt><decl><type><name>String</name></type> <name>stringToMatch</name> <init>=
                   <expr><ternary><condition><expr><call><name><name>sch</name><operator>.</operator><name>getComponentAdminState</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="null">null</literal></expr> ?</condition><then> <expr><literal type="string">""</literal></expr> </then><else>: <expr><call><name><name>sch</name><operator>.</operator><name>getComponentAdminState</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>name</name><argument_list>()</argument_list></call></expr></else></ternary></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1058</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">1073</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariManagementControllerImpl</name> implements <name>AmbariManagementControlle</name></expr></expr_stmt>
               <continue>continue;</continue>
             </block_content>}</block></if></if_stmt>
 
            <if_stmt><if>if <condition>(<expr><name>checkState</name> <operator>&amp;&amp;</operator> <name>stateToCheck</name> <operator>!=</operator> <call><name><name>sch</name><operator>.</operator><name>getState</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
              <continue>continue;</continue>
            </block_content>}</block></if></if_stmt>

             <if_stmt><if>if <condition>(<expr><call><name><name>request</name><operator>.</operator><name>getAdminState</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
               <decl_stmt><decl><type><name>String</name></type> <name>stringToMatch</name> <init>=
                   <expr><ternary><condition><expr><call><name><name>sch</name><operator>.</operator><name>getComponentAdminState</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="null">null</literal></expr> ?</condition><then> <expr><literal type="string">""</literal></expr> </then><else>: <expr><call><name><name>sch</name><operator>.</operator><name>getComponentAdminState</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>name</name><argument_list>()</argument_list></call></expr></else></ternary></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>ServiceComponentHostRequest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>ServiceComponentHostRequest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">6536bd5333</literal><operator>..</operator><literal type="number">73cedb4c9a</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>ServiceComponentHostRequest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>ServiceComponentHostRequest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">26</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">26</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ServiceComponentHostRequest</name> <block>{
   <expr><specifier>private</specifier> <name>String</name> <name>serviceName</name></expr>;
   <specifier>private</specifier> <name>String</name> <name>componentName</name></block></expr>;</expr_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>hostname</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>state</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>desiredState</name></decl>;</decl_stmt> <comment type="line">// CREATE/UPDATE</comment>
   <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>desiredStackId</name></decl>;</decl_stmt> <comment type="line">// UPDATE</comment>
   <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>staleConfig</name></decl>;</decl_stmt> <comment type="line">// GET - predicate</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">101</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">102</literal></expr><operator>,</operator><expr><literal type="number">20</literal> @@ <specifier>public</specifier> <name>class</name> <name>ServiceComponentHostRequest</name> <block>{
     <expr><name><name>this</name><operator>.</operator><name>desiredState</name></name> <operator>=</operator> <name>desiredState</name></expr>;
   }</block></expr></expr_stmt>
 
  <comment type="block" format="javadoc">/**
   * @return the state
   */</comment>
  <function><type><specifier>public</specifier> <name>String</name></type> <name>getState</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>state</name></expr>;</return>
  </block_content>}</block></function>

  <comment type="block" format="javadoc">/**
   * @param state the State to set
   */</comment>
  <function><type><specifier>public</specifier> <name>void</name></type> <name>setState</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>state</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>state</name></name> <operator>=</operator> <name>state</name></expr>;</expr_stmt>
  </block_content>}</block></function>

   <comment type="block" format="javadoc">/**
    * @return the desiredStackId
    */</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">164</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">179</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ServiceComponentHostRequest</name> <block>{
       <expr><operator>.</operator><call><name>append</name><argument_list>(<argument><expr><literal type="string">", componentName="</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>append</name><argument_list>(<argument><expr><name>componentName</name></expr></argument>)</argument_list></call>
       <operator>.</operator><call><name>append</name><argument_list>(<argument><expr><literal type="string">", hostname="</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>append</name><argument_list>(<argument><expr><name>hostname</name></expr></argument>)</argument_list></call>
       <operator>.</operator><call><name>append</name><argument_list>(<argument><expr><literal type="string">", desiredState="</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>append</name><argument_list>(<argument><expr><name>desiredState</name></expr></argument>)</argument_list></call>
      <operator>.</operator><call><name>append</name><argument_list>(<argument><expr><literal type="string">", state="</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>append</name><argument_list>(<argument><expr><name>state</name></expr></argument>)</argument_list></call>
       <operator>.</operator><call><name>append</name><argument_list>(<argument><expr><literal type="string">", desiredStackId="</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>append</name><argument_list>(<argument><expr><name>desiredStackId</name></expr></argument>)</argument_list></call>
       <operator>.</operator><call><name>append</name><argument_list>(<argument><expr><literal type="string">", staleConfig="</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>append</name><argument_list>(<argument><expr><name>staleConfig</name></expr></argument>)</argument_list></call>
       <operator>.</operator><call><name>append</name><argument_list>(<argument><expr><literal type="string">", adminState="</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>append</name><argument_list>(<argument><expr><name>adminState</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>append</name><argument_list>(<argument><expr><literal type="string">"}"</literal></expr></argument>)</argument_list></call></expr>;
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>HostComponentResourceProvider</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>HostComponentResourceProvider</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">639e17020c</literal><operator>..</operator><name>ab5c31c84c</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>HostComponentResourceProvider</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>HostComponentResourceProvider</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal><operator>,</operator><literal type="number">20</literal> <operator>+</operator><literal type="number">17</literal><operator>,</operator><literal type="number">10</literal> @@
  <operator>*</operator><operator>/</operator></block></expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>internal</name></name>;</package>
 
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collection</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>EnumMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>EnumSet</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>

 <import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>Inject</name></name>;</import>
 <import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>Injector</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>assistedinject</name><operator>.</operator><name>Assisted</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>assistedinject</name><operator>.</operator><name>AssistedInject</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>AmbariException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>configuration</name><operator>.</operator><name>ComponentSSLConfiguration</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>AmbariManagementController</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">53</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">43</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>ResourceAlreadyExistsException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>SystemException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>UnsupportedPropertyException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>utilities</name><operator>.</operator><name>PropertyHelper</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>assistedinject</name><operator>.</operator><name>Assisted</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>assistedinject</name><operator>.</operator><name>AssistedInject</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>Cluster</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>Clusters</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>MaintenanceState</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">68</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">55</literal></expr><operator>,</operator><expr><literal type="number">18</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>svccomphost</name><operator>.</operator><name>ServiceComponentHostDisableEve</name></name>
 <name>import</name> <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>svccomphost</name><operator>.</operator><name>ServiceComponentHostRestoreEvent</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>lang</name><operator>.</operator><name>StringUtils</name></name>;</import>
 
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collection</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>EnumMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>EnumSet</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>

 <comment type="block" format="javadoc">/**
  * Resource provider for host component resources.
  */</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">163</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">162</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>HostComponentResourceProvider</name> extends <name>AbstractControllerResourcePro</name>
 
     <name>final</name> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>ServiceComponentHostRequest</name></argument>&gt;</argument_list></name> <name>requests</name> <operator>=</operator> <operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;<argument><name>ServiceComponentHostRequest</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <for>for <control>(<init><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>propertyMap</name> <range>: <expr><call><name><name>request</name><operator>.</operator><name>getProperties</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
      <expr_stmt><expr><call><name><name>requests</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name>getRequest</name><argument_list>(<argument><expr><name>propertyMap</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>requests</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name>changeRequest</name><argument_list>(<argument><expr><name>propertyMap</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></for>
 
     <expr_stmt><expr><call><name>createResources</name><argument_list>(<argument><expr><operator>new</operator> <class><super><name><name>Command</name><argument_list type="generic">&lt;<argument><name>Void</name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">189</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">188</literal></expr><operator>,</operator><expr><literal type="number">25</literal> @@ <specifier>public</specifier> class <name>HostComponentResourceProvider</name> extends <name>AbstractControllerResourcePro</name>
       <call><name><name>requests</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name>getRequest</name><argument_list>(<argument><expr><name>propertyMap</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     }</block></class></expr></argument></argument_list></call></expr></expr_stmt>
 
    <return>return <expr><call><name>findResources</name><argument_list>(<argument><expr><name>request</name></expr></argument>, <argument><expr><name>predicate</name></expr></argument>, <argument><expr><name>requests</name></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></if></if_stmt>

  <function><type><specifier>private</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>Resource</name></argument>&gt;</argument_list></name></type> <name>getResourcesForUpdate</name><parameter_list>(<parameter><decl><type><name>Request</name></type> <name>request</name></decl></parameter>, <parameter><decl><type><name>Predicate</name></type> <name>predicate</name></decl></parameter>)</parameter_list>
    <throws>throws <argument><expr><name>SystemException</name></expr></argument>, <argument><expr><name>UnsupportedPropertyException</name></expr></argument>, <argument><expr><name>NoSuchResourceException</name></expr></argument>, <argument><expr><name>NoSuchParentResourceException</name></expr></argument></throws> <block>{<block_content>

    <decl_stmt><decl><type><specifier>final</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>ServiceComponentHostRequest</name></argument>&gt;</argument_list></name></type> <name>requests</name> <init>= <expr><operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;<argument><name>ServiceComponentHostRequest</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <for>for <control>(<init><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>propertyMap</name> <range>: <expr><call><name>getPropertyMaps</name><argument_list>(<argument><expr><name>predicate</name></expr></argument>)</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
      <expr_stmt><expr><call><name><name>requests</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name>changeRequest</name><argument_list>(<argument><expr><name>propertyMap</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>

    <return>return <expr><call><name>findResources</name><argument_list>(<argument><expr><name>request</name></expr></argument>, <argument><expr><name>predicate</name></expr></argument>, <argument><expr><name>requests</name></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>


  <function><type><specifier>private</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>Resource</name></argument>&gt;</argument_list></name></type> <name>findResources</name><parameter_list>(<parameter><decl><type><name>Request</name></type> <name>request</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <name>Predicate</name></type> <name>predicate</name></decl></parameter>,
                                      <parameter><decl><type><specifier>final</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>ServiceComponentHostRequest</name></argument>&gt;</argument_list></name></type> <name>requests</name></decl></parameter>)</parameter_list>
          <throws>throws <argument><expr><name>SystemException</name></expr></argument>, <argument><expr><name>NoSuchResourceException</name></expr></argument>, <argument><expr><name>NoSuchParentResourceException</name></expr></argument></throws> <block>{<block_content>
     <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>Resource</name></argument>&gt;</argument_list></name></type> <name>resources</name> <init>= <expr><operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;<argument><name>Resource</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>requestedIds</name> <init>= <expr><call><name>getRequestPropertyIds</name><argument_list>(<argument><expr><name>request</name></expr></argument>, <argument><expr><name>predicate</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <comment type="line">// We always need host_name for sch</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">204</literal></expr><operator>,</operator><expr><literal type="number">34</literal> <operator>+</operator><literal type="number">222</literal></expr><operator>,</operator><expr><literal type="number">34</literal> @@ <specifier>public</specifier> <name>class</name> <name>HostComponentResourceProvider</name> extends <name>AbstractControllerResourcePro</name></expr></expr_stmt>
     <for>for <control>(<init><decl><type><name>ServiceComponentHostResponse</name></type> <name>response</name> <range>: <expr><name>responses</name></expr></range></decl></init>)</control> <block>{<block_content>
       <decl_stmt><decl><type><name>Resource</name></type> <name>resource</name> <init>= <expr><operator>new</operator> <call><name>ResourceImpl</name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>HostComponent</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name>setResourceProperty</name><argument_list>(<argument><expr><name>resource</name></expr></argument>, <argument><expr><name>HOST_COMPONENT_CLUSTER_NAME_PROPERTY_ID</name></expr></argument>,
          <argument><expr><call><name><name>response</name><operator>.</operator><name>getClusterName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>requestedIds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
              <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>getClusterName</name></name><argument_list>()</argument_list></call></expr><operator>,</operator> <expr><name>requestedIds</name></expr></expr_stmt>)</block_content></block><empty_stmt>;</empty_stmt></for>
       <expr_stmt><expr><call><name>setResourceProperty</name><argument_list>(<argument><expr><name>resource</name></expr></argument>, <argument><expr><name>HOST_COMPONENT_SERVICE_NAME_PROPERTY_ID</name></expr></argument>,
          <argument><expr><call><name><name>response</name><operator>.</operator><name>getServiceName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>requestedIds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
              <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>getServiceName</name></name><argument_list>()</argument_list></call></expr><operator>,</operator> <expr><name>requestedIds</name></expr></expr_stmt>)</block_content></block>;</function>
       <expr_stmt><expr><call><name>setResourceProperty</name><argument_list>(<argument><expr><name>resource</name></expr></argument>, <argument><expr><name>HOST_COMPONENT_COMPONENT_NAME_PROPERTY_ID</name></expr></argument>,
          <argument><expr><call><name><name>response</name><operator>.</operator><name>getComponentName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>requestedIds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
              <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>getComponentName</name></name><argument_list>()</argument_list></call></expr><operator>,</operator> <expr><name>requestedIds</name></expr></expr_stmt>)</block_content></block><empty_stmt>;</empty_stmt></for>
       <expr_stmt><expr><call><name>setResourceProperty</name><argument_list>(<argument><expr><name>resource</name></expr></argument>, <argument><expr><name>HOST_COMPONENT_HOST_NAME_PROPERTY_ID</name></expr></argument>,
          <argument><expr><call><name><name>response</name><operator>.</operator><name>getHostname</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>requestedIds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
              <constructor><name><name>response</name><operator>.</operator><name>getHostname</name></name><parameter_list>()</parameter_list><operator>,</operator> requestedIds</constructor>)</block>;</class>
       <expr_stmt><expr><call><name>setResourceProperty</name><argument_list>(<argument><expr><name>resource</name></expr></argument>, <argument><expr><name>HOST_COMPONENT_STATE_PROPERTY_ID</name></expr></argument>,
          <argument><expr><call><name><name>response</name><operator>.</operator><name>getLiveState</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>requestedIds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
              <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>getLiveState</name></name><argument_list>()</argument_list></call></expr><operator>,</operator> <expr><name>requestedIds</name></expr></expr_stmt>)<empty_stmt>;</empty_stmt>
       <expr_stmt><expr><call><name>setResourceProperty</name><argument_list>(<argument><expr><name>resource</name></expr></argument>, <argument><expr><name>HOST_COMPONENT_DESIRED_STATE_PROPERTY_ID</name></expr></argument>,
          <argument><expr><call><name><name>response</name><operator>.</operator><name>getDesiredState</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>requestedIds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
              <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>getDesiredState</name></name><argument_list>()</argument_list></call></expr><operator>,</operator> <expr><name>requestedIds</name></expr></expr_stmt>)<empty_stmt>;</empty_stmt>
       <expr_stmt><expr><call><name>setResourceProperty</name><argument_list>(<argument><expr><name>resource</name></expr></argument>, <argument><expr><name>HOST_COMPONENT_STACK_ID_PROPERTY_ID</name></expr></argument>,
          <argument><expr><call><name><name>response</name><operator>.</operator><name>getStackVersion</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>requestedIds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
              <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>getStackVersion</name></name><argument_list>()</argument_list></call></expr><operator>,</operator> <expr><name>requestedIds</name></expr></expr_stmt>)<empty_stmt>;</empty_stmt>
       <expr_stmt><expr><call><name>setResourceProperty</name><argument_list>(<argument><expr><name>resource</name></expr></argument>, <argument><expr><name>HOST_COMPONENT_DESIRED_STACK_ID_PROPERTY_ID</name></expr></argument>,
          <argument><expr><call><name><name>response</name><operator>.</operator><name>getDesiredStackVersion</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>requestedIds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
              <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>getDesiredStackVersion</name></name><argument_list>()</argument_list></call></expr><operator>,</operator> <expr><name>requestedIds</name></expr></expr_stmt>)<empty_stmt>;</empty_stmt>
       <expr_stmt><expr><call><name>setResourceProperty</name><argument_list>(<argument><expr><name>resource</name></expr></argument>, <argument><expr><name>HOST_COMPONENT_ACTUAL_CONFIGS_PROPERTY_ID</name></expr></argument>,
          <argument><expr><call><name><name>response</name><operator>.</operator><name>getActualConfigs</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>requestedIds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
              <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>getActualConfigs</name></name><argument_list>()</argument_list></call></expr><operator>,</operator> <expr><name>requestedIds</name></expr></expr_stmt>)<empty_stmt>;</empty_stmt>
       <expr_stmt><expr><call><name>setResourceProperty</name><argument_list>(<argument><expr><name>resource</name></expr></argument>, <argument><expr><name>HOST_COMPONENT_STALE_CONFIGS_PROPERTY_ID</name></expr></argument>,
          <argument><expr><call><name><name>response</name><operator>.</operator><name>isStaleConfig</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>requestedIds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      
              <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>isStaleConfig</name></name><argument_list>()</argument_list></call></expr><operator>,</operator> <expr><name>requestedIds</name></expr></expr_stmt>)<empty_stmt>;</empty_stmt>

       <if_stmt><if>if <condition>(<expr><call><name><name>response</name><operator>.</operator><name>getAdminState</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
         <expr_stmt><expr><call><name>setResourceProperty</name><argument_list>(<argument><expr><name>resource</name></expr></argument>, <argument><expr><name>HOST_COMPONENT_DESIRED_ADMIN_STATE_PROPERTY_ID</name></expr></argument>,
            <argument><expr><call><name><name>response</name><operator>.</operator><name>getAdminState</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>requestedIds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>getAdminState</name></name><argument_list>()</argument_list></call></expr><operator>,</operator> <expr><name>requestedIds</name></expr></expr_stmt>)</block_content></block><empty_stmt>;</empty_stmt></if></if_stmt>
       }
      

       if <expr_stmt><expr><operator>(</operator><literal type="null">null</literal> <operator>!=</operator> <call><name><name>response</name><operator>.</operator><name>getMaintenanceState</name></name><argument_list>()</argument_list></call><operator>)</operator> <block>{
         <expr><call><name>setResourceProperty</name><argument_list>(<argument><expr><name>resource</name></expr></argument>, <argument><expr><name>HOST_COMPONENT_MAINTENANCE_STATE_PROPERTY_ID</name></expr></argument>,
            <argument><expr><call><name><name>response</name><operator>.</operator><name>getMaintenanceState</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>requestedIds</name></expr></argument>)</argument_list></call></expr>;
                <expr><call><name><name>response</name><operator>.</operator><name>getMaintenanceState</name></name><argument_list>()</argument_list></call></expr>, <expr><name>requestedIds</name></expr>)</block></expr>;</expr_stmt>
       }
 
       String <expr_stmt><expr><name>componentName</name> <operator>=</operator> <operator>(</operator><name>String</name><operator>)</operator> <call><name><name>resource</name><operator>.</operator><name>getPropertyValue</name></name><argument_list>(<argument><expr><name>HOST_COMPONENT_COMPONENT_NAME_PROPERTY_ID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">276</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">294</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>HostComponentResourceProvider</name> extends <name>AbstractControllerResourcePro</name>
       <throws>throws <argument><expr><name>SystemException</name></expr></argument>, <argument><expr><name>UnsupportedPropertyException</name></expr></argument>, <argument><expr><name>NoSuchResourceException</name></expr></argument>, <argument><expr><name>NoSuchParentResourceException</name> <block>{
     <expr><name>final</name> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>ServiceComponentHostRequest</name></argument>&gt;</argument_list></name> <name>requests</name> <operator>=</operator> <operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;<argument><name>ServiceComponentHostRequest</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
     <for>for <control>(<init><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>propertyMap</name> <range>: <expr><call><name>getPropertyMaps</name><argument_list>(<argument><expr><name>predicate</name></expr></argument>)</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
      <expr_stmt><expr><call><name><name>requests</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name>getRequest</name><argument_list>(<argument><expr><name>propertyMap</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>requests</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name>changeRequest</name><argument_list>(<argument><expr><name>propertyMap</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></for>
     <decl_stmt><decl><type><name>RequestStatusResponse</name></type> <name>response</name> <init>= <expr><call><name>modifyResources</name><argument_list>(<argument><expr><operator>new</operator> <class><super><name><name>Command</name><argument_list type="generic">&lt;<argument><name>RequestStatusResponse</name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{
       <annotation>@<name>Override</name></annotation>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">316</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">334</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>HostComponentResourceProvider</name> extends <name>AbstractControllerResourcePro</name>
     <name>final</name> <name>RequestStageContainer</name> <name>requestStages</name></expr>;</expr_stmt>
     <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>installProperties</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
    <expr_stmt><expr><call><name><name>installProperties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>HOST_COMPONENT_STATE_PROPERTY_ID</name></expr></argument>, <argument><expr><literal type="string">"INSTALLED"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>installProperties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>HOST_COMPONENT_DESIRED_STATE_PROPERTY_ID</name></expr></argument>, <argument><expr><literal type="string">"INSTALLED"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>requestInfo</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>requestInfo</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"context"</literal></expr></argument>, <argument><expr><literal type="string">"Install and start components on added hosts"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>Request</name></type> <name>installRequest</name> <init>= <expr><call><name><name>PropertyHelper</name><operator>.</operator><name>getUpdateRequest</name></name><argument_list>(<argument><expr><name>installProperties</name></expr></argument>, <argument><expr><name>requestInfo</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">338</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">356</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>HostComponentResourceProvider</name> extends <name>AbstractControllerResourcePro</name>
       <call><name>notifyUpdate</name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>HostComponent</name></name></expr></argument>, <argument><expr><name>installRequest</name></expr></argument>, <argument><expr><name>installPredicate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
       <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>startProperties</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>startProperties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>HOST_COMPONENT_STATE_PROPERTY_ID</name></expr></argument>, <argument><expr><literal type="string">"STARTED"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>startProperties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>HOST_COMPONENT_DESIRED_STATE_PROPERTY_ID</name></expr></argument>, <argument><expr><literal type="string">"STARTED"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <decl_stmt><decl><type><name>Request</name></type> <name>startRequest</name> <init>= <expr><call><name><name>PropertyHelper</name><operator>.</operator><name>getUpdateRequest</name></name><argument_list>(<argument><expr><name>startProperties</name></expr></argument>, <argument><expr><name>requestInfo</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <comment type="line">// Important to query against desired_state as this has been updated when install stage was created</comment>
       <comment type="line">// If I query against state, then the getRequest compares predicate prop against desired_state and then when the predicate</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">573</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">591</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> class <name>HostComponentResourceProvider</name> extends <call><name>AbstractControllerResourcePro</name>
         <argument_list>(<argument><expr><name>String</name></expr></argument>)</argument_list></call> <call><name><name>properties</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>HOST_COMPONENT_SERVICE_NAME_PROPERTY_ID</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
         <expr><operator>(</operator><name>String</name><operator>)</operator> <call><name><name>properties</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>HOST_COMPONENT_COMPONENT_NAME_PROPERTY_ID</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
         <expr><operator>(</operator><name>String</name><operator>)</operator> <call><name><name>properties</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>HOST_COMPONENT_HOST_NAME_PROPERTY_ID</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
        <expr><operator>(</operator><name>String</name><operator>)</operator> <call><name><name>properties</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>HOST_COMPONENT_STATE_PROPERTY_ID</name></expr></argument>)</argument_list></call></expr></expr_stmt></block></class></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>serviceComponentHostRequest</name><operator>.</operator><name>setDesiredStackId</name></name><argument_list>(
        <argument><expr><operator>(</operator><name>String</name><operator>)</operator> <call><name><name>properties</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>HOST_COMPONENT_STACK_ID_PROPERTY_ID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><operator>(</operator><name>String</name><operator>)</operator> <call><name><name>properties</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>HOST_COMPONENT_DESIRED_STATE_PROPERTY_ID</name></expr></argument>)</argument_list></call></expr></expr_stmt>)<empty_stmt>;</empty_stmt>
    <expr_stmt><expr><call><name><name>serviceComponentHostRequest</name><operator>.</operator><name>setState</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <call><name><name>properties</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>HOST_COMPONENT_STATE_PROPERTY_ID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>serviceComponentHostRequest</name><operator>.</operator><name>setDesiredStackId</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <call><name><name>properties</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>HOST_COMPONENT_STACK_ID_PROPERTY_ID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <if_stmt><if>if <condition>(<expr><call><name><name>properties</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>HOST_COMPONENT_STALE_CONFIGS_PROPERTY_ID</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><call><name><name>serviceComponentHostRequest</name><operator>.</operator><name>setStaleConfig</name></name><argument_list>(
           <argument><expr><call><name><name>properties</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>HOST_COMPONENT_STALE_CONFIGS_PROPERTY_ID</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toLowerCase</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">594</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">612</literal></expr><operator>,</operator><expr><literal type="number">42</literal> @@ <specifier>public</specifier> <name>class</name> <name>HostComponentResourceProvider</name> extends <name>AbstractControllerResourcePro</name></expr></expr_stmt>
     <return>return <expr><name>serviceComponentHostRequest</name></expr>;</return>
   </block_content>}</block></if></if_stmt>
 
  <comment type="block" format="javadoc">/**
   * Put changes to component request object from a map of property values.
   *
   * @param properties the predicate
   * @return the component request object
   */</comment>
  <function><type><specifier>private</specifier> <name>ServiceComponentHostRequest</name></type> <name>changeRequest</name><parameter_list>(<parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>properties</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>ServiceComponentHostRequest</name></type> <name>serviceComponentHostRequest</name> <init>= <expr><operator>new</operator> <call><name>ServiceComponentHostRequest</name><argument_list>(
            <argument><expr><operator>(</operator><name>String</name><operator>)</operator> <call><name><name>properties</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>HOST_COMPONENT_CLUSTER_NAME_PROPERTY_ID</name></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><operator>(</operator><name>String</name><operator>)</operator> <call><name><name>properties</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>HOST_COMPONENT_SERVICE_NAME_PROPERTY_ID</name></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><operator>(</operator><name>String</name><operator>)</operator> <call><name><name>properties</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>HOST_COMPONENT_COMPONENT_NAME_PROPERTY_ID</name></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><operator>(</operator><name>String</name><operator>)</operator> <call><name><name>properties</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>HOST_COMPONENT_HOST_NAME_PROPERTY_ID</name></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><operator>(</operator><name>String</name><operator>)</operator> <call><name><name>properties</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>HOST_COMPONENT_STATE_PROPERTY_ID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><call><name><name>properties</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>HOST_COMPONENT_DESIRED_STATE_PROPERTY_ID</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>serviceComponentHostRequest</name><operator>.</operator><name>setDesiredState</name></name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator><call><name><name>properties</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>HOST_COMPONENT_DESIRED_STATE_PROPERTY_ID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt><expr><call><name><name>serviceComponentHostRequest</name><operator>.</operator><name>setDesiredStackId</name></name><argument_list>(
            <argument><expr><operator>(</operator><name>String</name><operator>)</operator> <call><name><name>properties</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>HOST_COMPONENT_STACK_ID_PROPERTY_ID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><call><name><name>properties</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>HOST_COMPONENT_STALE_CONFIGS_PROPERTY_ID</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>serviceComponentHostRequest</name><operator>.</operator><name>setStaleConfig</name></name><argument_list>(
              <argument><expr><call><name><name>properties</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>HOST_COMPONENT_STALE_CONFIGS_PROPERTY_ID</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toLowerCase</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <if_stmt><if>if <condition>(<expr><call><name><name>properties</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>HOST_COMPONENT_DESIRED_ADMIN_STATE_PROPERTY_ID</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>serviceComponentHostRequest</name><operator>.</operator><name>setAdminState</name></name><argument_list>(
              <argument><expr><call><name><name>properties</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>HOST_COMPONENT_DESIRED_ADMIN_STATE_PROPERTY_ID</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <decl_stmt><decl><type><name>Object</name></type> <name>o</name> <init>= <expr><call><name><name>properties</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>HOST_COMPONENT_MAINTENANCE_STATE_PROPERTY_ID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><literal type="null">null</literal> <operator>!=</operator> <name>o</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>serviceComponentHostRequest</name><operator>.</operator><name>setMaintenanceState</name></name> <argument_list>(<argument><expr><call><name><name>o</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <return>return <expr><name>serviceComponentHostRequest</name></expr>;</return>
  </block_content>}</block></function>

   <comment type="block" format="javadoc">/**
    * Update resources.
    *
@@ -623,7 +677,8 @@ public class HostComponentResourceProvider extends AbstractControllerResourcePro
 
     Request queryRequest = PropertyHelper.getReadRequest(queryIds);
     // will take care of 404 exception
    Set&lt;Resource&gt; matchingResources = getResources(queryRequest, predicate);

    Set&lt;Resource&gt; matchingResources = getResourcesForUpdate(queryRequest, predicate);
 
     for (Resource queryResource : matchingResources) {
       //todo: predicate evaluation was removed for BUG-28737 and the removal of this breaks
@@ -641,7 +696,7 @@ public class HostComponentResourceProvider extends AbstractControllerResourcePro
         if (request.getProperties() != null &amp;&amp; request.getProperties().size() != 0) {
           updateRequestProperties.putAll(request.getProperties().iterator().next());
         }
        requests.add(getRequest(updateRequestProperties));
        requests.add(changeRequest(updateRequestProperties));
       }
     }
 
diff --git a/ambari-server/src/test/java/org/apache/ambari/server/controller/AmbariManagementControllerImplTest.java b/ambari-server/src/test/java/org/apache/ambari/server/controller/AmbariManagementControllerImplTest.java
index f7144b8661..a71b2dba31 100644
-- a/ambari-server/src/test/java/org/apache/ambari/server/controller/AmbariManagementControllerImplTest.java
++ b/ambari-server/src/test/java/org/apache/ambari/server/controller/AmbariManagementControllerImplTest.java
@@ -56,6 +56,7 @@ import org.apache.ambari.server.state.ServiceComponentHost;
 import org.apache.ambari.server.state.ServiceInfo;
 import org.apache.ambari.server.state.ServiceOsSpecific;
 import org.apache.ambari.server.state.StackId;
import org.apache.ambari.server.state.State;
 import org.easymock.Capture;
 import org.junit.Before;
 import org.junit.Test;
@@ -923,6 +924,81 @@ public class AmbariManagementControllerImplTest {
     verify(injector, clusters, cluster, host, stack, ambariMetaInfo, service, component);
   }
 
  @Test
  public void testGetHostComponents___ServiceComponentHostFilteredByState() throws Exception {
    // member state mocks
    Injector injector = createStrictMock(Injector.class);
    Capture&lt;AmbariManagementController&gt; controllerCapture = new Capture&lt;AmbariManagementController&gt;();
    StackId stack = createNiceMock(StackId.class);

    Cluster cluster = createNiceMock(Cluster.class);
    final Host host = createNiceMock(Host.class);
    Service service = createNiceMock(Service.class);
    ServiceComponent component = createNiceMock(ServiceComponent.class);
    MaintenanceStateHelper maintHelper = createNiceMock(MaintenanceStateHelper.class);
    final ServiceComponentHost componentHost1 = createNiceMock(ServiceComponentHost.class);
    ServiceComponentHostResponse response1 = createNiceMock(ServiceComponentHostResponse.class);

    // requests
    ServiceComponentHostRequest request1 = new ServiceComponentHostRequest(
            "cluster1", null, "component1", "host1", null);
    request1.setState("INSTALLED");


    Set&lt;ServiceComponentHostRequest&gt; setRequests = new HashSet&lt;ServiceComponentHostRequest&gt;();
    setRequests.add(request1);

    // expectations
    // constructor init
    injector.injectMembers(capture(controllerCapture));
    expect(injector.getInstance(Gson.class)).andReturn(null);
    expect(injector.getInstance(MaintenanceStateHelper.class)).andReturn(maintHelper);
    expect(injector.getInstance(KerberosHelper.class)).andReturn(createNiceMock(KerberosHelper.class));
    expect(maintHelper.getEffectiveState(
            anyObject(ServiceComponentHost.class),
            anyObject(Host.class))).andReturn(MaintenanceState.OFF).anyTimes();

    // getHostComponent
    expect(clusters.getCluster("cluster1")).andReturn(cluster);
    expect(clusters.getClustersForHost("host1")).andReturn(Collections.singleton(cluster));
    expect(clusters.getHostsForCluster((String) anyObject())).andReturn(
            new HashMap&lt;String, Host&gt;() {{
              put("host1", host);
            }}).anyTimes();

    expect(cluster.getDesiredStackVersion()).andReturn(stack);
    expect(cluster.getClusterName()).andReturn("cl1");
    expect(stack.getStackName()).andReturn("stackName");
    expect(stack.getStackVersion()).andReturn("stackVersion");

    expect(ambariMetaInfo.getComponentToService("stackName", "stackVersion", "component1")).andReturn("service1");
    expect(cluster.getService("service1")).andReturn(service);
    expect(service.getServiceComponent("component1")).andReturn(component);
    expect(component.getName()).andReturn("component1").anyTimes();
    expect(component.getServiceComponentHosts()).andReturn(new HashMap&lt;String, ServiceComponentHost&gt;() {{
      put("host1", componentHost1);
    }});

    expect(componentHost1.getState()).andReturn(State.INSTALLED);
    expect(componentHost1.convertToResponse()).andReturn(response1);
    expect(componentHost1.getHostName()).andReturn("host1");

    // replay mocks
    replay(maintHelper, injector, clusters, cluster, host, stack, ambariMetaInfo,
            service, component, componentHost1, response1);

    //test
    AmbariManagementController controller = new AmbariManagementControllerImpl(null, clusters, injector);
    setAmbariMetaInfo(ambariMetaInfo, controller);

    Set&lt;ServiceComponentHostResponse&gt; responses = controller.getHostComponents(setRequests);

    // assert and verify
    assertSame(controller, controllerCapture.getValue());
    assertTrue(responses.size() == 1);
    verify(injector, clusters, cluster, host, stack, ambariMetaInfo, service, component, componentHost1, response1);
  }

   @Test
   public void testGetHostComponents___OR_Predicate_ServiceComponentHostNotFoundException() throws Exception {
     // member state mocks
- 
2.19.1.windows.1

</comment></unit>
