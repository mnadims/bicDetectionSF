<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/ambari/76ea14ed31.java"><expr_stmt><expr><name>From</name> <literal type="number">76ea14ed31b27204907010100705eeaa2922e00e</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Nahappan</name> <name><name>Somasundaram</name> <argument_list type="generic">&lt;<argument><name>nsomasundaram</name><annotation>@<name><name>hortonworks</name><operator>.</operator><name>com</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Mon</name></expr><operator>,</operator> <expr><literal type="number">3</literal> <name>Oct</name> <literal type="number">2016</literal> <literal type="number">19</literal><operator>:</operator><literal type="number">54</literal><operator>:</operator><literal type="number">16</literal> <operator>-</operator><literal type="number">0700</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>AMBARI</name><operator>-</operator><literal type="number">18520</literal><operator>:</operator> <name>Ambari</name> <name>usernames</name> <name>should</name> <name>not</name> <name>be</name> <name>converted</name> <name>to</name>
 <name>lowercase</name> <name>before</name> <name>storing</name> <name>in</name> <name>the</name> <name><name>DB</name><operator>.</operator></name>

--
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name><name>UserService</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>internal</name><operator>/</operator><name><name>UserResourceProvider</name><operator>.</operator><name>java</name></name>        <operator>|</operator> <literal type="number">25</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>predicate</name><operator>/</operator><name><name>ComparisonPredicate</name><operator>.</operator><name>java</name></name>        <operator>|</operator> <literal type="number">16</literal> <operator>++</operator><operator>++</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>controller</name><operator>/</operator><name>predicate</name><operator>/</operator><name><name>EqualsPredicate</name><operator>.</operator><name>java</name></name> <operator>|</operator> <literal type="number">15</literal> <operator>++</operator><operator>++</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>User</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>Users</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">8</literal> <operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name><name>UserServiceTest</name><operator>.</operator><name>java</name></name>  <operator>|</operator> <literal type="number">71</literal> <operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>security</name><operator>/</operator><name><name>SecurityHelperImplTest</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>AmbariUserAuthenticationFilterTest</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog240Test</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <literal type="number">10</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">65</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">86</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>
 <name>delete</name> <name>mode</name> <literal type="number">100644</literal> <name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name><name>UserServiceTest</name><operator>.</operator><name>java</name></name>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name><name>UserService</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name><name>UserService</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>c46c373e56</name><operator>..</operator><name>a0fccadbfa</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name><name>UserService</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name><name>UserService</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">172</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">172</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>UserService</name> extends <name>BaseService</name> <block>{
    <expr><operator>*</operator><operator>/</operator>
   <specifier>private</specifier> <name>ResourceInstance</name> <call><name>createUserResource</name><argument_list>(<argument><expr><name>String</name> <name>userName</name></expr></argument>)</argument_list></call> <block>{
     <return>return <expr><call><name>createResource</name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>User</name></name></expr></argument>,
        <argument><expr><call><name><name>Collections</name><operator>.</operator><name>singletonMap</name></name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>User</name></name></expr></argument>, <argument><expr><call><name><name>StringUtils</name><operator>.</operator><name>lowerCase</name></name><argument_list>(<argument><expr><name>userName</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
        <call><name><name>Collections</name><operator>.</operator><name>singletonMap</name></name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>User</name></name></expr></argument>, <argument><expr><name>userName</name></expr></argument>)</argument_list></call>)</block></expr>;
   }</block></expr></expr_stmt>
 }
diff <expr_stmt><expr><operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>UserResourceProvider</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>UserResourceProvider</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">0324d38066</literal><operator>..</operator><name>adf660baba</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>UserResourceProvider</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>UserResourceProvider</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>AmbariException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>AmbariManagementController</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>UserRequest</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>UserResponse</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>predicate</name><operator>.</operator><name>EqualsPredicate</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>*</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>utilities</name><operator>.</operator><name>PropertyHelper</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>security</name><operator>.</operator><name>authorization</name><operator>.</operator><name>AuthorizationException</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">35</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">36</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
 <comment type="block" format="javadoc">/**
  * Resource provider for user resources.
  */</comment>
<class><specifier>public</specifier> class <name>UserResourceProvider</name> <super_list><extends>extends <super><name>AbstractControllerResourceProvider</name></super></extends></super_list> <block>{
<class><specifier>public</specifier> class <name>UserResourceProvider</name> <super_list><extends>extends <super><name>AbstractControllerResourceProvider</name></super></extends> <implements>implements <super><name>ResourcePredicateEvaluator</name></super></implements></super_list> <block>{
 
   <comment type="line">// ----- Property ID constants ---------------------------------------------</comment>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">188</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">189</literal></expr><operator>,</operator><expr><literal type="number">28</literal> @@ <specifier>public</specifier> <name>class</name> <name>UserResourceProvider</name> extends <name>AbstractControllerResourceProvider</name> <block>{
     <return>return <expr><call><name>getRequestStatus</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</return>
   }</block></expr></expr_stmt>
 
  <comment type="block" format="javadoc">/**
   * ResourcePredicateEvaluator implementation. If property type is User/user_name,
   * we do a case insensitive comparison so that we can return the retrieved
   * username when it differs only in case with respect to the requested username.
   *
   * @param predicate  the predicate
   * @param resource   the resource
   *
     * @return
     */</comment>
  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>boolean</name></type> <name>evaluate</name><parameter_list>(<parameter><decl><type><name>Predicate</name></type> <name>predicate</name></decl></parameter>, <parameter><decl><type><name>Resource</name></type> <name>resource</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name>predicate</name> <operator>instanceof</operator> <name>EqualsPredicate</name></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>EqualsPredicate</name></type> <name>equalsPredicate</name> <init>= <expr><operator>(</operator><name>EqualsPredicate</name><operator>)</operator><name>predicate</name></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>String</name></type> <name>propertyId</name> <init>= <expr><call><name><name>equalsPredicate</name><operator>.</operator><name>getPropertyId</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><call><name><name>propertyId</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>USER_USERNAME_PROPERTY_ID</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <return>return <expr><call><name><name>equalsPredicate</name><operator>.</operator><name>evaluateIgnoreCase</name></name><argument_list>(<argument><expr><name>resource</name></expr></argument>)</argument_list></call></expr>;</return>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block></if></if_stmt>
    <return>return <expr><call><name><name>predicate</name><operator>.</operator><name>evaluate</name></name><argument_list>(<argument><expr><name>resource</name></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>protected</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>getPKPropertyIds</name><parameter_list>()</parameter_list> <block>{<block_content>
     <return>return <expr><name>pkPropertyIds</name></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>predicate</name><operator>/</operator><name><name>ComparisonPredicate</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>predicate</name><operator>/</operator><name><name>ComparisonPredicate</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>a36f0fb074</name><operator>..</operator><name>be8016e56e</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>predicate</name><operator>/</operator><name><name>ComparisonPredicate</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>predicate</name><operator>/</operator><name><name>ComparisonPredicate</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">76</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">76</literal></expr><operator>,</operator><expr><literal type="number">15</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name><name>ComparisonPredicate</name><argument_list type="generic">&lt;<argument><name>T</name></argument>&gt;</argument_list></name> extends <name>PropertyPredicate</name> <name>implement</name>
     <call><name><name>visitor</name><operator>.</operator><name>acceptComparisonPredicate</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
 
  <function><type><specifier>protected</specifier> <name>int</name></type> <name>compareValueToIgnoreCase</name><parameter_list>(<parameter><decl><type><name>Object</name></type> <name>propertyValue</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>ClassCastException</name></expr></argument></throws><block>{<block_content>
    <return>return <expr><call><name>compareValueTo</name><argument_list>(<argument><expr><name>propertyValue</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</return> <comment type="line">// case insensitive</comment>
  </block_content>}</block></function>

   <function><type><specifier>protected</specifier> <name>int</name></type> <name>compareValueTo</name><parameter_list>(<parameter><decl><type><name>Object</name></type> <name>propertyValue</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>ClassCastException</name></expr></argument></throws><block>{<block_content>
    <return>return <expr><call><name>compareValueTo</name><argument_list>(<argument><expr><name>propertyValue</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</return> <comment type="line">// case sensitive</comment>
  </block_content>}</block></function>

  <function><type><specifier>private</specifier> <name>int</name></type> <name>compareValueTo</name><parameter_list>(<parameter><decl><type><name>Object</name></type> <name>propertyValue</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>ignoreCase</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>ClassCastException</name></expr></argument></throws> <block>{<block_content>
     <if_stmt><if>if <condition>(<expr><name>doubleValue</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
       <if_stmt><if>if <condition>(<expr><name>propertyValue</name> <operator>instanceof</operator> <name>Number</name></expr>)</condition> <block>{<block_content>
         <return>return <expr><call><name><name>doubleValue</name><operator>.</operator><name>compareTo</name></name><argument_list>(<argument><expr><operator>(</operator><operator>(</operator><name>Number</name><operator>)</operator> <name>propertyValue</name><operator>)</operator><operator>.</operator><call><name>doubleValue</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">88</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">96</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name><name>ComparisonPredicate</name><argument_list type="generic">&lt;<argument><name>T</name></argument>&gt;</argument_list></name> extends <name>PropertyPredicate</name> <name>implement</name></expr></expr_stmt>
         </block_content>}</block></if></if_stmt>
       </block_content>}</block></if></if_stmt>
     </block_content>}</block></function>

     <if_stmt><if>if <condition>(<expr><name>stringValue</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <return>return <expr><call><name><name>stringValue</name><operator>.</operator><name>compareTo</name></name><argument_list>(<argument><expr><call><name><name>propertyValue</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
      <if_stmt><if>if <condition>(<expr><name>ignoreCase</name></expr>)</condition> <block>{<block_content>
        <return>return <expr><call><name><name>stringValue</name><operator>.</operator><name>compareToIgnoreCase</name></name><argument_list>(<argument><expr><call><name><name>propertyValue</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
      </block_content>}</block></if>
      <else>else <block>{<block_content>
        <return>return <expr><call><name><name>stringValue</name><operator>.</operator><name>compareTo</name></name><argument_list>(<argument><expr><call><name><name>propertyValue</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
      </block_content>}</block></else></if_stmt>
     </block_content>}</block></if></if_stmt>
 
     <return>return <expr><call><name>getValue</name><argument_list>()</argument_list></call><operator>.</operator><call><name>compareTo</name><argument_list>(<argument><expr><operator>(</operator><name>T</name><operator>)</operator> <name>propertyValue</name></expr></argument>)</argument_list></call></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>predicate</name><operator>/</operator><name><name>EqualsPredicate</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>predicate</name><operator>/</operator><name><name>EqualsPredicate</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">64f5c6fc94</literal><operator>..</operator><literal type="number">7ac0e7a0c0</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>predicate</name><operator>/</operator><name><name>EqualsPredicate</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>predicate</name><operator>/</operator><name><name>EqualsPredicate</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">39</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">39</literal></expr><operator>,</operator><expr><literal type="number">21</literal> @@ <specifier>public</specifier> <name>class</name> <name><name>EqualsPredicate</name><argument_list type="generic">&lt;<argument><name>T</name></argument>&gt;</argument_list></name> extends <name><name>ComparisonPredicate</name><argument_list type="generic">&lt;<argument><name>T</name></argument>&gt;</argument_list></name> <block>{
         <expr><name>propertyValue</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name>compareValueTo</name><argument_list>(<argument><expr><name>propertyValue</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>;
   }</block>
 
  <comment type="block" format="javadoc">/**
   * Case insensitive equality support for string types
   *
   * @param resource
   * @return
     */</comment>
  <specifier>public</specifier> <name>boolean</name> <call><name>evaluateIgnoreCase</name><argument_list>(<argument><expr><name>Resource</name> <name>resource</name></expr></argument>)</argument_list></call> <block>{
    <expr><name>Object</name> <name>propertyValue</name>  <operator>=</operator> <call><name><name>resource</name><operator>.</operator><name>getPropertyValue</name></name><argument_list>(<argument><expr><call><name>getPropertyId</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><name>Object</name> <name>predicateValue</name> <operator>=</operator> <call><name>getValue</name><argument_list>()</argument_list></call></expr>;

    <return>return <expr><ternary><condition><expr><name>predicateValue</name> <operator>==</operator> <literal type="null">null</literal></expr> ?</condition><then>
            <expr><name>propertyValue</name> <operator>==</operator> <literal type="null">null</literal></expr> </then><else>:
            <expr><name>propertyValue</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name>compareValueToIgnoreCase</name><argument_list>(<argument><expr><name>propertyValue</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr></else></ternary></expr>;</return>
  }</block></expr></expr_stmt>

   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>public</specifier> <name>String</name></type> <name>getOperator</name><parameter_list>()</parameter_list> <block>{<block_content>
     <return>return <expr><literal type="string">"="</literal></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>User</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>User</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">85104fc5d6</literal><operator>..</operator><literal type="number">3064f62b1d</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>User</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>User</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">46</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">46</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>User</name> <block>{
 
   <expr><specifier>public</specifier> <call><name>User</name><argument_list>(<argument><expr><name>UserEntity</name> <name>userEntity</name></expr></argument>)</argument_list></call> <block>{
     <expr><name>userId</name> <operator>=</operator> <call><name><name>userEntity</name><operator>.</operator><name>getUserId</name></name><argument_list>()</argument_list></call></expr>;
    <expr><name>userName</name> <operator>=</operator> <call><name><name>StringUtils</name><operator>.</operator><name>lowerCase</name></name><argument_list>(<argument><expr><call><name><name>userEntity</name><operator>.</operator><name>getUserName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>; <comment type="line">// normalize to lower case</comment>
    <expr><name>userName</name> <operator>=</operator> <call><name><name>userEntity</name><operator>.</operator><name>getUserName</name></name><argument_list>()</argument_list></call></expr>;
     <expr><name>createTime</name> <operator>=</operator> <call><name><name>userEntity</name><operator>.</operator><name>getCreateTime</name></name><argument_list>()</argument_list></call></expr>;
     <expr><name>userType</name> <operator>=</operator> <call><name><name>userEntity</name><operator>.</operator><name>getUserType</name></name><argument_list>()</argument_list></call></expr>;
     <expr><name>ldapUser</name> <operator>=</operator> <call><name><name>userEntity</name><operator>.</operator><name>getLdapUser</name></name><argument_list>()</argument_list></call></expr>;
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>Users</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>Users</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>e547f058d4</name><operator>..</operator><name>a4f0031666</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>Users</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>Users</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">282</literal></expr>,<expr><literal type="number">11</literal> <operator>+</operator><literal type="number">282</literal></expr>,<expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>Users</name> <block>{
       <throw>throw <argument_list>new <argument><expr><call><name>AmbariException</name><argument_list>(<argument><expr><literal type="string">"UserType not specified."</literal></expr></argument>)</argument_list></call></expr></argument></argument_list></throw>;
     }</block>
 
    <comment type="line">// store user name in lower case</comment>
    <name>userName</name> <operator>=</operator> <call><name><name>StringUtils</name><operator>.</operator><name>lowerCase</name></name><argument_list>(<argument><expr><name>userName</name></expr></argument>)</argument_list></call></expr>;

    <if_stmt><if>if <condition>(<expr><call><name>getUser</name><argument_list>(<argument><expr><name>userName</name></expr></argument>, <argument><expr><name>userType</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>AmbariException</name><argument_list>(<argument><expr><literal type="string">"User "</literal> <operator>+</operator> <name>userName</name> <operator>+</operator> <literal type="string">" already exists"</literal></expr></argument>)</argument_list></call></expr>;</throw>
    <decl_stmt><decl><type><name>User</name></type> <name>existingUser</name> <init>= <expr><call><name>getUser</name><argument_list>(<argument><expr><name>userName</name></expr></argument>, <argument><expr><name>userType</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>existingUser</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>AmbariException</name><argument_list>(<argument><expr><literal type="string">"User "</literal> <operator>+</operator> <call><name><name>existingUser</name><operator>.</operator><name>getUserName</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">" already exists"</literal></expr></argument>)</argument_list></call></expr>;</throw>
     <expr_stmt/></block_content></block></if></if_stmt></block_content></block></if></if_stmt>}</block>
 
     <name>PrincipalTypeEntity</name> <name>principalTypeEntity</name> <operator>=</operator> <call><name><name>principalTypeDAO</name><operator>.</operator><name>findById</name></name><argument_list>(<argument><expr><name><name>PrincipalTypeEntity</name><operator>.</operator><name>USER_PRINCIPAL_TYPE</name></name></expr></argument>)</argument_list></call></expr>;
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name><name>UserServiceTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name><name>UserServiceTest</name><operator>.</operator><name>java</name></name>
<name>deleted</name> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">0ed0a6657c</literal><operator>..</operator><literal type="number">0000000000</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>api</name><operator>/</operator><name>services</name><operator>/</operator><name><name>UserServiceTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
@@ <operator>-</operator><literal type="number">1</literal></expr>,<expr><literal type="number">71</literal> <operator>+</operator><literal type="number">0</literal></expr>,<expr><literal type="number">0</literal> @@</expr>
<comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>api</name><operator>.</operator><name>services</name></name>;</package></block></expr></expr_stmt>

<import>import <name><name>javax</name><operator>.</operator><name>ws</name><operator>.</operator><name>rs</name><operator>.</operator><name>core</name><operator>.</operator><name>HttpHeaders</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>ws</name><operator>.</operator><name>rs</name><operator>.</operator><name>core</name><operator>.</operator><name>MultivaluedMap</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>ws</name><operator>.</operator><name>rs</name><operator>.</operator><name>core</name><operator>.</operator><name>Response</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>ws</name><operator>.</operator><name>rs</name><operator>.</operator><name>core</name><operator>.</operator><name>UriInfo</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>api</name><operator>.</operator><name>resources</name><operator>.</operator><name>ResourceInstance</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>spi</name><operator>.</operator><name>Resource</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>UserEntity</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>

<import>import static <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertEquals</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Unit tests for UserService.
 */</comment>
<class><specifier>public</specifier> class <name>UserServiceTest</name> <block>{

  <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testCreateResourcesWithUppercaseUsername</name><parameter_list>()</parameter_list> <block>{<block_content>
    <comment type="line">// GIVEN</comment>
    <decl_stmt><decl><type><name>UserService</name></type> <name>userService</name> <init>= <expr><operator>new</operator> <call><name>TestUserService</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <comment type="line">// WHEN</comment>
    <decl_stmt><decl><type><name>Response</name></type> <name>response</name> <init>= <expr><call><name><name>userService</name><operator>.</operator><name>getUser</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="string">"MyUser"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <comment type="line">// THEN</comment>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"myuser"</literal></expr></argument>, <argument><expr><operator>(</operator><operator>(</operator><name>UserEntity</name><operator>)</operator> <call><name><name>response</name><operator>.</operator><name>getEntity</name></name><argument_list>()</argument_list></call><operator>)</operator><operator>.</operator><call><name>getUserName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <class>class <name>TestUserService</name> <super_list><extends>extends <super><name>UserService</name></super></extends></super_list> <block>{
    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>protected</specifier> <name>Response</name></type> <name>handleRequest</name><parameter_list>(<parameter><decl><type><name>HttpHeaders</name></type> <name>headers</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>body</name></decl></parameter>, <parameter><decl><type><name>UriInfo</name></type> <name>uriInfo</name></decl></parameter>,
                                     <parameter><decl><type><name><name>Request</name><operator>.</operator><name>Type</name></name></type> <name>requestType</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <name>ResourceInstance</name></type> <name>resource</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <return>return <expr><operator>new</operator> <class><super><name>Response</name></super><argument_list>()</argument_list> <block>{
        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>Object</name></type> <name>getEntity</name><parameter_list>()</parameter_list> <block>{<block_content>
          <decl_stmt><decl><type><name>UserEntity</name></type> <name>entity</name> <init>= <expr><operator>new</operator> <call><name>UserEntity</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
          <expr_stmt><expr><call><name><name>entity</name><operator>.</operator><name>setUserName</name></name><argument_list>(<argument><expr><call><name><name>resource</name><operator>.</operator><name>getKeyValueMap</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>Resource</name><operator>.</operator><name>Type</name><operator>.</operator><name>User</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <return>return <expr><name>entity</name></expr>;</return>
        </block_content>}</block></function>

        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>int</name></type> <name>getStatus</name><parameter_list>()</parameter_list> <block>{<block_content>
          <return>return <expr><literal type="number">0</literal></expr>;</return>
        </block_content>}</block></function>

        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name><name>MultivaluedMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>getMetadata</name><parameter_list>()</parameter_list> <block>{<block_content>
          <return>return <expr><literal type="null">null</literal></expr>;</return>
        </block_content>}</block></function>
      }</block></class></expr>;</return>
    </block_content>}</block></function>
  }</block></class>
}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name><name>SecurityHelperImplTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name><name>SecurityHelperImplTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>a4bd6c1503</name><operator>..</operator><literal type="number">344254689e</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name><name>SecurityHelperImplTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name><name>SecurityHelperImplTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">44</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">44</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>SecurityHelperImplTest</name> <block>{
     <expr><name>SecurityContext</name> <name>ctx</name> <operator>=</operator> <call><name><name>SecurityContextHolder</name><operator>.</operator><name>getContext</name></name><argument_list>()</argument_list></call></expr>;
     <expr><name>UserEntity</name> <name>userEntity</name> <operator>=</operator> <operator>new</operator> <call><name>UserEntity</name><argument_list>()</argument_list></call></expr>;
     <expr><call><name><name>userEntity</name><operator>.</operator><name>setPrincipal</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>PrincipalEntity</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>userEntity</name><operator>.</operator><name>setUserName</name></name><argument_list>(<argument><expr><literal type="string">"username"</literal></expr></argument>)</argument_list></call></expr>; <comment type="line">// with user entity, always use lower case</comment>
    <expr><call><name><name>userEntity</name><operator>.</operator><name>setUserName</name></name><argument_list>(<argument><expr><literal type="string">"userName"</literal></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>userEntity</name><operator>.</operator><name>setUserId</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;
     <expr><name>User</name> <name>user</name> <operator>=</operator> <operator>new</operator> <call><name>User</name><argument_list>(<argument><expr><name>userEntity</name></expr></argument>)</argument_list></call></expr>;
     <expr><name>Authentication</name> <name>auth</name> <operator>=</operator> <operator>new</operator> <call><name>AmbariUserAuthentication</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>user</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>ctx</name><operator>.</operator><name>setAuthentication</name></name><argument_list>(<argument><expr><name>auth</name></expr></argument>)</argument_list></call></expr>;
 
    <expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="string">"username"</literal></expr></argument>, <argument><expr><call><name><name>SecurityHelperImpl</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCurrentUserName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="string">"userName"</literal></expr></argument>, <argument><expr><call><name><name>SecurityHelperImpl</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCurrentUserName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
   }</block>
 
   @<name>Test</name>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>AmbariUserAuthenticationFilterTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>AmbariUserAuthenticationFilterTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>fda31887d5</name><operator>..</operator><literal type="number">80a66fdfc2</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>AmbariUserAuthenticationFilterTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>AmbariUserAuthenticationFilterTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">52</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">52</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import static <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertNull</name></name>;</import>
 <class><specifier>public</specifier> class <name>AmbariUserAuthenticationFilterTest</name> <block>{
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>TEST_INTERNAL_TOKEN</name> <init>= <expr><literal type="string">"test token"</literal></expr></init></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>TEST_USER_ID_HEADER</name> <init>= <expr><literal type="string">"1"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>TEST_USER_NAME</name> <init>= <expr><literal type="string">"username"</literal></expr></init></decl>;</decl_stmt> <comment type="line">// use lower case with user entity</comment>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>TEST_USER_NAME</name> <init>= <expr><literal type="string">"userName"</literal></expr></init></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>int</name></type> <name>TEST_USER_ID</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
 
   <annotation>@<name>Before</name></annotation>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog240Test</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog240Test</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">099af7e475</literal><operator>..</operator><literal type="number">958758fb34</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog240Test</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog240Test</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">2532</literal></expr><operator>,</operator><expr><literal type="number">17</literal> <operator>+</operator><literal type="number">2532</literal></expr><operator>,</operator><expr><literal type="number">17</literal> @@ <specifier>public</specifier> <name>class</name> <name>UpgradeCatalog240Test</name> <block>{
     <expr><name>final</name> <name>Users</name> <name>users</name> <operator>=</operator> <call><name>createMock</name><argument_list>(<argument><expr><name><name>Users</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
 
     <expr><name>RequestScheduleEntity</name> <name>requestScheduleEntity</name> <operator>=</operator> <operator>new</operator> <call><name>RequestScheduleEntity</name><argument_list>()</argument_list></call></expr>;
    <expr><call><name><name>requestScheduleEntity</name><operator>.</operator><name>setCreateUser</name></name><argument_list>(<argument><expr><literal type="string">"createduser"</literal></expr></argument>)</argument_list></call></expr>; <comment type="line">// use lower case user name with request schedule entity</comment>
    <expr><call><name><name>requestScheduleEntity</name><operator>.</operator><name>setCreateUser</name></name><argument_list>(<argument><expr><literal type="string">"createdUser"</literal></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>requestScheduleEntity</name><operator>.</operator><name>setClusterId</name></name><argument_list>(<argument><expr><literal type="number">1L</literal></expr></argument>)</argument_list></call></expr>;
 
     <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>requestScheduleDAO</name><operator>.</operator><name>findAll</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><call><name><name>Collections</name><operator>.</operator><name>singletonList</name></name><argument_list>(<argument><expr><name>requestScheduleEntity</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>once</name><argument_list>()</argument_list></call></expr>;
 
     <expr><name>UserEntity</name> <name>userEntity</name> <operator>=</operator> <operator>new</operator> <call><name>UserEntity</name><argument_list>()</argument_list></call></expr>;
    <expr><call><name><name>userEntity</name><operator>.</operator><name>setUserName</name></name><argument_list>(<argument><expr><literal type="string">"createduser"</literal></expr></argument>)</argument_list></call></expr>; <comment type="line">// use lower case user name with user entity</comment>
    <expr><call><name><name>userEntity</name><operator>.</operator><name>setUserName</name></name><argument_list>(<argument><expr><literal type="string">"createdUser"</literal></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>userEntity</name><operator>.</operator><name>setUserId</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>userEntity</name><operator>.</operator><name>setPrincipal</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>PrincipalEntity</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <expr><name>User</name> <name>user</name> <operator>=</operator> <operator>new</operator> <call><name>User</name><argument_list>(<argument><expr><name>userEntity</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>users</name><operator>.</operator><name>getUserIfUnique</name></name><argument_list>(<argument><expr><literal type="string">"createduser"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>user</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>once</name><argument_list>()</argument_list></call></expr>;
    <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>users</name><operator>.</operator><name>getUserIfUnique</name></name><argument_list>(<argument><expr><literal type="string">"createdUser"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>user</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>once</name><argument_list>()</argument_list></call></expr>;
 
     <expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>requestScheduleDAO</name><operator>.</operator><name>merge</name></name><argument_list>(<argument><expr><name>requestScheduleEntity</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>requestScheduleEntity</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>once</name><argument_list>()</argument_list></call></expr>;
 
<expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></block></expr></expr_stmt></block></class></block_content></block></function></block></class></block></class>

</unit>
