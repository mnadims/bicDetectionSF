<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/ambari/4a42b6d5b9.java"><expr_stmt><expr><name>From</name> <literal type="number">4a42b6d5b9c69e8822e6bf35ef656e3c7f8ae0ac</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Andrew</name> <name><name>Onishuk</name> <argument_list type="generic">&lt;<argument><name>aonishuk</name><annotation>@<name><name>hortonworks</name><operator>.</operator><name>com</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Mon</name></expr><operator>,</operator> <expr><literal type="number">8</literal> <name>Dec</name> <literal type="number">2014</literal> <literal type="number">20</literal><operator>:</operator><literal type="number">21</literal><operator>:</operator><literal type="number">46</literal> <operator>+</operator><literal type="number">0200</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>AMBARI</name><operator>-</operator><literal type="number">8561.</literal> <name>Install</name> <name>Wizard</name><operator>:</operator> <name>Falcon</name> <name>Server</name> <name>properties</name> <name>are</name>
 <call><name>empty</name>  <argument_list>(<argument><expr><name>aonishuk</name></expr></argument>)</argument_list></call>

<operator>--</operator>
 <operator>...</operator><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>stack</name><operator>/</operator><name><name>ServiceModule</name><operator>.</operator><name>java</name></name>    <operator>|</operator> <literal type="number">15</literal> <operator>++</operator><operator>++</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name><name>ServiceInfo</name><operator>.</operator><name>java</name></name>      <operator>|</operator> <literal type="number">19</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name>stack</name><operator>/</operator><name><name>ServiceModuleTest</name><operator>.</operator><name>java</name></name>       <operator>|</operator> <literal type="number">33</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator>
 <name>ambari</name><operator>-</operator><name>web</name><operator>/</operator><name>app</name><operator>/</operator><name>data</name><operator>/</operator><name>HDP2</name><literal type="number">.2</literal><operator>/</operator><name><name>site_properties</name><operator>.</operator><name>js</name></name> <operator>|</operator> <literal type="number">16</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator>
 <name>ambari</name><operator>-</operator><name>web</name><operator>/</operator><name>app</name><operator>/</operator><name>data</name><operator>/</operator><name>HDP2</name><operator>/</operator><name><name>site_properties</name><operator>.</operator><name>js</name></name>   <operator>|</operator> <literal type="number">16</literal> <operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <literal type="number">5</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">49</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">50</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>stack</name><operator>/</operator><name><name>ServiceModule</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>stack</name><operator>/</operator><name><name>ServiceModule</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>e95e767a11</name><operator>..</operator><literal type="number">452d3dd6b0</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>stack</name><operator>/</operator><name><name>ServiceModule</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>stack</name><operator>/</operator><name><name>ServiceModule</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">19</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">18</literal> @@</expr></expr_stmt>
 
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>stack</name></name>;</package>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>AmbariException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>api</name><operator>.</operator><name>services</name><operator>.</operator><name>AmbariMetaInfo</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>ComponentInfo</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>CustomCommandDefinition</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>PropertyInfo</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>ServiceInfo</name></name>;</import>

 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collection</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>AmbariException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>api</name><operator>.</operator><name>services</name><operator>.</operator><name>AmbariMetaInfo</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>ComponentInfo</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>CustomCommandDefinition</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>PropertyInfo</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>ServiceInfo</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
  * Service module which provides all functionality related to parsing and fully
@@ -177,12 +176,10 @@ public class ServiceModule extends BaseModule&lt;ServiceModule, ServiceInfo&gt; {
 
     if (configDirectory != null) {
       for (ConfigurationModule config : configDirectory.getConfigurationModules()) {
        if (! serviceInfo.getExcludedConfigTypes().contains(config.getConfigType())) {
           ConfigurationInfo info = config.getModuleInfo();
           serviceInfo.getProperties().addAll(info.getProperties());
           serviceInfo.setTypeAttributes(config.getConfigType(), info.getAttributes());
           configurationModules.put(config.getConfigType(), config);
        }
       }
 
       for (String excludedType : serviceInfo.getExcludedConfigTypes()) {
diff --git a/ambari-server/src/main/java/org/apache/ambari/server/state/ServiceInfo.java b/ambari-server/src/main/java/org/apache/ambari/server/state/ServiceInfo.java
index 9277ec6690..5224aaa605 100644
-- a/ambari-server/src/main/java/org/apache/ambari/server/state/ServiceInfo.java
++ b/ambari-server/src/main/java/org/apache/ambari/server/state/ServiceInfo.java
@@ -286,9 +286,14 @@ public class ServiceInfo {
    * @return unmodifiable map of config types associated with this service
    */</comment>
   <function><type><specifier>public</specifier> <specifier>synchronized</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>getConfigTypeAttributes</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><ternary><condition><expr><name>configTypes</name> <operator>==</operator> <literal type="null">null</literal></expr> ?</condition><then>
        <expr><name><name>Collections</name><operator>.</operator></name>&lt;<name>String</name></expr></then></ternary></expr><operator>,</operator> <expr><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name><operator>&gt;</operator><call><name>emptyMap</name><argument_list>()</argument_list></call> <operator>:</operator>
        <call><name><name>Collections</name><operator>.</operator><name>unmodifiableMap</name></name><argument_list>(<argument><expr><name>configTypes</name></expr></argument>)</argument_list></call></expr>;</return>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>tmpConfigTypes</name> <init>= <expr><ternary><condition><expr><name>configTypes</name> <operator>==</operator> <literal type="null">null</literal></expr> ?</condition><then>
        <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr> </then><else>: <expr><name>configTypes</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <for>for<control>(<init><decl><type><name>String</name></type> <name>excludedtype</name> <range>: <expr><name>excludedConfigTypes</name></expr></range></decl></init>)</control><block>{<block_content>
      <expr_stmt><expr><call><name><name>tmpConfigTypes</name><operator>.</operator><name>remove</name></name><argument_list>(<argument><expr><name>excludedtype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>

    <return>return <expr><call><name><name>Collections</name><operator>.</operator><name>unmodifiableMap</name></name><argument_list>(<argument><expr><name>tmpConfigTypes</name></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
 
   <comment type="block" format="javadoc">/**
@@ -302,10 +307,7 @@ public class ServiceInfo {
     if (this.configTypes == null) {
       configTypes = new HashMap&lt;String, Map&lt;String, Map&lt;String, String&gt;&gt;&gt;();
     }

    if (! excludedConfigTypes.contains(type)) {
      configTypes.put(type, typeAttributes);
    }
    configTypes.put(type, typeAttributes);
   }
 
   /**
@@ -336,7 +338,8 @@ public class ServiceInfo {
    * @return true if the service has the specified config type; false otherwise
    */</comment>
   <function><type><specifier>public</specifier> <name>boolean</name></type> <name>hasConfigType</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>type</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <return>return <expr><name>configTypes</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>configTypes</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><name>type</name></expr></argument>)</argument_list></call></expr>;</return>
    <return>return <expr><name>configTypes</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>configTypes</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><name>type</name></expr></argument>)</argument_list></call>
        <operator>&amp;&amp;</operator> <operator>!</operator><call><name><name>excludedConfigTypes</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><name>type</name></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
 
   <comment type="block" format="javadoc">/**
diff --git a/ambari-server/src/test/java/org/apache/ambari/server/stack/ServiceModuleTest.java b/ambari-server/src/test/java/org/apache/ambari/server/stack/ServiceModuleTest.java
index 529def505c..5262c7719d 100644
-- a/ambari-server/src/test/java/org/apache/ambari/server/stack/ServiceModuleTest.java
++ b/ambari-server/src/test/java/org/apache/ambari/server/stack/ServiceModuleTest.java
@@ -18,14 +18,13 @@
 
 package org.apache.ambari.server.stack;
 
import org.apache.ambari.server.AmbariException;
import org.apache.ambari.server.state.CommandScriptDefinition;
import org.apache.ambari.server.state.ComponentInfo;
import org.apache.ambari.server.state.CustomCommandDefinition;
import org.apache.ambari.server.state.PropertyInfo;
import org.apache.ambari.server.state.ServiceInfo;
import org.apache.ambari.server.state.ServiceOsSpecific;
import org.junit.Test;
import static org.easymock.EasyMock.createNiceMock;
import static org.easymock.EasyMock.createStrictMock;
import static org.easymock.EasyMock.expect;
import static org.easymock.EasyMock.replay;
import static org.easymock.EasyMock.verify;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;
 
 import java.io.File;
 import java.lang.reflect.Field;
@@ -35,14 +34,14 @@ import java.util.Collections;
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;

import static org.easymock.EasyMock.createNiceMock;
import static org.easymock.EasyMock.createStrictMock;
import static org.easymock.EasyMock.expect;
import static org.easymock.EasyMock.replay;
import static org.easymock.EasyMock.verify;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;
import org.apache.ambari.server.AmbariException;
import org.apache.ambari.server.state.CommandScriptDefinition;
import org.apache.ambari.server.state.ComponentInfo;
import org.apache.ambari.server.state.CustomCommandDefinition;
import org.apache.ambari.server.state.PropertyInfo;
import org.apache.ambari.server.state.ServiceInfo;
import org.apache.ambari.server.state.ServiceOsSpecific;
import org.junit.Test;
 
 /**
  * ServiceModule unit tests.
@@ -775,7 +774,7 @@ public class ServiceModuleTest {
     ServiceModule service = createServiceModule(info, configModules);
 
     List&lt;PropertyInfo&gt; properties = service.getModuleInfo().getProperties();
    assertEquals(3, properties.size());
    assertEquals(4, properties.size());
 
     Map&lt;String, Map&lt;String, Map&lt;String, String&gt;&gt;&gt; attributes = service.getModuleInfo().getConfigTypeAttributes();
     assertEquals(2, attributes.size());
diff --git a/ambari-web/app/data/HDP2.2/site_properties.js b/ambari-web/app/data/HDP2.2/site_properties.js
index f5b001c1a5..589057f514 100644
-- a/ambari-web/app/data/HDP2.2/site_properties.js
++ b/ambari-web/app/data/HDP2.2/site_properties.js
@@ -87,6 +87,22 @@ hdp22properties.push(
     "serviceName": "HDFS",
     "filename": "hdfs-site.xml",
     "index": 1
  },
  {
    "id": "site property",
    "name": "*.falcon.graph.blueprints.graph",
    "displayName": "*.falcon.graph.blueprints.graph",
    "category": "FalconStartupSite",
    "serviceName": "FALCON",
    "filename": "falcon-startup.properties.xml"
  },
  {
    "id": "site property",
    "name": "*.falcon.graph.storage.backend",
    "displayName": "*.falcon.graph.storage.backend",
    "category": "FalconStartupSite",
    "serviceName": "FALCON",
    "filename": "falcon-startup.properties.xml"
   });
 
 var additionalProperties = [];
diff --git a/ambari-web/app/data/HDP2/site_properties.js b/ambari-web/app/data/HDP2/site_properties.js
index 3cf97ae184..49be514329 100644
-- a/ambari-web/app/data/HDP2/site_properties.js
++ b/ambari-web/app/data/HDP2/site_properties.js
@@ -1915,14 +1915,6 @@ module.exports =
     },
 
     // Falcon Graph and Storage
    {
      "id": "site property",
      "name": "*.falcon.graph.blueprints.graph",
      "displayName": "*.falcon.graph.blueprints.graph",
      "category": "FalconStartupSite",
      "serviceName": "FALCON",
      "filename": "falcon-startup.properties.xml"
    },
     {
       "id": "site property",
       "name": "*.falcon.graph.storage.directory",
@@ -1933,14 +1925,6 @@ module.exports =
       "serviceName": "FALCON",
       "filename": "falcon-startup.properties.xml"
     },
    {
      "id": "site property",
      "name": "*.falcon.graph.storage.backend",
      "displayName": "*.falcon.graph.storage.backend",
      "category": "FalconStartupSite",
      "serviceName": "FALCON",
      "filename": "falcon-startup.properties.xml"
    },
     {
       "id": "site property",
       "name": "*.falcon.graph.serialize.path",
- 
2.19.1.windows.1

</comment></unit>
