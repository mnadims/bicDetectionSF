<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/ambari/0cbc5fa385.java"><expr_stmt><expr><name>From</name> <literal type="number">0cbc5fa385412dd7438f794a49c4ae584be54582</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Nahappan</name> <name><name>Somasundaram</name> <argument_list type="generic">&lt;<argument><name>nsomasundaram</name><annotation>@<name><name>hortonworks</name><operator>.</operator><name>com</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Wed</name></expr><operator>,</operator> <expr><literal type="number">22</literal> <name>Jun</name> <literal type="number">2016</literal> <literal type="number">16</literal><operator>:</operator><literal type="number">28</literal><operator>:</operator><literal type="number">31</literal> <operator>-</operator><literal type="number">0700</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>AMBARI</name><operator>-</operator><literal type="number">17383</literal><operator>:</operator> <name>User</name> <name>names</name> <name>should</name> <name>be</name></expr></expr_stmt> <case>case <expr><name>insensitive</name>

<operator>--</operator>
 <operator>...</operator><operator>/</operator><name><name>AmbariManagementControllerImpl</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  <literal type="number">3</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>dao</name><operator>/</operator><name><name>UserDAO</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>AmbariLdapAuthenticationProvider</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">3</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>AmbariLocalUserProvider</name><operator>.</operator><name>java</name></name>              <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>User</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>Users</name><operator>.</operator><name>java</name></name>  <operator>|</operator> <literal type="number">57</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>internal</name><operator>/</operator><name><name>UserResourceProviderTest</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>security</name><operator>/</operator><name><name>SecurityHelperImplTest</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">5</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>AmbariUserAuthenticationFilterTest</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">3</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>TestUsers</name><operator>.</operator><name>java</name></name>     <operator>|</operator> <literal type="number">40</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog240Test</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <literal type="number">11</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr_stmt><expr><literal type="number">64</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">65</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>AmbariManagementControllerImpl</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>AmbariManagementControllerImpl</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">9f82a90811</literal><operator>..</operator><name>fe7e757ae8</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>AmbariManagementControllerImpl</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name><name>AmbariManagementControllerImpl</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">128</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">128</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>security</name><operator>.</operator><name>authorization</name><operator>.</operator><name>Group</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>security</name><operator>.</operator><name>authorization</name><operator>.</operator><name>ResourceType</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>security</name><operator>.</operator><name>authorization</name><operator>.</operator><name>RoleAuthorization</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>security</name><operator>.</operator><name>authorization</name><operator>.</operator><name>User</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>security</name><operator>.</operator><name>authorization</name><operator>.</operator><name>UserType</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>security</name><operator>.</operator><name>authorization</name><operator>.</operator><name>Users</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>security</name><operator>.</operator><name>credential</name><operator>.</operator><name>PrincipalKeyCredential</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>security</name><operator>.</operator><name>encryption</name><operator>.</operator><name>CredentialStoreService</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">917</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">918</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariManagementControllerImpl</name> implements <name>AmbariManagementControlle</name>
         <throw>throw <argument_list>new <argument><expr><call><name>AmbariException</name><argument_list>(<argument><expr><literal type="string">"Username and password must be supplied."</literal></expr></argument>)</argument_list></call></expr></argument></argument_list></throw></expr>;</expr_stmt>
       </case>}
 
      users<expr_stmt><expr><operator>.</operator><call><name>createUser</name><argument_list>(<argument><expr><call><name><name>request</name><operator>.</operator><name>getUsername</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>request</name><operator>.</operator><name>getPassword</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>request</name><operator>.</operator><name>isActive</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>request</name><operator>.</operator><name>isAdmin</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>users</name><operator>.</operator><name>createUser</name></name><argument_list>(<argument><expr><call><name><name>request</name><operator>.</operator><name>getUsername</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>request</name><operator>.</operator><name>getPassword</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>UserType</name><operator>.</operator><name>LOCAL</name></name></expr></argument>, <argument><expr><call><name><name>request</name><operator>.</operator><name>isActive</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>request</name><operator>.</operator><name>isAdmin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     }
   }
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>dao</name><operator>/</operator><name><name>UserDAO</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>dao</name><operator>/</operator><name><name>UserDAO</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>d209cfcfc5</name><operator>..</operator><name>d3c2d891cb</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>dao</name><operator>/</operator><name><name>UserDAO</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>dao</name><operator>/</operator><name><name>UserDAO</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">37</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">37</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt> <import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>Singleton</name></name>;</import>
 <import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>inject</name><operator>.</operator><name>persist</name><operator>.</operator><name>Transactional</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>security</name><operator>.</operator><name>authorization</name><operator>.</operator><name>UserType</name></name>;</import>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>lang</name><operator>.</operator><name>StringUtils</name></name>;</import>

 <class><annotation>@<name>Singleton</name></annotation>
 <specifier>public</specifier> class <name>UserDAO</name> <block>{
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">75</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">77</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>UserDAO</name> <block>{
   @<expr><name>RequiresSession</name>
   <specifier>public</specifier> <name>UserEntity</name> <call><name>findUserByNameAndType</name><argument_list>(<argument><expr><name>String</name> <name>userName</name></expr></argument>, <argument><expr><name>UserType</name> <name>userType</name></expr></argument>)</argument_list></call> <block>{
     <expr><name><name>TypedQuery</name><argument_list type="generic">&lt;<argument><name>UserEntity</name></argument>&gt;</argument_list></name> <name>query</name> <operator>=</operator> <call><name><name>entityManagerProvider</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>createQuery</name><argument_list>(<argument><expr><literal type="string">"SELECT user FROM UserEntity user WHERE "</literal> <operator>+</operator>
        <literal type="string">"user.userType=:type AND user.userName=:name"</literal></expr></argument>, <argument><expr><name><name>UserEntity</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
        <expr><literal type="string">"user.userType=:type AND lower(user.userName)=lower(:name)"</literal></expr>, <expr><name><name>UserEntity</name><operator>.</operator><name>class</name></name></expr>)</block></expr>; <comment type="line">// do case insensitive compare</comment>
     <expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"type"</literal></expr></argument>, <argument><expr><name>userType</name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"name"</literal></expr></argument>, <argument><expr><name>userName</name></expr></argument>)</argument_list></call></expr>;
     <try>try <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>AmbariLdapAuthenticationProvider</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>AmbariLdapAuthenticationProvider</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">0bf7ec269f</literal><operator>..</operator><literal type="number">8527271027</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>AmbariLdapAuthenticationProvider</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>AmbariLdapAuthenticationProvider</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">195</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">195</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariLdapAuthenticationProvider</name> implements <name>AuthenticationProvider</name>
 
     <name>UserEntity</name> <name>userEntity</name> <operator>=</operator> <call><name><name>userDAO</name><operator>.</operator><name>findLdapUserByName</name></name><argument_list>(<argument><expr><name>userName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
    <if_stmt><if>if <condition>(<expr><name>userEntity</name> <operator>==</operator> <literal type="null">null</literal> <operator>||</operator> <operator>!</operator><call><name><name>StringUtils</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><call><name><name>userEntity</name><operator>.</operator><name>getUserName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>userName</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
    <comment type="line">// lookup is case insensitive, so no need for string comparison</comment>
    <if_stmt><if>if <condition>(<expr><name>userEntity</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"user not found "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <throw>throw <expr><operator>new</operator> <call><name>UsernameNotFoundException</name><argument_list>(<argument><expr><literal type="string">"Username "</literal> <operator>+</operator> <name>userName</name> <operator>+</operator> <literal type="string">" not found"</literal></expr></argument>)</argument_list></call></expr>;</throw>
     <expr_stmt/></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></try>}</block>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>AmbariLocalUserProvider</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>AmbariLocalUserProvider</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>a8c9b19ade</name><operator>..</operator><name>f3ae0c3374</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>AmbariLocalUserProvider</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>AmbariLocalUserProvider</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">63</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">63</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>AmbariLocalUserProvider</name> extends <name>AbstractUserDetailsAuthenticationPr</name>
 
     <name>UserEntity</name> <name>userEntity</name> <operator>=</operator> <call><name><name>userDAO</name><operator>.</operator><name>findLocalUserByName</name></name><argument_list>(<argument><expr><name>userName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
    <if_stmt><if>if <condition>(<expr><name>userEntity</name> <operator>==</operator> <literal type="null">null</literal> <operator>||</operator> <operator>!</operator><call><name><name>StringUtils</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><call><name><name>userEntity</name><operator>.</operator><name>getUserName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>userName</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name>userEntity</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
       <comment type="line">//TODO case insensitive name comparison is a temporary solution, until users API will change to use id as PK</comment>
       <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"user not found "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <throw>throw <expr><operator>new</operator> <call><name>UsernameNotFoundException</name><argument_list>(<argument><expr><literal type="string">"Username "</literal> <operator>+</operator> <name>userName</name> <operator>+</operator> <literal type="string">" not found"</literal></expr></argument>)</argument_list></call></expr>;</throw>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>User</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>User</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">720918b646</literal><operator>..</operator><literal type="number">85104fc5d6</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>User</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>User</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">26</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">26</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>MemberEntity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>PermissionEntity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>PrivilegeEntity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>UserEntity</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>lang</name><operator>.</operator><name>StringUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>springframework</name><operator>.</operator><name>security</name><operator>.</operator><name>core</name><operator>.</operator><name>GrantedAuthority</name></name>;</import>
 

 <comment type="block" format="javadoc">/**
  * Describes user of web-services
  */</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">44</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">46</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>User</name> <block>{
 
   <expr><specifier>public</specifier> <call><name>User</name><argument_list>(<argument><expr><name>UserEntity</name> <name>userEntity</name></expr></argument>)</argument_list></call> <block>{
     <expr><name>userId</name> <operator>=</operator> <call><name><name>userEntity</name><operator>.</operator><name>getUserId</name></name><argument_list>()</argument_list></call></expr>;
    <name>userName</name> <operator>=</operator> <call><name><name>userEntity</name><operator>.</operator><name>getUserName</name></name><argument_list>()</argument_list></call></block></expr>;
    <name>userName</name> <operator>=</operator> <call><name><name>StringUtils</name><operator>.</operator><name>lowerCase</name></name><argument_list>(<argument><expr><call><name><name>userEntity</name><operator>.</operator><name>getUserName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt> <comment type="line">// normalize to lower case</comment>
     <expr_stmt><expr><name>createTime</name> <operator>=</operator> <call><name><name>userEntity</name><operator>.</operator><name>getCreateTime</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>userType</name> <operator>=</operator> <call><name><name>userEntity</name><operator>.</operator><name>getUserType</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>ldapUser</name> <operator>=</operator> <call><name><name>userEntity</name><operator>.</operator><name>getLdapUser</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>Users</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>Users</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">1a7b58db37</literal><operator>..</operator><literal type="number">5caaa2d5dc</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>Users</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>Users</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">263</literal></expr><operator>,</operator><expr><literal type="number">57</literal> <operator>+</operator><literal type="number">263</literal></expr><operator>,</operator><expr><literal type="number">30</literal> @@ <specifier>public</specifier> <name>class</name> <name>Users</name> <block>{
    <expr><operator>*</operator> @<throws>throws <argument><expr><name>AmbariException</name></expr></argument></throws></expr> <if_stmt><if>if user already exists
    */
   public void createUser<condition>(<expr><name>String</name> <name>userName</name></expr><operator>,</operator> <expr><name>String</name> <name>password</name></expr>)</condition><block type="pseudo"><block_content> <throws>throws <argument><expr><name>AmbariException</name> <block>{
    <expr><call><name>createUser</name><argument_list>(<argument><expr><name>userName</name></expr></argument>, <argument><expr><name>password</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws><empty_stmt>;</empty_stmt></block_content></block></if></if_stmt>
    <call><name>createUser</name><argument_list>(<argument><expr><name>userName</name></expr></argument>, <argument><expr><name>password</name></expr></argument>, <argument><expr><name><name>UserType</name><operator>.</operator><name>LOCAL</name></name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
   </block_content>}</block></if></if_stmt>
 
   <comment type="block" format="javadoc">/**
   * Creates new local user with provided userName and password.
   * Creates new user with provided userName and password.
    *
    * @param userName user name
    * @param password password
   * @param userType user type
    * @param active is user active
    * @param admin is user admin
   * @param ldapUser is user LDAP
    * @throws AmbariException if user already exists
    */</comment>
  <function><type><specifier>public</specifier> <specifier>synchronized</specifier> <name>void</name></type> <name>createUser</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>userName</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>password</name></decl></parameter>, <parameter><decl><type><name>Boolean</name></type> <name>active</name></decl></parameter>, <parameter><decl><type><name>Boolean</name></type> <name>admin</name></decl></parameter>, <parameter><decl><type><name>Boolean</name></type> <name>ldapUser</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>AmbariException</name></expr></argument></throws> <block>{<block_content>

    <if_stmt><if>if <condition>(<expr><call><name>getAnyUser</name><argument_list>(<argument><expr><name>userName</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>AmbariException</name><argument_list>(<argument><expr><literal type="string">"User "</literal> <operator>+</operator> <name>userName</name> <operator>+</operator> <literal type="string">" already exists"</literal></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></if></if_stmt>

    <comment type="line">// create an admin principal to represent this user</comment>
    <decl_stmt><decl><type><name>PrincipalTypeEntity</name></type> <name>principalTypeEntity</name> <init>= <expr><call><name><name>principalTypeDAO</name><operator>.</operator><name>findById</name></name><argument_list>(<argument><expr><name><name>PrincipalTypeEntity</name><operator>.</operator><name>USER_PRINCIPAL_TYPE</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>principalTypeEntity</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>principalTypeEntity</name> <operator>=</operator> <operator>new</operator> <call><name>PrincipalTypeEntity</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>principalTypeEntity</name><operator>.</operator><name>setId</name></name><argument_list>(<argument><expr><name><name>PrincipalTypeEntity</name><operator>.</operator><name>USER_PRINCIPAL_TYPE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>principalTypeEntity</name><operator>.</operator><name>setName</name></name><argument_list>(<argument><expr><name><name>PrincipalTypeEntity</name><operator>.</operator><name>USER_PRINCIPAL_TYPE_NAME</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>principalTypeDAO</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><name>principalTypeEntity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <decl_stmt><decl><type><name>PrincipalEntity</name></type> <name>principalEntity</name> <init>= <expr><operator>new</operator> <call><name>PrincipalEntity</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>principalEntity</name><operator>.</operator><name>setPrincipalType</name></name><argument_list>(<argument><expr><name>principalTypeEntity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>principalDAO</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><name>principalEntity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>UserEntity</name></type> <name>userEntity</name> <init>= <expr><operator>new</operator> <call><name>UserEntity</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>userEntity</name><operator>.</operator><name>setUserName</name></name><argument_list>(<argument><expr><name>userName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>userEntity</name><operator>.</operator><name>setUserPassword</name></name><argument_list>(<argument><expr><call><name><name>passwordEncoder</name><operator>.</operator><name>encode</name></name><argument_list>(<argument><expr><name>password</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>userEntity</name><operator>.</operator><name>setPrincipal</name></name><argument_list>(<argument><expr><name>principalEntity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>active</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>userEntity</name><operator>.</operator><name>setActive</name></name><argument_list>(<argument><expr><name>active</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><name>ldapUser</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>userEntity</name><operator>.</operator><name>setLdapUser</name></name><argument_list>(<argument><expr><name>ldapUser</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <function><type><specifier>public</specifier> <specifier>synchronized</specifier> <name>void</name></type> <name>createUser</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>userName</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>password</name></decl></parameter>, <parameter><decl><type><name>UserType</name></type> <name>userType</name></decl></parameter>, <parameter><decl><type><name>Boolean</name></type> <name>active</name></decl></parameter>, <parameter><decl><type><name>Boolean</name></type>
      <name>admin</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>AmbariException</name></expr></argument></throws> <block>{<block_content>
    <comment type="line">// if user type is not provided, assume LOCAL since the default</comment>
    <comment type="line">// value of user_type in the users table is LOCAL</comment>
    <if_stmt><if>if <condition>(<expr><name>userType</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>AmbariException</name><argument_list>(<argument><expr><literal type="string">"UserType not specified."</literal></expr></argument>)</argument_list></call></expr>;</throw>
     </block_content>}</block></if></if_stmt>
 
    <expr_stmt><expr><call><name><name>userDAO</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><name>userEntity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="line">// store user name in lower case</comment>
    <expr_stmt><expr><name>userName</name> <operator>=</operator> <call><name><name>StringUtils</name><operator>.</operator><name>lowerCase</name></name><argument_list>(<argument><expr><name>userName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
    <if_stmt><if>if <condition>(<expr><name>admin</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <name>admin</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name>grantAdminPrivilege</name><argument_list>(<argument><expr><call><name><name>userEntity</name><operator>.</operator><name>getUserId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <specifier>synchronized</specifier> <name>void</name></type> <name>createUser</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>userName</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>password</name></decl></parameter>, <parameter><decl><type><name>UserType</name></type> <name>userType</name></decl></parameter>, <parameter><decl><type><name>Boolean</name></type> <name>active</name></decl></parameter>, <parameter><decl><type><name>Boolean</name></type>
      <name>admin</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>AmbariException</name></expr></argument></throws> <block>{<block_content>
     <if_stmt><if>if <condition>(<expr><call><name>getUser</name><argument_list>(<argument><expr><name>userName</name></expr></argument>, <argument><expr><name>userType</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
       <throw>throw <expr><operator>new</operator> <call><name>AmbariException</name><argument_list>(<argument><expr><literal type="string">"User "</literal> <operator>+</operator> <name>userName</name> <operator>+</operator> <literal type="string">" already exists"</literal></expr></argument>)</argument_list></call></expr>;</throw>
     </block_content>}</block></if></if_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">331</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">304</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>Users</name> <block>{
 
     <expr><name>UserEntity</name> <name>userEntity</name> <operator>=</operator> <operator>new</operator> <call><name>UserEntity</name><argument_list>()</argument_list></call></expr>;
     <call><name><name>userEntity</name><operator>.</operator><name>setUserName</name></name><argument_list>(<argument><expr><name>userName</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>userType</name> <operator>==</operator> <literal type="null">null</literal> <operator>||</operator> <name>userType</name> <operator>==</operator> <name><name>UserType</name><operator>.</operator><name>LOCAL</name></name></expr>)</condition> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name>userType</name> <operator>==</operator> <name><name>UserType</name><operator>.</operator><name>LOCAL</name></name></expr>)</condition> <block>{<block_content>
       <comment type="line">//passwords should be stored for local users only</comment>
       <expr_stmt><expr><call><name><name>userEntity</name><operator>.</operator><name>setUserPassword</name></name><argument_list>(<argument><expr><call><name><name>passwordEncoder</name><operator>.</operator><name>encode</name></name><argument_list>(<argument><expr><name>password</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></if></if_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">339</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">312</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>Users</name> <block>{
     <if_stmt><if>if <condition>(<expr><name>active</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><call><name><name>userEntity</name><operator>.</operator><name>setActive</name></name><argument_list>(<argument><expr><name>active</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></if></if_stmt></block></expr></expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>userType</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>userEntity</name><operator>.</operator><name>setUserType</name></name><argument_list>(<argument><expr><name>userType</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>userEntity</name><operator>.</operator><name>setUserType</name></name><argument_list>(<argument><expr><name>userType</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>userType</name> <operator>==</operator> <name><name>UserType</name><operator>.</operator><name>LDAP</name></name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>userEntity</name><operator>.</operator><name>setLdapUser</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></if></if_stmt>
 
     <expr_stmt><expr><call><name><name>userDAO</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><name>userEntity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>UserResourceProviderTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>UserResourceProviderTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>dc22bb914d</name><operator>..</operator><name>d96e7b5415</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>UserResourceProviderTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>controller</name><operator>/</operator><name>internal</name><operator>/</operator><name><name>UserResourceProviderTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">249</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">249</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>UserResourceProviderTest</name> extends <name>EasyMockSupport</name> <block>{
     <expr><name>Injector</name> <name>injector</name> <operator>=</operator> <call><name>createInjector</name><argument_list>()</argument_list></call></expr>;
 
     <name>Users</name> <name>users</name> <operator>=</operator> <call><name><name>injector</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><name><name>Users</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>users</name><operator>.</operator><name>createUser</name></name><argument_list>(<argument><expr><literal type="string">"User100"</literal></expr></argument>, <argument><expr><literal type="string">"password"</literal></expr></argument>, <argument><expr><operator>(</operator><name>Boolean</name><operator>)</operator> <literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>users</name><operator>.</operator><name>createUser</name></name><argument_list>(<argument><expr><literal type="string">"User100"</literal></expr></argument>, <argument><expr><literal type="string">"password"</literal></expr></argument>, <argument><expr><name><name>UserType</name><operator>.</operator><name>LOCAL</name></name></expr></argument>, <argument><expr><operator>(</operator><name>Boolean</name><operator>)</operator> <literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>expectLastCall</name><argument_list>()</argument_list></call><operator>.</operator><call><name>atLeastOnce</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
     <comment type="line">// replay</comment>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name><name>SecurityHelperImplTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name><name>SecurityHelperImplTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>a509f54143</name><operator>..</operator><name>a4bd6c1503</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name><name>SecurityHelperImplTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name><name>SecurityHelperImplTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">22</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">22</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>PrincipalEntity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>UserEntity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>security</name><operator>.</operator><name>authorization</name><operator>.</operator><name>AmbariUserAuthentication</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>security</name><operator>.</operator><name>authorization</name><operator>.</operator><name>User</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>lang</name><operator>.</operator><name>StringUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>springframework</name><operator>.</operator><name>security</name><operator>.</operator><name>authentication</name><operator>.</operator><name>UsernamePasswordAuthenticationToken</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">43</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">44</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>SecurityHelperImplTest</name> <block>{
     <expr><name>SecurityContext</name> <name>ctx</name> <operator>=</operator> <call><name><name>SecurityContextHolder</name><operator>.</operator><name>getContext</name></name><argument_list>()</argument_list></call></expr>;
     <name>UserEntity</name> <name>userEntity</name> <operator>=</operator> <operator>new</operator> <call><name>UserEntity</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>userEntity</name><operator>.</operator><name>setPrincipal</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>PrincipalEntity</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>userEntity</name><operator>.</operator><name>setUserName</name></name><argument_list>(<argument><expr><literal type="string">"userName"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>userEntity</name><operator>.</operator><name>setUserName</name></name><argument_list>(<argument><expr><literal type="string">"username"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// with user entity, always use lower case</comment>
     <expr_stmt><expr><call><name><name>userEntity</name><operator>.</operator><name>setUserId</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>User</name></type> <name>user</name> <init>= <expr><operator>new</operator> <call><name>User</name><argument_list>(<argument><expr><name>userEntity</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>Authentication</name></type> <name>auth</name> <init>= <expr><operator>new</operator> <call><name>AmbariUserAuthentication</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>user</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>ctx</name><operator>.</operator><name>setAuthentication</name></name><argument_list>(<argument><expr><name>auth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="string">"userName"</literal></expr></argument>, <argument><expr><call><name><name>SecurityHelperImpl</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCurrentUserName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="string">"username"</literal></expr></argument>, <argument><expr><call><name><name>SecurityHelperImpl</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCurrentUserName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></if></if_stmt>
 
   <annotation>@<name>Test</name></annotation>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>AmbariUserAuthenticationFilterTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>AmbariUserAuthenticationFilterTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>b20607814f</name><operator>..</operator><name>fda31887d5</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>AmbariUserAuthenticationFilterTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>AmbariUserAuthenticationFilterTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">23</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">23</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>UserEntity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>scheduler</name><operator>.</operator><name>ExecutionScheduleManager</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>security</name><operator>.</operator><name>authorization</name><operator>.</operator><name>internal</name><operator>.</operator><name>InternalTokenClientFilter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>security</name><operator>.</operator><name>authorization</name><operator>.</operator><name>internal</name><operator>.</operator><name>InternalTokenStorage</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>lang</name><operator>.</operator><name>StringUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>easymock</name><operator>.</operator><name>Capture</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Before</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">51</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">52</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import static <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name><operator>.</operator><name>assertNull</name></name>;</import>
 <class><specifier>public</specifier> class <name>AmbariUserAuthenticationFilterTest</name> <block>{
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>TEST_INTERNAL_TOKEN</name> <init>= <expr><literal type="string">"test token"</literal></expr></init></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>TEST_USER_ID_HEADER</name> <init>= <expr><literal type="string">"1"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>TEST_USER_NAME</name> <init>= <expr><literal type="string">"userName"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>TEST_USER_NAME</name> <init>= <expr><literal type="string">"username"</literal></expr></init></decl>;</decl_stmt> <comment type="line">// use lower case with user entity</comment>
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>int</name></type> <name>TEST_USER_ID</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
 
   <annotation>@<name>Before</name></annotation>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>TestUsers</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>TestUsers</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">44fb73c264</literal><operator>..</operator><name>aa70be2d16</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>TestUsers</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>security</name><operator>/</operator><name>authorization</name><operator>/</operator><name><name>TestUsers</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">160</literal></expr><operator>,</operator><expr><literal type="number">17</literal> <operator>+</operator><literal type="number">160</literal></expr><operator>,</operator><expr><literal type="number">27</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestUsers</name> <block>{
 
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testGetAnyUser</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><call><name><name>users</name><operator>.</operator><name>createUser</name></name><argument_list>(<argument><expr><literal type="string">"user"</literal></expr></argument>, <argument><expr><literal type="string">"user"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <call><name><name>users</name><operator>.</operator><name>createUser</name></name><argument_list>(<argument><expr><literal type="string">"user_ldap"</literal></expr></argument>, <argument><expr><literal type="string">"user_ldap"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>users</name><operator>.</operator><name>createUser</name></name><argument_list>(<argument><expr><literal type="string">"user"</literal></expr></argument>, <argument><expr><literal type="string">"user"</literal></expr></argument>, <argument><expr><name><name>UserType</name><operator>.</operator><name>LOCAL</name></name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>users</name><operator>.</operator><name>createUser</name></name><argument_list>(<argument><expr><literal type="string">"user_ldap"</literal></expr></argument>, <argument><expr><literal type="string">"user_ldap"</literal></expr></argument>, <argument><expr><name><name>UserType</name><operator>.</operator><name>LDAP</name></name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"user"</literal></expr></argument>, <argument><expr><call><name><name>users</name><operator>.</operator><name>getAnyUser</name></name><argument_list>(<argument><expr><literal type="string">"user"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getUserName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"user_ldap"</literal></expr></argument>, <argument><expr><call><name><name>users</name><operator>.</operator><name>getAnyUser</name></name><argument_list>(<argument><expr><literal type="string">"user_ldap"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getUserName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertNull</name></name><argument_list>(<argument><expr><call><name><name>users</name><operator>.</operator><name>getAnyUser</name></name><argument_list>(<argument><expr><literal type="string">"non_existing"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   }</block></class>
 
  <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testGetAnyUserCaseInsensitive</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>users</name><operator>.</operator><name>createUser</name></name><argument_list>(<argument><expr><literal type="string">"user"</literal></expr></argument>, <argument><expr><literal type="string">"user"</literal></expr></argument>, <argument><expr><name><name>UserType</name><operator>.</operator><name>LOCAL</name></name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>users</name><operator>.</operator><name>createUser</name></name><argument_list>(<argument><expr><literal type="string">"user_ldap"</literal></expr></argument>, <argument><expr><literal type="string">"user_ldap"</literal></expr></argument>, <argument><expr><name><name>UserType</name><operator>.</operator><name>LDAP</name></name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"user"</literal></expr></argument>, <argument><expr><call><name><name>users</name><operator>.</operator><name>getAnyUser</name></name><argument_list>(<argument><expr><literal type="string">"USER"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getUserName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"user_ldap"</literal></expr></argument>, <argument><expr><call><name><name>users</name><operator>.</operator><name>getAnyUser</name></name><argument_list>(<argument><expr><literal type="string">"USER_LDAP"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getUserName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertNull</name></name><argument_list>(<argument><expr><call><name><name>users</name><operator>.</operator><name>getAnyUser</name></name><argument_list>(<argument><expr><literal type="string">"non_existing"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

   <function><annotation>@<name>Test</name></annotation>
   <type><specifier>public</specifier> <name>void</name></type> <name>testGetUserById</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>users</name><operator>.</operator><name>createUser</name></name><argument_list>(<argument><expr><literal type="string">"user"</literal></expr></argument>, <argument><expr><literal type="string">"user"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>users</name><operator>.</operator><name>createUser</name></name><argument_list>(<argument><expr><literal type="string">"user"</literal></expr></argument>, <argument><expr><literal type="string">"user"</literal></expr></argument>, <argument><expr><name><name>UserType</name><operator>.</operator><name>LOCAL</name></name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>User</name></type> <name>createdUser</name> <init>= <expr><call><name><name>users</name><operator>.</operator><name>getUser</name></name><argument_list>(<argument><expr><literal type="string">"user"</literal></expr></argument>, <argument><expr><name><name>UserType</name><operator>.</operator><name>LOCAL</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>User</name></type> <name>userById</name> <init>= <expr><call><name><name>users</name><operator>.</operator><name>getUser</name></name><argument_list>(<argument><expr><call><name><name>createdUser</name><operator>.</operator><name>getUserId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">204</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">214</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestUsers</name> <block>{
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testSetUserLdap</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><call><name><name>users</name><operator>.</operator><name>createUser</name></name><argument_list>(<argument><expr><literal type="string">"user"</literal></expr></argument>, <argument><expr><literal type="string">"user"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <call><name><name>users</name><operator>.</operator><name>createUser</name></name><argument_list>(<argument><expr><literal type="string">"user_ldap"</literal></expr></argument>, <argument><expr><literal type="string">"user_ldap"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>users</name><operator>.</operator><name>createUser</name></name><argument_list>(<argument><expr><literal type="string">"user_ldap"</literal></expr></argument>, <argument><expr><literal type="string">"user_ldap"</literal></expr></argument>, <argument><expr><name><name>UserType</name><operator>.</operator><name>LDAP</name></name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <expr_stmt><expr><call><name><name>users</name><operator>.</operator><name>setUserLdap</name></name><argument_list>(<argument><expr><literal type="string">"user"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><call><name><name>users</name><operator>.</operator><name>getAnyUser</name></name><argument_list>(<argument><expr><literal type="string">"user"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>isLdapUser</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">388</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">398</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestUsers</name> <block>{
 
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testModifyPassword_UserByAdmin</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><call><name><name>users</name><operator>.</operator><name>createUser</name></name><argument_list>(<argument><expr><literal type="string">"admin"</literal></expr></argument>, <argument><expr><literal type="string">"admin"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <call><name><name>users</name><operator>.</operator><name>createUser</name></name><argument_list>(<argument><expr><literal type="string">"admin"</literal></expr></argument>, <argument><expr><literal type="string">"admin"</literal></expr></argument>, <argument><expr><name><name>UserType</name><operator>.</operator><name>LOCAL</name></name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>users</name><operator>.</operator><name>createUser</name></name><argument_list>(<argument><expr><literal type="string">"user"</literal></expr></argument>, <argument><expr><literal type="string">"user"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><name>UserEntity</name></type> <name>userEntity</name> <init>= <expr><call><name><name>userDAO</name><operator>.</operator><name>findUserByName</name></name><argument_list>(<argument><expr><literal type="string">"user"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">416</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">426</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestUsers</name> <block>{
   <expr><specifier>public</specifier> <name>void</name> <call><name>testCreateUserDefaultParams</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><name>final</name> <name>Users</name> <name>spy</name> <operator>=</operator> <call><name><name>Mockito</name><operator>.</operator><name>spy</name></name><argument_list>(<argument><expr><name>users</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
     <call><name><name>spy</name><operator>.</operator><name>createUser</name></name><argument_list>(<argument><expr><literal type="string">"user"</literal></expr></argument>, <argument><expr><literal type="string">"user"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>verify</name></name><argument_list>(<argument><expr><name>spy</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>createUser</name><argument_list>(<argument><expr><literal type="string">"user"</literal></expr></argument>, <argument><expr><literal type="string">"user"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>Mockito</name><operator>.</operator><name>verify</name></name><argument_list>(<argument><expr><name>spy</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>createUser</name><argument_list>(<argument><expr><literal type="string">"user"</literal></expr></argument>, <argument><expr><literal type="string">"user"</literal></expr></argument>, <argument><expr><name><name>UserType</name><operator>.</operator><name>LOCAL</name></name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
 
   <function><annotation>@<name>Test</name></annotation>
   <type><specifier>public</specifier> <name>void</name></type> <name>testCreateUserFiveParams</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>users</name><operator>.</operator><name>createUser</name></name><argument_list>(<argument><expr><literal type="string">"user"</literal></expr></argument>, <argument><expr><literal type="string">"user"</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>users</name><operator>.</operator><name>createUser</name></name><argument_list>(<argument><expr><literal type="string">"user"</literal></expr></argument>, <argument><expr><literal type="string">"user"</literal></expr></argument>, <argument><expr><name><name>UserType</name><operator>.</operator><name>LOCAL</name></name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><specifier>final</specifier> <name>User</name></type> <name>createdUser</name> <init>= <expr><call><name><name>users</name><operator>.</operator><name>getAnyUser</name></name><argument_list>(<argument><expr><literal type="string">"user"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="string">"user"</literal></expr></argument>, <argument><expr><call><name><name>createdUser</name><operator>.</operator><name>getUserName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">429</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">439</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestUsers</name> <block>{
     <expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><call><name><name>createdUser</name><operator>.</operator><name>isLdapUser</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><call><name><name>createdUser</name><operator>.</operator><name>isAdmin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
 
    <expr_stmt><expr><call><name><name>users</name><operator>.</operator><name>createUser</name></name><argument_list>(<argument><expr><literal type="string">"user2"</literal></expr></argument>, <argument><expr><literal type="string">"user2"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>users</name><operator>.</operator><name>createUser</name></name><argument_list>(<argument><expr><literal type="string">"user2"</literal></expr></argument>, <argument><expr><literal type="string">"user2"</literal></expr></argument>, <argument><expr><name><name>UserType</name><operator>.</operator><name>LDAP</name></name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><specifier>final</specifier> <name>User</name></type> <name>createdUser2</name> <init>= <expr><call><name><name>users</name><operator>.</operator><name>getAnyUser</name></name><argument_list>(<argument><expr><literal type="string">"user2"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="string">"user2"</literal></expr></argument>, <argument><expr><call><name><name>createdUser2</name><operator>.</operator><name>getUserName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><call><name><name>createdUser2</name><operator>.</operator><name>isActive</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">443</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">453</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestUsers</name> <block>{
     <expr><call><name><name>users</name><operator>.</operator><name>createUser</name></name><argument_list>(<argument><expr><literal type="string">"user"</literal></expr></argument>, <argument><expr><literal type="string">"user"</literal></expr></argument>)</argument_list></call></expr>;
   }</block></expr></expr_stmt>
 
  <function><annotation>@<name>Test</name><argument_list>(<argument><expr><name>expected</name> <operator>=</operator> <name><name>AmbariException</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testCreateUserDuplicateCaseInsensitive</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>users</name><operator>.</operator><name>createUser</name></name><argument_list>(<argument><expr><literal type="string">"user"</literal></expr></argument>, <argument><expr><literal type="string">"user"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>users</name><operator>.</operator><name>createUser</name></name><argument_list>(<argument><expr><literal type="string">"USER"</literal></expr></argument>, <argument><expr><literal type="string">"user"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

   <function><annotation>@<name>Test</name></annotation>
   <type><specifier>public</specifier> <name>void</name></type> <name>testRemoveUser</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
     <expr_stmt><expr><call><name><name>users</name><operator>.</operator><name>createUser</name></name><argument_list>(<argument><expr><literal type="string">"user1"</literal></expr></argument>, <argument><expr><literal type="string">"user1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">468</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">484</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestUsers</name> <block>{
 
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testRevokeAdminPrivilege</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><call><name><name>users</name><operator>.</operator><name>createUser</name></name><argument_list>(<argument><expr><literal type="string">"admin"</literal></expr></argument>, <argument><expr><literal type="string">"admin"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <call><name><name>users</name><operator>.</operator><name>createUser</name></name><argument_list>(<argument><expr><literal type="string">"admin"</literal></expr></argument>, <argument><expr><literal type="string">"admin"</literal></expr></argument>, <argument><expr><name><name>UserType</name><operator>.</operator><name>LOCAL</name></name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><specifier>final</specifier> <name>User</name></type> <name>admin</name> <init>= <expr><call><name><name>users</name><operator>.</operator><name>getAnyUser</name></name><argument_list>(<argument><expr><literal type="string">"admin"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>users</name><operator>.</operator><name>revokeAdminPrivilege</name></name><argument_list>(<argument><expr><call><name><name>admin</name><operator>.</operator><name>getUserId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">478</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">494</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestUsers</name> <block>{
 
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testIsUserCanBeRemoved</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><call><name><name>users</name><operator>.</operator><name>createUser</name></name><argument_list>(<argument><expr><literal type="string">"admin"</literal></expr></argument>, <argument><expr><literal type="string">"admin"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <call><name><name>users</name><operator>.</operator><name>createUser</name></name><argument_list>(<argument><expr><literal type="string">"admin2"</literal></expr></argument>, <argument><expr><literal type="string">"admin2"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>users</name><operator>.</operator><name>createUser</name></name><argument_list>(<argument><expr><literal type="string">"admin"</literal></expr></argument>, <argument><expr><literal type="string">"admin"</literal></expr></argument>, <argument><expr><name><name>UserType</name><operator>.</operator><name>LOCAL</name></name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>users</name><operator>.</operator><name>createUser</name></name><argument_list>(<argument><expr><literal type="string">"admin2"</literal></expr></argument>, <argument><expr><literal type="string">"admin2"</literal></expr></argument>, <argument><expr><name><name>UserType</name><operator>.</operator><name>LOCAL</name></name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertTrue</name></name><argument_list>(<argument><expr><call><name><name>users</name><operator>.</operator><name>isUserCanBeRemoved</name></name><argument_list>(<argument><expr><call><name><name>userDAO</name><operator>.</operator><name>findUserByName</name></name><argument_list>(<argument><expr><literal type="string">"admin"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertTrue</name></name><argument_list>(<argument><expr><call><name><name>users</name><operator>.</operator><name>isUserCanBeRemoved</name></name><argument_list>(<argument><expr><call><name><name>userDAO</name><operator>.</operator><name>findUserByName</name></name><argument_list>(<argument><expr><literal type="string">"admin2"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">490</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">506</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestUsers</name> <block>{
     <expr><call><name><name>users</name><operator>.</operator><name>createUser</name></name><argument_list>(<argument><expr><literal type="string">"user"</literal></expr></argument>, <argument><expr><literal type="string">"user"</literal></expr></argument>)</argument_list></call></expr>;
     <call><name><name>Assert</name><operator>.</operator><name>assertFalse</name></name><argument_list>(<argument><expr><call><name><name>users</name><operator>.</operator><name>isUserCanBeRemoved</name></name><argument_list>(<argument><expr><call><name><name>userDAO</name><operator>.</operator><name>findUserByName</name></name><argument_list>(<argument><expr><literal type="string">"admin2"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
 
    <expr_stmt><expr><call><name><name>users</name><operator>.</operator><name>createUser</name></name><argument_list>(<argument><expr><literal type="string">"admin3"</literal></expr></argument>, <argument><expr><literal type="string">"admin3"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>users</name><operator>.</operator><name>createUser</name></name><argument_list>(<argument><expr><literal type="string">"admin3"</literal></expr></argument>, <argument><expr><literal type="string">"admin3"</literal></expr></argument>, <argument><expr><name><name>UserType</name><operator>.</operator><name>LOCAL</name></name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertTrue</name></name><argument_list>(<argument><expr><call><name><name>users</name><operator>.</operator><name>isUserCanBeRemoved</name></name><argument_list>(<argument><expr><call><name><name>userDAO</name><operator>.</operator><name>findUserByName</name></name><argument_list>(<argument><expr><literal type="string">"admin2"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertTrue</name></name><argument_list>(<argument><expr><call><name><name>users</name><operator>.</operator><name>isUserCanBeRemoved</name></name><argument_list>(<argument><expr><call><name><name>userDAO</name><operator>.</operator><name>findUserByName</name></name><argument_list>(<argument><expr><literal type="string">"admin3"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog240Test</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog240Test</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">4ff751dcba</literal><operator>..</operator><literal type="number">0e4b4ebae0</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog240Test</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>upgrade</name><operator>/</operator><name><name>UpgradeCatalog240Test</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">2350</literal></expr><operator>,</operator><expr><literal type="number">17</literal> <operator>+</operator><literal type="number">2350</literal></expr><operator>,</operator><expr><literal type="number">17</literal> @@ <specifier>public</specifier> <name>class</name> <name>UpgradeCatalog240Test</name> <block>{
     <expr><name>final</name> <name>Users</name> <name>users</name> <operator>=</operator> <call><name>createMock</name><argument_list>(<argument><expr><name><name>Users</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
 
     <name>RequestScheduleEntity</name> <name>requestScheduleEntity</name> <operator>=</operator> <operator>new</operator> <call><name>RequestScheduleEntity</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>requestScheduleEntity</name><operator>.</operator><name>setCreateUser</name></name><argument_list>(<argument><expr><literal type="string">"createdUser"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>requestScheduleEntity</name><operator>.</operator><name>setCreateUser</name></name><argument_list>(<argument><expr><literal type="string">"createduser"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// use lower case user name with request schedule entity</comment>
     <expr_stmt><expr><call><name><name>requestScheduleEntity</name><operator>.</operator><name>setClusterId</name></name><argument_list>(<argument><expr><literal type="number">1L</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>requestScheduleDAO</name><operator>.</operator><name>findAll</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><call><name><name>Collections</name><operator>.</operator><name>singletonList</name></name><argument_list>(<argument><expr><name>requestScheduleEntity</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>once</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><name>UserEntity</name></type> <name>userEntity</name> <init>= <expr><operator>new</operator> <call><name>UserEntity</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>userEntity</name><operator>.</operator><name>setUserName</name></name><argument_list>(<argument><expr><literal type="string">"createdUser"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>userEntity</name><operator>.</operator><name>setUserName</name></name><argument_list>(<argument><expr><literal type="string">"createduser"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// use lower case user name with user entity</comment>
     <expr_stmt><expr><call><name><name>userEntity</name><operator>.</operator><name>setUserId</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>userEntity</name><operator>.</operator><name>setPrincipal</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>PrincipalEntity</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>User</name></type> <name>user</name> <init>= <expr><operator>new</operator> <call><name>User</name><argument_list>(<argument><expr><name>userEntity</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>users</name><operator>.</operator><name>getUserIfUnique</name></name><argument_list>(<argument><expr><literal type="string">"createdUser"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>user</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>once</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>users</name><operator>.</operator><name>getUserIfUnique</name></name><argument_list>(<argument><expr><literal type="string">"createduser"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>user</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>once</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
     <expr_stmt><expr><call><name>expect</name><argument_list>(<argument><expr><call><name><name>requestScheduleDAO</name><operator>.</operator><name>merge</name></name><argument_list>(<argument><expr><name>requestScheduleEntity</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>andReturn</name><argument_list>(<argument><expr><name>requestScheduleEntity</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>once</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
<expr_stmt><expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></expr_stmt></block_content></block></function></block_content></block></if></if_stmt></block_content></block></function></block_content></block></if></if_stmt></block_content></block></function></block_content></block></if></if_stmt></block></class>

</unit>
