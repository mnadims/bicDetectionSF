<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/ambari/aba473e84a.java"><expr_stmt><expr><name>From</name> <name>aba473e84a5a24d12b29a2bf9e858019c023f6fd</name> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Jonathan</name> <name><name>Hurley</name> <argument_list type="generic">&lt;<argument><name>jhurley</name><annotation>@<name><name>hortonworks</name><operator>.</operator><name>com</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Fri</name></expr><operator>,</operator> <expr><literal type="number">31</literal> <name>Mar</name> <literal type="number">2017</literal> <literal type="number">12</literal><operator>:</operator><literal type="number">35</literal><operator>:</operator><literal type="number">25</literal> <operator>-</operator><literal type="number">0400</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>AMBARI</name><operator>-</operator><literal type="number">20646</literal> <operator>-</operator> <name>Large</name> <name>Long</name> <name>Running</name> <name>Requests</name> <name>Can</name> <name>Slow</name> <name>Down</name> <name>the</name>
 <call><name>ActionScheduler</name> <argument_list>(<argument><expr><name>jonathanhurley</name></expr></argument>)</argument_list></call>

<operator>--</operator>
 <operator>...</operator><operator>/</operator><name>actionmanager</name><operator>/</operator><name><name>ActionDBAccessor</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  <literal type="number">16</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>actionmanager</name><operator>/</operator><name><name>ActionDBAccessorImpl</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">13</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name>actionmanager</name><operator>/</operator><name><name>ActionScheduler</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>dao</name><operator>/</operator><name><name>StageDAO</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  <literal type="number">68</literal> <operator>++</operator><operator>++</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>entities</name><operator>/</operator><name><name>StageEntity</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">9</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>serveraction</name><operator>/</operator><name><name>ServerActionExecutor</name><operator>.</operator><name>java</name></name>    <operator>|</operator> <literal type="number">114</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>TestActionDBAccessorImpl</name><operator>.</operator><name>java</name></name>             <operator>|</operator>  <literal type="number">27</literal> <operator>++</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>actionmanager</name><operator>/</operator><name><name>TestActionScheduler</name><operator>.</operator><name>java</name></name>    <operator>|</operator> <literal type="number">139</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>dao</name><operator>/</operator><name><name>RequestDAOTest</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">21</literal> <operator>++</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>ServerActionExecutorTest</name><operator>.</operator><name>java</name></name>             <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>RetryUpgradeActionServiceTest</name><operator>.</operator><name>java</name></name>        <operator>|</operator>  <literal type="number">12</literal> <operator>+</operator><operator>-</operator>
 <literal type="number">11</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">227</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">196</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>actionmanager</name><operator>/</operator><name><name>ActionDBAccessor</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>actionmanager</name><operator>/</operator><name><name>ActionDBAccessor</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">9325d03f04</literal><operator>..</operator><name>b0550c0138</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>actionmanager</name><operator>/</operator><name><name>ActionDBAccessor</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>actionmanager</name><operator>/</operator><name><name>ActionDBAccessor</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">76</literal></expr><operator>,</operator><expr><literal type="number">17</literal> <operator>+</operator><literal type="number">76</literal></expr><operator>,</operator><expr><literal type="number">19</literal> @@ <specifier>public</specifier> interface <name>ActionDBAccessor</name> <block>{
                        <expr><name>boolean</name> <name>skipSupported</name></expr>, <expr><name>boolean</name> <name>hostUnknownState</name></expr>)</block></expr>;</expr_stmt>
 
   <comment type="block" format="javadoc">/**
   * Returns all the pending stages, including queued and not-queued. A stage is
   * considered in progress if it is in progress for any host.
   * Returns the next stage which is in-progress for every in-progress request
   * in the system. Since stages are always synchronous, there is no reason to
   * return more than the most recent stage per request. Returning every single
   * stage in the requesrt would be extremely inffecient and wasteful. However,
   * since requests can run in parallel, this method must return the most recent
   * stage for every request. The results will be sorted by request ID.
    * &lt;p/&gt;
   * The results will be sorted by request ID and then stage ID making this call
   * expensive in some scenarios. Use {@link #getCommandsInProgressCount()} in
   * order to determine if there are stages that are in progress before getting
   * the stages from this method.
   * Use {@link #getCommandsInProgressCount()} in order to determine if there
   * are stages that are in progress before getting the stages from this method.
    *
    * @see HostRoleStatus#IN_PROGRESS_STATUSES
    */</comment>
  <function_decl><type><specifier>public</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>Stage</name></argument>&gt;</argument_list></name></type> <name>getStagesInProgress</name><parameter_list>()</parameter_list>;</function_decl>
  <function_decl><type><specifier>public</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>Stage</name></argument>&gt;</argument_list></name></type> <name>getFirstStageInProgressPerRequest</name><parameter_list>()</parameter_list>;</function_decl>
 
   <comment type="block" format="javadoc">/**
    * Returns all the pending stages in a request, including queued and not-queued. A stage is
diff --git a/ambari-server/src/main/java/org/apache/ambari/server/actionmanager/ActionDBAccessorImpl.java b/ambari-server/src/main/java/org/apache/ambari/server/actionmanager/ActionDBAccessorImpl.java
index ab4feaa552..8c4eae89e7 100644
-- a/ambari-server/src/main/java/org/apache/ambari/server/actionmanager/ActionDBAccessorImpl.java
++ b/ambari-server/src/main/java/org/apache/ambari/server/actionmanager/ActionDBAccessorImpl.java
@@ -285,11 +285,16 @@ public class ActionDBAccessorImpl implements ActionDBAccessor {
    * {@inheritDoc}
    */</comment>
   <function><annotation>@<name>Override</name></annotation>
  <annotation>@<name>Experimental</name><argument_list>(<argument><expr><name>feature</name> <operator>=</operator> <name><name>ExperimentalFeature</name><operator>.</operator><name>PARALLEL_PROCESSING</name></name></expr></argument>)</argument_list></annotation>
  <type><specifier>public</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>Stage</name></argument>&gt;</argument_list></name></type> <name>getStagesInProgress</name><parameter_list>()</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>StageEntity</name></argument>&gt;</argument_list></name></type> <name>stageEntities</name> <init>= <expr><call><name><name>stageDAO</name><operator>.</operator><name>findByStatuses</name></name><argument_list>(
  <argument><expr><specifier>public</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>Stage</name></argument>&gt;</argument_list></name> <call><name>getFirstStageInProgressPerRequest</name><argument_list>()</argument_list></call> <block>{
    <expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>StageEntity</name></argument>&gt;</argument_list></name> <name>stageEntities</name> <operator>=</operator> <call><name><name>stageDAO</name><operator>.</operator><name>findFirstStageByStatus</name></name><argument_list>(
       <argument><expr><name><name>HostRoleStatus</name><operator>.</operator><name>IN_PROGRESS_STATUSES</name></name></expr></argument>)</argument_list></call></expr>;
    <return>return <expr><call><name>getStagesForEntities</name><argument_list>(<argument><expr><name>stageEntities</name></expr></argument>)</argument_list></call></expr>;</return>

    <name><name>List</name><argument_list type="generic">&lt;<argument><name>Stage</name></argument>&gt;</argument_list></name> <name>stages</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>(<argument><expr><call><name><name>stageEntities</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr></argument>;
    for <argument><expr><operator>(</operator><name>StageEntity</name> <name>stageEntity</name> <operator>:</operator> <name>stageEntities</name><operator>)</operator> <block>{
      <expr><call><name><name>stages</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name><name>stageFactory</name><operator>.</operator><name>createExisting</name></name><argument_list>(<argument><expr><name>stageEntity</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    }</block></expr></argument>

    <return>return <expr><name>stages</name></expr>;</return></argument_list></call></expr></init></decl></decl_stmt>
   </block_content>}</block></function>
 
   <annotation>@<name>Experimental</name><argument_list>(<argument><expr><name>feature</name> <operator>=</operator> <name><name>ExperimentalFeature</name><operator>.</operator><name>PARALLEL_PROCESSING</name></name></expr></argument>)</argument_list></annotation>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>actionmanager</name><operator>/</operator><name><name>ActionScheduler</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>actionmanager</name><operator>/</operator><name><name>ActionScheduler</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">0984c5cd94</literal><operator>..</operator><literal type="number">758db3516f</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>actionmanager</name><operator>/</operator><name><name>ActionScheduler</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>actionmanager</name><operator>/</operator><name><name>ActionScheduler</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">355</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">355</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <name>class</name> <name>ActionScheduler</name> implements <name>Runnable</name> <block>{
       }</block>
 
       <name><name>Set</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>&gt;</argument_list></name> <name>runningRequestIds</name> <operator>=</operator> <operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>Stage</name></argument>&gt;</argument_list></name></type> <name>stages</name> <init>= <expr><call><name><name>db</name><operator>.</operator><name>getStagesInProgress</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>Stage</name></argument>&gt;</argument_list></name></type> <name>stages</name> <init>= <expr><call><name><name>db</name><operator>.</operator><name>getFirstStageInProgressPerRequest</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <if_stmt><if>if <condition>(<expr><call><name><name>LOG</name><operator>.</operator><name>isDebugEnabled</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
         <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"Scheduler wakes up"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"Processing {} in progress stages "</literal></expr></argument>, <argument><expr><call><name><name>stages</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>dao</name><operator>/</operator><name><name>StageDAO</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>dao</name><operator>/</operator><name><name>StageDAO</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">5151fb3b70</literal><operator>..</operator><name>c2919b20d5</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>dao</name><operator>/</operator><name><name>StageDAO</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>dao</name><operator>/</operator><name><name>StageDAO</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">22</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">22</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collection</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>EnumSet</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>LinkedList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
 
 <import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>EntityManager</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>persistence</name><operator>.</operator><name>TypedQuery</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">129</literal></expr><operator>,</operator><expr><literal type="number">41</literal> <operator>+</operator><literal type="number">127</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>StageDAO</name> <block>{
     <return>return <expr><call><name><name>daoUtils</name><operator>.</operator><name>selectList</name></name><argument_list>(<argument><expr><name>query</name></expr></argument>, <argument><expr><name>requestId</name></expr></argument>)</argument_list></call></expr>;</return>
   }</block></expr></expr_stmt>
 
  <comment type="block" format="javadoc">/**
   * Gets all of the stage IDs associated with a request.
   *
   * @param requestId
   * @return the list of stage IDs.
   */</comment>
  <function><annotation>@<name>RequiresSession</name></annotation>
  <type><specifier>public</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>&gt;</argument_list></name></type> <name>findIdsByRequestId</name><parameter_list>(<parameter><decl><type><name>long</name></type> <name>requestId</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name><name>TypedQuery</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>&gt;</argument_list></name></type> <name>query</name> <init>= <expr><call><name><name>entityManagerProvider</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>createNamedQuery</name><argument_list>(
        <argument><expr><literal type="string">"StageEntity.findIdsByRequestId"</literal></expr></argument>, <argument><expr><name><name>Long</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"requestId"</literal></expr></argument>, <argument><expr><name>requestId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><call><name><name>daoUtils</name><operator>.</operator><name>selectList</name></name><argument_list>(<argument><expr><name>query</name></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <comment type="block" format="javadoc">/**
   * Get the list of stage entities for the given request id and stage ids.
   *
   * @param requestId  the request ids
   * @param stageIds   the set of stage ids
   *
   * @return the set of entities for the given ids
   */</comment>
  <function><annotation>@<name>RequiresSession</name></annotation>
  <type><specifier>public</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>StageEntity</name></argument>&gt;</argument_list></name></type> <name>findByStageIds</name><parameter_list>(<parameter><decl><type><name>Long</name></type> <name>requestId</name></decl></parameter>, <parameter><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>&gt;</argument_list></name></type> <name>stageIds</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>StageEntity</name></argument>&gt;</argument_list></name></type> <name>stageEntities</name> <init>= <expr><operator>new</operator> <call><name><name>LinkedList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <for>for <control>(<init><decl><type><name>StageEntity</name></type> <name>stage</name> <range>: <expr><call><name>findByRequestId</name><argument_list>(<argument><expr><name>requestId</name></expr></argument>)</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><call><name><name>stageIds</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><call><name><name>stage</name><operator>.</operator><name>getStageId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>stageEntities</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>stage</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <return>return <expr><name>stageEntities</name></expr>;</return>
  </block_content>}</block></function>

   <function><annotation>@<name>RequiresSession</name></annotation>
   <type><specifier>public</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>StageEntity</name></argument>&gt;</argument_list></name></type> <name>findByRequestIdAndCommandStatuses</name><parameter_list>(<parameter><decl><type><name>Long</name></type> <name>requestId</name></decl></parameter>, <parameter><decl><type><name><name>Collection</name><argument_list type="generic">&lt;<argument><name>HostRoleStatus</name></argument>&gt;</argument_list></name></type> <name>statuses</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <decl_stmt><decl><type><name><name>TypedQuery</name><argument_list type="generic">&lt;<argument><name>StageEntity</name></argument>&gt;</argument_list></name></type> <name>query</name> <init>= <expr><call><name><name>entityManagerProvider</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>createNamedQuery</name><argument_list>(
<argument>@@ <expr><operator>-</operator><literal type="number">175</literal></expr></argument>,<argument><expr><literal type="number">17</literal> <operator>+</operator><literal type="number">138</literal></expr></argument>,<argument><expr><literal type="number">36</literal> @@ <specifier>public</specifier> class <name>StageDAO</name> <block>{
   }</block>
 
   <comment type="block" format="javadoc">/**
   * Finds the first stage matching any of the specified statuses for every
   * request. For example, to find the first {@link HostRoleStatus#IN_PROGRESS}
   * stage for every request, pass in
   * {@link HostRoleStatus#IN_PROGRESS_STATUSES}.
    *
   * @param statuses {@link HostRoleStatus}
   * @return list of stage entities
   * @param statuses
   *          {@link HostRoleStatus}
   * @return the list of the first matching stage for the given statuses for
   *         every request.
    */</comment>
   @<name>RequiresSession</name>
  <specifier>public</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>StageEntity</name></argument>&gt;</argument_list></name> <call><name>findByStatuses</name><argument_list>(<argument><expr><name><name>Collection</name><argument_list type="generic">&lt;<argument><name>HostRoleStatus</name></argument>&gt;</argument_list></name> <name>statuses</name></expr></argument>)</argument_list></call> <block>{
    <expr><name><name>TypedQuery</name><argument_list type="generic">&lt;<argument><name>StageEntity</name></argument>&gt;</argument_list></name> <name>query</name> <operator>=</operator> <call><name><name>entityManagerProvider</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>createNamedQuery</name><argument_list>(
        <argument><expr><literal type="string">"StageEntity.findByStatuses"</literal></expr></argument>, <argument><expr><name><name>StageEntity</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
  <specifier>public</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>StageEntity</name></argument>&gt;</argument_list></name> <call><name>findFirstStageByStatus</name><argument_list>(<argument><expr><name><name>Collection</name><argument_list type="generic">&lt;<argument><name>HostRoleStatus</name></argument>&gt;</argument_list></name> <name>statuses</name></expr></argument>)</argument_list></call> <block>{
    <expr><name><name>TypedQuery</name><argument_list type="generic">&lt;<argument><name><name>Object</name><index>[]</index></name></argument>&gt;</argument_list></name> <name>query</name> <operator>=</operator> <call><name><name>entityManagerProvider</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>createNamedQuery</name><argument_list>(
        <argument><expr><literal type="string">"StageEntity.findFirstStageByStatus"</literal></expr></argument>, <argument><expr><name><name>Object</name><index>[]</index></name><operator>.</operator>class</expr></argument>)</argument_list></call></expr>;
 
     <call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"statuses"</literal></expr></argument>, <argument><expr><name>statuses</name></expr></argument>)</argument_list></call></block></block></expr></argument>;</argument_list></call></expr></init></decl></decl_stmt>
    <return>return <expr><call><name><name>daoUtils</name><operator>.</operator><name>selectList</name></name><argument_list>(<argument><expr><name>query</name></expr></argument>)</argument_list></call></expr>;</return>

    <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name><name>Object</name><index>[]</index></name></argument>&gt;</argument_list></name></type> <name>results</name> <init>= <expr><call><name><name>daoUtils</name><operator>.</operator><name>selectList</name></name><argument_list>(<argument><expr><name>query</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>StageEntity</name></argument>&gt;</argument_list></name></type> <name>stages</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <for>for <control>(<init><decl><type><name><name>Object</name><index>[]</index></name></type> <name>result</name> <range>: <expr><name>results</name></expr></range></decl></init>)</control> <block>{<block_content>
      <decl_stmt><decl><type><name>StageEntityPK</name></type> <name>stagePK</name> <init>= <expr><operator>new</operator> <call><name>StageEntityPK</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>stagePK</name><operator>.</operator><name>setRequestId</name></name><argument_list>(<argument><expr><operator>(</operator><name>Long</name><operator>)</operator> <name><name>result</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>stagePK</name><operator>.</operator><name>setStageId</name></name><argument_list>(<argument><expr><operator>(</operator><name>Long</name><operator>)</operator> <name><name>result</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <decl_stmt><decl><type><name>StageEntity</name></type> <name>stage</name> <init>= <expr><call><name>findByPK</name><argument_list>(<argument><expr><name>stagePK</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>stages</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>stage</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>

    <return>return <expr><name>stages</name></expr>;</return>
   </block_content>}</block></function>
 
   <annotation>@<name>RequiresSession</name></annotation>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>entities</name><operator>/</operator><name><name>StageEntity</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>entities</name><operator>/</operator><name><name>StageEntity</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>f68338f291</name><operator>..</operator><literal type="number">49c1594ca7</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>entities</name><operator>/</operator><name><name>StageEntity</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>entities</name><operator>/</operator><name><name>StageEntity</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">46</literal></expr><operator>,</operator><expr><literal type="number">17</literal> <operator>+</operator><literal type="number">46</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>actionmanager</name><operator>.</operator><name>HostRoleStatus</name></name>;</import>
 <decl_stmt><decl><annotation>@<name>IdClass</name><argument_list>(<argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>StageEntityPK</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></annotation>
 @<name>NamedQueries</name><argument_list>(<block>{<block_content>
     <annotation>@<name>NamedQuery</name><argument_list>(
        <argument><expr><name>name</name> <operator>=</operator> <literal type="string">"StageEntity.findByStatuses"</literal></expr></argument>,
        <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"SELECT stage from StageEntity stage WHERE stage.status IN :statuses ORDER BY stage.requestId, stage.stageId"</literal></expr></argument>)</argument_list></annotation><operator>,</operator>
        <expr_stmt><expr><name>name</name> <operator>=</operator> <literal type="string">"StageEntity.findFirstStageByStatus"</literal></expr><operator>,</operator>
        <expr><name>query</name> <operator>=</operator> <literal type="string">"SELECT stage.requestId, MIN(stage.stageId) from StageEntity stage, HostRoleCommandEntity hrc WHERE hrc.status IN :statuses AND hrc.stageId = stage.stageId AND hrc.requestId = stage.requestId GROUP by stage.requestId ORDER BY stage.requestId"</literal></expr></expr_stmt></block_content></block>)</argument_list></decl>,
     @<decl><type ref="prev"/><name>NamedQuery</name><argument_list>(
         <argument><expr><name>name</name> <operator>=</operator> <literal type="string">"StageEntity.findByPK"</literal></expr></argument>,
         <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"SELECT stage from StageEntity stage WHERE stage.requestId = :requestId AND stage.stageId = :stageId"</literal></expr></argument>)</argument_list></decl>,
     @<decl><type ref="prev"/><name>NamedQuery</name><argument_list>(
         <argument><expr><name>name</name> <operator>=</operator> <literal type="string">"StageEntity.findByRequestIdAndCommandStatuses"</literal></expr></argument>,
        <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"SELECT stage from StageEntity stage WHERE stage.status IN :statuses AND stage.requestId = :requestId ORDER BY stage.stageId"</literal></expr></argument>)</argument_list></decl>,
    @<decl><type ref="prev"/><name>NamedQuery</name><argument_list>(
        <argument><expr><name>name</name> <operator>=</operator> <literal type="string">"StageEntity.findIdsByRequestId"</literal></expr></argument>,
        <argument><expr><name>query</name> <operator>=</operator> <literal type="string">"SELECT stage.stageId FROM StageEntity stage WHERE stage.requestId = :requestId ORDER BY stage.stageId ASC"</literal></expr></argument>)</argument_list></decl></decl_stmt> </block_content>}</block></if></if_stmt>)
        <expr_stmt><expr><name>query</name> <operator>=</operator> <literal type="string">"SELECT stage from StageEntity stage WHERE stage.status IN :statuses AND stage.requestId = :requestId ORDER BY stage.stageId"</literal></expr></expr_stmt>) })
 <class><specifier>public</specifier> class <name>StageEntity</name> <block>{
 
   <annotation>@<name>Column</name><argument_list>(<argument><expr><name>name</name> <operator>=</operator> <literal type="string">"cluster_id"</literal></expr></argument>, <argument><expr><name>updatable</name> <operator>=</operator> <literal type="boolean">false</literal></expr></argument>, <argument><expr><name>nullable</name> <operator>=</operator> <literal type="boolean">false</literal></expr></argument>)</argument_list></annotation>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>serveraction</name><operator>/</operator><name><name>ServerActionExecutor</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>serveraction</name><operator>/</operator><name><name>ServerActionExecutor</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>b0be6b3c38</name><operator>..</operator><literal type="number">68124fc3d4</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>serveraction</name><operator>/</operator><name><name>ServerActionExecutor</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>serveraction</name><operator>/</operator><name><name>ServerActionExecutor</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">15</literal> @@</expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>serveraction</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Timer</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>TimerTask</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>ConcurrentHashMap</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>ConcurrentMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>TimeUnit</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>AmbariException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>Role</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">32</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">36</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>actionmanager</name><operator>.</operator><name>ActionDBAccessor</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>actionmanager</name><operator>.</operator><name>ExecutionCommandWrapper</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>actionmanager</name><operator>.</operator><name>HostRoleCommand</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>actionmanager</name><operator>.</operator><name>HostRoleStatus</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>actionmanager</name><operator>.</operator><name>Request</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>actionmanager</name><operator>.</operator><name>Stage</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>agent</name><operator>.</operator><name>CommandReport</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>agent</name><operator>.</operator><name>ExecutionCommand</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>configuration</name><operator>.</operator><name>Configuration</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>controller</name><operator>.</operator><name>internal</name><operator>.</operator><name>CalculatedStatus</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>security</name><operator>.</operator><name>authorization</name><operator>.</operator><name>internal</name><operator>.</operator><name>InternalAuthenticationToken</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>utils</name><operator>.</operator><name>StageUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>springframework</name><operator>.</operator><name>security</name><operator>.</operator><name>core</name><operator>.</operator><name>context</name><operator>.</operator><name>SecurityContextHolder</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">74</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">76</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ServerActionExecutor</name> <block>{
   @<expr><name>Inject</name>
   <specifier>private</specifier> <specifier>static</specifier> <name>Configuration</name> <name>configuration</name></expr>;
 

   <comment type="block" format="javadoc">/**
    * Maps request IDs to "blackboards" of shared data.
    * &lt;p/&gt;
@@ -83,13 +86,6 @@ public class ServerActionExecutor {
   private final Map&lt;Long, ConcurrentMap&lt;String, Object&gt;&gt; requestSharedDataMap =
     new HashMap&lt;&gt;();
 
  /**
   * The hostname of the (Ambari) server.
   * &lt;p/&gt;
   * This hostname is cached so that cycles are spent querying for it more than once.
   */</comment>
  <expr><specifier>private</specifier> <name>final</name> <name>String</name> <name>serverHostName</name></expr>;

   <comment type="block" format="javadoc">/**
    * Database accessor to query and update the database of action commands.
    */</comment>
@@ <expr><operator>-</operator><literal type="number">116</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">112</literal></expr>,<expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>ServerActionExecutor</name> <block>{
    <expr><operator>*</operator><operator>/</operator>
   <specifier>private</specifier> <name>Thread</name> <name>executorThread</name> <operator>=</operator> <literal type="null">null</literal></expr>;
 
  <comment type="block" format="javadoc">/**
   * A timer used to clear out {@link #requestSharedDataMap}. Since this "cache"
   * isn't timer- or access-based, then we must periodically check it in order
   * to clear out any stale data.
   */</comment>
  <expr><specifier>private</specifier> <name>final</name> <name>Timer</name> <name>cacheTimer</name> <operator>=</operator> <operator>new</operator> <call><name>Timer</name><argument_list>(<argument><expr><literal type="string">"server-action-executor-cache-timer"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;

   <comment type="block" format="javadoc">/**
    * Statically initialize the Injector
    * &lt;p/&gt;
@@ -134,9 +137,12 @@ public class ServerActionExecutor {
    * @param sleepTimeMS the time (in milliseconds) to wait between polling the database for more tasks
    */</comment>
   <expr><specifier>public</specifier> <call><name>ServerActionExecutor</name><argument_list>(<argument><expr><name>ActionDBAccessor</name> <name>db</name></expr></argument>, <argument><expr><name>long</name> <name>sleepTimeMS</name></expr></argument>)</argument_list></call> <block>{
    <expr><name>serverHostName</name> <operator>=</operator> <call><name><name>StageUtils</name><operator>.</operator><name>getHostName</name></name><argument_list>()</argument_list></call></expr>;
     <expr><name><name>this</name><operator>.</operator><name>db</name></name> <operator>=</operator> <name>db</name></expr>;
     <expr><name><name>this</name><operator>.</operator><name>sleepTimeMS</name></name> <operator>=</operator> <ternary><condition><expr><operator>(</operator><name>sleepTimeMS</name> <operator>&lt;</operator> <literal type="number">1</literal><operator>)</operator></expr> ?</condition><then> <expr><name>POLLING_TIMEOUT_MS</name></expr> </then><else>: <expr><name>sleepTimeMS</name></expr></else></ternary></expr>;

    <comment type="line">// start in 1 hour, run every hour</comment>
    <expr><call><name><name>cacheTimer</name><operator>.</operator><name>schedule</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>ServerActionSharedRequestEvictor</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>TimeUnit</name><operator>.</operator><name>HOURS</name><operator>.</operator><name>toMillis</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>,
        <argument><expr><call><name><name>TimeUnit</name><operator>.</operator><name>HOURS</name><operator>.</operator><name>toMillis</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
   }</block>
 
   <comment type="block" format="javadoc">/**
@@ -241,48 +247,6 @@ public class ServerActionExecutor {
     }
   }
 
  /**
   * Cleans up orphaned shared data Maps due to completed or failed request
   * contexts. We are unable to use {@link Request#getStatus()} since this field
   * is not populated in the database but, instead, calculated in realtime.
   */</comment>
  <specifier>private</specifier> <name>void</name> <call><name>cleanRequestShareDataContexts</name><argument_list>()</argument_list></call> <block>{
    <comment type="line">// if the cache is empty, do nothing</comment>
    <if_stmt><if>if <condition>(<expr><call><name><name>requestSharedDataMap</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <return>return;</return>
    <expr_stmt/></block_content></block></if></if_stmt>}</block></expr>

    <try>try <block>{<block_content>
      <comment type="line">// for every item in the map, get the request and check its status</comment>
      <synchronized>synchronized <init>(<expr><name>requestSharedDataMap</name></expr>)</init> <block>{<block_content>
        <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>&gt;</argument_list></name></type> <name>requestIds</name> <init>= <expr><call><name><name>requestSharedDataMap</name><operator>.</operator><name>keySet</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>Request</name></argument>&gt;</argument_list></name></type> <name>requests</name> <init>= <expr><call><name><name>db</name><operator>.</operator><name>getRequests</name></name><argument_list>(<argument><expr><name>requestIds</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <for>for <control>(<init><decl><type><name>Request</name></type> <name>request</name> <range>: <expr><name>requests</name></expr></range></decl></init>)</control> <block>{<block_content>
          <comment type="line">// calcuate the status from the stages and then remove from the map if</comment>
          <comment type="line">// necessary</comment>
          <decl_stmt><decl><type><name>CalculatedStatus</name></type> <name>calculatedStatus</name> <init>= <expr><call><name><name>CalculatedStatus</name><operator>.</operator><name>statusFromStages</name></name><argument_list>(
              <argument><expr><call><name><name>request</name><operator>.</operator><name>getStages</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

          <comment type="line">// calcuate the status of the request</comment>
          <decl_stmt><decl><type><name>HostRoleStatus</name></type> <name>status</name> <init>= <expr><call><name><name>calculatedStatus</name><operator>.</operator><name>getStatus</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

          <comment type="line">// remove the request from the map if the request is COMPLETED or</comment>
          <comment type="line">// FAILED</comment>
          <switch>switch <condition>(<expr><name>status</name></expr>)</condition> <block>{<block_content>
            <case>case <expr><name>FAILED</name></expr>:</case>
            <case>case <expr><name>COMPLETED</name></expr>:</case>
              <expr_stmt><expr><call><name><name>requestSharedDataMap</name><operator>.</operator><name>remove</name></name><argument_list>(<argument><expr><call><name><name>request</name><operator>.</operator><name>getRequestId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
              <break>break;</break>
            <default>default:</default>
              <break>break;</break>
          <expr_stmt/></block_content></block></switch></block_content></block></for></block_content></block></synchronized></block_content></block></try>}</block></expr>
        }</block></expr></expr_stmt>
      }</block></class>
    } catch <expr_stmt><expr><operator>(</operator><name>Exception</name> <name>exception</name><operator>)</operator> <block>{
      <expr><call><name><name>LOG</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"Unable to clear the server-side action request cache"</literal></expr></argument>, <argument><expr><name>exception</name></expr></argument>)</argument_list></call></expr>;
    }</block></expr></expr_stmt>
  }

   <comment type="block" format="javadoc">/**
    * A helper method to create CommandReports indicating the action/task is in progress
    *
@@ -450,8 +414,6 @@ public class ServerActionExecutor {
         }
       }
     }

    cleanRequestShareDataContexts();
   }
 
   /**
@@ -599,4 +561,46 @@ public class ServerActionExecutor {
       this.executionCommand = executionCommand;
     }
   }

  /**
   * The {@link ServerActionSharedRequestEvictor} is used to clear the shared
   * request cache periodically. This service will only run periodically and,
   * when it does, it will try to make the least expensive call to determine if
   * entries need to be evicted.
   */</comment>
  private <class>class <name>ServerActionSharedRequestEvictor</name> <super_list><extends>extends <super><name>TimerTask</name></super></extends></super_list> <block>{
    <comment type="block" format="javadoc">/**
     * {@inheritDoc}
     */</comment>
    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>run</name><parameter_list>()</parameter_list> <block>{<block_content>
      <comment type="line">// if the cache is empty, do nothing</comment>
      <if_stmt><if>if <condition>(<expr><call><name><name>requestSharedDataMap</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
        <return>return;</return>
      </block_content>}</block></if></if_stmt>

      <comment type="line">// if the cache has requests, see if any are still in progress</comment>
      <try>try <block>{<block_content>
        <comment type="line">// find the requests in progress; there's no need to get the request</comment>
        <comment type="line">// itself since that could be a massive object; we just need the ID</comment>
        <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>&gt;</argument_list></name></type> <name>requestsInProgress</name> <init>= <expr><operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>Stage</name></argument>&gt;</argument_list></name></type> <name>currentStageInProgressPerRequest</name> <init>= <expr><call><name><name>db</name><operator>.</operator><name>getFirstStageInProgressPerRequest</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <for>for <control>(<init><decl><type><name>Stage</name></type> <name>stage</name> <range>: <expr><name>currentStageInProgressPerRequest</name></expr></range></decl></init>)</control> <block>{<block_content>
          <expr_stmt><expr><call><name><name>requestsInProgress</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name><name>stage</name><operator>.</operator><name>getRequestId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>

        <comment type="line">// for every item in the map, get the request and check its status</comment>
        <synchronized>synchronized <init>(<expr><name>requestSharedDataMap</name></expr>)</init> <block>{<block_content>
          <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>&gt;</argument_list></name></type> <name>cachedRequestIds</name> <init>= <expr><call><name><name>requestSharedDataMap</name><operator>.</operator><name>keySet</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
          <for>for <control>(<init><decl><type><name>long</name></type> <name>cachedRequestId</name> <range>: <expr><name>cachedRequestIds</name></expr></range></decl></init>)</control> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>requestsInProgress</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><name>cachedRequestId</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
              <expr_stmt><expr><call><name><name>requestSharedDataMap</name><operator>.</operator><name>remove</name></name><argument_list>(<argument><expr><name>cachedRequestId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
          </block_content>}</block></for>
        </block_content>}</block></synchronized>
      </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>exception</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"Unable to clear the server-side action request cache"</literal></expr></argument>, <argument><expr><name>exception</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></catch></try>
    </block_content>}</block></function>
  }</block></class>
 }
diff <expr_stmt><expr><operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>actionmanager</name><operator>/</operator><name><name>TestActionDBAccessorImpl</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>actionmanager</name><operator>/</operator><name><name>TestActionDBAccessorImpl</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">81eef3b7c3</literal><operator>..</operator><name>c1056dd813</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>actionmanager</name><operator>/</operator><name><name>TestActionDBAccessorImpl</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>actionmanager</name><operator>/</operator><name><name>TestActionDBAccessorImpl</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">202</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">202</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestActionDBAccessorImpl</name> <block>{
   <expr><specifier>public</specifier> <name>void</name> <call><name>testGetStagesInProgressWithFailures</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>AmbariException</name> <block>{
     <expr><call><name>populateActionDB</name><argument_list>(<argument><expr><name>db</name></expr></argument>, <argument><expr><name>hostName</name></expr></argument>, <argument><expr><name>requestId</name></expr></argument>, <argument><expr><name>stageId</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
     <expr><call><name>populateActionDB</name><argument_list>(<argument><expr><name>db</name></expr></argument>, <argument><expr><name>hostName</name></expr></argument>, <argument><expr><name>requestId</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>, <argument><expr><name>stageId</name></expr></argument>)</argument_list></call></expr>;
    <expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>Stage</name></argument>&gt;</argument_list></name> <name>stages</name> <operator>=</operator> <call><name><name>db</name><operator>.</operator><name>getStagesInProgress</name></name><argument_list>()</argument_list></call></expr>;
    <expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>Stage</name></argument>&gt;</argument_list></name> <name>stages</name> <operator>=</operator> <call><name><name>db</name><operator>.</operator><name>getFirstStageInProgressPerRequest</name></name><argument_list>()</argument_list></call></expr>;
     <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><call><name><name>stages</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
     <expr><call><name><name>db</name><operator>.</operator><name>abortOperation</name></name><argument_list>(<argument><expr><name>requestId</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>stages</name> <operator>=</operator> <call><name><name>db</name><operator>.</operator><name>getStagesInProgress</name></name><argument_list>()</argument_list></call></expr>;
    <expr><name>stages</name> <operator>=</operator> <call><name><name>db</name><operator>.</operator><name>getFirstStageInProgressPerRequest</name></name><argument_list>()</argument_list></call></expr>;
     <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><call><name><name>stages</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>requestId</name><operator>+</operator><literal type="number">1</literal></expr></argument>, <argument><expr><call><name><name>stages</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getRequestId</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
   }</block>
@@ <operator>-</operator><literal type="number">220</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">220</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestActionDBAccessorImpl</name> <block>{
 
     <comment type="line">// verify stages and proper ordering</comment>
     <expr><name>int</name> <name>commandsInProgressCount</name> <operator>=</operator> <call><name><name>db</name><operator>.</operator><name>getCommandsInProgressCount</name></name><argument_list>()</argument_list></call></expr>;
    <expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>Stage</name></argument>&gt;</argument_list></name> <name>stages</name> <operator>=</operator> <call><name><name>db</name><operator>.</operator><name>getStagesInProgress</name></name><argument_list>()</argument_list></call></expr>;
    <expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>Stage</name></argument>&gt;</argument_list></name> <name>stages</name> <operator>=</operator> <call><name><name>db</name><operator>.</operator><name>getFirstStageInProgressPerRequest</name></name><argument_list>()</argument_list></call></expr>;
     <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">18</literal></expr></argument>, <argument><expr><name>commandsInProgressCount</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">9</literal></expr></argument>, <argument><expr><call><name><name>stages</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><call><name><name>stages</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
     <expr><name>long</name> <name>lastRequestId</name> <operator>=</operator> <name><name>Integer</name><operator>.</operator><name>MIN_VALUE</name></name></expr>;
     <for>for <control>(<init><decl><type><name>Stage</name></type> <name>stage</name> <range>: <expr><name>stages</name></expr></range></decl></init>)</control> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">235</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">235</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestActionDBAccessorImpl</name> <block>{
 
     <comment type="line">// verify stages and proper ordering</comment>
     <expr><name>commandsInProgressCount</name> <operator>=</operator> <call><name><name>db</name><operator>.</operator><name>getCommandsInProgressCount</name></name><argument_list>()</argument_list></call></expr>;
    <expr><name>stages</name> <operator>=</operator> <call><name><name>db</name><operator>.</operator><name>getStagesInProgress</name></name><argument_list>()</argument_list></call></expr>;
    <expr><name>stages</name> <operator>=</operator> <call><name><name>db</name><operator>.</operator><name>getFirstStageInProgressPerRequest</name></name><argument_list>()</argument_list></call></expr>;
     <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><name>commandsInProgressCount</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><call><name><name>stages</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><call><name><name>stages</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
     <comment type="line">// find the first stage, and change one command to COMPLETED</comment>
     <expr><call><name><name>stages</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>setHostRoleStatus</name><argument_list>(<argument><expr><name>hostName</name></expr></argument>, <argument><expr><call><name><name>Role</name><operator>.</operator><name>HBASE_MASTER</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>,
<argument>@@ <expr><operator>-</operator><literal type="number">247</literal></expr></argument>,<argument><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">247</literal></expr></argument>,<argument><expr><literal type="number">9</literal> @@ <specifier>public</specifier> class <name>TestActionDBAccessorImpl</name> <block>{
 
     <comment type="line">// the first stage still has at least 1 command IN_PROGRESS</comment>
     <expr><name>commandsInProgressCount</name> <operator>=</operator> <call><name><name>db</name><operator>.</operator><name>getCommandsInProgressCount</name></name><argument_list>()</argument_list></call></expr>;
    <expr><name>stages</name> <operator>=</operator> <call><name><name>db</name><operator>.</operator><name>getStagesInProgress</name></name><argument_list>()</argument_list></call></expr>;
    <expr><name>stages</name> <operator>=</operator> <call><name><name>db</name><operator>.</operator><name>getFirstStageInProgressPerRequest</name></name><argument_list>()</argument_list></call></expr>;
     <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">11</literal></expr></argument>, <argument><expr><name>commandsInProgressCount</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><call><name><name>stages</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><call><name><name>stages</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
     <comment type="line">// find the first stage, and change the other command to COMPLETED</comment>
     <expr><call><name><name>stages</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>setHostRoleStatus</name><argument_list>(<argument><expr><name>hostName</name></expr></argument>,
<argument>@@ <expr><operator>-</operator><literal type="number">260</literal></expr></argument>,<argument><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">260</literal></expr></argument>,<argument><expr><literal type="number">9</literal> @@ <specifier>public</specifier> class <name>TestActionDBAccessorImpl</name> <block>{
 
     <comment type="line">// verify stages and proper ordering</comment>
     <expr><name>commandsInProgressCount</name> <operator>=</operator> <call><name><name>db</name><operator>.</operator><name>getCommandsInProgressCount</name></name><argument_list>()</argument_list></call></expr>;
    <expr><name>stages</name> <operator>=</operator> <call><name><name>db</name><operator>.</operator><name>getStagesInProgress</name></name><argument_list>()</argument_list></call></expr>;
    <expr><name>stages</name> <operator>=</operator> <call><name><name>db</name><operator>.</operator><name>getFirstStageInProgressPerRequest</name></name><argument_list>()</argument_list></call></expr>;
     <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>commandsInProgressCount</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><call><name><name>stages</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><call><name><name>stages</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
   }</block>
 
   @<name>Test</name>
@@ <operator>-</operator><literal type="number">274</literal></expr></argument>,<argument><expr><literal type="number">15</literal> <operator>+</operator><literal type="number">274</literal></expr></argument>,<argument><expr><literal type="number">16</literal> @@ <specifier>public</specifier> class <name>TestActionDBAccessorImpl</name> <block>{
     }</block></expr></argument>
 
     <comment type="line">// create 1 request, 3 stages per host, each with 2 commands</comment>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">1000</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
    <decl_stmt><decl><type><name>int</name></type> <name>requestCount</name> <init>= <expr><literal type="number">1000</literal></expr></init></decl>;</decl_stmt>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>requestCount</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
       <decl_stmt><decl><type><name>String</name></type> <name>hostName</name> <init>= <expr><literal type="string">"c64-"</literal> <operator>+</operator> <name>i</name></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name>populateActionDBMultipleStages</name><argument_list>(<argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>db</name></expr></argument>, <argument><expr><name>hostName</name></expr></argument>, <argument><expr><name>requestId</name> <operator>+</operator> <name>i</name></expr></argument>, <argument><expr><name>stageId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt/>}</block_content>
 
     int commandsInProgressCount = db.getCommandsInProgressCount(</block></for>)</block_content></block><empty_stmt>;</empty_stmt></for></argument_list></call></expr>
    <name><name>List</name><argument_list type="generic">&lt;<argument><name>Stage</name></argument>&gt;</argument_list></name> <name>stages</name> <operator>=</operator> <call><name><name>db</name><operator>.</operator><name>getStagesInProgress</name></name><argument_list>()</argument_list></call></block></expr></argument>;
    <argument><expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>Stage</name></argument>&gt;</argument_list></name> <name>stages</name> <operator>=</operator> <call><name><name>db</name><operator>.</operator><name>getFirstStageInProgressPerRequest</name></name><argument_list>()</argument_list></call></expr></argument>;
     <argument><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">6000</literal></expr></argument>, <argument><expr><name>commandsInProgressCount</name></expr></argument>)</argument_list></call></expr></argument>;
    <argument><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">3000</literal></expr></argument>, <argument><expr><call><name><name>stages</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>;
    <argument><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>requestCount</name></expr></argument>, <argument><expr><call><name><name>stages</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>;
   }</argument_list></call>
 
 
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>actionmanager</name><operator>/</operator><name><name>TestActionScheduler</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>actionmanager</name><operator>/</operator><name><name>TestActionScheduler</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">2b5d2f30e4</literal><operator>..</operator><name>d7d3d404d0</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>actionmanager</name><operator>/</operator><name><name>TestActionScheduler</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>actionmanager</name><operator>/</operator><name><name>TestActionScheduler</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">210</literal></expr>,<expr><literal type="number">13</literal> <operator>+</operator><literal type="number">210</literal></expr>,<expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestActionScheduler</name> <block>{
     <expr><name>ActionDBAccessor</name> <name>db</name> <operator>=</operator> <call><name>mock</name><argument_list>(<argument><expr><name><name>ActionDBAccessorImpl</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
     <expr><name>HostRoleCommandDAO</name> <name>hostRoleCommandDAOMock</name> <operator>=</operator> <call><name>mock</name><argument_list>(<argument><expr><name><name>HostRoleCommandDAO</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>Mockito</name><operator>.</operator><name>doNothing</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>when</name><argument_list>(<argument><expr><name>hostRoleCommandDAOMock</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>publishTaskCreateEvent</name><argument_list>(<argument><expr><call><name>anyListOf</name><argument_list>(<argument><expr><name><name>HostRoleCommand</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>Stage</name></argument>&gt;</argument_list></name> <name>stages</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
     <expr><name>Stage</name> <name>s</name> <operator>=</operator> <call><name><name>StageUtils</name><operator>.</operator><name>getATestStage</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">977</literal></expr></argument>, <argument><expr><name>hostname</name></expr></argument>, <argument><expr><name>CLUSTER_HOST_INFO</name></expr></argument>,
       <argument><expr><literal type="string">"{\"host_param\":\"param_value\"}"</literal></expr></argument>, <argument><expr><literal type="string">"{\"stage_param\":\"param_value\"}"</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>stages</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;
 
    <expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>Stage</name></argument>&gt;</argument_list></name> <name>stages</name> <operator>=</operator> <call><name><name>Collections</name><operator>.</operator><name>singletonList</name></name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getCommandsInProgressCount</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><call><name><name>stages</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getStagesInProgress</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>stages</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getFirstStageInProgressPerRequest</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>stages</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><name>RequestEntity</name> <name>request</name> <operator>=</operator> <call><name>mock</name><argument_list>(<argument><expr><name><name>RequestEntity</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>request</name><operator>.</operator><name>isExclusive</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">307</literal></expr>,<expr><literal type="number">20</literal> <operator>+</operator><literal type="number">306</literal></expr>,<expr><literal type="number">19</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestActionScheduler</name> <block>{
     <expr><call><name><name>hostEntity</name><operator>.</operator><name>setHostName</name></name><argument_list>(<argument><expr><name>hostname</name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>hostDAO</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><name>hostEntity</name></expr></argument>)</argument_list></call></expr>;
 
    <expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>Stage</name></argument>&gt;</argument_list></name> <name>stages</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
     <expr><name>final</name> <name>Stage</name> <name>s</name> <operator>=</operator> <call><name><name>StageUtils</name><operator>.</operator><name>getATestStage</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">977</literal></expr></argument>, <argument><expr><name>hostname</name></expr></argument>, <argument><expr><name>CLUSTER_HOST_INFO</name></expr></argument>,
       <argument><expr><literal type="string">"{\"host_param\":\"param_value\"}"</literal></expr></argument>, <argument><expr><literal type="string">"{\"stage_param\":\"param_value\"}"</literal></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>s</name><operator>.</operator><name>addHostRoleExecutionCommand</name></name><argument_list>(<argument><expr><name>hostname</name></expr></argument>, <argument><expr><name><name>Role</name><operator>.</operator><name>SECONDARY_NAMENODE</name></name></expr></argument>, <argument><expr><name><name>RoleCommand</name><operator>.</operator><name>INSTALL</name></name></expr></argument>,
             <argument><expr><operator>new</operator> <call><name>ServiceComponentHostInstallEvent</name><argument_list>(<argument><expr><literal type="string">"SECONDARY_NAMENODE"</literal></expr></argument>, <argument><expr><name>hostname</name></expr></argument>, <argument><expr><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"HDP-1.2.0"</literal></expr></argument>)</argument_list></call></expr></argument>,
             <argument><expr><literal type="string">"cluster1"</literal></expr></argument>, <argument><expr><literal type="string">"HDFS"</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>s</name><operator>.</operator><name>setHostRoleStatus</name></name><argument_list>(<argument><expr><name>hostname</name></expr></argument>, <argument><expr><literal type="string">"SECONDARY_NAMENODE"</literal></expr></argument>, <argument><expr><name><name>HostRoleStatus</name><operator>.</operator><name>IN_PROGRESS</name></name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>stages</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;
    <expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>Stage</name></argument>&gt;</argument_list></name> <name>stages</name> <operator>=</operator> <call><name><name>Collections</name><operator>.</operator><name>singletonList</name></name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><name>ActionDBAccessor</name> <name>db</name> <operator>=</operator> <call><name>mock</name><argument_list>(<argument><expr><name><name>ActionDBAccessor</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
     <expr><name>HostRoleCommandDAO</name> <name>hostRoleCommandDAOMock</name> <operator>=</operator> <call><name>mock</name><argument_list>(<argument><expr><name><name>HostRoleCommandDAO</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>Mockito</name><operator>.</operator><name>doNothing</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>when</name><argument_list>(<argument><expr><name>hostRoleCommandDAOMock</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>publishTaskCreateEvent</name><argument_list>(<argument><expr><call><name>anyListOf</name><argument_list>(<argument><expr><name><name>HostRoleCommand</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getCommandsInProgressCount</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><call><name><name>stages</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getStagesInProgress</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>stages</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getFirstStageInProgressPerRequest</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>stages</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><name>RequestEntity</name> <name>request</name> <operator>=</operator> <call><name>mock</name><argument_list>(<argument><expr><name><name>RequestEntity</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>request</name><operator>.</operator><name>isExclusive</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">397</literal></expr>,<expr><literal type="number">10</literal> <operator>+</operator><literal type="number">395</literal></expr>,<expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestActionScheduler</name> <block>{
     <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>host</name><operator>.</operator><name>getState</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name><name>HostState</name><operator>.</operator><name>HEARTBEAT_LOST</name></name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>host</name><operator>.</operator><name>getHostName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>hostname</name></expr></argument>)</argument_list></call></expr>;
 
    <expr><name>final</name> <name><name>List</name><argument_list type="generic">&lt;<argument><name>Stage</name></argument>&gt;</argument_list></name> <name>stages</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
     <expr><name>final</name> <name>Stage</name> <name>s</name> <operator>=</operator> <call><name><name>StageUtils</name><operator>.</operator><name>getATestStage</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">977</literal></expr></argument>, <argument><expr><name>hostname</name></expr></argument>, <argument><expr><name>CLUSTER_HOST_INFO</name></expr></argument>,
       <argument><expr><literal type="string">"{\"host_param\":\"param_value\"}"</literal></expr></argument>, <argument><expr><literal type="string">"{\"stage_param\":\"param_value\"}"</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>stages</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;

    <expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>Stage</name></argument>&gt;</argument_list></name> <name>stages</name> <operator>=</operator> <call><name><name>Collections</name><operator>.</operator><name>singletonList</name></name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><name>ActionDBAccessor</name> <name>db</name> <operator>=</operator> <call><name>mock</name><argument_list>(<argument><expr><name><name>ActionDBAccessor</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
 
@@ <expr><operator>-</operator><literal type="number">409</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">407</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestActionScheduler</name> <block>{
     <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getRequestEntity</name></name><argument_list>(<argument><expr><call><name>anyLong</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>request</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getCommandsInProgressCount</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><call><name><name>stages</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getStagesInProgress</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>stages</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getFirstStageInProgressPerRequest</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>stages</name></expr></argument>)</argument_list></call></expr>;
     <expr><name>HostRoleCommandDAO</name> <name>hostRoleCommandDAOMock</name> <operator>=</operator> <call><name>mock</name><argument_list>(<argument><expr><name><name>HostRoleCommandDAO</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>Mockito</name><operator>.</operator><name>doNothing</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>when</name><argument_list>(<argument><expr><name>hostRoleCommandDAOMock</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>publishTaskCreateEvent</name><argument_list>(<argument><expr><call><name>anyListOf</name><argument_list>(<argument><expr><name><name>HostRoleCommand</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
@@ <expr><operator>-</operator><literal type="number">484</literal></expr>,<expr><literal type="number">14</literal> <operator>+</operator><literal type="number">482</literal></expr>,<expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestActionScheduler</name> <block>{
     <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>serviceObj</name><operator>.</operator><name>getServiceComponent</name></name><argument_list>(<argument><expr><call><name>anyString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>scomp</name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>serviceObj</name><operator>.</operator><name>getCluster</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>oneClusterMock</name></expr></argument>)</argument_list></call></expr>;
 
    <expr><name>final</name> <name><name>List</name><argument_list type="generic">&lt;<argument><name>Stage</name></argument>&gt;</argument_list></name> <name>stages</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
     <expr><name>final</name> <name>Stage</name> <name>stage</name> <operator>=</operator> <call><name><name>stageFactory</name><operator>.</operator><name>createNew</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="string">"/tmp"</literal></expr></argument>, <argument><expr><literal type="string">"cluster1"</literal></expr></argument>, <argument><expr><literal type="number">1L</literal></expr></argument>, <argument><expr><literal type="string">"stageWith2Tasks"</literal></expr></argument>,
       <argument><expr><name>CLUSTER_HOST_INFO</name></expr></argument>, <argument><expr><literal type="string">"{\"command_param\":\"param_value\"}"</literal></expr></argument>, <argument><expr><literal type="string">"{\"host_param\":\"param_value\"}"</literal></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>addInstallTaskToStage</name><argument_list>(<argument><expr><name>stage</name></expr></argument>, <argument><expr><name>hostname1</name></expr></argument>, <argument><expr><literal type="string">"cluster1"</literal></expr></argument>, <argument><expr><name><name>Role</name><operator>.</operator><name>DATANODE</name></name></expr></argument>,
       <argument><expr><name><name>RoleCommand</name><operator>.</operator><name>INSTALL</name></name></expr></argument>, <argument><expr><name><name>Service</name><operator>.</operator><name>Type</name><operator>.</operator><name>HDFS</name></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>addInstallTaskToStage</name><argument_list>(<argument><expr><name>stage</name></expr></argument>, <argument><expr><name>hostname2</name></expr></argument>, <argument><expr><literal type="string">"cluster1"</literal></expr></argument>, <argument><expr><name><name>Role</name><operator>.</operator><name>NAMENODE</name></name></expr></argument>,
       <argument><expr><name><name>RoleCommand</name><operator>.</operator><name>INSTALL</name></name></expr></argument>, <argument><expr><name><name>Service</name><operator>.</operator><name>Type</name><operator>.</operator><name>HDFS</name></name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>stages</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>stage</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>final</name> <name><name>List</name><argument_list type="generic">&lt;<argument><name>Stage</name></argument>&gt;</argument_list></name> <name>stages</name> <operator>=</operator> <call><name><name>Collections</name><operator>.</operator><name>singletonList</name></name><argument_list>(<argument><expr><name>stage</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><name>ActionDBAccessor</name> <name>db</name> <operator>=</operator> <call><name>mock</name><argument_list>(<argument><expr><name><name>ActionDBAccessor</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
 
@@ <expr><operator>-</operator><literal type="number">500</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">497</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestActionScheduler</name> <block>{
     <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getRequestEntity</name></name><argument_list>(<argument><expr><call><name>anyLong</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>request</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getCommandsInProgressCount</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><call><name><name>stages</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getStagesInProgress</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>stages</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getFirstStageInProgressPerRequest</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>stages</name></expr></argument>)</argument_list></call></expr>;
     <expr><name>HostRoleCommandDAO</name> <name>hostRoleCommandDAOMock</name> <operator>=</operator> <call><name>mock</name><argument_list>(<argument><expr><name><name>HostRoleCommandDAO</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>Mockito</name><operator>.</operator><name>doNothing</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>when</name><argument_list>(<argument><expr><name>hostRoleCommandDAOMock</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>publishTaskCreateEvent</name><argument_list>(<argument><expr><call><name>anyListOf</name><argument_list>(<argument><expr><name><name>HostRoleCommand</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
@@ <expr><operator>-</operator><literal type="number">606</literal></expr>,<expr><literal type="number">10</literal> <operator>+</operator><literal type="number">603</literal></expr>,<expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestActionScheduler</name> <block>{
     <expr><name>Clusters</name> <name>fsm</name> <operator>=</operator> <call><name>mock</name><argument_list>(<argument><expr><name><name>Clusters</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
     <expr><name>UnitOfWork</name> <name>unitOfWork</name> <operator>=</operator> <call><name>mock</name><argument_list>(<argument><expr><name><name>UnitOfWork</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
 
    <expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>Stage</name></argument>&gt;</argument_list></name> <name>stages</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
     <expr><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name> <name>payload</name> <operator>=</operator> <operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
     <expr><name>final</name> <name>Stage</name> <name>s</name> <operator>=</operator> <call><name>getStageWithServerAction</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">977</literal></expr></argument>, <argument><expr><name>payload</name></expr></argument>, <argument><expr><literal type="string">"test"</literal></expr></argument>, <argument><expr><literal type="number">1200</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>stages</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;
    <expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>Stage</name></argument>&gt;</argument_list></name> <name>stages</name> <operator>=</operator> <call><name><name>Collections</name><operator>.</operator><name>singletonList</name></name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><name>ActionDBAccessor</name> <name>db</name> <operator>=</operator> <call><name>mock</name><argument_list>(<argument><expr><name><name>ActionDBAccessor</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
     <expr><name>HostRoleCommandDAO</name> <name>hostRoleCommandDAOMock</name> <operator>=</operator> <call><name>mock</name><argument_list>(<argument><expr><name><name>HostRoleCommandDAO</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">620</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">616</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestActionScheduler</name> <block>{
     <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getRequestEntity</name></name><argument_list>(<argument><expr><call><name>anyLong</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>request</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getCommandsInProgressCount</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><call><name><name>stages</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getStagesInProgress</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>stages</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getFirstStageInProgressPerRequest</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>stages</name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>doAnswer</name><argument_list>(<argument><expr><operator>new</operator> <class><super><name><name>Answer</name><argument_list type="generic">&lt;<argument><name>Void</name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{
       <function><annotation>@<name>Override</name></annotation>
       <type><specifier>public</specifier> <name>Void</name></type> <name>answer</name><parameter_list>(<parameter><decl><type><name>InvocationOnMock</name></type> <name>invocation</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Throwable</name></expr></argument></throws> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">737</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">733</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestActionScheduler</name> <block>{
     <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getRequestEntity</name></name><argument_list>(<argument><expr><call><name>anyLong</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>request</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getCommandsInProgressCount</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><call><name><name>stages</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getStagesInProgress</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>stages</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getFirstStageInProgressPerRequest</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>stages</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><name>Properties</name> <name>properties</name> <operator>=</operator> <operator>new</operator> <call><name>Properties</name><argument_list>()</argument_list></call></expr>;
     <expr><call><name><name>properties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>Configuration</name><operator>.</operator><name>PARALLEL_STAGE_EXECUTION</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">766</literal></expr>,<expr><literal type="number">11</literal> <operator>+</operator><literal type="number">762</literal></expr>,<expr><literal type="number">10</literal> @@ <specifier>public</specifier> class <name>TestActionScheduler</name> <block>{
     <expr><name>Clusters</name> <name>fsm</name> <operator>=</operator> <call><name>mock</name><argument_list>(<argument><expr><name><name>Clusters</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
     <expr><name>UnitOfWork</name> <name>unitOfWork</name> <operator>=</operator> <call><name>mock</name><argument_list>(<argument><expr><name><name>UnitOfWork</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
 
    <expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>Stage</name></argument>&gt;</argument_list></name> <name>stages</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
     <expr><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name> <name>payload</name> <operator>=</operator> <operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
     <expr><call><name><name>payload</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name><name>MockServerAction</name><operator>.</operator><name>PAYLOAD_FORCE_FAIL</name></name></expr></argument>, <argument><expr><literal type="string">"timeout"</literal></expr></argument>)</argument_list></call></expr>;
     <expr><name>final</name> <name>Stage</name> <name>s</name> <operator>=</operator> <call><name>getStageWithServerAction</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">977</literal></expr></argument>, <argument><expr><name>payload</name></expr></argument>, <argument><expr><literal type="string">"test"</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>stages</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;
    <expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>Stage</name></argument>&gt;</argument_list></name> <name>stages</name> <operator>=</operator> <call><name><name>Collections</name><operator>.</operator><name>singletonList</name></name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><name>ActionDBAccessor</name> <name>db</name> <operator>=</operator> <call><name>mock</name><argument_list>(<argument><expr><name><name>ActionDBAccessor</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
     <expr><name>HostRoleCommandDAO</name> <name>hostRoleCommandDAOMock</name> <operator>=</operator> <call><name>mock</name><argument_list>(<argument><expr><name><name>HostRoleCommandDAO</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">781</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">776</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestActionScheduler</name> <block>{
     <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getRequestEntity</name></name><argument_list>(<argument><expr><call><name>anyLong</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>request</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getCommandsInProgressCount</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><call><name><name>stages</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getStagesInProgress</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>stages</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getFirstStageInProgressPerRequest</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>stages</name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>doAnswer</name><argument_list>(<argument><expr><operator>new</operator> <class><super><name><name>Answer</name><argument_list type="generic">&lt;<argument><name>Void</name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{
       <function><annotation>@<name>Override</name></annotation>
       <type><specifier>public</specifier> <name>Void</name></type> <name>answer</name><parameter_list>(<parameter><decl><type><name>InvocationOnMock</name></type> <name>invocation</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Throwable</name></expr></argument></throws> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">981</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">976</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> class <name>TestActionScheduler</name> <block>{
     <expr><name>Clusters</name> <name>fsm</name> <operator>=</operator> <call><name>mock</name><argument_list>(<argument><expr><name><name>Clusters</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
     <expr><name>UnitOfWork</name> <name>unitOfWork</name> <operator>=</operator> <call><name>mock</name><argument_list>(<argument><expr><name><name>UnitOfWork</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
 
    <expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>Stage</name></argument>&gt;</argument_list></name> <name>stages</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
     <expr><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name> <name>payload</name> <operator>=</operator> <operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
     <expr><call><name><name>payload</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name><name>MockServerAction</name><operator>.</operator><name>PAYLOAD_FORCE_FAIL</name></name></expr></argument>, <argument><expr><literal type="string">"exception"</literal></expr></argument>)</argument_list></call></expr>;
     <expr><name>final</name> <name>Stage</name> <name>s</name> <operator>=</operator> <call><name>getStageWithServerAction</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">977</literal></expr></argument>, <argument><expr><name>payload</name></expr></argument>, <argument><expr><literal type="string">"test"</literal></expr></argument>, <argument><expr><literal type="number">300</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>stages</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;
    <expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>Stage</name></argument>&gt;</argument_list></name> <name>stages</name> <operator>=</operator> <call><name><name>Collections</name><operator>.</operator><name>singletonList</name></name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><name>ActionDBAccessor</name> <name>db</name> <operator>=</operator> <call><name>mock</name><argument_list>(<argument><expr><name><name>ActionDBAccessor</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
     <expr><name>HostRoleCommandDAO</name> <name>hostRoleCommandDAOMock</name> <operator>=</operator> <call><name>mock</name><argument_list>(<argument><expr><name><name>HostRoleCommandDAO</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">996</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">990</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestActionScheduler</name> <block>{
     <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getRequestEntity</name></name><argument_list>(<argument><expr><call><name>anyLong</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>request</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getCommandsInProgressCount</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><call><name><name>stages</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getStagesInProgress</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>stages</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getFirstStageInProgressPerRequest</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>stages</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><call><name>doAnswer</name><argument_list>(<argument><expr><operator>new</operator> <class><super><name><name>Answer</name><argument_list type="generic">&lt;<argument><name>Void</name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{
       <annotation>@<name>Override</name></annotation>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1146</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">1140</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestActionScheduler</name> <block>{
     <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getRequestEntity</name></name><argument_list>(<argument><expr><call><name>anyLong</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>request</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getCommandsInProgressCount</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><call><name><name>stages</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getStagesInProgress</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>stages</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getFirstStageInProgressPerRequest</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>stages</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><name>Properties</name> <name>properties</name> <operator>=</operator> <operator>new</operator> <call><name>Properties</name><argument_list>()</argument_list></call></expr>;
     <expr><name>Configuration</name> <name>conf</name> <operator>=</operator> <operator>new</operator> <call><name>Configuration</name><argument_list>(<argument><expr><name>properties</name></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">1238</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">1232</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestActionScheduler</name> <block>{
     <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getRequestEntity</name></name><argument_list>(<argument><expr><call><name>anyLong</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>request</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getCommandsInProgressCount</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><call><name><name>stages</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getStagesInProgress</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>stages</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getFirstStageInProgressPerRequest</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>stages</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><name>Properties</name> <name>properties</name> <operator>=</operator> <operator>new</operator> <call><name>Properties</name><argument_list>()</argument_list></call></expr>;
     <expr><call><name><name>properties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>Configuration</name><operator>.</operator><name>PARALLEL_STAGE_EXECUTION</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"false"</literal></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">1315</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">1309</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestActionScheduler</name> <block>{
     <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getRequestEntity</name></name><argument_list>(<argument><expr><call><name>anyLong</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>request</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getCommandsInProgressCount</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><call><name><name>stages</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getStagesInProgress</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>stages</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getFirstStageInProgressPerRequest</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>stages</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><name>Properties</name> <name>properties</name> <operator>=</operator> <operator>new</operator> <call><name>Properties</name><argument_list>()</argument_list></call></expr>;
     <expr><call><name><name>properties</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>Configuration</name><operator>.</operator><name>PARALLEL_STAGE_EXECUTION</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">1357</literal></expr>,<expr><literal type="number">9</literal> <operator>+</operator><literal type="number">1351</literal></expr>,<expr><literal type="number">13</literal> @@ <specifier>public</specifier> class <name>TestActionScheduler</name> <block>{
     <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>scomp</name><operator>.</operator><name>getServiceComponentHosts</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>hosts</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><name>final</name> <name><name>List</name><argument_list type="generic">&lt;<argument><name>Stage</name></argument>&gt;</argument_list></name> <name>stages</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;

     <expr><call><name><name>stages</name><operator>.</operator><name>add</name></name><argument_list>(
         <argument><expr><call><name>getStageWithSingleTask</name><argument_list>(
             <argument><expr><name>hostname</name></expr></argument>, <argument><expr><literal type="string">"cluster1"</literal></expr></argument>, <argument><expr><name><name>Role</name><operator>.</operator><name>NAMENODE</name></name></expr></argument>, <argument><expr><name><name>RoleCommand</name><operator>.</operator><name>UPGRADE</name></name></expr></argument>, <argument><expr><name><name>Service</name><operator>.</operator><name>Type</name><operator>.</operator><name>HDFS</name></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;

    <expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>Stage</name></argument>&gt;</argument_list></name> <name>firstStageInProgress</name> <operator>=</operator> <call><name><name>Collections</name><operator>.</operator><name>singletonList</name></name><argument_list>(<argument><expr><call><name><name>stages</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;

     <expr><call><name><name>stages</name><operator>.</operator><name>add</name></name><argument_list>(
         <argument><expr><call><name>getStageWithSingleTask</name><argument_list>(
             <argument><expr><name>hostname</name></expr></argument>, <argument><expr><literal type="string">"cluster1"</literal></expr></argument>, <argument><expr><name><name>Role</name><operator>.</operator><name>DATANODE</name></name></expr></argument>, <argument><expr><name><name>RoleCommand</name><operator>.</operator><name>UPGRADE</name></name></expr></argument>, <argument><expr><name><name>Service</name><operator>.</operator><name>Type</name><operator>.</operator><name>HDFS</name></name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">1376</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">1374</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestActionScheduler</name> <block>{
     <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getRequestEntity</name></name><argument_list>(<argument><expr><call><name>anyLong</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>request</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getCommandsInProgressCount</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><call><name><name>stages</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getStagesInProgress</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>stages</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getFirstStageInProgressPerRequest</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>firstStageInProgress</name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>doAnswer</name><argument_list>(<argument><expr><operator>new</operator> <class><super><name><name>Answer</name><argument_list type="generic">&lt;<argument><name>Void</name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{
       <function><annotation>@<name>Override</name></annotation>
       <type><specifier>public</specifier> <name>Void</name></type> <name>answer</name><parameter_list>(<parameter><decl><type><name>InvocationOnMock</name></type> <name>invocation</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Throwable</name></expr></argument></throws> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1517</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">1515</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> class <name>TestActionScheduler</name> <block>{
     <expr><call><name><name>hostDAO</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><name>hostEntity1</name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>hostDAO</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><name>hostEntity2</name></expr></argument>)</argument_list></call></expr>;
 
    <expr><name>final</name> <name><name>List</name><argument_list type="generic">&lt;<argument><name>Stage</name></argument>&gt;</argument_list></name> <name>stages</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;

     <expr><name>long</name> <name>now</name> <operator>=</operator> <call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call></expr>;
     <expr><name>Stage</name> <name>stage</name> <operator>=</operator> <call><name><name>stageFactory</name><operator>.</operator><name>createNew</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="string">"/tmp"</literal></expr></argument>, <argument><expr><literal type="string">"cluster1"</literal></expr></argument>, <argument><expr><literal type="number">1L</literal></expr></argument>,
         <argument><expr><literal type="string">"testRequestFailureBasedOnSuccessFactor"</literal></expr></argument>, <argument><expr><name>CLUSTER_HOST_INFO</name></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">1545</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">1541</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestActionScheduler</name> <block>{
     <expr><call><name>addHostRoleExecutionCommand</name><argument_list>(<argument><expr><name>now</name></expr></argument>, <argument><expr><name>stage</name></expr></argument>, <argument><expr><name><name>Role</name><operator>.</operator><name>GANGLIA_MONITOR</name></name></expr></argument>, <argument><expr><name><name>Service</name><operator>.</operator><name>Type</name><operator>.</operator><name>GANGLIA</name></name></expr></argument>,
         <argument><expr><name><name>RoleCommand</name><operator>.</operator><name>INSTALL</name></name></expr></argument>, <argument><expr><name>host2</name></expr></argument>, <argument><expr><literal type="string">"cluster1"</literal></expr></argument>)</argument_list></call></expr>;
 
    <expr><call><name><name>stages</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>stage</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>final</name> <name><name>List</name><argument_list type="generic">&lt;<argument><name>Stage</name></argument>&gt;</argument_list></name> <name>stages</name> <operator>=</operator> <call><name><name>Collections</name><operator>.</operator><name>singletonList</name></name><argument_list>(<argument><expr><name>stage</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><name><name>HostRoleStatus</name><index>[]</index></name> <name>statusesAtIterOne</name> <operator>=</operator> <block>{<expr><name><name>HostRoleStatus</name><operator>.</operator><name>QUEUED</name></name></expr>, <expr><name><name>HostRoleStatus</name><operator>.</operator><name>QUEUED</name></name></expr>,
         <expr><name><name>HostRoleStatus</name><operator>.</operator><name>QUEUED</name></name></expr>, <expr><name><name>HostRoleStatus</name><operator>.</operator><name>QUEUED</name></name></expr>, <expr><name><name>HostRoleStatus</name><operator>.</operator><name>FAILED</name></name></expr>,
@@ <expr><operator>-</operator><literal type="number">1572</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">1568</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestActionScheduler</name> <block>{
     <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getRequestEntity</name></name><argument_list>(<argument><expr><call><name>anyLong</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>request</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getCommandsInProgressCount</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><call><name><name>stages</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getStagesInProgress</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>stages</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getFirstStageInProgressPerRequest</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>stages</name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>doAnswer</name><argument_list>(<argument><expr><operator>new</operator> <class><super><name><name>Answer</name><argument_list type="generic">&lt;<argument><name>Void</name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{
       <function><annotation>@<name>Override</name></annotation>
       <type><specifier>public</specifier> <name>Void</name></type> <name>answer</name><parameter_list>(<parameter><decl><type><name>InvocationOnMock</name></type> <name>invocation</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Throwable</name></expr></argument></throws> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1740</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">1736</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> class <name>TestActionScheduler</name> <block>{
         <expr><literal type="string">"cluster1"</literal></expr>, <expr><call><name><name>Service</name><operator>.</operator><name>Type</name><operator>.</operator><name>HDFS</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr>, <expr><literal type="boolean">false</literal></expr>, <expr><literal type="boolean">false</literal></expr></block></expr></expr_stmt></block_content></block></function></block></class></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>stage</name><operator>.</operator><name>getExecutionCommandWrapper</name></name><argument_list>(<argument><expr><literal type="string">"host3"</literal></expr></argument>,
         <argument><expr><call><name><name>Role</name><operator>.</operator><name>DATANODE</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getExecutionCommand</name><argument_list>()</argument_list></call></expr>;

     <expr><call><name><name>stages</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>stage</name></expr></argument>)</argument_list></call></expr>;
    <expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>Stage</name></argument>&gt;</argument_list></name> <name>stageInProgress</name> <operator>=</operator> <call><name><name>Collections</name><operator>.</operator><name>singletonList</name></name><argument_list>(<argument><expr><name>stage</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><call><name><name>stage</name><operator>.</operator><name>getOrderedHostRoleCommands</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>setTaskId</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>stage</name><operator>.</operator><name>getOrderedHostRoleCommands</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>setTaskId</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">1758</literal></expr>,<expr><literal type="number">8</literal> <operator>+</operator><literal type="number">1756</literal></expr>,<expr><literal type="number">8</literal> @@ <specifier>public</specifier> class <name>TestActionScheduler</name> <block>{
     <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>request</name><operator>.</operator><name>isExclusive</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getRequestEntity</name></name><argument_list>(<argument><expr><call><name>anyLong</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>request</name></expr></argument>)</argument_list></call></expr>;
 
    <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getCommandsInProgressCount</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><call><name><name>stages</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getStagesInProgress</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>stages</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getCommandsInProgressCount</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><call><name><name>stageInProgress</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getFirstStageInProgressPerRequest</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>stageInProgress</name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>doAnswer</name><argument_list>(<argument><expr><operator>new</operator> <class><super><name><name>Answer</name><argument_list type="generic">&lt;<argument><name>Void</name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{
       <function><annotation>@<name>Override</name></annotation>
       <type><specifier>public</specifier> <name>Void</name></type> <name>answer</name><parameter_list>(<parameter><decl><type><name>InvocationOnMock</name></type> <name>invocation</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Throwable</name></expr></argument></throws> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">2013</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">2011</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestActionScheduler</name> <block>{
       <expr><literal type="string">"{\"host_param\":\"param_value\"}"</literal></expr>, <expr><literal type="string">"{\"stage_param\":\"param_value\"}"</literal></expr></block></expr></expr_stmt></block_content></block></function></block></class></expr></argument>)</argument_list></call></expr>;
 
     <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getCommandsInProgressCount</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getStagesInProgress</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><call><name><name>Collections</name><operator>.</operator><name>singletonList</name></name><argument_list>(<argument><expr><name>s1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getFirstStageInProgressPerRequest</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><call><name><name>Collections</name><operator>.</operator><name>singletonList</name></name><argument_list>(<argument><expr><name>s1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
     <comment type="line">//Keep large number of attempts so that the task is not expired finally</comment>
     <comment type="line">//Small action timeout to test rescheduling</comment>
@@ <expr><operator>-</operator><literal type="number">2030</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">2028</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestActionScheduler</name> <block>{
     <expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>clusterHostInfo1</name></expr></argument>, <argument><expr><operator>(</operator><operator>(</operator><name>ExecutionCommand</name><operator>)</operator> <operator>(</operator><call><name><name>ac</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>)</operator><operator>)</operator><operator>.</operator><call><name>getClusterHostInfo</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
     <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getCommandsInProgressCount</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getStagesInProgress</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><call><name><name>Collections</name><operator>.</operator><name>singletonList</name></name><argument_list>(<argument><expr><name>s2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getFirstStageInProgressPerRequest</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><call><name><name>Collections</name><operator>.</operator><name>singletonList</name></name><argument_list>(<argument><expr><name>s2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
     <comment type="line">//Verify that ActionSheduler does not return cached value of cluster host info for new requestId</comment>
     <expr><name>ac</name> <operator>=</operator> <call><name>waitForQueueSize</name><argument_list>(<argument><expr><name>hostname</name></expr></argument>, <argument><expr><name>aq</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>scheduler</name></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">2083</literal></expr>,<expr><literal type="number">14</literal> <operator>+</operator><literal type="number">2081</literal></expr>,<expr><literal type="number">13</literal> @@ <specifier>public</specifier> class <name>TestActionScheduler</name> <block>{
                 <expr><literal type="string">"dummyService"</literal></expr>, <expr><literal type="string">"dummyComponent"</literal></expr>, <expr><literal type="string">"dummyHostname"</literal></expr></block></expr></block></expr></block></expr></block></expr></block></expr></block></expr></block></expr></expr_stmt></block_content></block></function></block></class></expr></argument>)</argument_list></call></expr></block></expr></block></expr></block></expr></block></expr></block></expr></expr_stmt></block></class></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>serviceObj</name><operator>.</operator><name>getCluster</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>oneClusterMock</name></expr></argument>)</argument_list></call></expr>;
 
    <expr><name>final</name> <name><name>List</name><argument_list type="generic">&lt;<argument><name>Stage</name></argument>&gt;</argument_list></name> <name>stages</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
     <expr><name>Stage</name> <name>stage1</name> <operator>=</operator> <call><name><name>stageFactory</name><operator>.</operator><name>createNew</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="string">"/tmp"</literal></expr></argument>, <argument><expr><literal type="string">"cluster1"</literal></expr></argument>, <argument><expr><literal type="number">1L</literal></expr></argument>, <argument><expr><literal type="string">"stageWith2Tasks"</literal></expr></argument>,
             <argument><expr><name>CLUSTER_HOST_INFO</name></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>addInstallTaskToStage</name><argument_list>(<argument><expr><name>stage1</name></expr></argument>, <argument><expr><name>hostname1</name></expr></argument>, <argument><expr><literal type="string">"cluster1"</literal></expr></argument>, <argument><expr><name><name>Role</name><operator>.</operator><name>HBASE_MASTER</name></name></expr></argument>,
             <argument><expr><name><name>RoleCommand</name><operator>.</operator><name>INSTALL</name></name></expr></argument>, <argument><expr><name><name>Service</name><operator>.</operator><name>Type</name><operator>.</operator><name>HBASE</name></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>addInstallTaskToStage</name><argument_list>(<argument><expr><name>stage1</name></expr></argument>, <argument><expr><name>hostname1</name></expr></argument>, <argument><expr><literal type="string">"cluster1"</literal></expr></argument>, <argument><expr><name><name>Role</name><operator>.</operator><name>HBASE_REGIONSERVER</name></name></expr></argument>,
             <argument><expr><name><name>RoleCommand</name><operator>.</operator><name>INSTALL</name></name></expr></argument>, <argument><expr><name><name>Service</name><operator>.</operator><name>Type</name><operator>.</operator><name>HBASE</name></name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>stages</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>stage1</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>final</name> <name><name>List</name><argument_list type="generic">&lt;<argument><name>Stage</name></argument>&gt;</argument_list></name> <name>stages</name> <operator>=</operator> <call><name><name>Collections</name><operator>.</operator><name>singletonList</name></name><argument_list>(<argument><expr><name>stage1</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><name>ActionDBAccessor</name> <name>db</name> <operator>=</operator> <call><name>mock</name><argument_list>(<argument><expr><name><name>ActionDBAccessor</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
 
@@ <expr><operator>-</operator><literal type="number">2099</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">2096</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestActionScheduler</name> <block>{
     <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getRequestEntity</name></name><argument_list>(<argument><expr><call><name>anyLong</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>request</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getCommandsInProgressCount</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><call><name><name>stages</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getStagesInProgress</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>stages</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getFirstStageInProgressPerRequest</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>stages</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><name>ActionScheduler</name> <name>scheduler</name> <operator>=</operator> <operator>new</operator> <call><name>ActionScheduler</name><argument_list>(<argument><expr><literal type="number">100</literal></expr></argument>, <argument><expr><literal type="number">50000</literal></expr></argument>, <argument><expr><name>db</name></expr></argument>, <argument><expr><name>aq</name></expr></argument>, <argument><expr><name>fsm</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>,
         <argument><expr><operator>new</operator> <call><name>HostsMap</name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <literal type="null">null</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>unitOfWork</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>conf</name></expr></argument>, <argument><expr><name>entityManagerProviderMock</name></expr></argument>,
<argument>@@ <expr><operator>-</operator><literal type="number">2155</literal></expr></argument>,<argument><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">2152</literal></expr></argument>,<argument><expr><literal type="number">9</literal> @@ <specifier>public</specifier> class <name>TestActionScheduler</name> <block>{
     <expr><name>Clusters</name> <name>fsm</name> <operator>=</operator> <call><name>mock</name><argument_list>(<argument><expr><name><name>Clusters</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
     <expr><name>UnitOfWork</name> <name>unitOfWork</name> <operator>=</operator> <call><name>mock</name><argument_list>(<argument><expr><name><name>UnitOfWork</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
 
    <expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>Stage</name></argument>&gt;</argument_list></name> <name>stages</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
     <expr><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name> <name>payload</name> <operator>=</operator> <operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
     <expr><name>final</name> <name>Stage</name> <name>s</name> <operator>=</operator> <call><name>getStageWithServerAction</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">977</literal></expr></argument>, <argument><expr><name>payload</name></expr></argument>, <argument><expr><literal type="string">"test"</literal></expr></argument>, <argument><expr><literal type="number">300</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>stages</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;
    <expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>Stage</name></argument>&gt;</argument_list></name> <name>stages</name> <operator>=</operator> <call><name><name>Collections</name><operator>.</operator><name>singletonList</name></name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><name>ActionDBAccessor</name> <name>db</name> <operator>=</operator> <call><name>mock</name><argument_list>(<argument><expr><name><name>ActionDBAccessor</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
     <expr><name>HostRoleCommandDAO</name> <name>hostRoleCommandDAOMock</name> <operator>=</operator> <call><name>mock</name><argument_list>(<argument><expr><name><name>HostRoleCommandDAO</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">2169</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">2165</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestActionScheduler</name> <block>{
     <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getRequestEntity</name></name><argument_list>(<argument><expr><call><name>anyLong</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>request</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getCommandsInProgressCount</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><call><name><name>stages</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getStagesInProgress</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>stages</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getFirstStageInProgressPerRequest</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>stages</name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>doAnswer</name><argument_list>(<argument><expr><operator>new</operator> <class><super><name><name>Answer</name><argument_list type="generic">&lt;<argument><name>Void</name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{
       <function><annotation>@<name>Override</name></annotation>
       <type><specifier>public</specifier> <name>Void</name></type> <name>answer</name><parameter_list>(<parameter><decl><type><name>InvocationOnMock</name></type> <name>invocation</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Throwable</name></expr></argument></throws> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">2259</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">2255</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestActionScheduler</name> <block>{
     <expr><name>long</name> <name>requestId</name> <operator>=</operator> <literal type="number">1</literal></expr>;
     <expr><name>final</name> <name><name>List</name><argument_list type="generic">&lt;<argument><name>Stage</name></argument>&gt;</argument_list></name> <name>allStages</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
     <expr><name>final</name> <name><name>List</name><argument_list type="generic">&lt;<argument><name>Stage</name></argument>&gt;</argument_list></name> <name>stagesInProgress</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
    <expr><name>final</name> <name><name>List</name><argument_list type="generic">&lt;<argument><name>Stage</name></argument>&gt;</argument_list></name> <name>firstStageInProgress</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
     <expr><name>final</name> <name><name>List</name><argument_list type="generic">&lt;<argument><name>HostRoleCommand</name></argument>&gt;</argument_list></name> <name>tasksInProgress</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
     <expr><name>final</name> <name><name>List</name><argument_list type="generic">&lt;<argument><name>HostRoleCommandEntity</name></argument>&gt;</argument_list></name> <name>hrcEntitiesInProgress</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
 
@@ <expr><operator>-</operator><literal type="number">2279</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">2276</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestActionScheduler</name> <block>{
         <expr><name><name>Service</name><operator>.</operator><name>Type</name><operator>.</operator><name>HDFS</name></name></expr>, <expr><name>namenodeCmdTaskId</name></expr>, <expr><literal type="number">2</literal></expr>, <expr><operator>(</operator><name>int</name><operator>)</operator> <name>requestId</name></expr></block></expr></block></expr></expr_stmt></block_content></block></function></block></class></expr></argument>)</argument_list></call></expr>;
 
     <expr><call><name><name>tasksInProgress</name><operator>.</operator><name>addAll</name></name><argument_list>(<argument><expr><call><name><name>stageWithTask</name><operator>.</operator><name>getOrderedHostRoleCommands</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>firstStageInProgress</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>stageWithTask</name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>stagesInProgress</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>stageWithTask</name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>allStages</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>stageWithTask</name></expr></argument>)</argument_list></call></expr>;
 
@@ <expr><operator>-</operator><literal type="number">2319</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">2317</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestActionScheduler</name> <block>{
     <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getRequestEntity</name></name><argument_list>(<argument><expr><call><name>anyLong</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>request</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getCommandsInProgressCount</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><call><name><name>stagesInProgress</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getStagesInProgress</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>stagesInProgress</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getFirstStageInProgressPerRequest</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>stagesInProgress</name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getStagesInProgressForRequest</name></name><argument_list>(<argument><expr><name>requestId</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>stagesInProgress</name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getAllStages</name></name><argument_list>(<argument><expr><call><name>anyLong</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>allStages</name></expr></argument>)</argument_list></call></expr>;
 
@@ <expr><operator>-</operator><literal type="number">2458</literal></expr>,<expr><literal type="number">26</literal> <operator>+</operator><literal type="number">2456</literal></expr>,<expr><literal type="number">34</literal> @@ <specifier>public</specifier> class <name>TestActionScheduler</name> <block>{
     <expr><name>long</name> <name>requestId2</name> <operator>=</operator> <literal type="number">2</literal></expr>;
     <expr><name>long</name> <name>requestId3</name> <operator>=</operator> <literal type="number">3</literal></expr>;
 
    <expr><name>final</name> <name><name>List</name><argument_list type="generic">&lt;<argument><name>Stage</name></argument>&gt;</argument_list></name> <name>firstStageInProgressByRequest</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
     <expr><name>final</name> <name><name>List</name><argument_list type="generic">&lt;<argument><name>Stage</name></argument>&gt;</argument_list></name> <name>stagesInProgress</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
     <expr><name>int</name> <name>namenodeCmdTaskId</name> <operator>=</operator> <literal type="number">1</literal></expr>;
    <expr><call><name><name>stagesInProgress</name><operator>.</operator><name>add</name></name><argument_list>(
            <argument><expr><call><name>getStageWithSingleTask</name><argument_list>(
                    <argument><expr><name>hostname1</name></expr></argument>, <argument><expr><literal type="string">"cluster1"</literal></expr></argument>, <argument><expr><name><name>Role</name><operator>.</operator><name>NAMENODE</name></name></expr></argument>, <argument><expr><name><name>RoleCommand</name><operator>.</operator><name>START</name></name></expr></argument>,
                    <argument><expr><name><name>Service</name><operator>.</operator><name>Type</name><operator>.</operator><name>HDFS</name></name></expr></argument>, <argument><expr><name>namenodeCmdTaskId</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator> <name>requestId1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>stagesInProgress</name><operator>.</operator><name>add</name></name><argument_list>(
            <argument><expr><call><name>getStageWithSingleTask</name><argument_list>(
                    <argument><expr><name>hostname1</name></expr></argument>, <argument><expr><literal type="string">"cluster1"</literal></expr></argument>, <argument><expr><name><name>Role</name><operator>.</operator><name>DATANODE</name></name></expr></argument>, <argument><expr><name><name>RoleCommand</name><operator>.</operator><name>START</name></name></expr></argument>,
                    <argument><expr><name><name>Service</name><operator>.</operator><name>Type</name><operator>.</operator><name>HDFS</name></name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator> <name>requestId1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>stagesInProgress</name><operator>.</operator><name>add</name></name><argument_list>(
            <argument><expr><call><name>getStageWithSingleTask</name><argument_list>(
                    <argument><expr><name>hostname2</name></expr></argument>, <argument><expr><literal type="string">"cluster1"</literal></expr></argument>, <argument><expr><name><name>Role</name><operator>.</operator><name>DATANODE</name></name></expr></argument>, <argument><expr><name><name>RoleCommand</name><operator>.</operator><name>STOP</name></name></expr></argument>, <comment type="line">//Exclusive</comment>
                    <argument><expr><name><name>Service</name><operator>.</operator><name>Type</name><operator>.</operator><name>HDFS</name></name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator> <name>requestId2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
    <expr><call><name><name>stagesInProgress</name><operator>.</operator><name>add</name></name><argument_list>(
            <argument><expr><call><name>getStageWithSingleTask</name><argument_list>(
                    <argument><expr><name>hostname3</name></expr></argument>, <argument><expr><literal type="string">"cluster1"</literal></expr></argument>, <argument><expr><name><name>Role</name><operator>.</operator><name>DATANODE</name></name></expr></argument>, <argument><expr><name><name>RoleCommand</name><operator>.</operator><name>START</name></name></expr></argument>,
                    <argument><expr><name><name>Service</name><operator>.</operator><name>Type</name><operator>.</operator><name>HDFS</name></name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator> <name>requestId3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><name>Stage</name> <name>request1Stage1</name> <operator>=</operator> <call><name>getStageWithSingleTask</name><argument_list>(<argument><expr><name>hostname1</name></expr></argument>, <argument><expr><literal type="string">"cluster1"</literal></expr></argument>, <argument><expr><name><name>Role</name><operator>.</operator><name>NAMENODE</name></name></expr></argument>,
        <argument><expr><name><name>RoleCommand</name><operator>.</operator><name>START</name></name></expr></argument>,
        <argument><expr><name><name>Service</name><operator>.</operator><name>Type</name><operator>.</operator><name>HDFS</name></name></expr></argument>, <argument><expr><name>namenodeCmdTaskId</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator> <name>requestId1</name></expr></argument>)</argument_list></call></expr>;

    <expr><name>Stage</name> <name>request1Stage2</name> <operator>=</operator> <call><name>getStageWithSingleTask</name><argument_list>(<argument><expr><name>hostname1</name></expr></argument>, <argument><expr><literal type="string">"cluster1"</literal></expr></argument>, <argument><expr><name><name>Role</name><operator>.</operator><name>DATANODE</name></name></expr></argument>,
        <argument><expr><name><name>RoleCommand</name><operator>.</operator><name>START</name></name></expr></argument>,
        <argument><expr><name><name>Service</name><operator>.</operator><name>Type</name><operator>.</operator><name>HDFS</name></name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator> <name>requestId1</name></expr></argument>)</argument_list></call></expr>;

    <expr><name>Stage</name> <name>request2Stage1</name> <operator>=</operator> <call><name>getStageWithSingleTask</name><argument_list>(<argument><expr><name>hostname2</name></expr></argument>, <argument><expr><literal type="string">"cluster1"</literal></expr></argument>, <argument><expr><name><name>Role</name><operator>.</operator><name>DATANODE</name></name></expr></argument>,
        <argument><expr><name><name>RoleCommand</name><operator>.</operator><name>STOP</name></name></expr></argument>, <comment type="line">// Exclusive</comment>
        <argument><expr><name><name>Service</name><operator>.</operator><name>Type</name><operator>.</operator><name>HDFS</name></name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator> <name>requestId2</name></expr></argument>)</argument_list></call></expr>;

    <expr><name>Stage</name> <name>request3Stage1</name> <operator>=</operator> <call><name>getStageWithSingleTask</name><argument_list>(<argument><expr><name>hostname3</name></expr></argument>, <argument><expr><literal type="string">"cluster1"</literal></expr></argument>, <argument><expr><name><name>Role</name><operator>.</operator><name>DATANODE</name></name></expr></argument>,
        <argument><expr><name><name>RoleCommand</name><operator>.</operator><name>START</name></name></expr></argument>,
        <argument><expr><name><name>Service</name><operator>.</operator><name>Type</name><operator>.</operator><name>HDFS</name></name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator> <name>requestId3</name></expr></argument>)</argument_list></call></expr>;
 
    <expr><call><name><name>firstStageInProgressByRequest</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>request1Stage1</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>firstStageInProgressByRequest</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>request2Stage1</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>firstStageInProgressByRequest</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>request3Stage1</name></expr></argument>)</argument_list></call></expr>;

    <expr><call><name><name>stagesInProgress</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>request1Stage1</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>stagesInProgress</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>request1Stage2</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>stagesInProgress</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>request2Stage1</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>stagesInProgress</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>request3Stage1</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><name>Host</name> <name>host1</name> <operator>=</operator> <call><name>mock</name><argument_list>(<argument><expr><name><name>Host</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>fsm</name><operator>.</operator><name>getHost</name></name><argument_list>(<argument><expr><call><name>anyString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>host1</name></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">2498</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">2504</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestActionScheduler</name> <block>{
     <expr><name>HostRoleCommandDAO</name> <name>hostRoleCommandDAOMock</name> <operator>=</operator> <call><name>mock</name><argument_list>(<argument><expr><name><name>HostRoleCommandDAO</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>Mockito</name><operator>.</operator><name>doNothing</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>when</name><argument_list>(<argument><expr><name>hostRoleCommandDAOMock</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>publishTaskCreateEvent</name><argument_list>(<argument><expr><call><name>anyListOf</name><argument_list>(<argument><expr><name><name>HostRoleCommand</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getCommandsInProgressCount</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><call><name><name>stagesInProgress</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getStagesInProgress</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>stagesInProgress</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getFirstStageInProgressPerRequest</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>firstStageInProgressByRequest</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>HostRoleCommand</name></argument>&gt;</argument_list></name> <name>requestTasks</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
     <for>for <control>(<init><decl><type><name>Stage</name></type> <name>stage</name> <range>: <expr><name>stagesInProgress</name></expr></range></decl></init>)</control> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">2585</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">2591</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> class <name>TestActionScheduler</name> <block>{
     <expr><call><name><name>Assert</name><operator>.</operator><name>assertFalse</name></name><argument_list>(<argument><expr><call><name><name>startedRequests</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><name>requestId3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
     <expr><call><name><name>stagesInProgress</name><operator>.</operator><name>remove</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>firstStageInProgressByRequest</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;
    <expr><call><name><name>firstStageInProgressByRequest</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>request1Stage2</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>firstStageInProgressByRequest</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>request2Stage1</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>firstStageInProgressByRequest</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>request3Stage1</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><call><name><name>scheduler</name><operator>.</operator><name>doWork</name></name><argument_list>()</argument_list></call></expr>;
 
@@ <expr><operator>-</operator><literal type="number">2595</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">2605</literal></expr>,<expr><literal type="number">9</literal> @@ <specifier>public</specifier> class <name>TestActionScheduler</name> <block>{
     <comment type="line">// Execution of request 2</comment>
 
     <expr><call><name><name>stagesInProgress</name><operator>.</operator><name>remove</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>firstStageInProgressByRequest</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;
    <expr><call><name><name>firstStageInProgressByRequest</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>request2Stage1</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>firstStageInProgressByRequest</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>request3Stage1</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><call><name><name>scheduler</name><operator>.</operator><name>doWork</name></name><argument_list>()</argument_list></call></expr>;
 
@@ <expr><operator>-</operator><literal type="number">2605</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">2618</literal></expr>,<expr><literal type="number">8</literal> @@ <specifier>public</specifier> class <name>TestActionScheduler</name> <block>{
     <comment type="line">// Execution of request 3</comment>
 
     <expr><call><name><name>stagesInProgress</name><operator>.</operator><name>remove</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>firstStageInProgressByRequest</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;
    <expr><call><name><name>firstStageInProgressByRequest</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>request3Stage1</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><call><name><name>scheduler</name><operator>.</operator><name>doWork</name></name><argument_list>()</argument_list></call></expr>;
 
@@ <expr><operator>-</operator><literal type="number">2715</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">2730</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestActionScheduler</name> <block>{
     <expr><name>Stage</name> <name>stage</name> <operator>=</operator> <literal type="null">null</literal></expr>;
     <expr><name>Stage</name> <name>stage2</name> <operator>=</operator> <literal type="null">null</literal></expr>;
     <expr><name>final</name> <name><name>List</name><argument_list type="generic">&lt;<argument><name>Stage</name></argument>&gt;</argument_list></name> <name>stages</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
    <expr><name>final</name> <name><name>List</name><argument_list type="generic">&lt;<argument><name>Stage</name></argument>&gt;</argument_list></name> <name>firstStageInProgress</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
     <expr><call><name><name>stages</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>stage</name> <operator>=</operator> <call><name>getStageWithSingleTask</name><argument_list>(<argument><expr><name>hostname1</name></expr></argument>, <argument><expr><literal type="string">"cluster1"</literal></expr></argument>, <argument><expr><name><name>Role</name><operator>.</operator><name>NAMENODE</name></name></expr></argument>,
         <argument><expr><name><name>RoleCommand</name><operator>.</operator><name>STOP</name></name></expr></argument>, <argument><expr><name><name>Service</name><operator>.</operator><name>Type</name><operator>.</operator><name>HDFS</name></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
@@ <expr><operator>-</operator><literal type="number">2735</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">2751</literal></expr>,<expr><literal type="number">9</literal> @@ <specifier>public</specifier> class <name>TestActionScheduler</name> <block>{
     <expr><name>HostRoleCommand</name> <name>command</name> <operator>=</operator> <call><name><name>stage</name><operator>.</operator><name>getOrderedHostRoleCommands</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>iterator</name><argument_list>()</argument_list></call><operator>.</operator><call><name>next</name><argument_list>()</argument_list></call></expr>;
     <expr><call><name><name>command</name><operator>.</operator><name>setStatus</name></name><argument_list>(<argument><expr><name><name>HostRoleStatus</name><operator>.</operator><name>FAILED</name></name></expr></argument>)</argument_list></call></expr>;
 
    <comment type="line">// still in progress even though 1 task has been failed</comment>
    <expr><call><name><name>firstStageInProgress</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>stage</name></expr></argument>)</argument_list></call></expr>;

     <expr><name>ActionDBAccessor</name> <name>db</name> <operator>=</operator> <call><name>mock</name><argument_list>(<argument><expr><name><name>ActionDBAccessor</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
     <expr><name>HostRoleCommandDAO</name> <name>hostRoleCommandDAOMock</name> <operator>=</operator> <call><name>mock</name><argument_list>(<argument><expr><name><name>HostRoleCommandDAO</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>Mockito</name><operator>.</operator><name>doNothing</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>when</name><argument_list>(<argument><expr><name>hostRoleCommandDAOMock</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>publishTaskCreateEvent</name><argument_list>(<argument><expr><call><name>anyListOf</name><argument_list>(<argument><expr><name><name>HostRoleCommand</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">2743</literal></expr>,<expr><literal type="number">8</literal> <operator>+</operator><literal type="number">2762</literal></expr>,<expr><literal type="number">8</literal> @@ <specifier>public</specifier> class <name>TestActionScheduler</name> <block>{
     <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>request</name><operator>.</operator><name>isExclusive</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getRequestEntity</name></name><argument_list>(<argument><expr><call><name>anyLong</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>request</name></expr></argument>)</argument_list></call></expr>;
 
    <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getCommandsInProgressCount</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><call><name><name>stages</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getStagesInProgress</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>stages</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getCommandsInProgressCount</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><call><name><name>firstStageInProgress</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getFirstStageInProgressPerRequest</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>firstStageInProgress</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><call><name>doAnswer</name><argument_list>(<argument><expr><operator>new</operator> <class><super><name><name>Answer</name><argument_list type="generic">&lt;<argument><name>Void</name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{
       <annotation>@<name>Override</name></annotation>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>dao</name><operator>/</operator><name><name>RequestDAOTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>dao</name><operator>/</operator><name><name>RequestDAOTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">9b62671b5a</literal><operator>..</operator><literal type="number">17cebc3a29</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>dao</name><operator>/</operator><name><name>RequestDAOTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>orm</name><operator>/</operator><name>dao</name><operator>/</operator><name><name>RequestDAOTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">42</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">42</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>RequestEntity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>ResourceEntity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>ResourceTypeEntity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>StageEntity</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>StageEntityPK</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>security</name><operator>.</operator><name>authorization</name><operator>.</operator><name>ResourceType</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>After</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">124</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">125</literal></expr><operator>,</operator><expr><literal type="number">25</literal> @@ <specifier>public</specifier> class <name>RequestDAOTest</name> <block>{
     <expr><call><name><name>group</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="number">4L</literal></expr></argument>)</argument_list></call></expr>;
 
     <comment type="line">// !!! accepted</comment>
    <expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>StageEntity</name></argument>&gt;</argument_list></name> <name>stages</name> <operator>=</operator> <call><name><name>stageDAO</name><operator>.</operator><name>findByStageIds</name></name><argument_list>(<argument><expr><call><name><name>requestEntity</name><operator>.</operator><name>getRequestId</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>group</name></expr></argument>)</argument_list></call></expr>;
    <expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>StageEntity</name></argument>&gt;</argument_list></name> <name>stages</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
    <expr><name>StageEntityPK</name> <name>primaryKey</name> <operator>=</operator> <operator>new</operator> <call><name>StageEntityPK</name><argument_list>()</argument_list></call></expr>;
    <expr><call><name><name>primaryKey</name><operator>.</operator><name>setRequestId</name></name><argument_list>(<argument><expr><call><name><name>requestEntity</name><operator>.</operator><name>getRequestId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>primaryKey</name><operator>.</operator><name>setStageId</name></name><argument_list>(<argument><expr><literal type="number">2L</literal></expr></argument>)</argument_list></call></expr>;

    <expr><name>StageEntity</name> <name>stage</name> <operator>=</operator> <call><name><name>stageDAO</name><operator>.</operator><name>findByPK</name></name><argument_list>(<argument><expr><name>primaryKey</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>Assert</name><operator>.</operator><name>assertNotNull</name></name><argument_list>(<argument><expr><name>stage</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>stages</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>stage</name></expr></argument>)</argument_list></call></expr>;

    <expr><call><name><name>primaryKey</name><operator>.</operator><name>setStageId</name></name><argument_list>(<argument><expr><literal type="number">3L</literal></expr></argument>)</argument_list></call></expr>;
    <expr><name>stage</name> <operator>=</operator> <call><name><name>stageDAO</name><operator>.</operator><name>findByPK</name></name><argument_list>(<argument><expr><name>primaryKey</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>Assert</name><operator>.</operator><name>assertNotNull</name></name><argument_list>(<argument><expr><name>stage</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>stages</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>stage</name></expr></argument>)</argument_list></call></expr>;

    <expr><call><name><name>primaryKey</name><operator>.</operator><name>setStageId</name></name><argument_list>(<argument><expr><literal type="number">4L</literal></expr></argument>)</argument_list></call></expr>;
    <expr><name>stage</name> <operator>=</operator> <call><name><name>stageDAO</name><operator>.</operator><name>findByPK</name></name><argument_list>(<argument><expr><name>primaryKey</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>Assert</name><operator>.</operator><name>assertNotNull</name></name><argument_list>(<argument><expr><name>stage</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>stages</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>stage</name></expr></argument>)</argument_list></call></expr>;

     <expr><name>CalculatedStatus</name> <name>calc3</name> <operator>=</operator> <call><name><name>CalculatedStatus</name><operator>.</operator><name>statusFromStageEntities</name></name><argument_list>(<argument><expr><name>stages</name></expr></argument>)</argument_list></call></expr>;
 
     <comment type="line">// !!! aggregated</comment>
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>serveraction</name><operator>/</operator><name><name>ServerActionExecutorTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>serveraction</name><operator>/</operator><name><name>ServerActionExecutorTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">44d5b63836</literal><operator>..</operator><literal type="number">2feef41edf</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>serveraction</name><operator>/</operator><name><name>ServerActionExecutorTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>serveraction</name><operator>/</operator><name><name>ServerActionExecutorTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">268</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">268</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>ServerActionExecutorTest</name> <block>{
   <expr><specifier>private</specifier> <name>ActionDBAccessor</name> <call><name>createMockActionDBAccessor</name><argument_list>(<argument><expr><name>final</name> <name>Request</name> <name>request</name></expr></argument>, <argument><expr><name>final</name> <name><name>List</name><argument_list type="generic">&lt;<argument><name>Stage</name></argument>&gt;</argument_list></name> <name>stages</name></expr></argument>)</argument_list></call> <block>{
     <expr><name>ActionDBAccessor</name> <name>db</name> <operator>=</operator> <call><name>mock</name><argument_list>(<argument><expr><name><name>ActionDBAccessor</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
 
    <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getStagesInProgress</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>stages</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>when</name><argument_list>(<argument><expr><call><name><name>db</name><operator>.</operator><name>getFirstStageInProgressPerRequest</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>thenReturn</name><argument_list>(<argument><expr><name>stages</name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>doAnswer</name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>Answer</name></super><argument_list>()</argument_list> <block>{
       <function><annotation>@<name>Override</name></annotation>
       <type><specifier>public</specifier> <name>Object</name></type> <name>answer</name><parameter_list>(<parameter><decl><type><name>InvocationOnMock</name></type> <name>invocation</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Throwable</name></expr></argument></throws> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name>services</name><operator>/</operator><name><name>RetryUpgradeActionServiceTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name>services</name><operator>/</operator><name><name>RetryUpgradeActionServiceTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>e2ce6e785b</name><operator>..</operator><literal type="number">2c0b50753d</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name>services</name><operator>/</operator><name><name>RetryUpgradeActionServiceTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>ambari</name><operator>-</operator><name>server</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>ambari</name><operator>/</operator><name>server</name><operator>/</operator><name>state</name><operator>/</operator><name>services</name><operator>/</operator><name><name>RetryUpgradeActionServiceTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>services</name></name>;</package>
 <import>import <name><name>java</name><operator>.</operator><name>sql</name><operator>.</operator><name>SQLException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>AmbariException</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">42</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">41</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>RepositoryVersionEntity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>RequestEntity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>StackEntity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>StageEntity</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>StageEntityPK</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>orm</name><operator>.</operator><name>entities</name><operator>.</operator><name>UpgradeEntity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>Cluster</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>ambari</name><operator>.</operator><name>server</name><operator>.</operator><name>state</name><operator>.</operator><name>Clusters</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">148</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">148</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> class <name>RetryUpgradeActionServiceTest</name> <block>{
     }</block>
 
     <comment type="line">// Case 4: Cluster with an active upgrade that contains a failed task in HOLDING_FAILED that does NOT meet conditions to be retried.</comment>
    <name><name>List</name><argument_list type="generic">&lt;<argument><name>StageEntity</name></argument>&gt;</argument_list></name> <name>stages</name> <operator>=</operator> <call><name><name>stageDAO</name><operator>.</operator><name>findByStageIds</name></name><argument_list>(<argument><expr><name>upgradeRequestId</name></expr></argument>, <argument><expr><operator>new</operator> <class><super><name><name>HashSet</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list><block>{<block>{<block_content> <constructor_decl><name>add</name><parameter_list>(<parameter><decl><type><name>stageId</name></type></decl></parameter>)</parameter_list>;</constructor_decl> <expr_stmt/>}</block_content>}</block>)</block><empty_stmt>;</empty_stmt></class></expr></argument></argument_list></call></expr></expr_stmt>
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertTrue</name></name><argument_list>(<argument><expr><operator>!</operator><call><name><name>stages</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call> <operator>&amp;&amp;</operator> <call><name><name>stages</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>StageEntity</name></type> <name>stageEntity</name> <init>= <expr><call><name><name>stages</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>StageEntityPK</name></type> <name>primaryKey</name> <init>= <expr><operator>new</operator> <call><name>StageEntityPK</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>primaryKey</name><operator>.</operator><name>setRequestId</name></name><argument_list>(<argument><expr><name>upgradeRequestId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>primaryKey</name><operator>.</operator><name>setStageId</name></name><argument_list>(<argument><expr><name>stageId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>StageEntity</name></type> <name>stageEntity</name> <init>= <expr><call><name><name>stageDAO</name><operator>.</operator><name>findByPK</name></name><argument_list>(<argument><expr><name>primaryKey</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <decl_stmt><decl><type><name>HostRoleCommandEntity</name></type> <name>hrc2</name> <init>= <expr><operator>new</operator> <call><name>HostRoleCommandEntity</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>hrc2</name><operator>.</operator><name>setStage</name></name><argument_list>(<argument><expr><name>stageEntity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">202</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">204</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>RetryUpgradeActionServiceTest</name> <block>{
 
     <comment type="line">// Ensure that task 2 transitioned from HOLDING_TIMEDOUT to PENDING</comment>
     <expr><call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><name><name>HostRoleStatus</name><operator>.</operator><name>PENDING</name></name></expr></argument>, <argument><expr><call><name><name>hostRoleCommandDAO</name><operator>.</operator><name>findByPK</name></name><argument_list>(<argument><expr><call><name><name>hrc2</name><operator>.</operator><name>getTaskId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getStatus</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    

     <comment type="line">// Case 7: Cluster with an active upgrade that contains a failed task in HOLDING_FAILED that was already retried and has now expired.</comment>
     <expr><name>now</name> <operator>=</operator> <call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call></expr>;
     <expr><call><name><name>hrc2</name><operator>.</operator><name>setOriginalStartTime</name></name><argument_list>(<argument><expr><name>now</name> <operator>-</operator> <operator>(</operator><name>timeoutMins</name> <operator>*</operator> <literal type="number">60000</literal><operator>)</operator> <operator>-</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;
<expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></block></expr></expr_stmt></block_content></block></function></block></class></expr></argument></argument_list></call></expr></block></expr></block></expr></block></expr></expr_stmt></block></class></expr></argument></argument_list></call></expr></block></expr></block></expr></block></expr></block></expr></block></expr></block></expr></expr_stmt></block_content></block></for></block></expr></block></expr></block></expr></block></expr></block></expr></argument></argument_list></call></expr></block></expr></block></expr></block></expr></expr_stmt></block_content></block></function></block></class></expr></argument></argument_list></call></expr></block></expr></block></expr></block></expr></expr_stmt></block_content></block></function></block></class></expr></argument></argument_list></call></expr></block></expr></block></expr></block></expr></block></expr></block></expr></block></expr></block></expr></block></expr></block></expr></expr_stmt></block_content></block></for></block></expr></expr_stmt>

</unit>
