<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/lucene/e79fcaec7c.java"><expr_stmt><expr><name>From</name> <name>e79fcaec7cd8e8708110b89bcdc388a42e2f5353</name> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Simon</name> <name><name>Willnauer</name> <argument_list type="generic">&lt;<argument><name>simonw</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Wed</name></expr><operator>,</operator> <expr><literal type="number">12</literal> <name>Jan</name> <literal type="number">2011</literal> <literal type="number">08</literal><operator>:</operator><literal type="number">22</literal><operator>:</operator><literal type="number">12</literal> <operator>+</operator><literal type="number">0000</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>LUCENE</name><operator>-</operator><literal type="number">2831</literal><operator>:</operator> <name>Cut</name> <name>over</name> <name>Collector</name><operator>#</operator><name>setNextReader</name> <operator>&amp;</operator>
 <name>FieldComparator</name><operator>#</operator><name>setNextReader</name> <name>to</name> <name>AtomicReaderContext</name>

<name>git</name><operator>-</operator><name>svn</name><operator>-</operator><name>id</name><operator>:</operator> <name>https</name><operator>:</operator><comment type="line">//svn.apache.org/repos/asf/lucene/dev/trunk@1058019 13f79535-47bb-0310-9956-ffa450edef68</comment>
<operator>--</operator>
 <name>lucene</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>                            <operator>|</operator>  <literal type="number">8</literal> <operator>++</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>demo</name><operator>/</operator><name><name>SearchFiles</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">5</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>highlight</name><operator>/</operator><name><name>HighlighterPhraseTest</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">5</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>store</name><operator>/</operator><name>instantiated</name><operator>/</operator><name><name>TestRealTime</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucli</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>lucli</name><operator>/</operator><name><name>LuceneMethods</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">3</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name>memory</name><operator>/</operator><name><name>MemoryIndex</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">3</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestFieldNormModifier</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">7</literal> <operator>++</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>misc</name><operator>/</operator><name><name>TestLengthNormModifier</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">5</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>surround</name><operator>/</operator><name>query</name><operator>/</operator><name><name>BooleanQueryTst</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>tier</name><operator>/</operator><name><name>DistanceFieldComparatorSource</name><operator>.</operator><name>java</name></name>   <operator>|</operator> <literal type="number">20</literal> <operator>++</operator><operator>+</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>swing</name><operator>/</operator><name>models</name><operator>/</operator><name><name>ListSearcher</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">3</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>wordnet</name><operator>/</operator><name><name>SynExpand</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">5</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>wordnet</name><operator>/</operator><name><name>SynLookup</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">7</literal> <operator>++</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>BooleanScorer</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>Collector</name><operator>.</operator><name>java</name></name>   <operator>|</operator> <literal type="number">22</literal> <operator>++</operator><operator>+</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>ConstantScoreQuery</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>FieldComparator</name><operator>.</operator><name>java</name></name> <operator>|</operator> <literal type="number">58</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>IndexSearcher</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>MultiCollector</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>search</name><operator>/</operator><name><name>PositiveScoresOnlyCollector</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TimeLimitingCollector</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">8</literal> <operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TopFieldCollector</name><operator>.</operator><name>java</name></name>      <operator>|</operator> <literal type="number">14</literal> <operator>++</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TopScoreDocCollector</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TotalHitCountCollector</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestOmitTf</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">3</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>CheckHits</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">9</literal> <operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>JustCompileSearch</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>MultiCollectorTest</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">8</literal> <operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>QueryUtils</name><operator>.</operator><name>java</name></name>  <operator>|</operator> <literal type="number">14</literal> <operator>++</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestConstantScoreQuery</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">3</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestDocBoost</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">5</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>search</name><operator>/</operator><name><name>TestElevationComparator</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  <literal type="number">5</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>search</name><operator>/</operator><name><name>TestMultiTermConstantScore</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">5</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>TestScoreCachingWrappingScorer</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestScorerPerf</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">5</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSetNorm</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">5</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSimilarity</name><operator>.</operator><name>java</name></name>  <operator>|</operator> <literal type="number">11</literal> <operator>++</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSort</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSubScorerFreqs</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">5</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestTermScorer</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>search</name><operator>/</operator><name><name>TestTimeLimitingCollector</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">5</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestTopDocsCollector</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">5</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>QueryComponent</name><operator>.</operator><name>java</name></name>     <operator>|</operator> <literal type="number">31</literal> <operator>++</operator><operator>++</operator><operator>+</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>component</name><operator>/</operator><name><name>QueryElevationComponent</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">5</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>TermsComponent</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">5</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>RandomSortField</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">7</literal> <operator>++</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>DocSetHitCollector</name><operator>.</operator><name>java</name></name>       <operator>|</operator> <literal type="number">12</literal> <operator>++</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>Grouping</name><operator>.</operator><name>java</name></name> <operator>|</operator> <literal type="number">31</literal> <operator>++</operator><operator>++</operator><operator>+</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>MissingStringLastComparatorSource</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">9</literal> <operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SolrIndexSearcher</name><operator>.</operator><name>java</name></name> <operator>|</operator> <literal type="number">39</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ValueSource</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>update</name><operator>/</operator><name><name>UpdateHandler</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestDocSet</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">5</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestIndexSearcher</name><operator>.</operator><name>java</name></name> <operator>|</operator> <literal type="number">47</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSort</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">7</literal> <operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>update</name><operator>/</operator><name><name>DirectUpdateHandlerTest</name><operator>.</operator><name>java</name></name>  <operator>|</operator> <literal type="number">11</literal> <operator>+</operator><operator>--</operator><operator>-</operator>
 <literal type="number">56</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">278</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">260</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
<name>index</name> <literal type="number">7ca14de759b</literal><operator>..</operator><literal type="number">888ed11b991</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
@@ <operator>-</operator><literal type="number">128</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">128</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <name>Changes</name> <name>in</name> <name>backwards</name> <name>compatibility</name> <name>policy</name>
   <name>ParallelMultiSearcher</name> <name>into</name> <name>IndexSearcher</name> <name>as</name> <name>an</name> <name>optional</name>
   <name>ExecutorServiced</name> <name>passed</name> <name>to</name> <name>its</name> <name><name>ctor</name><operator>.</operator></name>  (<name>Mike</name> <name>McCandless</name></expr></expr_stmt>)
 
<expr_stmt><expr><operator>*</operator> <name>LUCENE</name><operator>-</operator><literal type="number">2837</literal><operator>:</operator> <name>Changed</name> <name>Weight</name><operator>#</operator><name>scorer</name></expr><operator>,</operator> <expr><name>Weight</name><operator>#</operator><name>explain</name> <operator>&amp;</operator> <name>Filter</name><operator>#</operator><name>getDocIdSet</name> <name>to</name>
  <name>operate</name> <name>on</name> <name>a</name> <name>ReaderContext</name> <name>instead</name> <name>of</name> <name>directly</name> <name>on</name> <name>IndexReader</name> <name>to</name> <name>enable</name>
<operator>*</operator> <name>LUCENE</name><operator>-</operator><literal type="number">2831</literal><operator>:</operator> <name>Changed</name> <name>Weight</name><operator>#</operator><name>scorer</name></expr><operator>,</operator> <expr><name>Weight</name><operator>#</operator><name>explain</name> <operator>&amp;</operator> <name>Filter</name><operator>#</operator><name>getDocIdSet</name> <name>to</name>
  <name>operate</name> <name>on</name> <name>a</name> <name>AtomicReaderContext</name> <name>instead</name> <name>of</name> <name>directly</name> <name>on</name> <name>IndexReader</name> <name>to</name> <name>enable</name>
   <name>searches</name> <name>to</name> <name>be</name> <name>aware</name> <name>of</name> <name>IndexSearcher</name><literal type="char">'s context. (Simon Willnauer)
   
 * LUCENE-2839: Scorer#score(Collector,int,int) is now public because it is
@@ -188,6 +188,10 @@ API Changes
 
 * LUCENE-2778: RAMDirectory now exposes newRAMFile() which allows to override
   and return a different RAMFile implementation. (Shai Erera)
  
* LUCENE-2831: Weight#scorer, Weight#explain, Filter#getDocIdSet,
  Collector#setNextReader &amp; FieldComparator#setNextReader now expect an
  AtomicReaderContext instead of an IndexReader. (Simon Willnauer)
 
 New features
 
diff --git a/lucene/contrib/demo/src/java/org/apache/lucene/demo/SearchFiles.java b/lucene/contrib/demo/src/java/org/apache/lucene/demo/SearchFiles.java
index 422e23497d7..6a300459995 100644
-- a/lucene/contrib/demo/src/java/org/apache/lucene/demo/SearchFiles.java
++ b/lucene/contrib/demo/src/java/org/apache/lucene/demo/SearchFiles.java
@@ -28,6 +28,7 @@ import org.apache.lucene.analysis.Analyzer;
 import org.apache.lucene.analysis.standard.StandardAnalyzer;
 import org.apache.lucene.document.Document;
 import org.apache.lucene.index.IndexReader;
import org.apache.lucene.index.IndexReader.AtomicReaderContext;
 import org.apache.lucene.queryParser.QueryParser;
 import org.apache.lucene.search.Collector;
 import org.apache.lucene.search.IndexSearcher;
@@ -160,9 +161,9 @@ public class SearchFiles {
       }
 
       @Override
      public void setNextReader(IndexReader reader, int docBase)
      public void setNextReader(AtomicReaderContext context)
           throws IOException {
        this.docBase = docBase;
        this.docBase = context.docBase;
       }
 
       @Override
diff --git a/lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterPhraseTest.java b/lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterPhraseTest.java
index 31752349dd2..1f60e6ea5c5 100644
-- a/lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterPhraseTest.java
++ b/lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterPhraseTest.java
@@ -36,6 +36,7 @@ import org.apache.lucene.index.IndexReader;
 import org.apache.lucene.index.IndexWriter;
 import org.apache.lucene.index.Term;
 import org.apache.lucene.index.TermPositionVector;
import org.apache.lucene.index.IndexReader.AtomicReaderContext;
 import org.apache.lucene.search.Collector;
 import org.apache.lucene.search.IndexSearcher;
 import org.apache.lucene.search.PhraseQuery;
@@ -133,9 +134,9 @@ public class HighlighterPhraseTest extends LuceneTestCase {
           }
 
           @Override
          public void setNextReader(IndexReader indexreader, int i)
          public void setNextReader(AtomicReaderContext context)
               throws IOException {
            this.baseDoc = i;
            this.baseDoc = context.docBase;
           }
 
           @Override
diff --git a/lucene/contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestRealTime.java b/lucene/contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestRealTime.java
index 4e7c59f9e6a..383cd807caf 100644
-- a/lucene/contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestRealTime.java
++ b/lucene/contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestRealTime.java
@@ -20,8 +20,8 @@ import org.apache.lucene.search.TermQuery;
 import org.apache.lucene.search.Scorer;
 import org.apache.lucene.document.Document;
 import org.apache.lucene.document.Field;
import org.apache.lucene.index.IndexReader.AtomicReaderContext;
 import org.apache.lucene.index.Term;
import org.apache.lucene.index.IndexReader;
 import org.apache.lucene.util.LuceneTestCase;
 
 /**
@@ -67,7 +67,7 @@ public class TestRealTime extends LuceneTestCase {
     @Override
     public void setScorer(Scorer scorer) {}
     @Override
    public void setNextReader(IndexReader reader, int docBase) {}
    public void setNextReader(AtomicReaderContext context) {}
     @Override
     public boolean acceptsDocsOutOfOrder() { return true; }
     @Override
diff --git a/lucene/contrib/lucli/src/java/lucli/LuceneMethods.java b/lucene/contrib/lucli/src/java/lucli/LuceneMethods.java
index 9aca8ee3f27..266297b1f3b 100644
-- a/lucene/contrib/lucli/src/java/lucli/LuceneMethods.java
++ b/lucene/contrib/lucli/src/java/lucli/LuceneMethods.java
@@ -41,6 +41,7 @@ import org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute;
 import org.apache.lucene.document.Document;
 import org.apache.lucene.document.Fieldable;
 import org.apache.lucene.index.IndexReader;
import org.apache.lucene.index.IndexReader.AtomicReaderContext;
 import org.apache.lucene.index.IndexWriter;
 import org.apache.lucene.index.IndexWriterConfig;
 import org.apache.lucene.index.Fields;
@@ -232,7 +233,7 @@ class LuceneMethods {
     }
 
     @Override
    public void setNextReader(IndexReader reader, int docBase) {}
    public void setNextReader(AtomicReaderContext context) {}
     @Override
     public boolean acceptsDocsOutOfOrder() {
       return true;
diff --git a/lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.java b/lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.java
index f342c4f640f..07af85cb557 100644
-- a/lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.java
++ b/lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.java
@@ -38,6 +38,7 @@ import org.apache.lucene.document.Document;
 import org.apache.lucene.document.FieldSelector;
 import org.apache.lucene.index.IndexReader;
 import org.apache.lucene.index.Fields;
import org.apache.lucene.index.IndexReader.AtomicReaderContext;
 import org.apache.lucene.index.Terms;
 import org.apache.lucene.index.TermsEnum;
 import org.apache.lucene.index.FieldsEnum;
@@ -443,7 +444,7 @@ public class MemoryIndex implements Serializable {
         }
 
         @Override
        public void setNextReader(IndexReader reader, int docBase) { }
        public void setNextReader(AtomicReaderContext context) { }
       });
       float score = scores[0];
       return score;
diff --git a/lucene/contrib/misc/src/test/org/apache/lucene/index/TestFieldNormModifier.java b/lucene/contrib/misc/src/test/org/apache/lucene/index/TestFieldNormModifier.java
index 8066ea4e399..bdc386cefcd 100644
-- a/lucene/contrib/misc/src/test/org/apache/lucene/index/TestFieldNormModifier.java
++ b/lucene/contrib/misc/src/test/org/apache/lucene/index/TestFieldNormModifier.java
@@ -23,6 +23,7 @@ import java.util.Arrays;
 import org.apache.lucene.analysis.MockAnalyzer;
 import org.apache.lucene.document.Document;
 import org.apache.lucene.document.Field;
import org.apache.lucene.index.IndexReader.AtomicReaderContext;
 import org.apache.lucene.search.Collector;
 import org.apache.lucene.search.DefaultSimilarity;
 import org.apache.lucene.search.IndexSearcher;
@@ -122,7 +123,7 @@ public class TestFieldNormModifier extends LuceneTestCase {
         scores[doc + docBase] = scorer.score();
       }
       @Override
      public void setNextReader(IndexReader reader, int docBase) {
      public void setNextReader(AtomicReaderContext context) {
         this.docBase = docBase;
       }
       @Override
@@ -157,7 +158,7 @@ public class TestFieldNormModifier extends LuceneTestCase {
         scores[doc + docBase] = scorer.score();
       }
       @Override
      public void setNextReader(IndexReader reader, int docBase) {
      public void setNextReader(AtomicReaderContext context) {
         this.docBase = docBase;
       }
       @Override
@@ -209,7 +210,7 @@ public class TestFieldNormModifier extends LuceneTestCase {
         scores[doc + docBase] = scorer.score();
       }
       @Override
      public void setNextReader(IndexReader reader, int docBase) {
      public void setNextReader(AtomicReaderContext context) {
         this.docBase = docBase;
       }
       @Override
diff --git a/lucene/contrib/misc/src/test/org/apache/lucene/misc/TestLengthNormModifier.java b/lucene/contrib/misc/src/test/org/apache/lucene/misc/TestLengthNormModifier.java
index cb424b451d3..7646bd1d531 100644
-- a/lucene/contrib/misc/src/test/org/apache/lucene/misc/TestLengthNormModifier.java
++ b/lucene/contrib/misc/src/test/org/apache/lucene/misc/TestLengthNormModifier.java
@@ -25,6 +25,7 @@ import org.apache.lucene.document.Field;
 import org.apache.lucene.index.FieldInvertState;
 import org.apache.lucene.index.FieldNormModifier;
 import org.apache.lucene.index.IndexReader;
import org.apache.lucene.index.IndexReader.AtomicReaderContext;
 import org.apache.lucene.index.IndexWriter;
 import org.apache.lucene.index.MultiNorms;
 import org.apache.lucene.index.Term;
@@ -139,7 +140,7 @@ public class TestLengthNormModifier extends LuceneTestCase {
       scores[doc + docBase] = scorer.score();
     }
     @Override
    public void setNextReader(IndexReader reader, int docBase) {
    public void setNextReader(AtomicReaderContext context) {
       this.docBase = docBase;
     }
     @Override
@@ -181,7 +182,7 @@ public class TestLengthNormModifier extends LuceneTestCase {
         scores[doc + docBase] = scorer.score();
       }
       @Override
      public void setNextReader(IndexReader reader, int docBase) {
      public void setNextReader(AtomicReaderContext context) {
         this.docBase = docBase;
       }
       @Override
diff --git a/lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/surround/query/BooleanQueryTst.java b/lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/surround/query/BooleanQueryTst.java
index c89127cde9d..325db2637e1 100644
-- a/lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/surround/query/BooleanQueryTst.java
++ b/lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/surround/query/BooleanQueryTst.java
@@ -19,7 +19,7 @@ package org.apache.lucene.queryParser.surround.query;
 
 import java.io.IOException;
 
import org.apache.lucene.index.IndexReader;
import org.apache.lucene.index.IndexReader.AtomicReaderContext;
 import org.apache.lucene.search.IndexSearcher;
 import org.apache.lucene.search.Collector;
 import org.apache.lucene.search.Scorer;
@@ -77,7 +77,7 @@ public class BooleanQueryTst {
     }
 
     @Override
    public void setNextReader(IndexReader reader, int docBase) throws IOException {
    public void setNextReader(AtomicReaderContext context) throws IOException {
       this.docBase = docBase;
     }
     
diff --git a/lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/DistanceFieldComparatorSource.java b/lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/DistanceFieldComparatorSource.java
index 262916a9c68..dec1f88b14c 100644
-- a/lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/DistanceFieldComparatorSource.java
++ b/lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/DistanceFieldComparatorSource.java
@@ -19,7 +19,7 @@ package org.apache.lucene.spatial.tier;
 
 import java.io.IOException;
 
import org.apache.lucene.index.IndexReader;
import org.apache.lucene.index.IndexReader.AtomicReaderContext;
 import org.apache.lucene.search.Filter;
 import org.apache.lucene.search.FieldComparator;
 import org.apache.lucene.search.FieldComparatorSource;
@@ -108,16 +108,14 @@ public class DistanceFieldComparatorSource extends FieldComparatorSource {
 
 		}
 
		@Override
                public FieldComparator setNextReader(IndexReader reader, int docBase)
                  throws IOException {
			
			// each reader in a segmented base
			// has an offset based on the maxDocs of previous readers
			offset = docBase;

                        return this;
		}
    @Override
    public FieldComparator setNextReader(AtomicReaderContext context)
        throws IOException {
      // each reader in a segmented base
      // has an offset based on the maxDocs of previous readers
      offset = context.docBase;
      return this;
    }
 
 		@Override
 		public Comparable&lt;Double&gt; value(int slot) {
diff --git a/lucene/contrib/swing/src/java/org/apache/lucene/swing/models/ListSearcher.java b/lucene/contrib/swing/src/java/org/apache/lucene/swing/models/ListSearcher.java
index 611b063baef..e8d2b7765c0 100644
-- a/lucene/contrib/swing/src/java/org/apache/lucene/swing/models/ListSearcher.java
++ b/lucene/contrib/swing/src/java/org/apache/lucene/swing/models/ListSearcher.java
@@ -32,6 +32,7 @@ import org.apache.lucene.document.Fieldable;
 import org.apache.lucene.index.IndexReader;
 import org.apache.lucene.index.IndexWriter;
 import org.apache.lucene.index.IndexWriterConfig;
import org.apache.lucene.index.IndexReader.AtomicReaderContext;
 import org.apache.lucene.queryParser.MultiFieldQueryParser;
 import org.apache.lucene.search.Collector;
 import org.apache.lucene.search.IndexSearcher;
@@ -192,7 +193,7 @@ public class ListSearcher extends AbstractListModel {
       }
 
       @Override
      public void setNextReader(IndexReader reader, int docBase) {}
      public void setNextReader(AtomicReaderContext context) {}
       @Override
       public boolean acceptsDocsOutOfOrder() {
         return true;
diff --git a/lucene/contrib/wordnet/src/java/org/apache/lucene/wordnet/SynExpand.java b/lucene/contrib/wordnet/src/java/org/apache/lucene/wordnet/SynExpand.java
index 908cfd66eff..646abf73dbd 100755
-- a/lucene/contrib/wordnet/src/java/org/apache/lucene/wordnet/SynExpand.java
++ b/lucene/contrib/wordnet/src/java/org/apache/lucene/wordnet/SynExpand.java
@@ -33,6 +33,7 @@ import org.apache.lucene.analysis.tokenattributes.CharTermAttribute;
 import org.apache.lucene.document.Document;
 import org.apache.lucene.index.IndexReader;
 import org.apache.lucene.index.Term;
import org.apache.lucene.index.IndexReader.AtomicReaderContext;
 import org.apache.lucene.search.BooleanClause;
 import org.apache.lucene.search.BooleanQuery;
 import org.apache.lucene.search.Collector;
@@ -160,9 +161,9 @@ public final class SynExpand {
         }
 
         @Override
        public void setNextReader(IndexReader reader, int docBase)
        public void setNextReader(AtomicReaderContext context)
             throws IOException {
          this.reader = reader;
          this.reader = context.reader;
         }
 
         @Override
diff --git a/lucene/contrib/wordnet/src/java/org/apache/lucene/wordnet/SynLookup.java b/lucene/contrib/wordnet/src/java/org/apache/lucene/wordnet/SynLookup.java
index 066df71ba02..4cc4836cc5b 100644
-- a/lucene/contrib/wordnet/src/java/org/apache/lucene/wordnet/SynLookup.java
++ b/lucene/contrib/wordnet/src/java/org/apache/lucene/wordnet/SynLookup.java
@@ -32,6 +32,7 @@ import org.apache.lucene.analysis.tokenattributes.CharTermAttribute;
 import org.apache.lucene.document.Document;
 import org.apache.lucene.index.IndexReader;
 import org.apache.lucene.index.Term;
import org.apache.lucene.index.IndexReader.AtomicReaderContext;
 import org.apache.lucene.search.BooleanClause;
 import org.apache.lucene.search.BooleanQuery;
 import org.apache.lucene.search.Collector;
@@ -59,7 +60,7 @@ public class SynLookup {
     }
 
     @Override
    public void setNextReader(IndexReader reader, int docBase) {}
    public void setNextReader(AtomicReaderContext context) {}
     @Override
     public boolean acceptsDocsOutOfOrder() {
       return true;
@@ -169,9 +170,9 @@ public class SynLookup {
         }
 
         @Override
        public void setNextReader(IndexReader reader, int docBase)
        public void setNextReader(AtomicReaderContext context)
             throws IOException {
          this.reader = reader;
          this.reader = context.reader;
         }
 
         @Override
diff --git a/lucene/src/java/org/apache/lucene/search/BooleanScorer.java b/lucene/src/java/org/apache/lucene/search/BooleanScorer.java
index 6374e89f98b..7b244b4eb3a 100644
-- a/lucene/src/java/org/apache/lucene/search/BooleanScorer.java
++ b/lucene/src/java/org/apache/lucene/search/BooleanScorer.java
@@ -20,7 +20,7 @@ package org.apache.lucene.search;
 import java.io.IOException;
 import java.util.List;
 
import org.apache.lucene.index.IndexReader;
import org.apache.lucene.index.IndexReader.AtomicReaderContext;
 import org.apache.lucene.search.BooleanClause.Occur;
 
 /* Description from Doug Cutting (excerpted from
@@ -92,7 +92,7 @@ final class BooleanScorer extends Scorer {
     }
     
     @Override
    public void setNextReader(IndexReader reader, int docBase) {
    public void setNextReader(AtomicReaderContext context) {
       // not needed by this implementation
     }
     
diff --git a/lucene/src/java/org/apache/lucene/search/Collector.java b/lucene/src/java/org/apache/lucene/search/Collector.java
index 57d7b061e2d..b64abce0f4b 100644
-- a/lucene/src/java/org/apache/lucene/search/Collector.java
++ b/lucene/src/java/org/apache/lucene/search/Collector.java
@@ -19,7 +19,8 @@ package org.apache.lucene.search;
 
 import java.io.IOException;
 
import org.apache.lucene.index.IndexReader;
import org.apache.lucene.index.IndexReader.AtomicReaderContext;
import org.apache.lucene.index.IndexReader.ReaderContext;
 
 /**
  * &lt;p&gt;Expert: Collectors are primarily meant to be used to
@@ -98,8 +99,8 @@ import org.apache.lucene.index.IndexReader;
  *     bits.set(doc + docBase);
  *   }
  * 
 *   public void setNextReader(IndexReader reader, int docBase) {
 *     this.docBase = docBase;
 *   public void setNextReader(AtomicReaderContext context) {
 *     this.docBase = context.docBase;
  *   }
  * });
  * &lt;/pre&gt;
@@ -143,17 +144,16 @@ public abstract class Collector {
   public abstract void collect(int doc) throws IOException;
 
   /**
   * Called before collecting from each IndexReader. All doc ids in
   * {@link #collect(int)} will correspond to reader.
   * Called before collecting from each {@link AtomicReaderContext}. All doc ids in
   * {@link #collect(int)} will correspond to {@link ReaderContext#reader}.
    * 
   * Add docBase to the current IndexReaders internal document id to re-base ids
   * in {@link #collect(int)}.
   * Add {@link AtomicReaderContext#docBase} to the current  {@link ReaderContext#reader}'</literal><name>s</name>
   <operator>*</operator> <name>internal</name> <name>document</name> <name>id</name> <name>to</name> <name>re</name><operator>-</operator><name>base</name> <name>ids</name> <name>in</name> <block>{@<expr><name>link</name> <operator>#</operator><call><name>collect</name><argument_list>(<argument><expr><name>int</name></expr></argument>)</argument_list></call></expr>}</block><operator>.</operator>
    <operator>*</operator> 
   <operator>*</operator> @<name>param</name> <name>reader</name>
   <operator>*</operator>          <name>next</name> <name>IndexReader</name>
   <operator>*</operator> @<name>param</name> <name>docBase</name>
   <operator>*</operator> @<name>param</name> <name>context</name>
   <operator>*</operator>          <name>next</name> <name>atomic</name> <name>reader</name> <name>context</name>
    <operator>*</operator><operator>/</operator>
  <specifier>public</specifier> <specifier>abstract</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>, <argument><expr><name>int</name> <name>docBase</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws></expr>;</expr_stmt>
  <function_decl><type><specifier>public</specifier> <specifier>abstract</specifier> <name>void</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws>;</function_decl>
 
   <comment type="block" format="javadoc">/**
    * Return &lt;code&gt;true&lt;/code&gt; if this collector does not
diff --git a/lucene/src/java/org/apache/lucene/search/ConstantScoreQuery.java b/lucene/src/java/org/apache/lucene/search/ConstantScoreQuery.java
index c8b8c9da180..dcbb0ecb204 100644
-- a/lucene/src/java/org/apache/lucene/search/ConstantScoreQuery.java
++ b/lucene/src/java/org/apache/lucene/search/ConstantScoreQuery.java
@@ -222,8 +222,8 @@ public class ConstantScoreQuery extends Query {
         }
         
         @Override
        public void setNextReader(IndexReader reader, int docBase) throws IOException {
          collector.setNextReader(reader, docBase);
        public void setNextReader(AtomicReaderContext context) throws IOException {
          collector.setNextReader(context);
         }
         
         @Override
diff --git a/lucene/src/java/org/apache/lucene/search/FieldComparator.java b/lucene/src/java/org/apache/lucene/search/FieldComparator.java
index de8c59d8408..54bc20ba95a 100644
-- a/lucene/src/java/org/apache/lucene/search/FieldComparator.java
++ b/lucene/src/java/org/apache/lucene/search/FieldComparator.java
@@ -21,7 +21,7 @@ import java.io.IOException;
 import java.text.Collator;
 import java.util.Locale;
 
import org.apache.lucene.index.IndexReader;
import org.apache.lucene.index.IndexReader.AtomicReaderContext;
 import org.apache.lucene.search.FieldCache.DocTermsIndex;
 import org.apache.lucene.search.FieldCache.DocTerms;
 import org.apache.lucene.search.cache.ByteValuesCreator;
@@ -82,7 +82,7 @@ import org.apache.lucene.util.packed.PackedInts;
  *       priority queue.  The {@link FieldValueHitQueue}
  *       calls this method when a new hit is competitive.
  *
 *  &lt;li&gt; {@link #setNextReader} Invoked
 *  &lt;li&gt; {@link #setNextReader(AtomicReaderContext)} Invoked
  *       when the search is switching to the next segment.
  *       You may need to update internal state of the
  *       comparator, for example retrieving new values from
@@ -150,19 +150,18 @@ public abstract class FieldComparator {
   public abstract void copy(int slot, int doc) throws IOException;
 
   /**
   * Set a new Reader. All subsequent docIDs are relative to
   * Set a new {@link AtomicReaderContext}. All subsequent docIDs are relative to
    * the current reader (you must add docBase if you need to
    * map it to a top-level docID).
    * 
   * @param reader current reader
   * @param docBase docBase of this reader 
   * @param context current reader context
    * @return the comparator to use for this segment; most
    *   comparators can just return "this" to reuse the same
    *   comparator across segments
    * @throws IOException
    * @throws IOException
    */</comment>
  <function_decl><type><specifier>public</specifier> <specifier>abstract</specifier> <name>FieldComparator</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>docBase</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws>;</function_decl>
  <function_decl><type><specifier>public</specifier> <specifier>abstract</specifier> <name>FieldComparator</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws>;</function_decl>
 
   <comment type="block" format="javadoc">/** Sets the Scorer to use in case a document's score is
    *  needed.
@@ -242,8 +241,8 @@ public abstract class FieldComparator {
     }
 
     @Override
    public FieldComparator setNextReader(IndexReader reader, int docBase) throws IOException {
      setup(FieldCache.DEFAULT.getBytes(reader, creator.field, creator));
    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {
      setup(FieldCache.DEFAULT.getBytes(context.reader, creator.field, creator));
       docValues = cached.values;
       return this;
     }
@@ -314,8 +313,8 @@ public abstract class FieldComparator {
     }
 
     @Override
    public FieldComparator setNextReader(IndexReader reader, int docBase) throws IOException {
      setup(FieldCache.DEFAULT.getDoubles(reader, creator.field, creator));
    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {
      setup(FieldCache.DEFAULT.getDoubles(context.reader, creator.field, creator));
       docValues = cached.values;
       return this;
     }
@@ -388,8 +387,8 @@ public abstract class FieldComparator {
     }
 
     @Override
    public FieldComparator setNextReader(IndexReader reader, int docBase) throws IOException {
      setup(FieldCache.DEFAULT.getFloats(reader, creator.field, creator));
    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {
      setup(FieldCache.DEFAULT.getFloats(context.reader, creator.field, creator));
       docValues = cached.values;
       return this;
     }
@@ -444,8 +443,8 @@ public abstract class FieldComparator {
     }
 
     @Override
    public FieldComparator setNextReader(IndexReader reader, int docBase) throws IOException {
      setup( FieldCache.DEFAULT.getShorts(reader, creator.field, creator));
    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {
      setup( FieldCache.DEFAULT.getShorts(context.reader, creator.field, creator));
       docValues = cached.values;
       return this;
     }
@@ -522,8 +521,8 @@ public abstract class FieldComparator {
     }
 
     @Override
    public FieldComparator setNextReader(IndexReader reader, int docBase) throws IOException {
      setup(FieldCache.DEFAULT.getInts(reader, creator.field, creator));
    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {
      setup(FieldCache.DEFAULT.getInts(context.reader, creator.field, creator));
       docValues = cached.values;
       return this;
     }
@@ -597,8 +596,8 @@ public abstract class FieldComparator {
     }
 
     @Override
    public FieldComparator setNextReader(IndexReader reader, int docBase) throws IOException {
      setup(FieldCache.DEFAULT.getLongs(reader, creator.field, creator));
    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {
      setup(FieldCache.DEFAULT.getLongs(context.reader, creator.field, creator));
       docValues = cached.values;
       return this;
     }
@@ -648,7 +647,7 @@ public abstract class FieldComparator {
     }
 
     @Override
    public FieldComparator setNextReader(IndexReader reader, int docBase) {
    public FieldComparator setNextReader(AtomicReaderContext context) {
       return this;
     }
     
@@ -700,11 +699,11 @@ public abstract class FieldComparator {
     }
 
     @Override
    public FieldComparator setNextReader(IndexReader reader, int docBase) {
    public FieldComparator setNextReader(AtomicReaderContext context) {
       // TODO: can we "map" our docIDs to the current
       // reader? saves having to then subtract on every
       // compare call
      this.docBase = docBase;
      this.docBase = context.docBase;
       return this;
     }
     
@@ -781,8 +780,8 @@ public abstract class FieldComparator {
     }
 
     @Override
    public FieldComparator setNextReader(IndexReader reader, int docBase) throws IOException {
      currentDocTerms = FieldCache.DEFAULT.getTerms(reader, field);
    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {
      currentDocTerms = FieldCache.DEFAULT.getTerms(context.reader, field);
       return this;
     }
     
@@ -876,8 +875,8 @@ public abstract class FieldComparator {
     abstract class PerSegmentComparator extends FieldComparator {
       
       @Override
      public FieldComparator setNextReader(IndexReader reader, int docBase) throws IOException {
        return TermOrdValComparator.this.setNextReader(reader, docBase);
      public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {
        return TermOrdValComparator.this.setNextReader(context);
       }
 
       @Override
@@ -1142,8 +1141,9 @@ public abstract class FieldComparator {
     }
 
     @Override
    public FieldComparator setNextReader(IndexReader reader, int docBase) throws IOException {
      termsIndex = FieldCache.DEFAULT.getTermsIndex(reader, field);
    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {
      final int docBase = context.docBase;
      termsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader, field);
       final PackedInts.Reader docToOrd = termsIndex.getDocToOrd();
       FieldComparator perSegComp;
       if (docToOrd instanceof Direct8) {
@@ -1257,8 +1257,8 @@ public abstract class FieldComparator {
     }
 
     @Override
    public FieldComparator setNextReader(IndexReader reader, int docBase) throws IOException {
      docTerms = FieldCache.DEFAULT.getTerms(reader, field);
    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {
      docTerms = FieldCache.DEFAULT.getTerms(context.reader, field);
       return this;
     }
     
diff --git a/lucene/src/java/org/apache/lucene/search/IndexSearcher.java b/lucene/src/java/org/apache/lucene/search/IndexSearcher.java
index 0dd8dfb85e3..9bd72d426db 100644
-- a/lucene/src/java/org/apache/lucene/search/IndexSearcher.java
++ b/lucene/src/java/org/apache/lucene/search/IndexSearcher.java
@@ -486,7 +486,7 @@ public class IndexSearcher {
     // always use single thread:
     if (filter == null) {
       for (int i = 0; i &lt; leafContexts.length; i++) { // search each subreader
        collector.setNextReader(leafContexts[i].reader, leafContexts[i].docBase);
        collector.setNextReader(leafContexts[i]);
         Scorer scorer = weight.scorer(leafContexts[i], !collector.acceptsDocsOutOfOrder(), true);
         if (scorer != null) {
           scorer.score(collector);
@@ -494,7 +494,7 @@ public class IndexSearcher {
       }
     } else {
       for (int i = 0; i &lt; leafContexts.length; i++) { // search each subreader
        collector.setNextReader(leafContexts[i].reader, leafContexts[i].docBase);
        collector.setNextReader(leafContexts[i]);
         searchWithFilter(leafContexts[i], weight, filter, collector);
       }
     }
diff --git a/lucene/src/java/org/apache/lucene/search/MultiCollector.java b/lucene/src/java/org/apache/lucene/search/MultiCollector.java
index ee79f549b0b..08e08403d33 100644
-- a/lucene/src/java/org/apache/lucene/search/MultiCollector.java
++ b/lucene/src/java/org/apache/lucene/search/MultiCollector.java
@@ -19,7 +19,7 @@ package org.apache.lucene.search;
 
 import java.io.IOException;
 
import org.apache.lucene.index.IndexReader;
import org.apache.lucene.index.IndexReader.AtomicReaderContext;
 import org.apache.lucene.search.Collector;
 import org.apache.lucene.search.Scorer;
 
@@ -108,9 +108,9 @@ public class MultiCollector extends Collector {
   }
 
   @Override
  public void setNextReader(IndexReader reader, int o) throws IOException {
  public void setNextReader(AtomicReaderContext context) throws IOException {
     for (Collector c : collectors) {
      c.setNextReader(reader, o);
      c.setNextReader(context);
     }
   }
 
diff --git a/lucene/src/java/org/apache/lucene/search/PositiveScoresOnlyCollector.java b/lucene/src/java/org/apache/lucene/search/PositiveScoresOnlyCollector.java
index 2dd47bcbfe1..1e7cca99fa8 100644
-- a/lucene/src/java/org/apache/lucene/search/PositiveScoresOnlyCollector.java
++ b/lucene/src/java/org/apache/lucene/search/PositiveScoresOnlyCollector.java
@@ -19,7 +19,7 @@ package org.apache.lucene.search;
 
 import java.io.IOException;
 
import org.apache.lucene.index.IndexReader;
import org.apache.lucene.index.IndexReader.AtomicReaderContext;
 
 /**
  * A {@link Collector} implementation which wraps another
@@ -43,8 +43,8 @@ public class PositiveScoresOnlyCollector extends Collector {
   }
 
   @Override
  public void setNextReader(IndexReader reader, int docBase) throws IOException {
    c.setNextReader(reader, docBase);
  public void setNextReader(AtomicReaderContext context) throws IOException {
    c.setNextReader(context);
   }
 
   @Override
diff --git a/lucene/src/java/org/apache/lucene/search/TimeLimitingCollector.java b/lucene/src/java/org/apache/lucene/search/TimeLimitingCollector.java
index 405f1a09901..63ad23d9d6c 100644
-- a/lucene/src/java/org/apache/lucene/search/TimeLimitingCollector.java
++ b/lucene/src/java/org/apache/lucene/search/TimeLimitingCollector.java
@@ -19,7 +19,7 @@ package org.apache.lucene.search;
 
 import java.io.IOException;
 
import org.apache.lucene.index.IndexReader;
import org.apache.lucene.index.IndexReader.AtomicReaderContext;
 import org.apache.lucene.util.ThreadInterruptedException;
 
 /**
@@ -213,9 +213,9 @@ public class TimeLimitingCollector extends Collector {
   }
   
   @Override
  public void setNextReader(IndexReader reader, int base) throws IOException {
    collector.setNextReader(reader, base);
    this.docBase = base;
  public void setNextReader(AtomicReaderContext context) throws IOException {
    collector.setNextReader(context);
    this.docBase = context.docBase;
   }
   
   @Override
diff --git a/lucene/src/java/org/apache/lucene/search/TopFieldCollector.java b/lucene/src/java/org/apache/lucene/search/TopFieldCollector.java
index 7c78274bb84..05e178d3115 100644
-- a/lucene/src/java/org/apache/lucene/search/TopFieldCollector.java
++ b/lucene/src/java/org/apache/lucene/search/TopFieldCollector.java
@@ -19,7 +19,7 @@ package org.apache.lucene.search;
 
 import java.io.IOException;
 
import org.apache.lucene.index.IndexReader;
import org.apache.lucene.index.IndexReader.AtomicReaderContext;
 import org.apache.lucene.search.FieldValueHitQueue.Entry;
 import org.apache.lucene.util.PriorityQueue;
 
@@ -92,9 +92,9 @@ public abstract class TopFieldCollector extends TopDocsCollector&lt;Entry&gt; {
     }
     
     @Override
    public void setNextReader(IndexReader reader, int docBase) throws IOException {
      this.docBase = docBase;
      queue.setComparator(0, comparator.setNextReader(reader, docBase));
    public void setNextReader(AtomicReaderContext context) throws IOException {
      this.docBase = context.docBase;
      queue.setComparator(0, comparator.setNextReader(context));
       comparator = queue.firstComparator;
     }
     
@@ -447,10 +447,10 @@ public abstract class TopFieldCollector extends TopDocsCollector&lt;Entry&gt; {
     }
 
     @Override
    public void setNextReader(IndexReader reader, int docBase) throws IOException {
      this.docBase = docBase;
    public void setNextReader(AtomicReaderContext context) throws IOException {
      this.docBase = context.docBase;
       for (int i = 0; i &lt; comparators.length; i++) {
        queue.setComparator(i, comparators[i].setNextReader(reader, docBase));
        queue.setComparator(i, comparators[i].setNextReader(context));
       }
     }
 
diff --git a/lucene/src/java/org/apache/lucene/search/TopScoreDocCollector.java b/lucene/src/java/org/apache/lucene/search/TopScoreDocCollector.java
index 08a6897065a..d8f317592c1 100644
-- a/lucene/src/java/org/apache/lucene/search/TopScoreDocCollector.java
++ b/lucene/src/java/org/apache/lucene/search/TopScoreDocCollector.java
@@ -19,7 +19,7 @@ package org.apache.lucene.search;
 
 import java.io.IOException;
 
import org.apache.lucene.index.IndexReader;
import org.apache.lucene.index.IndexReader.AtomicReaderContext;
 
 /**
  * A {@link Collector} implementation that collects the top-scoring hits,
@@ -155,8 +155,8 @@ public abstract class TopScoreDocCollector extends TopDocsCollector&lt;ScoreDoc&gt; {
   }
   
   @Override
  public void setNextReader(IndexReader reader, int base) {
    docBase = base;
  public void setNextReader(AtomicReaderContext context) {
    docBase = context.docBase;
   }
   
   @Override
diff --git a/lucene/src/java/org/apache/lucene/search/TotalHitCountCollector.java b/lucene/src/java/org/apache/lucene/search/TotalHitCountCollector.java
index 444fa67f942..533d69c65d3 100644
-- a/lucene/src/java/org/apache/lucene/search/TotalHitCountCollector.java
++ b/lucene/src/java/org/apache/lucene/search/TotalHitCountCollector.java
@@ -17,7 +17,7 @@ package org.apache.lucene.search;
  * limitations under the License.
  */</comment>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
  * Just counts the total number of hits.
@@ -38,7 +38,7 @@ public class TotalHitCountCollector extends Collector {
     totalHits++;
   }
 
  public void setNextReader(IndexReader reader, int docBase) {
  public void setNextReader(AtomicReaderContext context) {
   }
 
   public boolean acceptsDocsOutOfOrder() {
diff --git a/lucene/src/test/org/apache/lucene/index/TestOmitTf.java b/lucene/src/test/org/apache/lucene/index/TestOmitTf.java
index 78b96dc5d32..21968df695b 100644
-- a/lucene/src/test/org/apache/lucene/index/TestOmitTf.java
++ b/lucene/src/test/org/apache/lucene/index/TestOmitTf.java
@@ -26,6 +26,7 @@ import org.apache.lucene.analysis.Analyzer;
 import org.apache.lucene.analysis.MockAnalyzer;
 import org.apache.lucene.document.Document;
 import org.apache.lucene.document.Field;
import org.apache.lucene.index.IndexReader.AtomicReaderContext;
 import org.apache.lucene.search.*;
 import org.apache.lucene.search.BooleanClause.Occur;
 import org.apache.lucene.store.Directory;
@@ -414,7 +415,7 @@ public class TestOmitTf extends LuceneTestCase {
     public static int getSum() { return sum; }
     
     @Override
    public void setNextReader(IndexReader reader, int docBase) {
    public void setNextReader(AtomicReaderContext context) {
       this.docBase = docBase;
     }
     @Override
diff --git a/lucene/src/test/org/apache/lucene/search/CheckHits.java b/lucene/src/test/org/apache/lucene/search/CheckHits.java
index dedd91949b6..fbfa0de093e 100644
-- a/lucene/src/test/org/apache/lucene/search/CheckHits.java
++ b/lucene/src/test/org/apache/lucene/search/CheckHits.java
@@ -25,6 +25,7 @@ import java.util.Random;
 import junit.framework.Assert;
 
 import org.apache.lucene.index.IndexReader;
import org.apache.lucene.index.IndexReader.AtomicReaderContext;
 import org.apache.lucene.store.Directory;
 
 public class CheckHits {
@@ -120,8 +121,8 @@ public class CheckHits {
       bag.add(Integer.valueOf(doc + base));
     }
     @Override
    public void setNextReader(IndexReader reader, int docBase) {
      base = docBase;
    public void setNextReader(AtomicReaderContext context) {
      base = context.docBase;
     }
     @Override
     public boolean acceptsDocsOutOfOrder() {
@@ -483,8 +484,8 @@ public class CheckHits {
       verifyExplanation(d,doc,scorer.score(),deep,exp);
     }
     @Override
    public void setNextReader(IndexReader reader, int docBase) {
      base = docBase;
    public void setNextReader(AtomicReaderContext context) {
      base = context.docBase;
     }
     @Override
     public boolean acceptsDocsOutOfOrder() {
diff --git a/lucene/src/test/org/apache/lucene/search/JustCompileSearch.java b/lucene/src/test/org/apache/lucene/search/JustCompileSearch.java
index 2e43904b584..f932e39bbe2 100644
-- a/lucene/src/test/org/apache/lucene/search/JustCompileSearch.java
++ b/lucene/src/test/org/apache/lucene/search/JustCompileSearch.java
@@ -44,7 +44,7 @@ final class JustCompileSearch {
     }
 
     @Override
    public void setNextReader(IndexReader reader, int docBase)
    public void setNextReader(AtomicReaderContext context)
         throws IOException {
       throw new UnsupportedOperationException(UNSUPPORTED_MSG);
     }
@@ -127,7 +127,7 @@ final class JustCompileSearch {
     }
 
     @Override
    public FieldComparator setNextReader(IndexReader reader, int docBase)
    public FieldComparator setNextReader(AtomicReaderContext context)
         throws IOException {
       throw new UnsupportedOperationException(UNSUPPORTED_MSG);
     }
@@ -300,7 +300,7 @@ final class JustCompileSearch {
     }
 
     @Override
    public void setNextReader(IndexReader reader, int docBase)
    public void setNextReader(AtomicReaderContext context)
         throws IOException {
       throw new UnsupportedOperationException(UNSUPPORTED_MSG);
     }
diff --git a/lucene/src/test/org/apache/lucene/search/MultiCollectorTest.java b/lucene/src/test/org/apache/lucene/search/MultiCollectorTest.java
index ae988c04ad2..a87135214ea 100644
-- a/lucene/src/test/org/apache/lucene/search/MultiCollectorTest.java
++ b/lucene/src/test/org/apache/lucene/search/MultiCollectorTest.java
@@ -19,7 +19,7 @@ package org.apache.lucene.search;
 
 import java.io.IOException;
 
import org.apache.lucene.index.IndexReader;
import org.apache.lucene.index.IndexReader.AtomicReaderContext;
 import org.apache.lucene.search.Collector;
 import org.apache.lucene.search.Scorer;
 import org.apache.lucene.util.LuceneTestCase;
@@ -46,7 +46,7 @@ public class MultiCollectorTest extends LuceneTestCase {
     }
 
     @Override
    public void setNextReader(IndexReader reader, int docBase) throws IOException {
    public void setNextReader(AtomicReaderContext context) throws IOException {
       setNextReaderCalled = true;
     }
 
@@ -73,7 +73,7 @@ public class MultiCollectorTest extends LuceneTestCase {
     assertTrue(c instanceof MultiCollector);
     assertTrue(c.acceptsDocsOutOfOrder());
     c.collect(1);
    c.setNextReader(null, 0);
    c.setNextReader(null);
     c.setScorer(null);
   }
 
@@ -95,7 +95,7 @@ public class MultiCollectorTest extends LuceneTestCase {
     Collector c = MultiCollector.wrap(dcs);
     assertTrue(c.acceptsDocsOutOfOrder());
     c.collect(1);
    c.setNextReader(null, 0);
    c.setNextReader(null);
     c.setScorer(null);
 
     for (DummyCollector dc : dcs) {
diff --git a/lucene/src/test/org/apache/lucene/search/QueryUtils.java b/lucene/src/test/org/apache/lucene/search/QueryUtils.java
index 27dda23ce40..1b3002211b7 100644
-- a/lucene/src/test/org/apache/lucene/search/QueryUtils.java
++ b/lucene/src/test/org/apache/lucene/search/QueryUtils.java
@@ -220,7 +220,7 @@ public class QueryUtils {
    */</comment>
   <function><type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>checkSkipTo</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>Query</name></type> <name>q</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <name>IndexSearcher</name></type> <name>s</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
     <comment type="line">//System.out.println("Checking "+q);</comment>
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>AtomicReaderContext</name><index>[]</index></name></type> <name>context</name> <init>= <expr><call><name><name>ReaderUtil</name><operator>.</operator><name>leaves</name></name><argument_list>(<argument><expr><call><name><name>s</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>AtomicReaderContext</name><index>[]</index></name></type> <name>readerContextArray</name> <init>= <expr><call><name><name>ReaderUtil</name><operator>.</operator><name>leaves</name></name><argument_list>(<argument><expr><call><name><name>s</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <if_stmt><if>if <condition>(<expr><call><name><name>q</name><operator>.</operator><name>weight</name></name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>scoresDocsOutOfOrder</name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>  <comment type="line">// in this case order of skipTo() might differ from that of next().</comment>
 
     <decl_stmt><decl><type><specifier>final</specifier> <name>int</name></type> <name>skip_op</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">265</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">265</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>QueryUtils</name> <block>{
             <try>try <block>{<block_content>
               <if_stmt><if>if <condition>(<expr><name>scorer</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                 <decl_stmt><decl><type><name>Weight</name></type> <name>w</name> <init>= <expr><call><name><name>q</name><operator>.</operator><name>weight</name></name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><name>scorer</name> <operator>=</operator> <call><name><name>w</name><operator>.</operator><name>scorer</name></name><argument_list>(<argument><expr><name><name>context</name><index>[<expr><name>leafPtr</name></expr>]</index></name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name>scorer</name> <operator>=</operator> <call><name><name>w</name><operator>.</operator><name>scorer</name></name><argument_list>(<argument><expr><name><name>readerContextArray</name><index>[<expr><name>leafPtr</name></expr>]</index></name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
               <expr_stmt/></block_content></block></if></if_stmt></block_content></block></try>}</block>
               
               <name>int</name> <name>op</name> <operator>=</operator> <name><name>order</name><index>[<expr><operator>(</operator><name><name>opidx</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>++</operator><operator>)</operator> <operator>%</operator> <name><name>order</name><operator>.</operator><name>length</name></name></expr>]</index></name></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">303</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">303</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>QueryUtils</name> <block>{
           }</block>
 
           @<name>Override</name>
          <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>, <argument><expr><name>int</name> <name>docBase</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
          <expr><specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr></expr_stmt>
             <comment type="line">// confirm that skipping beyond the last doc, on the</comment>
             <comment type="line">// previous reader, hits NO_MORE_DOCS</comment>
             <if_stmt><if>if <condition>(<expr><name><name>lastReader</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">317</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">317</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>QueryUtils</name> <block>{
               }</block>
               <name>leafPtr</name><operator>++</operator></expr>;</expr_stmt>
             </block_content>}</block></if></if_stmt>
            <expr_stmt><expr><name><name>lastReader</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>reader</name></expr>;</expr_stmt>
            <assert>assert <expr><name><name>context</name><index>[<expr><name>leafPtr</name></expr>]</index></name><operator>.</operator><name>reader</name> <operator>==</operator> <name>reader</name></expr>;</assert>
            <expr_stmt><expr><name><name>lastReader</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>context</name><operator>.</operator><name>reader</name></name></expr>;</expr_stmt>
            <assert>assert <expr><name><name>readerContextArray</name><index>[<expr><name>leafPtr</name></expr>]</index></name><operator>.</operator><name>reader</name> <operator>==</operator> <name><name>context</name><operator>.</operator><name>reader</name></name></expr>;</assert>
             <expr_stmt><expr><name><name>this</name><operator>.</operator><name>scorer</name></name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
             <expr_stmt><expr><name><name>lastDoc</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>
           </block_content>}</block></function>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">385</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">385</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>QueryUtils</name> <block>{
       }</block>
 
       @<name>Override</name>
      <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>, <argument><expr><name>int</name> <name>docBase</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
      <expr><specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr></expr_stmt>
         <comment type="line">// confirm that skipping beyond the last doc, on the</comment>
         <comment type="line">// previous reader, hits NO_MORE_DOCS</comment>
         <if_stmt><if>if <condition>(<expr><name><name>lastReader</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">400</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">400</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>QueryUtils</name> <block>{
           <expr><name>leafPtr</name><operator>++</operator></expr>;
         }</block></expr></expr_stmt>
 
        <expr_stmt><expr><name><name>lastReader</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>reader</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>lastReader</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>context</name><operator>.</operator><name>reader</name></name></expr>;</expr_stmt>
         <expr_stmt><expr><name><name>lastDoc</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>
       </block_content>}</block></if></if_stmt>
       <annotation>@<name>Override</name></annotation>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestConstantScoreQuery</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestConstantScoreQuery</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">874fc7f3a14</literal><operator>..</operator><literal type="number">5849d57354f</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestConstantScoreQuery</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestConstantScoreQuery</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name></name>;</package>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Document</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Field</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>RandomIndexWriter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Term</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>Directory</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">68</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">69</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestConstantScoreQuery</name> extends <name>LuceneTestCase</name> <block>{
       }</block>
       
       @<name>Override</name>
      <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>, <argument><expr><name>int</name> <name>docBase</name></expr></argument>)</argument_list></call> <block>{
      <expr><specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <block>{
       }</block>
       
       @<name>Override</name>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestDocBoost</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestDocBoost</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">2555896ac1d</literal><operator>..</operator><name>c222d632bbd</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestDocBoost</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestDocBoost</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">22</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">22</literal></expr>,<expr><literal type="number">7</literal> @@</expr> <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import></block></expr></expr_stmt>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>LuceneTestCase</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>*</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>RandomIndexWriter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Term</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>Directory</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">77</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">78</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestDocBoost</name> extends <name>LuceneTestCase</name> <block>{
            <expr><name><name>scores</name><index>[<expr><name>doc</name> <operator>+</operator> <name>base</name></expr>]</index></name> <operator>=</operator> <call><name><name>scorer</name><operator>.</operator><name>score</name></name><argument_list>()</argument_list></call></expr>;
          }</block>
          @<name>Override</name>
         <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>, <argument><expr><name>int</name> <name>docBase</name></expr></argument>)</argument_list></call> <block>{
           <expr><name>base</name> <operator>=</operator> <name>docBase</name></expr>;
         <expr><specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <block>{
           <expr><name>base</name> <operator>=</operator> <name><name>context</name><operator>.</operator><name>docBase</name></name></expr>;
          }</block>
          @<name>Override</name>
          <specifier>public</specifier> <name>boolean</name> <call><name>acceptsDocsOutOfOrder</name><argument_list>()</argument_list></call> <block>{
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestElevationComparator</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestElevationComparator</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>a99d2d0122b</name><operator>..</operator><name>a9eab85cc97</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestElevationComparator</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestElevationComparator</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">21</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">21</literal></expr>,<expr><literal type="number">7</literal> @@</expr> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>MockAnalyzer</name></name>;</import></block></expr>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Document</name></name>;</import></block></expr></expr_stmt>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Field</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>*</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>FieldValueHitQueue</name><operator>.</operator><name>Entry</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>*</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>LuceneTestCase</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">177</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">178</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <name>class</name> <name>ElevationComparatorSource</name> extends <name>FieldComparatorSource</name> <block>{
      }</block>
 
      @<name>Override</name>
     <specifier>public</specifier> <name>FieldComparator</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>, <argument><expr><name>int</name> <name>docBase</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
       <expr><name>idIndex</name> <operator>=</operator> <call><name><name>FieldCache</name><operator>.</operator><name>DEFAULT</name><operator>.</operator><name>getTermsIndex</name></name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><name>fieldname</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
     <function><type><specifier>public</specifier> <name>FieldComparator</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
       <expr_stmt><expr><name>idIndex</name> <operator>=</operator> <call><name><name>FieldCache</name><operator>.</operator><name>DEFAULT</name><operator>.</operator><name>getTermsIndex</name></name><argument_list>(<argument><expr><name><name>context</name><operator>.</operator><name>reader</name></name></expr></argument>, <argument><expr><name>fieldname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return>return <expr><name>this</name></expr>;</return>
      </block_content>}</block></function>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestMultiTermConstantScore</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestMultiTermConstantScore</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">7fc8ea6a799</literal><operator>..</operator><name>f62d29620ae</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestMultiTermConstantScore</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestMultiTermConstantScore</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">22</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">22</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>MockTokenizer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Document</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Field</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>RandomIndexWriter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Term</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>Directory</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">197</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">198</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestMultiTermConstantScore</name> extends <name>BaseTestRangeFilter</name> <block>{
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"score for doc "</literal> <operator>+</operator> <operator>(</operator><name>doc</name> <operator>+</operator> <name>base</name><operator>)</operator> <operator>+</operator> <literal type="string">" was not correct"</literal></expr></argument>, <argument><expr><literal type="number">1.0f</literal></expr></argument>, <argument><expr><call><name><name>scorer</name><operator>.</operator><name>score</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
       }</block>
       @<name>Override</name>
      <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>, <argument><expr><name>int</name> <name>docBase</name></expr></argument>)</argument_list></call> <block>{
        <expr><name>base</name> <operator>=</operator> <name>docBase</name></expr>;
      <expr><specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <block>{
        <expr><name>base</name> <operator>=</operator> <name><name>context</name><operator>.</operator><name>docBase</name></name></expr>;
       }</block>
       @<name>Override</name>
       <specifier>public</specifier> <name>boolean</name> <call><name>acceptsDocsOutOfOrder</name><argument_list>()</argument_list></call> <block>{
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestScoreCachingWrappingScorer</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestScoreCachingWrappingScorer</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">69ae819c73d</literal><operator>..</operator><name>a6ba9f61079</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestScoreCachingWrappingScorer</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestScoreCachingWrappingScorer</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">19</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">19</literal></expr>,<expr><literal type="number">7</literal> @@</expr> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name></name>;</package></block></expr>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import></block></expr></expr_stmt>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>LuceneTestCase</name></name>;</import>
 
 <class><specifier>public</specifier> class <name>TestScoreCachingWrappingScorer</name> <super_list><extends>extends <super><name>LuceneTestCase</name></super></extends></super_list> <block>{
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">76</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">76</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestScoreCachingWrappingScorer</name> extends <name>LuceneTestCase</name> <block>{
       <expr><operator>++</operator><name>idx</name></expr>;
     }</block>
 
    @<name>Override</name> <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>, <argument><expr><name>int</name> <name>docBase</name></expr></argument>)</argument_list></call>
    @<name>Override</name> <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call>
         <throws>throws <argument><expr><name>IOException</name> <block>{
     }</block>
 
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestScorerPerf</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestScorerPerf</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">55c4042eca0</literal><operator>..</operator><literal type="number">1fc436f8b3b</literal> <literal type="number">100755</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestScorerPerf</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestScorerPerf</name><operator>.</operator><name>java</name></name></expr></argument>
@<argument>@ <expr><operator>-</operator><literal type="number">6</literal></expr></argument>,<argument><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">6</literal></expr></argument>,<argument><expr><literal type="number">6</literal> @@</expr></argument></throws></expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>LuceneTestCase</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>BitSet</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexWriter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Term</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">110</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">109</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestScorerPerf</name> extends <name>LuceneTestCase</name> <block>{
     <expr><specifier>public</specifier> <name>int</name> <call><name>getSum</name><argument_list>()</argument_list></call> <block>{ <return>return <expr><name>sum</name></expr>;</return></block></expr> }</block>
 
     @<name>Override</name>
    <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>, <argument><expr><name>int</name> <name>base</name></expr></argument>)</argument_list></call> <block>{
      <expr><name>docBase</name> <operator>=</operator> <name>base</name></expr>;
    <expr><specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <block>{
      <expr><name>docBase</name> <operator>=</operator> <name><name>context</name><operator>.</operator><name>docBase</name></name></expr>;
     }</block>
     @<name>Override</name>
     <specifier>public</specifier> <name>boolean</name> <call><name>acceptsDocsOutOfOrder</name><argument_list>()</argument_list></call> <block>{
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSetNorm</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSetNorm</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>a117ee30c6b</name><operator>..</operator><name>b730fce8a91</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSetNorm</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSetNorm</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">23</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">23</literal></expr>,<expr><literal type="number">7</literal> @@</expr> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>LuceneTestCase</name></name>;</import></block></expr>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>MockAnalyzer</name></name>;</import></block></expr></expr_stmt>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>*</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexWriter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Term</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>Directory</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">74</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">75</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSetNorm</name> extends <name>LuceneTestCase</name> <block>{
            <expr><name><name>scores</name><index>[<expr><name>doc</name> <operator>+</operator> <name>base</name></expr>]</index></name> <operator>=</operator> <call><name><name>scorer</name><operator>.</operator><name>score</name></name><argument_list>()</argument_list></call></expr>;
          }</block>
          @<name>Override</name>
         <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>, <argument><expr><name>int</name> <name>docBase</name></expr></argument>)</argument_list></call> <block>{
           <expr><name>base</name> <operator>=</operator> <name>docBase</name></expr>;
         <expr><specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <block>{
           <expr><name>base</name> <operator>=</operator> <name><name>context</name><operator>.</operator><name>docBase</name></name></expr>;
          }</block>
          @<name>Override</name>
          <specifier>public</specifier> <name>boolean</name> <call><name>acceptsDocsOutOfOrder</name><argument_list>()</argument_list></call> <block>{
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSimilarity</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSimilarity</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>fd459103777</name><operator>..</operator><name>c425ef504f6</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSimilarity</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSimilarity</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">23</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">23</literal></expr>,<expr><literal type="number">7</literal> @@</expr> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collection</name></name>;</import></block></expr>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>FieldInvertState</name></name>;</import></block></expr></expr_stmt>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>RandomIndexWriter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Term</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>Directory</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">94</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">95</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSimilarity</name> extends <name>LuceneTestCase</name> <block>{
            <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1.0f</literal></expr></argument>, <argument><expr><call><name><name>scorer</name><operator>.</operator><name>score</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
          }</block>
          @<name>Override</name>
        <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>, <argument><expr><name>int</name> <name>docBase</name></expr></argument>)</argument_list></call> <block>{}</block>
        <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <block>{}</block>
          @<name>Override</name>
         <specifier>public</specifier> <name>boolean</name> <call><name>acceptsDocsOutOfOrder</name><argument_list>()</argument_list></call> <block>{
            <return>return <expr><literal type="boolean">true</literal></expr>;</return>
@@ <operator>-</operator><literal type="number">118</literal><operator>,</operator><literal type="number">8</literal> <operator>+</operator><literal type="number">119</literal><operator>,</operator><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSimilarity</name> extends <name>LuceneTestCase</name> <block>{
            <expr><call><name>assertEquals</name><argument_list>(<argument><expr><operator>(</operator><name>float</name><operator>)</operator><name>doc</name><operator>+</operator><name>base</name><operator>+</operator><literal type="number">1</literal></expr></argument>, <argument><expr><call><name><name>scorer</name><operator>.</operator><name>score</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
          }</block></block>
          @<name>Override</name>
        <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>, <argument><expr><name>int</name> <name>docBase</name></expr></argument>)</argument_list></call> <block>{
           <expr><name>base</name> <operator>=</operator> <name>docBase</name></expr>;
        <expr><specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <block>{
           <expr><name>base</name> <operator>=</operator> <name><name>context</name><operator>.</operator><name>docBase</name></name></expr>;
          }</block>
          @<name>Override</name>
         <specifier>public</specifier> <name>boolean</name> <call><name>acceptsDocsOutOfOrder</name><argument_list>()</argument_list></call> <block>{
@@ <expr><operator>-</operator><literal type="number">144</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">145</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSimilarity</name> extends <name>LuceneTestCase</name> <block>{
            <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1.0f</literal></expr></argument>, <argument><expr><call><name><name>scorer</name><operator>.</operator><name>score</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
          }</block>
          @<name>Override</name>
         <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>, <argument><expr><name>int</name> <name>docBase</name></expr></argument>)</argument_list></call> <block>{}</block>
         <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <block>{}</block>
          @<name>Override</name>
          <specifier>public</specifier> <name>boolean</name> <call><name>acceptsDocsOutOfOrder</name><argument_list>()</argument_list></call> <block>{
            <return>return <expr><literal type="boolean">true</literal></expr>;</return>
@@ <operator>-</operator><literal type="number">165</literal><operator>,</operator><literal type="number">7</literal> <operator>+</operator><literal type="number">166</literal><operator>,</operator><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSimilarity</name> extends <name>LuceneTestCase</name> <block>{
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">2.0f</literal></expr></argument>, <argument><expr><call><name><name>scorer</name><operator>.</operator><name>score</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
       }</block></block>
       @<name>Override</name>
      <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>, <argument><expr><name>int</name> <name>docBase</name></expr></argument>)</argument_list></call> <block>{}</block>
      <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <block>{}</block>
       @<name>Override</name>
       <specifier>public</specifier> <name>boolean</name> <call><name>acceptsDocsOutOfOrder</name><argument_list>()</argument_list></call> <block>{
         <return>return <expr><literal type="boolean">true</literal></expr>;</return>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSort</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSort</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">32b58632374</literal><operator>..</operator><literal type="number">9a5db0d1053</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSort</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSort</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">506</literal><operator>,</operator><literal type="number">8</literal> <operator>+</operator><literal type="number">506</literal><operator>,</operator><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSort</name> extends <name>LuceneTestCase</name> implements <name>Serializable</name> <block>{
     }</block></block>
 
     @<name>Override</name>
    <specifier>public</specifier> <name>FieldComparator</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>, <argument><expr><name>int</name> <name>docBase</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
      <expr><name>docValues</name> <operator>=</operator> <call><name><name>FieldCache</name><operator>.</operator><name>DEFAULT</name><operator>.</operator><name>getInts</name></name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><literal type="string">"parser"</literal></expr></argument>, <argument><expr><operator>new</operator> <class><super><name><name>FieldCache</name><operator>.</operator><name>IntParser</name></name></super><argument_list>(</argument_list></class></expr></argument>)</argument_list></call> <block>{
    <expr><specifier>public</specifier> <name>FieldComparator</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call></expr></block></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
      <expr><name>docValues</name> <operator>=</operator> <call><name><name>FieldCache</name><operator>.</operator><name>DEFAULT</name><operator>.</operator><name>getInts</name></name><argument_list>(<argument><expr><name><name>context</name><operator>.</operator><name>reader</name></name></expr></argument>, <argument><expr><literal type="string">"parser"</literal></expr></argument>, <argument><expr><operator>new</operator> <class><super><name><name>FieldCache</name><operator>.</operator><name>IntParser</name></name></super><argument_list>(</argument_list></class></expr></argument>)</argument_list></call> <block>{
           <expr><specifier>public</specifier> <name>final</name> <name>int</name> <call><name>parseInt</name><argument_list>(<argument><expr><name>final</name> <name>BytesRef</name> <name>term</name></expr></argument>)</argument_list></call> <block>{</block></expr></block></expr></block></expr></argument></throws></expr>
             <return>return <expr><operator>(</operator><name><name>term</name><operator>.</operator><name>bytes</name><index>[<expr><name><name>term</name><operator>.</operator><name>offset</name></name></expr>]</index></name><operator>-</operator><literal type="char">'A'</literal><operator>)</operator> <operator>*</operator> <literal type="number">123456</literal></expr>;</return></block></expr>
           }</block>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSubScorerFreqs</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSubScorerFreqs</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">4c2b05cb8fa</literal><operator>..</operator><name>c5a3369f563</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSubScorerFreqs</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSubScorerFreqs</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name></name>;</package>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>*</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>*</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>*</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>BooleanClause</name><operator>.</operator><name>Occur</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Scorer</name><operator>.</operator><name>ScorerVisitor</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">126</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">127</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSubScorerFreqs</name> extends <name>LuceneTestCase</name> <block>{
     }</block>
 
     @<name>Override</name>
    <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>, <argument><expr><name>int</name> <name>docBase</name></expr></argument>)</argument_list></call>
    <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call>
         <throws>throws <argument><expr><name>IOException</name> <block>{
       <expr><name><name>this</name><operator>.</operator><name>docBase</name></name> <operator>=</operator> <name>docBase</name></expr></block></expr></argument></throws></expr>;</expr_stmt>
      <constructor_decl><name><name>other</name><operator>.</operator><name>setNextReader</name></name><parameter_list>(<parameter><decl><type><name>reader</name></type></decl></parameter>, <parameter><decl><type><name>docBase</name></type></decl></parameter>)</parameter_list>;</constructor_decl>
      <constructor_decl><name><name>other</name><operator>.</operator><name>setNextReader</name></name><parameter_list>(<parameter><decl><type><name>context</name></type></decl></parameter>)</parameter_list>;</constructor_decl>
     }</block></class>
 
     <annotation>@<name>Override</name></annotation>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestTermScorer</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestTermScorer</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">139df5077eb</literal><operator>..</operator><literal type="number">05c34758f56</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestTermScorer</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestTermScorer</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">98</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">98</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestTermScorer</name> extends <name>LuceneTestCase</name> <block>{
       }</block>
       
       @<name>Override</name>
      <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>, <argument><expr><name>int</name> <name>docBase</name></expr></argument>)</argument_list></call> <block>{
        <expr><name>base</name> <operator>=</operator> <name>docBase</name></expr>;
      <expr><specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <block>{
        <expr><name>base</name> <operator>=</operator> <name><name>context</name><operator>.</operator><name>docBase</name></name></expr>;
       }</block>
       
       @<name>Override</name>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestTimeLimitingCollector</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestTimeLimitingCollector</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">53d2deaa6b2</literal><operator>..</operator><name>d31fd21d05e</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestTimeLimitingCollector</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestTimeLimitingCollector</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">24</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">24</literal></expr>,<expr><literal type="number">7</literal> @@</expr> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>MockAnalyzer</name></name>;</import></block></expr></expr_stmt>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Document</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Field</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>RandomIndexWriter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>queryParser</name><operator>.</operator><name>QueryParser</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>TimeLimitingCollector</name><operator>.</operator><name>TimeExceededException</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">339</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">340</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestTimeLimitingCollector</name> extends <name>LuceneTestCase</name> <block>{
     }</block>
     
     @<name>Override</name>
    <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>, <argument><expr><name>int</name> <name>base</name></expr></argument>)</argument_list></call> <block>{
      <expr><name>docBase</name> <operator>=</operator> <name>base</name></expr>;
    <expr><specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <block>{
      <expr><name>docBase</name> <operator>=</operator> <name><name>context</name><operator>.</operator><name>docBase</name></name></expr>;
     }</block>
     
     @<name>Override</name>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestTopDocsCollector</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestTopDocsCollector</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">348dfc30166</literal><operator>..</operator><literal type="number">21164680661</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestTopDocsCollector</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestTopDocsCollector</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">21</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">21</literal></expr>,<expr><literal type="number">7</literal> @@</expr> <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import></block></expr></expr_stmt>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Document</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>RandomIndexWriter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>Directory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>LuceneTestCase</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">60</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">61</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestTopDocsCollector</name> extends <name>LuceneTestCase</name> <block>{
     }</block>
 
     @<name>Override</name>
    <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>, <argument><expr><name>int</name> <name>docBase</name></expr></argument>)</argument_list></call>
    <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call>
         <throws>throws <argument><expr><name>IOException</name> <block>{
      <expr><name>base</name> <operator>=</operator> <name>docBase</name></expr></block></expr></argument></throws></expr>;</expr_stmt>
      <expr_stmt><expr><name>base</name> <operator>=</operator> <name><name>context</name><operator>.</operator><name>docBase</name></name></expr>;</expr_stmt>
     }
 
     @<expr_stmt><expr><name>Override</name>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>QueryComponent</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>QueryComponent</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>b5e133ec58b</name><operator>..</operator><literal type="number">18bbf49deec</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>QueryComponent</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>QueryComponent</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@</expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>handler</name><operator>.</operator><name>component</name></name>;</package>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Field</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Term</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>queryParser</name><operator>.</operator><name>ParseException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>*</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>BytesRef</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>ReaderUtil</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>cloud</name><operator>.</operator><name>CloudDescriptor</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>cloud</name><operator>.</operator><name>ZkController</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>SolrDocument</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">444</literal></expr><operator>,</operator><expr><literal type="number">23</literal> <operator>+</operator><literal type="number">447</literal></expr><operator>,</operator><expr><literal type="number">21</literal> @@ <specifier>public</specifier> <name>class</name> <name>QueryComponent</name> extends <name>SearchComponent</name>
       <name><name>SortField</name><index>[]</index></name> <name>sortFields</name> <operator>=</operator> <ternary><condition><expr><name>sort</name><operator>==</operator><literal type="null">null</literal></expr> ?</condition><then> <expr><operator>new</operator> <name><name>SortField</name><index>[]</index></name><block>{<expr><name><name>SortField</name><operator>.</operator><name>FIELD_SCORE</name></name></expr>}</block></expr> </then><else>: <expr><call><name><name>sort</name><operator>.</operator><name>getSort</name></name><argument_list>()</argument_list></call></expr></else></ternary></expr>;</expr_stmt>
       <decl_stmt><decl><type><name>NamedList</name></type> <name>sortVals</name> <init>= <expr><operator>new</operator> <call><name>NamedList</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="line">// order is important for the sort fields</comment>
       <decl_stmt><decl><type><name>Field</name></type> <name>field</name> <init>= <expr><operator>new</operator> <call><name>Field</name><argument_list>(<argument><expr><literal type="string">"dummy"</literal></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><name><name>Field</name><operator>.</operator><name>Store</name><operator>.</operator><name>YES</name></name></expr></argument>, <argument><expr><name><name>Field</name><operator>.</operator><name>Index</name><operator>.</operator><name>NO</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="line">// a dummy Field</comment>

      <decl_stmt><decl><type><name>SolrIndexReader</name></type> <name>reader</name> <init>= <expr><call><name><name>searcher</name><operator>.</operator><name>getReader</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name><name>SolrIndexReader</name><index>[]</index></name></type> <name>readers</name> <init>= <expr><call><name><name>reader</name><operator>.</operator><name>getLeafReaders</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>SolrIndexReader</name></type> <name>subReader</name> <init>= <expr><name>reader</name></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name><name>readers</name><operator>.</operator><name>length</name></name><operator>==</operator><literal type="number">1</literal></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>ReaderContext</name></type> <name>topReaderContext</name> <init>= <expr><call><name><name>searcher</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name><name>AtomicReaderContext</name><index>[]</index></name></type> <name>leaves</name> <init>= <expr><call><name><name>ReaderUtil</name><operator>.</operator><name>leaves</name></name><argument_list>(<argument><expr><name>topReaderContext</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>AtomicReaderContext</name></type> <name>currentLeaf</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name><name>leaves</name><operator>.</operator><name>length</name></name><operator>==</operator><literal type="number">1</literal></expr>)</condition> <block>{<block_content>
         <comment type="line">// if there is a single segment, use that subReader and avoid looking up each time</comment>
        <expr_stmt><expr><name>subReader</name> <operator>=</operator> <name><name>readers</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><name>readers</name><operator>=</operator><literal type="null">null</literal></expr>;</expr_stmt>
        <expr_stmt><expr><name>currentLeaf</name> <operator>=</operator> <name><name>leaves</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><name>leaves</name><operator>=</operator><literal type="null">null</literal></expr>;</expr_stmt>
       </block_content>}</block></if></if_stmt>
      <decl_stmt><decl><type><name><name>int</name><index>[]</index></name></type> <name>offsets</name> <init>= <expr><call><name><name>reader</name><operator>.</operator><name>getLeafOffsets</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
       <for>for <control>(<init><decl><type><name>SortField</name></type> <name>sortField</name><range>: <expr><name>sortFields</name></expr></range></decl></init>)</control> <block>{<block_content>
         <decl_stmt><decl><type><name>int</name></type> <name>type</name> <init>= <expr><call><name><name>sortField</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
         <if_stmt><if>if <condition>(<expr><name>type</name><operator>==</operator><name><name>SortField</name><operator>.</operator><name>SCORE</name></name> <operator>||</operator> <name>type</name><operator>==</operator><name><name>SortField</name><operator>.</operator><name>DOC</name></name></expr>)</condition><block type="pseudo"><block_content> <continue>continue;</continue></block_content></block></if></if_stmt>
 
         <decl_stmt><decl><type><name>FieldComparator</name></type> <name>comparator</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>FieldComparator</name></type> <name><name>comparators</name><index>[]</index></name> <init>= <expr><ternary><condition><expr><operator>(</operator><name>readers</name><operator>==</operator><literal type="null">null</literal><operator>)</operator></expr> ?</condition><then> <expr><literal type="null">null</literal></expr> </then><else>: <expr><operator>new</operator> <name><name>FieldComparator</name><index>[<expr><name><name>readers</name><operator>.</operator><name>length</name></name></expr>]</index></name></expr></else></ternary></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>FieldComparator</name></type> <name><name>comparators</name><index>[]</index></name> <init>= <expr><ternary><condition><expr><operator>(</operator><name>leaves</name><operator>==</operator><literal type="null">null</literal><operator>)</operator></expr> ?</condition><then> <expr><literal type="null">null</literal></expr> </then><else>: <expr><operator>new</operator> <name><name>FieldComparator</name><index>[<expr><name><name>leaves</name><operator>.</operator><name>length</name></name></expr>]</index></name></expr></else></ternary></expr></init></decl>;</decl_stmt>
 
         <decl_stmt><decl><type><name>String</name></type> <name>fieldname</name> <init>= <expr><call><name><name>sortField</name><operator>.</operator><name>getField</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
         <decl_stmt><decl><type><name>FieldType</name></type> <name>ft</name> <init>= <expr><ternary><condition><expr><name>fieldname</name><operator>==</operator><literal type="null">null</literal></expr> ?</condition><then> <expr><literal type="null">null</literal></expr> </then><else>: <expr><call><name><name>req</name><operator>.</operator><name>getSchema</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getFieldTypeNoEx</name><argument_list>(<argument><expr><name>fieldname</name></expr></argument>)</argument_list></call></expr></else></ternary></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">469</literal></expr><operator>,</operator><expr><literal type="number">26</literal> <operator>+</operator><literal type="number">470</literal></expr><operator>,</operator><expr><literal type="number">24</literal> @@ <specifier>public</specifier> <name>class</name> <name>QueryComponent</name> extends <name>SearchComponent</name>
         <name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>Object</name></argument>&gt;</argument_list></name> <name>vals</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>Object</name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><call><name><name>docList</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <decl_stmt><decl><type><name>DocIterator</name></type> <name>it</name> <init>= <expr><call><name><name>rb</name><operator>.</operator><name>getResults</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name><name>docList</name><operator>.</operator><name>iterator</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
        <decl_stmt><decl><type><name>int</name></type> <name>offset</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
         <decl_stmt><decl><type><name>int</name></type> <name>idx</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
 
         <while>while<condition>(<expr><call><name><name>it</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
           <decl_stmt><decl><type><name>int</name></type> <name>doc</name> <init>= <expr><call><name><name>it</name><operator>.</operator><name>nextDoc</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
          <if_stmt><if>if <condition>(<expr><name>readers</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><name>idx</name> <operator>=</operator> <call><name><name>SolrIndexReader</name><operator>.</operator><name>readerIndex</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>, <argument><expr><name>offsets</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name>subReader</name> <operator>=</operator> <name><name>readers</name><index>[<expr><name>idx</name></expr>]</index></name></expr>;</expr_stmt>
            <expr_stmt><expr><name>offset</name> <operator>=</operator> <name><name>offsets</name><index>[<expr><name>idx</name></expr>]</index></name></expr>;</expr_stmt>
          <if_stmt><if>if <condition>(<expr><name>leaves</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><name>idx</name> <operator>=</operator> <call><name><name>ReaderUtil</name><operator>.</operator><name>subIndex</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>, <argument><expr><name>leaves</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name>currentLeaf</name> <operator>=</operator> <name><name>leaves</name><index>[<expr><name>idx</name></expr>]</index></name></expr>;</expr_stmt>
             <expr_stmt><expr><name>comparator</name> <operator>=</operator> <name><name>comparators</name><index>[<expr><name>idx</name></expr>]</index></name></expr>;</expr_stmt>
           </block_content>}</block></if></if_stmt>
 
           <if_stmt><if>if <condition>(<expr><name>comparator</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
             <expr_stmt><expr><name>comparator</name> <operator>=</operator> <call><name><name>sortField</name><operator>.</operator><name>getComparator</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name>comparator</name> <operator>=</operator> <call><name><name>comparator</name><operator>.</operator><name>setNextReader</name></name><argument_list>(<argument><expr><name>subReader</name></expr></argument>, <argument><expr><name>offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name>comparator</name> <operator>=</operator> <call><name><name>comparator</name><operator>.</operator><name>setNextReader</name></name><argument_list>(<argument><expr><name>currentLeaf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <if_stmt><if>if <condition>(<expr><name>comparators</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content>
               <expr_stmt><expr><name><name>comparators</name><index>[<expr><name>idx</name></expr>]</index></name> <operator>=</operator> <name>comparator</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
           </block_content>}</block></if></if_stmt>
 
          <expr_stmt><expr><name>doc</name> <operator>-=</operator> <name>offset</name></expr>;</expr_stmt>  <comment type="line">// adjust for what segment this is in</comment>
          <expr_stmt><expr><name>doc</name> <operator>-=</operator> <name><name>currentLeaf</name><operator>.</operator><name>docBase</name></name></expr>;</expr_stmt>  <comment type="line">// adjust for what segment this is in</comment>
           <expr_stmt><expr><call><name><name>comparator</name><operator>.</operator><name>copy</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           <decl_stmt><decl><type><name>Object</name></type> <name>val</name> <init>= <expr><call><name><name>comparator</name><operator>.</operator><name>value</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>QueryElevationComponent</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>QueryElevationComponent</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">00eeb73c7a0</literal><operator>..</operator><literal type="number">65061e231b0</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>QueryElevationComponent</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>QueryElevationComponent</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">43</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">43</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>Analyzer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>TokenStream</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>tokenattributes</name><operator>.</operator><name>CharTermAttribute</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Term</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>*</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>StringHelper</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">503</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">504</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <name>class</name> <name>ElevationComparatorSource</name> extends <name>FieldComparatorSource</name> <block>{
         <expr><name><name>values</name><index>[<expr><name>slot</name></expr>]</index></name> <operator>=</operator> <call><name>docVal</name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;
       }</block></expr></expr_stmt>
 
      <function><type><specifier>public</specifier> <name>FieldComparator</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>docBase</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <expr_stmt><expr><name>idIndex</name> <operator>=</operator> <call><name><name>FieldCache</name><operator>.</operator><name>DEFAULT</name><operator>.</operator><name>getTermsIndex</name></name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><name>fieldname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <function><type><specifier>public</specifier> <name>FieldComparator</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <expr_stmt><expr><name>idIndex</name> <operator>=</operator> <call><name><name>FieldCache</name><operator>.</operator><name>DEFAULT</name><operator>.</operator><name>getTermsIndex</name></name><argument_list>(<argument><expr><name><name>context</name><operator>.</operator><name>reader</name></name></expr></argument>, <argument><expr><name>fieldname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <return>return <expr><name>this</name></expr>;</return>
       </block_content>}</block></function>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>TermsComponent</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>TermsComponent</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>ee2e51f1f51</name><operator>..</operator><literal type="number">9fc48b352bb</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>TermsComponent</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>TermsComponent</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">27</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">27</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>StrUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>schema</name><operator>.</operator><name>FieldType</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>schema</name><operator>.</operator><name>StrField</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>request</name><operator>.</operator><name>SimpleFacets</name><operator>.</operator><name>CountPair</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>SolrIndexReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>BoundedTreeSet</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>client</name><operator>.</operator><name>solrj</name><operator>.</operator><name>response</name><operator>.</operator><name>TermsResponse</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">103</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">102</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>TermsComponent</name> extends <name>SearchComponent</name> <block>{
     <expr><name>boolean</name> <name>raw</name> <operator>=</operator> <call><name><name>params</name><operator>.</operator><name>getBool</name></name><argument_list>(<argument><expr><name><name>TermsParams</name><operator>.</operator><name>TERMS_RAW</name></name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;
 
 
    <name>SolrIndexReader</name> <name>sr</name> <operator>=</operator> <call><name><name>rb</name><operator>.</operator><name>req</name><operator>.</operator><name>getSearcher</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getReader</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Fields</name></type> <name>lfields</name> <init>= <expr><call><name><name>MultiFields</name><operator>.</operator><name>getFields</name></name><argument_list>(<argument><expr><name>sr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>IndexReader</name></type> <name>indexReader</name> <init>= <expr><call><name><name>rb</name><operator>.</operator><name>req</name><operator>.</operator><name>getSearcher</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTopReaderContext</name><argument_list>()</argument_list></call><operator>.</operator><name>reader</name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Fields</name></type> <name>lfields</name> <init>= <expr><call><name><name>MultiFields</name><operator>.</operator><name>getFields</name></name><argument_list>(<argument><expr><name>indexReader</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <for>for <control>(<init><decl><type><name>String</name></type> <name>field</name> <range>: <expr><name>fields</name></expr></range></decl></init>)</control> <block>{<block_content>
       <decl_stmt><decl><type><name><name>NamedList</name><argument_list type="generic">&lt;<argument><name>Integer</name></argument>&gt;</argument_list></name></type> <name>fieldTerms</name> <init>= <expr><operator>new</operator> <call><name><name>NamedList</name><argument_list type="generic">&lt;<argument><name>Integer</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>RandomSortField</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>RandomSortField</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">1a2891f8ecc</literal><operator>..</operator><literal type="number">848e8206f9d</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>RandomSortField</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>RandomSortField</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">22</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">22</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Fieldable</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>*</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>response</name><operator>.</operator><name>TextResponseWriter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>QParser</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">89</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">90</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>RandomSortField</name> extends <name>FieldType</name> <block>{
     <comment type="line">// we use the top-level reader.</comment>
     <return>return <expr><call><name><name>fieldName</name><operator>.</operator><name>hashCode</name></name><argument_list>()</argument_list></call> <operator>+</operator> <name>base</name> <operator>+</operator> <operator>(</operator><name>int</name><operator>)</operator><call><name><name>top</name><operator>.</operator><name>getVersion</name></name><argument_list>()</argument_list></call></expr>;</return>
   }</block></expr></expr_stmt>

  
   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>public</specifier> <name>SortField</name></type> <name>getSortField</name><parameter_list>(<parameter><decl><type><name>SchemaField</name></type> <name>field</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>reverse</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <return>return <expr><operator>new</operator> <call><name>SortField</name><argument_list>(<argument><expr><call><name><name>field</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>randomComparatorSource</name></expr></argument>, <argument><expr><name>reverse</name></expr></argument>)</argument_list></call></expr>;</return>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">127</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">128</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>RandomSortField</name> extends <name>FieldType</name> <block>{
           <expr><name><name>values</name><index>[<expr><name>slot</name></expr>]</index></name> <operator>=</operator> <call><name>hash</name><argument_list>(<argument><expr><name>doc</name><operator>+</operator><name>seed</name></expr></argument>)</argument_list></call></expr>;
         }</block></expr></expr_stmt>
 
        <function><type><specifier>public</specifier> <name>FieldComparator</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>docBase</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
          <expr_stmt><expr><name>seed</name> <operator>=</operator> <call><name>getSeed</name><argument_list>(<argument><expr><name>fieldname</name></expr></argument>, <argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <function><type><specifier>public</specifier> <name>FieldComparator</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
          <expr_stmt><expr><name>seed</name> <operator>=</operator> <call><name>getSeed</name><argument_list>(<argument><expr><name>fieldname</name></expr></argument>, <argument><expr><name><name>context</name><operator>.</operator><name>reader</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           <return>return <expr><name>this</name></expr>;</return>
         </block_content>}</block></function>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>DocSetHitCollector</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>DocSetHitCollector</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>ad32295e169</name><operator>..</operator><name>c0067a74380</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>DocSetHitCollector</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>DocSetHitCollector</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name></name>;</package>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Collector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Scorer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>OpenBitSet</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">80</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">80</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <name>class</name> <name>DocSetCollector</name> extends <name>Collector</name> <block>{
   <expr><specifier>public</specifier> <name>void</name> <call><name>setScorer</name><argument_list>(<argument><expr><name>Scorer</name> <name>scorer</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
   }</block>
 
  <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>, <argument><expr><name>int</name> <name>docBase</name></expr></argument>)</argument_list></call></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><name><name>this</name><operator>.</operator><name>base</name></name> <operator>=</operator> <name>docBase</name></expr></block></expr></argument></throws></expr>;
  <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><name><name>this</name><operator>.</operator><name>base</name></name> <operator>=</operator> <name><name>context</name><operator>.</operator><name>docBase</name></name></expr></block></expr></argument></throws></block></expr>;</expr_stmt>
   </block_content>}</block></function>
 
   <function><type><specifier>public</specifier> <name>boolean</name></type> <name>acceptsDocsOutOfOrder</name><parameter_list>()</parameter_list> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">135</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">135</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <name>class</name> <name>DocSetDelegateCollector</name> extends <name>DocSetCollector</name> <block>{
     <expr><call><name><name>collector</name><operator>.</operator><name>setScorer</name></name><argument_list>(<argument><expr><name>scorer</name></expr></argument>)</argument_list></call></expr>;
   }</block></expr></expr_stmt>
 
  <function><type><specifier>public</specifier> <name>void</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>docBase</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>collector</name><operator>.</operator><name>setNextReader</name></name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><name>docBase</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>base</name></name> <operator>=</operator> <name>docBase</name></expr>;</expr_stmt>
  <function><type><specifier>public</specifier> <name>void</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>collector</name><operator>.</operator><name>setNextReader</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>base</name></name> <operator>=</operator> <name><name>context</name><operator>.</operator><name>docBase</name></name></expr>;</expr_stmt>
   </block_content>}</block></function>
 </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>Grouping</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>Grouping</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>c46d25ea4b5</name><operator>..</operator><name>bc7e858c2ac</name> <literal type="number">100755</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>Grouping</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>Grouping</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt>
 
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name></name>;</package>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>*</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>BytesRef</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>NamedList</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">457</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">457</literal></expr><operator>,</operator><expr><literal type="number">15</literal> @@ <name>class</name> <name>FilterCollector</name> extends <name>GroupCollector</name> <block>{
   @<expr><name>Override</name>
   <specifier>public</specifier> <name>void</name> <call><name>collect</name><argument_list>(<argument><expr><name>int</name> <name>doc</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><name>matches</name><operator>++</operator></expr></block></expr></argument></throws></expr>;</block></expr></expr_stmt>
    <if_stmt><if>if <condition>(<expr><call><name><name>filter</name><operator>.</operator><name>exists</name></name><argument_list>(<argument><expr><name>doc</name> <operator>+</operator> <name>docBase</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
    <if_stmt><if>if <condition>(<expr><call><name><name>filter</name><operator>.</operator><name>exists</name></name><argument_list>(<argument><expr><name>doc</name> <operator>+</operator> <name>docBase</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><call><name><name>collector</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt></block_content></block></if></if_stmt>
   </block_content>}</block></function>
 
   <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>docBase</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>docBase</name></name> <operator>=</operator> <name>docBase</name></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>collector</name><operator>.</operator><name>setNextReader</name></name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><name>docBase</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <function><type><specifier>public</specifier> <name>void</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><name>docBase</name> <operator>=</operator> <name><name>context</name><operator>.</operator><name>docBase</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>collector</name><operator>.</operator><name>setNextReader</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
 
   <annotation>@<name>Override</name></annotation>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">685</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">686</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <name>class</name> <name>TopGroupCollector</name> extends <name>GroupCollector</name> <block>{
   }</block>
 
   @<name>Override</name>
  <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>, <argument><expr><name>int</name> <name>docBase</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><name><name>this</name><operator>.</operator><name>docBase</name></name> <operator>=</operator> <name>docBase</name></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <expr_stmt><expr><name>docValues</name> <operator>=</operator> <call><name><name>vs</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <function><type><specifier>public</specifier> <name>void</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>readerContext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>docBase</name></name> <operator>=</operator> <name><name>readerContext</name><operator>.</operator><name>docBase</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name>docValues</name> <operator>=</operator> <call><name><name>vs</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name><name>readerContext</name><operator>.</operator><name>reader</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>filler</name> <operator>=</operator> <call><name><name>docValues</name><operator>.</operator><name>getValueFiller</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>mval</name> <operator>=</operator> <call><name><name>filler</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name><name>comparators</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
      <expr_stmt><expr><name><name>comparators</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>comparators</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>setNextReader</name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><name>docBase</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
      <expr_stmt><expr><name><name>comparators</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>comparators</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>setNextReader</name><argument_list>(<argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
 
   <annotation>@<name>Override</name></annotation>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">759</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">760</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <name>class</name> <name>Phase2GroupCollector</name> extends <name>Collector</name> <block>{
   }</block>
 
   @<name>Override</name>
  <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>, <argument><expr><name>int</name> <name>docBase</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><name><name>this</name><operator>.</operator><name>docBase</name></name> <operator>=</operator> <name>docBase</name></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <expr_stmt><expr><name>docValues</name> <operator>=</operator> <call><name><name>vs</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <function><type><specifier>public</specifier> <name>void</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>readerContext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>docBase</name></name> <operator>=</operator> <name><name>readerContext</name><operator>.</operator><name>docBase</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name>docValues</name> <operator>=</operator> <call><name><name>vs</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name><name>readerContext</name><operator>.</operator><name>reader</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>filler</name> <operator>=</operator> <call><name><name>docValues</name><operator>.</operator><name>getValueFiller</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>mval</name> <operator>=</operator> <call><name><name>filler</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <for>for <control>(<init><decl><type><name>SearchGroupDocs</name></type> <name>group</name> <range>: <expr><call><name><name>groupMap</name><operator>.</operator><name>values</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control><block type="pseudo"><block_content>
      <expr_stmt><expr><call><name><name>group</name><operator>.</operator><name>collector</name><operator>.</operator><name>setNextReader</name></name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><name>docBase</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
      <expr_stmt><expr><call><name><name>group</name><operator>.</operator><name>collector</name><operator>.</operator><name>setNextReader</name></name><argument_list>(<argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
 
   <annotation>@<name>Override</name></annotation>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">812</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">813</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <name>class</name> <name>Phase2StringGroupCollector</name> extends <name>Phase2GroupCollector</name> <block>{
   }</block>
 
   @<name>Override</name>
  <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>, <argument><expr><name>int</name> <name>docBase</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><call><name><name>super</name><operator>.</operator><name>setNextReader</name></name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><name>docBase</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
  <function><type><specifier>public</specifier> <name>void</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>setNextReader</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>index</name> <operator>=</operator> <operator>(</operator><operator>(</operator><name>StringIndexDocValues</name><operator>)</operator><name>docValues</name><operator>)</operator><operator>.</operator><call><name>getDocTermsIndex</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
     <expr_stmt><expr><call><name><name>ordSet</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>MissingStringLastComparatorSource</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>MissingStringLastComparatorSource</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">815dfdbf444</literal><operator>..</operator><name>b8da084eca2</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>MissingStringLastComparatorSource</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>MissingStringLastComparatorSource</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name></name>;</package>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>*</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>BytesRef</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>packed</name><operator>.</operator><name>Direct16</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>packed</name><operator>.</operator><name>Direct32</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">101</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">102</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <name>class</name> <name>TermOrdValComparator_SML</name> extends <name>FieldComparator</name> <block>{
   }</block>
 
   @<name>Override</name>
  <specifier>public</specifier> <name>FieldComparator</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>, <argument><expr><name>int</name> <name>docBase</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr></expr_stmt>
    <return>return <expr><call><name><name>TermOrdValComparator_SML</name><operator>.</operator><name>createComparator</name></name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</return>
  <function><type><specifier>public</specifier> <name>FieldComparator</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <return>return <expr><call><name><name>TermOrdValComparator_SML</name><operator>.</operator><name>createComparator</name></name><argument_list>(<argument><expr><name><name>context</name><operator>.</operator><name>reader</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
 
   <comment type="line">// Base class for specialized (per bit width of the</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">142</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">143</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <name>class</name> <name>TermOrdValComparator_SML</name> extends <name>FieldComparator</name> <block>{
     }</block>
 
     @<name>Override</name>
    <specifier>public</specifier> <name>FieldComparator</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>, <argument><expr><name>int</name> <name>docBase</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr></expr_stmt>
      <return>return <expr><call><name><name>TermOrdValComparator_SML</name><operator>.</operator><name>createComparator</name></name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><name>parent</name></expr></argument>)</argument_list></call></expr>;</return>
    <function><type><specifier>public</specifier> <name>FieldComparator</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
      <return>return <expr><call><name><name>TermOrdValComparator_SML</name><operator>.</operator><name>createComparator</name></name><argument_list>(<argument><expr><name><name>context</name><operator>.</operator><name>reader</name></name></expr></argument>, <argument><expr><name>parent</name></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block></function>
 
     <annotation>@<name>Override</name></annotation>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SolrIndexSearcher</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SolrIndexSearcher</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>d175a712835</name><operator>..</operator><literal type="number">9a59dc78cbc</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SolrIndexSearcher</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SolrIndexSearcher</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Document</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>FieldSelector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>FieldSelectorResult</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>*</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>*</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>Directory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>FSDirectory</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">826</literal></expr><operator>,</operator><expr><literal type="number">19</literal> <operator>+</operator><literal type="number">827</literal></expr><operator>,</operator><expr><literal type="number">17</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrIndexSearcher</name> extends <name>IndexSearcher</name> implements <name>SolrInfoMBean</name> <block>{
     <if_stmt><if>if <condition>(<expr><name>filter</name><operator>==</operator><literal type="null">null</literal></expr>)</condition> <block>{<block_content>
       <if_stmt><if>if <condition>(<expr><name>query</name> <operator>instanceof</operator> <name>TermQuery</name></expr>)</condition> <block>{<block_content>
         <decl_stmt><decl><type><name>Term</name></type> <name>t</name> <init>= <expr><operator>(</operator><operator>(</operator><name>TermQuery</name><operator>)</operator><name>query</name><operator>)</operator><operator>.</operator><call><name>getTerm</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name><name>SolrIndexReader</name><index>[]</index></name></type> <name>readers</name> <init>= <expr><call><name><name>reader</name><operator>.</operator><name>getLeafReaders</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name><name>int</name><index>[]</index></name></type> <name>offsets</name> <init>= <expr><call><name><name>reader</name><operator>.</operator><name>getLeafOffsets</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier>final</specifier> <name><name>AtomicReaderContext</name><index>[]</index></name></type> <name>leaves</name> <init>= <expr><name>leafContexts</name></expr></init></decl>;</decl_stmt>
 
        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name><name>readers</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
          <decl_stmt><decl><type><name>SolrIndexReader</name></type> <name>sir</name> <init>= <expr><name><name>readers</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
          <decl_stmt><decl><type><name>int</name></type> <name>offset</name> <init>= <expr><name><name>offsets</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
          <expr_stmt><expr><call><name><name>collector</name><operator>.</operator><name>setNextReader</name></name><argument_list>(<argument><expr><name>sir</name></expr></argument>, <argument><expr><name>offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          
          <decl_stmt><decl><type><name>Fields</name></type> <name>fields</name> <init>= <expr><call><name><name>sir</name><operator>.</operator><name>fields</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name><name>leaves</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
          <decl_stmt><decl><type><specifier>final</specifier> <name>AtomicReaderContext</name></type> <name>leaf</name> <init>= <expr><name><name>leaves</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
          <decl_stmt><decl><type><specifier>final</specifier> <name>IndexReader</name></type> <name>reader</name> <init>= <expr><name><name>leaf</name><operator>.</operator><name>reader</name></name></expr></init></decl>;</decl_stmt>
          <expr_stmt><expr><call><name><name>collector</name><operator>.</operator><name>setNextReader</name></name><argument_list>(<argument><expr><name>leaf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <decl_stmt><decl><type><name>Fields</name></type> <name>fields</name> <init>= <expr><call><name><name>reader</name><operator>.</operator><name>fields</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
           <decl_stmt><decl><type><name>Terms</name></type> <name>terms</name> <init>= <expr><call><name><name>fields</name><operator>.</operator><name>terms</name></name><argument_list>(<argument><expr><call><name><name>t</name><operator>.</operator><name>field</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
           <decl_stmt><decl><type><name>BytesRef</name></type> <name>termBytes</name> <init>= <expr><call><name><name>t</name><operator>.</operator><name>bytes</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
           
          <decl_stmt><decl><type><name>Bits</name></type> <name>skipDocs</name> <init>= <expr><call><name><name>sir</name><operator>.</operator><name>getDeletedDocs</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
          <decl_stmt><decl><type><name>Bits</name></type> <name>skipDocs</name> <init>= <expr><call><name><name>reader</name><operator>.</operator><name>getDeletedDocs</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
           <decl_stmt><decl><type><name>DocsEnum</name></type> <name>docsEnum</name> <init>= <expr><ternary><condition><expr><name>terms</name><operator>==</operator><literal type="null">null</literal></expr> ?</condition><then> <expr><literal type="null">null</literal></expr> </then><else>: <expr><call><name><name>terms</name><operator>.</operator><name>docs</name></name><argument_list>(<argument><expr><name>skipDocs</name></expr></argument>, <argument><expr><name>termBytes</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></else></ternary></expr></init></decl>;</decl_stmt>
 
           <if_stmt><if>if <condition>(<expr><name>docsEnum</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1126</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">1125</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrIndexSearcher</name> extends <name>IndexSearcher</name> implements <name>SolrInfoMBean</name> <block>{
           <expr><specifier>public</specifier> <name>void</name> <call><name>collect</name><argument_list>(<argument><expr><name>int</name> <name>doc</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
             <expr><name><name>numHits</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>++</operator></expr></block></expr></argument></throws></expr>;
           }</block></expr></expr_stmt>
          <function><type><specifier>public</specifier> <name>void</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>docBase</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
          <function><type><specifier>public</specifier> <name>void</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
           </block_content>}</block></function>
           <function><type><specifier>public</specifier> <name>boolean</name></type> <name>acceptsDocsOutOfOrder</name><parameter_list>()</parameter_list> <block>{<block_content>
             <return>return <expr><literal type="boolean">true</literal></expr>;</return>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1143</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">1142</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrIndexSearcher</name> extends <name>IndexSearcher</name> implements <name>SolrInfoMBean</name> <block>{
             <expr><name>float</name> <name>score</name> <operator>=</operator> <call><name><name>scorer</name><operator>.</operator><name>score</name></name><argument_list>()</argument_list></call></expr>;</block></expr></expr_stmt>
             <if_stmt><if>if <condition>(<expr><name>score</name> <operator>&gt;</operator> <name><name>topscore</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name><name>topscore</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>=</operator><name>score</name></expr>;</expr_stmt></block_content></block></if></if_stmt>            
           </block_content>}</block></function>
          <function><type><specifier>public</specifier> <name>void</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>docBase</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
          <function><type><specifier>public</specifier> <name>void</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
           </block_content>}</block></function>
           <function><type><specifier>public</specifier> <name>boolean</name></type> <name>acceptsDocsOutOfOrder</name><parameter_list>()</parameter_list> <block>{<block_content>
             <return>return <expr><literal type="boolean">true</literal></expr>;</return>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1249</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">1248</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrIndexSearcher</name> extends <name>IndexSearcher</name> implements <name>SolrInfoMBean</name> <block>{
              <expr><name>float</name> <name>score</name> <operator>=</operator> <call><name><name>scorer</name><operator>.</operator><name>score</name></name><argument_list>()</argument_list></call></expr>;</block></expr></expr_stmt>
              <if_stmt><if>if <condition>(<expr><name>score</name> <operator>&gt;</operator> <name><name>topscore</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name><name>topscore</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>=</operator><name>score</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
            </block_content>}</block></function>
           <function><type><specifier>public</specifier> <name>void</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>docBase</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
           <function><type><specifier>public</specifier> <name>void</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
            </block_content>}</block></function>
            <function><type><specifier>public</specifier> <name>boolean</name></type> <name>acceptsDocsOutOfOrder</name><parameter_list>()</parameter_list> <block>{<block_content>
              <return>return <expr><literal type="boolean">false</literal></expr>;</return>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1570</literal></expr><operator>,</operator><expr><literal type="number">21</literal> <operator>+</operator><literal type="number">1569</literal></expr><operator>,</operator><expr><literal type="number">21</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrIndexSearcher</name> extends <name>IndexSearcher</name> implements <name>SolrInfoMBean</name> <block>{
     <expr><name>int</name> <name>base</name><operator>=</operator><literal type="number">0</literal></expr>;
     <name>int</name> <name>end</name><operator>=</operator><literal type="number">0</literal></block></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>int</name></type> <name>readerIndex</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>SolrIndexReader</name></type> <name>r</name><init>=<expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>

    
    <decl_stmt><decl><type><name>AtomicReaderContext</name></type> <name>leaf</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
 
    <while>while<condition>(<expr><call><name><name>iter</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>leafContexts</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
       <decl_stmt><decl><type><name>int</name></type> <name>doc</name> <init>= <expr><call><name><name>iter</name><operator>.</operator><name>nextDoc</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <while>while <condition>(<expr><name>doc</name><operator>&gt;=</operator><name>end</name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>r</name> <operator>=</operator> <call><name><name>reader</name><operator>.</operator><name>getLeafReaders</name></name><argument_list>()</argument_list></call><index>[<expr><operator>++</operator><name>readerIndex</name></expr>]</index></expr>;</expr_stmt>
        <expr_stmt><expr><name>base</name> <operator>=</operator> <call><name><name>reader</name><operator>.</operator><name>getLeafOffsets</name></name><argument_list>()</argument_list></call><index>[<expr><name>readerIndex</name></expr>]</index></expr>;</expr_stmt>
        <expr_stmt><expr><name>end</name> <operator>=</operator> <name>base</name> <operator>+</operator> <call><name><name>r</name><operator>.</operator><name>maxDoc</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>topCollector</name><operator>.</operator><name>setNextReader</name></name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><name>base</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>leaf</name> <operator>=</operator> <name><name>leafContexts</name><index>[<expr><name>i</name><operator>++</operator></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><name>base</name> <operator>=</operator> <name><name>leaf</name><operator>.</operator><name>docBase</name></name></expr>;</expr_stmt>
        <expr_stmt><expr><name>end</name> <operator>=</operator> <name>base</name> <operator>+</operator> <call><name><name>leaf</name><operator>.</operator><name>reader</name><operator>.</operator><name>maxDoc</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>topCollector</name><operator>.</operator><name>setNextReader</name></name><argument_list>(<argument><expr><name>leaf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <comment type="line">// we should never need to set the scorer given the settings for the collector</comment>
       </block_content>}</block></while>
       <expr_stmt><expr><call><name><name>topCollector</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><name>doc</name><operator>-</operator><name>base</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></for>

    
     <decl_stmt><decl><type><name>TopDocs</name></type> <name>topDocs</name> <init>= <expr><call><name><name>topCollector</name><operator>.</operator><name>topDocs</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>nDocs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <decl_stmt><decl><type><name>int</name></type> <name>nDocsReturned</name> <init>= <expr><name><name>topDocs</name><operator>.</operator><name>scoreDocs</name><operator>.</operator><name>length</name></name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ValueSource</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ValueSource</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">80f61f6018d</literal><operator>..</operator><literal type="number">9c1ac9724c3</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ValueSource</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ValueSource</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">187</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">187</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>ValueSource</name> implements <name>Serializable</name> <block>{
       <expr><name><name>values</name><index>[<expr><name>slot</name></expr>]</index></name> <operator>=</operator> <call><name><name>docVals</name><operator>.</operator><name>doubleVal</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;
     }</block></expr></expr_stmt>
 
    <function><type><specifier>public</specifier> <name>FieldComparator</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>docBase</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
      <expr_stmt><expr><name>docVals</name> <operator>=</operator> <call><name>getValues</name><argument_list>(<argument><expr><call><name><name>Collections</name><operator>.</operator><name>emptyMap</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <function><type><specifier>public</specifier> <name>FieldComparator</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
      <expr_stmt><expr><name>docVals</name> <operator>=</operator> <call><name>getValues</name><argument_list>(<argument><expr><call><name><name>Collections</name><operator>.</operator><name>emptyMap</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>context</name><operator>.</operator><name>reader</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <return>return <expr><name>this</name></expr>;</return>
     </block_content>}</block></function>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>update</name><operator>/</operator><name><name>UpdateHandler</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>update</name><operator>/</operator><name><name>UpdateHandler</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">4280b77f37a</literal><operator>..</operator><literal type="number">72377f2eaf1</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>update</name><operator>/</operator><name><name>UpdateHandler</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>update</name><operator>/</operator><name><name>UpdateHandler</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>update</name></name>;</package>
 
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Term</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Document</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Field</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">167</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">167</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>UpdateHandler</name> implements <name>SolrInfoMBean</name> <block>{
     }</block>
 
     @<name>Override</name>
    <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>IndexReader</name> <name>arg0</name></expr></argument>, <argument><expr><name>int</name> <name>docBase</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>arg0</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
       <expr><name><name>this</name><operator>.</operator><name>docBase</name></name> <operator>=</operator> <name>docBase</name></expr></block></expr></argument></throws></expr>;</expr_stmt>
     </block_content>}</block></function>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestDocSet</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestDocSet</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">25eda5c9259</literal><operator>..</operator><literal type="number">1e8d1377ee8</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestDocSet</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestDocSet</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">406</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">406</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestDocSet</name> extends <name>LuceneTestCase</name> <block>{
     }</block></expr></expr_stmt>
   </block_content>}</block></while>
 
  <function><type><specifier>public</specifier> <name>void</name></type> <name>doFilterTest</name><parameter_list>(<parameter><decl><type><name>SolrIndexReader</name></type> <name>reader</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
  <function><type><specifier>public</specifier> <name>void</name></type> <name>doFilterTest</name><parameter_list>(<parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
     <decl_stmt><decl><type><name>ReaderContext</name></type> <name>topLevelContext</name> <init>= <expr><call><name><name>reader</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>OpenBitSet</name></type> <name>bs</name> <init>= <expr><call><name>getRandomSet</name><argument_list>(<argument><expr><call><name><name>reader</name><operator>.</operator><name>maxDoc</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>rand</name><operator>.</operator><name>nextInt</name></name><argument_list>(<argument><expr><call><name><name>reader</name><operator>.</operator><name>maxDoc</name></name><argument_list>()</argument_list></call><operator>+</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>DocSet</name></type> <name>a</name> <init>= <expr><operator>new</operator> <call><name>BitDocSet</name><argument_list>(<argument><expr><name>bs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">450</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">450</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestDocSet</name> extends <name>LuceneTestCase</name> <block>{
 
     <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><literal type="number">5000</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
       <decl_stmt><decl><type><name>IndexReader</name></type> <name>r</name> <init>= <expr><call><name>dummyMultiReader</name><argument_list>(<argument><expr><name>maxSeg</name></expr></argument>, <argument><expr><name>maxDoc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>SolrIndexReader</name></type> <name>sir</name> <init>= <expr><operator>new</operator> <call><name>SolrIndexReader</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name>doFilterTest</name><argument_list>(<argument><expr><name>sir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>doFilterTest</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></for>
   }</block></expr></expr_stmt>
 </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestIndexSearcher</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestIndexSearcher</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">4ecd72df623</literal><operator>..</operator><literal type="number">0b5e114c257</literal> <literal type="number">100755</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestIndexSearcher</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestIndexSearcher</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@
  <operator>*</operator><operator>/</operator></expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name></name>;</package>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>ReaderUtil</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>SolrTestCaseJ4</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>request</name><operator>.</operator><name>SolrQueryRequest</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>schema</name><operator>.</operator><name>SchemaField</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">38</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">41</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestIndexSearcher</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><name>ValueSource</name> <name>vs</name> <operator>=</operator> <call><name><name>sf</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getValueSource</name><argument_list>(<argument><expr><name>sf</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;
     <name>Map</name> <name>context</name> <operator>=</operator> <call><name><name>ValueSource</name><operator>.</operator><name>newContext</name></name><argument_list>(<argument><expr><call><name><name>sqr</name><operator>.</operator><name>getSearcher</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>vs</name><operator>.</operator><name>createWeight</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name><name>sqr</name><operator>.</operator><name>getSearcher</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>SolrIndexReader</name></type> <name>sr</name> <init>= <expr><call><name><name>sqr</name><operator>.</operator><name>getSearcher</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getReader</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>idx</name> <init>= <expr><call><name><name>SolrIndexReader</name><operator>.</operator><name>readerIndex</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>, <argument><expr><call><name><name>sr</name><operator>.</operator><name>getLeafOffsets</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>base</name> <init>= <expr><call><name><name>sr</name><operator>.</operator><name>getLeafOffsets</name></name><argument_list>()</argument_list></call><index>[<expr><name>idx</name></expr>]</index></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>SolrIndexReader</name></type> <name>sub</name> <init>= <expr><call><name><name>sr</name><operator>.</operator><name>getLeafReaders</name></name><argument_list>()</argument_list></call><index>[<expr><name>idx</name></expr>]</index></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>DocValues</name></type> <name>vals</name> <init>= <expr><call><name><name>vs</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>sub</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <return>return <expr><call><name><name>vals</name><operator>.</operator><name>strVal</name></name><argument_list>(<argument><expr><name>doc</name><operator>-</operator><name>base</name></expr></argument>)</argument_list></call></expr>;</return>
    <decl_stmt><decl><type><name>ReaderContext</name></type> <name>topReaderContext</name> <init>= <expr><call><name><name>sqr</name><operator>.</operator><name>getSearcher</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTopReaderContext</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>AtomicReaderContext</name><index>[]</index></name></type> <name>leaves</name> <init>= <expr><call><name><name>ReaderUtil</name><operator>.</operator><name>leaves</name></name><argument_list>(<argument><expr><name>topReaderContext</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>idx</name> <init>= <expr><call><name><name>ReaderUtil</name><operator>.</operator><name>subIndex</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>, <argument><expr><name>leaves</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>AtomicReaderContext</name></type> <name>leaf</name> <init>= <expr><name><name>leaves</name><index>[<expr><name>idx</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>DocValues</name></type> <name>vals</name> <init>= <expr><call><name><name>vs</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name><name>leaf</name><operator>.</operator><name>reader</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <return>return <expr><call><name><name>vals</name><operator>.</operator><name>strVal</name></name><argument_list>(<argument><expr><name>doc</name><operator>-</operator><name><name>leaf</name><operator>.</operator><name>docBase</name></name></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
 
   <function><type><specifier>public</specifier> <name>void</name></type> <name>testReopen</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">53</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">56</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestIndexSearcher</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><call><name>assertU</name><argument_list>(<argument><expr><call><name>commit</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
     <name>SolrQueryRequest</name> <name>sr1</name> <operator>=</operator> <call><name>req</name><argument_list>(<argument><expr><literal type="string">"q"</literal></expr></argument>,<argument><expr><literal type="string">"foo"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>SolrIndexReader</name></type> <name>r1</name> <init>= <expr><call><name><name>sr1</name><operator>.</operator><name>getSearcher</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getReader</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>ReaderContext</name></type> <name>rCtx1</name> <init>= <expr><call><name><name>sr1</name><operator>.</operator><name>getSearcher</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTopReaderContext</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <decl_stmt><decl><type><name>String</name></type> <name>sval1</name> <init>= <expr><call><name>getStringVal</name><argument_list>(<argument><expr><name>sr1</name></expr></argument>, <argument><expr><literal type="string">"v_s"</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"string1"</literal></expr></argument>, <argument><expr><name>sval1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">63</literal></expr><operator>,</operator><expr><literal type="number">33</literal> <operator>+</operator><literal type="number">66</literal></expr><operator>,</operator><expr><literal type="number">33</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestIndexSearcher</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><call><name>assertU</name><argument_list>(<argument><expr><call><name>commit</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
     <name>SolrQueryRequest</name> <name>sr2</name> <operator>=</operator> <call><name>req</name><argument_list>(<argument><expr><literal type="string">"q"</literal></expr></argument>,<argument><expr><literal type="string">"foo"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>SolrIndexReader</name></type> <name>r2</name> <init>= <expr><call><name><name>sr2</name><operator>.</operator><name>getSearcher</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getReader</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>ReaderContext</name></type> <name>rCtx2</name> <init>= <expr><call><name><name>sr2</name><operator>.</operator><name>getSearcher</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTopReaderContext</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <comment type="line">// make sure the readers share the first segment</comment>
     <comment type="line">// Didn't work w/ older versions of lucene2.9 going from segment -&gt; multi</comment>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>r1</name><operator>.</operator><name>getLeafReaders</name></name><argument_list>()</argument_list></call><index>[<expr><literal type="number">0</literal></expr>]</index></expr></argument>, <argument><expr><call><name><name>r2</name><operator>.</operator><name>getLeafReaders</name></name><argument_list>()</argument_list></call><index>[<expr><literal type="number">0</literal></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>ReaderUtil</name><operator>.</operator><name>leaves</name></name><argument_list>(<argument><expr><name>rCtx1</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">0</literal></expr>]</index><operator>.</operator><name>reader</name></expr></argument>, <argument><expr><call><name><name>ReaderUtil</name><operator>.</operator><name>leaves</name></name><argument_list>(<argument><expr><name>rCtx2</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">0</literal></expr>]</index><operator>.</operator><name>reader</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <expr_stmt><expr><call><name>assertU</name><argument_list>(<argument><expr><call><name>adoc</name><argument_list>(<argument><expr><literal type="string">"id"</literal></expr></argument>,<argument><expr><literal type="string">"5"</literal></expr></argument>, <argument><expr><literal type="string">"v_f"</literal></expr></argument>,<argument><expr><literal type="string">"3.14159"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertU</name><argument_list>(<argument><expr><call><name>adoc</name><argument_list>(<argument><expr><literal type="string">"id"</literal></expr></argument>,<argument><expr><literal type="string">"6"</literal></expr></argument>, <argument><expr><literal type="string">"v_f"</literal></expr></argument>,<argument><expr><literal type="string">"8983"</literal></expr></argument>, <argument><expr><literal type="string">"v_s"</literal></expr></argument>,<argument><expr><literal type="string">"string6"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertU</name><argument_list>(<argument><expr><call><name>commit</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><name>SolrQueryRequest</name></type> <name>sr3</name> <init>= <expr><call><name>req</name><argument_list>(<argument><expr><literal type="string">"q"</literal></expr></argument>,<argument><expr><literal type="string">"foo"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>SolrIndexReader</name></type> <name>r3</name> <init>= <expr><call><name><name>sr3</name><operator>.</operator><name>getSearcher</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getReader</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>ReaderContext</name></type> <name>rCtx3</name> <init>= <expr><call><name><name>sr3</name><operator>.</operator><name>getSearcher</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTopReaderContext</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <comment type="line">// make sure the readers share segments</comment>
     <comment type="line">// assertEquals(r1.getLeafReaders()[0], r3.getLeafReaders()[0]);</comment>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>r2</name><operator>.</operator><name>getLeafReaders</name></name><argument_list>()</argument_list></call><index>[<expr><literal type="number">0</literal></expr>]</index></expr></argument>, <argument><expr><call><name><name>r3</name><operator>.</operator><name>getLeafReaders</name></name><argument_list>()</argument_list></call><index>[<expr><literal type="number">0</literal></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>r2</name><operator>.</operator><name>getLeafReaders</name></name><argument_list>()</argument_list></call><index>[<expr><literal type="number">1</literal></expr>]</index></expr></argument>, <argument><expr><call><name><name>r3</name><operator>.</operator><name>getLeafReaders</name></name><argument_list>()</argument_list></call><index>[<expr><literal type="number">1</literal></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>ReaderUtil</name><operator>.</operator><name>leaves</name></name><argument_list>(<argument><expr><name>rCtx2</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">0</literal></expr>]</index><operator>.</operator><name>reader</name></expr></argument>, <argument><expr><call><name><name>ReaderUtil</name><operator>.</operator><name>leaves</name></name><argument_list>(<argument><expr><name>rCtx3</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">0</literal></expr>]</index><operator>.</operator><name>reader</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>ReaderUtil</name><operator>.</operator><name>leaves</name></name><argument_list>(<argument><expr><name>rCtx2</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">1</literal></expr>]</index><operator>.</operator><name>reader</name></expr></argument>, <argument><expr><call><name><name>ReaderUtil</name><operator>.</operator><name>leaves</name></name><argument_list>(<argument><expr><name>rCtx3</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">1</literal></expr>]</index><operator>.</operator><name>reader</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <expr_stmt><expr><call><name><name>sr1</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>sr2</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>            
 
     <comment type="line">// should currently be 1, but this could change depending on future index management</comment>
    <decl_stmt><decl><type><name>int</name></type> <name>baseRefCount</name> <init>= <expr><call><name><name>r3</name><operator>.</operator><name>getRefCount</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>baseRefCount</name> <init>= <expr><call><name><name>rCtx3</name><operator>.</operator><name>reader</name><operator>.</operator><name>getRefCount</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>baseRefCount</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <expr_stmt><expr><call><name>assertU</name><argument_list>(<argument><expr><call><name>commit</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>SolrQueryRequest</name></type> <name>sr4</name> <init>= <expr><call><name>req</name><argument_list>(<argument><expr><literal type="string">"q"</literal></expr></argument>,<argument><expr><literal type="string">"foo"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>SolrIndexReader</name></type> <name>r4</name> <init>= <expr><call><name><name>sr4</name><operator>.</operator><name>getSearcher</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getReader</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>ReaderContext</name></type> <name>rCtx4</name> <init>= <expr><call><name><name>sr4</name><operator>.</operator><name>getSearcher</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTopReaderContext</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <comment type="line">// force an index change so the registered searcher won't be the one we are testing (and</comment>
     <comment type="line">// then we should be able to test the refCount going all the way to 0</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">97</literal></expr><operator>,</operator><expr><literal type="number">23</literal> <operator>+</operator><literal type="number">100</literal></expr><operator>,</operator><expr><literal type="number">23</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestIndexSearcher</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><call><name>assertU</name><argument_list>(<argument><expr><call><name>commit</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>; 
 
     <comment type="line">// test that reader didn't change (according to equals at least... which uses the wrapped reader)</comment>
    <call><name>assertEquals</name><argument_list>(<argument><expr><name>r3</name></expr></argument>,<argument><expr><name>r4</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>baseRefCount</name><operator>+</operator><literal type="number">1</literal></expr></argument>, <argument><expr><call><name><name>r4</name><operator>.</operator><name>getRefCount</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name><name>rCtx3</name><operator>.</operator><name>reader</name></name></expr></argument>, <argument><expr><name><name>rCtx4</name><operator>.</operator><name>reader</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>baseRefCount</name><operator>+</operator><literal type="number">1</literal></expr></argument>, <argument><expr><call><name><name>rCtx4</name><operator>.</operator><name>reader</name><operator>.</operator><name>getRefCount</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>sr3</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>baseRefCount</name></expr></argument>, <argument><expr><call><name><name>r4</name><operator>.</operator><name>getRefCount</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>baseRefCount</name></expr></argument>, <argument><expr><call><name><name>rCtx4</name><operator>.</operator><name>reader</name><operator>.</operator><name>getRefCount</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>sr4</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>baseRefCount</name><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><call><name><name>r4</name><operator>.</operator><name>getRefCount</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>baseRefCount</name><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><call><name><name>rCtx4</name><operator>.</operator><name>reader</name><operator>.</operator><name>getRefCount</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
 
     <decl_stmt><decl><type><name>SolrQueryRequest</name></type> <name>sr5</name> <init>= <expr><call><name>req</name><argument_list>(<argument><expr><literal type="string">"q"</literal></expr></argument>,<argument><expr><literal type="string">"foo"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>SolrIndexReader</name></type> <name>r5</name> <init>= <expr><call><name><name>sr5</name><operator>.</operator><name>getSearcher</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getReader</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>ReaderContext</name></type> <name>rCtx5</name> <init>= <expr><call><name><name>sr5</name><operator>.</operator><name>getSearcher</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTopReaderContext</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <expr_stmt><expr><call><name>assertU</name><argument_list>(<argument><expr><call><name>delI</name><argument_list>(<argument><expr><literal type="string">"1"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertU</name><argument_list>(<argument><expr><call><name>commit</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>SolrQueryRequest</name></type> <name>sr6</name> <init>= <expr><call><name>req</name><argument_list>(<argument><expr><literal type="string">"q"</literal></expr></argument>,<argument><expr><literal type="string">"foo"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>SolrIndexReader</name></type> <name>r6</name> <init>= <expr><call><name><name>sr6</name><operator>.</operator><name>getSearcher</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getReader</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><call><name><name>r6</name><operator>.</operator><name>getLeafReaders</name></name><argument_list>()</argument_list></call><index>[<expr><literal type="number">0</literal></expr>]</index><operator>.</operator><call><name>numDocs</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// only a single doc left in the first segment</comment>
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>( <argument><expr><operator>!</operator><call><name><name>r5</name><operator>.</operator><name>getLeafReaders</name></name><argument_list>()</argument_list></call><index>[<expr><literal type="number">0</literal></expr>]</index><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><call><name><name>r6</name><operator>.</operator><name>getLeafReaders</name></name><argument_list>()</argument_list></call><index>[<expr><literal type="number">0</literal></expr>]</index></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>  <comment type="line">// readers now different</comment>
    <decl_stmt><decl><type><name>ReaderContext</name></type> <name>rCtx6</name> <init>= <expr><call><name><name>sr6</name><operator>.</operator><name>getSearcher</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTopReaderContext</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><call><name><name>ReaderUtil</name><operator>.</operator><name>leaves</name></name><argument_list>(<argument><expr><name>rCtx6</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">0</literal></expr>]</index><operator>.</operator><call><name><name>reader</name><operator>.</operator><name>numDocs</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// only a single doc left in the first segment</comment>
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>( <argument><expr><operator>!</operator><call><name><name>ReaderUtil</name><operator>.</operator><name>leaves</name></name><argument_list>(<argument><expr><name>rCtx5</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">0</literal></expr>]</index><operator>.</operator><call><name><name>reader</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><call><name><name>ReaderUtil</name><operator>.</operator><name>leaves</name></name><argument_list>(<argument><expr><name>rCtx6</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">0</literal></expr>]</index><operator>.</operator><name>reader</name></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>  <comment type="line">// readers now different</comment>
 
     <expr_stmt><expr><call><name><name>sr5</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>sr6</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSort</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSort</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>c4b0c1450c7</name><operator>..</operator><literal type="number">2fe21743973</literal> <literal type="number">100755</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSort</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSort</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name></name>;</package>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>core</name><operator>.</operator><name>SimpleAnalyzer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Document</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Field</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexWriter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexWriterConfig</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">160</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">159</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSort</name> extends <name>AbstractSolrTestCase</name> <block>{
           }</block>
 
           @<name>Override</name>
          <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>, <argument><expr><name>int</name> <name>docBase</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
            <expr><call><name><name>topCollector</name><operator>.</operator><name>setNextReader</name></name><argument_list>(<argument><expr><name>reader</name></expr></argument>,<argument><expr><name>docBase</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
            <expr_stmt><expr><name><name>this</name><operator>.</operator><name>docBase</name></name> <operator>=</operator> <name>docBase</name></expr>;</expr_stmt>
          <function><type><specifier>public</specifier> <name>void</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
            <expr_stmt><expr><call><name><name>topCollector</name><operator>.</operator><name>setNextReader</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name>docBase</name> <operator>=</operator> <name><name>context</name><operator>.</operator><name>docBase</name></name></expr>;</expr_stmt>
           </block_content>}</block></function>
 
           <annotation>@<name>Override</name></annotation>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>update</name><operator>/</operator><name><name>DirectUpdateHandlerTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>update</name><operator>/</operator><name><name>DirectUpdateHandlerTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>dbe1c512ae0</name><operator>..</operator><literal type="number">242ea064b3d</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>update</name><operator>/</operator><name><name>DirectUpdateHandlerTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>update</name><operator>/</operator><name><name>DirectUpdateHandlerTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">18</literal> <operator>+</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>update</name></name>;</package>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Document</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Field</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Field</name><operator>.</operator><name>Index</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Field</name><operator>.</operator><name>Store</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>SolrTestCaseJ4</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>SolrException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>params</name><operator>.</operator><name>CommonParams</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>params</name><operator>.</operator><name>MapSolrParams</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrCore</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>request</name><operator>.</operator><name>LocalSolrQueryRequest</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>request</name><operator>.</operator><name>SolrQueryRequest</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>SolrIndexReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Before</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>BeforeClass</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">243</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">238</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>DirectUpdateHandlerTest</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><call><name>assertU</name><argument_list>(<argument><expr><call><name>commit</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
     <name>SolrQueryRequest</name> <name>sr</name> <operator>=</operator> <call><name>req</name><argument_list>(<argument><expr><literal type="string">"q"</literal></expr></argument>,<argument><expr><literal type="string">"foo"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>SolrIndexReader</name></type> <name>r</name> <init>= <expr><call><name><name>sr</name><operator>.</operator><name>getSearcher</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getReader</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>IndexReader</name></type> <name>r</name> <init>= <expr><call><name><name>sr</name><operator>.</operator><name>getSearcher</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTopReaderContext</name><argument_list>()</argument_list></call><operator>.</operator><name>reader</name></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>r</name><operator>.</operator><name>maxDoc</name></name><argument_list>()</argument_list></call> <operator>&gt;</operator> <call><name><name>r</name><operator>.</operator><name>numDocs</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>   <comment type="line">// should have deletions</comment>
     <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>r</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call><operator>.</operator><name>isAtomic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line">// more than 1 segment</comment>
     <expr_stmt><expr><call><name><name>sr</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">251</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">246</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>DirectUpdateHandlerTest</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><call><name>assertU</name><argument_list>(<argument><expr><call><name>commit</name><argument_list>(<argument><expr><literal type="string">"expungeDeletes"</literal></expr></argument>,<argument><expr><literal type="string">"true"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
     <name>sr</name> <operator>=</operator> <call><name>req</name><argument_list>(<argument><expr><literal type="string">"q"</literal></expr></argument>,<argument><expr><literal type="string">"foo"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><name>r</name> <operator>=</operator> <call><name><name>sr</name><operator>.</operator><name>getSearcher</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getReader</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>r</name> <operator>=</operator> <call><name><name>sr</name><operator>.</operator><name>getSearcher</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTopReaderContext</name><argument_list>()</argument_list></call><operator>.</operator><name>reader</name></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>r</name><operator>.</operator><name>maxDoc</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>r</name><operator>.</operator><name>numDocs</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line">// no deletions</comment>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">4</literal></expr></argument>,<argument><expr><call><name><name>r</name><operator>.</operator><name>maxDoc</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>             <comment type="line">// no dups</comment>
     <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>r</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call><operator>.</operator><name>isAtomic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line">//still more than 1 segment</comment>
<expr_stmt><expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></expr_stmt></block_content></block></function></block_content></block></function></block_content></block></function></block_content></block></function></block_content></block></function></block_content></block></if></if_stmt></block_content></block></for></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block></expr></expr_stmt></block_content></block></function></block_content></block></function></block_content></block></function></block_content></block></for></block_content></block></function></block_content></block></if></if_stmt></block_content></block></while></block_content></block></for></block_content></block></if></if_stmt>

</unit>
