<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/lucene/4e79f49f23.java"><expr_stmt><expr><name>From</name> <literal type="number">4e79f49f2382ce29b884653c73280772faf1056c</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Michael</name> <name><name>McCandless</name> <argument_list type="generic">&lt;<argument><name>mikemccand</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Sat</name></expr><operator>,</operator> <expr><literal type="number">27</literal> <name>Jan</name> <literal type="number">2007</literal> <literal type="number">20</literal><operator>:</operator><literal type="number">39</literal><operator>:</operator><literal type="number">14</literal> <operator>+</operator><literal type="number">0000</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>LUCENE</name><operator>-</operator><literal type="number">785</literal><operator>:</operator> <name>make</name> <name>RAMDirectory</name> <name>serializable</name> <name>again</name>

<name>git</name><operator>-</operator><name>svn</name><operator>-</operator><name>id</name><operator>:</operator> <name>https</name><operator>:</operator><comment type="line">//svn.apache.org/repos/asf/lucene/java/trunk@500611 13f79535-47bb-0310-9956-ffa450edef68</comment>
<operator>--</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>RAMDirectory</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">5</literal> <operator>+</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestRAMDirectory</name><operator>.</operator><name>java</name></name>     <operator>|</operator> <literal type="number">16</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>MockRAMDirectory</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">4</literal> <operator>++</operator><operator>--</operator>
 <literal type="number">3</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">19</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">6</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>RAMDirectory</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>RAMDirectory</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>a25dba28f2d</name><operator>..</operator><name>d1640ab4603</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>RAMDirectory</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>RAMDirectory</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">39</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">39</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>RAMDirectory</name> extends <name>Directory</name> implements <name>Serializable</name> <block>{
   <expr><specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name>long</name> <name>serialVersionUID</name> <operator>=</operator> <literal type="number">1l</literal></expr>;
 
   <expr><name>HashMap</name> <name>fileMap</name> <operator>=</operator> <operator>new</operator> <call><name>HashMap</name><argument_list>()</argument_list></call></expr>;
  <expr><specifier>private</specifier> <name>Set</name> <name>fileNames</name> <operator>=</operator> <call><name><name>fileMap</name><operator>.</operator><name>keySet</name></name><argument_list>()</argument_list></call></expr>;
  <expr><name>Collection</name> <name>files</name> <operator>=</operator> <call><name><name>fileMap</name><operator>.</operator><name>values</name></name><argument_list>()</argument_list></call></expr>;
   <expr><name>long</name> <name>sizeInBytes</name> <operator>=</operator> <literal type="number">0</literal></expr>;
   
   <comment type="line">// *****</comment>
@@ <expr><operator>-</operator><literal type="number">101</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">99</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>RAMDirectory</name> extends <name>Directory</name> implements <name>Serializable</name> <block>{
 
   <comment type="block" format="javadoc">/** Returns an array of strings, one for each file in the directory. */</comment>
   <expr><specifier>public</specifier> <specifier>synchronized</specifier> <name>final</name> <name><name>String</name><index>[]</index></name> <call><name>list</name><argument_list>()</argument_list></call> <block>{
    <expr><name>Set</name> <name>fileNames</name> <operator>=</operator> <call><name><name>fileMap</name><operator>.</operator><name>keySet</name></name><argument_list>()</argument_list></call></expr>;
     <expr><name><name>String</name><index>[]</index></name> <name>result</name> <operator>=</operator> <operator>new</operator> <name><name>String</name><index>[<expr><call><name><name>fileNames</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>]</index></name></expr>;
     <expr><name>int</name> <name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;
     <expr><name>Iterator</name> <name>it</name> <operator>=</operator> <call><name><name>fileNames</name><operator>.</operator><name>iterator</name></name><argument_list>()</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">230</literal></expr>,<expr><literal type="number">8</literal> <operator>+</operator><literal type="number">229</literal></expr>,<expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>RAMDirectory</name> extends <name>Directory</name> implements <name>Serializable</name> <block>{
   <comment type="block" format="javadoc">/** Closes the store to future operations, releasing associated memory. */</comment>
   <expr><specifier>public</specifier> <name>final</name> <name>void</name> <call><name>close</name><argument_list>()</argument_list></call> <block>{
     <expr><name>fileMap</name> <operator>=</operator> <literal type="null">null</literal></expr>;
    <expr><name>fileNames</name> <operator>=</operator> <literal type="null">null</literal></expr>;
    <expr><name>files</name> <operator>=</operator> <literal type="null">null</literal></expr>;
   }</block></expr>
 
 }</block>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestRAMDirectory</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestRAMDirectory</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">147aad9819b</literal><operator>..</operator><literal type="number">6bd369063aa</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestRAMDirectory</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestRAMDirectory</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">19</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">19</literal></expr>,<expr><literal type="number">10</literal> @@</expr> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>store</name></name>;</package></block></expr>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import></block></expr>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import></block></expr></expr_stmt>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>ObjectOutput</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>ObjectOutputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>ByteArrayOutputStream</name></name>;</import>

 
 <import>import <name><name>junit</name><operator>.</operator><name>framework</name><operator>.</operator><name>TestCase</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">190</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">194</literal></expr><operator>,</operator><expr><literal type="number">18</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestRAMDirectory</name> extends <name>TestCase</name> <block>{
     <expr><call><name><name>writer</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;
   }</block>
 

  <specifier>public</specifier> <name>void</name> <call><name>testSerializable</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><name>Directory</name> <name>dir</name> <operator>=</operator> <operator>new</operator> <call><name>RAMDirectory</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>ByteArrayOutputStream</name></type> <name>bos</name> <init>= <expr><operator>new</operator> <call><name>ByteArrayOutputStream</name><argument_list>(<argument><expr><literal type="number">1024</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"initially empty"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><call><name><name>bos</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>ObjectOutput</name></type> <name>out</name> <init>= <expr><operator>new</operator> <call><name>ObjectOutputStream</name><argument_list>(<argument><expr><name>bos</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>headerSize</name> <init>= <expr><call><name><name>bos</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>out</name><operator>.</operator><name>writeObject</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>out</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"contains more then just header"</literal></expr></argument>, <argument><expr><name>headerSize</name> <operator>&lt;</operator> <call><name><name>bos</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  } 

   public <function><type><name>void</name></type> <name>tearDown</name><parameter_list>()</parameter_list> <block>{<block_content>
     <comment type="line">// cleanup </comment>
     <if_stmt><if>if <condition>(<expr><name>indexDir</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>indexDir</name><operator>.</operator><name>exists</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>MockRAMDirectory</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>MockRAMDirectory</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">0333526d568</literal><operator>..</operator><name>ca1e43f3260</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>MockRAMDirectory</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>MockRAMDirectory</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">108</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">108</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>MockRAMDirectory</name> extends <name>RAMDirectory</name> <block>{
   <comment type="block" format="javadoc">/** Provided for testing purposes.  Use sizeInBytes() instead. */</comment>
   <expr><specifier>public</specifier> <specifier>synchronized</specifier> <name>final</name> <name>long</name> <call><name>getRecomputedSizeInBytes</name><argument_list>()</argument_list></call> <block>{
     <expr><name>long</name> <name>size</name> <operator>=</operator> <literal type="number">0</literal></expr>;
    <name>Iterator</name> <name>it</name> <operator>=</operator> <call><name><name>files</name><operator>.</operator><name>iterator</name></name><argument_list>()</argument_list></call></block></expr>;
    <name>Iterator</name> <name>it</name> <operator>=</operator> <call><name><name>fileMap</name><operator>.</operator><name>values</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>iterator</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <while>while <condition>(<expr><call><name><name>it</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
       <expr_stmt><expr><name>size</name> <operator>+=</operator> <operator>(</operator><operator>(</operator><name>RAMFile</name><operator>)</operator> <call><name><name>it</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call><operator>)</operator><operator>.</operator><call><name>getSizeInBytes</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></while>
     <return>return <expr><name>size</name></expr>;</return>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">122</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">122</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>MockRAMDirectory</name> extends <name>RAMDirectory</name> <block>{
 
   <expr><name>final</name> <name>long</name> <call><name>getRecomputedActualSizeInBytes</name><argument_list>()</argument_list></call> <block>{
     <expr><name>long</name> <name>size</name> <operator>=</operator> <literal type="number">0</literal></expr>;
    <name>Iterator</name> <name>it</name> <operator>=</operator> <call><name><name>files</name><operator>.</operator><name>iterator</name></name><argument_list>()</argument_list></call></block></expr>;
    <name>Iterator</name> <name>it</name> <operator>=</operator> <call><name><name>fileMap</name><operator>.</operator><name>values</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>iterator</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <while>while <condition>(<expr><call><name><name>it</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
       <expr_stmt><expr><name>size</name> <operator>+=</operator> <operator>(</operator><operator>(</operator><name>RAMFile</name><operator>)</operator> <call><name><name>it</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call><operator>)</operator><operator>.</operator><name>length</name></expr>;</expr_stmt></block_content></block></while>
     <return>return <expr><name>size</name></expr>;</return>
<expr_stmt><expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></expr_stmt></block_content></block></if></if_stmt></block_content></block></function>

</unit>
