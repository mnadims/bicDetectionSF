<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/lucene/3eb66fb19c.java"><expr_stmt><expr><name>From</name> <literal type="number">3eb66fb19ca2aa3d9dce53661f3233b6c9d3f974</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Robert</name> <name><name>Muir</name> <argument_list type="generic">&lt;<argument><name>rmuir</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Sat</name></expr><operator>,</operator> <expr><literal type="number">13</literal> <name>Sep</name> <literal type="number">2014</literal> <literal type="number">21</literal><operator>:</operator><literal type="number">46</literal><operator>:</operator><literal type="number">29</literal> <operator>+</operator><literal type="number">0000</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>LUCENE</name><operator>-</operator><literal type="number">5945</literal><operator>:</operator> <name>Full</name> <name>cutover</name> <name>to</name> <name>Path</name> <name>api</name> <name>from</name> <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>

<name>git</name><operator>-</operator><name>svn</name><operator>-</operator><name>id</name><operator>:</operator> <name>https</name><operator>:</operator><comment type="line">//svn.apache.org/repos/asf/lucene/dev/trunk@1624784 13f79535-47bb-0310-9956-ffa450edef68</comment>
<operator>--</operator>
 <name>lucene</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>                            <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>charfilter</name><operator>/</operator><name><name>MappingCharFilterFactory</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">17</literal> <operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name><name>HyphenationCompoundWordTokenFilter</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">12</literal> <operator>--</operator>
 <operator>...</operator><name><name>e43HyphenationCompoundWordTokenFilter</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">13</literal> <operator>--</operator>
 <operator>...</operator><operator>/</operator><name>compound</name><operator>/</operator><name>hyphenation</name><operator>/</operator><name><name>HyphenationTree</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">12</literal> <operator>--</operator>
 <operator>...</operator><operator>/</operator><name>compound</name><operator>/</operator><name>hyphenation</name><operator>/</operator><name><name>PatternParser</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">12</literal> <operator>--</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>core</name><operator>/</operator><name><name>StopAnalyzer</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">5</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>hunspell</name><operator>/</operator><name><name>Dictionary</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">24</literal> <operator>++</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>synonym</name><operator>/</operator><name><name>SynonymFilterFactory</name><operator>.</operator><name>java</name></name>         <operator>|</operator>  <literal type="number">13</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>util</name><operator>/</operator><name><name>FilesystemResourceLoader</name><operator>.</operator><name>java</name></name>        <operator>|</operator>  <literal type="number">35</literal> <operator>++</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>analysis</name><operator>/</operator><name>util</name><operator>/</operator><name><name>StopwordAnalyzerBase</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">9</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>analysis</name><operator>/</operator><name>ckb</name><operator>/</operator><name><name>TestSoraniStemFilter</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>analysis</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestRandomChains</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  <literal type="number">41</literal> <operator>++</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>de</name><operator>/</operator><name><name>TestGermanLightStemFilter</name><operator>.</operator><name>java</name></name>         <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>de</name><operator>/</operator><name><name>TestGermanMinimalStemFilter</name><operator>.</operator><name>java</name></name>       <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>en</name><operator>/</operator><name><name>TestKStemmer</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>analysis</name><operator>/</operator><name>en</name><operator>/</operator><name><name>TestPorterStemFilter</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>es</name><operator>/</operator><name><name>TestSpanishLightStemFilter</name><operator>.</operator><name>java</name></name>        <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>fi</name><operator>/</operator><name><name>TestFinnishLightStemFilter</name><operator>.</operator><name>java</name></name>        <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>fr</name><operator>/</operator><name><name>TestFrenchLightStemFilter</name><operator>.</operator><name>java</name></name>         <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>fr</name><operator>/</operator><name><name>TestFrenchMinimalStemFilter</name><operator>.</operator><name>java</name></name>       <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>analysis</name><operator>/</operator><name>gl</name><operator>/</operator><name><name>TestGalicianStemFilter</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>hu</name><operator>/</operator><name><name>TestHungarianLightStemFilter</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">3</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>analysis</name><operator>/</operator><name>hunspell</name><operator>/</operator><name><name>Test64kAffixes</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">22</literal> <operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>hunspell</name><operator>/</operator><name><name>TestAllDictionaries</name><operator>.</operator><name>java</name></name>         <operator>|</operator>  <literal type="number">20</literal> <operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>hunspell</name><operator>/</operator><name><name>TestAllDictionaries2</name><operator>.</operator><name>java</name></name>        <operator>|</operator>  <literal type="number">19</literal> <operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>it</name><operator>/</operator><name><name>TestItalianLightStemFilter</name><operator>.</operator><name>java</name></name>        <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>no</name><operator>/</operator><name><name>TestNorwegianLightStemFilter</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">5</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>no</name><operator>/</operator><name><name>TestNorwegianMinimalStemFilter</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">5</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>pt</name><operator>/</operator><name><name>TestPortugueseLightStemFilter</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>pt</name><operator>/</operator><name><name>TestPortugueseMinimalStemFilter</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>analysis</name><operator>/</operator><name>pt</name><operator>/</operator><name><name>TestPortugueseStemFilter</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>ru</name><operator>/</operator><name><name>TestRussianLightStemFilter</name><operator>.</operator><name>java</name></name>        <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>analysis</name><operator>/</operator><name>snowball</name><operator>/</operator><name><name>TestSnowballVocab</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>sv</name><operator>/</operator><name><name>TestSwedishLightStemFilter</name><operator>.</operator><name>java</name></name>        <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>util</name><operator>/</operator><name><name>TestFilesystemResourceLoader</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">18</literal> <operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>ja</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TokenInfoDictionaryWriter</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">10</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>analysis</name><operator>/</operator><name>cn</name><operator>/</operator><name>smart</name><operator>/</operator><name><name>AnalyzerProfile</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">40</literal> <operator>++</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>cn</name><operator>/</operator><name>smart</name><operator>/</operator><name>hhmm</name><operator>/</operator><name><name>BigramDictionary</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  <literal type="number">24</literal> <operator>++</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>cn</name><operator>/</operator><name>smart</name><operator>/</operator><name>hhmm</name><operator>/</operator><name><name>WordDictionary</name><operator>.</operator><name>java</name></name>         <operator>|</operator>  <literal type="number">24</literal> <operator>++</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>egothor</name><operator>/</operator><name>stemmer</name><operator>/</operator><name><name>Compile</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">14</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>egothor</name><operator>/</operator><name>stemmer</name><operator>/</operator><name><name>DiffIt</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">8</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>egothor</name><operator>/</operator><name>stemmer</name><operator>/</operator><name><name>TestCompile</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">89</literal> <operator>++</operator><operator>++</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>index</name><operator>/</operator><name><name>TestBackwardsCompatibility</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">34</literal> <operator>++</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name><name>Benchmark</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">16</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name><name>PerfRunData</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">12</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>byTask</name><operator>/</operator><name>feeds</name><operator>/</operator><name><name>ContentItemsSource</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">32</literal> <operator>++</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>byTask</name><operator>/</operator><name>feeds</name><operator>/</operator><name><name>DirContentSource</name><operator>.</operator><name>java</name></name>        <operator>|</operator>  <literal type="number">90</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>byTask</name><operator>/</operator><name>feeds</name><operator>/</operator><name><name>EnwikiContentSource</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">7</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>byTask</name><operator>/</operator><name>feeds</name><operator>/</operator><name><name>FileBasedQueryMaker</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">9</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>feeds</name><operator>/</operator><name><name>LineDocSource</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">7</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>byTask</name><operator>/</operator><name>feeds</name><operator>/</operator><name><name>ReutersContentSource</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">35</literal> <operator>++</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>byTask</name><operator>/</operator><name>feeds</name><operator>/</operator><name><name>TrecContentSource</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  <literal type="number">26</literal> <operator>++</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>feeds</name><operator>/</operator><name><name>TrecDocParser</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">8</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>byTask</name><operator>/</operator><name>tasks</name><operator>/</operator><name><name>AddIndexesTask</name><operator>.</operator><name>java</name></name>          <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>byTask</name><operator>/</operator><name>tasks</name><operator>/</operator><name><name>AnalyzerFactoryTask</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">10</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>byTask</name><operator>/</operator><name>tasks</name><operator>/</operator><name><name>CreateIndexTask</name><operator>.</operator><name>java</name></name>         <operator>|</operator>   <literal type="number">9</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>byTask</name><operator>/</operator><name>tasks</name><operator>/</operator><name><name>WriteEnwikiLineDocTask</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">12</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>byTask</name><operator>/</operator><name>tasks</name><operator>/</operator><name><name>WriteLineDocTask</name><operator>.</operator><name>java</name></name>        <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>utils</name><operator>/</operator><name><name>StreamUtils</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">19</literal> <operator>++</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>benchmark</name><operator>/</operator><name>quality</name><operator>/</operator><name>trec</name><operator>/</operator><name><name>QueryDriver</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">15</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>quality</name><operator>/</operator><name>utils</name><operator>/</operator><name><name>QualityQueriesFinder</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>benchmark</name><operator>/</operator><name>utils</name><operator>/</operator><name><name>ExtractReuters</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  <literal type="number">70</literal> <operator>++</operator><operator>++</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>benchmark</name><operator>/</operator><name>utils</name><operator>/</operator><name><name>ExtractWikipedia</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">50</literal> <operator>++</operator><operator>+</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name><name>BenchmarkTestCase</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">27</literal> <operator>++</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name><name>TestPerfTasksLogic</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">18</literal> <operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name><name>TestPerfTasksParse</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">28</literal> <operator>++</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>feeds</name><operator>/</operator><name><name>DocMakerTest</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">9</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>byTask</name><operator>/</operator><name>feeds</name><operator>/</operator><name><name>LineDocSourceTest</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  <literal type="number">40</literal> <operator>++</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>byTask</name><operator>/</operator><name>feeds</name><operator>/</operator><name><name>TrecContentSourceTest</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">9</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>byTask</name><operator>/</operator><name>tasks</name><operator>/</operator><name><name>AddIndexesTaskTest</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">8</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>byTask</name><operator>/</operator><name>tasks</name><operator>/</operator><name><name>CreateIndexTaskTest</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">9</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>tasks</name><operator>/</operator><name><name>WriteEnwikiLineDocTaskTest</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">20</literal> <operator>++</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>byTask</name><operator>/</operator><name>tasks</name><operator>/</operator><name><name>WriteLineDocTaskTest</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">58</literal> <operator>++</operator><operator>+</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>byTask</name><operator>/</operator><name>utils</name><operator>/</operator><name><name>StreamUtilsTest</name><operator>.</operator><name>java</name></name>         <operator>|</operator>  <literal type="number">37</literal> <operator>++</operator><operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>benchmark</name><operator>/</operator><name>quality</name><operator>/</operator><name><name>TestQualityRun</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <name>lucene</name><operator>/</operator><name>common</name><operator>-</operator><name><name>build</name><operator>.</operator><name>xml</name></name>                       <operator>|</operator>  <literal type="number">19</literal> <operator>++</operator><operator>-</operator>
 <name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name><name>build</name><operator>.</operator><name>xml</name></name>                         <operator>|</operator>   <literal type="number">5</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>CheckIndex</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">8</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>DirectoryReader</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">21</literal> <operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>IndexFileDeleter</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">9</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>IndexUpgrader</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">8</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>SegmentInfos</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">11</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>Directory</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>FSDirectory</name><operator>.</operator><name>java</name></name>  <operator>|</operator> <literal type="number">110</literal> <operator>++</operator><operator>++</operator><operator>+</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>FSLockFactory</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">13</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>FileSwitchDirectory</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">15</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>LockStressTest</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">5</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>MMapDirectory</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">20</literal> <operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>NIOFSDirectory</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">10</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>NRTCachingDirectory</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">24</literal> <operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>NativeFSLockFactory</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">55</literal> <operator>++</operator><operator>+</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>store</name><operator>/</operator><name><name>NoSuchDirectoryException</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  <literal type="number">31</literal> <operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>SimpleFSDirectory</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  <literal type="number">11</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>SimpleFSLockFactory</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">56</literal> <operator>++</operator><operator>+</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>CommandLineUtil</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">22</literal> <operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>IOUtils</name><operator>.</operator><name>java</name></name>  <operator>|</operator> <literal type="number">140</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>OfflineSorter</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">76</literal> <operator>++</operator><operator>++</operator><operator>--</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name>fst</name><operator>/</operator><name><name>FST</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">36</literal> <operator>+</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestAtomicUpdate</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">3</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestCompoundFile</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>index</name><operator>/</operator><name><name>TestCrashCausesCorruptIndex</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestDirectoryReader</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">20</literal> <operator>++</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestDoc</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">28</literal> <operator>++</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestFieldsReader</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">5</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexWriterOnJRECrash</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">61</literal> <operator>++</operator><operator>++</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestNeverDelete</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestBufferedIndexInput</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">23</literal> <operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestDirectory</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">17</literal> <operator>++</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestFileSwitchDirectory</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">19</literal> <operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestLockFactory</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">26</literal> <operator>++</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestMmapDirectory</name><operator>.</operator><name>java</name></name>       <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestMultiMMap</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">7</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestNIOFSDirectory</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestNRTCachingDirectory</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestRAMDirectory</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">19</literal> <operator>++</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>TestRateLimitedDirectoryWrapper</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestSimpleFSDirectory</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestWindowsMMap</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestOfflineSorter</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">25</literal> <operator>++</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name>fst</name><operator>/</operator><name><name>TestFSTs</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">33</literal> <operator>++</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>TestLeaveFilesIfTestFails</name><operator>.</operator><name>java</name></name>            <operator>|</operator>  <literal type="number">22</literal> <operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>demo</name><operator>/</operator><name><name>IndexFiles</name><operator>.</operator><name>java</name></name>    <operator>|</operator> <literal type="number">135</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>demo</name><operator>/</operator><name><name>SearchFiles</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">9</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>demo</name><operator>/</operator><name><name>TestDemo</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">11</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>facet</name><operator>/</operator><name>taxonomy</name><operator>/</operator><name><name>PrintTaxonomyStats</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>directory</name><operator>/</operator><name><name>DirectoryTaxonomyWriter</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">15</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>writercache</name><operator>/</operator><name><name>CompactLabelToOrdinal</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">16</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>writercache</name><operator>/</operator><name><name>TestCharBlockArray</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  <literal type="number">13</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>TestCompactLabelToOrdinal</name><operator>.</operator><name>java</name></name>            <operator>|</operator>   <literal type="number">9</literal> <operator>+</operator><operator>-</operator>
 <name>lucene</name><operator>/</operator><name>misc</name><operator>/</operator><name><name>build</name><operator>.</operator><name>xml</name></name>                         <operator>|</operator>   <literal type="number">5</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>CompoundFileExtractor</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">18</literal> <operator>++</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>IndexSplitter</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">43</literal> <operator>++</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>MultiPassIndexSplitter</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">18</literal> <operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>misc</name><operator>/</operator><name><name>GetTermInfo</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>misc</name><operator>/</operator><name><name>HighFreqTerms</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>misc</name><operator>/</operator><name><name>IndexMergeTool</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>NativeUnixDirectory</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">16</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>WindowsDirectory</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">14</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexSplitter</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  <literal type="number">14</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>PerSessionDirectoryFactory</name><operator>.</operator><name>java</name></name>           <operator>|</operator>  <literal type="number">21</literal> <operator>++</operator><operator>-</operator>
 <operator>...</operator><name><name>IndexAndTaxonomyReplicationClientTest</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>replicator</name><operator>/</operator><name>http</name><operator>/</operator><name><name>HttpReplicatorTest</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>search</name><operator>/</operator><name>spell</name><operator>/</operator><name><name>PlainTextDictionary</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">9</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>search</name><operator>/</operator><name>suggest</name><operator>/</operator><name><name>SortedInputIterator</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">13</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>analyzing</name><operator>/</operator><name><name>AnalyzingInfixSuggester</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>suggest</name><operator>/</operator><name>analyzing</name><operator>/</operator><name><name>AnalyzingSuggester</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">10</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>suggest</name><operator>/</operator><name>analyzing</name><operator>/</operator><name><name>FreeTextSuggester</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">3</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>search</name><operator>/</operator><name>suggest</name><operator>/</operator><name>fst</name><operator>/</operator><name><name>ExternalRefSorter</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">14</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>suggest</name><operator>/</operator><name>fst</name><operator>/</operator><name><name>FSTCompletionLookup</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">14</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>jaspell</name><operator>/</operator><name><name>JaspellTernarySearchTrie</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">17</literal> <operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>search</name><operator>/</operator><name>suggest</name><operator>/</operator><name><name>PersistenceTest</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  <literal type="number">11</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>AnalyzingInfixSuggesterTest</name><operator>.</operator><name>java</name></name>          <operator>|</operator>  <literal type="number">12</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>analyzing</name><operator>/</operator><name><name>AnalyzingSuggesterTest</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">32</literal> <operator>++</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>analyzing</name><operator>/</operator><name><name>BlendedInfixSuggesterTest</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">10</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>analyzing</name><operator>/</operator><name><name>TestFreeTextSuggester</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">14</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>search</name><operator>/</operator><name>suggest</name><operator>/</operator><name>fst</name><operator>/</operator><name><name>LargeInputFST</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">17</literal> <operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>analysis</name><operator>/</operator><name><name>BaseTokenStreamTestCase</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">7</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name><name>VocabularyAssert</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">12</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>index</name><operator>/</operator><name><name>BasePostingsFormatTestCase</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">5</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>ThreadedIndexingAndSearchingTestCase</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">3</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>BaseDirectoryTestCase</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">22</literal> <operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>LineFileDocs</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">18</literal> <operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>LuceneTestCase</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">49</literal> <operator>++</operator><operator>+</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>RemoveUponClose</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">15</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>util</name><operator>/</operator><name><name>TestRuleTemporaryFilesCleanup</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">86</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestUtil</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">29</literal> <operator>++</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name>fst</name><operator>/</operator><name><name>FSTTester</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <name>lucene</name><operator>/</operator><name>tools</name><operator>/</operator><name>forbiddenApis</name><operator>/</operator><name><name>lucene</name><operator>.</operator><name>txt</name></name>         <operator>|</operator>  <literal type="number">20</literal> <operator>++</operator><operator>+</operator>
 <operator>...</operator><operator>/</operator><name><name>TestFoldingMultitermExtrasQuery</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>TestICUCollationField</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>TestICUCollationFieldDocValues</name><operator>.</operator><name>java</name></name>       <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>schema</name><operator>/</operator><name><name>TestICUCollationFieldOptions</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>AbstractClusteringTestCase</name><operator>.</operator><name>java</name></name>           <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>AbstractDataImportHandlerTestCase</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>AbstractSqlEntityProcessorTestCase</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>TestContentStreamDataSource</name><operator>.</operator><name>java</name></name>          <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>TestDocBuilder2</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>TestFileListEntityProcessor</name><operator>.</operator><name>java</name></name>          <operator>|</operator>   <literal type="number">8</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>TestFileListWithLineEntityProcessor</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>TestNonWritablePersistFile</name><operator>.</operator><name>java</name></name>           <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>TestSimplePropertiesWriter</name><operator>.</operator><name>java</name></name>           <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>TestSolrEntityProcessorEndToEnd</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>TestXPathEntityProcessor</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>TestZKPropertiesWriter</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>MRUnitBase</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><name><name>apReduceIndexerToolArgumentParserTest</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>MorphlineBasicMiniMRTest</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>MorphlineGoLiveMiniMRTest</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name><name>AbstractSolrMorphlineTestBase</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name><name>AbstractSolrMorphlineZkTestBase</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>CachingDirectoryFactory</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>MMapDirectoryFactory</name><operator>.</operator><name>java</name></name>       <operator>|</operator>   <literal type="number">5</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>NIOFSDirectoryFactory</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>NRTCachingDirectoryFactory</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SimpleFSDirectoryFactory</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrDeletionPolicy</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>StandardDirectoryFactory</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>SnapPuller</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>SnapShooter</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">8</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>spelling</name><operator>/</operator><name><name>AbstractLuceneSpellChecker</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>spelling</name><operator>/</operator><name><name>IndexBasedSpellChecker</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>fst</name><operator>/</operator><name><name>AnalyzingInfixLookupFactory</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>fst</name><operator>/</operator><name><name>BlendedInfixLookupFactory</name><operator>.</operator><name>java</name></name>        <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>store</name><operator>/</operator><name>blockcache</name><operator>/</operator><name><name>BlockDirectory</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name><name>AnalysisAfterCoreReloadTest</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>SolrTestCaseJ4Test</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>TestSolrCoreProperties</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>TestTolerantSearch</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>BasicDistributedZk2Test</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>BasicDistributedZkTest</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">8</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ClusterStateUpdateTest</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>CollectionsAPIDistributedZkTest</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">8</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ConnectionManagerTest</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>cloud</name><operator>/</operator><name><name>LeaderElectionIntegrationTest</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>LeaderElectionTest</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>OverseerTest</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">18</literal> <operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name><name>SharedFSAutoReplicaFailoverTest</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>SolrXmlInZkTest</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestLeaderElectionZkExpiry</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestMiniSolrCloudCluster</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestMultiCoreConfBootstrap</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestZkChroot</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>UnloadDistributedZkTest</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ZkCLITest</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">8</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ZkControllerTest</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">8</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ZkSolrClientTest</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsBasicDistributedZk2Test</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsBasicDistributedZkTest</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsChaosMonkeySafeLeaderTest</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>HdfsCollectionsAPIDistributedZkTest</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsRecoveryZkTest</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsSyncSliceTest</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsUnloadDistributedZkTest</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>HdfsWriteToMultipleCollectionsTest</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>StressHdfsTest</name><operator>.</operator><name>java</name></name>       <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>AlternateDirectoryTest</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>CoreContainerCoreInitFailuresTest</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>OpenCloseCoreStressTest</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>ResourceLoaderTest</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrCoreCheckLockOnStartupTest</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrCoreTest</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestArbitraryIndexDir</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestConfigSets</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestCoreContainer</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">10</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestCoreDiscovery</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestLazyCores</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestSolrXml</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestSolrXmlPersistence</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestSolrXmlPersistor</name><operator>.</operator><name>java</name></name>       <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>TestCSVLoader</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>TestReplicationHandler</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">10</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>handler</name><operator>/</operator><name><name>TestReplicationHandlerBackup</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">11</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>admin</name><operator>/</operator><name><name>CoreAdminCreateDiscoverTest</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>CoreAdminHandlerTest</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>admin</name><operator>/</operator><name><name>CoreAdminRequestStatusTest</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>CoreMergeIndexesAdminHandlerTest</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>DistributedDebugComponentTest</name><operator>.</operator><name>java</name></name>        <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>request</name><operator>/</operator><name><name>TestRemoteStreaming</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>rest</name><operator>/</operator><name><name>TestManagedResourceStorage</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>rest</name><operator>/</operator><name><name>TestRestManager</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><name><name>TestManagedSchemaDynamicFieldResource</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>TestManagedSchemaFieldResource</name><operator>.</operator><name>java</name></name>       <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>TestManagedSchemaFieldTypeResource</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>TestManagedStopFilterFactory</name><operator>.</operator><name>java</name></name>         <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>TestManagedSynonymFilterFactory</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>ChangedSchemaMergeTest</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>ModifyConfFileTest</name><operator>.</operator><name>java</name></name>       <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>TestBinaryField</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>TestCollationField</name><operator>.</operator><name>java</name></name>       <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>schema</name><operator>/</operator><name><name>TestCollationFieldDocValues</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>TestManagedSchema</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestAddFieldRealTimeGet</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestRecoveryHdfs</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSearcherReuse</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>servlet</name><operator>/</operator><name><name>CacheHeaderTest</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>servlet</name><operator>/</operator><name><name>ResponseHeaderTest</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>spelling</name><operator>/</operator><name><name>FileBasedSpellCheckerTest</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>spelling</name><operator>/</operator><name><name>IndexBasedSpellCheckerTest</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">10</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>store</name><operator>/</operator><name>blockcache</name><operator>/</operator><name><name>BlockDirectoryTest</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">10</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>store</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsDirectoryTest</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>store</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsLockFactoryTest</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>update</name><operator>/</operator><name><name>SolrIndexSplitterTest</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">8</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><name><name>chemaFieldsUpdateProcessorFactoryTest</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solrj</name><operator>/</operator><name><name>MergeIndexesExampleTestBase</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solrj</name><operator>/</operator><name><name>MultiCoreExampleTestBase</name><operator>.</operator><name>java</name></name>       <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solrj</name><operator>/</operator><name><name>SolrSchemalessExampleTest</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>client</name><operator>/</operator><name>solrj</name><operator>/</operator><name><name>TestLBHttpSolrServer</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>AbstractEmbeddedSolrServerTestCase</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solrj</name><operator>/</operator><name>embedded</name><operator>/</operator><name><name>JettyWebappTest</name><operator>.</operator><name>java</name></name>       <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>client</name><operator>/</operator><name>solrj</name><operator>/</operator><name>request</name><operator>/</operator><name><name>SolrPingTest</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>client</name><operator>/</operator><name>solrj</name><operator>/</operator><name>request</name><operator>/</operator><name><name>TestCoreAdmin</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>common</name><operator>/</operator><name>util</name><operator>/</operator><name><name>ContentStreamTest</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name><name>BaseDistributedSearchTestCase</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>SolrJettyTestBase</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>SolrTestCaseJ4</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">7</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>cloud</name><operator>/</operator><name><name>AbstractFullDistribZkTestBase</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>AbstractZkTestCase</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>MockFSDirectoryFactory</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">5</literal> <operator>+</operator><operator>-</operator>
 <literal type="number">299</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">1659</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">1951</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>
 <name>delete</name> <name>mode</name> <literal type="number">100644</literal> <name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>NoSuchDirectoryException</name><operator>.</operator><name>java</name></name>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>lucene</name><operator>/</operator><name>tools</name><operator>/</operator><name>forbiddenApis</name><operator>/</operator><name><name>lucene</name><operator>.</operator><name>txt</name></name>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
<name>index</name> <literal type="number">44f38b4f0ea</literal><operator>..</operator><name>fb754189dbe</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
@@ <operator>-</operator><literal type="number">7</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">7</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <name>http</name><operator>:</operator><comment type="line">//s.apache.org/luceneversions</comment>
 
 <name>New</name> <name>Features</name>
 
<operator>*</operator> <name>LUCENE</name><operator>-</operator><literal type="number">5945</literal><operator>:</operator> <name>All</name> <name>file</name> <name>handling</name> <name>converted</name> <name>to</name> <name>NIO</name><literal type="number">.2</literal> <name><name>apis</name><operator>.</operator></name> (<name>Robert</name> <name>Muir</name></expr></expr_stmt>)

 <expr_stmt><expr><operator>*</operator> <name>SOLR</name><operator>-</operator><literal type="number">3359</literal><operator>:</operator> <name>Added</name> <name>analyzer</name> <name>attribute</name><operator>/</operator><name>property</name> <name>to</name> <name><name>SynonymFilterFactory</name><operator>.</operator></name>
   (<name>Ryo</name> <name>Onodera</name> <name>via</name> <name>Koji</name> <name>Sekiguchi</name></expr></expr_stmt>)
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>charfilter</name><operator>/</operator><name><name>MappingCharFilterFactory</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>charfilter</name><operator>/</operator><name><name>MappingCharFilterFactory</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">29c115270db</literal><operator>..</operator><name>f3948d6681b</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>charfilter</name><operator>/</operator><name><name>MappingCharFilterFactory</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>charfilter</name><operator>/</operator><name><name>MappingCharFilterFactory</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>charfilter</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>Reader</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">59</literal></expr><operator>,</operator><expr><literal type="number">21</literal> <operator>+</operator><literal type="number">58</literal></expr><operator>,</operator><expr><literal type="number">15</literal> @@ <specifier>public</specifier> <name>class</name> <name>MappingCharFilterFactory</name> extends <name>CharFilterFactory</name> implements</expr></expr_stmt>
     }
   }
 
  <comment type="line">// TODO: this should use inputstreams from the loader, not File!</comment>
   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>public</specifier> <name>void</name></type> <name>inform</name><parameter_list>(<parameter><decl><type><name>ResourceLoader</name></type> <name>loader</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
     <if_stmt><if>if <condition>(<expr><name>mapping</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
       <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>wlist</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>File</name></type> <name>mappingFile</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>mapping</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><call><name><name>mappingFile</name><operator>.</operator><name>exists</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>wlist</name> <operator>=</operator> <call><name>getLines</name><argument_list>(<argument><expr><name>loader</name></expr></argument>, <argument><expr><name>mapping</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if> <else>else <block>{<block_content>
        <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>files</name> <init>= <expr><call><name>splitFileNames</name><argument_list>(<argument><expr><name>mapping</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name>wlist</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <for>for <control>(<init><decl><type><name>String</name></type> <name>file</name> <range>: <expr><name>files</name></expr></range></decl></init>)</control> <block>{<block_content>
          <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>lines</name> <init>= <expr><call><name>getLines</name><argument_list>(<argument><expr><name>loader</name></expr></argument>, <argument><expr><call><name><name>file</name><operator>.</operator><name>trim</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <expr_stmt><expr><call><name><name>wlist</name><operator>.</operator><name>addAll</name></name><argument_list>(<argument><expr><name>lines</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
      <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>files</name> <init>= <expr><call><name>splitFileNames</name><argument_list>(<argument><expr><name>mapping</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><name>wlist</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <for>for <control>(<init><decl><type><name>String</name></type> <name>file</name> <range>: <expr><name>files</name></expr></range></decl></init>)</control> <block>{<block_content>
        <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>lines</name> <init>= <expr><call><name>getLines</name><argument_list>(<argument><expr><name>loader</name></expr></argument>, <argument><expr><call><name><name>file</name><operator>.</operator><name>trim</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>wlist</name><operator>.</operator><name>addAll</name></name><argument_list>(<argument><expr><name>lines</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></for>
       <decl_stmt><decl><type><specifier>final</specifier> <name><name>NormalizeCharMap</name><operator>.</operator><name>Builder</name></name></type> <name>builder</name> <init>= <expr><operator>new</operator> <call><name><name>NormalizeCharMap</name><operator>.</operator><name>Builder</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name>parseRules</name><argument_list>(<argument><expr><name>wlist</name></expr></argument>, <argument><expr><name>builder</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>compound</name><operator>/</operator><name><name>HyphenationCompoundWordTokenFilter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>compound</name><operator>/</operator><name><name>HyphenationCompoundWordTokenFilter</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">674bd813b26</literal><operator>..</operator><literal type="number">1ad61daff2e</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>compound</name><operator>/</operator><name><name>HyphenationCompoundWordTokenFilter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>compound</name><operator>/</operator><name><name>HyphenationCompoundWordTokenFilter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">119</literal></expr><operator>,</operator><expr><literal type="number">18</literal> <operator>+</operator><literal type="number">119</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>HyphenationCompoundWordTokenFilter</name> extends</expr></expr_stmt>
     <return>return <expr><call><name>getHyphenationTree</name><argument_list>(<argument><expr><operator>new</operator> <call><name>InputSource</name><argument_list>(<argument><expr><name>hyphenationFilename</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></else></if_stmt>
 
  <comment type="block" format="javadoc">/**
   * Create a hyphenator tree
   *
   * @param hyphenationFile the file of the XML grammar to load
   * @return An object representing the hyphenation patterns
   * @throws java.io.IOException If there is a low-level I/O error.
   */</comment>
  <function><type><specifier>public</specifier> <specifier>static</specifier> <name>HyphenationTree</name></type> <name>getHyphenationTree</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>hyphenationFile</name></decl></parameter>)</parameter_list>
      <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <return>return <expr><call><name>getHyphenationTree</name><argument_list>(<argument><expr><operator>new</operator> <call><name>InputSource</name><argument_list>(<argument><expr><call><name><name>hyphenationFile</name><operator>.</operator><name>toURI</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toASCIIString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

   <comment type="block" format="javadoc">/**
    * Create a hyphenator tree
    *
diff --git a/lucene/analysis/common/src/java/org/apache/lucene/analysis/compound/Lucene43HyphenationCompoundWordTokenFilter.java b/lucene/analysis/common/src/java/org/apache/lucene/analysis/compound/Lucene43HyphenationCompoundWordTokenFilter.java
index 3cc97ba8a2d..050dcf89d93 100644
-- a/lucene/analysis/common/src/java/org/apache/lucene/analysis/compound/Lucene43HyphenationCompoundWordTokenFilter.java
++ b/lucene/analysis/common/src/java/org/apache/lucene/analysis/compound/Lucene43HyphenationCompoundWordTokenFilter.java
@@ -17,7 +17,6 @@ package org.apache.lucene.analysis.compound;
  * limitations under the License.
  */</comment>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>TokenFilter</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">120</literal></expr><operator>,</operator><expr><literal type="number">18</literal> <operator>+</operator><literal type="number">119</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>Lucene43HyphenationCompoundWordTokenFilter</name> extends</expr></expr_stmt>
     <return>return <expr><call><name>getHyphenationTree</name><argument_list>(<argument><expr><operator>new</operator> <call><name>InputSource</name><argument_list>(<argument><expr><name>hyphenationFilename</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></if></if_stmt>
 
  <comment type="block" format="javadoc">/**
   * Create a hyphenator tree
   * 
   * @param hyphenationFile the file of the XML grammar to load
   * @return An object representing the hyphenation patterns
   * @throws IOException If there is a low-level I/O error.
   */</comment>
  <function><type><specifier>public</specifier> <specifier>static</specifier> <name>HyphenationTree</name></type> <name>getHyphenationTree</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>hyphenationFile</name></decl></parameter>)</parameter_list>
      <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <return>return <expr><call><name>getHyphenationTree</name><argument_list>(<argument><expr><operator>new</operator> <call><name>InputSource</name><argument_list>(<argument><expr><call><name><name>hyphenationFile</name><operator>.</operator><name>toURI</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toASCIIString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

   <comment type="block" format="javadoc">/**
    * Create a hyphenator tree
    * 
diff --git a/lucene/analysis/common/src/java/org/apache/lucene/analysis/compound/hyphenation/HyphenationTree.java b/lucene/analysis/common/src/java/org/apache/lucene/analysis/compound/hyphenation/HyphenationTree.java
index 4ba5f27ae50..62f6426d2a3 100644
-- a/lucene/analysis/common/src/java/org/apache/lucene/analysis/compound/hyphenation/HyphenationTree.java
++ b/lucene/analysis/common/src/java/org/apache/lucene/analysis/compound/hyphenation/HyphenationTree.java
@@ -17,7 +17,6 @@
 
 package org.apache.lucene.analysis.compound.hyphenation;
 
import java.io.File;
 import java.io.IOException;
 import java.io.PrintStream;
 import java.util.ArrayList;
@@ -104,17 +103,6 @@ public class HyphenationTree extends TernaryTree implements PatternConsumer {
     return buf.toString();
   }
 
  /**
   * Read hyphenation patterns from an XML file.
   * 
   * @param f the filename
   * @throws IOException In case the parsing fails
   */</comment>
  <function><type><specifier>public</specifier> <name>void</name></type> <name>loadPatterns</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>f</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>InputSource</name></type> <name>src</name> <init>= <expr><operator>new</operator> <call><name>InputSource</name><argument_list>(<argument><expr><call><name><name>f</name><operator>.</operator><name>toURI</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toASCIIString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>loadPatterns</name><argument_list>(<argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

   <comment type="block" format="javadoc">/**
    * Read hyphenation patterns from an XML file.
    * 
diff --git a/lucene/analysis/common/src/java/org/apache/lucene/analysis/compound/hyphenation/PatternParser.java b/lucene/analysis/common/src/java/org/apache/lucene/analysis/compound/hyphenation/PatternParser.java
index d9901f10cc0..028bceeff80 100644
-- a/lucene/analysis/common/src/java/org/apache/lucene/analysis/compound/hyphenation/PatternParser.java
++ b/lucene/analysis/common/src/java/org/apache/lucene/analysis/compound/hyphenation/PatternParser.java
@@ -26,7 +26,6 @@ import org.xml.sax.helpers.DefaultHandler;
 import org.xml.sax.Attributes;
 
 // Java
import java.io.File;
 import java.io.IOException;
 import java.util.ArrayList;
 
@@ -91,17 +90,6 @@ public class PatternParser extends DefaultHandler {
     parse(new InputSource(filename));
   }
 
  /**
   * Parses a hyphenation pattern file.
   * 
   * @param file the pattern file
   * @throws IOException In case of an exception while parsing
   */</comment>
  <function><type><specifier>public</specifier> <name>void</name></type> <name>parse</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>file</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>InputSource</name></type> <name>src</name> <init>= <expr><operator>new</operator> <call><name>InputSource</name><argument_list>(<argument><expr><call><name><name>file</name><operator>.</operator><name>toURI</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toASCIIString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>parse</name><argument_list>(<argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

   <comment type="block" format="javadoc">/**
    * Parses a hyphenation pattern file.
    * 
diff --git a/lucene/analysis/common/src/java/org/apache/lucene/analysis/core/StopAnalyzer.java b/lucene/analysis/common/src/java/org/apache/lucene/analysis/core/StopAnalyzer.java
index 102618f84be..e25774e8951 100644
-- a/lucene/analysis/common/src/java/org/apache/lucene/analysis/core/StopAnalyzer.java
++ b/lucene/analysis/common/src/java/org/apache/lucene/analysis/core/StopAnalyzer.java
@@ -20,6 +20,7 @@ package org.apache.lucene.analysis.core;
 import java.io.File;
 import java.io.IOException;
 import java.io.Reader;
import java.nio.file.Path;
 import java.util.Arrays;
 import java.util.List;
 
@@ -62,10 +63,10 @@ public final class StopAnalyzer extends StopwordAnalyzerBase {
     super(stopWords);
   }
 
  /** Builds an analyzer with the stop words from the given file.
  /** Builds an analyzer with the stop words from the given path.
    * @see WordlistLoader#getWordSet(Reader)
    * @param stopwordsFile File to load stop words from */</comment>
  <constructor><specifier>public</specifier> <name>StopAnalyzer</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>stopwordsFile</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
  <constructor><specifier>public</specifier> <name>StopAnalyzer</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>stopwordsFile</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
     <expr_stmt><expr><call><name>this</name><argument_list>(<argument><expr><call><name>loadStopwordSet</name><argument_list>(<argument><expr><name>stopwordsFile</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></constructor>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>hunspell</name><operator>/</operator><name><name>Dictionary</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>hunspell</name><operator>/</operator><name><name>Dictionary</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">5aa28be7937</literal><operator>..</operator><literal type="number">480382d0010</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>hunspell</name><operator>/</operator><name><name>Dictionary</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>hunspell</name><operator>/</operator><name><name>Dictionary</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">42</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">42</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>fst</name><operator>.</operator><name>Util</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>BufferedInputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>BufferedOutputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>BufferedReader</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileInputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileOutputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStreamReader</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">55</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">52</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>CharsetDecoder</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>CodingErrorAction</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>StandardCharsets</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>text</name><operator>.</operator><name>ParseException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">141</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">139</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>Dictionary</name> <block>{
   <comment type="line">// when set, some words have exceptional stems, and the last entry is a pointer to stemExceptions</comment>
   <expr><name>boolean</name> <name>hasStemExceptions</name></expr>;
   
  <expr><specifier>private</specifier> <name>final</name> <name>File</name> <name>tempDir</name> <operator>=</operator> <call><name><name>OfflineSorter</name><operator>.</operator><name>defaultTempDir</name></name><argument_list>()</argument_list></call></expr>; <comment type="line">// TODO: make this configurable?</comment>
  <expr><specifier>private</specifier> <name>final</name> <name>Path</name> <name>tempDir</name> <operator>=</operator> <call><name><name>OfflineSorter</name><operator>.</operator><name>defaultTempDir</name></name><argument_list>()</argument_list></call></expr>; <comment type="line">// TODO: make this configurable?</comment>
   
   <expr><name>boolean</name> <name>ignoreCase</name></expr>;
   <expr><name>boolean</name> <name>complexPrefixes</name></expr>;
@@ <expr><operator>-</operator><literal type="number">200</literal></expr>,<expr><literal type="number">8</literal> <operator>+</operator><literal type="number">198</literal></expr>,<expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>Dictionary</name> <block>{
     <expr><name><name>this</name><operator>.</operator><name>needsOutputCleaning</name></name> <operator>=</operator> <literal type="boolean">false</literal></expr>; <comment type="line">// set if we have an OCONV</comment>
     <expr><call><name><name>flagLookup</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>BytesRef</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>; <comment type="line">// no flags -&gt; ord 0</comment>
 
    <expr><name>File</name> <name>aff</name> <operator>=</operator> <call><name><name>File</name><operator>.</operator><name>createTempFile</name></name><argument_list>(<argument><expr><literal type="string">"affix"</literal></expr></argument>, <argument><expr><literal type="string">"aff"</literal></expr></argument>, <argument><expr><name>tempDir</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>OutputStream</name> <name>out</name> <operator>=</operator> <operator>new</operator> <call><name>BufferedOutputStream</name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileOutputStream</name><argument_list>(<argument><expr><name>aff</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><name>Path</name> <name>aff</name> <operator>=</operator> <call><name><name>Files</name><operator>.</operator><name>createTempFile</name></name><argument_list>(<argument><expr><name>tempDir</name></expr></argument>, <argument><expr><literal type="string">"affix"</literal></expr></argument>, <argument><expr><literal type="string">"aff"</literal></expr></argument>)</argument_list></call></expr>;
    <expr><name>OutputStream</name> <name>out</name> <operator>=</operator> <operator>new</operator> <call><name>BufferedOutputStream</name><argument_list>(<argument><expr><call><name><name>Files</name><operator>.</operator><name>newOutputStream</name></name><argument_list>(<argument><expr><name>aff</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <expr><name>InputStream</name> <name>aff1</name> <operator>=</operator> <literal type="null">null</literal></expr>;
     <expr><name>InputStream</name> <name>aff2</name> <operator>=</operator> <literal type="null">null</literal></expr>;
     <expr><name>boolean</name> <name>success</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;
@@ <expr><operator>-</operator><literal type="number">215</literal></expr>,<expr><literal type="number">12</literal> <operator>+</operator><literal type="number">213</literal></expr>,<expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>Dictionary</name> <block>{
       <expr><call><name><name>out</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;
       
       <comment type="line">// pass 1: get encoding</comment>
      <expr><name>aff1</name> <operator>=</operator> <operator>new</operator> <call><name>BufferedInputStream</name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>aff</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
      <expr><name>aff1</name> <operator>=</operator> <operator>new</operator> <call><name>BufferedInputStream</name><argument_list>(<argument><expr><call><name><name>Files</name><operator>.</operator><name>newInputStream</name></name><argument_list>(<argument><expr><name>aff</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
       <expr><name>String</name> <name>encoding</name> <operator>=</operator> <call><name>getDictionaryEncoding</name><argument_list>(<argument><expr><name>aff1</name></expr></argument>)</argument_list></call></expr>;
       
       <comment type="line">// pass 2: parse affixes</comment>
       <expr><name>CharsetDecoder</name> <name>decoder</name> <operator>=</operator> <call><name>getJavaEncoding</name><argument_list>(<argument><expr><name>encoding</name></expr></argument>)</argument_list></call></expr>;
      <expr><name>aff2</name> <operator>=</operator> <operator>new</operator> <call><name>BufferedInputStream</name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>aff</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
      <expr><name>aff2</name> <operator>=</operator> <operator>new</operator> <call><name>BufferedInputStream</name><argument_list>(<argument><expr><call><name><name>Files</name><operator>.</operator><name>newInputStream</name></name><argument_list>(<argument><expr><name>aff</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
       <expr><call><name>readAffixFile</name><argument_list>(<argument><expr><name>aff2</name></expr></argument>, <argument><expr><name>decoder</name></expr></argument>)</argument_list></call></expr>;
       
       <comment type="line">// read dictionary entries</comment>
@@ <expr><operator>-</operator><literal type="number">234</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">232</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>Dictionary</name> <block>{
     }</block></expr> <finally>finally <block>{<block_content>
       <expr_stmt><expr><call><name><name>IOUtils</name><operator>.</operator><name>closeWhileHandlingException</name></name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>aff1</name></expr></argument>, <argument><expr><name>aff2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <if_stmt><if>if <condition>(<expr><name>success</name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>delete</name></name><argument_list>(<argument><expr><call><name><name>aff</name><operator>.</operator><name>toPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>delete</name></name><argument_list>(<argument><expr><name>aff</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt/></block_content></block></if></if_stmt></block_content></block></finally>}</block></expr> <if_stmt><else>else <block>{<block_content>
         <expr_stmt><expr><call><name><name>IOUtils</name><operator>.</operator><name>deleteFilesIgnoringExceptions</name></name><argument_list>(<argument><expr><name>aff</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt/></block_content></block></else></if_stmt>}</block>
@@ <operator>-</operator><literal type="number">782</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">780</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>Dictionary</name> <block>{
     
     <expr><name>StringBuilder</name> <name>sb</name> <operator>=</operator> <operator>new</operator> <call><name>StringBuilder</name><argument_list>()</argument_list></call></expr>;
     
    <expr><name>File</name> <name>unsorted</name> <operator>=</operator> <call><name><name>File</name><operator>.</operator><name>createTempFile</name></name><argument_list>(<argument><expr><literal type="string">"unsorted"</literal></expr></argument>, <argument><expr><literal type="string">"dat"</literal></expr></argument>, <argument><expr><name>tempDir</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>Path</name> <name>unsorted</name> <operator>=</operator> <call><name><name>Files</name><operator>.</operator><name>createTempFile</name></name><argument_list>(<argument><expr><name>tempDir</name></expr></argument>, <argument><expr><literal type="string">"unsorted"</literal></expr></argument>, <argument><expr><literal type="string">"dat"</literal></expr></argument>)</argument_list></call></expr>;
     <try>try <init>(<decl><type><name>ByteSequencesWriter</name></type> <name>writer</name> <init>= <expr><operator>new</operator> <call><name>ByteSequencesWriter</name><argument_list>(<argument><expr><name>unsorted</name></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
       <for>for <control>(<init><decl><type><name>InputStream</name></type> <name>dictionary</name> <range>: <expr><name>dictionaries</name></expr></range></decl></init>)</control> <block>{<block_content>
         <decl_stmt><decl><type><name>BufferedReader</name></type> <name>lines</name> <init>= <expr><operator>new</operator> <call><name>BufferedReader</name><argument_list>(<argument><expr><operator>new</operator> <call><name>InputStreamReader</name><argument_list>(<argument><expr><name>dictionary</name></expr></argument>, <argument><expr><name>decoder</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">825</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">823</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>Dictionary</name> <block>{
         }</block></expr></expr_stmt></block_content></block></for></block_content></block></try>
       }</block></expr>
     }</block>
    <name>File</name> <name>sorted</name> <operator>=</operator> <call><name><name>File</name><operator>.</operator><name>createTempFile</name></name><argument_list>(<argument><expr><literal type="string">"sorted"</literal></expr></argument>, <argument><expr><literal type="string">"dat"</literal></expr></argument>, <argument><expr><name>tempDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>sorted</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>createTempFile</name></name><argument_list>(<argument><expr><name>tempDir</name></expr></argument>, <argument><expr><literal type="string">"sorted"</literal></expr></argument>, <argument><expr><literal type="string">"dat"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     
     <decl_stmt><decl><type><name>OfflineSorter</name></type> <name>sorter</name> <init>= <expr><operator>new</operator> <call><name>OfflineSorter</name><argument_list>(<argument><expr><operator>new</operator> <class><super><name><name>Comparator</name><argument_list type="generic">&lt;<argument><name>BytesRef</name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{
       <decl_stmt><decl><type><name>BytesRef</name></type> <name>scratch1</name> <init>= <expr><operator>new</operator> <call><name>BytesRef</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">870</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">868</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>Dictionary</name> <block>{
       <expr><name>success</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;
     }</block></expr></expr_stmt> <finally>finally <block>{<block_content>
       <if_stmt><if>if <condition>(<expr><name>success</name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>delete</name></name><argument_list>(<argument><expr><call><name><name>unsorted</name><operator>.</operator><name>toPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>delete</name></name><argument_list>(<argument><expr><name>unsorted</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></if> <else>else <block>{<block_content>
         <expr_stmt><expr><call><name><name>IOUtils</name><operator>.</operator><name>deleteFilesIgnoringExceptions</name></name><argument_list>(<argument><expr><name>unsorted</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></else></if_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">960</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">958</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>Dictionary</name> <block>{
     }</block></expr></expr_stmt> <finally>finally <block>{<block_content>
       <expr_stmt><expr><call><name><name>IOUtils</name><operator>.</operator><name>closeWhileHandlingException</name></name><argument_list>(<argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <if_stmt><if>if <condition>(<expr><name>success2</name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>delete</name></name><argument_list>(<argument><expr><call><name><name>sorted</name><operator>.</operator><name>toPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>delete</name></name><argument_list>(<argument><expr><name>sorted</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></if> <else>else <block>{<block_content>
         <expr_stmt><expr><call><name><name>IOUtils</name><operator>.</operator><name>deleteFilesIgnoringExceptions</name></name><argument_list>(<argument><expr><name>sorted</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></else></if_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>synonym</name><operator>/</operator><name><name>SynonymFilterFactory</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>synonym</name><operator>/</operator><name><name>SynonymFilterFactory</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">45bd3529015</literal><operator>..</operator><name>c5afd87bf45</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>synonym</name><operator>/</operator><name><name>SynonymFilterFactory</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>synonym</name><operator>/</operator><name><name>SynonymFilterFactory</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>synonym</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStreamReader</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>Reader</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">171</literal></expr><operator>,</operator><expr><literal type="number">16</literal> <operator>+</operator><literal type="number">170</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> class <name>SynonymFilterFactory</name> extends <name>TokenFilterFactory</name> implements <name>Resource</name>
       <throw>throw <argument_list>new <argument><expr><call><name>RuntimeException</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr></argument></argument_list></throw></expr>;</expr_stmt>
     </block_content>}</block></finally>
 
    <decl_stmt><decl><type><name>File</name></type> <name>synonymFile</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>synonyms</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><call><name><name>synonymFile</name><operator>.</operator><name>exists</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
    <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>files</name> <init>= <expr><call><name>splitFileNames</name><argument_list>(<argument><expr><name>synonyms</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <for>for <control>(<init><decl><type><name>String</name></type> <name>file</name> <range>: <expr><name>files</name></expr></range></decl></init>)</control> <block>{<block_content>
       <expr_stmt><expr><call><name><name>decoder</name><operator>.</operator><name>reset</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>parser</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>InputStreamReader</name><argument_list>(<argument><expr><call><name><name>loader</name><operator>.</operator><name>openResource</name></name><argument_list>(<argument><expr><name>synonyms</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>decoder</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for> <if_stmt><else>else <block>{<block_content>
      <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>files</name> <init>= <expr><call><name>splitFileNames</name><argument_list>(<argument><expr><name>synonyms</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <for>for <control>(<init><decl><type><name>String</name></type> <name>file</name> <range>: <expr><name>files</name></expr></range></decl></init>)</control> <block>{<block_content>
        <expr_stmt><expr><call><name><name>decoder</name><operator>.</operator><name>reset</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>parser</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>InputStreamReader</name><argument_list>(<argument><expr><call><name><name>loader</name><operator>.</operator><name>openResource</name></name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>decoder</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></for>
      <expr_stmt><expr><call><name><name>parser</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>InputStreamReader</name><argument_list>(<argument><expr><call><name><name>loader</name><operator>.</operator><name>openResource</name></name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>decoder</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></else></if_stmt>
     <return>return <expr><call><name><name>parser</name><operator>.</operator><name>build</name></name><argument_list>()</argument_list></call></expr>;</return>
   </block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>util</name><operator>/</operator><name><name>FilesystemResourceLoader</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>util</name><operator>/</operator><name><name>FilesystemResourceLoader</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>cd907716154</name><operator>..</operator><name>de7cfa0b1d7</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>util</name><operator>/</operator><name><name>FilesystemResourceLoader</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>util</name><operator>/</operator><name><name>FilesystemResourceLoader</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>util</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileInputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileNotFoundException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>NoSuchFileException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
  * Simple {@link ResourceLoader} that opens resource files
@@ -37,25 +38,16 @@ import java.io.InputStream;
  * to allow lookup of files in more than one base directory.
  */</comment>
 <class><specifier>public</specifier> <specifier>final</specifier> class <name>FilesystemResourceLoader</name> <super_list><implements>implements <super><name>ResourceLoader</name></super></implements></super_list> <block>{
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>File</name></type> <name>baseDirectory</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>Path</name></type> <name>baseDirectory</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>ResourceLoader</name></type> <name>delegate</name></decl>;</decl_stmt>
   
  <comment type="block" format="javadoc">/**
   * Creates a resource loader that requires absolute filenames or relative to CWD
   * to resolve resources. Files not found in file system and class lookups
   * are delegated to context classloader.
   */</comment>
  <constructor><specifier>public</specifier> <name>FilesystemResourceLoader</name><parameter_list>()</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>this</name><argument_list>(<argument><expr><operator>(</operator><name>File</name><operator>)</operator> <literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></constructor>

   <comment type="block" format="javadoc">/**
    * Creates a resource loader that resolves resources against the given
    * base directory (may be {@code null} to refer to CWD).
    * Files not found in file system and class lookups are delegated to context
    * classloader.
    */</comment>
  <constructor><specifier>public</specifier> <name>FilesystemResourceLoader</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>baseDirectory</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <constructor><specifier>public</specifier> <name>FilesystemResourceLoader</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>baseDirectory</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <expr_stmt><expr><call><name>this</name><argument_list>(<argument><expr><name>baseDirectory</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>ClasspathResourceLoader</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></constructor>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">65</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">57</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>final</name> class <name>FilesystemResourceLoader</name> implements <name>ResourceLoader</name> <block>{
    <expr><operator>*</operator> <name>Files</name> <name>not</name> <name>found</name> <name>in</name> <name>file</name> <name>system</name> <name>and</name> class <name>lookups</name> <name>are</name> <name>delegated</name>
    <operator>*</operator> <name>to</name> <name>the</name> <name>given</name> <name>delegate</name> <block>{@<expr><name>link</name> <name>ResourceLoader</name></expr>}</block><operator>.</operator>
    <operator>*</operator><operator>/</operator>
  <specifier>public</specifier> <call><name>FilesystemResourceLoader</name><argument_list>(<argument><expr><name>File</name> <name>baseDirectory</name></expr></argument>, <argument><expr><name>ResourceLoader</name> <name>delegate</name></expr></argument>)</argument_list></call> <block>{
    <if_stmt><if>if <condition>(<expr><name>baseDirectory</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <operator>!</operator><call><name><name>baseDirectory</name><operator>.</operator><name>isDirectory</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
      <throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><literal type="string">"baseDirectory is not a directory or null"</literal></expr></argument>)</argument_list></call></expr>;</throw></block_content></block></if></if_stmt>
  <specifier>public</specifier> <call><name>FilesystemResourceLoader</name><argument_list>(<argument><expr><name>Path</name> <name>baseDirectory</name></expr></argument>, <argument><expr><name>ResourceLoader</name> <name>delegate</name></expr></argument>)</argument_list></call> <block>{
    <if_stmt><if>if <condition>(<expr><name>baseDirectory</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>NullPointerException</name><argument_list>()</argument_list></call></expr>;</throw>
    <expr_stmt/>}</block_content>
    if (!Files.isDirectory(baseDirectory</block></if></if_stmt>)</block></block></expr></block></expr></expr_stmt></block_content></block></constructor></block></class></block_content></block></finally></block></class></expr></argument>)</argument_list></call>
      <throw>throw <argument_list>new <argument><expr><call><name>IllegalArgumentException</name><argument_list>(<argument><expr><name>baseDirectory</name> <operator>+</operator> <literal type="string">" is not a directory"</literal></expr></argument>)</argument_list></call></expr></argument></argument_list></throw></expr></init></decl>;</decl_stmt>
     <if_stmt><if>if <condition>(<expr><name>delegate</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content>
       <throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><literal type="string">"delegate ResourceLoader may not be null"</literal></expr></argument>)</argument_list></call></expr>;</throw></block_content></block></if></if_stmt>
     <expr_stmt><expr><name><name>this</name><operator>.</operator><name>baseDirectory</name></name> <operator>=</operator> <name>baseDirectory</name></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">77</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">72</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>FilesystemResourceLoader</name> implements <name>ResourceLoader</name> <block>{
   @<expr><name>Override</name>
   <specifier>public</specifier> <name>InputStream</name> <call><name>openResource</name><argument_list>(<argument><expr><name>String</name> <name>resource</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr>
     <try>try <block>{<block_content>
      <decl_stmt><decl><type><name>File</name></type> <name>file</name> <init>= <expr><operator>new</operator> <call><name>File</name> <argument_list>(<argument><expr><name>resource</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>baseDirectory</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <operator>!</operator><call><name><name>file</name><operator>.</operator><name>isAbsolute</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>file</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>baseDirectory</name></expr></argument>, <argument><expr><name>resource</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt/></block_content></block></if></if_stmt></block_content></block></try>}</block></expr></expr_stmt>
      <return>return <expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></constructor> <catch>catch <parameter_list>(<parameter><decl><type><name>FileNotFoundException</name></type> <name>fnfe</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <return>return <expr><call><name><name>Files</name><operator>.</operator><name>newInputStream</name></name><argument_list>(<argument><expr><call><name><name>baseDirectory</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><name>resource</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></catch> <catch>catch <parameter_list>(<parameter><decl><type><name>FileNotFoundException</name></type> | <type><name>NoSuchFileException</name></type> <name>fnfe</name></decl></parameter>)</parameter_list> <block>{<block_content>
       <return>return <expr><call><name><name>delegate</name><operator>.</operator><name>openResource</name></name><argument_list>(<argument><expr><name>resource</name></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block></catch>
   </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>util</name><operator>/</operator><name><name>StopwordAnalyzerBase</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>util</name><operator>/</operator><name><name>StopwordAnalyzerBase</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>ff1517e90d0</name><operator>..</operator><name>ad7332bcf61</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>util</name><operator>/</operator><name><name>StopwordAnalyzerBase</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>util</name><operator>/</operator><name><name>StopwordAnalyzerBase</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@</expr></expr_stmt>
 
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>util</name></name>;</package>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>Reader</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>StandardCharsets</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>Analyzer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>IOUtils</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">98</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">99</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>StopwordAnalyzerBase</name> extends <name>Analyzer</name> <block>{
   }</block>
   
   <comment type="block" format="javadoc">/**
   * Creates a CharArraySet from a file.
   * Creates a CharArraySet from a path.
    * 
    * @param stopwords
    *          the stopwords file to load
@@ -107,10 +108,10 @@ public abstract class StopwordAnalyzerBase extends Analyzer {
    * @throws IOException
    *           if loading the stopwords throws an {@link IOException}
    */</comment>
  <specifier>protected</specifier> <specifier>static</specifier> <name>CharArraySet</name> <call><name>loadStopwordSet</name><argument_list>(<argument><expr><name>File</name> <name>stopwords</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>protected</specifier> <specifier>static</specifier> <name>CharArraySet</name> <call><name>loadStopwordSet</name><argument_list>(<argument><expr><name>Path</name> <name>stopwords</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><name>Reader</name> <name>reader</name> <operator>=</operator> <literal type="null">null</literal></expr></block></expr></argument></throws></expr>;</expr_stmt>
     <try>try <block>{<block_content>
      <expr_stmt><expr><name>reader</name> <operator>=</operator> <call><name><name>IOUtils</name><operator>.</operator><name>getDecodingReader</name></name><argument_list>(<argument><expr><name>stopwords</name></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>reader</name> <operator>=</operator> <call><name><name>Files</name><operator>.</operator><name>newBufferedReader</name></name><argument_list>(<argument><expr><name>stopwords</name></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <return>return <expr><call><name><name>WordlistLoader</name><operator>.</operator><name>getWordSet</name></name><argument_list>(<argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block> <finally>finally <block>{<block_content>
       <expr_stmt><expr><call><name><name>IOUtils</name><operator>.</operator><name>close</name></name><argument_list>(<argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>ckb</name><operator>/</operator><name><name>TestSoraniStemFilter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>ckb</name><operator>/</operator><name><name>TestSoraniStemFilter</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>ac2543d7bd5</name><operator>..</operator><name>bf98fa659b7</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>ckb</name><operator>/</operator><name><name>TestSoraniStemFilter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>ckb</name><operator>/</operator><name><name>TestSoraniStemFilter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">95</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">95</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSoraniStemFilter</name> extends <name>BaseTokenStreamTestCase</name> <block>{
   <comment type="block" format="javadoc">/** test against a basic vocabulary file */</comment>
   <expr><specifier>public</specifier> <name>void</name> <call><name>testVocabulary</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <comment type="line">// top 8k words or so: freq &gt; 1000</comment>
    <expr><call><name>assertVocabulary</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><call><name>getDataFile</name><argument_list>(<argument><expr><literal type="string">"ckbtestdata.zip"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"testdata.txt"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <expr><call><name>assertVocabulary</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><call><name>getDataPath</name><argument_list>(<argument><expr><literal type="string">"ckbtestdata.zip"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"testdata.txt"</literal></expr></argument>)</argument_list></call></expr>;
   }</block></expr></expr_stmt>
 </block_content>}</block></finally></try>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestRandomChains</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestRandomChains</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>d178fb6f03a</name><operator>..</operator><literal type="number">2216212ca1c</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestRandomChains</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestRandomChains</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>core</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>Reader</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">28</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">27</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>reflect</name><operator>.</operator><name>Modifier</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>URI</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>URL</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>CharBuffer</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>DirectoryStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Paths</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collection</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">271</literal></expr><operator>,</operator><expr><literal type="number">23</literal> <operator>+</operator><literal type="number">274</literal></expr><operator>,</operator><expr><literal type="number">25</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestRandomChains</name> extends <name>BaseTokenStreamTestCase</name> <block>{
       <expr><name>final</name> <name>URI</name> <name>uri</name> <operator>=</operator> <call><name><name>resources</name><operator>.</operator><name>nextElement</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toURI</name><argument_list>()</argument_list></call></expr>;
       <if_stmt><if>if <condition>(<expr><operator>!</operator><literal type="string">"file"</literal><operator>.</operator><call><name>equalsIgnoreCase</name><argument_list>(<argument><expr><call><name><name>uri</name><operator>.</operator><name>getScheme</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
         <continue>continue;</continue></block_content></block></if></if_stmt>
      <name>final</name> <name>File</name> <name>directory</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>uri</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
      <if_stmt><if>if <condition>(<expr><call><name><name>directory</name><operator>.</operator><name>exists</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
        <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>files</name> <init>= <expr><call><name><name>directory</name><operator>.</operator><name>list</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <for>for <control>(<init><decl><type><name>String</name></type> <name>file</name> <range>: <expr><name>files</name></expr></range></decl></init>)</control> <block>{<block_content>
          <if_stmt><if>if <condition>(<expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>directory</name></expr></argument>, <argument><expr><name>file</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>isDirectory</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
            <comment type="line">// recurse</comment>
            <decl_stmt><decl><type><name>String</name></type> <name>subPackage</name> <init>= <expr><name>pckgname</name> <operator>+</operator> <literal type="string">"."</literal> <operator>+</operator> <name>file</name></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name>collectClassesForPackage</name><argument_list>(<argument><expr><name>subPackage</name></expr></argument>, <argument><expr><name>classes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          </block_content>}</block></if></if_stmt>
          <if_stmt><if>if <condition>(<expr><call><name><name>file</name><operator>.</operator><name>endsWith</name></name><argument_list>(<argument><expr><literal type="string">".class"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
            <decl_stmt><decl><type><name>String</name></type> <name>clazzName</name> <init>= <expr><call><name><name>file</name><operator>.</operator><name>substring</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><call><name><name>file</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call> <operator>-</operator> <literal type="number">6</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <comment type="line">// exclude Test classes that happen to be in these packages.</comment>
            <comment type="line">// class.ForName'ing some of them can cause trouble.</comment>
            <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>clazzName</name><operator>.</operator><name>endsWith</name></name><argument_list>(<argument><expr><literal type="string">"Test"</literal></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <operator>!</operator><call><name><name>clazzName</name><operator>.</operator><name>startsWith</name></name><argument_list>(<argument><expr><literal type="string">"Test"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
              <comment type="line">// Don't run static initializers, as we won't use most of them.</comment>
              <comment type="line">// Java will do that automatically once accessed/instantiated.</comment>
              <expr_stmt><expr><call><name><name>classes</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name><name>Class</name><operator>.</operator><name>forName</name></name><argument_list>(<argument><expr><name>pckgname</name> <operator>+</operator> <literal type="char">'.'</literal> <operator>+</operator> <name>clazzName</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><name>cld</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><specifier>final</specifier> <name>Path</name></type> <name>directory</name> <init>= <expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>uri</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><call><name><name>Files</name><operator>.</operator><name>exists</name></name><argument_list>(<argument><expr><name>directory</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <try>try <init>(<decl><type><name><name>DirectoryStream</name><argument_list type="generic">&lt;<argument><name>Path</name></argument>&gt;</argument_list></name></type> <name>stream</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>newDirectoryStream</name></name><argument_list>(<argument><expr><name>directory</name></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
          <for>for <control>(<init><decl><type><name>Path</name></type> <name>file</name> <range>: <expr><name>stream</name></expr></range></decl></init>)</control> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><call><name><name>Files</name><operator>.</operator><name>isDirectory</name></name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
              <comment type="line">// recurse</comment>
              <decl_stmt><decl><type><name>String</name></type> <name>subPackage</name> <init>= <expr><name>pckgname</name> <operator>+</operator> <literal type="string">"."</literal> <operator>+</operator> <call><name><name>file</name><operator>.</operator><name>getFileName</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
              <expr_stmt><expr><call><name>collectClassesForPackage</name><argument_list>(<argument><expr><name>subPackage</name></expr></argument>, <argument><expr><name>classes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <decl_stmt><decl><type><name>String</name></type> <name>fname</name> <init>= <expr><call><name><name>file</name><operator>.</operator><name>getFileName</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <if_stmt><if>if <condition>(<expr><call><name><name>fname</name><operator>.</operator><name>endsWith</name></name><argument_list>(<argument><expr><literal type="string">".class"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
              <decl_stmt><decl><type><name>String</name></type> <name>clazzName</name> <init>= <expr><call><name><name>fname</name><operator>.</operator><name>substring</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><call><name><name>fname</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call> <operator>-</operator> <literal type="number">6</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
              <comment type="line">// exclude Test classes that happen to be in these packages.</comment>
              <comment type="line">// class.ForName'ing some of them can cause trouble.</comment>
              <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>clazzName</name><operator>.</operator><name>endsWith</name></name><argument_list>(<argument><expr><literal type="string">"Test"</literal></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <operator>!</operator><call><name><name>clazzName</name><operator>.</operator><name>startsWith</name></name><argument_list>(<argument><expr><literal type="string">"Test"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                <comment type="line">// Don't run static initializers, as we won't use most of them.</comment>
                <comment type="line">// Java will do that automatically once accessed/instantiated.</comment>
                <expr_stmt><expr><call><name><name>classes</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name><name>Class</name><operator>.</operator><name>forName</name></name><argument_list>(<argument><expr><name>pckgname</name> <operator>+</operator> <literal type="char">'.'</literal> <operator>+</operator> <name>clazzName</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><name>cld</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
              </block_content>}</block></if></if_stmt>
             </block_content>}</block></if></if_stmt>
           </block_content>}</block></for>
         </block_content>}</block></try>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>de</name><operator>/</operator><name><name>TestGermanLightStemFilter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>de</name><operator>/</operator><name><name>TestGermanLightStemFilter</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>b9a6bd31098</name><operator>..</operator><literal type="number">5aac3b34ded</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>de</name><operator>/</operator><name><name>TestGermanLightStemFilter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>de</name><operator>/</operator><name><name>TestGermanLightStemFilter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">45</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">45</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestGermanLightStemFilter</name> extends <name>BaseTokenStreamTestCase</name> <block>{
   
   <comment type="block" format="javadoc">/** Test against a vocabulary from the reference impl */</comment>
   <expr><specifier>public</specifier> <name>void</name> <call><name>testVocabulary</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><call><name>assertVocabulary</name><argument_list>(<argument><expr><name>analyzer</name></expr></argument>, <argument><expr><call><name>getDataFile</name><argument_list>(<argument><expr><literal type="string">"delighttestdata.zip"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"delight.txt"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <call><name>assertVocabulary</name><argument_list>(<argument><expr><name>analyzer</name></expr></argument>, <argument><expr><call><name>getDataPath</name><argument_list>(<argument><expr><literal type="string">"delighttestdata.zip"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"delight.txt"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
   </block_content>}</block></if></if_stmt>
   
   <function><type><specifier>public</specifier> <name>void</name></type> <name>testKeyword</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>de</name><operator>/</operator><name><name>TestGermanMinimalStemFilter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>de</name><operator>/</operator><name><name>TestGermanMinimalStemFilter</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>a8b7e7b1e91</name><operator>..</operator><name>dd0f3200489</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>de</name><operator>/</operator><name><name>TestGermanMinimalStemFilter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>de</name><operator>/</operator><name><name>TestGermanMinimalStemFilter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">70</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">70</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestGermanMinimalStemFilter</name> extends <name>BaseTokenStreamTestCase</name> <block>{
   
   <comment type="block" format="javadoc">/** Test against a vocabulary from the reference impl */</comment>
   <expr><specifier>public</specifier> <name>void</name> <call><name>testVocabulary</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><call><name>assertVocabulary</name><argument_list>(<argument><expr><name>analyzer</name></expr></argument>, <argument><expr><call><name>getDataFile</name><argument_list>(<argument><expr><literal type="string">"deminimaltestdata.zip"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"deminimal.txt"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <call><name>assertVocabulary</name><argument_list>(<argument><expr><name>analyzer</name></expr></argument>, <argument><expr><call><name>getDataPath</name><argument_list>(<argument><expr><literal type="string">"deminimaltestdata.zip"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"deminimal.txt"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
   </block_content>}</block></function>
   
   <comment type="block" format="javadoc">/** blast some random strings through the analyzer */</comment>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>en</name><operator>/</operator><name><name>TestKStemmer</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>en</name><operator>/</operator><name><name>TestKStemmer</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">0b07d3c9543</literal><operator>..</operator><literal type="number">755354fc8c0</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>en</name><operator>/</operator><name><name>TestKStemmer</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>en</name><operator>/</operator><name><name>TestKStemmer</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">51</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">51</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestKStemmer</name> extends <name>BaseTokenStreamTestCase</name> <block>{
    <expr><operator>*</operator> <name>testCreateMap</name></expr>, <expr><name>commented</name> <name>out</name> <name>below</name></expr>)<operator>.</operator>
    <operator>*</operator><operator>/</operator>
   <specifier>public</specifier> <name>void</name> <call><name>testVocabulary</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><call><name>assertVocabulary</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><call><name>getDataFile</name><argument_list>(<argument><expr><literal type="string">"kstemTestData.zip"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"kstem_examples.txt"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></block></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertVocabulary</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><call><name>getDataPath</name><argument_list>(<argument><expr><literal type="string">"kstemTestData.zip"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"kstem_examples.txt"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></if></if_stmt>
   
   <function><type><specifier>public</specifier> <name>void</name></type> <name>testEmptyTerm</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>en</name><operator>/</operator><name><name>TestPorterStemFilter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>en</name><operator>/</operator><name><name>TestPorterStemFilter</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">36fbf4f5dfc</literal><operator>..</operator><name>db7fc328c4f</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>en</name><operator>/</operator><name><name>TestPorterStemFilter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>en</name><operator>/</operator><name><name>TestPorterStemFilter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">49</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">49</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestPorterStemFilter</name> extends <name>BaseTokenStreamTestCase</name> <block>{
    <expr><operator>*</operator> <name>The</name> <name>output</name> <name>should</name> <name>be</name> <name>the</name> <name>same</name> <name>as</name> <name>the</name> <name>string</name> <name>in</name> <name><name>output</name><operator>.</operator><name>txt</name></name>
    <operator>*</operator><operator>/</operator>
   <specifier>public</specifier> <name>void</name> <call><name>testPorterStemFilter</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><call><name>assertVocabulary</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><call><name>getDataFile</name><argument_list>(<argument><expr><literal type="string">"porterTestData.zip"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"voc.txt"</literal></expr></argument>, <argument><expr><literal type="string">"output.txt"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <call><name>assertVocabulary</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><call><name>getDataPath</name><argument_list>(<argument><expr><literal type="string">"porterTestData.zip"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"voc.txt"</literal></expr></argument>, <argument><expr><literal type="string">"output.txt"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
   </block_content>}</block></function>
   
   <function><type><specifier>public</specifier> <name>void</name></type> <name>testWithKeywordAttribute</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>es</name><operator>/</operator><name><name>TestSpanishLightStemFilter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>es</name><operator>/</operator><name><name>TestSpanishLightStemFilter</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">636e82ae733</literal><operator>..</operator><literal type="number">81a3b90be41</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>es</name><operator>/</operator><name><name>TestSpanishLightStemFilter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>es</name><operator>/</operator><name><name>TestSpanishLightStemFilter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">42</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">42</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSpanishLightStemFilter</name> extends <name>BaseTokenStreamTestCase</name> <block>{
   
   <comment type="block" format="javadoc">/** Test against a vocabulary from the reference impl */</comment>
   <expr><specifier>public</specifier> <name>void</name> <call><name>testVocabulary</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><call><name>assertVocabulary</name><argument_list>(<argument><expr><name>analyzer</name></expr></argument>, <argument><expr><call><name>getDataFile</name><argument_list>(<argument><expr><literal type="string">"eslighttestdata.zip"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"eslight.txt"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <call><name>assertVocabulary</name><argument_list>(<argument><expr><name>analyzer</name></expr></argument>, <argument><expr><call><name>getDataPath</name><argument_list>(<argument><expr><literal type="string">"eslighttestdata.zip"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"eslight.txt"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
   </block_content>}</block></function>
   
   <comment type="block" format="javadoc">/** blast some random strings through the analyzer */</comment>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>fi</name><operator>/</operator><name><name>TestFinnishLightStemFilter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>fi</name><operator>/</operator><name><name>TestFinnishLightStemFilter</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">985ec1abc5c</literal><operator>..</operator><name>f183f5bb721</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>fi</name><operator>/</operator><name><name>TestFinnishLightStemFilter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>fi</name><operator>/</operator><name><name>TestFinnishLightStemFilter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">44</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">44</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestFinnishLightStemFilter</name> extends <name>BaseTokenStreamTestCase</name> <block>{
   
   <comment type="block" format="javadoc">/** Test against a vocabulary from the reference impl */</comment>
   <expr><specifier>public</specifier> <name>void</name> <call><name>testVocabulary</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><call><name>assertVocabulary</name><argument_list>(<argument><expr><name>analyzer</name></expr></argument>, <argument><expr><call><name>getDataFile</name><argument_list>(<argument><expr><literal type="string">"filighttestdata.zip"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"filight.txt"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <call><name>assertVocabulary</name><argument_list>(<argument><expr><name>analyzer</name></expr></argument>, <argument><expr><call><name>getDataPath</name><argument_list>(<argument><expr><literal type="string">"filighttestdata.zip"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"filight.txt"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
   </block_content>}</block></if></if_stmt>
   
   <function><type><specifier>public</specifier> <name>void</name></type> <name>testKeyword</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>fr</name><operator>/</operator><name><name>TestFrenchLightStemFilter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>fr</name><operator>/</operator><name><name>TestFrenchLightStemFilter</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>ce0a038fa82</name><operator>..</operator><literal type="number">743962b88a1</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>fr</name><operator>/</operator><name><name>TestFrenchLightStemFilter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>fr</name><operator>/</operator><name><name>TestFrenchLightStemFilter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">175</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">175</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestFrenchLightStemFilter</name> extends <name>BaseTokenStreamTestCase</name> <block>{
   
   <comment type="block" format="javadoc">/** Test against a vocabulary from the reference impl */</comment>
   <expr><specifier>public</specifier> <name>void</name> <call><name>testVocabulary</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><call><name>assertVocabulary</name><argument_list>(<argument><expr><name>analyzer</name></expr></argument>, <argument><expr><call><name>getDataFile</name><argument_list>(<argument><expr><literal type="string">"frlighttestdata.zip"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"frlight.txt"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <call><name>assertVocabulary</name><argument_list>(<argument><expr><name>analyzer</name></expr></argument>, <argument><expr><call><name>getDataPath</name><argument_list>(<argument><expr><literal type="string">"frlighttestdata.zip"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"frlight.txt"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
   </block_content>}</block></function>
   
   <function><type><specifier>public</specifier> <name>void</name></type> <name>testKeyword</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>fr</name><operator>/</operator><name><name>TestFrenchMinimalStemFilter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>fr</name><operator>/</operator><name><name>TestFrenchMinimalStemFilter</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">5330e0ed67c</literal><operator>..</operator><literal type="number">7f44a7f710e</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>fr</name><operator>/</operator><name><name>TestFrenchMinimalStemFilter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>fr</name><operator>/</operator><name><name>TestFrenchMinimalStemFilter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">72</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">72</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestFrenchMinimalStemFilter</name> extends <name>BaseTokenStreamTestCase</name> <block>{
   
   <comment type="block" format="javadoc">/** Test against a vocabulary from the reference impl */</comment>
   <expr><specifier>public</specifier> <name>void</name> <call><name>testVocabulary</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><call><name>assertVocabulary</name><argument_list>(<argument><expr><name>analyzer</name></expr></argument>, <argument><expr><call><name>getDataFile</name><argument_list>(<argument><expr><literal type="string">"frminimaltestdata.zip"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"frminimal.txt"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <call><name>assertVocabulary</name><argument_list>(<argument><expr><name>analyzer</name></expr></argument>, <argument><expr><call><name>getDataPath</name><argument_list>(<argument><expr><literal type="string">"frminimaltestdata.zip"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"frminimal.txt"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
   </block_content>}</block></function>
   
   <comment type="block" format="javadoc">/** blast some random strings through the analyzer */</comment>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>gl</name><operator>/</operator><name><name>TestGalicianStemFilter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>gl</name><operator>/</operator><name><name>TestGalicianStemFilter</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">7d2f6196d47</literal><operator>..</operator><literal type="number">6b0c9447cba</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>gl</name><operator>/</operator><name><name>TestGalicianStemFilter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>gl</name><operator>/</operator><name><name>TestGalicianStemFilter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">46</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">46</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestGalicianStemFilter</name> extends <name>BaseTokenStreamTestCase</name> <block>{
  
   <comment type="block" format="javadoc">/** Test against a vocabulary from the reference impl */</comment>
   <expr><specifier>public</specifier> <name>void</name> <call><name>testVocabulary</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><call><name>assertVocabulary</name><argument_list>(<argument><expr><name>analyzer</name></expr></argument>, <argument><expr><call><name>getDataFile</name><argument_list>(<argument><expr><literal type="string">"gltestdata.zip"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"gl.txt"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <call><name>assertVocabulary</name><argument_list>(<argument><expr><name>analyzer</name></expr></argument>, <argument><expr><call><name>getDataPath</name><argument_list>(<argument><expr><literal type="string">"gltestdata.zip"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"gl.txt"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
   </block_content>}</block></for>
   
   <function><type><specifier>public</specifier> <name>void</name></type> <name>testEmptyTerm</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>hu</name><operator>/</operator><name><name>TestHungarianLightStemFilter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>hu</name><operator>/</operator><name><name>TestHungarianLightStemFilter</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">46478894113..b8740f9c4ee</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>hu</name><operator>/</operator><name><name>TestHungarianLightStemFilter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>hu</name><operator>/</operator><name><name>TestHungarianLightStemFilter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>hu</name></name>;</package>
  <expr_stmt><expr><operator>*</operator><operator>/</operator></expr></expr_stmt>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>Reader</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>Analyzer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>BaseTokenStreamTestCase</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">45</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">44</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestHungarianLightStemFilter</name> extends <name>BaseTokenStreamTestCase</name> <block>{
   
   <comment type="block" format="javadoc">/** Test against a vocabulary from the reference impl */</comment>
   <expr><specifier>public</specifier> <name>void</name> <call><name>testVocabulary</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><call><name>assertVocabulary</name><argument_list>(<argument><expr><name>analyzer</name></expr></argument>, <argument><expr><call><name>getDataFile</name><argument_list>(<argument><expr><literal type="string">"hulighttestdata.zip"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"hulight.txt"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <call><name>assertVocabulary</name><argument_list>(<argument><expr><name>analyzer</name></expr></argument>, <argument><expr><call><name>getDataPath</name><argument_list>(<argument><expr><literal type="string">"hulighttestdata.zip"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"hulight.txt"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
   </block_content>}</block></function>
   
   <function><type><specifier>public</specifier> <name>void</name></type> <name>testKeyword</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>hunspell</name><operator>/</operator><name><name>Test64kAffixes</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>hunspell</name><operator>/</operator><name><name>Test64kAffixes</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">30ce732cf00</literal><operator>..</operator><name>f585f9f135f</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>hunspell</name><operator>/</operator><name><name>Test64kAffixes</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>hunspell</name><operator>/</operator><name><name>Test64kAffixes</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>hunspell</name></name>;</package>
  <expr_stmt><expr><operator>*</operator><operator>/</operator></expr></expr_stmt>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>BufferedWriter</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileInputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileOutputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>OutputStreamWriter</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>StandardCharsets</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>CharsRef</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">33</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">31</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>LuceneTestCase</name></name>;</import>
 <class><specifier>public</specifier> class <name>Test64kAffixes</name> <super_list><extends>extends <super><name>LuceneTestCase</name></super></extends></super_list> <block>{
   
   <function><type><specifier>public</specifier> <name>void</name></type> <name>test</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>File</name></type> <name>tempDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"64kaffixes"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>affix</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>tempDir</name></expr></argument>, <argument><expr><literal type="string">"64kaffixes.aff"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>dict</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>tempDir</name></expr></argument>, <argument><expr><literal type="string">"64kaffixes.dic"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>tempDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"64kaffixes"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>affix</name> <init>= <expr><call><name><name>tempDir</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><literal type="string">"64kaffixes.aff"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>dict</name> <init>= <expr><call><name><name>tempDir</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><literal type="string">"64kaffixes.dic"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     
    <decl_stmt><decl><type><name>BufferedWriter</name></type> <name>affixWriter</name> <init>= <expr><operator>new</operator> <call><name>BufferedWriter</name><argument_list>(
                                 <argument><expr><operator>new</operator> <call><name>OutputStreamWriter</name><argument_list>(
                                 <argument><expr><operator>new</operator> <call><name>FileOutputStream</name><argument_list>(<argument><expr><name>affix</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>BufferedWriter</name></type> <name>affixWriter</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>newBufferedWriter</name></name><argument_list>(<argument><expr><name>affix</name></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     
     <comment type="line">// 65k affixes with flag 1, then an affix with flag 2</comment>
     <expr_stmt><expr><call><name><name>affixWriter</name><operator>.</operator><name>write</name></name><argument_list>(<argument><expr><literal type="string">"SET UTF-8\nFLAG num\nSFX 1 Y 65536\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">49</literal></expr><operator>,</operator><expr><literal type="number">15</literal> <operator>+</operator><literal type="number">45</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>Test64kAffixes</name> extends <name>LuceneTestCase</name> <block>{
     <expr><call><name><name>affixWriter</name><operator>.</operator><name>write</name></name><argument_list>(<argument><expr><literal type="string">"SFX 2 Y 1\nSFX 2 0 s\n"</literal></expr></argument>)</argument_list></call></expr>;
     <call><name><name>affixWriter</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     
    <decl_stmt><decl><type><name>BufferedWriter</name></type> <name>dictWriter</name> <init>= <expr><operator>new</operator> <call><name>BufferedWriter</name><argument_list>(
                                <argument><expr><operator>new</operator> <call><name>OutputStreamWriter</name><argument_list>(
                                <argument><expr><operator>new</operator> <call><name>FileOutputStream</name><argument_list>(<argument><expr><name>dict</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>BufferedWriter</name></type> <name>dictWriter</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>newBufferedWriter</name></name><argument_list>(<argument><expr><name>dict</name></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     
     <comment type="line">// drink signed with affix 2 (takes -s)</comment>
     <expr_stmt><expr><call><name><name>dictWriter</name><operator>.</operator><name>write</name></name><argument_list>(<argument><expr><literal type="string">"1\ndrink/2\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>dictWriter</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     
    <try>try <init>(<decl><type><name>InputStream</name></type> <name>affStream</name> <init>= <expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>affix</name></expr></argument>)</argument_list></call></expr></init></decl>; <decl><type><name>InputStream</name></type> <name>dictStream</name> <init>= <expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>dict</name></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
    <try>try <init>(<decl><type><name>InputStream</name></type> <name>affStream</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>newInputStream</name></name><argument_list>(<argument><expr><name>affix</name></expr></argument>)</argument_list></call></expr></init></decl>; <decl><type><name>InputStream</name></type> <name>dictStream</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>newInputStream</name></name><argument_list>(<argument><expr><name>dict</name></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
       <decl_stmt><decl><type><name>Dictionary</name></type> <name>dictionary</name> <init>= <expr><operator>new</operator> <call><name>Dictionary</name><argument_list>(<argument><expr><name>affStream</name></expr></argument>, <argument><expr><name>dictStream</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>Stemmer</name></type> <name>stemmer</name> <init>= <expr><operator>new</operator> <call><name>Stemmer</name><argument_list>(<argument><expr><name>dictionary</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <comment type="line">// drinks should still stem to drink</comment>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>hunspell</name><operator>/</operator><name><name>TestAllDictionaries</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>hunspell</name><operator>/</operator><name><name>TestAllDictionaries</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>fa007e3787b</name><operator>..</operator><literal type="number">288e3249c58</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>hunspell</name><operator>/</operator><name><name>TestAllDictionaries</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>hunspell</name><operator>/</operator><name><name>TestAllDictionaries</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>hunspell</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>StandardCharsets</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Paths</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>zip</name><operator>.</operator><name>ZipEntry</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>zip</name><operator>.</operator><name>ZipFile</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">39</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">41</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Ignore</name></name>;</import>
 <class><specifier>public</specifier> class <name>TestAllDictionaries</name> <super_list><extends>extends <super><name>LuceneTestCase</name></super></extends></super_list> <block>{
   
   <comment type="line">// set this to the location of where you downloaded all the files</comment>
  <decl_stmt><decl><type><specifier>static</specifier> <specifier>final</specifier> <name>File</name></type> <name>DICTIONARY_HOME</name> <init>= 
      <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><literal type="string">"/data/archive.services.openoffice.org/pub/mirror/OpenOffice.org/contrib/dictionaries"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>static</specifier> <specifier>final</specifier> <name>Path</name></type> <name>DICTIONARY_HOME</name> <init>= 
      <expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"/data/archive.services.openoffice.org/pub/mirror/OpenOffice.org/contrib/dictionaries"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
   
   <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name><name>tests</name><index>[]</index></name> <init>= <expr><block>{
     <comment type="block">/* zip file */</comment>               <comment type="block">/* dictionary */</comment>       <comment type="block">/* affix */</comment>
@@ <expr><operator>-</operator><literal type="number">156</literal></expr>,<expr><literal type="number">10</literal> <operator>+</operator><literal type="number">158</literal></expr>,<expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestAllDictionaries</name> extends <name>LuceneTestCase</name> <block>{
   
   <expr><specifier>public</specifier> <name>void</name> <call><name>test</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{</block></expr></argument></throws></expr>
     <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>tests</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name> <operator>+=</operator> <literal type="number">3</literal></expr></incr>)</control> <block>{<block_content>
      <decl_stmt><decl><type><name>File</name></type> <name>f</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>DICTIONARY_HOME</name></expr></argument>, <argument><expr><name><name>tests</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <assert>assert <expr><call><name><name>f</name><operator>.</operator><name>exists</name></name><argument_list>()</argument_list></call></expr>;</assert>
      <decl_stmt><decl><type><name>Path</name></type> <name>f</name> <init>= <expr><call><name><name>DICTIONARY_HOME</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><name><name>tests</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <assert>assert <expr><call><name><name>Files</name><operator>.</operator><name>exists</name></name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr>;</assert>
       
      <try>try <init>(<decl><type><name>ZipFile</name></type> <name>zip</name> <init>= <expr><operator>new</operator> <call><name>ZipFile</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
      <try>try <init>(<decl><type><name>ZipFile</name></type> <name>zip</name> <init>= <expr><operator>new</operator> <call><name>ZipFile</name><argument_list>(<argument><expr><call><name><name>f</name><operator>.</operator><name>toFile</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
         <decl_stmt><decl><type><name>ZipEntry</name></type> <name>dicEntry</name> <init>= <expr><call><name><name>zip</name><operator>.</operator><name>getEntry</name></name><argument_list>(<argument><expr><name><name>tests</name><index>[<expr><name>i</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <assert>assert <expr><name>dicEntry</name> <operator>!=</operator> <literal type="null">null</literal></expr>;</assert>
         <decl_stmt><decl><type><name>ZipEntry</name></type> <name>affEntry</name> <init>= <expr><call><name><name>zip</name><operator>.</operator><name>getEntry</name></name><argument_list>(<argument><expr><name><name>tests</name><index>[<expr><name>i</name><operator>+</operator><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">185</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">187</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestAllDictionaries</name> extends <name>LuceneTestCase</name> <block>{
     <expr><name>String</name> <name>toTest</name> <operator>=</operator> <literal type="string">"zu_ZA.zip"</literal></expr>;</block></expr></expr_stmt>
     <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>tests</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
       <if_stmt><if>if <condition>(<expr><name><name>tests</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>toTest</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <decl_stmt><decl><type><name>File</name></type> <name>f</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>DICTIONARY_HOME</name></expr></argument>, <argument><expr><name><name>tests</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <assert>assert <expr><call><name><name>f</name><operator>.</operator><name>exists</name></name><argument_list>()</argument_list></call></expr>;</assert>
        <decl_stmt><decl><type><name>Path</name></type> <name>f</name> <init>= <expr><call><name><name>DICTIONARY_HOME</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><name><name>tests</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <assert>assert <expr><call><name><name>Files</name><operator>.</operator><name>exists</name></name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr>;</assert>
         
        <try>try <init>(<decl><type><name>ZipFile</name></type> <name>zip</name> <init>= <expr><operator>new</operator> <call><name>ZipFile</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
        <try>try <init>(<decl><type><name>ZipFile</name></type> <name>zip</name> <init>= <expr><operator>new</operator> <call><name>ZipFile</name><argument_list>(<argument><expr><call><name><name>f</name><operator>.</operator><name>toFile</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
           <decl_stmt><decl><type><name>ZipEntry</name></type> <name>dicEntry</name> <init>= <expr><call><name><name>zip</name><operator>.</operator><name>getEntry</name></name><argument_list>(<argument><expr><name><name>tests</name><index>[<expr><name>i</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
           <assert>assert <expr><name>dicEntry</name> <operator>!=</operator> <literal type="null">null</literal></expr>;</assert>
           <decl_stmt><decl><type><name>ZipEntry</name></type> <name>affEntry</name> <init>= <expr><call><name><name>zip</name><operator>.</operator><name>getEntry</name></name><argument_list>(<argument><expr><name><name>tests</name><index>[<expr><name>i</name><operator>+</operator><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>hunspell</name><operator>/</operator><name><name>TestAllDictionaries2</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>hunspell</name><operator>/</operator><name><name>TestAllDictionaries2</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">8cb6cb0168b</literal><operator>..</operator><literal type="number">6fb59e8f667</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>hunspell</name><operator>/</operator><name><name>TestAllDictionaries2</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>hunspell</name><operator>/</operator><name><name>TestAllDictionaries2</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>hunspell</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>StandardCharsets</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Paths</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>zip</name><operator>.</operator><name>ZipEntry</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>zip</name><operator>.</operator><name>ZipFile</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">39</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">41</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Ignore</name></name>;</import>
 <class><specifier>public</specifier> class <name>TestAllDictionaries2</name> <super_list><extends>extends <super><name>LuceneTestCase</name></super></extends></super_list> <block>{
   
   <comment type="line">// set this to the location of where you downloaded all the files</comment>
  <decl_stmt><decl><type><specifier>static</specifier> <specifier>final</specifier> <name>File</name></type> <name>DICTIONARY_HOME</name> <init>= 
      <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><literal type="string">"/data/thunderbirdDicts"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>static</specifier> <specifier>final</specifier> <name>Path</name></type> <name>DICTIONARY_HOME</name> <init>= <expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"/data/thunderbirdDicts"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
   
   <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name><name>tests</name><index>[]</index></name> <init>= <expr><block>{
     <comment type="block">/* zip file */</comment>                                                                    <comment type="block">/* dictionary */</comment>                      <comment type="block">/* affix */</comment>
@@ <expr><operator>-</operator><literal type="number">172</literal></expr>,<expr><literal type="number">10</literal> <operator>+</operator><literal type="number">173</literal></expr>,<expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestAllDictionaries2</name> extends <name>LuceneTestCase</name> <block>{
   
   <expr><specifier>public</specifier> <name>void</name> <call><name>test</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{</block></expr></argument></throws></expr>
     <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>tests</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name> <operator>+=</operator> <literal type="number">3</literal></expr></incr>)</control> <block>{<block_content>
      <decl_stmt><decl><type><name>File</name></type> <name>f</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>DICTIONARY_HOME</name></expr></argument>, <argument><expr><name><name>tests</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <assert>assert <expr><call><name><name>f</name><operator>.</operator><name>exists</name></name><argument_list>()</argument_list></call></expr>;</assert>
      <decl_stmt><decl><type><name>Path</name></type> <name>f</name> <init>= <expr><call><name><name>DICTIONARY_HOME</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><name><name>tests</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <assert>assert <expr><call><name><name>Files</name><operator>.</operator><name>exists</name></name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr>;</assert>
       
      <try>try <init>(<decl><type><name>ZipFile</name></type> <name>zip</name> <init>= <expr><operator>new</operator> <call><name>ZipFile</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
      <try>try <init>(<decl><type><name>ZipFile</name></type> <name>zip</name> <init>= <expr><operator>new</operator> <call><name>ZipFile</name><argument_list>(<argument><expr><call><name><name>f</name><operator>.</operator><name>toFile</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
         <decl_stmt><decl><type><name>ZipEntry</name></type> <name>dicEntry</name> <init>= <expr><call><name><name>zip</name><operator>.</operator><name>getEntry</name></name><argument_list>(<argument><expr><name><name>tests</name><index>[<expr><name>i</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <assert>assert <expr><name>dicEntry</name> <operator>!=</operator> <literal type="null">null</literal></expr>;</assert>
         <decl_stmt><decl><type><name>ZipEntry</name></type> <name>affEntry</name> <init>= <expr><call><name><name>zip</name><operator>.</operator><name>getEntry</name></name><argument_list>(<argument><expr><name><name>tests</name><index>[<expr><name>i</name><operator>+</operator><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">201</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">202</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestAllDictionaries2</name> extends <name>LuceneTestCase</name> <block>{
     <expr><name>String</name> <name>toTest</name> <operator>=</operator> <literal type="string">"hungarian_dictionary-1.6.1.1-fx+tb+sm+fn.xpi"</literal></expr>;</block></expr></expr_stmt>
     <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>tests</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
       <if_stmt><if>if <condition>(<expr><name><name>tests</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>toTest</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <decl_stmt><decl><type><name>File</name></type> <name>f</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>DICTIONARY_HOME</name></expr></argument>, <argument><expr><name><name>tests</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <assert>assert <expr><call><name><name>f</name><operator>.</operator><name>exists</name></name><argument_list>()</argument_list></call></expr>;</assert>
        <decl_stmt><decl><type><name>Path</name></type> <name>f</name> <init>= <expr><call><name><name>DICTIONARY_HOME</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><name><name>tests</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <assert>assert <expr><call><name><name>Files</name><operator>.</operator><name>exists</name></name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr>;</assert>
         
        <try>try <init>(<decl><type><name>ZipFile</name></type> <name>zip</name> <init>= <expr><operator>new</operator> <call><name>ZipFile</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
        <try>try <init>(<decl><type><name>ZipFile</name></type> <name>zip</name> <init>= <expr><operator>new</operator> <call><name>ZipFile</name><argument_list>(<argument><expr><call><name><name>f</name><operator>.</operator><name>toFile</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
           <decl_stmt><decl><type><name>ZipEntry</name></type> <name>dicEntry</name> <init>= <expr><call><name><name>zip</name><operator>.</operator><name>getEntry</name></name><argument_list>(<argument><expr><name><name>tests</name><index>[<expr><name>i</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
           <assert>assert <expr><name>dicEntry</name> <operator>!=</operator> <literal type="null">null</literal></expr>;</assert>
           <decl_stmt><decl><type><name>ZipEntry</name></type> <name>affEntry</name> <init>= <expr><call><name><name>zip</name><operator>.</operator><name>getEntry</name></name><argument_list>(<argument><expr><name><name>tests</name><index>[<expr><name>i</name><operator>+</operator><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>it</name><operator>/</operator><name><name>TestItalianLightStemFilter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>it</name><operator>/</operator><name><name>TestItalianLightStemFilter</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>c178fe4a133</name><operator>..</operator><name>c56989d1f86</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>it</name><operator>/</operator><name><name>TestItalianLightStemFilter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>it</name><operator>/</operator><name><name>TestItalianLightStemFilter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">42</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">42</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestItalianLightStemFilter</name> extends <name>BaseTokenStreamTestCase</name> <block>{
   
   <comment type="block" format="javadoc">/** Test against a vocabulary from the reference impl */</comment>
   <expr><specifier>public</specifier> <name>void</name> <call><name>testVocabulary</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><call><name>assertVocabulary</name><argument_list>(<argument><expr><name>analyzer</name></expr></argument>, <argument><expr><call><name>getDataFile</name><argument_list>(<argument><expr><literal type="string">"itlighttestdata.zip"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"itlight.txt"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <call><name>assertVocabulary</name><argument_list>(<argument><expr><name>analyzer</name></expr></argument>, <argument><expr><call><name>getDataPath</name><argument_list>(<argument><expr><literal type="string">"itlighttestdata.zip"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"itlight.txt"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
   <expr_stmt/>}</block_content>
   
   <comment type="block" format="javadoc">/** blast some random strings through the analyzer */</comment>
diff --git a/lucene/analysis/common/src/test/org/apache/lucene/analysis/no/TestNorwegianLightStemFilter.java b/lucene/analysis/common/src/test/org/apache/lucene/analysis/no/TestNorwegianLightStemFilter.java
index 278577381f8..23d29d40496 100644
-- a/lucene/analysis/common/src/test/org/apache/lucene/analysis/no/TestNorwegianLightStemFilter.java
++ b/lucene/analysis/common/src/test/org/apache/lucene/analysis/no/TestNorwegianLightStemFilter.java
@@ -20</block><operator>,</operator><expr_stmt><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt></try> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>no</name></name>;</package>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileInputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>Reader</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Random</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>Analyzer</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">50</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">51</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestNorwegianLightStemFilter</name> extends <name>BaseTokenStreamTestCase</name> <block>{
   
   <comment type="block" format="javadoc">/** Test against a vocabulary file */</comment>
   <expr><specifier>public</specifier> <name>void</name> <call><name>testVocabulary</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><call><name>assertVocabulary</name><argument_list>(<argument><expr><name>analyzer</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><call><name>getDataFile</name><argument_list>(<argument><expr><literal type="string">"nb_light.txt"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <call><name>assertVocabulary</name><argument_list>(<argument><expr><name>analyzer</name></expr></argument>, <argument><expr><call><name><name>Files</name><operator>.</operator><name>newInputStream</name></name><argument_list>(<argument><expr><call><name>getDataPath</name><argument_list>(<argument><expr><literal type="string">"nb_light.txt"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
   <expr_stmt/>}</block_content>
   
   <comment type="block" format="javadoc">/** Test against a Nynorsk vocabulary file */</comment>
@@ -62</block><operator>,</operator><expr_stmt><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">63</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestNorwegianLightStemFilter</name> extends <name>BaseTokenStreamTestCase</name> <block>{
         <return>return <expr><operator>new</operator> <call><name>TokenStreamComponents</name><argument_list>(<argument><expr><name>source</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>NorwegianLightStemFilter</name><argument_list>(<argument><expr><name>source</name></expr></argument>, <argument><expr><name>NYNORSK</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
       }</block>
     }</expr>;</expr_stmt></try>
    <expr_stmt><expr><call><name>assertVocabulary</name><argument_list>(<argument><expr><name>analyzer</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><call><name>getDataFile</name><argument_list>(<argument><expr><literal type="string">"nn_light.txt"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertVocabulary</name><argument_list>(<argument><expr><name>analyzer</name></expr></argument>, <argument><expr><call><name><name>Files</name><operator>.</operator><name>newInputStream</name></name><argument_list>(<argument><expr><call><name>getDataPath</name><argument_list>(<argument><expr><literal type="string">"nn_light.txt"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   <expr_stmt/>}</block_content>
   
   public void testKeyword(</block></if></if_stmt>)</block_content> <throws>throws <argument><expr><name>IOException</name> <block>{
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>no</name><operator>/</operator><name><name>TestNorwegianMinimalStemFilter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>no</name><operator>/</operator><name><name>TestNorwegianMinimalStemFilter</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>a0dbc8671d6</name><operator>..</operator><name>d0f53ece4c4</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>no</name><operator>/</operator><name><name>TestNorwegianMinimalStemFilter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>no</name><operator>/</operator><name><name>TestNorwegianMinimalStemFilter</name><operator>.</operator><name>java</name></name></expr></block></expr></argument>
@<argument>@ <expr><operator>-</operator><literal type="number">20</literal></expr></argument>,<argument><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">20</literal></expr></argument>,<argument><expr><literal type="number">7</literal> @@</expr></argument></throws></block></for> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>no</name></name>;</package>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileInputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>Reader</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Random</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>Analyzer</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">49</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">50</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestNorwegianMinimalStemFilter</name> extends <name>BaseTokenStreamTestCase</name> <block>{
   
   <comment type="block" format="javadoc">/** Test against a BokmÃ¥l vocabulary file */</comment>
   <expr><specifier>public</specifier> <name>void</name> <call><name>testVocabulary</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><call><name>assertVocabulary</name><argument_list>(<argument><expr><name>analyzer</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><call><name>getDataFile</name><argument_list>(<argument><expr><literal type="string">"nb_minimal.txt"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <call><name>assertVocabulary</name><argument_list>(<argument><expr><name>analyzer</name></expr></argument>, <argument><expr><call><name><name>Files</name><operator>.</operator><name>newInputStream</name></name><argument_list>(<argument><expr><call><name>getDataPath</name><argument_list>(<argument><expr><literal type="string">"nb_minimal.txt"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
   <expr_stmt/>}</block_content>
   
   <comment type="block" format="javadoc">/** Test against a Nynorsk vocabulary file */</comment>
@@ -61</block><operator>,</operator><expr_stmt><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">62</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestNorwegianMinimalStemFilter</name> extends <name>BaseTokenStreamTestCase</name> <block>{
         <return>return <expr><operator>new</operator> <call><name>TokenStreamComponents</name><argument_list>(<argument><expr><name>source</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>NorwegianMinimalStemFilter</name><argument_list>(<argument><expr><name>source</name></expr></argument>, <argument><expr><name>NYNORSK</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
       }</block>
     }</expr>;</expr_stmt></try>
    <expr_stmt><expr><call><name>assertVocabulary</name><argument_list>(<argument><expr><name>analyzer</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><call><name>getDataFile</name><argument_list>(<argument><expr><literal type="string">"nn_minimal.txt"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertVocabulary</name><argument_list>(<argument><expr><name>analyzer</name></expr></argument>, <argument><expr><call><name><name>Files</name><operator>.</operator><name>newInputStream</name></name><argument_list>(<argument><expr><call><name>getDataPath</name><argument_list>(<argument><expr><literal type="string">"nn_minimal.txt"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   <expr_stmt/>}</block_content>
   
   public void testKeyword(</block></try>)</block_content> <throws>throws <argument><expr><name>IOException</name> <block>{
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>pt</name><operator>/</operator><name><name>TestPortugueseLightStemFilter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>pt</name><operator>/</operator><name><name>TestPortugueseLightStemFilter</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>d04980f3eb8</name><operator>..</operator><name>b53f8d3c3c9</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>pt</name><operator>/</operator><name><name>TestPortugueseLightStemFilter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>pt</name><operator>/</operator><name><name>TestPortugueseLightStemFilter</name><operator>.</operator><name>java</name></name></expr></block></expr></argument>
@<argument>@ <expr><operator>-</operator><literal type="number">88</literal></expr></argument>,<argument><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">88</literal></expr></argument>,<argument><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestPortugueseLightStemFilter</name> extends <name>BaseTokenStreamTestCase</name></expr></argument></throws> <block>{<block_content>
   
   <comment type="block" format="javadoc">/** Test against a vocabulary from the reference impl */</comment>
   <function><type><specifier>public</specifier> <name>void</name></type> <name>testVocabulary</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name>assertVocabulary</name><argument_list>(<argument><expr><name>analyzer</name></expr></argument>, <argument><expr><call><name>getDataFile</name><argument_list>(<argument><expr><literal type="string">"ptlighttestdata.zip"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"ptlight.txt"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertVocabulary</name><argument_list>(<argument><expr><name>analyzer</name></expr></argument>, <argument><expr><call><name>getDataPath</name><argument_list>(<argument><expr><literal type="string">"ptlighttestdata.zip"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"ptlight.txt"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   <expr_stmt/>}</block_content>
   
   public void testKeyword(</block></function>)</block_content> <throws>throws <argument><expr><name>IOException</name> <block>{
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>pt</name><operator>/</operator><name><name>TestPortugueseMinimalStemFilter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>pt</name><operator>/</operator><name><name>TestPortugueseMinimalStemFilter</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>c7a4ebad289</name><operator>..</operator><literal type="number">3b11516de34</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>pt</name><operator>/</operator><name><name>TestPortugueseMinimalStemFilter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>pt</name><operator>/</operator><name><name>TestPortugueseMinimalStemFilter</name><operator>.</operator><name>java</name></name></expr></block></expr></argument>
@<argument>@ <expr><operator>-</operator><literal type="number">62</literal></expr></argument>,<argument><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">62</literal></expr></argument>,<argument><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestPortugueseMinimalStemFilter</name> extends <name>BaseTokenStreamTestCase</name></expr></argument></throws> <block>{<block_content>
   
   <comment type="block" format="javadoc">/** Test against a vocabulary from the reference impl */</comment>
   <function><type><specifier>public</specifier> <name>void</name></type> <name>testVocabulary</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name>assertVocabulary</name><argument_list>(<argument><expr><name>analyzer</name></expr></argument>, <argument><expr><call><name>getDataFile</name><argument_list>(<argument><expr><literal type="string">"ptminimaltestdata.zip"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"ptminimal.txt"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertVocabulary</name><argument_list>(<argument><expr><name>analyzer</name></expr></argument>, <argument><expr><call><name>getDataPath</name><argument_list>(<argument><expr><literal type="string">"ptminimaltestdata.zip"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"ptminimal.txt"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   <expr_stmt/>}</block_content>
   
   public void testKeyword(</block></function>)</block_content> <throws>throws <argument><expr><name>IOException</name> <block>{
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>pt</name><operator>/</operator><name><name>TestPortugueseStemFilter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>pt</name><operator>/</operator><name><name>TestPortugueseStemFilter</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">24421d1f12d</literal><operator>..</operator><literal type="number">11b330d11d1</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>pt</name><operator>/</operator><name><name>TestPortugueseStemFilter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>pt</name><operator>/</operator><name><name>TestPortugueseStemFilter</name><operator>.</operator><name>java</name></name></expr></block></expr></argument>
@<argument>@ <expr><operator>-</operator><literal type="number">62</literal></expr></argument>,<argument><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">62</literal></expr></argument>,<argument><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestPortugueseStemFilter</name> extends <name>BaseTokenStreamTestCase</name></expr></argument></throws> <block>{<block_content>
   
   <comment type="block" format="javadoc">/** Test against a vocabulary from the reference impl */</comment>
   <function><type><specifier>public</specifier> <name>void</name></type> <name>testVocabulary</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name>assertVocabulary</name><argument_list>(<argument><expr><name>analyzer</name></expr></argument>, <argument><expr><call><name>getDataFile</name><argument_list>(<argument><expr><literal type="string">"ptrslptestdata.zip"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"ptrslp.txt"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertVocabulary</name><argument_list>(<argument><expr><name>analyzer</name></expr></argument>, <argument><expr><call><name>getDataPath</name><argument_list>(<argument><expr><literal type="string">"ptrslptestdata.zip"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"ptrslp.txt"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   <expr_stmt/>}</block_content>
   
   public void testKeyword(</block></function>)</block_content> <throws>throws <argument><expr><name>IOException</name> <block>{
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>ru</name><operator>/</operator><name><name>TestRussianLightStemFilter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>ru</name><operator>/</operator><name><name>TestRussianLightStemFilter</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">1d4a381e9d0</literal><operator>..</operator><name>cbafbee446f</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>ru</name><operator>/</operator><name><name>TestRussianLightStemFilter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>ru</name><operator>/</operator><name><name>TestRussianLightStemFilter</name><operator>.</operator><name>java</name></name></expr></block></expr></argument>
@<argument>@ <expr><operator>-</operator><literal type="number">45</literal></expr></argument>,<argument><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">45</literal></expr></argument>,<argument><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestRussianLightStemFilter</name> extends <name>BaseTokenStreamTestCase</name></expr></argument></throws> <block>{<block_content>
   
   <comment type="block" format="javadoc">/** Test against a vocabulary from the reference impl */</comment>
   <function><type><specifier>public</specifier> <name>void</name></type> <name>testVocabulary</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name>assertVocabulary</name><argument_list>(<argument><expr><name>analyzer</name></expr></argument>, <argument><expr><call><name>getDataFile</name><argument_list>(<argument><expr><literal type="string">"rulighttestdata.zip"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"rulight.txt"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertVocabulary</name><argument_list>(<argument><expr><name>analyzer</name></expr></argument>, <argument><expr><call><name>getDataPath</name><argument_list>(<argument><expr><literal type="string">"rulighttestdata.zip"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"rulight.txt"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   <expr_stmt/>}</block_content>
   
   public void testKeyword(</block></function>)</block_content> <throws>throws <argument><expr><name>IOException</name> <block>{
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>snowball</name><operator>/</operator><name><name>TestSnowballVocab</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>snowball</name><operator>/</operator><name><name>TestSnowballVocab</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>fa50c366ed4</name><operator>..</operator><name>a7a375c1c35</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>snowball</name><operator>/</operator><name><name>TestSnowballVocab</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>snowball</name><operator>/</operator><name><name>TestSnowballVocab</name><operator>.</operator><name>java</name></name></expr></block></expr></argument>
@<argument>@ <expr><operator>-</operator><literal type="number">76</literal></expr></argument>,<argument><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">76</literal></expr></argument>,<argument><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSnowballVocab</name> extends <name>LuceneTestCase</name></expr></argument></throws> <block>{<block_content>
       <expr_stmt/>}</block_content>  
     }</block></block></block></block></block></block><empty_stmt>;</empty_stmt></for>
     
    <call><name>assertVocabulary</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><call><name>getDataFile</name><argument_list>(<argument><expr><literal type="string">"TestSnowballVocabData.zip"</literal></expr></argument>)</argument_list></call></expr></argument>, 
    <argument><expr><call><name>assertVocabulary</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><call><name>getDataPath</name><argument_list>(<argument><expr><literal type="string">"TestSnowballVocabData.zip"</literal></expr></argument>)</argument_list></call></expr></argument>, 
         <argument><expr><name>dataDirectory</name> <operator>+</operator> <literal type="string">"/voc.txt"</literal></expr></argument>, <argument><expr><name>dataDirectory</name> <operator>+</operator> <literal type="string">"/output.txt"</literal></expr></argument>)</argument_list></call></expr></argument>;</argument_list></call>
   }</block>
 }
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>sv</name><operator>/</operator><name><name>TestSwedishLightStemFilter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>sv</name><operator>/</operator><name><name>TestSwedishLightStemFilter</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>ef87a8e3a67</name><operator>..</operator><literal type="number">09ab5258956</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>sv</name><operator>/</operator><name><name>TestSwedishLightStemFilter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>sv</name><operator>/</operator><name><name>TestSwedishLightStemFilter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">45</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">45</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSwedishLightStemFilter</name> extends <name>BaseTokenStreamTestCase</name> <block>{
   
   <comment type="block" format="javadoc">/** Test against a vocabulary from the reference impl */</comment>
   <expr><specifier>public</specifier> <name>void</name> <call><name>testVocabulary</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><call><name>assertVocabulary</name><argument_list>(<argument><expr><name>analyzer</name></expr></argument>, <argument><expr><call><name>getDataFile</name><argument_list>(<argument><expr><literal type="string">"svlighttestdata.zip"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"svlight.txt"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <call><name>assertVocabulary</name><argument_list>(<argument><expr><name>analyzer</name></expr></argument>, <argument><expr><call><name>getDataPath</name><argument_list>(<argument><expr><literal type="string">"svlighttestdata.zip"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"svlight.txt"</literal></expr></argument>)</argument_list></call></block></expr>;
   }</block>
   
   <specifier>public</specifier> <name>void</name> <call><name>testKeyword</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestFilesystemResourceLoader</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestFilesystemResourceLoader</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>b24c9372dd7</name><operator>..</operator><literal type="number">877949e3874</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestFilesystemResourceLoader</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>common</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestFilesystemResourceLoader</name><operator>.</operator><name>java</name></name></expr></block></expr></argument>
@<argument>@ <expr><operator>-</operator><literal type="number">24</literal></expr></argument>,<argument><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">24</literal></expr></argument>,<argument><expr><literal type="number">8</literal> @@</expr></argument></throws></expr></init></decl></decl_stmt> <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStreamReader</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>OutputStreamWriter</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>Writer</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>StandardCharsets</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>IOUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>LuceneTestCase</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">61</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">63</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestFilesystemResourceLoader</name> extends <name>LuceneTestCase</name> <block>{
   }</block>
   
   <specifier>public</specifier> <name>void</name> <call><name>testBaseDir</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>final</name> <name>File</name> <name>base</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"fsResourceLoaderBase"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getAbsoluteFile</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>Path</name></type> <name>base</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"fsResourceLoaderBase"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <try>try <block>{<block_content>
      <expr_stmt><expr><call><name><name>base</name><operator>.</operator><name>mkdirs</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>Writer</name></type> <name>os</name> <init>= <expr><operator>new</operator> <call><name>OutputStreamWriter</name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileOutputStream</name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>base</name></expr></argument>, <argument><expr><literal type="string">"template.txt"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>Writer</name></type> <name>os</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>newBufferedWriter</name></name><argument_list>(<argument><expr><call><name><name>base</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><literal type="string">"template.txt"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <try>try <block>{<block_content>
         <expr_stmt><expr><call><name><name>os</name><operator>.</operator><name>write</name></name><argument_list>(<argument><expr><literal type="string">"foobar\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt/>}</block_content> finally <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">74</literal></expr><operator>,</operator><expr><literal type="number">25</literal> <operator>+</operator><literal type="number">75</literal></expr><operator>,</operator><expr><literal type="number">18</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestFilesystemResourceLoader</name> extends <name>LuceneTestCase</name> <block>{
       <expr><name>ResourceLoader</name> <name>rl</name> <operator>=</operator> <operator>new</operator> <call><name>FilesystemResourceLoader</name><argument_list>(<argument><expr><name>base</name></expr></argument>)</argument_list></call></expr>;
       <call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"foobar"</literal></expr></argument>, <argument><expr><call><name><name>WordlistLoader</name><operator>.</operator><name>getLines</name></name><argument_list>(<argument><expr><call><name><name>rl</name><operator>.</operator><name>openResource</name></name><argument_list>(<argument><expr><literal type="string">"template.txt"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
       <comment type="line">// Same with full path name:</comment>
      <decl_stmt><decl><type><name>String</name></type> <name>fullPath</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>base</name></expr></argument>, <argument><expr><literal type="string">"template.txt"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>String</name></type> <name>fullPath</name> <init>= <expr><call><name><name>base</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><literal type="string">"template.txt"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toAbsolutePath</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"foobar"</literal></expr></argument>,
           <argument><expr><call><name><name>WordlistLoader</name><operator>.</operator><name>getLines</name></name><argument_list>(<argument><expr><call><name><name>rl</name><operator>.</operator><name>openResource</name></name><argument_list>(<argument><expr><name>fullPath</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>assertClasspathDelegation</name><argument_list>(<argument><expr><name>rl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>assertNotFound</name><argument_list>(<argument><expr><name>rl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      
      <comment type="line">// now use RL without base dir:</comment>
      <expr_stmt><expr><name>rl</name> <operator>=</operator> <operator>new</operator> <call><name>FilesystemResourceLoader</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"foobar"</literal></expr></argument>,
          <argument><expr><call><name><name>WordlistLoader</name><operator>.</operator><name>getLines</name></name><argument_list>(<argument><expr><call><name><name>rl</name><operator>.</operator><name>openResource</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>base</name></expr></argument>, <argument><expr><literal type="string">"template.txt"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>assertClasspathDelegation</name><argument_list>(<argument><expr><name>rl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>assertNotFound</name><argument_list>(<argument><expr><name>rl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt/>}</block_content> finally <block>{<block_content>
       <expr_stmt><expr><call><name><name>IOUtils</name><operator>.</operator><name>rm</name></name><argument_list>(<argument><expr><name>base</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt/>}</block_content>
   }
   
   public void testDelegation(</block></block></block></try>)</block_content> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>ResourceLoader</name> <name>rl</name> <operator>=</operator> <operator>new</operator> <call><name>FilesystemResourceLoader</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>StringMockResourceLoader</name><argument_list>(<argument><expr><literal type="string">"foobar\n"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></block><empty_stmt>;</empty_stmt></try>
    <decl_stmt><decl><type><name>ResourceLoader</name></type> <name>rl</name> <init>= <expr><operator>new</operator> <call><name>FilesystemResourceLoader</name><argument_list>(<argument><expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"empty"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <call><name>StringMockResourceLoader</name><argument_list>(<argument><expr><literal type="string">"foobar\n"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"foobar"</literal></expr></argument>, <argument><expr><call><name><name>WordlistLoader</name><operator>.</operator><name>getLines</name></name><argument_list>(<argument><expr><call><name><name>rl</name><operator>.</operator><name>openResource</name></name><argument_list>(<argument><expr><literal type="string">"template.txt"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   <expr_stmt/>}</block>
   
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>kuromoji</name><operator>/</operator><name>src</name><operator>/</operator><name>tools</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>ja</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TokenInfoDictionaryWriter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>kuromoji</name><operator>/</operator><name>src</name><operator>/</operator><name>tools</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>ja</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TokenInfoDictionaryWriter</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>aa5f5cd00b4</name><operator>..</operator><literal type="number">315ace9ef85</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>kuromoji</name><operator>/</operator><name>src</name><operator>/</operator><name>tools</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>ja</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TokenInfoDictionaryWriter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>kuromoji</name><operator>/</operator><name>src</name><operator>/</operator><name>tools</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>ja</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TokenInfoDictionaryWriter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@</expr></expr_stmt></class> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>ja</name><operator>.</operator><name>util</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Paths</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>ja</name><operator>.</operator><name>dict</name><operator>.</operator><name>TokenInfoDictionary</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>fst</name><operator>.</operator><name>FST</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">41</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">43</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>TokenInfoDictionaryWriter</name> extends <name>BinaryDictionaryWriter</name> <block>{
   }</block>
   
   <specifier>protected</specifier> <name>void</name> <call><name>writeFST</name><argument_list>(<argument><expr><name>String</name> <name>filename</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><name>File</name> <name>f</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>filename</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>f</name><operator>.</operator><name>getParentFile</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>mkdirs</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>fst</name><operator>.</operator><name>save</name></name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>p</name> <init>= <expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>filename</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>createDirectories</name></name><argument_list>(<argument><expr><call><name><name>p</name><operator>.</operator><name>getParent</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>fst</name><operator>.</operator><name>save</name></name><argument_list>(<argument><expr><name>p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   <expr_stmt/>}</block_content>  
 }
diff --git a/lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/AnalyzerProfile.java b/lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/AnalyzerProfile.java
index 8198abd6294..6a6f45759be 100644
-- a/lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/AnalyzerProfile.java
++ b/lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/AnalyzerProfile.java
@@ -17</block><operator>,</operator><expr_stmt><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@</expr></expr_stmt></try>
 
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>cn</name><operator>.</operator><name>smart</name></name>;</package>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileInputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>BufferedReader</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStreamReader</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>StandardCharsets</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Paths</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Properties</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
@@ -51,16 +52,18 @@ public class AnalyzerProfile {
     if (ANALYSIS_DATA_DIR.length() != 0)
       return;
 
    File[] cadidateFiles = new File[] { new File("./" + dirName),
        new File("./lib/" + dirName), new File("./" + propName),
        new File("./lib/" + propName) };
    for (int i = 0; i &lt; cadidateFiles.length; i++) {
      File file = cadidateFiles[i];
      if (file.exists()) {
        if (file.isDirectory()) {
          ANALYSIS_DATA_DIR = file.getAbsolutePath();
        } else if (file.isFile() &amp;&amp; getAnalysisDataDir(file).length() != 0) {
          ANALYSIS_DATA_DIR = getAnalysisDataDir(file);
    Path[] candidateFiles = new Path[] {
        Paths.get(dirName),
        Paths.get("lib").resolve(dirName),
        Paths.get(propName),
        Paths.get("lib").resolve(propName)
    };
    for (Path file : candidateFiles) {
      if (Files.exists(file)) {
        if (Files.isDirectory(file)) {
          ANALYSIS_DATA_DIR = file.toAbsolutePath().toString();
        } else if (Files.isRegularFile(file) &amp;&amp; getAnalysisDataDir(file).length() != 0) {
          ANALYSIS_DATA_DIR = getAnalysisDataDir(file).toString();
         }
         break;
       }
@@ -75,14 +78,11 @@ public class AnalyzerProfile {
 
   }
 
  private static String getAnalysisDataDir(File propFile) {
  private static String getAnalysisDataDir(Path propFile) {
     Properties prop = new Properties();
    try {
      FileInputStream input = new FileInputStream(propFile);
      prop.load(new InputStreamReader(input, StandardCharsets.UTF_8));
      String dir = prop.getProperty("analysis.data.dir", "");
      input.close();
      return dir;
    try (BufferedReader reader = Files.newBufferedReader(propFile, StandardCharsets.UTF_8)) {
      prop.load(reader);
      return prop.getProperty("analysis.data.dir", "");
     } catch (IOException e) {
       return "";
     }
diff --git a/lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/BigramDictionary.java b/lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/BigramDictionary.java
index bffed1a299c..9d67afc6232 100644
-- a/lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/BigramDictionary.java
++ b/lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/BigramDictionary.java
@@ -17,18 +17,16 @@
 
 package org.apache.lucene.analysis.cn.smart.hhmm;
 
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.DataInputStream;
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.ObjectInputStream;
 import java.io.ObjectOutputStream;
import java.io.RandomAccessFile;
import java.io.UnsupportedEncodingException;
 import java.nio.ByteBuffer;
 import java.nio.ByteOrder;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
 
 import org.apache.lucene.analysis.cn.smart.AnalyzerProfile;
 
@@ -75,9 +73,9 @@ class BigramDictionary extends AbstractDictionary {
     return singleInstance;
   }
 
  private boolean loadFromObj(File serialObj) {
  private boolean loadFromObj(Path serialObj) {
     try {
      loadFromInputStream(new FileInputStream(serialObj));
      loadFromInputStream(Files.newInputStream(serialObj));
       return true;
     } catch (Exception e) {
       throw new RuntimeException(e);
@@ -93,9 +91,9 @@ class BigramDictionary extends AbstractDictionary {
     input.close();
   }
 
  private void saveToObj(File serialObj) {
  private void saveToObj(Path serialObj) {
     try {
      ObjectOutputStream output = new ObjectOutputStream(new FileOutputStream(
      ObjectOutputStream output = new ObjectOutputStream(Files.newOutputStream(
           serialObj));
       output.writeObject(bigramHashTable);
       output.writeObject(frequencyTable);
@@ -114,9 +112,9 @@ class BigramDictionary extends AbstractDictionary {
   private void load(String dictRoot) {
     String bigramDictPath = dictRoot + "/bigramdict.dct";
 
    File serialObj = new File(dictRoot + "/bigramdict.mem");
    Path serialObj = Paths.get(dictRoot + "/bigramdict.mem");
 
    if (serialObj.exists() &amp;&amp; loadFromObj(serialObj)) {
    if (Files.exists(serialObj) &amp;&amp; loadFromObj(serialObj)) {
 
     } else {
       try {
@@ -149,7 +147,7 @@ class BigramDictionary extends AbstractDictionary {
     int[] buffer = new int[3];
     byte[] intBuffer = new byte[4];
     String tmpword;
    RandomAccessFile dctFile = new RandomAccessFile(dctFilePath, "r");
    DataInputStream dctFile = new DataInputStream(Files.newInputStream(Paths.get(dctFilePath)));
 
     // GB2312 characters 0 - 6768
     for (i = GB2312_FIRST_CHAR; i &lt; GB2312_FIRST_CHAR + CHAR_NUM_IN_FILE; i++) {
diff --git a/lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/WordDictionary.java b/lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/WordDictionary.java
index 9a7979ec5a4..7d7e9050ec2 100644
-- a/lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/WordDictionary.java
++ b/lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/WordDictionary.java
@@ -17,18 +17,16 @@
 
 package org.apache.lucene.analysis.cn.smart.hhmm;
 
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.DataInputStream;
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.ObjectInputStream;
 import java.io.ObjectOutputStream;
import java.io.RandomAccessFile;
import java.io.UnsupportedEncodingException;
 import java.nio.ByteBuffer;
 import java.nio.ByteOrder;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
 
 import org.apache.lucene.analysis.cn.smart.AnalyzerProfile;
 import org.apache.lucene.analysis.cn.smart.Utility;
@@ -101,9 +99,9 @@ class WordDictionary extends AbstractDictionary {
    */</comment>
   <function><type><specifier>public</specifier> <name>void</name></type> <name>load</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>dctFileRoot</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <decl_stmt><decl><type><name>String</name></type> <name>dctFilePath</name> <init>= <expr><name>dctFileRoot</name> <operator>+</operator> <literal type="string">"/coredict.dct"</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>serialObj</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>dctFileRoot</name> <operator>+</operator> <literal type="string">"/coredict.mem"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>serialObj</name> <init>= <expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>dctFileRoot</name> <operator>+</operator> <literal type="string">"/coredict.mem"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
    <if_stmt><if>if <condition>(<expr><call><name><name>serialObj</name><operator>.</operator><name>exists</name></name><argument_list>()</argument_list></call> <operator>&amp;&amp;</operator> <call><name>loadFromObj</name><argument_list>(<argument><expr><name>serialObj</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><call><name><name>Files</name><operator>.</operator><name>exists</name></name><argument_list>(<argument><expr><name>serialObj</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <call><name>loadFromObj</name><argument_list>(<argument><expr><name>serialObj</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
 
     <expr_stmt/>}</block_content> else <block>{<block_content>
       <try>try <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">140</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">138</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <name>class</name> <name>WordDictionary</name> extends <name>AbstractDictionary</name> <block>{
     <expr><call><name>loadFromObjectInputStream</name><argument_list>(<argument><expr><name>input</name></expr></argument>)</argument_list></call></expr>;
   }</block>
 
  <specifier>private</specifier> <name>boolean</name> <call><name>loadFromObj</name><argument_list>(<argument><expr><name>File</name> <name>serialObj</name></expr></argument>)</argument_list></call> <block>{
  <expr><specifier>private</specifier> <name>boolean</name> <call><name>loadFromObj</name><argument_list>(<argument><expr><name>Path</name> <name>serialObj</name></expr></argument>)</argument_list></call> <block>{
     <try>try <block>{<block_content>
      <expr_stmt><expr><call><name>loadFromObjectInputStream</name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>serialObj</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>loadFromObjectInputStream</name><argument_list>(<argument><expr><call><name><name>Files</name><operator>.</operator><name>newInputStream</name></name><argument_list>(<argument><expr><name>serialObj</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <return>return <expr><literal type="boolean">true</literal></expr>;</return>
     <expr_stmt/>}</block_content> catch (Exception e</block></try>)</block> <block>{
       <throw>throw <argument_list>new <argument><expr><call><name>RuntimeException</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr></argument></argument_list></throw>;
@@ <operator>-</operator><literal type="number">160</literal>,<literal type="number">9</literal> <operator>+</operator><literal type="number">158</literal>,<literal type="number">9</literal> @@ <name>class</name> <name>WordDictionary</name> extends <name>AbstractDictionary</name> <block>{
     <expr><call><name><name>input</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;
   }</block></block>
 
  <specifier>private</specifier> <name>void</name> <call><name>saveToObj</name><argument_list>(<argument><expr><name>File</name> <name>serialObj</name></expr></argument>)</argument_list></call> <block>{
  <expr><specifier>private</specifier> <name>void</name> <call><name>saveToObj</name><argument_list>(<argument><expr><name>Path</name> <name>serialObj</name></expr></argument>)</argument_list></call> <block>{
     <try>try <block>{<block_content>
      <decl_stmt><decl><type><name>ObjectOutputStream</name></type> <name>output</name> <init>= <expr><operator>new</operator> <call><name>ObjectOutputStream</name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileOutputStream</name><argument_list>(
      <argument><expr><name>ObjectOutputStream</name> <name>output</name> <operator>=</operator> <operator>new</operator> <call><name>ObjectOutputStream</name><argument_list>(<argument><expr><call><name><name>Files</name><operator>.</operator><name>newOutputStream</name></name><argument_list>(
           <argument><expr><name>serialObj</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>;</argument_list></call></expr></argument></argument_list></call></expr></init></decl></decl_stmt>
       <expr_stmt><expr><call><name><name>output</name><operator>.</operator><name>writeObject</name></name><argument_list>(<argument><expr><name>wordIndexTable</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>output</name><operator>.</operator><name>writeObject</name></name><argument_list>(<argument><expr><name>charIndexTable</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">189</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">187</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <name>class</name> <name>WordDictionary</name> extends <name>AbstractDictionary</name> <block>{
     <expr><name><name>int</name><index>[]</index></name> <name>buffer</name> <operator>=</operator> <operator>new</operator> <name><name>int</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>;
     <name><name>byte</name><index>[]</index></name> <name>intBuffer</name> <operator>=</operator> <operator>new</operator> <name><name>byte</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></block></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>String</name></type> <name>tmpword</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>RandomAccessFile</name></type> <name>dctFile</name> <init>= <expr><operator>new</operator> <call><name>RandomAccessFile</name><argument_list>(<argument><expr><name>dctFilePath</name></expr></argument>, <argument><expr><literal type="string">"r"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>DataInputStream</name></type> <name>dctFile</name> <init>= <expr><operator>new</operator> <call><name>DataInputStream</name><argument_list>(<argument><expr><call><name><name>Files</name><operator>.</operator><name>newInputStream</name></name><argument_list>(<argument><expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>dctFilePath</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <comment type="line">// GB2312 characters 0 - 6768</comment>
     <for>for <control>(<init><expr><name>i</name> <operator>=</operator> <name>GB2312_FIRST_CHAR</name></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>GB2312_FIRST_CHAR</name> <operator>+</operator> <name>CHAR_NUM_IN_FILE</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>stempel</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>egothor</name><operator>/</operator><name>stemmer</name><operator>/</operator><name><name>Compile</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>stempel</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>egothor</name><operator>/</operator><name>stemmer</name><operator>/</operator><name><name>Compile</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>d7fdaecef8f</name><operator>..</operator><literal type="number">13b478f5edb</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>stempel</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>egothor</name><operator>/</operator><name>stemmer</name><operator>/</operator><name><name>Compile</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>stempel</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>egothor</name><operator>/</operator><name>stemmer</name><operator>/</operator><name><name>Compile</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">55</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">55</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@</expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>egothor</name><operator>.</operator><name>stemmer</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>BufferedOutputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>BufferedReader</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>DataOutputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileInputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileNotFoundException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileOutputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStreamReader</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>LineNumberReader</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>Charset</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Paths</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Locale</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>StringTokenizer</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">126</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">123</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>Compile</name> <block>{
       <expr><call><name>allocTrie</name><argument_list>()</argument_list></call></expr>;
       
       <call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><name><name>args</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
      <expr_stmt><expr><name>in</name> <operator>=</operator> <operator>new</operator> <call><name>LineNumberReader</name><argument_list>(<argument><expr><operator>new</operator> <call><name>BufferedReader</name><argument_list>(<argument><expr><operator>new</operator> <call><name>InputStreamReader</name><argument_list>(
          <argument><expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name><name>args</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>charset</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>in</name> <operator>=</operator> <operator>new</operator> <call><name>LineNumberReader</name><argument_list>(<argument><expr><call><name><name>Files</name><operator>.</operator><name>newBufferedReader</name></name><argument_list>(<argument><expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>args</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>Charset</name><operator>.</operator><name>forName</name></name><argument_list>(<argument><expr><name>charset</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <for>for <control>(<init><decl><type><name>String</name></type> <name>line</name> <init>= <expr><call><name><name>in</name><operator>.</operator><name>readLine</name></name><argument_list>()</argument_list></call></expr></init></decl>;</init> <condition><expr><name>line</name> <operator>!=</operator> <literal type="null">null</literal></expr>;</condition> <incr><expr><name>line</name> <operator>=</operator> <call><name><name>in</name><operator>.</operator><name>readLine</name></name><argument_list>()</argument_list></call></expr></incr>)</control> <block>{<block_content>
         <try>try <block>{<block_content>
           <expr_stmt><expr><name>line</name> <operator>=</operator> <call><name><name>line</name><operator>.</operator><name>toLowerCase</name></name><argument_list>(<argument><expr><name><name>Locale</name><operator>.</operator><name>ROOT</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">186</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">182</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>Compile</name> <block>{
       }</block>
       
       <name>DataOutputStream</name> <name>os</name> <operator>=</operator> <operator>new</operator> <call><name>DataOutputStream</name><argument_list>(<argument><expr><operator>new</operator> <call><name>BufferedOutputStream</name><argument_list>(
          <argument><expr><operator>new</operator> <call><name>FileOutputStream</name><argument_list>(<argument><expr><name><name>args</name><index>[<expr><name>i</name></expr>]</index></name> <operator>+</operator> <literal type="string">".out"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>newOutputStream</name></name><argument_list>(<argument><expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>args</name><index>[<expr><name>i</name></expr>]</index></name> <operator>+</operator> <literal type="string">".out"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></expr_stmt>)</block_content></block></try>)</block_content></block><empty_stmt>;</empty_stmt></for>
       <expr_stmt><expr><call><name><name>os</name><operator>.</operator><name>writeUTF</name></name><argument_list>(<argument><expr><name><name>args</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>trie</name><operator>.</operator><name>store</name></name><argument_list>(<argument><expr><name>os</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>os</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>stempel</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>egothor</name><operator>/</operator><name>stemmer</name><operator>/</operator><name><name>DiffIt</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>stempel</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>egothor</name><operator>/</operator><name>stemmer</name><operator>/</operator><name><name>DiffIt</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>f4bb8d7cfa9</name><operator>..</operator><literal type="number">56c09379d30</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>stempel</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>egothor</name><operator>/</operator><name>stemmer</name><operator>/</operator><name><name>DiffIt</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>stempel</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>egothor</name><operator>/</operator><name>stemmer</name><operator>/</operator><name><name>DiffIt</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">54</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">54</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@
  <operator>*</operator><operator>/</operator></expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>egothor</name><operator>.</operator><name>stemmer</name></name>;</package>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>BufferedReader</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileInputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStreamReader</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>LineNumberReader</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>Charset</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Paths</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Locale</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>StringTokenizer</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">99</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">99</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>DiffIt</name> <block>{
       <comment type="line">// System.out.println("[" + args[i] + "]");</comment>
       <expr><name>Diff</name> <name>diff</name> <operator>=</operator> <operator>new</operator> <call><name>Diff</name><argument_list>(<argument><expr><name>ins</name></expr></argument>, <argument><expr><name>del</name></expr></argument>, <argument><expr><name>rep</name></expr></argument>, <argument><expr><name>nop</name></expr></argument>)</argument_list></call></expr>;
       <name>String</name> <name>charset</name> <operator>=</operator> <call><name><name>System</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><literal type="string">"egothor.stemmer.charset"</literal></expr></argument>, <argument><expr><literal type="string">"UTF-8"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
      <expr_stmt><expr><name>in</name> <operator>=</operator> <operator>new</operator> <call><name>LineNumberReader</name><argument_list>(<argument><expr><operator>new</operator> <call><name>BufferedReader</name><argument_list>(<argument><expr><operator>new</operator> <call><name>InputStreamReader</name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name><name>args</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>charset</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>in</name> <operator>=</operator> <operator>new</operator> <call><name>LineNumberReader</name><argument_list>(<argument><expr><call><name><name>Files</name><operator>.</operator><name>newBufferedReader</name></name><argument_list>(<argument><expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>args</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>Charset</name><operator>.</operator><name>forName</name></name><argument_list>(<argument><expr><name>charset</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <for>for <control>(<init><decl><type><name>String</name></type> <name>line</name> <init>= <expr><call><name><name>in</name><operator>.</operator><name>readLine</name></name><argument_list>()</argument_list></call></expr></init></decl>;</init> <condition><expr><name>line</name> <operator>!=</operator> <literal type="null">null</literal></expr>;</condition> <incr><expr><name>line</name> <operator>=</operator> <call><name><name>in</name><operator>.</operator><name>readLine</name></name><argument_list>()</argument_list></call></expr></incr>)</control> <block>{<block_content>
         <try>try <block>{<block_content>
           <expr_stmt><expr><name>line</name> <operator>=</operator> <call><name><name>line</name><operator>.</operator><name>toLowerCase</name></name><argument_list>(<argument><expr><name><name>Locale</name><operator>.</operator><name>ROOT</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>stempel</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>egothor</name><operator>/</operator><name>stemmer</name><operator>/</operator><name><name>TestCompile</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>stempel</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>egothor</name><operator>/</operator><name>stemmer</name><operator>/</operator><name><name>TestCompile</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">6b5c99d5481</literal><operator>..</operator><name>d7b29a8413e</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>stempel</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>egothor</name><operator>/</operator><name>stemmer</name><operator>/</operator><name><name>TestCompile</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name>stempel</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>egothor</name><operator>/</operator><name>stemmer</name><operator>/</operator><name><name>TestCompile</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">56</literal></expr><operator>,</operator><expr><literal type="number">77</literal> <operator>+</operator><literal type="number">56</literal></expr><operator>,</operator><expr><literal type="number">66</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>egothor</name><operator>.</operator><name>stemmer</name></name>;</package>
  <expr_stmt><expr><operator>*</operator><operator>/</operator></expr></expr_stmt>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>BufferedInputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>BufferedReader</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>DataInputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileInputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileOutputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStreamReader</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>LineNumberReader</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>StandardCharsets</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Locale</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>StringTokenizer</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>LuceneTestCase</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>LuceneTestCase</name><operator>.</operator><name>SuppressSysoutChecks</name></name>;</import>
 
 <class><specifier>public</specifier> class <name>TestCompile</name> <super_list><extends>extends <super><name>LuceneTestCase</name></super></extends></super_list> <block>{
   
   <function><type><specifier>public</specifier> <name>void</name></type> <name>testCompile</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>File</name></type> <name>dir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"testCompile"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>dir</name><operator>.</operator><name>mkdirs</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>InputStream</name></type> <name>input</name> <init>= <expr><call><name>getClass</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getResourceAsStream</name><argument_list>(<argument><expr><literal type="string">"testRules.txt"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>output</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><literal type="string">"testRules.txt"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>copy</name><argument_list>(<argument><expr><name>input</name></expr></argument>, <argument><expr><name>output</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>input</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>path</name> <init>= <expr><call><name><name>output</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>dir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"testCompile"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>output</name> <init>= <expr><call><name><name>dir</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><literal type="string">"testRules.txt"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <try>try <init>(<decl><type><name>InputStream</name></type> <name>input</name> <init>= <expr><call><name>getClass</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getResourceAsStream</name><argument_list>(<argument><expr><literal type="string">"testRules.txt"</literal></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
      <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>copy</name></name><argument_list>(<argument><expr><name>input</name></expr></argument>, <argument><expr><name>output</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt/>}</block_content>
    String path = output.toAbsolutePath(</block></try>)</block_content>.toString(</block></function>)</block>;</class>
     <expr_stmt><expr><call><name><name>Compile</name><operator>.</operator><name>main</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{<expr><literal type="string">"test"</literal></expr>, <expr><name>path</name></expr>}</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>compiled</name> <init>= <expr><name>path</name> <operator>+</operator> <literal type="string">".out"</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>compiled</name> <init>= <expr><call><name><name>dir</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><literal type="string">"testRules.txt.out"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>Trie</name></type> <name>trie</name> <init>= <expr><call><name>loadTrie</name><argument_list>(<argument><expr><name>compiled</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>assertTrie</name><argument_list>(<argument><expr><name>trie</name></expr></argument>, <argument><expr><name>path</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertTrie</name><argument_list>(<argument><expr><name>trie</name></expr></argument>, <argument><expr><name>path</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>delete</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>compiled</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toPath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertTrie</name><argument_list>(<argument><expr><name>trie</name></expr></argument>, <argument><expr><name>output</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertTrie</name><argument_list>(<argument><expr><name>trie</name></expr></argument>, <argument><expr><name>output</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   <expr_stmt/>}</block_content>
   
   public void testCompileBackwards(</block></try>)</block_content> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>File</name> <name>dir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"testCompile"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></block><empty_stmt>;</empty_stmt></for>
    <expr_stmt><expr><call><name><name>dir</name><operator>.</operator><name>mkdirs</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>InputStream</name></type> <name>input</name> <init>= <expr><call><name>getClass</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getResourceAsStream</name><argument_list>(<argument><expr><literal type="string">"testRules.txt"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>output</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><literal type="string">"testRules.txt"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>copy</name><argument_list>(<argument><expr><name>input</name></expr></argument>, <argument><expr><name>output</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>input</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>path</name> <init>= <expr><call><name><name>output</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>dir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"testCompile"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>output</name> <init>= <expr><call><name><name>dir</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><literal type="string">"testRules.txt"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <try>try <init>(<decl><type><name>InputStream</name></type> <name>input</name> <init>= <expr><call><name>getClass</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getResourceAsStream</name><argument_list>(<argument><expr><literal type="string">"testRules.txt"</literal></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
      <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>copy</name></name><argument_list>(<argument><expr><name>input</name></expr></argument>, <argument><expr><name>output</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt/>}</block_content>
    String path = output.toAbsolutePath(</block></try>)</block_content>.toString(</block></for>)</block_content></block><empty_stmt>;</empty_stmt></try>
     <call><name><name>Compile</name><operator>.</operator><name>main</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{<expr><literal type="string">"-test"</literal></expr>, <expr><name>path</name></expr>}</block></expr></argument>)</argument_list></call></block></expr>;
    <name>String</name> <name>compiled</name> <operator>=</operator> <name>path</name> <operator>+</operator> <literal type="string">".out"</literal></block></expr>;
    <name>Path</name> <name>compiled</name> <operator>=</operator> <call><name><name>dir</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><literal type="string">"testRules.txt.out"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>Trie</name></type> <name>trie</name> <init>= <expr><call><name>loadTrie</name><argument_list>(<argument><expr><name>compiled</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>assertTrie</name><argument_list>(<argument><expr><name>trie</name></expr></argument>, <argument><expr><name>path</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertTrie</name><argument_list>(<argument><expr><name>trie</name></expr></argument>, <argument><expr><name>path</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>delete</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>compiled</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toPath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertTrie</name><argument_list>(<argument><expr><name>trie</name></expr></argument>, <argument><expr><name>output</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertTrie</name><argument_list>(<argument><expr><name>trie</name></expr></argument>, <argument><expr><name>output</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   <expr_stmt/>}</block_content>
   
   public void testCompileMulti(</block></try>)</block_content> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>File</name> <name>dir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"testCompile"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></block></block><empty_stmt>;</empty_stmt></if></if_stmt>
    <expr_stmt><expr><call><name><name>dir</name><operator>.</operator><name>mkdirs</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>InputStream</name></type> <name>input</name> <init>= <expr><call><name>getClass</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getResourceAsStream</name><argument_list>(<argument><expr><literal type="string">"testRules.txt"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>output</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><literal type="string">"testRules.txt"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>copy</name><argument_list>(<argument><expr><name>input</name></expr></argument>, <argument><expr><name>output</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>input</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>path</name> <init>= <expr><call><name><name>output</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>dir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"testCompile"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>output</name> <init>= <expr><call><name><name>dir</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><literal type="string">"testRules.txt"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <try>try <init>(<decl><type><name>InputStream</name></type> <name>input</name> <init>= <expr><call><name>getClass</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getResourceAsStream</name><argument_list>(<argument><expr><literal type="string">"testRules.txt"</literal></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
      <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>copy</name></name><argument_list>(<argument><expr><name>input</name></expr></argument>, <argument><expr><name>output</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt/>}</block_content>
    String path = output.toAbsolutePath(</block></try>)</block_content>.toString(</block></if></if_stmt>)</block_content></block>;</function>
     <expr_stmt><expr><call><name><name>Compile</name><operator>.</operator><name>main</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{<expr><literal type="string">"Mtest"</literal></expr>, <expr><name>path</name></expr>}</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>compiled</name> <init>= <expr><name>path</name> <operator>+</operator> <literal type="string">".out"</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>compiled</name> <init>= <expr><call><name><name>dir</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><literal type="string">"testRules.txt.out"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>Trie</name></type> <name>trie</name> <init>= <expr><call><name>loadTrie</name><argument_list>(<argument><expr><name>compiled</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>assertTrie</name><argument_list>(<argument><expr><name>trie</name></expr></argument>, <argument><expr><name>path</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertTrie</name><argument_list>(<argument><expr><name>trie</name></expr></argument>, <argument><expr><name>path</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>delete</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>compiled</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toPath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertTrie</name><argument_list>(<argument><expr><name>trie</name></expr></argument>, <argument><expr><name>output</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertTrie</name><argument_list>(<argument><expr><name>trie</name></expr></argument>, <argument><expr><name>output</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   <expr_stmt/>}</block_content>
   
  static Trie loadTrie(String path</block></try>)</block_content> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>static</specifier> <name>Trie</name> <call><name>loadTrie</name><argument_list>(<argument><expr><name>Path</name> <name>path</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><name>Trie</name> <name>trie</name></expr></block></expr></argument></throws></block><empty_stmt>;</empty_stmt></if></if_stmt>
     <decl_stmt><decl><type><name>DataInputStream</name></type> <name>is</name> <init>= <expr><operator>new</operator> <call><name>DataInputStream</name><argument_list>(<argument><expr><operator>new</operator> <call><name>BufferedInputStream</name><argument_list>(
        <argument><expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>newInputStream</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></expr_stmt>)</block_content></block></for>)</block_content></block><empty_stmt>;</empty_stmt></try>
     <decl_stmt><decl><type><name>String</name></type> <name>method</name> <init>= <expr><call><name><name>is</name><operator>.</operator><name>readUTF</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toUpperCase</name><argument_list>(<argument><expr><name><name>Locale</name><operator>.</operator><name>ROOT</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <if_stmt><if>if <condition>(<expr><call><name><name>method</name><operator>.</operator><name>indexOf</name></name><argument_list>(<argument><expr><literal type="char">'M'</literal></expr></argument>)</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><name>trie</name> <operator>=</operator> <operator>new</operator> <call><name>Trie</name><argument_list>(<argument><expr><name>is</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">137</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">126</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestCompile</name> extends <name>LuceneTestCase</name> <block>{
     <return>return <expr><name>trie</name></expr>;</return>
   }</block>
   
  <specifier>private</specifier> <specifier>static</specifier> <name>void</name> <call><name>assertTrie</name><argument_list>(<argument><expr><name>Trie</name> <name>trie</name></expr></argument>, <argument><expr><name>String</name> <name>file</name></expr></argument>, <argument><expr><name>boolean</name> <name>usefull</name></expr></argument>,
  <argument><expr><specifier>private</specifier> <specifier>static</specifier> <name>void</name> <call><name>assertTrie</name><argument_list>(<argument><expr><name>Trie</name> <name>trie</name></expr></argument>, <argument><expr><name>Path</name> <name>file</name></expr></argument>, <argument><expr><name>boolean</name> <name>usefull</name></expr></argument>,
       <argument><expr><name>boolean</name> <name>storeorig</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>LineNumberReader</name> <name>in</name> <operator>=</operator> <operator>new</operator> <call><name>LineNumberReader</name><argument_list>(<argument><expr><operator>new</operator> <call><name>BufferedReader</name><argument_list>(
        <argument><expr><operator>new</operator> <call><name>InputStreamReader</name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr></argument>;</argument_list></call></expr></expr_stmt>
    <decl_stmt><decl><type><name>LineNumberReader</name></type> <name>in</name> <init>= <expr><operator>new</operator> <call><name>LineNumberReader</name><argument_list>(<argument><expr><call><name><name>Files</name><operator>.</operator><name>newBufferedReader</name></name><argument_list>(<argument><expr><name>file</name></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     
     <for>for <control>(<init><decl><type><name>String</name></type> <name>line</name> <init>= <expr><call><name><name>in</name><operator>.</operator><name>readLine</name></name><argument_list>()</argument_list></call></expr></init></decl>;</init> <condition><expr><name>line</name> <operator>!=</operator> <literal type="null">null</literal></expr>;</condition> <incr><expr><name>line</name> <operator>=</operator> <call><name><name>in</name><operator>.</operator><name>readLine</name></name><argument_list>()</argument_list></call></expr></incr>)</control> <block>{<block_content>
       <try>try <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">172</literal></expr><operator>,</operator><expr><literal type="number">17</literal> <operator>+</operator><literal type="number">160</literal></expr><operator>,</operator><expr><literal type="number">4</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestCompile</name> extends <name>LuceneTestCase</name> <block>{
     
     <expr><call><name><name>in</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;
   }</block>
  
  <specifier>private</specifier> <specifier>static</specifier> <name>void</name> <call><name>copy</name><argument_list>(<argument><expr><name>InputStream</name> <name>input</name></expr></argument>, <argument><expr><name>File</name> <name>output</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><name>FileOutputStream</name> <name>os</name> <operator>=</operator> <operator>new</operator> <call><name>FileOutputStream</name><argument_list>(<argument><expr><name>output</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <try>try <block>{<block_content>
      <decl_stmt><decl><type><name>byte</name></type> <name><name>buffer</name><index>[]</index></name> <init>= <expr><operator>new</operator> <name><name>byte</name><index>[<expr><literal type="number">1024</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>int</name></type> <name>len</name></decl>;</decl_stmt>
      <while>while <condition>(<expr><operator>(</operator><name>len</name> <operator>=</operator> <call><name><name>input</name><operator>.</operator><name>read</name></name><argument_list>(<argument><expr><name>buffer</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>os</name><operator>.</operator><name>write</name></name><argument_list>(<argument><expr><name>buffer</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt/>}</block_content>
    } finally <block>{<block_content>
      <expr_stmt><expr><call><name><name>os</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt/>}</block_content>
  }
 }
diff --git a/lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility.java b/lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility.java
index 47e9901b8f2..ca07da982f9 100644
-- a/lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility.java
++ b/lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility.java
@@ -18</block></block><operator>,</operator><expr_stmt><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@</expr></expr_stmt></while> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name></name>;</package>
  <expr_stmt><expr><operator>*</operator><operator>/</operator></expr></expr_stmt>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>ByteArrayOutputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>PrintStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>reflect</name><operator>.</operator><name>Modifier</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Paths</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Comparator</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">294</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">294</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestBackwardsCompatibility</name> extends <name>LuceneTestCase</name> <block>{
     <expr><call><name><name>names</name><operator>.</operator><name>addAll</name></name><argument_list>(<argument><expr><call><name><name>Arrays</name><operator>.</operator><name>asList</name></name><argument_list>(<argument><expr><name>oldSingleSegmentNames</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <name>oldIndexDirs</name> <operator>=</operator> <operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <for>for <control>(<init><decl><type><name>String</name></type> <name>name</name> <range>: <expr><name>names</name></expr></range></decl></init>)</control> <block>{<block_content>
      <decl_stmt><decl><type><name>File</name></type> <name>dir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>File</name></type> <name>dataFile</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name><name>TestBackwardsCompatibility</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getResource</name></name></name><argument_list>(<argument><expr><literal type="string">"index."</literal> <operator>+</operator> <name>name</name> <operator>+</operator> <literal type="string">".zip"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toURI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>Path</name></type> <name>dir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>Path</name></type> <name>dataFile</name> <init>= <expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>TestBackwardsCompatibility</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getResource</name></name></name><argument_list>(<argument><expr><literal type="string">"index."</literal> <operator>+</operator> <name>name</name> <operator>+</operator> <literal type="string">".zip"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toURI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>TestUtil</name><operator>.</operator><name>unzip</name></name><argument_list>(<argument><expr><name>dataFile</name></expr></argument>, <argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>oldIndexDirs</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><call><name>newFSDirectory</name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt/>}</block_content>
@@ -434</block><operator>,</operator><expr_stmt><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">434</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestBackwardsCompatibility</name> extends <name>LuceneTestCase</name> <block>{
       <if_stmt><if>if <condition>(<expr><name>VERBOSE</name></expr>)</condition> <block>{<block_content>
         <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"TEST: index "</literal> <operator>+</operator> <name><name>unsupportedNames</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt/>}</block_content>
      File oldIndxeDir = createTempDir(unsupportedNames[i]</block></if></if_stmt>)</block></expr>;</expr_stmt></for>
      <expr_stmt><expr><call><name><name>TestUtil</name><operator>.</operator><name>unzip</name></name><argument_list>(<argument><expr><call><name>getDataFile</name><argument_list>(<argument><expr><literal type="string">"unsupported."</literal> <operator>+</operator> <name><name>unsupportedNames</name><index>[<expr><name>i</name></expr>]</index></name> <operator>+</operator> <literal type="string">".zip"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>oldIndxeDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>BaseDirectoryWrapper</name></type> <name>dir</name> <init>= <expr><call><name>newFSDirectory</name><argument_list>(<argument><expr><name>oldIndxeDir</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>Path</name></type> <name>oldIndexDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><name><name>unsupportedNames</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>TestUtil</name><operator>.</operator><name>unzip</name></name><argument_list>(<argument><expr><call><name>getDataPath</name><argument_list>(<argument><expr><literal type="string">"unsupported."</literal> <operator>+</operator> <name><name>unsupportedNames</name><index>[<expr><name>i</name></expr>]</index></name> <operator>+</operator> <literal type="string">".zip"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>oldIndexDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>BaseDirectoryWrapper</name></type> <name>dir</name> <init>= <expr><call><name>newFSDirectory</name><argument_list>(<argument><expr><name>oldIndexDir</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <comment type="line">// don't checkindex, these are intentionally not supported</comment>
       <expr_stmt><expr><call><name><name>dir</name><operator>.</operator><name>setCheckIndexOnClose</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">487</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">487</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestBackwardsCompatibility</name> extends <name>LuceneTestCase</name> <block>{
       <expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>bos</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><name><name>IOUtils</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>contains</name><argument_list>(<argument><expr><call><name><name>IndexFormatTooOldException</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
       <call><name><name>dir</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>IOUtils</name><operator>.</operator><name>rm</name></name><argument_list>(<argument><expr><name>oldIndxeDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>IOUtils</name><operator>.</operator><name>rm</name></name><argument_list>(<argument><expr><name>oldIndexDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt/>}</block_content>
   }
   
@@ -795</block><operator>,</operator><expr_stmt><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">795</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestBackwardsCompatibility</name> extends <name>LuceneTestCase</name> <block>{
     <expr><call><name><name>reader</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;
   }</block>
 
  <specifier>public</specifier> <name>File</name> <call><name>createIndex</name><argument_list>(<argument><expr><name>String</name> <name>dirName</name></expr></argument>, <argument><expr><name>boolean</name> <name>doCFS</name></expr></argument>, <argument><expr><name>boolean</name> <name>fullyMerged</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>public</specifier> <name>Path</name> <call><name>createIndex</name><argument_list>(<argument><expr><name>String</name> <name>dirName</name></expr></argument>, <argument><expr><name>boolean</name> <name>doCFS</name></expr></argument>, <argument><expr><name>boolean</name> <name>fullyMerged</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
     <comment type="line">// we use a real directory name that is not cleaned up, because this method is only used to create backwards indexes:</comment>
    <expr><name>File</name> <name>indexDir</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><literal type="string">"/tmp/idx"</literal></expr></argument>, <argument><expr><name>dirName</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt></try>
    <decl_stmt><decl><type><name>Path</name></type> <name>indexDir</name> <init>= <expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"/tmp/idx"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>resolve</name><argument_list>(<argument><expr><name>dirName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>IOUtils</name><operator>.</operator><name>rm</name></name><argument_list>(<argument><expr><name>indexDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>Directory</name></type> <name>dir</name> <init>= <expr><call><name>newFSDirectory</name><argument_list>(<argument><expr><name>indexDir</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>LogByteSizeMergePolicy</name></type> <name>mp</name> <init>= <expr><operator>new</operator> <call><name>LogByteSizeMergePolicy</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1085</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">1085</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestBackwardsCompatibility</name> extends <name>LuceneTestCase</name> <block>{
     <expr><call><name><name>System</name><operator>.</operator><name>setOut</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>PrintStream</name><argument_list>(<argument><expr><operator>new</operator> <call><name>ByteArrayOutputStream</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="string">"UTF-8"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</block></expr></expr_stmt>
     <try>try <block>{<block_content>
       <for>for <control>(<init><decl><type><name>String</name></type> <name>name</name> <range>: <expr><call><name><name>oldIndexDirs</name><operator>.</operator><name>keySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
        <decl_stmt><decl><type><name>File</name></type> <name>dir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>File</name></type> <name>dataFile</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name><name>TestBackwardsCompatibility</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getResource</name></name></name><argument_list>(<argument><expr><literal type="string">"index."</literal> <operator>+</operator> <name>name</name> <operator>+</operator> <literal type="string">".zip"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toURI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Path</name></type> <name>dir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Path</name></type> <name>dataFile</name> <init>= <expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>TestBackwardsCompatibility</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getResource</name></name></name><argument_list>(<argument><expr><literal type="string">"index."</literal> <operator>+</operator> <name>name</name> <operator>+</operator> <literal type="string">".zip"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toURI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <expr_stmt><expr><call><name><name>TestUtil</name><operator>.</operator><name>unzip</name></name><argument_list>(<argument><expr><name>dataFile</name></expr></argument>, <argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         
        <decl_stmt><decl><type><name>String</name></type> <name>path</name> <init>= <expr><call><name><name>dir</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>path</name> <init>= <expr><call><name><name>dir</name><operator>.</operator><name>toAbsolutePath</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
         
         <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>args</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
         <if_stmt><if>if <condition>(<expr><call><name>random</name><argument_list>()</argument_list></call><operator>.</operator><call><name>nextBoolean</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1196</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">1196</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestBackwardsCompatibility</name> extends <name>LuceneTestCase</name> <block>{
   <expr><specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>moreTermsIndex</name> <operator>=</operator> <literal type="string">"moreterms.40.zip"</literal></expr>;
 
   <specifier>public</specifier> <name>void</name> <call><name>testMoreTerms</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>File</name> <name>oldIndexDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"moreterms"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></block></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>TestUtil</name><operator>.</operator><name>unzip</name></name><argument_list>(<argument><expr><call><name>getDataFile</name><argument_list>(<argument><expr><name>moreTermsIndex</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>oldIndexDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>oldIndexDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"moreterms"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>TestUtil</name><operator>.</operator><name>unzip</name></name><argument_list>(<argument><expr><call><name>getDataPath</name><argument_list>(<argument><expr><name>moreTermsIndex</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>oldIndexDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>Directory</name></type> <name>dir</name> <init>= <expr><call><name>newFSDirectory</name><argument_list>(<argument><expr><name>oldIndexDir</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <comment type="line">// TODO: more tests</comment>
     <expr_stmt><expr><call><name><name>TestUtil</name><operator>.</operator><name>checkIndex</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1235</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">1235</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestBackwardsCompatibility</name> extends <name>LuceneTestCase</name> <block>{
   }</block>
   
   <specifier>public</specifier> <name>void</name> <call><name>testDocValuesUpdates</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>File</name> <name>oldIndexDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"dvupdates"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>TestUtil</name><operator>.</operator><name>unzip</name></name><argument_list>(<argument><expr><call><name>getDataFile</name><argument_list>(<argument><expr><name>dvUpdatesIndex</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>oldIndexDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>oldIndexDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"dvupdates"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>TestUtil</name><operator>.</operator><name>unzip</name></name><argument_list>(<argument><expr><call><name>getDataPath</name><argument_list>(<argument><expr><name>dvUpdatesIndex</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>oldIndexDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>Directory</name></type> <name>dir</name> <init>= <expr><call><name>newFSDirectory</name><argument_list>(<argument><expr><name>oldIndexDir</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     
     <expr_stmt><expr><call><name>verifyDocValues</name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name><name>Benchmark</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name><name>Benchmark</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">1ceb4d434e8</literal><operator>..</operator><name>be627f4c02f</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name><name>Benchmark</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name><name>Benchmark</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>benchmark</name><operator>.</operator><name>byTask</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>Reader</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>StandardCharsets</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Paths</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>benchmark</name><operator>.</operator><name>byTask</name><operator>.</operator><name>utils</name><operator>.</operator><name>Algorithm</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>benchmark</name><operator>.</operator><name>byTask</name><operator>.</operator><name>utils</name><operator>.</operator><name>Config</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>IOUtils</name></name>;</import>

 
 <comment type="block" format="javadoc">/**
  * Run the benchmark algorithm.
@@ -97,17 +97,17 @@ public class Benchmark {
     }
     
     // verify input files 
    File algFile = new File(args[0]);
    if (!algFile.exists() || !algFile.isFile() || !algFile.canRead()) {
      System.err.println("cannot find/read algorithm file: "+algFile.getAbsolutePath()); 
    Path algFile = Paths.get(args[0]);
    if (!Files.isReadable(algFile)) {
      System.err.println("cannot find/read algorithm file: "+algFile.toAbsolutePath()); 
       System.exit(1);
     }
     
    System.out.println("Running algorithm from: "+algFile.getAbsolutePath());
    System.out.println("Running algorithm from: "+algFile.toAbsolutePath());
     
     Benchmark benchmark = null;
     try {
      benchmark = new Benchmark(IOUtils.getDecodingReader(algFile, StandardCharsets.UTF_8));
      benchmark = new Benchmark(Files.newBufferedReader(algFile, StandardCharsets.UTF_8));
     } catch (Exception e) {
       e.printStackTrace();
       System.exit(1);
diff --git a/lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/PerfRunData.java b/lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/PerfRunData.java
index a63181f95fd..b6e43247a05 100644
-- a/lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/PerfRunData.java
++ b/lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/PerfRunData.java
@@ -18,8 +18,10 @@ package org.apache.lucene.benchmark.byTask;
  */</comment>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>Closeable</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Paths</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Locale</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">191</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">193</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>PerfRunData</name> implements <name>Closeable</name> <block>{
   <expr><specifier>private</specifier> <name>Directory</name> <call><name>createDirectory</name><argument_list>(<argument><expr><name>boolean</name> <name>eraseIndex</name></expr></argument>, <argument><expr><name>String</name> <name>dirName</name></expr></argument>,
       <argument><expr><name>String</name> <name>dirParam</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr>
     <if_stmt><if>if <condition>(<expr><literal type="string">"FSDirectory"</literal><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>dirParam</name></expr></argument>,<argument><expr><literal type="string">"RAMDirectory"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>File</name></type> <name>workDir</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"work.dir"</literal></expr></argument>,<argument><expr><literal type="string">"work"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>File</name></type> <name>indexDir</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>workDir</name></expr></argument>,<argument><expr><name>dirName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>eraseIndex</name> <operator>&amp;&amp;</operator> <call><name><name>indexDir</name><operator>.</operator><name>exists</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>Path</name></type> <name>workDir</name> <init>= <expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"work.dir"</literal></expr></argument>,<argument><expr><literal type="string">"work"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>Path</name></type> <name>indexDir</name> <init>= <expr><call><name><name>workDir</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><name>dirName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>eraseIndex</name> <operator>&amp;&amp;</operator> <call><name><name>Files</name><operator>.</operator><name>exists</name></name><argument_list>(<argument><expr><name>indexDir</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
         <expr_stmt><expr><call><name><name>IOUtils</name><operator>.</operator><name>rm</name></name><argument_list>(<argument><expr><name>indexDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt/>}</block_content>
      indexDir.mkdirs(</block></if></if_stmt>)</block_content></block><empty_stmt>;</empty_stmt></if></if_stmt>
      <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>createDirectories</name></name><argument_list>(<argument><expr><name>indexDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <return>return <expr><call><name><name>FSDirectory</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><name>indexDir</name></expr></argument>)</argument_list></call></expr>;</return>
     <expr_stmt/>}</block_content> 
 
diff --git a/lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ContentItemsSource.java b/lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ContentItemsSource.java
index 9c71787a1fd..459b1efb8a8 100644
-- a/lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ContentItemsSource.java
++ b/lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ContentItemsSource.java
@@ -18</block><operator>,</operator><expr_stmt><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@</expr></expr_stmt></if></if_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>benchmark</name><operator>.</operator><name>byTask</name><operator>.</operator><name>feeds</name></name>;</package>
  <operator>*</operator><operator>/</operator></block></expr></expr_stmt>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>Closeable</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>FileVisitResult</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>SimpleFileVisitor</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>attribute</name><operator>.</operator><name>BasicFileAttributes</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>benchmark</name><operator>.</operator><name>byTask</name><operator>.</operator><name>utils</name><operator>.</operator><name>Config</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>benchmark</name><operator>.</operator><name>byTask</name><operator>.</operator><name>utils</name><operator>.</operator><name>Format</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">78</literal></expr><operator>,</operator><expr><literal type="number">24</literal> <operator>+</operator><literal type="number">81</literal></expr><operator>,</operator><expr><literal type="number">19</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>ContentItemsSource</name> implements <name>Closeable</name> <block>{
 
   <comment type="block" format="javadoc">/**
    * A convenience method for collecting all the files of a content source from
   * a given directory. The collected {@link File} instances are stored in the
   * a given directory. The collected {@link Path} instances are stored in the
    * given &lt;code&gt;files&lt;/code&gt;.
    */</comment>
  <expr><specifier>protected</specifier> <name>final</name> <name>void</name> <call><name>collectFiles</name><argument_list>(<argument><expr><name>File</name> <name>dir</name></expr></argument>, <argument><expr><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>File</name></argument>&gt;</argument_list></name> <name>files</name></expr></argument>)</argument_list></call> <block>{
    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>dir</name><operator>.</operator><name>canRead</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <return>return;</return>
    <expr_stmt/>}</block_content>
    
    File[] dirFiles = dir.listFiles(</block></if></if_stmt>)</block></expr>;
    <call><name><name>Arrays</name><operator>.</operator><name>sort</name></name><argument_list>(<argument><expr><name>dirFiles</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>dirFiles</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
      <decl_stmt><decl><type><name>File</name></type> <name>file</name> <init>= <expr><name><name>dirFiles</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><call><name><name>file</name><operator>.</operator><name>isDirectory</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name>collectFiles</name><argument_list>(<argument><expr><name>file</name></expr></argument>, <argument><expr><name>files</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt/>}</block_content> else if (file.canRead(</block></if></if_stmt>)</block_content></block></for>)</block_content> <block>{<block_content>
        <expr_stmt><expr><call><name><name>files</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <function><type><specifier>protected</specifier> <specifier>final</specifier> <name>void</name></type> <name>collectFiles</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>dir</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>Path</name></argument>&gt;</argument_list></name></type> <name>files</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>walkFileTree</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><operator>new</operator> <class><super><name><name>SimpleFileVisitor</name><argument_list type="generic">&lt;<argument><name>Path</name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{
      <function><annotation>@<name>Override</name></annotation>
      <type><specifier>public</specifier> <name>FileVisitResult</name></type> <name>visitFile</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>file</name></decl></parameter>, <parameter><decl><type><name>BasicFileAttributes</name></type> <name>attrs</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><call><name><name>Files</name><operator>.</operator><name>isReadable</name></name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name><name>files</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name><name>file</name><operator>.</operator><name>toRealPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt/>}</block_content>
        return FileVisitResult.CONTINUE</block><empty_stmt>;</empty_stmt></if></if_stmt>
       <expr_stmt/>}</block_content>
    }
    }</block></function>)</block><empty_stmt>;</empty_stmt></class></expr></argument></argument_list></call></expr></expr_stmt>
   <expr_stmt/>}</block_content>
 
   <comment type="block" format="javadoc">/**
diff --git a/lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DirContentSource.java b/lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DirContentSource.java
index 1357dce7305..c5667fdfba5 100644
-- a/lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DirContentSource.java
++ b/lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DirContentSource.java
@@ -20,17 +20,19 @@ package org.apache.lucene.benchmark.byTask.feeds;
 import org.apache.lucene.benchmark.byTask.utils.Config;
 
 import java.io.BufferedReader;
import java.io.File;
import java.io.FileFilter;
import java.io.FileInputStream;
 import java.io.IOException;
import java.io.InputStreamReader;
 import java.nio.charset.StandardCharsets;
import java.nio.file.DirectoryStream;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
 import java.text.DateFormat;
 import java.text.ParsePosition;
 import java.text.SimpleDateFormat;
import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Date;
import java.util.List;
 import java.util.Locale;
 import java.util.Stack;
 
@@ -54,11 +56,11 @@ public class DirContentSource extends ContentSource {
   /**
    * Iterator over the files in the directory
    */</comment>
  public static class Iterator implements java.util.Iterator&lt;File&gt; <block>{<block_content>
  <class><specifier>public</specifier> <specifier>static</specifier> class <name>Iterator</name> <super_list><implements>implements <super><name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name><name>Iterator</name><argument_list type="generic">&lt;<argument><name>Path</name></argument>&gt;</argument_list></name></name></super></implements></super_list> <block>{
 
    <class><specifier>static</specifier> class <name>Comparator</name> <super_list><implements>implements <super><name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name><name>Comparator</name><argument_list type="generic">&lt;<argument><name>File</name></argument>&gt;</argument_list></name></name></super></implements></super_list> <block>{
    <class><specifier>static</specifier> class <name>Comparator</name> <super_list><implements>implements <super><name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name><name>Comparator</name><argument_list type="generic">&lt;<argument><name>Path</name></argument>&gt;</argument_list></name></name></super></implements></super_list> <block>{
       <function><annotation>@<name>Override</name></annotation>
      <type><specifier>public</specifier> <name>int</name></type> <name>compare</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>_a</name></decl></parameter>, <parameter><decl><type><name>File</name></type> <name>_b</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <function><type><specifier>public</specifier> <name>int</name></type> <name>compare</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>_a</name></decl></parameter>, <parameter><decl><type><name>Path</name></type> <name>_b</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <decl_stmt><decl><type><name>String</name></type> <name>a</name> <init>= <expr><call><name><name>_a</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
         <decl_stmt><decl><type><name>String</name></type> <name>b</name> <init>= <expr><call><name><name>_b</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
         <decl_stmt><decl><type><name>int</name></type> <name>diff</name> <init>= <expr><call><name><name>a</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call> <operator>-</operator> <call><name><name>b</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">82</literal></expr><operator>,</operator><expr><literal type="number">47</literal> <operator>+</operator><literal type="number">84</literal></expr><operator>,</operator><expr><literal type="number">49</literal> @@ <specifier>public</specifier> <name>class</name> <name>DirContentSource</name> extends <name>ContentSource</name> <block>{
 
     <expr><name>int</name> <name>count</name> <operator>=</operator> <literal type="number">0</literal></expr>;
 
    <name><name>Stack</name><argument_list type="generic">&lt;<argument><name>File</name></argument>&gt;</argument_list></name> <name>stack</name> <operator>=</operator> <operator>new</operator> <call><name><name>Stack</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name><name>Stack</name><argument_list type="generic">&lt;<argument><name>Path</name></argument>&gt;</argument_list></name></type> <name>stack</name> <init>= <expr><operator>new</operator> <call><name><name>Stack</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <comment type="block">/* this seems silly ... there must be a better way ...
        not that this is good, but can it matter? */</comment>
 
     <decl_stmt><decl><type><name>Comparator</name></type> <name>c</name> <init>= <expr><operator>new</operator> <call><name>Comparator</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
    <constructor><specifier>public</specifier> <name>Iterator</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>f</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <constructor><specifier>public</specifier> <name>Iterator</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>f</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
       <expr_stmt><expr><call><name>push</name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt/>}</block_content>
 
    void find(</block></constructor>)</block_content> <block>{<block_content>
    <function><type><name>void</name></type> <name>find</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
       <if_stmt><if>if <condition>(<expr><call><name><name>stack</name><operator>.</operator><name>empty</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
         <return>return;</return>
       <expr_stmt/>}</block_content>
      if (!(stack.peek(</block></if></if_stmt>)</block_content></block></function>)</block_content>.isDirectory(</block></block></constructor>)</block_content></block></function>)</block_content> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>Files</name><operator>.</operator><name>isDirectory</name></name><argument_list>(<argument><expr><call><name><name>stack</name><operator>.</operator><name>peek</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
         <return>return;</return>
       <expr_stmt/>}</block_content>
      File f = stack.pop(</block></if></if_stmt>)</block_content></block></block>;</function>
      <decl_stmt><decl><type><name>Path</name></type> <name>f</name> <init>= <expr><call><name><name>stack</name><operator>.</operator><name>pop</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <constructor_decl><name>push</name><parameter_list>(<parameter><decl><type><name>f</name></type></decl></parameter>)</parameter_list>;</constructor_decl>
     <expr_stmt/>}</block>
 
    <function><type><name>void</name></type> <name>push</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>f</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name>push</name><argument_list>(<argument><expr><call><name><name>f</name><operator>.</operator><name>listFiles</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>FileFilter</name></super><argument_list>()</argument_list> <block>{

        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>boolean</name></type> <name>accept</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>file</name></decl></parameter>)</parameter_list> <block>{<block_content>
          <return>return <expr><call><name><name>file</name><operator>.</operator><name>isDirectory</name></name><argument_list>()</argument_list></call></expr>;</return>
    <function><type><name>void</name></type> <name>push</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>f</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
      <try>try <init>(<decl><type><name><name>DirectoryStream</name><argument_list type="generic">&lt;<argument><name>Path</name></argument>&gt;</argument_list></name></type> <name>stream</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>newDirectoryStream</name></name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
        <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>Path</name></argument>&gt;</argument_list></name></type> <name>found</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <for>for <control>(<init><decl><type><name>Path</name></type> <name>p</name> <range>: <expr><name>stream</name></expr></range></decl></init>)</control> <block>{<block_content>
          <if_stmt><if>if <condition>(<expr><call><name><name>Files</name><operator>.</operator><name>isDirectory</name></name><argument_list>(<argument><expr><name>p</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>found</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt/>}</block_content>
         }
      }</block></if></if_stmt>)</block_content></block></for>)</block_content></block><empty_stmt>;</empty_stmt></try>
      <expr_stmt><expr><call><name>push</name><argument_list>(<argument><expr><call><name><name>f</name><operator>.</operator><name>listFiles</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>FileFilter</name></super><argument_list>()</argument_list> <block>{

        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>boolean</name></type> <name>accept</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>file</name></decl></parameter>)</parameter_list> <block>{<block_content>
          <return>return <expr><call><name><name>file</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>endsWith</name><argument_list>(<argument><expr><literal type="string">".txt"</literal></expr></argument>)</argument_list></call></expr>;</return>
        <expr_stmt><expr><call><name>push</name><argument_list>(<argument><expr><call><name><name>found</name><operator>.</operator><name>toArray</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>Path</name><index>[<expr><call><name><name>found</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt/>}</block_content>
      try (DirectoryStream&lt;Path&gt; stream = Files.newDirectoryStream(f</block><operator>,</operator> "*.txt"</function>)</block><expr_stmt><expr/></expr_stmt></class></expr></argument>)</argument_list></call> <block>{
        <expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>Path</name></argument>&gt;</argument_list></name> <name>found</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;</block></expr></argument></argument_list></call></expr></expr_stmt>
        <for>for <control>(<init><decl><type><name>Path</name></type> <name>p</name> <range>: <expr><name>stream</name></expr></range></decl></init>)</control> <block>{<block_content>
          <expr_stmt><expr><call><name><name>found</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt/>}</block_content>
      }</block></for>)</block_content></block></function>)</block_content></block>;</function>
        <expr_stmt><expr><call><name>push</name><argument_list>(<argument><expr><call><name><name>found</name><operator>.</operator><name>toArray</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>Path</name><index>[<expr><call><name><name>found</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt/>}</block>
       <expr_stmt><expr><call><name>find</name><argument_list>()</argument_list></call></expr>;</expr_stmt></class></expr></argument></argument_list></call></expr></argument></argument_list></call></expr></expr_stmt>
     <expr_stmt/>}</block_content>
 
    void push(File[] files</block></function></class>)</block> <block>{<block_content>
    <function><type><name>void</name></type> <name>push</name><parameter_list>(<parameter><decl><type><name><name>Path</name><index>[]</index></name></type> <name>files</name></decl></parameter>)</parameter_list> <block>{<block_content>
       <expr_stmt><expr><call><name><name>Arrays</name><operator>.</operator><name>sort</name></name><argument_list>(<argument><expr><name>files</name></expr></argument>, <argument><expr><name>c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>files</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
         <comment type="line">// System.err.println("push " + files[i]);</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">140</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">144</literal></expr><operator>,</operator><expr><literal type="number">16</literal> @@ <specifier>public</specifier> <name>class</name> <name>DirContentSource</name> extends <name>ContentSource</name> <block>{
     }</block>
     
     @<name>Override</name>
    <specifier>public</specifier> <name>File</name> <call><name>next</name><argument_list>()</argument_list></call> <block>{
    <expr><specifier>public</specifier> <name>Path</name> <call><name>next</name><argument_list>()</argument_list></call> <block>{
       <assert>assert <expr><call><name>hasNext</name><argument_list>()</argument_list></call></expr>;</assert>
       <name>count</name><operator>++</operator></block></expr>;
      <name>File</name> <name>object</name> <operator>=</operator> <call><name><name>stack</name><operator>.</operator><name>pop</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>Path</name></type> <name>object</name> <init>= <expr><call><name><name>stack</name><operator>.</operator><name>pop</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <comment type="line">// System.err.println("pop " + object);</comment>
      <expr_stmt><expr><call><name>find</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <try>try <block>{<block_content>
        <expr_stmt><expr><call><name>find</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt/>}</block_content> catch (IOException e</block></try>)</block_content> <block>{<block_content>
        <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
      <expr_stmt/>}</block_content>
       return object</block></block><empty_stmt>;</empty_stmt></for>
     <expr_stmt/>}</block_content>
 
@@ -157</block><operator>,</operator>7 +165<operator>,</operator>7 @@ public class DirContentSource extends ContentSource <block>{<block_content>
   <expr_stmt/>}</block_content>
   
   private ThreadLocal&lt;DateFormatInfo&gt; dateFormat = new ThreadLocal&lt;&gt;(</block></function>)</block_content></block>;</class>
  <decl_stmt><decl><type><specifier>private</specifier> <name>File</name></type> <name>dataDir</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>Path</name></type> <name>dataDir</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <name>int</name></type> <name>iteration</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <name>Iterator</name></type> <name>inputFiles</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">190</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">198</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>DirContentSource</name> extends <name>ContentSource</name> <block>{
   
   @<expr><name>Override</name>
   <specifier>public</specifier> <name>DocData</name> <call><name>getNextDocData</name><argument_list>(<argument><expr><name>DocData</name> <name>docData</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>NoMoreDataException</name></expr></argument>, <argument><expr><name>IOException</name> <block>{
    <expr><name>File</name> <name>f</name> <operator>=</operator> <literal type="null">null</literal></expr></block></expr></argument></throws></expr>;
    <name>Path</name> <name>f</name> <operator>=</operator> <literal type="null">null</literal></block></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>String</name></type> <name>name</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
     <synchronized>synchronized <init>(<expr><name>this</name></expr>)</init> <block>{<block_content>
       <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>inputFiles</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content> 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">203</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">211</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>DirContentSource</name> extends <name>ContentSource</name> <block>{
       }</block>
       <name>f</name> <operator>=</operator> <call><name><name>inputFiles</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <comment type="line">// System.err.println(f);</comment>
      <expr_stmt><expr><name>name</name> <operator>=</operator> <call><name><name>f</name><operator>.</operator><name>getCanonicalPath</name></name><argument_list>()</argument_list></call><operator>+</operator><literal type="string">"_"</literal><operator>+</operator><name>iteration</name></expr>;</expr_stmt>
      <expr_stmt><expr><name>name</name> <operator>=</operator> <call><name><name>f</name><operator>.</operator><name>toRealPath</name></name><argument_list>()</argument_list></call><operator>+</operator><literal type="string">"_"</literal><operator>+</operator><name>iteration</name></expr>;</expr_stmt>
     <expr_stmt/>}</block_content>
     
    BufferedReader reader = new BufferedReader(new InputStreamReader(new FileInputStream(f</block></if></if_stmt>)</block_content></block><operator>,</operator> <expr_stmt><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></expr_stmt></synchronized>)</block></class>)</block_content></block></block>;</function>
    <decl_stmt><decl><type><name>BufferedReader</name></type> <name>reader</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>newBufferedReader</name></name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>String</name></type> <name>line</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
     <comment type="line">//First line is the date, 3rd is the title, rest is body</comment>
     <decl_stmt><decl><type><name>String</name></type> <name>dateStr</name> <init>= <expr><call><name><name>reader</name><operator>.</operator><name>readLine</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">218</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">226</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>DirContentSource</name> extends <name>ContentSource</name> <block>{
       <expr><call><name><name>bodyBuf</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><name>line</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>append</name><argument_list>(<argument><expr><literal type="char">' '</literal></expr></argument>)</argument_list></call></expr>;
     }</block>
     <call><name><name>reader</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>addBytes</name><argument_list>(<argument><expr><call><name><name>f</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>addBytes</name><argument_list>(<argument><expr><call><name><name>Files</name><operator>.</operator><name>size</name></name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     
     <decl_stmt><decl><type><name>Date</name></type> <name>date</name> <init>= <expr><call><name>parseDate</name><argument_list>(<argument><expr><name>dateStr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">241</literal></expr><operator>,</operator><expr><literal type="number">17</literal> <operator>+</operator><literal type="number">249</literal></expr><operator>,</operator><expr><literal type="number">21</literal> @@ <specifier>public</specifier> <name>class</name> <name>DirContentSource</name> extends <name>ContentSource</name> <block>{
   <expr><specifier>public</specifier> <name>void</name> <call><name>setConfig</name><argument_list>(<argument><expr><name>Config</name> <name>config</name></expr></argument>)</argument_list></call> <block>{
     <expr><call><name><name>super</name><operator>.</operator><name>setConfig</name></name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;
     
    <name>File</name> <name>workDir</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"work.dir"</literal></expr></argument>, <argument><expr><literal type="string">"work"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></block></expr>;
    <name>Path</name> <name>workDir</name> <operator>=</operator> <call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"work.dir"</literal></expr></argument>, <argument><expr><literal type="string">"work"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>String</name></type> <name>d</name> <init>= <expr><call><name><name>config</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"docs.dir"</literal></expr></argument>, <argument><expr><literal type="string">"dir-out"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>dataDir</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>dataDir</name> <operator>=</operator> <call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>dataDir</name><operator>.</operator><name>isAbsolute</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>dataDir</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>workDir</name></expr></argument>, <argument><expr><name>d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>dataDir</name> <operator>=</operator> <call><name><name>workDir</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><name>d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt/>}</block_content>
 
    inputFiles = new Iterator(dataDir</block></if></if_stmt>)</block_content></block></block><empty_stmt>;</empty_stmt></if></if_stmt>
    <try>try <block>{<block_content>
      <expr_stmt><expr><name>inputFiles</name> <operator>=</operator> <operator>new</operator> <call><name>Iterator</name><argument_list>(<argument><expr><name>dataDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt/>}</block_content> catch (IOException e</block></try>)</block_content> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
    <expr_stmt/>}</block_content>
 
     if (inputFiles == null</block></block></for>)</block_content> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(<argument><expr><literal type="string">"No txt files in dataDir: "</literal> <operator>+</operator> <call><name><name>dataDir</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
      <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(<argument><expr><literal type="string">"No txt files in dataDir: "</literal> <operator>+</operator> <call><name><name>dataDir</name><operator>.</operator><name>toAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
     <expr_stmt/>}</block_content>
   }
 
diff --git a/lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.java b/lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.java
index 10b61515032..e8a9b3825a2 100644
-- a/lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.java
++ b/lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.java
@@ -17</block></block><operator>,</operator><expr_stmt><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@</expr></expr_stmt></try> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>benchmark</name><operator>.</operator><name>byTask</name><operator>.</operator><name>feeds</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>StandardCharsets</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Paths</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Locale</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">280</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">281</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>EnwikiContentSource</name> extends <name>ContentSource</name> <block>{
     <return>return <expr><name>val</name> <operator>==</operator> <literal type="null">null</literal> <operator>?</operator> <operator>-</operator><literal type="number">1</literal> <operator>:</operator> <call><name><name>val</name><operator>.</operator><name>intValue</name></name><argument_list>()</argument_list></call></expr>;</return>
   }</block>
   
  <specifier>private</specifier> <name>File</name> <name>file</name></expr>;</expr_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>Path</name></type> <name>file</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <name>boolean</name></type> <name>keepImages</name> <init>= <expr><literal type="boolean">true</literal></expr></init></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <name>InputStream</name></type> <name>is</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <name>Parser</name></type> <name>parser</name> <init>= <expr><operator>new</operator> <call><name>Parser</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">324</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">325</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>EnwikiContentSource</name> extends <name>ContentSource</name> <block>{
     <expr><name>keepImages</name> <operator>=</operator> <call><name><name>config</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"keep.image.only.docs"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;
     <name>String</name> <name>fileName</name> <operator>=</operator> <call><name><name>config</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"docs.file"</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <if_stmt><if>if <condition>(<expr><name>fileName</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>file</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>fileName</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getAbsoluteFile</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>file</name> <operator>=</operator> <call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>fileName</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toAbsolutePath</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt/>}</block_content>
   }
   
diff --git a/lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/FileBasedQueryMaker.java b/lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/FileBasedQueryMaker.java
index 0717a9d3cd3..622018b28ee 100644
-- a/lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/FileBasedQueryMaker.java
++ b/lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/FileBasedQueryMaker.java
@@ -9</block><operator>,</operator><expr_stmt><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">9</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@</expr></expr_stmt></if></if_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>IOUtils</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>*</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>StandardCharsets</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Paths</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">58</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">61</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>FileBasedQueryMaker</name> extends <name>AbstractQueryMaker</name> implements <name>QueryMake</name>
     <name>String</name> <name>fileName</name> <operator>=</operator> <call><name><name>config</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"file.query.maker.file"</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <if_stmt><if>if <condition>(<expr><name>fileName</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition>
     <block>{<block_content>
      <decl_stmt><decl><type><name>File</name></type> <name>file</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>fileName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>Path</name></type> <name>path</name> <init>= <expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>fileName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>Reader</name></type> <name>reader</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
       <comment type="line">// note: we use a decoding reader, so if your queries are screwed up you know</comment>
      <if_stmt><if>if <condition>(<expr><call><name><name>file</name><operator>.</operator><name>exists</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>reader</name> <operator>=</operator> <call><name><name>IOUtils</name><operator>.</operator><name>getDecodingReader</name></name><argument_list>(<argument><expr><name>file</name></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <if_stmt><if>if <condition>(<expr><call><name><name>Files</name><operator>.</operator><name>exists</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>reader</name> <operator>=</operator> <call><name><name>Files</name><operator>.</operator><name>newBufferedReader</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt/>}</block_content> else <block>{<block_content>
         <comment type="line">//see if we can find it as a resource</comment>
         <decl_stmt><decl><type><name>InputStream</name></type> <name>asStream</name> <init>= <expr><call><name><name>FileBasedQueryMaker</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getClassLoader</name></name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getResourceAsStream</name><argument_list>(<argument><expr><name>fileName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>feeds</name><operator>/</operator><name><name>LineDocSource</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>feeds</name><operator>/</operator><name><name>LineDocSource</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>ad00211b62a</name><operator>..</operator><literal type="number">3b8b780ee02</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>feeds</name><operator>/</operator><name><name>LineDocSource</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>feeds</name><operator>/</operator><name><name>LineDocSource</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>benchmark</name><operator>.</operator><name>byTask</name><operator>.</operator><name>feeds</name></name>;</package>
  <expr_stmt><expr><operator>*</operator><operator>/</operator></expr></expr_stmt>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>BufferedReader</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStreamReader</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>reflect</name><operator>.</operator><name>Constructor</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Paths</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Properties</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">170</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">171</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>LineDocSource</name> extends <name>ContentSource</name> <block>{
     }</block></expr></expr_stmt>
   }</block_content>
   
  private File file</block></block><empty_stmt>;</empty_stmt></if></if_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>Path</name></type> <name>file</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <name>BufferedReader</name></type> <name>reader</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <name>int</name></type> <name>readCount</name></decl>;</decl_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">276</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">277</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>LineDocSource</name> extends <name>ContentSource</name> <block>{
     <if_stmt><if>if <condition>(<expr><name>fileName</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
       <throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><literal type="string">"docs.file must be set"</literal></expr></argument>)</argument_list></call></expr>;</throw>
     <expr_stmt/>}</block_content>
    file = new File(fileName</block></if></if_stmt>)</block><operator>.</operator><call><name>getAbsoluteFile</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>file</name> <operator>=</operator> <call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>fileName</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toAbsolutePath</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <if_stmt><if>if <condition>(<expr><name>encoding</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><name>encoding</name> <operator>=</operator> <name><name>IOUtils</name><operator>.</operator><name>UTF_8</name></name></expr>;</expr_stmt>
     <expr_stmt/>}</block_content>
diff --git a/lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ReutersContentSource.java b/lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ReutersContentSource.java
index b4d58bc0b01..7b5b021f8cc 100644
-- a/lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ReutersContentSource.java
++ b/lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ReutersContentSource.java
@@ -18</block><operator>,</operator><expr_stmt><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@</expr></expr_stmt></if></if_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>benchmark</name><operator>.</operator><name>byTask</name><operator>.</operator><name>feeds</name></name>;</package>
  <expr_stmt><expr><operator>*</operator><operator>/</operator></expr></expr_stmt>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>BufferedReader</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileInputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStreamReader</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>StandardCharsets</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Paths</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>text</name><operator>.</operator><name>DateFormat</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>text</name><operator>.</operator><name>ParsePosition</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>text</name><operator>.</operator><name>SimpleDateFormat</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">50</literal></expr><operator>,</operator><expr><literal type="number">24</literal> <operator>+</operator><literal type="number">50</literal></expr><operator>,</operator><expr><literal type="number">28</literal> @@ <specifier>public</specifier> <name>class</name> <name>ReutersContentSource</name> extends <name>ContentSource</name> <block>{
   }</block>
 
   <specifier>private</specifier> <name><name>ThreadLocal</name><argument_list type="generic">&lt;<argument><name>DateFormatInfo</name></argument>&gt;</argument_list></name> <name>dateFormat</name> <operator>=</operator> <operator>new</operator> <call><name><name>ThreadLocal</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>File</name></type> <name>dataDir</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>File</name></argument>&gt;</argument_list></name></type> <name>inputFiles</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>Path</name></type> <name>dataDir</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>Path</name></argument>&gt;</argument_list></name></type> <name>inputFiles</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <name>int</name></type> <name>nextFile</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <name>int</name></type> <name>iteration</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
   
   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>public</specifier> <name>void</name></type> <name>setConfig</name><parameter_list>(<parameter><decl><type><name>Config</name></type> <name>config</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>setConfig</name></name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>workDir</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"work.dir"</literal></expr></argument>, <argument><expr><literal type="string">"work"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>workDir</name> <init>= <expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"work.dir"</literal></expr></argument>, <argument><expr><literal type="string">"work"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>String</name></type> <name>d</name> <init>= <expr><call><name><name>config</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"docs.dir"</literal></expr></argument>, <argument><expr><literal type="string">"reuters-out"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>dataDir</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>dataDir</name> <operator>=</operator> <call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>dataDir</name><operator>.</operator><name>isAbsolute</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>dataDir</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>workDir</name></expr></argument>, <argument><expr><name>d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>dataDir</name> <operator>=</operator> <call><name><name>workDir</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><name>d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt/>}</block_content>
     inputFiles.clear(</block></if></if_stmt>)</block_content></block>;</function>
    <expr_stmt><expr><call><name>collectFiles</name><argument_list>(<argument><expr><name>dataDir</name></expr></argument>, <argument><expr><name>inputFiles</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <try>try <block>{<block_content>
      <expr_stmt><expr><call><name>collectFiles</name><argument_list>(<argument><expr><name>dataDir</name></expr></argument>, <argument><expr><name>inputFiles</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt/>}</block_content> catch (IOException e</block></try>)</block_content> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
    <expr_stmt/>}</block_content>
     if (inputFiles.size(</block></block></if></if_stmt>)</block_content> == 0</block></if></if_stmt>)</block_content> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(<argument><expr><literal type="string">"No txt files in dataDir: "</literal><operator>+</operator><call><name><name>dataDir</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
      <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(<argument><expr><literal type="string">"No txt files in dataDir: "</literal><operator>+</operator><call><name><name>dataDir</name><operator>.</operator><name>toAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
     <expr_stmt/>}</block_content>
   }
 
@@ -99</block></block><operator>,</operator><expr_stmt><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">103</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ReutersContentSource</name> extends <name>ContentSource</name> <block>{
   
   @<expr><name>Override</name>
   <specifier>public</specifier> <name>DocData</name> <call><name>getNextDocData</name><argument_list>(<argument><expr><name>DocData</name> <name>docData</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>NoMoreDataException</name></expr></argument>, <argument><expr><name>IOException</name> <block>{
    <expr><name>File</name> <name>f</name> <operator>=</operator> <literal type="null">null</literal></expr></block></expr></argument></throws></expr>;
    <name>Path</name> <name>f</name> <operator>=</operator> <literal type="null">null</literal></block></expr>;</expr_stmt></try>
     <decl_stmt><decl><type><name>String</name></type> <name>name</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
     <synchronized>synchronized <init>(<expr><name>this</name></expr>)</init> <block>{<block_content>
       <if_stmt><if>if <condition>(<expr><name>nextFile</name> <operator>&gt;=</operator> <call><name><name>inputFiles</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">111</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">115</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>ReutersContentSource</name> extends <name>ContentSource</name> <block>{
         <expr><name>iteration</name><operator>++</operator></expr>;
       }</block>
       <name>f</name> <operator>=</operator> <call><name><name>inputFiles</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>nextFile</name><operator>++</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>name</name> <operator>=</operator> <call><name><name>f</name><operator>.</operator><name>getCanonicalPath</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"_"</literal> <operator>+</operator> <name>iteration</name></expr>;</expr_stmt>
      <expr_stmt><expr><name>name</name> <operator>=</operator> <call><name><name>f</name><operator>.</operator><name>toRealPath</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"_"</literal> <operator>+</operator> <name>iteration</name></expr>;</expr_stmt>
     <expr_stmt/>}</block_content>
 
    BufferedReader reader = new BufferedReader(new InputStreamReader(new FileInputStream(f</block></if></if_stmt>)</block_content></block><operator>,</operator> <expr_stmt><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></expr_stmt></synchronized>)</block_content></block></for>)</block_content></block><empty_stmt>;</empty_stmt></if></if_stmt>
    <try>try <block>{<block_content>
    <try>try <init>(<decl><type><name>BufferedReader</name></type> <name>reader</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>newBufferedReader</name></name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
       <comment type="line">// First line is the date, 3rd is the title, rest is body</comment>
       <decl_stmt><decl><type><name>String</name></type> <name>dateStr</name> <init>= <expr><call><name><name>reader</name><operator>.</operator><name>readLine</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>reader</name><operator>.</operator><name>readLine</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt><comment type="line">// skip an empty line</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">128</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">131</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ReutersContentSource</name> extends <name>ContentSource</name> <block>{
       }</block>
       <call><name><name>reader</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       
      <expr_stmt><expr><call><name>addBytes</name><argument_list>(<argument><expr><call><name><name>f</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>addBytes</name><argument_list>(<argument><expr><call><name><name>Files</name><operator>.</operator><name>size</name></name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       
       <decl_stmt><decl><type><name>Date</name></type> <name>date</name> <init>= <expr><call><name>parseDate</name><argument_list>(<argument><expr><call><name><name>dateStr</name><operator>.</operator><name>trim</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">138</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">141</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>ReutersContentSource</name> extends <name>ContentSource</name> <block>{
       <expr><call><name><name>docData</name><operator>.</operator><name>setTitle</name></name><argument_list>(<argument><expr><name>title</name></expr></argument>)</argument_list></call></expr>;
       <call><name><name>docData</name><operator>.</operator><name>setDate</name></name><argument_list>(<argument><expr><name>date</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
       <return>return <expr><name>docData</name></expr>;</return>
    <expr_stmt/>}</block_content> finally <block>{<block_content>
      <expr_stmt><expr><call><name><name>reader</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt/>}</block_content>
   }
 
diff --git a/lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/TrecContentSource.java b/lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/TrecContentSource.java
index 439fc594694..8cb05bc149e 100644
-- a/lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/TrecContentSource.java
++ b/lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/TrecContentSource.java
@@ -18</block></block><operator>,</operator><expr_stmt><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@</expr></expr_stmt></try> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>benchmark</name><operator>.</operator><name>byTask</name><operator>.</operator><name>feeds</name></name>;</package>
  <expr_stmt><expr><operator>*</operator><operator>/</operator></expr></expr_stmt>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>BufferedReader</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStreamReader</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>StandardCharsets</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Paths</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>text</name><operator>.</operator><name>DateFormat</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>text</name><operator>.</operator><name>ParsePosition</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>text</name><operator>.</operator><name>SimpleDateFormat</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">82</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">84</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>TrecContentSource</name> extends <name>ContentSource</name> <block>{
 
   <expr><specifier>private</specifier> <name><name>ThreadLocal</name><argument_list type="generic">&lt;<argument><name>DateFormatInfo</name></argument>&gt;</argument_list></name> <name>dateFormats</name> <operator>=</operator> <operator>new</operator> <call><name><name>ThreadLocal</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
   <specifier>private</specifier> <name><name>ThreadLocal</name><argument_list type="generic">&lt;<argument><name>StringBuilder</name></argument>&gt;</argument_list></name> <name>trecDocBuffer</name> <operator>=</operator> <operator>new</operator> <call><name><name>ThreadLocal</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>File</name></type> <name>dataDir</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>File</name></argument>&gt;</argument_list></name></type> <name>inputFiles</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>Path</name></type> <name>dataDir</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>Path</name></argument>&gt;</argument_list></name></type> <name>inputFiles</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <name>int</name></type> <name>nextFile</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
   <comment type="line">// Use to synchronize threads on reading from the TREC documents.</comment>
   <decl_stmt><decl><type><specifier>private</specifier> <name>Object</name></type> <name>lock</name> <init>= <expr><operator>new</operator> <call><name>Object</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">174</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">176</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>TrecContentSource</name> extends <name>ContentSource</name> <block>{
         <expr><name>nextFile</name> <operator>=</operator> <literal type="number">0</literal></expr>;
         <name>iteration</name><operator>++</operator></block></expr>;</expr_stmt>
       <expr_stmt/>}</block_content>
      File f = inputFiles.get(nextFile++</block></try>)</block_content></block><empty_stmt>;</empty_stmt></try>
      <decl_stmt><decl><type><name>Path</name></type> <name>f</name> <init>= <expr><call><name><name>inputFiles</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>nextFile</name><operator>++</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <if_stmt><if>if <condition>(<expr><name>verbose</name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"opening: "</literal> <operator>+</operator> <name>f</name> <operator>+</operator> <literal type="string">" length: "</literal> <operator>+</operator> <call><name><name>f</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"opening: "</literal> <operator>+</operator> <name>f</name> <operator>+</operator> <literal type="string">" length: "</literal> <operator>+</operator> <call><name><name>Files</name><operator>.</operator><name>size</name></name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt/>}</block_content>
       try <block>{<block_content>
         <decl_stmt><decl><type><name>InputStream</name></type> <name>inputStream</name> <init>= <expr><call><name><name>StreamUtils</name><operator>.</operator><name>inputStream</name></name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="line">// support either gzip, bzip2, or regular text file, by extension  </comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">185</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">187</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TrecContentSource</name> extends <name>ContentSource</name> <block>{
         <return>return;</return>
       }</block></expr></expr_stmt> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <if_stmt><if>if <condition>(<expr><name>verbose</name></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"Skipping 'bad' file "</literal> <operator>+</operator> <call><name><name>f</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call><operator>+</operator><literal type="string">" due to "</literal><operator>+</operator><call><name><name>e</name><operator>.</operator><name>getMessage</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"Skipping 'bad' file "</literal> <operator>+</operator> <call><name><name>f</name><operator>.</operator><name>toAbsolutePath</name></name><argument_list>()</argument_list></call><operator>+</operator><literal type="string">" due to "</literal><operator>+</operator><call><name><name>e</name><operator>.</operator><name>getMessage</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           <continue>continue;</continue>
         <expr_stmt/>}</block_content>
         <throw>throw <argument_list>new <argument><expr><call><name>NoMoreDataException</name><argument_list>()</argument_list></call></expr></argument></argument_list></throw></block><empty_stmt>;</empty_stmt></if></if_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">291</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">293</literal></expr><operator>,</operator><expr><literal type="number">18</literal> @@ <specifier>public</specifier> <name>class</name> <name>TrecContentSource</name> extends <name>ContentSource</name> <block>{
   <expr><specifier>public</specifier> <name>void</name> <call><name>setConfig</name><argument_list>(<argument><expr><name>Config</name> <name>config</name></expr></argument>)</argument_list></call> <block>{
     <expr><call><name><name>super</name><operator>.</operator><name>setConfig</name></name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;
     <comment type="line">// dirs</comment>
    <name>File</name> <name>workDir</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"work.dir"</literal></expr></argument>, <argument><expr><literal type="string">"work"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></block></expr>;
    <name>Path</name> <name>workDir</name> <operator>=</operator> <call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"work.dir"</literal></expr></argument>, <argument><expr><literal type="string">"work"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>String</name></type> <name>d</name> <init>= <expr><call><name><name>config</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"docs.dir"</literal></expr></argument>, <argument><expr><literal type="string">"trec"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>dataDir</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>dataDir</name> <operator>=</operator> <call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>dataDir</name><operator>.</operator><name>isAbsolute</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>dataDir</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>workDir</name></expr></argument>, <argument><expr><name>d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>dataDir</name> <operator>=</operator> <call><name><name>workDir</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><name>d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt/>}</block_content>
     <comment type="line">// files</comment>
    collectFiles(dataDir</block><operator>,</operator> <expr_stmt><expr><name>inputFiles</name></expr></expr_stmt></if></if_stmt>)</block_content></block><empty_stmt>;</empty_stmt></catch>
    <try>try <block>{<block_content>
      <expr_stmt><expr><call><name>collectFiles</name><argument_list>(<argument><expr><name>dataDir</name></expr></argument>, <argument><expr><name>inputFiles</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt/>}</block_content> catch (IOException e</block></try>)</block_content> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
    <expr_stmt/>}</block_content>
     if (inputFiles.size(</block></block></block></if></if_stmt>)</block_content> == 0</block></for>)</block> <block>{
       <throw>throw <argument_list>new <argument><expr><call><name>IllegalArgumentException</name><argument_list>(<argument><expr><literal type="string">"No files in dataDir: "</literal> <operator>+</operator> <name>dataDir</name></expr></argument>)</argument_list></call></expr></argument></argument_list></throw>;
     }</block>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>feeds</name><operator>/</operator><name><name>TrecDocParser</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>feeds</name><operator>/</operator><name><name>TrecDocParser</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">24b9801a6b7</literal><operator>..</operator><literal type="number">62ff966e7c8</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>feeds</name><operator>/</operator><name><name>TrecDocParser</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>feeds</name><operator>/</operator><name><name>TrecDocParser</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr>,<expr><literal type="number">8</literal> <operator>+</operator><literal type="number">17</literal></expr>,<expr><literal type="number">8</literal> @@</expr> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>benchmark</name><operator>.</operator><name>byTask</name><operator>.</operator><name>feeds</name></name>;</package>
  <operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></block></expr></init></decl></decl_stmt>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Locale</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">57</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">57</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>TrecDocParser</name> <block>{
   <comment type="block" format="javadoc">/**
    * Compute the path type of a file by inspecting name of file and its parents
    */</comment>
  <expr><specifier>public</specifier> <specifier>static</specifier> <name>ParsePathType</name> <call><name>pathType</name><argument_list>(<argument><expr><name>File</name> <name>f</name></expr></argument>)</argument_list></call> <block>{
  <expr><specifier>public</specifier> <specifier>static</specifier> <name>ParsePathType</name> <call><name>pathType</name><argument_list>(<argument><expr><name>Path</name> <name>f</name></expr></argument>)</argument_list></call> <block>{
     <expr><name>int</name> <name>pathLength</name> <operator>=</operator> <literal type="number">0</literal></expr>;</block></expr>
     <while>while <condition>(<expr><name>f</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <operator>++</operator><name>pathLength</name> <operator>&lt;</operator> <name>MAX_PATH_LENGTH</name></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>ParsePathType</name></type> <name>ppt</name> <init>= <expr><call><name><name>pathName2Type</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>f</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toUpperCase</name><argument_list>(<argument><expr><name><name>Locale</name><operator>.</operator><name>ROOT</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>ParsePathType</name></type> <name>ppt</name> <init>= <expr><call><name><name>pathName2Type</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>f</name><operator>.</operator><name>getFileName</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toUpperCase</name><argument_list>(<argument><expr><name><name>Locale</name><operator>.</operator><name>ROOT</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <if_stmt><if>if <condition>(<expr><name>ppt</name><operator>!=</operator><literal type="null">null</literal></expr>)</condition> <block>{<block_content>
         <return>return <expr><name>ppt</name></expr>;</return>
       <expr_stmt/></block_content></block></if></if_stmt></block_content></block></while></block></expr>}</block>
      <name>f</name> <operator>=</operator> <call><name><name>f</name><operator>.</operator><name>getParentFile</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>f</name> <operator>=</operator> <call><name><name>f</name><operator>.</operator><name>getParent</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     }</block></class>
     <return>return <expr><name>DEFAULT_PATH_TYPE</name></expr>;</return>
   </block_content>}</block></try>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>tasks</name><operator>/</operator><name><name>AddIndexesTask</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>tasks</name><operator>/</operator><name><name>AddIndexesTask</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">7d6db25cc03</literal><operator>..</operator><literal type="number">714a668150c</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>tasks</name><operator>/</operator><name><name>AddIndexesTask</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>tasks</name><operator>/</operator><name><name>AddIndexesTask</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>benchmark</name><operator>.</operator><name>byTask</name><operator>.</operator><name>tasks</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Paths</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>benchmark</name><operator>.</operator><name>byTask</name><operator>.</operator><name>PerfRunData</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>DirectoryReader</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">54</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">54</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>AddIndexesTask</name> extends <name>PerfTask</name> <block>{
     <if_stmt><if>if <condition>(<expr><name>inputDirProp</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
       <throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><literal type="string">"config parameter "</literal> <operator>+</operator> <name>ADDINDEXES_INPUT_DIR</name> <operator>+</operator> <literal type="string">" not specified in configuration"</literal></expr></argument>)</argument_list></call></expr>;</throw>
     </block_content>}</block></if></if_stmt>
    <name>inputDir</name> <operator>=</operator> <call><name><name>FSDirectory</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>inputDirProp</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><name>inputDir</name> <operator>=</operator> <call><name><name>FSDirectory</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>inputDirProp</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></try>
   
   <annotation>@<name>Override</name></annotation>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>tasks</name><operator>/</operator><name><name>AnalyzerFactoryTask</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>tasks</name><operator>/</operator><name><name>AnalyzerFactoryTask</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">31a23125e5a</literal><operator>..</operator><literal type="number">1d7cdf0a985</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>tasks</name><operator>/</operator><name><name>AnalyzerFactoryTask</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>tasks</name><operator>/</operator><name><name>AnalyzerFactoryTask</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">27</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">27</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>benchmark</name><operator>.</operator><name>byTask</name><operator>.</operator><name>PerfRunData</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>benchmark</name><operator>.</operator><name>byTask</name><operator>.</operator><name>utils</name><operator>.</operator><name>AnalyzerFactory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>Version</name></name>;</import>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>StreamTokenizer</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>StringReader</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Paths</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">364</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">366</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>AnalyzerFactoryTask</name> extends <name>PerfTask</name> <block>{
         <throw>throw <argument_list>new <argument><expr><call><name>RuntimeException</name><argument_list>(<argument><expr><literal type="string">"Line #"</literal> <operator>+</operator> <call><name>lineno</name><argument_list>(<argument><expr><name>stok</name></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="string">": "</literal></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr></argument></argument_list></throw>;
       }</block></expr></expr_stmt>
       <if_stmt><if>if <condition>(<expr><name>instance</name> <operator>instanceof</operator> <name>ResourceLoaderAware</name></expr>)</condition> <block>{<block_content>
        <decl_stmt><decl><type><name>File</name></type> <name>baseDir</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>getRunData</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getConfig</name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"work.dir"</literal></expr></argument>, <argument><expr><literal type="string">"work"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getAbsoluteFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>( <expr><operator>!</operator> <call><name><name>baseDir</name><operator>.</operator><name>isDirectory</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><name>baseDir</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><literal type="string">"."</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getAbsoluteFile</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>Path</name></type> <name>baseDir</name> <init>= <expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name>getRunData</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getConfig</name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"work.dir"</literal></expr></argument>, <argument><expr><literal type="string">"work"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>Files</name><operator>.</operator><name>isDirectory</name></name><argument_list>(<argument><expr><name>baseDir</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><name>baseDir</name> <operator>=</operator> <call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></if></if_stmt>
         <expr_stmt><expr><operator>(</operator><operator>(</operator><name>ResourceLoaderAware</name><operator>)</operator><name>instance</name><operator>)</operator><operator>.</operator><call><name>inform</name><argument_list>(<argument><expr><operator>new</operator> <call><name>FilesystemResourceLoader</name><argument_list>(<argument><expr><name>baseDir</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>tasks</name><operator>/</operator><name><name>CreateIndexTask</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>tasks</name><operator>/</operator><name><name>CreateIndexTask</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>b617d218b97</name><operator>..</operator><name>e5651ef3309</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>tasks</name><operator>/</operator><name><name>CreateIndexTask</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>tasks</name><operator>/</operator><name><name>CreateIndexTask</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">37</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">37</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>NoMergeScheduler</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>Version</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>BufferedOutputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileOutputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>PrintStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>Charset</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Paths</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
  * Create an index. &lt;br&gt;
@@ -191,8 +192,8 @@ public class CreateIndexTask extends PerfTask {
       } else if (infoStreamVal.equals("SystemErr")) {
         iwc.setInfoStream(System.err);
       } else {
        File f = new File(infoStreamVal).getAbsoluteFile();
        iwc.setInfoStream(new PrintStream(new BufferedOutputStream(new FileOutputStream(f)), false, Charset.defaultCharset().name()));
        Path f = Paths.get(infoStreamVal);
        iwc.setInfoStream(new PrintStream(new BufferedOutputStream(Files.newOutputStream(f)), false, Charset.defaultCharset().name()));
       }
     }
     IndexWriter writer = new IndexWriter(runData.getDirectory(), iwc);
diff --git a/lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/WriteEnwikiLineDocTask.java b/lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/WriteEnwikiLineDocTask.java
index 334e52fdc35..2caee9d19d5 100644
-- a/lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/WriteEnwikiLineDocTask.java
++ b/lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/WriteEnwikiLineDocTask.java
@@ -6,6 +6,8 @@ import java.io.OutputStream;
 import java.io.OutputStreamWriter;
 import java.io.PrintWriter;
 import java.nio.charset.StandardCharsets;
import java.nio.file.Path;
import java.nio.file.Paths;
 
 import org.apache.lucene.benchmark.byTask.PerfRunData;
 import org.apache.lucene.benchmark.byTask.feeds.DocMaker;
@@ -41,16 +43,16 @@ public class WriteEnwikiLineDocTask extends WriteLineDocTask {
 
   public WriteEnwikiLineDocTask(PerfRunData runData) throws Exception {
     super(runData);
    OutputStream out = StreamUtils.outputStream(categoriesLineFile(new File(fname)));
    OutputStream out = StreamUtils.outputStream(categoriesLineFile(Paths.get(fname)));
     categoryLineFileOut = new PrintWriter(new BufferedWriter(new OutputStreamWriter(out, StandardCharsets.UTF_8), StreamUtils.BUFFER_SIZE));
     writeHeader(categoryLineFileOut);
   }
 
   /** Compose categories line file out of original line file */</comment>
  <function><type><specifier>public</specifier> <specifier>static</specifier> <name>File</name></type> <name>categoriesLineFile</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>f</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>File</name></type> <name>dir</name> <init>= <expr><call><name><name>f</name><operator>.</operator><name>getParentFile</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>categoriesName</name> <init>= <expr><literal type="string">"categories-"</literal><operator>+</operator><call><name><name>f</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <return>return <expr><ternary><condition><expr><name>dir</name><operator>==</operator><literal type="null">null</literal></expr> ?</condition><then> <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>categoriesName</name></expr></argument>)</argument_list></call></expr> </then><else>:  <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>dir</name></expr></argument>,<argument><expr><name>categoriesName</name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</return>
  <function><type><specifier>public</specifier> <specifier>static</specifier> <name>Path</name></type> <name>categoriesLineFile</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>f</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>Path</name></type> <name>dir</name> <init>= <expr><call><name><name>f</name><operator>.</operator><name>toAbsolutePath</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getParent</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>categoriesName</name> <init>= <expr><literal type="string">"categories-"</literal><operator>+</operator><call><name><name>f</name><operator>.</operator><name>getFileName</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <return>return <expr><call><name><name>dir</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><name>categoriesName</name></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
   
   <annotation>@<name>Override</name></annotation>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>tasks</name><operator>/</operator><name><name>WriteLineDocTask</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>tasks</name><operator>/</operator><name><name>WriteLineDocTask</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">9715b35871c</literal><operator>..</operator><literal type="number">40535547da7</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>tasks</name><operator>/</operator><name><name>WriteLineDocTask</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>tasks</name><operator>/</operator><name><name>WriteLineDocTask</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>benchmark</name><operator>.</operator><name>byTask</name><operator>.</operator><name>tasks</name></name>;</package>
  <expr_stmt><expr><operator>*</operator><operator>/</operator></expr></expr_stmt>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>BufferedWriter</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>OutputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>OutputStreamWriter</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>PrintWriter</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>StandardCharsets</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Paths</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>regex</name><operator>.</operator><name>Matcher</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">101</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">101</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>WriteLineDocTask</name> extends <name>PerfTask</name> <block>{
     <if_stmt><if>if <condition>(<expr><name>fname</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
       <throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><literal type="string">"line.file.out must be set"</literal></expr></argument>)</argument_list></call></expr>;</throw>
     </block_content>}</block></if></if_stmt>
    <name>OutputStream</name> <name>out</name> <operator>=</operator> <call><name><name>StreamUtils</name><operator>.</operator><name>outputStream</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>fname</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>OutputStream</name></type> <name>out</name> <init>= <expr><call><name><name>StreamUtils</name><operator>.</operator><name>outputStream</name></name><argument_list>(<argument><expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>fname</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><name>lineFileOut</name> <operator>=</operator> <operator>new</operator> <call><name>PrintWriter</name><argument_list>(<argument><expr><operator>new</operator> <call><name>BufferedWriter</name><argument_list>(<argument><expr><operator>new</operator> <call><name>OutputStreamWriter</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>StreamUtils</name><operator>.</operator><name>BUFFER_SIZE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>docMaker</name> <operator>=</operator> <call><name><name>runData</name><operator>.</operator><name>getDocMaker</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>utils</name><operator>/</operator><name><name>StreamUtils</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>utils</name><operator>/</operator><name><name>StreamUtils</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>fbcec4d784d</name><operator>..</operator><literal type="number">2f9fb31bd7d</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>utils</name><operator>/</operator><name><name>StreamUtils</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>utils</name><operator>/</operator><name><name>StreamUtils</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>benchmark</name><operator>.</operator><name>byTask</name><operator>.</operator><name>utils</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>BufferedInputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>BufferedOutputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileInputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileOutputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>OutputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Locale</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">83</literal></expr><operator>,</operator><expr><literal type="number">17</literal> <operator>+</operator><literal type="number">82</literal></expr><operator>,</operator><expr><literal type="number">17</literal> @@ <specifier>public</specifier> <name>class</name> <name>StreamUtils</name> <block>{
    <expr><operator>*</operator> <name>based</name> <name>on</name> <name>the</name> <name>file</name> <call><name>name</name> <argument_list>(<argument><expr><name><name>e</name><operator>.</operator><name>g</name><operator>.</operator></name>,</expr></argument></argument_list></call></expr> <if_stmt><if>if it ends with .bz2 or .bzip<operator>,</operator> <return>return <expr><name>a</name>
    <operator>*</operator> <literal type="char">'bzip'</literal> <block>{@<expr><name>link</name> <name>InputStream</name></expr>}</block></expr></return></if></if_stmt>)</block><operator>.</operator>
    <operator>*</operator><operator>/</operator>
  <specifier>public</specifier> <specifier>static</specifier> <name>InputStream</name> <call><name>inputStream</name><argument_list>(<argument><expr><name>File</name> <name>file</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>public</specifier> <specifier>static</specifier> <name>InputStream</name> <call><name>inputStream</name><argument_list>(<argument><expr><name>Path</name> <name>file</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
     <comment type="line">// First, create a FileInputStream, as this will be required by all types.</comment>
     <comment type="line">// Wrap with BufferedInputStream for better performance</comment>
    <expr><name>InputStream</name> <name>in</name> <operator>=</operator> <operator>new</operator> <call><name>BufferedInputStream</name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>BUFFER_SIZE</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>InputStream</name></type> <name>in</name> <init>= <expr><operator>new</operator> <call><name>BufferedInputStream</name><argument_list>(<argument><expr><call><name><name>Files</name><operator>.</operator><name>newInputStream</name></name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>BUFFER_SIZE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <return>return <expr><call><name>fileType</name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>inputStream</name><argument_list>(<argument><expr><name>in</name></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
 
   <comment type="block" format="javadoc">/** Return the type of the file, or null if unknown */</comment>
  <function><type><specifier>private</specifier> <specifier>static</specifier> <name>Type</name></type> <name>fileType</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>file</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <function><type><specifier>private</specifier> <specifier>static</specifier> <name>Type</name></type> <name>fileType</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>file</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <decl_stmt><decl><type><name>Type</name></type> <name>type</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>fileName</name> <init>= <expr><call><name><name>file</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>fileName</name> <init>= <expr><call><name><name>file</name><operator>.</operator><name>getFileName</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>int</name></type> <name>idx</name> <init>= <expr><call><name><name>fileName</name><operator>.</operator><name>lastIndexOf</name></name><argument_list>(<argument><expr><literal type="char">'.'</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <if_stmt><if>if <condition>(<expr><name>idx</name> <operator>!=</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><name>type</name> <operator>=</operator> <call><name><name>extensionToType</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>fileName</name><operator>.</operator><name>substring</name></name><argument_list>(<argument><expr><name>idx</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toLowerCase</name><argument_list>(<argument><expr><name><name>Locale</name><operator>.</operator><name>ROOT</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">103</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">102</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>StreamUtils</name> <block>{
   
   <comment type="block" format="javadoc">/**
    * Returns an {@link OutputStream} over the requested file, identifying
   * the appropriate {@link OutputStream} instance similar to {@link #inputStream(File)}.
   * the appropriate {@link OutputStream} instance similar to {@link #inputStream(Path)}.
    */</comment>
  <expr><specifier>public</specifier> <specifier>static</specifier> <name>OutputStream</name> <call><name>outputStream</name><argument_list>(<argument><expr><name>File</name> <name>file</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>public</specifier> <specifier>static</specifier> <name>OutputStream</name> <call><name>outputStream</name><argument_list>(<argument><expr><name>Path</name> <name>file</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
     <comment type="line">// First, create a FileInputStream, as this will be required by all types.</comment>
     <comment type="line">// Wrap with BufferedInputStream for better performance</comment>
    <expr><name>OutputStream</name> <name>os</name> <operator>=</operator> <operator>new</operator> <call><name>BufferedOutputStream</name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileOutputStream</name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>BUFFER_SIZE</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>OutputStream</name> <name>os</name> <operator>=</operator> <operator>new</operator> <call><name>BufferedOutputStream</name><argument_list>(<argument><expr><call><name><name>Files</name><operator>.</operator><name>newOutputStream</name></name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>BUFFER_SIZE</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <return>return <expr><call><name>fileType</name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>outputStream</name><argument_list>(<argument><expr><name>os</name></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></if></if_stmt>
 </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>quality</name><operator>/</operator><name>trec</name><operator>/</operator><name><name>QueryDriver</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>quality</name><operator>/</operator><name>trec</name><operator>/</operator><name><name>QueryDriver</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>a683b42d0ed</name><operator>..</operator><literal type="number">200574d762a</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>quality</name><operator>/</operator><name>trec</name><operator>/</operator><name><name>QueryDriver</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>quality</name><operator>/</operator><name>trec</name><operator>/</operator><name><name>QueryDriver</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">26</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">26</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>IndexSearcher</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>FSDirectory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>IOUtils</name></name>;</import>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>BufferedReader</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>OutputStreamWriter</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>PrintWriter</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>Charset</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>StandardCharsets</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Paths</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">52</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">53</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>QueryDriver</name> <block>{
       <expr><call><name><name>System</name><operator>.</operator><name>exit</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;
     }</block></expr></expr_stmt>
     
    <decl_stmt><decl><type><name>File</name></type> <name>topicsFile</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name><name>args</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>qrelsFile</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name><name>args</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>topicsFile</name> <init>= <expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>args</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>qrelsFile</name> <init>= <expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>args</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>SubmissionReport</name></type> <name>submitLog</name> <init>= <expr><operator>new</operator> <call><name>SubmissionReport</name><argument_list>(<argument><expr><operator>new</operator> <call><name>PrintWriter</name><argument_list>(<argument><expr><name><name>args</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>IOUtils</name><operator>.</operator><name>UTF_8</name></name></expr></argument> <comment type="block">/* huh, no nio.Charset ctor? */</comment>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"lucene"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>FSDirectory</name></type> <name>dir</name> <init>= <expr><call><name><name>FSDirectory</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name><name>args</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>FSDirectory</name></type> <name>dir</name> <init>= <expr><call><name><name>FSDirectory</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>args</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>String</name></type> <name>fieldSpec</name> <init>= <expr><ternary><condition><expr><name><name>args</name><operator>.</operator><name>length</name></name> <operator>==</operator> <literal type="number">5</literal></expr> ?</condition><then> <expr><name><name>args</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr> </then><else>: <expr><literal type="string">"T"</literal></expr></else></ternary></expr></init></decl>;</decl_stmt> <comment type="line">// default to Title-only if not specified.</comment>
     <decl_stmt><decl><type><name>IndexReader</name></type> <name>reader</name> <init>= <expr><call><name><name>DirectoryReader</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>IndexSearcher</name></type> <name>searcher</name> <init>= <expr><operator>new</operator> <call><name>IndexSearcher</name><argument_list>(<argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">67</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">68</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>QueryDriver</name> <block>{
 
     <comment type="line">// use trec utilities to read trec topics into quality queries</comment>
     <expr><name>TrecTopicsReader</name> <name>qReader</name> <operator>=</operator> <operator>new</operator> <call><name>TrecTopicsReader</name><argument_list>()</argument_list></call></expr>;
    <name>QualityQuery</name> <name><name>qqs</name><index>[]</index></name> <operator>=</operator> <call><name><name>qReader</name><operator>.</operator><name>readQueries</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>BufferedReader</name><argument_list>(<argument><expr><call><name><name>IOUtils</name><operator>.</operator><name>getDecodingReader</name></name><argument_list>(<argument><expr><name>topicsFile</name></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>QualityQuery</name></type> <name><name>qqs</name><index>[]</index></name> <init>= <expr><call><name><name>qReader</name><operator>.</operator><name>readQueries</name></name><argument_list>(<argument><expr><call><name><name>Files</name><operator>.</operator><name>newBufferedReader</name></name><argument_list>(<argument><expr><name>topicsFile</name></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <comment type="line">// prepare judge, with trec utilities that read from a QRels file</comment>
    <decl_stmt><decl><type><name>Judge</name></type> <name>judge</name> <init>= <expr><operator>new</operator> <call><name>TrecJudge</name><argument_list>(<argument><expr><operator>new</operator> <call><name>BufferedReader</name><argument_list>(<argument><expr><call><name><name>IOUtils</name><operator>.</operator><name>getDecodingReader</name></name><argument_list>(<argument><expr><name>qrelsFile</name></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Judge</name></type> <name>judge</name> <init>= <expr><operator>new</operator> <call><name>TrecJudge</name><argument_list>(<argument><expr><call><name><name>Files</name><operator>.</operator><name>newBufferedReader</name></name><argument_list>(<argument><expr><name>qrelsFile</name></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <comment type="line">// validate topics &amp; judgments match each other</comment>
     <expr_stmt><expr><call><name><name>judge</name><operator>.</operator><name>validateData</name></name><argument_list>(<argument><expr><name>qqs</name></expr></argument>, <argument><expr><name>logger</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>quality</name><operator>/</operator><name>utils</name><operator>/</operator><name><name>QualityQueriesFinder</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>quality</name><operator>/</operator><name>utils</name><operator>/</operator><name><name>QualityQueriesFinder</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">9915df7e2ad</literal><operator>..</operator><literal type="number">942a79bbdd5</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>quality</name><operator>/</operator><name>utils</name><operator>/</operator><name><name>QualityQueriesFinder</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>quality</name><operator>/</operator><name>utils</name><operator>/</operator><name><name>QualityQueriesFinder</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@
  <operator>*</operator><operator>/</operator></expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>benchmark</name><operator>.</operator><name>quality</name><operator>.</operator><name>utils</name></name>;</package>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Paths</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>DirectoryReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">54</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">54</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>QualityQueriesFinder</name> <block>{
       <expr><call><name><name>System</name><operator>.</operator><name>err</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"Usage: java QualityQueriesFinder &lt;index-dir&gt;"</literal></expr></argument>)</argument_list></call></expr>;
       <call><name><name>System</name><operator>.</operator><name>exit</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     </block_content>}</block></function>
    <decl_stmt><decl><type><name>QualityQueriesFinder</name></type> <name>qqf</name> <init>= <expr><operator>new</operator> <call><name>QualityQueriesFinder</name><argument_list>(<argument><expr><call><name><name>FSDirectory</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name><name>args</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>QualityQueriesFinder</name></type> <name>qqf</name> <init>= <expr><operator>new</operator> <call><name>QualityQueriesFinder</name><argument_list>(<argument><expr><call><name><name>FSDirectory</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>args</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>String</name></type> <name><name>q</name><index>[]</index></name> <init>= <expr><call><name><name>qqf</name><operator>.</operator><name>bestQueries</name></name><argument_list>(<argument><expr><literal type="string">"body"</literal></expr></argument>,<argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name><name>q</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
       <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><name>newline</name><operator>+</operator><call><name>formatQueryAsTrecTopic</name><argument_list>(<argument><expr><name>i</name></expr></argument>,<argument><expr><name><name>q</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>,<argument><expr><literal type="null">null</literal></expr></argument>,<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>utils</name><operator>/</operator><name><name>ExtractReuters</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>utils</name><operator>/</operator><name><name>ExtractReuters</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">7568374a3af</literal><operator>..</operator><literal type="number">5ddab6001e2</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>utils</name><operator>/</operator><name><name>ExtractReuters</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>utils</name><operator>/</operator><name><name>ExtractReuters</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">48</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">43</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>benchmark</name><operator>.</operator><name>utils</name></name>;</package>
 
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>BufferedReader</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileFilter</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileInputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileOutputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>BufferedWriter</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStreamReader</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>OutputStreamWriter</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>StandardCharsets</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>DirectoryStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Paths</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>StandardCopyOption</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>regex</name><operator>.</operator><name>Matcher</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>regex</name><operator>.</operator><name>Pattern</name></name>;</import>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>IOUtils</name></name>;</import>

 
 <comment type="block" format="javadoc">/**
  * Split the Reuters SGML documents into Simple Text files containing: Title, Date, Dateline, Body
  */</comment>
 <class><specifier>public</specifier> class <name>ExtractReuters</name> <block>{
  <decl_stmt><decl><type><specifier>private</specifier> <name>File</name></type> <name>reutersDir</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>File</name></type> <name>outputDir</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>LINE_SEPARATOR</name> <init>= <expr><call><name><name>System</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><literal type="string">"line.separator"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>Path</name></type> <name>reutersDir</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>Path</name></type> <name>outputDir</name></decl>;</decl_stmt>
 
  <constructor><specifier>public</specifier> <name>ExtractReuters</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>reutersDir</name></decl></parameter>, <parameter><decl><type><name>File</name></type> <name>outputDir</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
  <constructor><specifier>public</specifier> <name>ExtractReuters</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>reutersDir</name></decl></parameter>, <parameter><decl><type><name>Path</name></type> <name>outputDir</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
     <expr_stmt><expr><name><name>this</name><operator>.</operator><name>reutersDir</name></name> <operator>=</operator> <name>reutersDir</name></expr>;</expr_stmt>
     <expr_stmt><expr><name><name>this</name><operator>.</operator><name>outputDir</name></name> <operator>=</operator> <name>outputDir</name></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"Deleting all files in "</literal> <operator>+</operator> <name>outputDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for>for <control>(<init><decl><type><name>File</name></type> <name>f</name> <range>: <expr><call><name><name>outputDir</name><operator>.</operator><name>listFiles</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
      <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>delete</name></name><argument_list>(<argument><expr><call><name><name>f</name><operator>.</operator><name>toPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt><expr><call><name><name>IOUtils</name><operator>.</operator><name>rm</name></name><argument_list>(<argument><expr><name>outputDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></constructor>
 
  <function><type><specifier>public</specifier> <name>void</name></type> <name>extract</name><parameter_list>()</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name><name>File</name><index>[]</index></name></type> <name>sgmFiles</name> <init>= <expr><call><name><name>reutersDir</name><operator>.</operator><name>listFiles</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>FileFilter</name></super><argument_list>()</argument_list> <block>{
      <function><annotation>@<name>Override</name></annotation>
      <type><specifier>public</specifier> <name>boolean</name></type> <name>accept</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>file</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <return>return <expr><call><name><name>file</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>endsWith</name><argument_list>(<argument><expr><literal type="string">".sgm"</literal></expr></argument>)</argument_list></call></expr>;</return>
      </block_content>}</block></function>
    }</block></class></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>sgmFiles</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <name><name>sgmFiles</name><operator>.</operator><name>length</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
      <for>for <control>(<init><decl><type><name>File</name></type> <name>sgmFile</name> <range>: <expr><name>sgmFiles</name></expr></range></decl></init>)</control> <block>{<block_content>
  <function><type><specifier>public</specifier> <name>void</name></type> <name>extract</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>long</name></type> <name>count</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <try>try <init>(<decl><type><name><name>DirectoryStream</name><argument_list type="generic">&lt;<argument><name>Path</name></argument>&gt;</argument_list></name></type> <name>stream</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>newDirectoryStream</name></name><argument_list>(<argument><expr><name>reutersDir</name></expr></argument>, <argument><expr><literal type="string">"*.sgm"</literal></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
      <for>for <control>(<init><decl><type><name>Path</name></type> <name>sgmFile</name> <range>: <expr><name>stream</name></expr></range></decl></init>)</control> <block>{<block_content>
         <expr_stmt><expr><call><name>extractFile</name><argument_list>(<argument><expr><name>sgmFile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>count</name><operator>++</operator></expr>;</expr_stmt>
       </block_content>}</block></for>
    </block_content>}</block></try> <if_stmt><else>else <block>{<block_content>
    </block_content>}</block></else></if_stmt>
    <if_stmt><if>if <condition>(<expr><name>count</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>err</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"No .sgm files in "</literal> <operator>+</operator> <name>reutersDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></if></if_stmt>
   </block_content>}</block></function>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">74</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">69</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>ExtractReuters</name> <block>{
   <comment type="block" format="javadoc">/**
    * Override if you wish to change what is extracted
    */</comment>
  <expr><specifier>protected</specifier> <name>void</name> <call><name>extractFile</name><argument_list>(<argument><expr><name>File</name> <name>sgmFile</name></expr></argument>)</argument_list></call> <block>{
    <try>try <block>{<block_content>
      <decl_stmt><decl><type><name>BufferedReader</name></type> <name>reader</name> <init>= <expr><operator>new</operator> <call><name>BufferedReader</name><argument_list>(<argument><expr><operator>new</operator> <call><name>InputStreamReader</name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>sgmFile</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <function><type><specifier>protected</specifier> <name>void</name></type> <name>extractFile</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>sgmFile</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <try>try <init>(<decl><type><name>BufferedReader</name></type> <name>reader</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>newBufferedReader</name></name><argument_list>(<argument><expr><name>sgmFile</name></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
       <decl_stmt><decl><type><name>StringBuilder</name></type> <name>buffer</name> <init>= <expr><operator>new</operator> <call><name>StringBuilder</name><argument_list>(<argument><expr><literal type="number">1024</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>StringBuilder</name></type> <name>outBuffer</name> <init>= <expr><operator>new</operator> <call><name>StringBuilder</name><argument_list>(<argument><expr><literal type="number">1024</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">101</literal></expr><operator>,</operator><expr><literal type="number">23</literal> <operator>+</operator><literal type="number">94</literal></expr><operator>,</operator><expr><literal type="number">21</literal> @@ <specifier>public</specifier> <name>class</name> <name>ExtractReuters</name> <block>{
                 <expr><call><name><name>outBuffer</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><call><name><name>matcher</name><operator>.</operator><name>group</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</block></expr></expr_stmt></block_content></block></try></block_content></block></function></block_content></block></try></block></expr>
               }</block></expr></expr_stmt>
             </block_content>}</block></for>
            <expr_stmt><expr><call><name><name>outBuffer</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><name>LINE_SEPARATOR</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>append</name><argument_list>(<argument><expr><name>LINE_SEPARATOR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>outBuffer</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><call><name><name>System</name><operator>.</operator><name>lineSeparator</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>append</name><argument_list>(<argument><expr><call><name><name>System</name><operator>.</operator><name>lineSeparator</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           </block_content>}</block></if></if_stmt>
           <decl_stmt><decl><type><name>String</name></type> <name>out</name> <init>= <expr><call><name><name>outBuffer</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
           <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>META_CHARS_SERIALIZATIONS</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
             <expr_stmt><expr><name>out</name> <operator>=</operator> <call><name><name>out</name><operator>.</operator><name>replaceAll</name></name><argument_list>(<argument><expr><name><name>META_CHARS_SERIALIZATIONS</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name><name>META_CHARS</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           </block_content>}</block></for>
          <decl_stmt><decl><type><name>File</name></type> <name>outFile</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>outputDir</name></expr></argument>, <argument><expr><call><name><name>sgmFile</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"-"</literal>
              <operator>+</operator> <operator>(</operator><name>docNumber</name><operator>++</operator><operator>)</operator> <operator>+</operator> <literal type="string">".txt"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <decl_stmt><decl><type><name>Path</name></type> <name>outFile</name> <init>= <expr><call><name><name>outputDir</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><call><name><name>sgmFile</name><operator>.</operator><name>getFileName</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"-"</literal> <operator>+</operator> <operator>(</operator><name>docNumber</name><operator>++</operator><operator>)</operator> <operator>+</operator> <literal type="string">".txt"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
           <comment type="line">// System.out.println("Writing " + outFile);</comment>
          <decl_stmt><decl><type><name>OutputStreamWriter</name></type> <name>writer</name> <init>= <expr><operator>new</operator> <call><name>OutputStreamWriter</name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileOutputStream</name><argument_list>(<argument><expr><name>outFile</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>write</name></name><argument_list>(<argument><expr><name>out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
          <try>try <init>(<decl><type><name>BufferedWriter</name></type> <name>writer</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>newBufferedWriter</name></name><argument_list>(<argument><expr><name>outFile</name></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
            <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>write</name></name><argument_list>(<argument><expr><name>out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          </block_content>}</block></try>
           <expr_stmt><expr><call><name><name>outBuffer</name><operator>.</operator><name>setLength</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           <expr_stmt><expr><call><name><name>buffer</name><operator>.</operator><name>setLength</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></function>
       </block_content>}</block></constructor>
      <constructor_decl><name><name>reader</name><operator>.</operator><name>close</name></name><parameter_list>()</parameter_list>;</constructor_decl>
     }</block></class> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
       <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
     </block_content>}</block></catch>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">128</literal></expr><operator>,</operator><expr><literal type="number">21</literal> <operator>+</operator><literal type="number">119</literal></expr><operator>,</operator><expr><literal type="number">20</literal> @@ <specifier>public</specifier> <name>class</name> <name>ExtractReuters</name> <block>{
       <expr><call><name>usage</name><argument_list>(<argument><expr><literal type="string">"Wrong number of arguments ("</literal><operator>+</operator><name><name>args</name><operator>.</operator><name>length</name></name><operator>+</operator><literal type="string">")"</literal></expr></argument>)</argument_list></call></expr>;</block></expr></expr_stmt>
       <return>return;</return>
     </block_content>}</block></for>
    <decl_stmt><decl><type><name>File</name></type> <name>reutersDir</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name><name>args</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>reutersDir</name><operator>.</operator><name>exists</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
    <decl_stmt><decl><type><name>Path</name></type> <name>reutersDir</name> <init>= <expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>args</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>Files</name><operator>.</operator><name>exists</name></name><argument_list>(<argument><expr><name>reutersDir</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><call><name>usage</name><argument_list>(<argument><expr><literal type="string">"Cannot find Path to Reuters SGM files ("</literal><operator>+</operator><name>reutersDir</name><operator>+</operator><literal type="string">")"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <return>return;</return>
     </block_content>}</block></if></if_stmt>
     
     <comment type="line">// First, extract to a tmp directory and only if everything succeeds, rename</comment>
     <comment type="line">// to output directory.</comment>
    <decl_stmt><decl><type><name>File</name></type> <name>outputDir</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name><name>args</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>outputDir</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name><name>outputDir</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"-tmp"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>outputDir</name><operator>.</operator><name>mkdirs</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>outputDir</name> <init>= <expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>args</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>+</operator> <literal type="string">"-tmp"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>createDirectories</name></name><argument_list>(<argument><expr><name>outputDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>ExtractReuters</name></type> <name>extractor</name> <init>= <expr><operator>new</operator> <call><name>ExtractReuters</name><argument_list>(<argument><expr><name>reutersDir</name></expr></argument>, <argument><expr><name>outputDir</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>extractor</name><operator>.</operator><name>extract</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <comment type="line">// Now rename to requested output dir</comment>
    <expr_stmt><expr><call><name><name>outputDir</name><operator>.</operator><name>renameTo</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name><name>args</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>move</name></name><argument_list>(<argument><expr><name>outputDir</name></expr></argument>, <argument><expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>args</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>StandardCopyOption</name><operator>.</operator><name>ATOMIC_MOVE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></if></if_stmt>
 
   <function><type><specifier>private</specifier> <specifier>static</specifier> <name>void</name></type> <name>usage</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>msg</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>utils</name><operator>/</operator><name><name>ExtractWikipedia</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>utils</name><operator>/</operator><name><name>ExtractWikipedia</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">66ec9d0e1aa</literal><operator>..</operator><name>e85656a0357</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>utils</name><operator>/</operator><name><name>ExtractWikipedia</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>utils</name><operator>/</operator><name><name>ExtractWikipedia</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>benchmark</name><operator>.</operator><name>utils</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileOutputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>OutputStreamWriter</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>Writer</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>StandardCharsets</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Paths</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Properties</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>benchmark</name><operator>.</operator><name>byTask</name><operator>.</operator><name>feeds</name><operator>.</operator><name>ContentSource</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">32</literal></expr><operator>,</operator><expr><literal type="number">30</literal> <operator>+</operator><literal type="number">31</literal></expr><operator>,</operator><expr><literal type="number">28</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>benchmark</name><operator>.</operator><name>byTask</name><operator>.</operator><name>feeds</name><operator>.</operator><name>EnwikiContentSource</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>benchmark</name><operator>.</operator><name>byTask</name><operator>.</operator><name>feeds</name><operator>.</operator><name>NoMoreDataException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>benchmark</name><operator>.</operator><name>byTask</name><operator>.</operator><name>utils</name><operator>.</operator><name>Config</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Document</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>IOUtils</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
  * Extract the downloaded Wikipedia dump into separate files for indexing.
  */</comment>
 <class><specifier>public</specifier> class <name>ExtractWikipedia</name> <block>{
 
  <decl_stmt><decl><type><specifier>private</specifier> <name>File</name></type> <name>outputDir</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>Path</name></type> <name>outputDir</name></decl>;</decl_stmt>
 
   <decl_stmt><decl><type><specifier>static</specifier> <specifier>public</specifier> <name>int</name></type> <name>count</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
 
   <decl_stmt><decl><type><specifier>static</specifier> <specifier>final</specifier> <name>int</name></type> <name>BASE</name> <init>= <expr><literal type="number">10</literal></expr></init></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>protected</specifier> <name>DocMaker</name></type> <name>docMaker</name></decl>;</decl_stmt>
 
  <constructor><specifier>public</specifier> <name>ExtractWikipedia</name><parameter_list>(<parameter><decl><type><name>DocMaker</name></type> <name>docMaker</name></decl></parameter>, <parameter><decl><type><name>File</name></type> <name>outputDir</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
  <constructor><specifier>public</specifier> <name>ExtractWikipedia</name><parameter_list>(<parameter><decl><type><name>DocMaker</name></type> <name>docMaker</name></decl></parameter>, <parameter><decl><type><name>Path</name></type> <name>outputDir</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
     <expr_stmt><expr><name><name>this</name><operator>.</operator><name>outputDir</name></name> <operator>=</operator> <name>outputDir</name></expr>;</expr_stmt>
     <expr_stmt><expr><name><name>this</name><operator>.</operator><name>docMaker</name></name> <operator>=</operator> <name>docMaker</name></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"Deleting all files in "</literal> <operator>+</operator> <name>outputDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name><name>File</name><index>[]</index></name></type> <name>files</name> <init>= <expr><call><name><name>outputDir</name><operator>.</operator><name>listFiles</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>files</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
      <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>delete</name></name><argument_list>(<argument><expr><name><name>files</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>toPath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt><expr><call><name><name>IOUtils</name><operator>.</operator><name>rm</name></name><argument_list>(<argument><expr><name>outputDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></constructor>
 
  <function><type><specifier>public</specifier> <name>File</name></type> <name>directory</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>count</name></decl></parameter>, <parameter><decl><type><name>File</name></type> <name>directory</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <function><type><specifier>public</specifier> <name>Path</name></type> <name>directory</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>count</name></decl></parameter>, <parameter><decl><type><name>Path</name></type> <name>directory</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <if_stmt><if>if <condition>(<expr><name>directory</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><name>directory</name> <operator>=</operator> <name>outputDir</name></expr>;</expr_stmt>
     </block_content>}</block></if></if_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">66</literal></expr><operator>,</operator><expr><literal type="number">16</literal> <operator>+</operator><literal type="number">63</literal></expr><operator>,</operator><expr><literal type="number">16</literal> @@ <specifier>public</specifier> <name>class</name> <name>ExtractWikipedia</name> <block>{
     <if_stmt><if>if <condition>(<expr><name>count</name> <operator>&lt;</operator> <name>BASE</name></expr>)</condition> <block>{<block_content>
       <return>return <expr><name>directory</name></expr>;</return>
     </block_content>}</block></if></if_stmt>
    <name>directory</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>directory</name></expr></argument>, <argument><expr><operator>(</operator><call><name><name>Integer</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><name>base</name> <operator>/</operator> <name>BASE</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><name>directory</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>directory</name></expr></argument>, <argument><expr><operator>(</operator><call><name><name>Integer</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><name>count</name> <operator>/</operator> <operator>(</operator><name>base</name> <operator>/</operator> <name>BASE</name><operator>)</operator></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>directory</name> <operator>=</operator> <call><name><name>directory</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><call><name><name>Integer</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><name>base</name> <operator>/</operator> <name>BASE</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>directory</name> <operator>=</operator> <call><name><name>directory</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><call><name><name>Integer</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><name>count</name> <operator>/</operator> <operator>(</operator><name>base</name> <operator>/</operator> <name>BASE</name><operator>)</operator></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <return>return <expr><call><name>directory</name><argument_list>(<argument><expr><name>count</name> <operator>%</operator> <operator>(</operator><name>base</name> <operator>/</operator> <name>BASE</name><operator>)</operator></expr></argument>, <argument><expr><name>directory</name></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
 
  <function><type><specifier>public</specifier> <name>void</name></type> <name>create</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>id</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>title</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>time</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>body</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <function><type><specifier>public</specifier> <name>void</name></type> <name>create</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>id</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>title</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>time</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>body</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
 
    <decl_stmt><decl><type><name>File</name></type> <name>d</name> <init>= <expr><call><name>directory</name><argument_list>(<argument><expr><name>count</name><operator>++</operator></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>d</name><operator>.</operator><name>mkdirs</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>f</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name>id</name> <operator>+</operator> <literal type="string">".txt"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>d</name> <init>= <expr><call><name>directory</name><argument_list>(<argument><expr><name>count</name><operator>++</operator></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>createDirectories</name></name><argument_list>(<argument><expr><name>d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>f</name> <init>= <expr><call><name><name>d</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><name>id</name> <operator>+</operator> <literal type="string">".txt"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <decl_stmt><decl><type><name>StringBuilder</name></type> <name>contents</name> <init>= <expr><operator>new</operator> <call><name>StringBuilder</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">86</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">83</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>ExtractWikipedia</name> <block>{
     <expr><call><name><name>contents</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><name>body</name></expr></argument>)</argument_list></call></expr>;
     <call><name><name>contents</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><literal type="string">"\n"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
 
    <try>try <block>{<block_content>
      <decl_stmt><decl><type><name>Writer</name></type> <name>writer</name> <init>= <expr><operator>new</operator> <call><name>OutputStreamWriter</name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileOutputStream</name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <try>try <init>(<decl><type><name>Writer</name></type> <name>writer</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>newBufferedWriter</name></name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
       <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>write</name></name><argument_list>(<argument><expr><call><name><name>contents</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>ioe</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(<argument><expr><name>ioe</name></expr></argument>)</argument_list></call></expr>;</throw>
     </block_content>}</block></catch></try>

   </block_content>}</block></try>
 
   <function><type><specifier>public</specifier> <name>void</name></type> <name>extract</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">114</literal></expr><operator>,</operator><expr><literal type="number">16</literal> <operator>+</operator><literal type="number">106</literal></expr><operator>,</operator><expr><literal type="number">16</literal> @@ <specifier>public</specifier> <name>class</name> <name>ExtractWikipedia</name> <block>{
 
   <expr><specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>main</name><argument_list>(<argument><expr><name><name>String</name><index>[]</index></name> <name>args</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
 
    <expr><name>File</name> <name>wikipedia</name> <operator>=</operator> <literal type="null">null</literal></expr></block></expr></argument></throws></expr>;
    <name>File</name> <name>outputDir</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><literal type="string">"./enwiki"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>wikipedia</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>outputDir</name> <init>= <expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"enwiki"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>boolean</name></type> <name>keepImageOnlyDocs</name> <init>= <expr><literal type="boolean">true</literal></expr></init></decl>;</decl_stmt>
     <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>args</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
       <decl_stmt><decl><type><name>String</name></type> <name>arg</name> <init>= <expr><name><name>args</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
       <if_stmt><if>if <condition>(<expr><call><name><name>arg</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><literal type="string">"--input"</literal></expr></argument>)</argument_list></call> <operator>||</operator> <call><name><name>arg</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><literal type="string">"-i"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>wikipedia</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name><name>args</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>wikipedia</name> <operator>=</operator> <call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>args</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><name>i</name><operator>++</operator></expr>;</expr_stmt>
       </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><call><name><name>arg</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><literal type="string">"--output"</literal></expr></argument>)</argument_list></call> <operator>||</operator> <call><name><name>arg</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><literal type="string">"-o"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>outputDir</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name><name>args</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>outputDir</name> <operator>=</operator> <call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>args</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><name>i</name><operator>++</operator></expr>;</expr_stmt>
       </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><call><name><name>arg</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><literal type="string">"--discardImageOnlyDocs"</literal></expr></argument>)</argument_list></call> <operator>||</operator> <call><name><name>arg</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><literal type="string">"-d"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
         <expr_stmt><expr><name>keepImageOnlyDocs</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">131</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">123</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ExtractWikipedia</name> <block>{
     }</block>
     
     <name>Properties</name> <name>properties</name> <operator>=</operator> <operator>new</operator> <call><name>Properties</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>properties</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"docs.file"</literal></expr></argument>, <argument><expr><call><name><name>wikipedia</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>properties</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"docs.file"</literal></expr></argument>, <argument><expr><call><name><name>wikipedia</name><operator>.</operator><name>toAbsolutePath</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>properties</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"content.source.forever"</literal></expr></argument>, <argument><expr><literal type="string">"false"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>properties</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"keep.image.only.docs"</literal></expr></argument>, <argument><expr><call><name><name>String</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><name>keepImageOnlyDocs</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>Config</name></type> <name>config</name> <init>= <expr><operator>new</operator> <call><name>Config</name><argument_list>(<argument><expr><name>properties</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">142</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">134</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>ExtractWikipedia</name> <block>{
     <expr><name>DocMaker</name> <name>docMaker</name> <operator>=</operator> <operator>new</operator> <call><name>DocMaker</name><argument_list>()</argument_list></call></expr>;
     <call><name><name>docMaker</name><operator>.</operator><name>setConfig</name></name><argument_list>(<argument><expr><name>config</name></expr></argument>, <argument><expr><name>source</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>docMaker</name><operator>.</operator><name>resetInputs</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><call><name><name>wikipedia</name><operator>.</operator><name>exists</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><call><name><name>Files</name><operator>.</operator><name>exists</name></name><argument_list>(<argument><expr><name>wikipedia</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"Extracting Wikipedia to: "</literal> <operator>+</operator> <name>outputDir</name> <operator>+</operator> <literal type="string">" using EnwikiContentSource"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>outputDir</name><operator>.</operator><name>mkdirs</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>createDirectories</name></name><argument_list>(<argument><expr><name>outputDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <decl_stmt><decl><type><name>ExtractWikipedia</name></type> <name>extractor</name> <init>= <expr><operator>new</operator> <call><name>ExtractWikipedia</name><argument_list>(<argument><expr><name>docMaker</name></expr></argument>, <argument><expr><name>outputDir</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>extractor</name><operator>.</operator><name>extract</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name><name>BenchmarkTestCase</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name><name>BenchmarkTestCase</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">0b840e32bd7</literal><operator>..</operator><literal type="number">65b4a762600</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name><name>BenchmarkTestCase</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name><name>BenchmarkTestCase</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>benchmark</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileOutputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>OutputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>StringReader</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>benchmark</name><operator>.</operator><name>byTask</name><operator>.</operator><name>Benchmark</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>LuceneTestCase</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">33</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">32</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>BeforeClass</name></name>;</import>
 <comment type="block" format="javadoc">/** Base class for all Benchmark unit tests. */</comment>
 <class><annotation>@<name>SuppressSysoutChecks</name><argument_list>(<argument><expr><name>bugUrl</name> <operator>=</operator> <literal type="string">"very noisy"</literal></expr></argument>)</argument_list></annotation>
 <specifier>public</specifier> <specifier>abstract</specifier> class <name>BenchmarkTestCase</name> <super_list><extends>extends <super><name>LuceneTestCase</name></super></extends></super_list> <block>{
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>File</name></type> <name>WORKDIR</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>Path</name></type> <name>WORKDIR</name></decl>;</decl_stmt>
   
   <function><annotation>@<name>BeforeClass</name></annotation>
   <type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>beforeClassBenchmarkTestCase</name><parameter_list>()</parameter_list> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">45</literal></expr><operator>,</operator><expr><literal type="number">33</literal> <operator>+</operator><literal type="number">44</literal></expr><operator>,</operator><expr><literal type="number">27</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>BenchmarkTestCase</name> extends <name>LuceneTestCase</name> <block>{
     <expr><name>WORKDIR</name> <operator>=</operator> <literal type="null">null</literal></expr>;
   }</block></expr></expr_stmt>
   
  <function><type><specifier>public</specifier> <name>File</name></type> <name>getWorkDir</name><parameter_list>()</parameter_list> <block>{<block_content>
  <function><type><specifier>public</specifier> <name>Path</name></type> <name>getWorkDir</name><parameter_list>()</parameter_list> <block>{<block_content>
     <return>return <expr><name>WORKDIR</name></expr>;</return>
   </block_content>}</block></function>
   
   <comment type="block" format="javadoc">/** Copy a resource into the workdir */</comment>
   <function><type><specifier>public</specifier> <name>void</name></type> <name>copyToWorkDir</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>resourceName</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>InputStream</name></type> <name>resource</name> <init>= <expr><call><name>getClass</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getResourceAsStream</name><argument_list>(<argument><expr><name>resourceName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>OutputStream</name></type> <name>dest</name> <init>= <expr><operator>new</operator> <call><name>FileOutputStream</name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>getWorkDir</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>resourceName</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>byte</name><index>[]</index></name></type> <name>buffer</name> <init>= <expr><operator>new</operator> <name><name>byte</name><index>[<expr><literal type="number">8192</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>len</name></decl>;</decl_stmt>
    
    <while>while <condition>(<expr><operator>(</operator><name>len</name> <operator>=</operator> <call><name><name>resource</name><operator>.</operator><name>read</name></name><argument_list>(<argument><expr><name>buffer</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>dest</name><operator>.</operator><name>write</name></name><argument_list>(<argument><expr><name>buffer</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>target</name> <init>= <expr><call><name>getWorkDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>resolve</name><argument_list>(<argument><expr><name>resourceName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>deleteIfExists</name></name><argument_list>(<argument><expr><name>target</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <try>try <init>(<decl><type><name>InputStream</name></type> <name>resource</name> <init>= <expr><call><name>getClass</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getResourceAsStream</name><argument_list>(<argument><expr><name>resourceName</name></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
      <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>copy</name></name><argument_list>(<argument><expr><name>resource</name></expr></argument>, <argument><expr><name>target</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></try>

    <expr_stmt><expr><call><name><name>resource</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>dest</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></while>
   
   <comment type="block" format="javadoc">/** Return a path, suitable for a .alg config file, for a resource in the workdir */</comment>
   <function><type><specifier>public</specifier> <name>String</name></type> <name>getWorkDirResourcePath</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>resourceName</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <return>return <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>getWorkDir</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>resourceName</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call><operator>.</operator><call><name>replace</name><argument_list>(<argument><expr><literal type="string">"\\"</literal></expr></argument>, <argument><expr><literal type="string">"/"</literal></expr></argument>)</argument_list></call></expr>;</return>
    <return>return <expr><call><name>getWorkDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>resolve</name><argument_list>(<argument><expr><name>resourceName</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toAbsolutePath</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call><operator>.</operator><call><name>replace</name><argument_list>(<argument><expr><literal type="string">"\\"</literal></expr></argument>, <argument><expr><literal type="string">"/"</literal></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
   
   <comment type="block" format="javadoc">/** Return a path, suitable for a .alg config file, for the workdir */</comment>
   <function><type><specifier>public</specifier> <name>String</name></type> <name>getWorkDirPath</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><call><name>getWorkDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call><operator>.</operator><call><name>replace</name><argument_list>(<argument><expr><literal type="string">"\\"</literal></expr></argument>, <argument><expr><literal type="string">"/"</literal></expr></argument>)</argument_list></call></expr>;</return>
    <return>return <expr><call><name>getWorkDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toAbsolutePath</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call><operator>.</operator><call><name>replace</name><argument_list>(<argument><expr><literal type="string">"\\"</literal></expr></argument>, <argument><expr><literal type="string">"/"</literal></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
   
   <comment type="line">// create the benchmark and execute it. </comment>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name><name>TestPerfTasksLogic</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name><name>TestPerfTasksLogic</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">9166237cec5</literal><operator>..</operator><name>fb8cf26360c</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name><name>TestPerfTasksLogic</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name><name>TestPerfTasksLogic</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@</expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>benchmark</name><operator>.</operator><name>byTask</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>BufferedReader</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileInputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStreamReader</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>StandardCharsets</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>text</name><operator>.</operator><name>Collator</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Locale</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">384</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">382</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestPerfTasksLogic</name> extends <name>BenchmarkTestCase</name> <block>{
    <expr><operator>*</operator> <name>Test</name> <name>WriteLineDoc</name> <name>and</name> <name><name>LineDocSource</name><operator>.</operator></name>
    *<operator>/</operator>
   <specifier>public</specifier> <name>void</name> <call><name>testLineDocFile</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>File</name> <name>lineFile</name> <operator>=</operator> <call><name>createTempFile</name><argument_list>(<argument><expr><literal type="string">"test.reuters.lines"</literal></expr></argument>, <argument><expr><literal type="string">".txt"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>Path</name> <name>lineFile</name> <operator>=</operator> <call><name>createTempFile</name><argument_list>(<argument><expr><literal type="string">"test.reuters.lines"</literal></expr></argument>, <argument><expr><literal type="string">".txt"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
 
     <comment type="line">// We will call WriteLineDocs this many times</comment>
     <decl_stmt><decl><type><specifier>final</specifier> <name>int</name></type> <name>NUM_TRY_DOCS</name> <init>= <expr><literal type="number">50</literal></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">394</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">392</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestPerfTasksLogic</name> extends <name>BenchmarkTestCase</name> <block>{
       <expr><literal type="string">"# ----- properties "</literal></expr>,
       <expr><literal type="string">"content.source=org.apache.lucene.benchmark.byTask.feeds.SingleDocSource"</literal></expr>,
       <expr><literal type="string">"content.source.forever=true"</literal></expr>,
      <expr><literal type="string">"line.file.out="</literal> <operator>+</operator> <call><name><name>lineFile</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>replace</name><argument_list>(<argument><expr><literal type="char">'\\'</literal></expr></argument>, <argument><expr><literal type="char">'/'</literal></expr></argument>)</argument_list></call></expr>,
      <expr><literal type="string">"line.file.out="</literal> <operator>+</operator> <call><name><name>lineFile</name><operator>.</operator><name>toAbsolutePath</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call><operator>.</operator><call><name>replace</name><argument_list>(<argument><expr><literal type="char">'\\'</literal></expr></argument>, <argument><expr><literal type="char">'/'</literal></expr></argument>)</argument_list></call></expr>,
       <expr><literal type="string">"# ----- alg "</literal></expr>,
       <expr><literal type="string">"{WriteLineDoc()}:"</literal> <operator>+</operator> <name>NUM_TRY_DOCS</name></expr>,
     }</block></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">402</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">400</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestPerfTasksLogic</name> extends <name>BenchmarkTestCase</name> <block>{
     <comment type="line">// Run algo</comment>
     <expr><name>Benchmark</name> <name>benchmark</name> <operator>=</operator> <call><name>execBenchmark</name><argument_list>(<argument><expr><name>algLines1</name></expr></argument>)</argument_list></call></expr>;
 
    <name>BufferedReader</name> <name>r</name> <operator>=</operator> <operator>new</operator> <call><name>BufferedReader</name><argument_list>(
        <argument><expr><operator>new</operator> <call><name>InputStreamReader</name><argument_list>(
            <argument><expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>lineFile</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>BufferedReader</name></type> <name>r</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>newBufferedReader</name></name><argument_list>(<argument><expr><name>lineFile</name></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>int</name></type> <name>numLines</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>String</name></type> <name>line</name></decl>;</decl_stmt>
     <while>while<condition>(<expr><operator>(</operator><name>line</name> <operator>=</operator> <call><name><name>r</name><operator>.</operator><name>readLine</name></name><argument_list>()</argument_list></call><operator>)</operator> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">421</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">417</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestPerfTasksLogic</name> extends <name>BenchmarkTestCase</name> <block>{
       <expr><literal type="string">"# ----- properties "</literal></expr>,
       <expr><literal type="string">"analyzer=org.apache.lucene.analysis.core.WhitespaceAnalyzer"</literal></expr>,
       <expr><literal type="string">"content.source=org.apache.lucene.benchmark.byTask.feeds.LineDocSource"</literal></expr>,
      <expr><literal type="string">"docs.file="</literal> <operator>+</operator> <call><name><name>lineFile</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>replace</name><argument_list>(<argument><expr><literal type="char">'\\'</literal></expr></argument>, <argument><expr><literal type="char">'/'</literal></expr></argument>)</argument_list></call></expr>,
      <expr><literal type="string">"docs.file="</literal> <operator>+</operator> <call><name><name>lineFile</name><operator>.</operator><name>toAbsolutePath</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call><operator>.</operator><call><name>replace</name><argument_list>(<argument><expr><literal type="char">'\\'</literal></expr></argument>, <argument><expr><literal type="char">'/'</literal></expr></argument>)</argument_list></call></expr>,
       <expr><literal type="string">"content.source.forever=false"</literal></expr>,
       <expr><literal type="string">"doc.reuse.fields=false"</literal></expr>,
       <expr><literal type="string">"ram.flush.mb=4"</literal></expr>,
@@ <expr><operator>-</operator><literal type="number">445</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">441</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestPerfTasksLogic</name> extends <name>BenchmarkTestCase</name> <block>{
     <expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>numLines</name> <operator>+</operator> <literal type="string">" lines were created but "</literal> <operator>+</operator> <call><name><name>ir</name><operator>.</operator><name>numDocs</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">" docs are in the index"</literal></expr></argument>, <argument><expr><name>numLines</name></expr></argument>, <argument><expr><call><name><name>ir</name><operator>.</operator><name>numDocs</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <call><name><name>ir</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></block></expr>;
 
    <call><name><name>Files</name><operator>.</operator><name>delete</name></name><argument_list>(<argument><expr><call><name><name>lineFile</name><operator>.</operator><name>toPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>delete</name></name><argument_list>(<argument><expr><name>lineFile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></while>
   
   <comment type="block" format="javadoc">/**
@@ -1064,7 +1060,7 @@ public class TestPerfTasksLogic extends BenchmarkTestCase {
     String algLines[] = {
         "content.source=org.apache.lucene.benchmark.byTask.feeds.LineDocSource",
         "docs.file=" + getReuters20LinesFile(),
        "work.dir=" + getWorkDir().getAbsolutePath().replaceAll("\\\\", "/"), // Fix Windows path
        "work.dir=" + getWorkDir().toAbsolutePath().toString().replaceAll("\\\\", "/"), // Fix Windows path
         "content.source.forever=false",
         "directory=RAMDirectory",
         "AnalyzerFactory(name:'" + singleQuoteEscapedName + "', " + params + ")",
diff --git a/lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksParse.java b/lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksParse.java
index dfca802b3cc..6aefbc88edd 100644
-- a/lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksParse.java
++ b/lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksParse.java
@@ -17,13 +17,13 @@
 
 package org.apache.lucene.benchmark.byTask;
 
import java.io.File;
import java.io.FileFilter;
import java.io.FileInputStream;
 import java.io.IOException;
import java.io.InputStreamReader;
 import java.io.StringReader;
 import java.nio.charset.StandardCharsets;
import java.nio.file.DirectoryStream;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
 import java.util.ArrayList;
 
 import org.apache.lucene.benchmark.byTask.feeds.AbstractQueryMaker;
@@ -114,22 +114,19 @@ public class TestPerfTasksParse extends LuceneTestCase {
   public void testParseExamples() throws Exception {
     // hackedy-hack-hack
     boolean foundFiles = false;
    final File examplesDir = new File(ConfLoader.class.getResource(".").toURI());
    for (File algFile : examplesDir.listFiles(new FileFilter() {
      @Override
      public boolean accept(File pathname) { return pathname.isFile() &amp;&amp; pathname.getName().endsWith(".alg"); }
    })) {
      try {
        Config config = new Config(new InputStreamReader(new FileInputStream(algFile), StandardCharsets.UTF_8));
    final Path examplesDir = Paths.get(ConfLoader.class.getResource(".").toURI());
    try (DirectoryStream&lt;Path&gt; stream = Files.newDirectoryStream(examplesDir, "*.alg")) {
      for (Path path : stream) {
        Config config = new Config(Files.newBufferedReader(path, StandardCharsets.UTF_8));
         String contentSource = config.get("content.source", null);
         if (contentSource != null) { Class.forName(contentSource); }
        config.set("work.dir", createTempDir(LuceneTestCase.getTestClass().getSimpleName()).getAbsolutePath());
        config.set("work.dir", createTempDir(LuceneTestCase.getTestClass().getSimpleName()).toAbsolutePath().toString());
         config.set("content.source", MockContentSource.class.getName());
         String dir = config.get("content.source", null);
         if (dir != null) { Class.forName(dir); }
         config.set("directory", RAMDirectory.class.getName());
         if (config.get("line.file.out", null) != null) {
          config.set("line.file.out", createTempFile("linefile", ".txt").getAbsolutePath());
          config.set("line.file.out", createTempFile("linefile", ".txt").toAbsolutePath().toString());
         }
         if (config.get("query.maker", null) != null) {
           Class.forName(config.get("query.maker", null));
@@ -137,14 +134,11 @@ public class TestPerfTasksParse extends LuceneTestCase {
         }
         PerfRunData data = new PerfRunData(config);
         new Algorithm(data);
      } catch (Throwable t) {
        throw new AssertionError("Could not parse sample file: " + algFile, t);
        foundFiles = true;
       }
      foundFiles = true;
     }
     if (!foundFiles) {
       fail("could not find any .alg files!");
     }
   }

 }
diff --git a/lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/DocMakerTest.java b/lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/DocMakerTest.java
index dcff96f8e24..0d7292e39ee 100644
-- a/lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/DocMakerTest.java
++ b/lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/DocMakerTest.java
@@ -17,8 +17,9 @@ package org.apache.lucene.benchmark.byTask.feeds;
  * limitations under the License.
  */</comment>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>PrintStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Properties</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>core</name><operator>.</operator><name>WhitespaceAnalyzer</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">166</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">167</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>DocMakerTest</name> extends <name>BenchmarkTestCase</name> <block>{
   <expr><specifier>public</specifier> <name>void</name> <call><name>testDocMakerLeak</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <comment type="line">// DocMaker did not close its ContentSource if resetInputs was called twice,</comment>
     <comment type="line">// leading to a file handle leak.</comment>
    <expr><name>File</name> <name>f</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>getWorkDir</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"docMakerLeak.txt"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>PrintStream</name> <name>ps</name> <operator>=</operator> <operator>new</operator> <call><name>PrintStream</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><name><name>IOUtils</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>f</name> <init>= <expr><call><name>getWorkDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>resolve</name><argument_list>(<argument><expr><literal type="string">"docMakerLeak.txt"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>PrintStream</name></type> <name>ps</name> <init>= <expr><operator>new</operator> <call><name>PrintStream</name><argument_list>(<argument><expr><call><name><name>Files</name><operator>.</operator><name>newOutputStream</name></name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><name><name>IOUtils</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>ps</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"one title\t"</literal> <operator>+</operator> <call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"\tsome content"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>ps</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     
     <decl_stmt><decl><type><name>Properties</name></type> <name>props</name> <init>= <expr><operator>new</operator> <call><name>Properties</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>props</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"docs.file"</literal></expr></argument>, <argument><expr><call><name><name>f</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>props</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"docs.file"</literal></expr></argument>, <argument><expr><call><name><name>f</name><operator>.</operator><name>toAbsolutePath</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>props</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"content.source.forever"</literal></expr></argument>, <argument><expr><literal type="string">"false"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>Config</name></type> <name>config</name> <init>= <expr><operator>new</operator> <call><name>Config</name><argument_list>(<argument><expr><name>props</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>feeds</name><operator>/</operator><name><name>LineDocSourceTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>feeds</name><operator>/</operator><name><name>LineDocSourceTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">9b6bfd11b13</literal><operator>..</operator><name>cce2f68b4c9</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>feeds</name><operator>/</operator><name><name>LineDocSourceTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>feeds</name><operator>/</operator><name><name>LineDocSourceTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>benchmark</name><operator>.</operator><name>byTask</name><operator>.</operator><name>feeds</name></name>;</package>
  <expr_stmt><expr><operator>*</operator><operator>/</operator></expr></expr_stmt>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>BufferedWriter</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileOutputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>OutputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>OutputStreamWriter</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>StandardCharsets</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Properties</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>compress</name><operator>.</operator><name>compressors</name><operator>.</operator><name>CompressorStreamFactory</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">51</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">51</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>LineDocSourceTest</name> extends <name>BenchmarkTestCase</name> <block>{
 
   <expr><specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name>CompressorStreamFactory</name> <name>csFactory</name> <operator>=</operator> <operator>new</operator> <call><name>CompressorStreamFactory</name><argument_list>()</argument_list></call></expr>;
 
  <specifier>private</specifier> <name>void</name> <call><name>createBZ2LineFile</name><argument_list>(<argument><expr><name>File</name> <name>file</name></expr></argument>, <argument><expr><name>boolean</name> <name>addHeader</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>OutputStream</name> <name>out</name> <operator>=</operator> <operator>new</operator> <call><name>FileOutputStream</name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></block></expr>;</expr_stmt>
  <function><type><specifier>private</specifier> <name>void</name></type> <name>createBZ2LineFile</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>file</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>addHeader</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>OutputStream</name></type> <name>out</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>newOutputStream</name></name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><name>out</name> <operator>=</operator> <call><name><name>csFactory</name><operator>.</operator><name>createCompressorOutputStream</name></name><argument_list>(<argument><expr><literal type="string">"bzip2"</literal></expr></argument>, <argument><expr><name>out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>BufferedWriter</name></type> <name>writer</name> <init>= <expr><operator>new</operator> <call><name>BufferedWriter</name><argument_list>(<argument><expr><operator>new</operator> <call><name>OutputStreamWriter</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>writeDocsToFile</name><argument_list>(<argument><expr><name>writer</name></expr></argument>, <argument><expr><name>addHeader</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">89</literal></expr><operator>,</operator><expr><literal type="number">15</literal> <operator>+</operator><literal type="number">89</literal></expr><operator>,</operator><expr><literal type="number">15</literal> @@ <specifier>public</specifier> <name>class</name> <name>LineDocSourceTest</name> extends <name>BenchmarkTestCase</name> <block>{
     <expr><call><name><name>writer</name><operator>.</operator><name>newLine</name></name><argument_list>()</argument_list></call></expr>;
   }</block></expr></expr_stmt>
 
  <function><type><specifier>private</specifier> <name>void</name></type> <name>createRegularLineFile</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>file</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>addHeader</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>OutputStream</name></type> <name>out</name> <init>= <expr><operator>new</operator> <call><name>FileOutputStream</name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <function><type><specifier>private</specifier> <name>void</name></type> <name>createRegularLineFile</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>file</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>addHeader</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>OutputStream</name></type> <name>out</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>newOutputStream</name></name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>BufferedWriter</name></type> <name>writer</name> <init>= <expr><operator>new</operator> <call><name>BufferedWriter</name><argument_list>(<argument><expr><operator>new</operator> <call><name>OutputStreamWriter</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>writeDocsToFile</name><argument_list>(<argument><expr><name>writer</name></expr></argument>, <argument><expr><name>addHeader</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
 
  <function><type><specifier>private</specifier> <name>void</name></type> <name>createRegularLineFileWithMoreFields</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>file</name></decl></parameter>, <parameter><decl><type><name>String</name><modifier>...</modifier></type><name>extraFields</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>OutputStream</name></type> <name>out</name> <init>= <expr><operator>new</operator> <call><name>FileOutputStream</name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <function><type><specifier>private</specifier> <name>void</name></type> <name>createRegularLineFileWithMoreFields</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>file</name></decl></parameter>, <parameter><decl><type><name>String</name><modifier>...</modifier></type><name>extraFields</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>OutputStream</name></type> <name>out</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>newOutputStream</name></name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>BufferedWriter</name></type> <name>writer</name> <init>= <expr><operator>new</operator> <call><name>BufferedWriter</name><argument_list>(<argument><expr><operator>new</operator> <call><name>OutputStreamWriter</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>Properties</name></type> <name>p</name> <init>= <expr><operator>new</operator> <call><name>Properties</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <for>for <control>(<init><decl><type><name>String</name></type> <name>f</name> <range>: <expr><name>extraFields</name></expr></range></decl></init>)</control> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">107</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">107</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>LineDocSourceTest</name> extends <name>BenchmarkTestCase</name> <block>{
     <expr><call><name><name>writer</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;
   }</block></expr></expr_stmt>
   
  <function><type><specifier>private</specifier> <name>void</name></type> <name>doIndexAndSearchTest</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>file</name></decl></parameter>, <parameter><decl><type><name><name>Class</name><argument_list type="generic">&lt;<argument><name>?</name> <extends>extends <name>LineParser</name></extends></argument>&gt;</argument_list></name></type> <name>lineParserClass</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>storedField</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
  <function><type><specifier>private</specifier> <name>void</name></type> <name>doIndexAndSearchTest</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>file</name></decl></parameter>, <parameter><decl><type><name><name>Class</name><argument_list type="generic">&lt;<argument><name>?</name> <extends>extends <name>LineParser</name></extends></argument>&gt;</argument_list></name></type> <name>lineParserClass</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>storedField</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
     <expr_stmt><expr><call><name>doIndexAndSearchTestWithRepeats</name><argument_list>(<argument><expr><name>file</name></expr></argument>, <argument><expr><name>lineParserClass</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>storedField</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// no extra repetitions</comment>
     <expr_stmt><expr><call><name>doIndexAndSearchTestWithRepeats</name><argument_list>(<argument><expr><name>file</name></expr></argument>, <argument><expr><name>lineParserClass</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name>storedField</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// 1 extra repetition</comment>
     <expr_stmt><expr><call><name>doIndexAndSearchTestWithRepeats</name><argument_list>(<argument><expr><name>file</name></expr></argument>, <argument><expr><name>lineParserClass</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>storedField</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// 3 extra repetitions</comment>
   </block_content>}</block></function>
   
  <decl_stmt><decl><type><specifier>private</specifier> <name>void</name></type> <name>doIndexAndSearchTestWithRepeats</name><argument_list>(<argument><expr><name>File</name> <name>file</name></expr></argument>, 
  <argument><expr><specifier>private</specifier> <name>void</name> <call><name>doIndexAndSearchTestWithRepeats</name><argument_list>(<argument><expr><name>Path</name> <name>file</name></expr></argument>, 
       <argument><expr><name><name>Class</name><argument_list type="generic">&lt;<argument><name>?</name> <extends>extends <name>LineParser</name></extends></argument>&gt;</argument_list></name> <name>lineParserClass</name></expr></argument>, <argument><expr><name>int</name> <name>numAdds</name></expr></argument>, <argument><expr><name>String</name> <name>storedField</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     
     <expr><name>IndexReader</name> <name>reader</name> <operator>=</operator> <literal type="null">null</literal></expr></block></expr></argument></throws></expr></argument>;</argument_list></decl></decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">123</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">123</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>LineDocSourceTest</name> extends <name>BenchmarkTestCase</name> <block>{
       <expr><name>Properties</name> <name>props</name> <operator>=</operator> <operator>new</operator> <call><name>Properties</name><argument_list>()</argument_list></call></expr>;
       
       <comment type="line">// LineDocSource specific settings.</comment>
      <call><name><name>props</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"docs.file"</literal></expr></argument>, <argument><expr><call><name><name>file</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>props</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"docs.file"</literal></expr></argument>, <argument><expr><call><name><name>file</name><operator>.</operator><name>toAbsolutePath</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <if_stmt><if>if <condition>(<expr><name>lineParserClass</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
         <expr_stmt><expr><call><name><name>props</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"line.parser"</literal></expr></argument>, <argument><expr><call><name><name>lineParserClass</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></if></if_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">169</literal></expr><operator>,</operator><expr><literal type="number">31</literal> <operator>+</operator><literal type="number">169</literal></expr><operator>,</operator><expr><literal type="number">31</literal> @@ <specifier>public</specifier> <name>class</name> <name>LineDocSourceTest</name> extends <name>BenchmarkTestCase</name> <block>{
   
   <comment type="block">/* Tests LineDocSource with a bzip2 input stream. */</comment>
   <expr><specifier>public</specifier> <name>void</name> <call><name>testBZip2</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>File</name> <name>file</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>getWorkDir</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"one-line.bz2"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>Path</name> <name>file</name> <operator>=</operator> <call><name>getWorkDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>resolve</name><argument_list>(<argument><expr><literal type="string">"one-line.bz2"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>createBZ2LineFile</name><argument_list>(<argument><expr><name>file</name></expr></argument>,<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>doIndexAndSearchTest</name><argument_list>(<argument><expr><name>file</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
 
   <function><type><specifier>public</specifier> <name>void</name></type> <name>testBZip2NoHeaderLine</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>File</name></type> <name>file</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>getWorkDir</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"one-line.bz2"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>file</name> <init>= <expr><call><name>getWorkDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>resolve</name><argument_list>(<argument><expr><literal type="string">"one-line.bz2"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>createBZ2LineFile</name><argument_list>(<argument><expr><name>file</name></expr></argument>,<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>doIndexAndSearchTest</name><argument_list>(<argument><expr><name>file</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
   
   <function><type><specifier>public</specifier> <name>void</name></type> <name>testRegularFile</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>File</name></type> <name>file</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>getWorkDir</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"one-line"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>file</name> <init>= <expr><call><name>getWorkDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>resolve</name><argument_list>(<argument><expr><literal type="string">"one-line"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>createRegularLineFile</name><argument_list>(<argument><expr><name>file</name></expr></argument>,<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>doIndexAndSearchTest</name><argument_list>(<argument><expr><name>file</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
 
   <function><type><specifier>public</specifier> <name>void</name></type> <name>testRegularFileSpecialHeader</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>File</name></type> <name>file</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>getWorkDir</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"one-line"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>file</name> <init>= <expr><call><name>getWorkDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>resolve</name><argument_list>(<argument><expr><literal type="string">"one-line"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>createRegularLineFile</name><argument_list>(<argument><expr><name>file</name></expr></argument>,<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>doIndexAndSearchTest</name><argument_list>(<argument><expr><name>file</name></expr></argument>, <argument><expr><name><name>HeaderLineParser</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
 
   <function><type><specifier>public</specifier> <name>void</name></type> <name>testRegularFileNoHeaderLine</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>File</name></type> <name>file</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>getWorkDir</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"one-line"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>file</name> <init>= <expr><call><name>getWorkDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>resolve</name><argument_list>(<argument><expr><literal type="string">"one-line"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>createRegularLineFile</name><argument_list>(<argument><expr><name>file</name></expr></argument>,<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>doIndexAndSearchTest</name><argument_list>(<argument><expr><name>file</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">209</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">209</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>LineDocSourceTest</name> extends <name>BenchmarkTestCase</name> <block>{
     }</block></expr>;</expr_stmt>
     
     <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>testCases</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
      <decl_stmt><decl><type><name>File</name></type> <name>file</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>getWorkDir</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"one-line"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>BufferedWriter</name></type> <name>writer</name> <init>= <expr><operator>new</operator> <call><name>BufferedWriter</name><argument_list>(<argument><expr><operator>new</operator> <call><name>OutputStreamWriter</name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileOutputStream</name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>Path</name></type> <name>file</name> <init>= <expr><call><name>getWorkDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>resolve</name><argument_list>(<argument><expr><literal type="string">"one-line"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>BufferedWriter</name></type> <name>writer</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>newBufferedWriter</name></name><argument_list>(<argument><expr><name>file</name></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>write</name></name><argument_list>(<argument><expr><name><name>testCases</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>newLine</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">225</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">225</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ <specifier>public</specifier> <name>class</name> <name>LineDocSourceTest</name> extends <name>BenchmarkTestCase</name> <block>{
   
   <comment type="block" format="javadoc">/** Doc Name is not part of the default header */</comment>
   <expr><specifier>public</specifier> <name>void</name> <call><name>testWithDocsName</name><argument_list>()</argument_list></call>  <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>File</name> <name>file</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>getWorkDir</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"one-line"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>Path</name> <name>file</name> <operator>=</operator> <call><name>getWorkDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>resolve</name><argument_list>(<argument><expr><literal type="string">"one-line"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>createRegularLineFileWithMoreFields</name><argument_list>(<argument><expr><name>file</name></expr></argument>, <argument><expr><name><name>DocMaker</name><operator>.</operator><name>NAME_FIELD</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>doIndexAndSearchTest</name><argument_list>(<argument><expr><name>file</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name><name>DocMaker</name><operator>.</operator><name>NAME_FIELD</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></for>
 
   <comment type="block" format="javadoc">/** Use fields names that are not defined in Docmaker and so will go to Properties */</comment>
   <function><type><specifier>public</specifier> <name>void</name></type> <name>testWithProperties</name><parameter_list>()</parameter_list>  <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>File</name></type> <name>file</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>getWorkDir</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"one-line"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>file</name> <init>= <expr><call><name>getWorkDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>resolve</name><argument_list>(<argument><expr><literal type="string">"one-line"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>String</name></type> <name>specialField</name> <init>= <expr><literal type="string">"mySpecialField"</literal></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>createRegularLineFileWithMoreFields</name><argument_list>(<argument><expr><name>file</name></expr></argument>, <argument><expr><name>specialField</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>doIndexAndSearchTest</name><argument_list>(<argument><expr><name>file</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>specialField</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>feeds</name><operator>/</operator><name><name>TrecContentSourceTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>feeds</name><operator>/</operator><name><name>TrecContentSourceTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">9fc2f4f55b6</literal><operator>..</operator><literal type="number">6a4162b3c0f</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>feeds</name><operator>/</operator><name><name>TrecContentSourceTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>feeds</name><operator>/</operator><name><name>TrecContentSourceTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>benchmark</name><operator>.</operator><name>byTask</name><operator>.</operator><name>feeds</name></name>;</package>
  <expr_stmt><expr><operator>*</operator><operator>/</operator></expr></expr_stmt>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>BufferedReader</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>StringReader</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>text</name><operator>.</operator><name>ParseException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Date</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">32</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">32</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>benchmark</name><operator>.</operator><name>byTask</name><operator>.</operator><name>utils</name><operator>.</operator><name>Config</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>DateTools</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>LuceneTestCase</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>TestUtil</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>TestUtil</name></name>;</import>
 
 <class><specifier>public</specifier> class <name>TrecContentSourceTest</name> <super_list><extends>extends <super><name>LuceneTestCase</name></super></extends></super_list> <block>{
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">344</literal></expr><operator>,</operator><expr><literal type="number">15</literal> <operator>+</operator><literal type="number">343</literal></expr><operator>,</operator><expr><literal type="number">15</literal> @@ <specifier>public</specifier> <name>class</name> <name>TrecContentSourceTest</name> extends <name>LuceneTestCase</name> <block>{
    <expr><operator>*</operator> <name>supported</name> <name>formats</name> <operator>-</operator> <name>bzip</name></expr>, <expr><name>gzip</name></expr>, <expr><name><name>txt</name><operator>.</operator></name> 
    *<operator>/</operator>
   <specifier>public</specifier> <name>void</name> <call><name>testTrecFeedDirAllTypes</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>File</name> <name>dataDir</name> <operator>=</operator>  <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"trecFeedAllTypes"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <call><name><name>TestUtil</name><operator>.</operator><name>unzip</name></name><argument_list>(<argument><expr><call><name>getDataFile</name><argument_list>(<argument><expr><literal type="string">"trecdocs.zip"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>dataDir</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>dataDir</name> <init>=  <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"trecFeedAllTypes"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>TestUtil</name><operator>.</operator><name>unzip</name></name><argument_list>(<argument><expr><call><name>getDataPath</name><argument_list>(<argument><expr><literal type="string">"trecdocs.zip"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>dataDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>TrecContentSource</name></type> <name>tcs</name> <init>= <expr><operator>new</operator> <call><name>TrecContentSource</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>Properties</name></type> <name>props</name> <init>= <expr><operator>new</operator> <call><name>Properties</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>props</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"print.props"</literal></expr></argument>, <argument><expr><literal type="string">"false"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>props</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"content.source.verbose"</literal></expr></argument>, <argument><expr><literal type="string">"false"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>props</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"content.source.excludeIteration"</literal></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>props</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"doc.maker.forever"</literal></expr></argument>, <argument><expr><literal type="string">"false"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>props</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"docs.dir"</literal></expr></argument>, <argument><expr><call><name><name>dataDir</name><operator>.</operator><name>getCanonicalPath</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>replace</name><argument_list>(<argument><expr><literal type="char">'\\'</literal></expr></argument>,<argument><expr><literal type="char">'/'</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
    <expr_stmt><expr><call><name><name>props</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"docs.dir"</literal></expr></argument>, <argument><expr><call><name><name>dataDir</name><operator>.</operator><name>toRealPath</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call><operator>.</operator><call><name>replace</name><argument_list>(<argument><expr><literal type="char">'\\'</literal></expr></argument>,<argument><expr><literal type="char">'/'</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
     <expr_stmt><expr><call><name><name>props</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"trec.doc.parser"</literal></expr></argument>, <argument><expr><call><name><name>TrecParserByPath</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>props</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"content.source.forever"</literal></expr></argument>, <argument><expr><literal type="string">"false"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>tcs</name><operator>.</operator><name>setConfig</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Config</name><argument_list>(<argument><expr><name>props</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>tasks</name><operator>/</operator><name><name>AddIndexesTaskTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>tasks</name><operator>/</operator><name><name>AddIndexesTaskTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">19f0d21a1cb</literal><operator>..</operator><name>d5a3114c141</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>tasks</name><operator>/</operator><name><name>AddIndexesTaskTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>tasks</name><operator>/</operator><name><name>AddIndexesTaskTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>benchmark</name><operator>.</operator><name>byTask</name><operator>.</operator><name>tasks</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Properties</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>benchmark</name><operator>.</operator><name>BenchmarkTestCase</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">36</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">36</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>BeforeClass</name></name>;</import>
 <comment type="block" format="javadoc">/** Tests the functionality of {@link AddIndexesTask}. */</comment>
 <class><specifier>public</specifier> class <name>AddIndexesTaskTest</name> <super_list><extends>extends <super><name>BenchmarkTestCase</name></super></extends></super_list> <block>{
 
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>File</name></type> <name>testDir</name></decl>, <decl><type ref="prev"/><name>inputDir</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>Path</name></type> <name>testDir</name></decl>, <decl><type ref="prev"/><name>inputDir</name></decl>;</decl_stmt>
   
   <function><annotation>@<name>BeforeClass</name></annotation>
   <type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>beforeClassAddIndexesTaskTest</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
     <expr_stmt><expr><name>testDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"addIndexesTask"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     
     <comment type="line">// create a dummy index under inputDir</comment>
    <expr_stmt><expr><name>inputDir</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>testDir</name></expr></argument>, <argument><expr><literal type="string">"input"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>inputDir</name> <operator>=</operator> <call><name><name>testDir</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><literal type="string">"input"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>Directory</name></type> <name>tmpDir</name> <init>= <expr><call><name>newFSDirectory</name><argument_list>(<argument><expr><name>inputDir</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <try>try <block>{<block_content>
       <decl_stmt><decl><type><name>IndexWriter</name></type> <name>writer</name> <init>= <expr><operator>new</operator> <call><name>IndexWriter</name><argument_list>(<argument><expr><name>tmpDir</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>IndexWriterConfig</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">61</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">61</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>AddIndexesTaskTest</name> extends <name>BenchmarkTestCase</name> <block>{
     <expr><call><name><name>props</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"writer.version"</literal></expr></argument>, <argument><expr><call><name><name>Version</name><operator>.</operator><name>LATEST</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <call><name><name>props</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"print.props"</literal></expr></argument>, <argument><expr><literal type="string">"false"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt> <comment type="line">// don't print anything</comment>
     <expr_stmt><expr><call><name><name>props</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"directory"</literal></expr></argument>, <argument><expr><literal type="string">"RAMDirectory"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>props</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><name><name>AddIndexesTask</name><operator>.</operator><name>ADDINDEXES_INPUT_DIR</name></name></expr></argument>, <argument><expr><call><name><name>inputDir</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>props</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><name><name>AddIndexesTask</name><operator>.</operator><name>ADDINDEXES_INPUT_DIR</name></name></expr></argument>, <argument><expr><call><name><name>inputDir</name><operator>.</operator><name>toAbsolutePath</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>Config</name></type> <name>config</name> <init>= <expr><operator>new</operator> <call><name>Config</name><argument_list>(<argument><expr><name>props</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <return>return <expr><operator>new</operator> <call><name>PerfRunData</name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></try>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>tasks</name><operator>/</operator><name><name>CreateIndexTaskTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>tasks</name><operator>/</operator><name><name>CreateIndexTaskTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">7950cbda5b5</literal><operator>..</operator><name>fc4230e9373</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>tasks</name><operator>/</operator><name><name>CreateIndexTaskTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>tasks</name><operator>/</operator><name><name>CreateIndexTaskTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>benchmark</name><operator>.</operator><name>byTask</name><operator>.</operator><name>tasks</name></name>;</package>
  <expr_stmt><expr><operator>*</operator><operator>/</operator></expr></expr_stmt>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>ByteArrayOutputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>PrintStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>Charset</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Properties</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>benchmark</name><operator>.</operator><name>BenchmarkTestCase</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">79</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">80</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>CreateIndexTaskTest</name> extends <name>BenchmarkTestCase</name> <block>{
 
   <expr><specifier>public</specifier> <name>void</name> <call><name>testInfoStream_File</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     
    <expr><name>File</name> <name>outFile</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>getWorkDir</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"infoStreamTest"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>PerfRunData</name> <name>runData</name> <operator>=</operator> <call><name>createPerfRunData</name><argument_list>(<argument><expr><call><name><name>outFile</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>outFile</name> <init>= <expr><call><name>getWorkDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>resolve</name><argument_list>(<argument><expr><literal type="string">"infoStreamTest"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>PerfRunData</name></type> <name>runData</name> <init>= <expr><call><name>createPerfRunData</name><argument_list>(<argument><expr><call><name><name>outFile</name><operator>.</operator><name>toAbsolutePath</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><operator>new</operator> <call><name>CreateIndexTask</name><argument_list>(<argument><expr><name>runData</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>doLogic</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><operator>new</operator> <call><name>CloseIndexTask</name><argument_list>(<argument><expr><name>runData</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>doLogic</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>outFile</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>Files</name><operator>.</operator><name>size</name></name><argument_list>(<argument><expr><name>outFile</name></expr></argument>)</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
 
   <function><type><specifier>public</specifier> <name>void</name></type> <name>testNoMergePolicy</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>tasks</name><operator>/</operator><name><name>WriteEnwikiLineDocTaskTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>tasks</name><operator>/</operator><name><name>WriteEnwikiLineDocTaskTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>d93fef2c7b0</name><operator>..</operator><name>ac8277c919a</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>tasks</name><operator>/</operator><name><name>WriteEnwikiLineDocTaskTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>tasks</name><operator>/</operator><name><name>WriteEnwikiLineDocTaskTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">23</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">23</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileInputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStreamReader</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>StandardCharsets</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Properties</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>atomic</name><operator>.</operator><name>AtomicInteger</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">56</literal></expr><operator>,</operator><expr><literal type="number">26</literal> <operator>+</operator><literal type="number">58</literal></expr><operator>,</operator><expr><literal type="number">24</literal> @@ <specifier>public</specifier> <name>class</name> <name>WriteEnwikiLineDocTaskTest</name> extends <name>BenchmarkTestCase</name> <block>{
     
   }</block>
   
  <specifier>private</specifier> <name>PerfRunData</name> <call><name>createPerfRunData</name><argument_list>(<argument><expr><name>File</name> <name>file</name></expr></argument>, <argument><expr><name>String</name> <name>docMakerName</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
  <expr><specifier>private</specifier> <name>PerfRunData</name> <call><name>createPerfRunData</name><argument_list>(<argument><expr><name>Path</name> <name>file</name></expr></argument>, <argument><expr><name>String</name> <name>docMakerName</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><name>Properties</name> <name>props</name> <operator>=</operator> <operator>new</operator> <call><name>Properties</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>props</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"doc.maker"</literal></expr></argument>, <argument><expr><name>docMakerName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>props</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"line.file.out"</literal></expr></argument>, <argument><expr><call><name><name>file</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>props</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"line.file.out"</literal></expr></argument>, <argument><expr><call><name><name>file</name><operator>.</operator><name>toAbsolutePath</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>props</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"directory"</literal></expr></argument>, <argument><expr><literal type="string">"RAMDirectory"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// no accidental FS dir.</comment>
     <decl_stmt><decl><type><name>Config</name></type> <name>config</name> <init>= <expr><operator>new</operator> <call><name>Config</name><argument_list>(<argument><expr><name>props</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <return>return <expr><operator>new</operator> <call><name>PerfRunData</name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
   
  <decl_stmt><decl><type><specifier>private</specifier> <name>void</name></type> <name>doReadTest</name><argument_list>(<argument><expr><name>File</name> <name>file</name></expr></argument>, <argument><expr><name>String</name> <name>expTitle</name></expr></argument>,
  <argument><expr><specifier>private</specifier> <name>void</name> <call><name>doReadTest</name><argument_list>(<argument><expr><name>Path</name> <name>file</name></expr></argument>, <argument><expr><name>String</name> <name>expTitle</name></expr></argument>,
                           <argument><expr><name>String</name> <name>expDate</name></expr></argument>, <argument><expr><name>String</name> <name>expBody</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><call><name>doReadTest</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name>file</name></expr></argument>, <argument><expr><name>expTitle</name></expr></argument>, <argument><expr><name>expDate</name></expr></argument>, <argument><expr><name>expBody</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr></argument>;</argument_list></decl></decl_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>categoriesFile</name> <init>= <expr><call><name><name>WriteEnwikiLineDocTask</name><operator>.</operator><name>categoriesLineFile</name></name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>categoriesFile</name> <init>= <expr><call><name><name>WriteEnwikiLineDocTask</name><operator>.</operator><name>categoriesLineFile</name></name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>doReadTest</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name>categoriesFile</name></expr></argument>, <argument><expr><literal type="string">"Category:"</literal><operator>+</operator><name>expTitle</name></expr></argument>, <argument><expr><name>expDate</name></expr></argument>, <argument><expr><name>expBody</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   }</block></class>
   
  <function><type><specifier>private</specifier> <name>void</name></type> <name>doReadTest</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>n</name></decl></parameter>, <parameter><decl><type><name>File</name></type> <name>file</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>expTitle</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>expDate</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>expBody</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>InputStream</name></type> <name>in</name> <init>= <expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>BufferedReader</name></type> <name>br</name> <init>= <expr><operator>new</operator> <call><name>BufferedReader</name><argument_list>(<argument><expr><operator>new</operator> <call><name>InputStreamReader</name><argument_list>(<argument><expr><name>in</name></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <try>try <block>{<block_content>
  <function><type><specifier>private</specifier> <name>void</name></type> <name>doReadTest</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>n</name></decl></parameter>, <parameter><decl><type><name>Path</name></type> <name>file</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>expTitle</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>expDate</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>expBody</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <try>try <init>(<decl><type><name>BufferedReader</name></type> <name>br</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>newBufferedReader</name></name><argument_list>(<argument><expr><name>file</name></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
       <decl_stmt><decl><type><name>String</name></type> <name>line</name> <init>= <expr><call><name><name>br</name><operator>.</operator><name>readLine</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>WriteLineDocTaskTest</name><operator>.</operator><name>assertHeaderLine</name></name><argument_list>(<argument><expr><name>line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">91</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">91</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>WriteEnwikiLineDocTaskTest</name> extends <name>BenchmarkTestCase</name> <block>{
         }</block></expr></expr_stmt>
       </block_content>}</block></for>
       <expr_stmt><expr><call><name>assertNull</name><argument_list>(<argument><expr><call><name><name>br</name><operator>.</operator><name>readLine</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> <finally>finally <block>{<block_content>
      <expr_stmt><expr><call><name><name>br</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></finally></try>
   </block_content>}</block></function>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">101</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">99</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>WriteEnwikiLineDocTaskTest</name> extends <name>BenchmarkTestCase</name> <block>{
     <comment type="line">// WriteLineDocTask replaced only \t characters w/ a space, since that's its</comment>
     <comment type="line">// separator char. However, it didn't replace newline characters, which</comment>
     <comment type="line">// resulted in errors in LineDocSource.</comment>
    <expr><name>File</name> <name>file</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>getWorkDir</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"two-lines-each.txt"</literal></expr></argument>)</argument_list></call></expr>;
    <name>Path</name> <name>file</name> <operator>=</operator> <call><name>getWorkDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>resolve</name><argument_list>(<argument><expr><literal type="string">"two-lines-each.txt"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>PerfRunData</name></type> <name>runData</name> <init>= <expr><call><name>createPerfRunData</name><argument_list>(<argument><expr><name>file</name></expr></argument>, <argument><expr><call><name><name>WriteLineCategoryDocMaker</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>WriteLineDocTask</name></type> <name>wldt</name> <init>= <expr><operator>new</operator> <call><name>WriteEnwikiLineDocTask</name><argument_list>(<argument><expr><name>runData</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><literal type="number">4</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content> <comment type="line">// four times so that each file should have 2 lines. </comment>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>tasks</name><operator>/</operator><name><name>WriteLineDocTaskTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>tasks</name><operator>/</operator><name><name>WriteLineDocTaskTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">093d52ec60c</literal><operator>..</operator><literal type="number">6a5292a02f1</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>tasks</name><operator>/</operator><name><name>WriteLineDocTaskTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>tasks</name><operator>/</operator><name><name>WriteLineDocTaskTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>benchmark</name><operator>.</operator><name>byTask</name><operator>.</operator><name>tasks</name></name>;</package>
  <expr_stmt><expr><operator>*</operator><operator>/</operator></expr></expr_stmt>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>BufferedReader</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileInputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStreamReader</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>StandardCharsets</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Properties</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">136</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">136</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>WriteLineDocTaskTest</name> extends <name>BenchmarkTestCase</name> <block>{
 
   <expr><specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name>CompressorStreamFactory</name> <name>csFactory</name> <operator>=</operator> <operator>new</operator> <call><name>CompressorStreamFactory</name><argument_list>()</argument_list></call></expr>;
 
  <specifier>private</specifier> <name>PerfRunData</name> <call><name>createPerfRunData</name><argument_list>(<argument><expr><name>File</name> <name>file</name></expr></argument>, 
  <argument><expr><specifier>private</specifier> <name>PerfRunData</name> <call><name>createPerfRunData</name><argument_list>(<argument><expr><name>Path</name> <name>file</name></expr></argument>, 
                                         <argument><expr><name>boolean</name> <name>allowEmptyDocs</name></expr></argument>,
                                         <argument><expr><name>String</name> <name>docMakerName</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><name>Properties</name> <name>props</name> <operator>=</operator> <operator>new</operator> <call><name>Properties</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr></argument>;</argument_list></call>
     <call><name><name>props</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"doc.maker"</literal></expr></argument>, <argument><expr><name>docMakerName</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>props</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"line.file.out"</literal></expr></argument>, <argument><expr><call><name><name>file</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>props</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"line.file.out"</literal></expr></argument>, <argument><expr><call><name><name>file</name><operator>.</operator><name>toAbsolutePath</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>props</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"directory"</literal></expr></argument>, <argument><expr><literal type="string">"RAMDirectory"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// no accidental FS dir.</comment>
     <if_stmt><if>if <condition>(<expr><name>allowEmptyDocs</name></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><call><name><name>props</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"sufficient.fields"</literal></expr></argument>, <argument><expr><literal type="string">","</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">154</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">154</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>WriteLineDocTaskTest</name> extends <name>BenchmarkTestCase</name> <block>{
     <return>return <expr><operator>new</operator> <call><name>PerfRunData</name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;</return>
   }</block></expr></expr_stmt>
   
  <decl_stmt><decl><type><specifier>private</specifier> <name>void</name></type> <name>doReadTest</name><argument_list>(<argument><expr><name>File</name> <name>file</name></expr></argument>, <argument><expr><name>Type</name> <name>fileType</name></expr></argument>, <argument><expr><name>String</name> <name>expTitle</name></expr></argument>,
  <argument><expr><specifier>private</specifier> <name>void</name> <call><name>doReadTest</name><argument_list>(<argument><expr><name>Path</name> <name>file</name></expr></argument>, <argument><expr><name>Type</name> <name>fileType</name></expr></argument>, <argument><expr><name>String</name> <name>expTitle</name></expr></argument>,
                           <argument><expr><name>String</name> <name>expDate</name></expr></argument>, <argument><expr><name>String</name> <name>expBody</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>InputStream</name> <name>in</name> <operator>=</operator> <operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr></argument>;</argument_list></decl></decl_stmt>
    <decl_stmt><decl><type><name>InputStream</name></type> <name>in</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>newInputStream</name></name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <switch>switch<condition>(<expr><name>fileType</name></expr>)</condition> <block>{<block_content>
       <case>case <expr><name>BZIP2</name></expr>:</case>
         <expr_stmt><expr><name>in</name> <operator>=</operator> <call><name><name>csFactory</name><operator>.</operator><name>createCompressorInputStream</name></name><argument_list>(<argument><expr><name><name>CompressorStreamFactory</name><operator>.</operator><name>BZIP2</name></name></expr></argument>, <argument><expr><name>in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">169</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">169</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>WriteLineDocTaskTest</name> extends <name>BenchmarkTestCase</name> <block>{
       <expr>default<operator>:</operator>
         <call><name>assertFalse</name><argument_list>(<argument><expr><literal type="string">"Unknown file type!"</literal></expr></argument>,<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>; <comment type="line">//fail, should not happen</comment>
     }</block></expr></expr_stmt>
    <decl_stmt><decl><type><name>BufferedReader</name></type> <name>br</name> <init>= <expr><operator>new</operator> <call><name>BufferedReader</name><argument_list>(<argument><expr><operator>new</operator> <call><name>InputStreamReader</name><argument_list>(<argument><expr><name>in</name></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <try>try <block>{<block_content>
    <try>try <init>(<decl><type><name>BufferedReader</name></type> <name>br</name> <init>= <expr><operator>new</operator> <call><name>BufferedReader</name><argument_list>(<argument><expr><operator>new</operator> <call><name>InputStreamReader</name><argument_list>(<argument><expr><name>in</name></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
       <decl_stmt><decl><type><name>String</name></type> <name>line</name> <init>= <expr><call><name><name>br</name><operator>.</operator><name>readLine</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name>assertHeaderLine</name><argument_list>(<argument><expr><name>line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><name>line</name> <operator>=</operator> <call><name><name>br</name><operator>.</operator><name>readLine</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">184</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">183</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>WriteLineDocTaskTest</name> extends <name>BenchmarkTestCase</name> <block>{
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>expBody</name></expr></argument>, <argument><expr><name><name>parts</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;
       }</block></expr></expr_stmt>
       <expr_stmt><expr><call><name>assertNull</name><argument_list>(<argument><expr><call><name><name>br</name><operator>.</operator><name>readLine</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> <finally>finally <block>{<block_content>
      <expr_stmt><expr><call><name><name>br</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></finally></try>
   </block_content>}</block></try>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">197</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">194</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>WriteLineDocTaskTest</name> extends <name>BenchmarkTestCase</name> <block>{
   <expr><specifier>public</specifier> <name>void</name> <call><name>testBZip2</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     
     <comment type="line">// Create a document in bz2 format.</comment>
    <expr><name>File</name> <name>file</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>getWorkDir</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"one-line.bz2"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>Path</name> <name>file</name> <operator>=</operator> <call><name>getWorkDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>resolve</name><argument_list>(<argument><expr><literal type="string">"one-line.bz2"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>PerfRunData</name></type> <name>runData</name> <init>= <expr><call><name>createPerfRunData</name><argument_list>(<argument><expr><name>file</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><call><name><name>WriteLineDocMaker</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>WriteLineDocTask</name></type> <name>wldt</name> <init>= <expr><operator>new</operator> <call><name>WriteLineDocTask</name><argument_list>(<argument><expr><name>runData</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>wldt</name><operator>.</operator><name>doLogic</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">210</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">207</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>WriteLineDocTaskTest</name> extends <name>BenchmarkTestCase</name> <block>{
   <expr><specifier>public</specifier> <name>void</name> <call><name>testGZip</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     
     <comment type="line">// Create a document in gz format.</comment>
    <expr><name>File</name> <name>file</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>getWorkDir</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"one-line.gz"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>Path</name> <name>file</name> <operator>=</operator> <call><name>getWorkDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>resolve</name><argument_list>(<argument><expr><literal type="string">"one-line.gz"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>PerfRunData</name></type> <name>runData</name> <init>= <expr><call><name>createPerfRunData</name><argument_list>(<argument><expr><name>file</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><call><name><name>WriteLineDocMaker</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>WriteLineDocTask</name></type> <name>wldt</name> <init>= <expr><operator>new</operator> <call><name>WriteLineDocTask</name><argument_list>(<argument><expr><name>runData</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>wldt</name><operator>.</operator><name>doLogic</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">222</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">219</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>WriteLineDocTaskTest</name> extends <name>BenchmarkTestCase</name> <block>{
   <expr><specifier>public</specifier> <name>void</name> <call><name>testRegularFile</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     
     <comment type="line">// Create a document in regular format.</comment>
    <expr><name>File</name> <name>file</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>getWorkDir</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"one-line"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>Path</name> <name>file</name> <operator>=</operator> <call><name>getWorkDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>resolve</name><argument_list>(<argument><expr><literal type="string">"one-line"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>PerfRunData</name></type> <name>runData</name> <init>= <expr><call><name>createPerfRunData</name><argument_list>(<argument><expr><name>file</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><call><name><name>WriteLineDocMaker</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>WriteLineDocTask</name></type> <name>wldt</name> <init>= <expr><operator>new</operator> <call><name>WriteLineDocTask</name><argument_list>(<argument><expr><name>runData</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>wldt</name><operator>.</operator><name>doLogic</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">235</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">232</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>WriteLineDocTaskTest</name> extends <name>BenchmarkTestCase</name> <block>{
     <comment type="line">// WriteLineDocTask replaced only \t characters w/ a space, since that's its</comment>
     <comment type="line">// separator char. However, it didn't replace newline characters, which</comment>
     <comment type="line">// resulted in errors in LineDocSource.</comment>
    <expr><name>File</name> <name>file</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>getWorkDir</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"one-line"</literal></expr></argument>)</argument_list></call></expr>;
    <name>Path</name> <name>file</name> <operator>=</operator> <call><name>getWorkDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>resolve</name><argument_list>(<argument><expr><literal type="string">"one-line"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>PerfRunData</name></type> <name>runData</name> <init>= <expr><call><name>createPerfRunData</name><argument_list>(<argument><expr><name>file</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><call><name><name>NewLinesDocMaker</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>WriteLineDocTask</name></type> <name>wldt</name> <init>= <expr><operator>new</operator> <call><name>WriteLineDocTask</name><argument_list>(<argument><expr><name>runData</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>wldt</name><operator>.</operator><name>doLogic</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">248</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">245</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>WriteLineDocTaskTest</name> extends <name>BenchmarkTestCase</name> <block>{
     <comment type="line">// WriteLineDocTask threw away documents w/ no BODY element, even if they</comment>
     <comment type="line">// had a TITLE element (LUCENE-1755). It should throw away documents if they</comment>
     <comment type="line">// don't have BODY nor TITLE</comment>
    <expr><name>File</name> <name>file</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>getWorkDir</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"one-line"</literal></expr></argument>)</argument_list></call></expr>;
    <name>Path</name> <name>file</name> <operator>=</operator> <call><name>getWorkDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>resolve</name><argument_list>(<argument><expr><literal type="string">"one-line"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>PerfRunData</name></type> <name>runData</name> <init>= <expr><call><name>createPerfRunData</name><argument_list>(<argument><expr><name>file</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><call><name><name>NoBodyDocMaker</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>WriteLineDocTask</name></type> <name>wldt</name> <init>= <expr><operator>new</operator> <call><name>WriteLineDocTask</name><argument_list>(<argument><expr><name>runData</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>wldt</name><operator>.</operator><name>doLogic</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">258</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">255</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>WriteLineDocTaskTest</name> extends <name>BenchmarkTestCase</name> <block>{
   }</block>
   
   <specifier>public</specifier> <name>void</name> <call><name>testEmptyTitle</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>File</name> <name>file</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>getWorkDir</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"one-line"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>file</name> <init>= <expr><call><name>getWorkDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>resolve</name><argument_list>(<argument><expr><literal type="string">"one-line"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>PerfRunData</name></type> <name>runData</name> <init>= <expr><call><name>createPerfRunData</name><argument_list>(<argument><expr><name>file</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><call><name><name>NoTitleDocMaker</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>WriteLineDocTask</name></type> <name>wldt</name> <init>= <expr><operator>new</operator> <call><name>WriteLineDocTask</name><argument_list>(<argument><expr><name>runData</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>wldt</name><operator>.</operator><name>doLogic</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">269</literal></expr><operator>,</operator><expr><literal type="number">61</literal> <operator>+</operator><literal type="number">266</literal></expr><operator>,</operator><expr><literal type="number">52</literal> @@ <specifier>public</specifier> <name>class</name> <name>WriteLineDocTaskTest</name> extends <name>BenchmarkTestCase</name> <block>{
   
   <comment type="block" format="javadoc">/** Fail by default when there's only date */</comment>
   <expr><specifier>public</specifier> <name>void</name> <call><name>testJustDate</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>File</name> <name>file</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>getWorkDir</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"one-line"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>Path</name> <name>file</name> <operator>=</operator> <call><name>getWorkDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>resolve</name><argument_list>(<argument><expr><literal type="string">"one-line"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>PerfRunData</name></type> <name>runData</name> <init>= <expr><call><name>createPerfRunData</name><argument_list>(<argument><expr><name>file</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><call><name><name>JustDateDocMaker</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>WriteLineDocTask</name></type> <name>wldt</name> <init>= <expr><operator>new</operator> <call><name>WriteLineDocTask</name><argument_list>(<argument><expr><name>runData</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>wldt</name><operator>.</operator><name>doLogic</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>wldt</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     
    <decl_stmt><decl><type><name>BufferedReader</name></type> <name>br</name> <init>= <expr><operator>new</operator> <call><name>BufferedReader</name><argument_list>(<argument><expr><operator>new</operator> <call><name>InputStreamReader</name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <try>try <block>{<block_content>
    <try>try <init>(<decl><type><name>BufferedReader</name></type> <name>br</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>newBufferedReader</name></name><argument_list>(<argument><expr><name>file</name></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
       <decl_stmt><decl><type><name>String</name></type> <name>line</name> <init>= <expr><call><name><name>br</name><operator>.</operator><name>readLine</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name>assertHeaderLine</name><argument_list>(<argument><expr><name>line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><name>line</name> <operator>=</operator> <call><name><name>br</name><operator>.</operator><name>readLine</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>assertNull</name><argument_list>(<argument><expr><name>line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> <finally>finally <block>{<block_content>
      <expr_stmt><expr><call><name><name>br</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></finally></try>
   </block_content>}</block></try>
 
   <function><type><specifier>public</specifier> <name>void</name></type> <name>testLegalJustDate</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>File</name></type> <name>file</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>getWorkDir</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"one-line"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>file</name> <init>= <expr><call><name>getWorkDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>resolve</name><argument_list>(<argument><expr><literal type="string">"one-line"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>PerfRunData</name></type> <name>runData</name> <init>= <expr><call><name>createPerfRunData</name><argument_list>(<argument><expr><name>file</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><call><name><name>LegalJustDateDocMaker</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>WriteLineDocTask</name></type> <name>wldt</name> <init>= <expr><operator>new</operator> <call><name>WriteLineDocTask</name><argument_list>(<argument><expr><name>runData</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>wldt</name><operator>.</operator><name>doLogic</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>wldt</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     
    <decl_stmt><decl><type><name>BufferedReader</name></type> <name>br</name> <init>= <expr><operator>new</operator> <call><name>BufferedReader</name><argument_list>(<argument><expr><operator>new</operator> <call><name>InputStreamReader</name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <try>try <block>{<block_content>
    <try>try <init>(<decl><type><name>BufferedReader</name></type> <name>br</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>newBufferedReader</name></name><argument_list>(<argument><expr><name>file</name></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
       <decl_stmt><decl><type><name>String</name></type> <name>line</name> <init>= <expr><call><name><name>br</name><operator>.</operator><name>readLine</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name>assertHeaderLine</name><argument_list>(<argument><expr><name>line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><name>line</name> <operator>=</operator> <call><name><name>br</name><operator>.</operator><name>readLine</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>assertNotNull</name><argument_list>(<argument><expr><name>line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> <finally>finally <block>{<block_content>
      <expr_stmt><expr><call><name><name>br</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></finally></try>
   </block_content>}</block></try>
 
   <function><type><specifier>public</specifier> <name>void</name></type> <name>testEmptyDoc</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>File</name></type> <name>file</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>getWorkDir</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"one-line"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>file</name> <init>= <expr><call><name>getWorkDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>resolve</name><argument_list>(<argument><expr><literal type="string">"one-line"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>PerfRunData</name></type> <name>runData</name> <init>= <expr><call><name>createPerfRunData</name><argument_list>(<argument><expr><name>file</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><call><name><name>EmptyDocMaker</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>WriteLineDocTask</name></type> <name>wldt</name> <init>= <expr><operator>new</operator> <call><name>WriteLineDocTask</name><argument_list>(<argument><expr><name>runData</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>wldt</name><operator>.</operator><name>doLogic</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>wldt</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     
    <decl_stmt><decl><type><name>BufferedReader</name></type> <name>br</name> <init>= <expr><operator>new</operator> <call><name>BufferedReader</name><argument_list>(<argument><expr><operator>new</operator> <call><name>InputStreamReader</name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <try>try <block>{<block_content>
    <try>try <init>(<decl><type><name>BufferedReader</name></type> <name>br</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>newBufferedReader</name></name><argument_list>(<argument><expr><name>file</name></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
       <decl_stmt><decl><type><name>String</name></type> <name>line</name> <init>= <expr><call><name><name>br</name><operator>.</operator><name>readLine</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name>assertHeaderLine</name><argument_list>(<argument><expr><name>line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><name>line</name> <operator>=</operator> <call><name><name>br</name><operator>.</operator><name>readLine</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>assertNotNull</name><argument_list>(<argument><expr><name>line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> <finally>finally <block>{<block_content>
      <expr_stmt><expr><call><name><name>br</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></finally></try>
   </block_content>}</block></try>
 
   <function><type><specifier>public</specifier> <name>void</name></type> <name>testMultiThreaded</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>File</name></type> <name>file</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>getWorkDir</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"one-line"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>file</name> <init>= <expr><call><name>getWorkDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>resolve</name><argument_list>(<argument><expr><literal type="string">"one-line"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>PerfRunData</name></type> <name>runData</name> <init>= <expr><call><name>createPerfRunData</name><argument_list>(<argument><expr><name>file</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><call><name><name>ThreadingDocMaker</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>final</specifier> <name>WriteLineDocTask</name></type> <name>wldt</name> <init>= <expr><operator>new</operator> <call><name>WriteLineDocTask</name><argument_list>(<argument><expr><name>runData</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name><name>Thread</name><index>[]</index></name></type> <name>threads</name> <init>= <expr><operator>new</operator> <name><name>Thread</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">346</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">334</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>WriteLineDocTaskTest</name> extends <name>BenchmarkTestCase</name> <block>{
     <expr><call><name><name>wldt</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;
     
     <name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name> <name>ids</name> <operator>=</operator> <operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>BufferedReader</name></type> <name>br</name> <init>= <expr><operator>new</operator> <call><name>BufferedReader</name><argument_list>(<argument><expr><operator>new</operator> <call><name>InputStreamReader</name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <try>try <block>{<block_content>
    <try>try <init>(<decl><type><name>BufferedReader</name></type> <name>br</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>newBufferedReader</name></name><argument_list>(<argument><expr><name>file</name></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
       <decl_stmt><decl><type><name>String</name></type> <name>line</name> <init>= <expr><call><name><name>br</name><operator>.</operator><name>readLine</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name>assertHeaderLine</name><argument_list>(<argument><expr><name>line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// header line is written once, no matter how many threads there are</comment>
       <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>threads</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">363</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">350</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>WriteLineDocTaskTest</name> extends <name>BenchmarkTestCase</name> <block>{
       <comment type="line">// only threads.length lines should exist</comment>
       <expr><call><name>assertNull</name><argument_list>(<argument><expr><call><name><name>br</name><operator>.</operator><name>readLine</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
       <call><name>assertEquals</name><argument_list>(<argument><expr><name><name>threads</name><operator>.</operator><name>length</name></name></expr></argument>, <argument><expr><call><name><name>ids</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    </block_content>}</block></for> <finally>finally <block>{<block_content>
      <expr_stmt><expr><call><name><name>br</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></finally>
   </block_content>}</block></try>

 </block_content>}</block></try>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>utils</name><operator>/</operator><name><name>StreamUtilsTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>utils</name><operator>/</operator><name><name>StreamUtilsTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">63bd31ae6fb</literal><operator>..</operator><name>df6bea19407</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>utils</name><operator>/</operator><name><name>StreamUtilsTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>byTask</name><operator>/</operator><name>utils</name><operator>/</operator><name><name>StreamUtilsTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">26</literal> <operator>+</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">25</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>benchmark</name><operator>.</operator><name>byTask</name><operator>.</operator><name>utils</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>BufferedReader</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>BufferedWriter</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileOutputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStreamReader</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>OutputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>OutputStreamWriter</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>StandardCharsets</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>compress</name><operator>.</operator><name>compressors</name><operator>.</operator><name>CompressorStreamFactory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>benchmark</name><operator>.</operator><name>BenchmarkTestCase</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>IOUtils</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>TestUtil</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>After</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Before</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>
 
 <class><specifier>public</specifier> class <name>StreamUtilsTest</name> <super_list><extends>extends <super><name>BenchmarkTestCase</name></super></extends></super_list> <block>{
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>TEXT</name> <init>= <expr><literal type="string">"Some-Text..."</literal></expr></init></decl>;</decl_stmt> 
  <decl_stmt><decl><type><specifier>private</specifier> <name>File</name></type> <name>testDir</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>Path</name></type> <name>testDir</name></decl>;</decl_stmt>
   
   <function><annotation>@<name>Test</name></annotation>
   <type><specifier>public</specifier> <name>void</name></type> <name>testGetInputStreamPlainText</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">86</literal></expr><operator>,</operator><expr><literal type="number">31</literal> <operator>+</operator><literal type="number">85</literal></expr><operator>,</operator><expr><literal type="number">31</literal> @@ <specifier>public</specifier> <name>class</name> <name>StreamUtilsTest</name> extends <name>BenchmarkTestCase</name> <block>{
     <expr><call><name>assertReadText</name><argument_list>(<argument><expr><call><name>autoOutFile</name><argument_list>(<argument><expr><literal type="string">"TEXT"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
   }</block></expr></expr_stmt>
   
  <function><type><specifier>private</specifier> <name>File</name></type> <name>rawTextFile</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>ext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>File</name></type> <name>f</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>testDir</name></expr></argument>,<argument><expr><literal type="string">"testfile."</literal> <operator>+</operator>  <name>ext</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>BufferedWriter</name></type> <name>w</name> <init>= <expr><operator>new</operator> <call><name>BufferedWriter</name><argument_list>(<argument><expr><operator>new</operator> <call><name>OutputStreamWriter</name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileOutputStream</name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <function><type><specifier>private</specifier> <name>Path</name></type> <name>rawTextFile</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>ext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>Path</name></type> <name>f</name> <init>= <expr><call><name><name>testDir</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><literal type="string">"testfile."</literal> <operator>+</operator>  <name>ext</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>BufferedWriter</name></type> <name>w</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>newBufferedWriter</name></name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>w</name><operator>.</operator><name>write</name></name><argument_list>(<argument><expr><name>TEXT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>w</name><operator>.</operator><name>newLine</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>w</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <return>return <expr><name>f</name></expr>;</return>
   </block_content>}</block></function>
   
  <function><type><specifier>private</specifier> <name>File</name></type> <name>rawGzipFile</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>ext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>File</name></type> <name>f</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>testDir</name></expr></argument>,<argument><expr><literal type="string">"testfile."</literal> <operator>+</operator>  <name>ext</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>OutputStream</name></type> <name>os</name> <init>= <expr><operator>new</operator> <call><name>CompressorStreamFactory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>createCompressorOutputStream</name><argument_list>(<argument><expr><name><name>CompressorStreamFactory</name><operator>.</operator><name>GZIP</name></name></expr></argument>, <argument><expr><operator>new</operator> <call><name>FileOutputStream</name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <function><type><specifier>private</specifier> <name>Path</name></type> <name>rawGzipFile</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>ext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>Path</name></type> <name>f</name> <init>= <expr><call><name><name>testDir</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><literal type="string">"testfile."</literal> <operator>+</operator>  <name>ext</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>OutputStream</name></type> <name>os</name> <init>= <expr><operator>new</operator> <call><name>CompressorStreamFactory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>createCompressorOutputStream</name><argument_list>(<argument><expr><name><name>CompressorStreamFactory</name><operator>.</operator><name>GZIP</name></name></expr></argument>, <argument><expr><call><name><name>Files</name><operator>.</operator><name>newOutputStream</name></name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>writeText</name><argument_list>(<argument><expr><name>os</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <return>return <expr><name>f</name></expr>;</return>
   </block_content>}</block></function>
 
  <function><type><specifier>private</specifier> <name>File</name></type> <name>rawBzip2File</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>ext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>File</name></type> <name>f</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>testDir</name></expr></argument>,<argument><expr><literal type="string">"testfile."</literal> <operator>+</operator>  <name>ext</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>OutputStream</name></type> <name>os</name> <init>= <expr><operator>new</operator> <call><name>CompressorStreamFactory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>createCompressorOutputStream</name><argument_list>(<argument><expr><name><name>CompressorStreamFactory</name><operator>.</operator><name>BZIP2</name></name></expr></argument>, <argument><expr><operator>new</operator> <call><name>FileOutputStream</name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <function><type><specifier>private</specifier> <name>Path</name></type> <name>rawBzip2File</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>ext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>Path</name></type> <name>f</name> <init>= <expr><call><name><name>testDir</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><literal type="string">"testfile."</literal> <operator>+</operator>  <name>ext</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>OutputStream</name></type> <name>os</name> <init>= <expr><operator>new</operator> <call><name>CompressorStreamFactory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>createCompressorOutputStream</name><argument_list>(<argument><expr><name><name>CompressorStreamFactory</name><operator>.</operator><name>BZIP2</name></name></expr></argument>, <argument><expr><call><name><name>Files</name><operator>.</operator><name>newOutputStream</name></name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>writeText</name><argument_list>(<argument><expr><name>os</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <return>return <expr><name>f</name></expr>;</return>
   </block_content>}</block></function>
 
  <function><type><specifier>private</specifier> <name>File</name></type> <name>autoOutFile</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>ext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>File</name></type> <name>f</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>testDir</name></expr></argument>,<argument><expr><literal type="string">"testfile."</literal> <operator>+</operator>  <name>ext</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <function><type><specifier>private</specifier> <name>Path</name></type> <name>autoOutFile</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>ext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>Path</name></type> <name>f</name> <init>= <expr><call><name><name>testDir</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><literal type="string">"testfile."</literal> <operator>+</operator>  <name>ext</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>OutputStream</name></type> <name>os</name> <init>= <expr><call><name><name>StreamUtils</name><operator>.</operator><name>outputStream</name></name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>writeText</name><argument_list>(<argument><expr><name>os</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <return>return <expr><name>f</name></expr>;</return>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">123</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">122</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>StreamUtilsTest</name> extends <name>BenchmarkTestCase</name> <block>{
     <expr><call><name><name>w</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;
   }</block></expr></expr_stmt>
 
  <function><type><specifier>private</specifier> <name>void</name></type> <name>assertReadText</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>f</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
  <function><type><specifier>private</specifier> <name>void</name></type> <name>assertReadText</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>f</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
     <decl_stmt><decl><type><name>InputStream</name></type> <name>ir</name> <init>= <expr><call><name><name>StreamUtils</name><operator>.</operator><name>inputStream</name></name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>InputStreamReader</name></type> <name>in</name> <init>= <expr><operator>new</operator> <call><name>InputStreamReader</name><argument_list>(<argument><expr><name>ir</name></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>BufferedReader</name></type> <name>r</name> <init>= <expr><operator>new</operator> <call><name>BufferedReader</name><argument_list>(<argument><expr><name>in</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>String</name></type> <name>line</name> <init>= <expr><call><name><name>r</name><operator>.</operator><name>readLine</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"Wrong text found in "</literal><operator>+</operator><call><name><name>f</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>TEXT</name></expr></argument>, <argument><expr><name>line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"Wrong text found in "</literal><operator>+</operator><call><name><name>f</name><operator>.</operator><name>getFileName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>TEXT</name></expr></argument>, <argument><expr><name>line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>r</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
   
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">136</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">135</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>StreamUtilsTest</name> extends <name>BenchmarkTestCase</name> <block>{
   @<expr><name>Before</name>
   <specifier>public</specifier> <name>void</name> <call><name>setUp</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><call><name><name>super</name><operator>.</operator><name>setUp</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>testDir</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>getWorkDir</name><argument_list>()</argument_list></call></expr></argument>,<argument><expr><literal type="string">"ContentSourceTest"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><name>testDir</name> <operator>=</operator> <call><name>getWorkDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>resolve</name><argument_list>(<argument><expr><literal type="string">"ContentSourceTest"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>IOUtils</name><operator>.</operator><name>rm</name></name><argument_list>(<argument><expr><name>testDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>testDir</name><operator>.</operator><name>mkdirs</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>createDirectory</name></name><argument_list>(<argument><expr><name>testDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
 
   <annotation>@<name>Override</name></annotation>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>quality</name><operator>/</operator><name><name>TestQualityRun</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>quality</name><operator>/</operator><name><name>TestQualityRun</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">5f101a69cf3</literal><operator>..</operator><literal type="number">487478bd356</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>quality</name><operator>/</operator><name><name>TestQualityRun</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>benchmark</name><operator>/</operator><name>quality</name><operator>/</operator><name><name>TestQualityRun</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">26</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">26</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>DirectoryReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>IndexSearcher</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>Directory</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>LuceneTestCase</name><operator>.</operator><name>SuppressSysoutChecks</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>BufferedReader</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStreamReader</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>OutputStreamWriter</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">73</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">71</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestQualityRun</name> extends <name>BenchmarkTestCase</name> <block>{
     <comment type="line">// validate topics &amp; judgments match each other</comment>
     <expr><call><name><name>judge</name><operator>.</operator><name>validateData</name></name><argument_list>(<argument><expr><name>qqs</name></expr></argument>, <argument><expr><name>logger</name></expr></argument>)</argument_list></call></expr>;
     
    <name>Directory</name> <name>dir</name> <operator>=</operator> <call><name>newFSDirectory</name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>getWorkDir</name><argument_list>()</argument_list></call></expr></argument>,<argument><expr><literal type="string">"index"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Directory</name></type> <name>dir</name> <init>= <expr><call><name>newFSDirectory</name><argument_list>(<argument><expr><call><name>getWorkDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>resolve</name><argument_list>(<argument><expr><literal type="string">"index"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>IndexReader</name></type> <name>reader</name> <init>= <expr><call><name><name>DirectoryReader</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>IndexSearcher</name></type> <name>searcher</name> <init>= <expr><operator>new</operator> <call><name>IndexSearcher</name><argument_list>(<argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>common</name><operator>-</operator><name><name>build</name><operator>.</operator><name>xml</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>common</name><operator>-</operator><name><name>build</name><operator>.</operator><name>xml</name></name>
<name>index</name> <literal type="number">420730d0ef2</literal><operator>..</operator><literal type="number">25a385c7573</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>common</name><operator>-</operator><name><name>build</name><operator>.</operator><name>xml</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>common</name><operator>-</operator><name><name>build</name><operator>.</operator><name>xml</name></name>
@@ <operator>-</operator><literal type="number">2356</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">2356</literal></expr><operator>,</operator><expr><literal type="number">16</literal> @@ <name>$</name><block>{<expr><name><name>ant</name><operator>.</operator><name>project</name><operator>.</operator><name>name</name></name></expr>}</block><operator>.</operator><name><name>test</name><operator>.</operator><name>dependencies</name></name><operator>=</operator><name>$</name><block>{<expr><name><name>test</name><operator>.</operator><name>classpath</name><operator>.</operator><name>list</name></name></expr>}</block>
     <operator>&lt;</operator><operator>/</operator><name>path</name><operator>&gt;</operator>
   <operator>&lt;</operator><operator>/</operator><name>target</name><operator>&gt;</operator>  
 
  <operator>&lt;</operator><name>target</name> <name>name</name><operator>=</operator><literal type="string">"check-forbidden-apis"</literal> <name>depends</name><operator>=</operator><literal type="string">"-check-forbidden-all,-check-forbidden-core,-check-forbidden-tests"</literal> <name>description</name><operator>=</operator><literal type="string">"Check forbidden API calls in compiled class files"</literal><operator>/</operator><operator>&gt;</operator>
  <operator>&lt;</operator><name>condition</name> <name>property</name><operator>=</operator><literal type="string">"islucene"</literal> <name>value</name><operator>=</operator><literal type="string">"true"</literal></expr></expr_stmt> <if_stmt><else>else<block type="pseudo"><block_content><expr_stmt><expr><operator>=</operator><literal type="string">"false"</literal><operator>&gt;</operator>
    <operator>&lt;</operator><name>not</name><operator>&gt;</operator>
      <operator>&lt;</operator><name>or</name><operator>&gt;</operator>
        <operator>&lt;</operator><name>matches</name> <name>pattern</name><operator>=</operator><literal type="string">"^(solr)\b"</literal> <name>string</name><operator>=</operator><literal type="string">"${name}"</literal><operator>/</operator><operator>&gt;</operator>
        <operator>&lt;</operator><name>matches</name> <name>pattern</name><operator>=</operator><literal type="string">"tools"</literal> <name>string</name><operator>=</operator><literal type="string">"${name}"</literal><operator>/</operator><operator>&gt;</operator>
      <operator>&lt;</operator><operator>/</operator><name>or</name><operator>&gt;</operator>
    <operator>&lt;</operator><operator>/</operator><name>not</name><operator>&gt;</operator>
  <operator>&lt;</operator><operator>/</operator><name>condition</name><operator>&gt;</operator>

  <operator>&lt;</operator><name>target</name> <name>name</name><operator>=</operator><literal type="string">"check-forbidden-apis"</literal> <name>depends</name><operator>=</operator><literal type="string">"-check-forbidden-all,-check-forbidden-core,-check-forbidden-tests,-check-forbidden-lucene"</literal> <name>description</name><operator>=</operator><literal type="string">"Check forbidden API calls in compiled class files"</literal><operator>/</operator><operator>&gt;</operator>
   
   <operator>&lt;</operator><operator>!</operator><operator>--</operator> <name>applies</name> <name>to</name> <name>both</name> <name>source</name> <name>and</name> <name>test</name> <name>code</name> <operator>--</operator><operator>&gt;</operator>
   <operator>&lt;</operator><name>target</name> <name>name</name><operator>=</operator><literal type="string">"-check-forbidden-all"</literal> <name>depends</name><operator>=</operator><literal type="string">"-init-forbidden-apis,compile-core,compile-test"</literal><operator>&gt;</operator>
@@ <operator>-</operator><literal type="number">2368</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">2377</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ <name>$</name><block>{<expr><name><name>ant</name><operator>.</operator><name>project</name><operator>.</operator><name>name</name></name></expr>}</block><operator>.</operator><name><name>test</name><operator>.</operator><name>dependencies</name></name><operator>=</operator><name>$</name><block>{<expr><name><name>test</name><operator>.</operator><name>classpath</name><operator>.</operator><name>list</name></name></expr>}</block>
       <operator>&lt;</operator><name>fileset</name> <name>dir</name><operator>=</operator><literal type="string">"${build.dir}/classes/test"</literal> <name>excludes</name><operator>=</operator><literal type="string">"${forbidden-tests-excludes}"</literal> <name>erroronmissingdir</name><operator>=</operator><literal type="string">"false"</literal><operator>/</operator><operator>&gt;</operator>
     <operator>&lt;</operator><operator>/</operator><name>forbidden</name><operator>-</operator><name>apis</name><operator>&gt;</operator>
   <operator>&lt;</operator><operator>/</operator><name>target</name><operator>&gt;</operator>

  <operator>&lt;</operator><operator>!</operator><operator>--</operator> <name>applies</name> <name>to</name> <name>only</name> <name>lucene</name> <name>API</name> <operator>--</operator><operator>&gt;</operator>
  <operator>&lt;</operator><name>target</name> <name>name</name><operator>=</operator><literal type="string">"-check-forbidden-lucene"</literal> <name>depends</name><operator>=</operator><literal type="string">"-init-forbidden-apis,compile-core,compile-test"</literal></expr></expr_stmt></block_content></block></else></if_stmt> <if_stmt><if>if="${islucene}"&gt;
    &lt;forbidden-apis signaturesFile="${common.dir}/tools/forbiddenApis/lucene.txt" classpathref="forbidden-apis.allclasses.classpath"&gt; 
      &lt;fileset dir="${build.dir}/classes/java" excludes="${forbidden-base-excludes}"/&gt;
      &lt;fileset dir="${build.dir}/classes/test" excludes="${forbidden-tests-excludes}" erroronmissingdir="false"/&gt;
    &lt;/forbidden-apis&gt;
  &lt;/target&gt;
   
   &lt;!-- applies to only test code --&gt;
   &lt;target name="-check-forbidden-tests" depends="-init-forbidden-apis,compile-test"&gt;
diff --git a/lucene/core/build.xml b/lucene/core/build.xml
index d14a423d3d2..3ae8f80dad3 100644
-- a/lucene/core/build.xml
++ b/lucene/core/build.xml
@@ -34<operator>,</operator><expr_stmt><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">34</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@
     <name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>RamUsageEstimator</name><operator>.</operator><name>class</name></name>
   <literal type="string">"/&gt;
 
  &lt;!-- TODO: maybe let people get closedchannel if they cancel(true) --&gt;
  &lt;property name="</literal><name>forbidden</name><operator>-</operator><name>base</name><operator>-</operator><name>excludes</name><literal type="string">" value="</literal>
    <name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>SimpleFSDirectory</name><operator>.</operator><name>class</name></name>
  <literal type="string">"/&gt;

   &lt;import file="</literal><operator>..</operator><operator>/</operator><name>common</name><operator>-</operator><name><name>build</name><operator>.</operator><name>xml</name></name><literal type="string">"/&gt;
 
   &lt;property name="</literal><name><name>moman</name><operator>.</operator><name>commit</name></name><operator>-</operator><name>hash</name><literal type="string">" value="</literal><literal type="number">5c5c2a1e4dea</literal><literal type="string">" /&gt;
diff --git a/lucene/core/src/java/org/apache/lucene/index/CheckIndex.java b/lucene/core/src/java/org/apache/lucene/index/CheckIndex.java
index dccdd0132b1..cf2f0800eda 100644
-- a/lucene/core/src/java/org/apache/lucene/index/CheckIndex.java
++ b/lucene/core/src/java/org/apache/lucene/index/CheckIndex.java
@@ -17,9 +17,10 @@ package org.apache.lucene.index;
  * limitations under the License.
  */
 
import java.io.File;
 import java.io.IOException;
 import java.io.PrintStream;
import java.nio.file.Path;
import java.nio.file.Paths;
 import java.text.NumberFormat;
 import java.util.ArrayList;
 import java.util.HashMap;
@@ -2046,11 +2047,12 @@ public class CheckIndex {
 
     System.out.println("</literal><operator>\</operator><name>nOpening</name> <name>index</name> @ <literal type="string">" + indexPath + "</literal><operator>\</operator><name>n</name><literal type="string">");
     Directory dir = null;
    Path path = Paths.get(indexPath);
     try {
       if (dirImpl == null) {
        dir = FSDirectory.open(new File(indexPath));
        dir = FSDirectory.open(path);
       } else {
        dir = CommandLineUtil.newFSDirectory(dirImpl, new File(indexPath));
        dir = CommandLineUtil.newFSDirectory(dirImpl, path);
       }
     } catch (Throwable t) {
       System.out.println("</literal><name>ERROR</name><operator>:</operator> <name>could</name> <name>not</name> <name>open</name> <name>directory</name> <operator>\</operator><literal type="string">""</literal> <operator>+</operator> <name>indexPath</name> <operator>+</operator> <literal type="string">"\"; exiting"</literal></expr></expr_stmt></if></if_stmt>)</block_content></block>;</function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>DirectoryReader</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>DirectoryReader</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">5b11dc3cd8f</literal><operator>..</operator><literal type="number">083714e9b48</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>DirectoryReader</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>DirectoryReader</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">26</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">26</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>SearcherManager</name></name>;</import> <comment type="line">// javadocs</comment>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>Directory</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>NoSuchDirectoryException</name></name>;</import>
 
 <comment type="block" format="javadoc">/** DirectoryReader is an implementation of {@link CompositeReader}
  that can read indexes in a {@link Directory}. 
@@ -288,22 +287,12 @@ public abstract class DirectoryReader extends BaseCompositeReader&lt;AtomicReader&gt;
     // corrupt indices.  This means that IndexWriter will
     // throw an exception on such indices and the app must
     // resolve the situation manually:
    String[] files;
    try {
      files = directory.listAll();
    } catch (NoSuchDirectoryException nsde) {
      // Directory does not exist --&gt; no index exists
      return false;
    }
    String[] files = directory.listAll();
 
    // Defensive: maybe a Directory impl returns null
    // instead of throwing NoSuchDirectoryException:
    if (files != null) {
      String prefix = IndexFileNames.SEGMENTS + "_";
      for(String file : files) {
        if (file.startsWith(prefix)) {
          return true;
        }
    String prefix = IndexFileNames.SEGMENTS + "_";
    for(String file : files) {
      if (file.startsWith(prefix)) {
        return true;
       }
     }
     return false;
diff --git a/lucene/core/src/java/org/apache/lucene/index/IndexFileDeleter.java b/lucene/core/src/java/org/apache/lucene/index/IndexFileDeleter.java
index 62bccd24510..bc7768437d9 100644
-- a/lucene/core/src/java/org/apache/lucene/index/IndexFileDeleter.java
++ b/lucene/core/src/java/org/apache/lucene/index/IndexFileDeleter.java
@@ -31,7 +31,6 @@ import java.util.regex.Matcher;
 
 import org.apache.lucene.store.AlreadyClosedException;
 import org.apache.lucene.store.Directory;
import org.apache.lucene.store.NoSuchDirectoryException;
 import org.apache.lucene.util.CollectionUtil;
 import org.apache.lucene.util.IOUtils;
 import org.apache.lucene.util.InfoStream;
@@ -144,13 +143,7 @@ final class IndexFileDeleter implements Closeable {
     long currentGen = segmentInfos.getGeneration();
 
     CommitPoint currentCommitPoint = null;
    String[] files = null;
    try {
      files = directory.listAll();
    } catch (NoSuchDirectoryException e) {
      // it means the directory is empty, so ignore it.
      files = new String[0];
    }
    String[] files = directory.listAll();
 
     if (currentSegmentsFile != null) {
       Matcher m = IndexFileNames.CODEC_FILE_PATTERN.matcher("");
diff --git a/lucene/core/src/java/org/apache/lucene/index/IndexUpgrader.java b/lucene/core/src/java/org/apache/lucene/index/IndexUpgrader.java
index 99c93609a12..706b3d44cee 100644
-- a/lucene/core/src/java/org/apache/lucene/index/IndexUpgrader.java
++ b/lucene/core/src/java/org/apache/lucene/index/IndexUpgrader.java
@@ -24,8 +24,9 @@ import org.apache.lucene.util.InfoStream;
 import org.apache.lucene.util.PrintStreamInfoStream;
 import org.apache.lucene.util.Version;
 
import java.io.File;
 import java.io.IOException;
import java.nio.file.Paths;
import java.nio.file.Path;
 import java.util.Collection;
 
 /**
@@ -102,11 +103,12 @@ public final class IndexUpgrader {
       printUsage();
     }
     
    Path p = Paths.get(path);
     Directory dir = null;
     if (dirImpl == null) {
      dir = FSDirectory.open(new File(path));
      dir = FSDirectory.open(p);
     } else {
      dir = CommandLineUtil.newFSDirectory(dirImpl, new File(path));
      dir = CommandLineUtil.newFSDirectory(dirImpl, p);
     }
     return new IndexUpgrader(dir, out, deletePriorCommits);
   }
diff --git a/lucene/core/src/java/org/apache/lucene/index/SegmentInfos.java b/lucene/core/src/java/org/apache/lucene/index/SegmentInfos.java
index e3c32257fde..0e6c82c0013 100644
-- a/lucene/core/src/java/org/apache/lucene/index/SegmentInfos.java
++ b/lucene/core/src/java/org/apache/lucene/index/SegmentInfos.java
@@ -19,6 +19,7 @@ package org.apache.lucene.index;
 
 import java.io.IOException;
 import java.io.PrintStream;
import java.nio.file.NoSuchFileException;
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Collection;
@@ -41,7 +42,6 @@ import org.apache.lucene.store.DataOutput;
 import org.apache.lucene.store.Directory;
 import org.apache.lucene.store.IOContext;
 import org.apache.lucene.store.IndexOutput;
import org.apache.lucene.store.NoSuchDirectoryException;
 import org.apache.lucene.util.IOUtils;
 import org.apache.lucene.util.StringHelper;
 
@@ -176,9 +176,6 @@ public final class SegmentInfos implements Cloneable, Iterable&lt;SegmentCommitInfo
    * @param files -- array of file names to check
    */</comment>
   <function><type><specifier>public</specifier> <specifier>static</specifier> <name>long</name></type> <name>getLastCommitGeneration</name><parameter_list>(<parameter><decl><type><name><name>String</name><index>[]</index></name></type> <name>files</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name>files</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
     <decl_stmt><decl><type><name>long</name></type> <name>max</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
     <for>for <control>(<init><decl><type><name>String</name></type> <name>file</name> <range>: <expr><name>files</name></expr></range></decl></init>)</control> <block>{<block_content>
       <if_stmt><if>if <condition>(<expr><call><name><name>file</name><operator>.</operator><name>startsWith</name></name><argument_list>(<argument><expr><name><name>IndexFileNames</name><operator>.</operator><name>SEGMENTS</name></name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <operator>!</operator><call><name><name>file</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name><name>IndexFileNames</name><operator>.</operator><name>OLD_SEGMENTS_GEN</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">198</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">195</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>SegmentInfos</name> implements <name>Cloneable</name></expr><operator>,</operator> <expr><name>Iterable</name><operator>&lt;</operator><name>SegmentCommitInfo</name>
    <operator>*</operator> @<name>param</name> <name>directory</name> <operator>--</operator> <name>directory</name> <name>to</name> <name>search</name></expr></expr_stmt> <for>for the latest segments_N file
    */
   public static long getLastCommitGeneration<control>(<init><expr><name>Directory</name> <name>directory</name></expr></init>)</control><block type="pseudo"><block_content> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws>
    <try>try <block>{<block_content>
      <return>return <expr><call><name>getLastCommitGeneration</name><argument_list>(<argument><expr><call><name><name>directory</name><operator>.</operator><name>listAll</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>NoSuchDirectoryException</name></type> <name>nsde</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
    </block_content>}</block></catch></try></block_content></block></for>
    <return>return <expr><call><name>getLastCommitGeneration</name><argument_list>(<argument><expr><call><name><name>directory</name><operator>.</operator><name>listAll</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></if></if_stmt>
 
   <comment type="block" format="javadoc">/**
diff --git a/lucene/core/src/java/org/apache/lucene/store/Directory.java b/lucene/core/src/java/org/apache/lucene/store/Directory.java
index 7e7e7a53bbf..fd81fc619b8 100644
-- a/lucene/core/src/java/org/apache/lucene/store/Directory.java
++ b/lucene/core/src/java/org/apache/lucene/store/Directory.java
@@ -46,9 +46,7 @@ public abstract class Directory implements Closeable {
   /**
    * Returns an array of strings, one for each file in the directory.
    * 
   * @throws NoSuchDirectoryException if the directory is not prepared for any
   *         write operations (such as {@link #createOutput(String, IOContext)}).
   * @throws IOException in case of other IO errors
   * @throws IOException in case of IO error
    */</comment>
   <function_decl><type><specifier>public</specifier> <specifier>abstract</specifier> <name><name>String</name><index>[]</index></name></type> <name>listAll</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws>;</function_decl>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>FSDirectory</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>FSDirectory</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">7c64686a003</literal><operator>..</operator><name>c1365f73254</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>FSDirectory</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>FSDirectory</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">16</literal> <operator>+</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">17</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name></name>;</package>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>Constants</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>IOUtils</name></name>;</import>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileNotFoundException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileOutputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FilenameFilter</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FilterOutputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>DirectoryStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>StandardCopyOption</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collection</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>Future</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">114</literal></expr><operator>,</operator><expr><literal type="number">32</literal> <operator>+</operator><literal type="number">115</literal></expr><operator>,</operator><expr><literal type="number">25</literal> @@</expr></expr_stmt> <import>import static <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name><operator>.</operator><name>synchronizedSet</name></name>;</import>
  <expr_stmt><expr><operator>*</operator><operator>/</operator>
 <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>FSDirectory</name> extends <name>BaseDirectory</name> <block>{
 
  <expr><specifier>protected</specifier> <name>final</name> <name>File</name> <name>directory</name></expr>; <comment type="line">// The underlying filesystem directory</comment>
  <specifier>protected</specifier> <name>final</name> <name>Path</name> <name>directory</name></block></expr>;</expr_stmt> <comment type="line">// The underlying filesystem directory</comment>
   <decl_stmt><decl><type><specifier>protected</specifier> <specifier>final</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>staleFiles</name> <init>= <expr><call><name>synchronizedSet</name><argument_list>(<argument><expr><operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="line">// Files written, but not yet sync'ed</comment>
 
  <comment type="line">// returns the canonical version of the directory, creating it if it doesn't exist.</comment>
  <function><type><specifier>private</specifier> <specifier>static</specifier> <name>File</name></type> <name>getCanonicalPath</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>file</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <return>return <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name><name>file</name><operator>.</operator><name>getCanonicalPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

   <comment type="block" format="javadoc">/** Create a new FSDirectory for the named location (ctor for subclasses).
    * @param path the path of the directory
    * @param lockFactory the lock factory to use, or null for the default
    * ({@link NativeFSLockFactory});
    * @throws IOException if there is a low-level I/O error
    */</comment>
  <constructor><specifier>protected</specifier> <name>FSDirectory</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>path</name></decl></parameter>, <parameter><decl><type><name>LockFactory</name></type> <name>lockFactory</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
  <constructor><specifier>protected</specifier> <name>FSDirectory</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>path</name></decl></parameter>, <parameter><decl><type><name>LockFactory</name></type> <name>lockFactory</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
     <comment type="line">// new ctors use always NativeFSLockFactory as default:</comment>
     <if_stmt><if>if <condition>(<expr><name>lockFactory</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><name>lockFactory</name> <operator>=</operator> <operator>new</operator> <call><name>NativeFSLockFactory</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></if></if_stmt>
    <expr_stmt><expr><name>directory</name> <operator>=</operator> <call><name>getCanonicalPath</name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt><if>if <condition>(<expr><call><name><name>directory</name><operator>.</operator><name>exists</name></name><argument_list>()</argument_list></call> <operator>&amp;&amp;</operator> <operator>!</operator><call><name><name>directory</name><operator>.</operator><name>isDirectory</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
      <throw>throw <expr><operator>new</operator> <call><name>NoSuchDirectoryException</name><argument_list>(<argument><expr><literal type="string">"file '"</literal> <operator>+</operator> <name>directory</name> <operator>+</operator> <literal type="string">"' exists but is not a directory"</literal></expr></argument>)</argument_list></call></expr>;</throw></block_content></block></if></if_stmt>
    
    <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>createDirectories</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line">// create directory, if it doesnt exist</comment>
    <expr_stmt><expr><name>directory</name> <operator>=</operator> <call><name><name>path</name><operator>.</operator><name>toRealPath</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
     <expr_stmt><expr><call><name>setLockFactory</name><argument_list>(<argument><expr><name>lockFactory</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

   </block_content>}</block></constructor>
 
   <comment type="block" format="javadoc">/** Creates an FSDirectory instance, trying to pick the
@@ -162,13 +156,13 @@ public abstract class FSDirectory extends BaseDirectory {
    * {@link MMapDirectory} on 64 bit JVMs.
    *
    * &lt;p&gt;See &lt;a href="#subclasses"&gt;above&lt;/a&gt; */</comment>
  <function><type><specifier>public</specifier> <specifier>static</specifier> <name>FSDirectory</name></type> <name>open</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>path</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
  <function><type><specifier>public</specifier> <specifier>static</specifier> <name>FSDirectory</name></type> <name>open</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>path</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
     <return>return <expr><call><name>open</name><argument_list>(<argument><expr><name>path</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
 
  <comment type="block" format="javadoc">/** Just like {@link #open(File)}, but allows you to
  /** Just like {@link #open(Path)}, but allows you to
    *  also specify a custom {@link LockFactory}. */</comment>
  <function><type><specifier>public</specifier> <specifier>static</specifier> <name>FSDirectory</name></type> <name>open</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>path</name></decl></parameter>, <parameter><decl><type><name>LockFactory</name></type> <name>lockFactory</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
  <function><type><specifier>public</specifier> <specifier>static</specifier> <name>FSDirectory</name></type> <name>open</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>path</name></decl></parameter>, <parameter><decl><type><name>LockFactory</name></type> <name>lockFactory</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
     <if_stmt><if>if <condition>(<expr><name><name>Constants</name><operator>.</operator><name>JRE_IS_64BIT</name></name> <operator>&amp;&amp;</operator> <name><name>MMapDirectory</name><operator>.</operator><name>UNMAP_SUPPORTED</name></name></expr>)</condition> <block>{<block_content>
       <return>return <expr><operator>new</operator> <call><name>MMapDirectory</name><argument_list>(<argument><expr><name>path</name></expr></argument>, <argument><expr><name>lockFactory</name></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name><name>Constants</name><operator>.</operator><name>WINDOWS</name></name></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">186</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">180</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>FSDirectory</name> extends <name>BaseDirectory</name> <block>{
     <comment type="line">// in index dir. If no index dir is given, set ourselves</comment>
     <if_stmt><if>if <condition>(<expr><name>lockFactory</name> <operator>instanceof</operator> <name>FSLockFactory</name></expr>)</condition> <block>{<block_content>
       <decl_stmt><decl><type><specifier>final</specifier> <name>FSLockFactory</name></type> <name>lf</name> <init>= <expr><operator>(</operator><name>FSLockFactory</name><operator>)</operator> <name>lockFactory</name></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><specifier>final</specifier> <name>File</name></type> <name>dir</name> <init>= <expr><call><name><name>lf</name><operator>.</operator><name>getLockDir</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><specifier>final</specifier> <name>Path</name></type> <name>dir</name> <init>= <expr><call><name><name>lf</name><operator>.</operator><name>getLockDir</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <comment type="line">// if the lock factory has no lockDir set, use the this directory as lockDir</comment>
       <if_stmt><if>if <condition>(<expr><name>dir</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
         <expr_stmt><expr><call><name><name>lf</name><operator>.</operator><name>setLockDir</name></name><argument_list>(<argument><expr><name>directory</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><call><name><name>lf</name><operator>.</operator><name>setLockPrefix</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><call><name><name>dir</name><operator>.</operator><name>getCanonicalPath</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><call><name><name>directory</name><operator>.</operator><name>getCanonicalPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
      </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><call><name><name>dir</name><operator>.</operator><name>toRealPath</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>directory</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
         <expr_stmt><expr><call><name><name>lf</name><operator>.</operator><name>setLockPrefix</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></if></if_stmt>
     </block_content>}</block></if></if_stmt>
@@ <operator>-</operator><literal type="number">199</literal><operator>,</operator><literal type="number">36</literal> <operator>+</operator><literal type="number">193</literal><operator>,</operator><literal type="number">29</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>FSDirectory</name> extends <name>BaseDirectory</name> <block>{
   }</block></block>
   
   <comment type="block" format="javadoc">/** Lists all files (not subdirectories) in the
   *  directory.  This method never returns null (throws
   *  {@link IOException} instead).
   *  directory.
    *
   *  @throws NoSuchDirectoryException if the directory
   *   does not exist, or does exist but is not a
   *   directory.
   *  @throws IOException if list() returns null */</comment>
  <specifier>public</specifier> <specifier>static</specifier> <name><name>String</name><index>[]</index></name> <call><name>listAll</name><argument_list>(<argument><expr><name>File</name> <name>dir</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr></expr_stmt>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>dir</name><operator>.</operator><name>exists</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
      <throw>throw <expr><operator>new</operator> <call><name>NoSuchDirectoryException</name><argument_list>(<argument><expr><literal type="string">"directory '"</literal> <operator>+</operator> <name>dir</name> <operator>+</operator> <literal type="string">"' does not exist"</literal></expr></argument>)</argument_list></call></expr>;</throw></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><operator>!</operator><call><name><name>dir</name><operator>.</operator><name>isDirectory</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
      <throw>throw <expr><operator>new</operator> <call><name>NoSuchDirectoryException</name><argument_list>(<argument><expr><literal type="string">"file '"</literal> <operator>+</operator> <name>dir</name> <operator>+</operator> <literal type="string">"' exists but is not a directory"</literal></expr></argument>)</argument_list></call></expr>;</throw></block_content></block></if></if_stmt>

    <comment type="line">// Exclude subdirs</comment>
    <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>result</name> <init>= <expr><call><name><name>dir</name><operator>.</operator><name>list</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>FilenameFilter</name></super><argument_list>()</argument_list> <block>{
        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>boolean</name></type> <name>accept</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>dir</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>file</name></decl></parameter>)</parameter_list> <block>{<block_content>
          <return>return <expr><operator>!</operator><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><name>file</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>isDirectory</name><argument_list>()</argument_list></call></expr>;</return>
        </block_content>}</block></function>
      }</block></class></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt><if>if <condition>(<expr><name>result</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content>
      <throw>throw <expr><operator>new</operator> <call><name>IOException</name><argument_list>(<argument><expr><literal type="string">"directory '"</literal> <operator>+</operator> <name>dir</name> <operator>+</operator> <literal type="string">"' exists and is a directory, but cannot be listed: list() returned null"</literal></expr></argument>)</argument_list></call></expr>;</throw></block_content></block></if></if_stmt>

    <return>return <expr><name>result</name></expr>;</return>
   <expr_stmt><expr><operator>*</operator>  @<throws>throws <argument><expr><name>IOException</name></expr></argument></throws></expr></expr_stmt> <if_stmt><if>if there was an I/O error during listing */
  public static String[] listAll<condition>(<expr><name>Path</name> <name>dir</name></expr>)</condition><block type="pseudo"><block_content> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name> <name>entries</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws><empty_stmt>;</empty_stmt></block_content></block></if></if_stmt>
    
    <try>try <init>(<decl><type><name><name>DirectoryStream</name><argument_list type="generic">&lt;<argument><name>Path</name></argument>&gt;</argument_list></name></type> <name>stream</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>newDirectoryStream</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><operator>new</operator> <class><super><name><name>DirectoryStream</name><operator>.</operator><name><name>Filter</name><argument_list type="generic">&lt;<argument><name>Path</name></argument>&gt;</argument_list></name></name></super><argument_list>()</argument_list> <block>{
      <function><annotation>@<name>Override</name></annotation>
      <type><specifier>public</specifier> <name>boolean</name></type> <name>accept</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>entry</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <return>return <expr><operator>!</operator><call><name><name>Files</name><operator>.</operator><name>isDirectory</name></name><argument_list>(<argument><expr><name>entry</name></expr></argument>)</argument_list></call></expr>;</return> <comment type="line">// filter out entries that are definitely directories.</comment>
      </block_content>}</block></function>
    }</block></class></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
      <for>for <control>(<init><decl><type><name>Path</name></type> <name>path</name> <range>: <expr><name>stream</name></expr></range></decl></init>)</control> <block>{<block_content>
        <expr_stmt><expr><call><name><name>entries</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name><name>path</name><operator>.</operator><name>getFileName</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></for>
    </block_content>}</block></try>
    
    <return>return <expr><call><name><name>entries</name><operator>.</operator><name>toArray</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>String</name><index>[<expr><call><name><name>entries</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></if></if_stmt>
 
   <comment type="block" format="javadoc">/** Lists all files (not subdirectories) in the
    * directory.
   * @see #listAll(File) */</comment>
   <expr_stmt><expr><operator>*</operator> @<name>see</name> <operator>#</operator><call><name>listAll</name><argument_list>(<argument><expr><name>Path</name></expr></argument>)</argument_list></call> <operator>*</operator><operator>/</operator>
   @<name>Override</name>
   <specifier>public</specifier> <name><name>String</name><index>[]</index></name> <call><name>listAll</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><call><name>ensureOpen</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">239</literal></expr><operator>,</operator><expr><literal type="number">21</literal> <operator>+</operator><literal type="number">226</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>FSDirectory</name> extends <name>BaseDirectory</name> <block>{
   @<expr><name>Override</name>
   <specifier>public</specifier> <name>long</name> <call><name>fileLength</name><argument_list>(<argument><expr><name>String</name> <name>name</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><call><name>ensureOpen</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>File</name> <name>file</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>directory</name></expr></argument>, <argument><expr><name>name</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>long</name></type> <name>len</name> <init>= <expr><call><name><name>file</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>len</name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <operator>!</operator><call><name><name>file</name><operator>.</operator><name>exists</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>FileNotFoundException</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></if> <else>else <block>{<block_content>
      <return>return <expr><name>len</name></expr>;</return>
    </block_content>}</block></else></if_stmt>
    <return>return <expr><call><name><name>Files</name><operator>.</operator><name>size</name></name><argument_list>(<argument><expr><call><name><name>directory</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
 
   <comment type="block" format="javadoc">/** Removes an existing file in the directory. */</comment>
   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>public</specifier> <name>void</name></type> <name>deleteFile</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>name</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
     <expr_stmt><expr><call><name>ensureOpen</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>file</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>directory</name></expr></argument>, <argument><expr><name>name</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>delete</name></name><argument_list>(<argument><expr><call><name><name>file</name><operator>.</operator><name>toPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>delete</name></name><argument_list>(<argument><expr><call><name><name>directory</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>staleFiles</name><operator>.</operator><name>remove</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">267</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">247</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>FSDirectory</name> extends <name>BaseDirectory</name> <block>{
   }</block>
 
   <specifier>protected</specifier> <name>void</name> <call><name>ensureCanWrite</name><argument_list>(<argument><expr><name>String</name> <name>name</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr></expr_stmt>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>directory</name><operator>.</operator><name>exists</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
      <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>directory</name><operator>.</operator><name>mkdirs</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
        <throw>throw <expr><operator>new</operator> <call><name>IOException</name><argument_list>(<argument><expr><literal type="string">"Cannot create directory: "</literal> <operator>+</operator> <name>directory</name></expr></argument>)</argument_list></call></expr>;</throw></block_content></block></if></if_stmt></block_content></block></if></if_stmt>

    <decl_stmt><decl><type><name>File</name></type> <name>file</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>directory</name></expr></argument>, <argument><expr><name>name</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>deleteIfExists</name></name><argument_list>(<argument><expr><call><name><name>file</name><operator>.</operator><name>toPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// delete existing, if any</comment>
    <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>deleteIfExists</name></name><argument_list>(<argument><expr><call><name><name>directory</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// delete existing, if any</comment>
   </block_content>}</block></function>
 
   <comment type="block" format="javadoc">/**
@@ -299,7 +274,7 @@ public abstract class FSDirectory extends BaseDirectory {
   @Override
   public void renameFile(String source, String dest) throws IOException {
     ensureOpen();
    Files.move(new File(directory, source).toPath(), new File(directory, dest).toPath(), StandardCopyOption.ATOMIC_MOVE);
    Files.move(directory.resolve(source), directory.resolve(dest), StandardCopyOption.ATOMIC_MOVE);
     // TODO: should we move directory fsync to a separate 'syncMetadata' method?
     // for example, to improve listCommits(), IndexFileDeleter could also call that after deleting segments_Ns
     IOUtils.fsync(directory, true);
@@ -308,12 +283,7 @@ public abstract class FSDirectory extends BaseDirectory {
   @Override
   public String getLockID() {
     ensureOpen();
    String dirName;                               // name to be hashed
    try {
      dirName = directory.getCanonicalPath();
    } catch (IOException e) {
      throw new RuntimeException(e.toString(), e);
    }
    String dirName = directory.toString();  // name to be hashed
 
     int digest = 0;
     for(int charIDX=0;charIDX&lt;dirName.length();charIDX++) {
@@ -330,7 +300,7 @@ public abstract class FSDirectory extends BaseDirectory {
   }
 
   /** @return the underlying filesystem directory */</comment>
  <function><type><specifier>public</specifier> <name>File</name></type> <name>getDirectory</name><parameter_list>()</parameter_list> <block>{<block_content>
  <function><type><specifier>public</specifier> <name>Path</name></type> <name>getDirectory</name><parameter_list>()</parameter_list> <block>{<block_content>
     <expr_stmt><expr><call><name>ensureOpen</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <return>return <expr><name>directory</name></expr>;</return>
   </block_content>}</block></function>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">351</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">321</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>FSDirectory</name> extends <name>BaseDirectory</name> <block>{
     <expr><specifier>private</specifier> <name>final</name> <name>String</name> <name>name</name></expr>;
 
     <specifier>public</specifier> <call><name>FSIndexOutput</name><argument_list>(<argument><expr><name>String</name> <name>name</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
      <expr><call><name>super</name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>FilterOutputStream</name></super><argument_list>(<operator>new</operator> <call><name>FileOutputStream</name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>directory</name></expr></argument>, <argument><expr><name>name</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></argument_list></class></expr></argument>)</argument_list></call> <block>{
      <expr><call><name>super</name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>FilterOutputStream</name></super><argument_list>(<call><name><name>Files</name><operator>.</operator><name>newOutputStream</name></name><argument_list>(<argument><expr><call><name><name>directory</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></argument_list></class></expr></argument>)</argument_list></call> <block>{
         <comment type="line">// This implementation ensures, that we never write more than CHUNK_SIZE bytes:</comment>
         <expr><annotation>@<name>Override</name></annotation>
         <specifier>public</specifier> <name>void</name> <call><name>write</name><argument_list>(<argument><expr><name><name>byte</name><index>[]</index></name> <name>b</name></expr></argument>, <argument><expr><name>int</name> <name>offset</name></expr></argument>, <argument><expr><name>int</name> <name>length</name></expr></argument>)</argument_list></call></expr></block></expr></block></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument>
@<argument>@ <expr><operator>-</operator><literal type="number">377</literal></expr></argument>,<argument><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">347</literal></expr></argument>,<argument><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>FSDirectory</name> extends <name>BaseDirectory</name></expr></argument></throws> <block>{<block_content>
   </block_content>}</block>
 
   <specifier>protected</specifier> <name>void</name> <call><name>fsync</name><argument_list>(<argument><expr><name>String</name> <name>name</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><call><name><name>IOUtils</name><operator>.</operator><name>fsync</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>directory</name></expr></argument>, <argument><expr><name>name</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></block></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>IOUtils</name><operator>.</operator><name>fsync</name></name><argument_list>(<argument><expr><call><name><name>directory</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
 </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>FSLockFactory</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>FSLockFactory</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>dc96fabf230</name><operator>..</operator><literal type="number">584a77857de</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>FSLockFactory</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>FSLockFactory</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
  * Base class for file system based locking implementation.
@@ -28,7 +30,7 @@ public abstract class FSLockFactory extends LockFactory {
   /**
    * Directory for the lock files.
    */</comment>
  <decl_stmt><decl><type><specifier>protected</specifier> <name>File</name></type> <name>lockDir</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>protected</specifier> <name>Path</name></type> <name>lockDir</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
 
   <comment type="block" format="javadoc">/**
    * Set the lock directory. This method can be only called
@@ -37,16 +39,19 @@ public abstract class FSLockFactory extends LockFactory {
    * Subclasses can also use this method to set the directory
    * in the constructor.
    */</comment>
  <function><type><specifier>protected</specifier> <specifier>final</specifier> <name>void</name></type> <name>setLockDir</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>lockDir</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <function><type><specifier>protected</specifier> <specifier>final</specifier> <name>void</name></type> <name>setLockDir</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>lockDir</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
     <if_stmt><if>if <condition>(<expr><name><name>this</name><operator>.</operator><name>lockDir</name></name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content>
       <throw>throw <expr><operator>new</operator> <call><name>IllegalStateException</name><argument_list>(<argument><expr><literal type="string">"You can set the lock directory for this factory only once."</literal></expr></argument>)</argument_list></call></expr>;</throw></block_content></block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><name>lockDir</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>createDirectories</name></name><argument_list>(<argument><expr><name>lockDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
     <expr_stmt><expr><name><name>this</name><operator>.</operator><name>lockDir</name></name> <operator>=</operator> <name>lockDir</name></expr>;</expr_stmt>
   </block_content>}</block></function>
   
   <comment type="block" format="javadoc">/**
    * Retrieve the lock directory.
    */</comment>
  <function><type><specifier>public</specifier> <name>File</name></type> <name>getLockDir</name><parameter_list>()</parameter_list> <block>{<block_content>
  <function><type><specifier>public</specifier> <name>Path</name></type> <name>getLockDir</name><parameter_list>()</parameter_list> <block>{<block_content>
     <return>return <expr><name>lockDir</name></expr>;</return>
   </block_content>}</block></function>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>FileSwitchDirectory</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>FileSwitchDirectory</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">9b13f65076e</literal><operator>..</operator><name>db27395034d</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>FileSwitchDirectory</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>FileSwitchDirectory</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>AtomicMoveNotSupportedException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>NoSuchFileException</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collection</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">82</literal></expr><operator>,</operator><expr><literal type="number">32</literal> <operator>+</operator><literal type="number">83</literal></expr><operator>,</operator><expr><literal type="number">32</literal> @@ <specifier>public</specifier> <name>class</name> <name>FileSwitchDirectory</name> extends <name>BaseDirectory</name> <block>{
     <comment type="line">// LUCENE-3380: either or both of our dirs could be FSDirs,</comment>
     <comment type="line">// but if one underlying delegate is an FSDir and mkdirs() has not</comment>
     <comment type="line">// yet been called, because so far everything is written to the other,</comment>
    <comment type="line">// in this case, we don't want to throw a NoSuchDirectoryException</comment>
    <expr><name>NoSuchDirectoryException</name> <name>exc</name> <operator>=</operator> <literal type="null">null</literal></expr>;
    <comment type="line">// in this case, we don't want to throw a NoSuchFileException</comment>
    <name>NoSuchFileException</name> <name>exc</name> <operator>=</operator> <literal type="null">null</literal></block></expr>;</expr_stmt>
     <try>try <block>{<block_content>
       <for>for<control>(<init><decl><type><name>String</name></type> <name>f</name> <range>: <expr><call><name><name>primaryDir</name><operator>.</operator><name>listAll</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
         <expr_stmt><expr><call><name><name>files</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></for>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>NoSuchDirectoryException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
    </block_content>}</block></catch> <catch>catch <parameter_list>(<parameter><decl><type><name>NoSuchFileException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
       <expr_stmt><expr><name>exc</name> <operator>=</operator> <name>e</name></expr>;</expr_stmt>
     </block_content>}</block></catch></try>
     <try>try <block>{<block_content>
       <for>for<control>(<init><decl><type><name>String</name></type> <name>f</name> <range>: <expr><call><name><name>secondaryDir</name><operator>.</operator><name>listAll</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
         <expr_stmt><expr><call><name><name>files</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></for>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>NoSuchDirectoryException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <comment type="line">// we got NoSuchDirectoryException from both dirs</comment>
    </block_content>}</block></catch> <catch>catch <parameter_list>(<parameter><decl><type><name>NoSuchFileException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <comment type="line">// we got NoSuchFileException from both dirs</comment>
       <comment type="line">// rethrow the first.</comment>
       <if_stmt><if>if <condition>(<expr><name>exc</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
         <throw>throw <expr><name>exc</name></expr>;</throw>
       </block_content>}</block></if></if_stmt>
      <comment type="line">// we got NoSuchDirectoryException from the secondary,</comment>
      <comment type="line">// we got NoSuchFileException from the secondary,</comment>
       <comment type="line">// and the primary is empty.</comment>
       <if_stmt><if>if <condition>(<expr><call><name><name>files</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
         <throw>throw <expr><name>e</name></expr>;</throw>
       </block_content>}</block></if></if_stmt>
     </block_content>}</block></catch></try>
    <comment type="line">// we got NoSuchDirectoryException from the primary,</comment>
    <comment type="line">// we got NoSuchFileException from the primary,</comment>
     <comment type="line">// and the secondary is empty.</comment>
     <if_stmt><if>if <condition>(<expr><name>exc</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>files</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
       <throw>throw <expr><name>exc</name></expr>;</throw>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>LockStressTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>LockStressTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>bba49c0e634</name><operator>..</operator><literal type="number">01c6061441b</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>LockStressTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>LockStressTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name></name>;</package>
  <expr_stmt><expr><operator>*</operator><operator>/</operator></expr></expr_stmt>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>OutputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>InetSocketAddress</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>Socket</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Paths</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Random</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
@@ -133,7 +134,7 @@ public class LockStressTest {
       throw new IOException("Cannot instantiate lock factory " + lockFactoryClassName);
     }
 
    File lockDir = new File(lockDirName);
    Path lockDir = Paths.get(lockDirName);
 
     if (lockFactory instanceof FSLockFactory) {
       ((FSLockFactory) lockFactory).setLockDir(lockDir);
diff --git a/lucene/core/src/java/org/apache/lucene/store/MMapDirectory.java b/lucene/core/src/java/org/apache/lucene/store/MMapDirectory.java
index 27efd2b7691..0cee51565ef 100644
-- a/lucene/core/src/java/org/apache/lucene/store/MMapDirectory.java
++ b/lucene/core/src/java/org/apache/lucene/store/MMapDirectory.java
@@ -18,11 +18,11 @@ package org.apache.lucene.store;
  */</comment>
  
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>ByteBuffer</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>channels</name><operator>.</operator><name>ClosedChannelException</name></name>;</import> <comment type="line">// javadoc @link</comment>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>channels</name><operator>.</operator><name>FileChannel</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>channels</name><operator>.</operator><name>FileChannel</name><operator>.</operator><name>MapMode</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>StandardOpenOption</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>security</name><operator>.</operator><name>AccessController</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">44</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">44</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>Constants</name></name>;</import>
  <expr_stmt><expr><operator>*</operator> <name>be</name> <name>sure</name> <name>your</name> <name>have</name> <name>plenty</name> <name>of</name> <name>virtual</name> <name>address</name> <name>space</name></expr><operator>,</operator> <expr><name><name>e</name><operator>.</operator><name>g</name><operator>.</operator> <name>by</name></name>
  <operator>*</operator> <name>using</name> <name>a</name> <literal type="number">64</literal> <name>bit</name> <name>JRE</name></expr><operator>,</operator> <expr><name>or</name> <name>a</name> <literal type="number">32</literal> <name>bit</name> <name>JRE</name> <name>with</name> <name>indexes</name> <name>that</name> <name>are</name>
  <operator>*</operator> <name>guaranteed</name> <name>to</name> <name>fit</name> <name>within</name> <name>the</name> <name>address</name> <name><name>space</name><operator>.</operator></name>
 * <name>On</name> <literal type="number">32</literal> <name>bit</name> <name>platforms</name> <name>also</name> <name>consult</name> <block>{@<expr><name>link</name> <operator>#</operator><call><name>MMapDirectory</name><argument_list>(<argument><expr><name>File</name></expr></argument>, <argument><expr><name>LockFactory</name></expr></argument>, <argument><expr><name>int</name></expr></argument>)</argument_list></call></expr>}</block>
 <operator>*</operator> <name>On</name> <literal type="number">32</literal> <name>bit</name> <name>platforms</name> <name>also</name> <name>consult</name> <block>{@<expr><name>link</name> <operator>#</operator><call><name>MMapDirectory</name><argument_list>(<argument><expr><name>Path</name></expr></argument>, <argument><expr><name>LockFactory</name></expr></argument>, <argument><expr><name>int</name></expr></argument>)</argument_list></call></expr>}</block>
  <operator>*</operator></expr></expr_stmt> <if_stmt><if>if you have problems with mmap failing because of fragmented
  * address space. If you get an OutOfMemoryException<operator>,</operator> <expr_stmt><expr><name>it</name> <name>is</name> <name>recommended</name>
  <operator>*</operator> <name>to</name> <name>reduce</name> <name>the</name> <name>chunk</name> <name>size</name></expr><operator>,</operator> <expr><name>until</name> <name>it</name> <name><name>works</name><operator>.</operator></name>
@@ <operator>-</operator><literal type="number">83</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">83</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>MMapDirectory</name> extends <name>FSDirectory</name> <block>{
   <expr><specifier>private</specifier> <name>boolean</name> <name>useUnmapHack</name> <operator>=</operator> <name>UNMAP_SUPPORTED</name></expr>;
   <comment type="block" format="javadoc">/** 
    * Default max chunk size.
   * @see #MMapDirectory(File, LockFactory, int)
   * @see #MMapDirectory(Path, LockFactory, int)
    */</comment>
   <specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>int</name> <name>DEFAULT_MAX_BUFF</name> <operator>=</operator> <ternary><condition><expr><name><name>Constants</name><operator>.</operator><name>JRE_IS_64BIT</name></name></expr> ?</condition><then> <expr><operator>(</operator><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">30</literal><operator>)</operator></expr> </then><else>: <expr><operator>(</operator><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">28</literal><operator>)</operator></expr></else></ternary></block></expr>;</expr_stmt></if></if_stmt>
   <decl_stmt><decl><type><specifier>final</specifier> <name>int</name></type> <name>chunkSizePower</name></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">95</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">95</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>MMapDirectory</name> extends <name>FSDirectory</name> <block>{
    <expr><operator>*</operator> <operator>(</operator><block>{@<expr><name>link</name> <name>NativeFSLockFactory</name></expr>}</block><operator>)</operator></expr>;
    <operator>*</operator> @<throws>throws <argument><expr><name>IOException</name></expr></argument></throws></block></expr></expr_stmt> <if_stmt><if>if there is a low-level I/O error
    */
  public MMapDirectory<condition>(<expr><name>File</name> <name>path</name></expr><operator>,</operator> <expr><name>LockFactory</name> <name>lockFactory</name></expr>)</condition><block type="pseudo"><block_content> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>public</specifier> <call><name>MMapDirectory</name><argument_list>(<argument><expr><name>Path</name> <name>path</name></expr></argument>, <argument><expr><name>LockFactory</name> <name>lockFactory</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><call><name>this</name><argument_list>(<argument><expr><name>path</name></expr></argument>, <argument><expr><name>lockFactory</name></expr></argument>, <argument><expr><name>DEFAULT_MAX_BUFF</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws><empty_stmt>;</empty_stmt></block_content></block></if></if_stmt>
   </block_content>}</block></if></if_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">104</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">104</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>MMapDirectory</name> extends <name>FSDirectory</name> <block>{
    <expr><operator>*</operator> @<name>param</name> <name>path</name> <name>the</name> <name>path</name> <name>of</name> <name>the</name> <name>directory</name>
    <operator>*</operator> @<throws>throws <argument><expr><name>IOException</name></expr></argument></throws></expr> <if_stmt><if>if there is a low-level I/O error
    */
  public MMapDirectory<condition>(<expr><name>File</name> <name>path</name></expr>)</condition><block type="pseudo"><block_content> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>public</specifier> <call><name>MMapDirectory</name><argument_list>(<argument><expr><name>Path</name> <name>path</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><call><name>this</name><argument_list>(<argument><expr><name>path</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws><empty_stmt>;</empty_stmt></block_content></block></if></if_stmt>
   }</block></expr></expr_stmt>
   
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">128</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">128</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>MMapDirectory</name> extends <name>FSDirectory</name> <block>{
    <expr><operator>*</operator> <operator>&lt;</operator><name>b</name><operator>&gt;</operator><name>Please</name> <name>note</name><operator>:</operator><operator>&lt;</operator><operator>/</operator><name>b</name><operator>&gt;</operator> <name>The</name> <name>chunk</name> <name>size</name> <name>is</name> <name>always</name> <name>rounded</name> <name>down</name> <name>to</name> <name>a</name> <name>power</name> <name>of</name> <literal type="number">2.</literal>
    <operator>*</operator> @<throws>throws <argument><expr><name>IOException</name></expr></argument></throws></expr> <if_stmt><if>if there is a low-level I/O error
    */
  public MMapDirectory<condition>(<expr><name>File</name> <name>path</name></expr><operator>,</operator> <expr><name>LockFactory</name> <name>lockFactory</name></expr><operator>,</operator> <expr><name>int</name> <name>maxChunkSize</name></expr>)</condition><block type="pseudo"><block_content> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>public</specifier> <call><name>MMapDirectory</name><argument_list>(<argument><expr><name>Path</name> <name>path</name></expr></argument>, <argument><expr><name>LockFactory</name> <name>lockFactory</name></expr></argument>, <argument><expr><name>int</name> <name>maxChunkSize</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><call><name>super</name><argument_list>(<argument><expr><name>path</name></expr></argument>, <argument><expr><name>lockFactory</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws><empty_stmt>;</empty_stmt></block_content></block></if></if_stmt></block></expr></expr_stmt>
     <if_stmt><if>if <condition>(<expr><name>maxChunkSize</name> <operator>&lt;=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
       <throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><literal type="string">"Maximum chunk size for mmap must be &gt;0"</literal></expr></argument>)</argument_list></call></expr>;</throw>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">182</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">182</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>MMapDirectory</name> extends <name>FSDirectory</name> <block>{
   
   <comment type="block" format="javadoc">/**
    * Returns the current mmap chunk size.
   * @see #MMapDirectory(File, LockFactory, int)
   * @see #MMapDirectory(Path, LockFactory, int)
    */</comment>
   <expr><specifier>public</specifier> <name>final</name> <name>int</name> <call><name>getMaxChunkSize</name><argument_list>()</argument_list></call> <block>{
     <return>return <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <name>chunkSizePower</name></expr>;</return>
@@ <operator>-</operator><literal type="number">192</literal><operator>,</operator><literal type="number">9</literal> <operator>+</operator><literal type="number">192</literal><operator>,</operator><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>MMapDirectory</name> extends <name>FSDirectory</name> <block>{
   @<expr><name>Override</name>
   <specifier>public</specifier> <name>IndexInput</name> <call><name>openInput</name><argument_list>(<argument><expr><name>String</name> <name>name</name></expr></argument>, <argument><expr><name>IOContext</name> <name>context</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><call><name>ensureOpen</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>File</name> <name>file</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>getDirectory</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>name</name></expr></argument>)</argument_list></call></block></block></expr>;</block></expr></expr_stmt>
    <try>try <init>(<decl><type><name>FileChannel</name></type> <name>c</name> <init>= <expr><call><name><name>FileChannel</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><call><name><name>file</name><operator>.</operator><name>toPath</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>StandardOpenOption</name><operator>.</operator><name>READ</name></name></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
      <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>resourceDescription</name> <init>= <expr><literal type="string">"MMapIndexInput(path=\""</literal> <operator>+</operator> <call><name><name>file</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"\")"</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>path</name> <init>= <expr><call><name><name>directory</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <try>try <init>(<decl><type><name>FileChannel</name></type> <name>c</name> <init>= <expr><call><name><name>FileChannel</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>, <argument><expr><name><name>StandardOpenOption</name><operator>.</operator><name>READ</name></name></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
      <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>resourceDescription</name> <init>= <expr><literal type="string">"MMapIndexInput(path=\""</literal> <operator>+</operator> <call><name><name>path</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"\")"</literal></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><specifier>final</specifier> <name>boolean</name></type> <name>useUnmap</name> <init>= <expr><call><name>getUseUnmap</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <return>return <expr><call><name><name>ByteBufferIndexInput</name><operator>.</operator><name>newInstance</name></name><argument_list>(<argument><expr><name>resourceDescription</name></expr></argument>,
           <argument><expr><call><name>map</name><argument_list>(<argument><expr><name>resourceDescription</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><call><name><name>c</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, 
<argument><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>NIOFSDirectory</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>NIOFSDirectory</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">54202c591e0</literal><operator>..</operator><name>a5d784b2e1a</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>NIOFSDirectory</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>NIOFSDirectory</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr></argument>,<argument><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">17</literal></expr></argument>,<argument><expr><literal type="number">12</literal> @@</expr></argument></argument_list></call></expr></return> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>EOFException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>ByteBuffer</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>channels</name><operator>.</operator><name>ClosedChannelException</name></name>;</import> <comment type="line">// javadoc @link</comment>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>channels</name><operator>.</operator><name>FileChannel</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>StandardOpenOption</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>Future</name></name>;</import> <comment type="line">// javadoc</comment>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">60</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">60</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>NIOFSDirectory</name> extends <name>FSDirectory</name> <block>{
    <expr><operator>*</operator> <operator>(</operator><block>{@<expr><name>link</name> <name>NativeFSLockFactory</name></expr>}</block><operator>)</operator></expr>;
    <operator>*</operator> @<throws>throws <argument><expr><name>IOException</name></expr></argument></throws></block></expr></expr_stmt> <if_stmt><if>if there is a low-level I/O error
    */
  public NIOFSDirectory<condition>(<expr><name>File</name> <name>path</name></expr><operator>,</operator> <expr><name>LockFactory</name> <name>lockFactory</name></expr>)</condition><block type="pseudo"><block_content> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>public</specifier> <call><name>NIOFSDirectory</name><argument_list>(<argument><expr><name>Path</name> <name>path</name></expr></argument>, <argument><expr><name>LockFactory</name> <name>lockFactory</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><call><name>super</name><argument_list>(<argument><expr><name>path</name></expr></argument>, <argument><expr><name>lockFactory</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws><empty_stmt>;</empty_stmt></block_content></block></if></if_stmt>
   </block_content>}</block></try>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">69</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">69</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>NIOFSDirectory</name> extends <name>FSDirectory</name> <block>{
    <expr><operator>*</operator> @<name>param</name> <name>path</name> <name>the</name> <name>path</name> <name>of</name> <name>the</name> <name>directory</name>
    <operator>*</operator> @<throws>throws <argument><expr><name>IOException</name></expr></argument></throws></expr> <if_stmt><if>if there is a low-level I/O error
    */
  public NIOFSDirectory<condition>(<expr><name>File</name> <name>path</name></expr>)</condition><block type="pseudo"><block_content> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>public</specifier> <call><name>NIOFSDirectory</name><argument_list>(<argument><expr><name>Path</name> <name>path</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><call><name>super</name><argument_list>(<argument><expr><name>path</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws><empty_stmt>;</empty_stmt></block_content></block></if></if_stmt>
   }</block></expr></expr_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">77</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">77</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>NIOFSDirectory</name> extends <name>FSDirectory</name> <block>{
   @<expr><name>Override</name>
   <specifier>public</specifier> <name>IndexInput</name> <call><name>openInput</name><argument_list>(<argument><expr><name>String</name> <name>name</name></expr></argument>, <argument><expr><name>IOContext</name> <name>context</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><call><name>ensureOpen</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>File</name> <name>path</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>getDirectory</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>name</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>FileChannel</name></type> <name>fc</name> <init>= <expr><call><name><name>FileChannel</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><call><name><name>path</name><operator>.</operator><name>toPath</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>StandardOpenOption</name><operator>.</operator><name>READ</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>path</name> <init>= <expr><call><name>getDirectory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>resolve</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>FileChannel</name></type> <name>fc</name> <init>= <expr><call><name><name>FileChannel</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>, <argument><expr><name><name>StandardOpenOption</name><operator>.</operator><name>READ</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <return>return <expr><operator>new</operator> <call><name>NIOFSIndexInput</name><argument_list>(<argument><expr><literal type="string">"NIOFSIndexInput(path=\""</literal> <operator>+</operator> <name>path</name> <operator>+</operator> <literal type="string">"\")"</literal></expr></argument>, <argument><expr><name>fc</name></expr></argument>, <argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></try>
   
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>NRTCachingDirectory</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>NRTCachingDirectory</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">351445686a8</literal><operator>..</operator><name>c55d5aea3c0</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>NRTCachingDirectory</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>NRTCachingDirectory</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name></name>;</package>
  <expr_stmt><expr><operator>*</operator><operator>/</operator></expr></expr_stmt>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collection</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexFileNames</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>RAMDirectory</name></name>;</import>      <comment type="line">// javadocs</comment>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>Accountable</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>IOUtils</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">49</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">49</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>IOUtils</name></name>;</import>
  <expr_stmt><expr><operator>*</operator> <operator>&lt;</operator><name>p</name><operator>&gt;</operator><name>Here</name><literal type="char">'s a simple example usage:
  *
  * &lt;pre class="prettyprint"&gt;
 *   Directory fsDir = FSDirectory.open(new File("/path/to/index"));
 *   Directory fsDir = FSDirectory.open(new File("/path/to/index").toPath());
  *   NRTCachingDirectory cachedFSDir = new NRTCachingDirectory(fsDir, 5.0, 60.0);
  *   IndexWriterConfig conf = new IndexWriterConfig(analyzer);
  *   IndexWriter writer = new IndexWriter(cachedFSDir, conf);
@@ -96,22 +96,10 @@ public class NRTCachingDirectory extends FilterDirectory implements Accountable
     for(String f : cache.listAll()) {
       files.add(f);
     }
    // LUCENE-1468: our NRTCachingDirectory will actually exist (RAMDir!),
    // but if the underlying delegate is an FSDir and mkdirs() has not
    // yet been called, because so far everything is a cached write,
    // in this case, we don'</literal><name>t</name> <name>want</name> <name>to</name> <throw>throw <argument_list>a <argument><expr><name>NoSuchDirectoryException</name></expr></argument></argument_list></throw></expr></expr_stmt>
    <try>try <block>{<block_content>
      <for>for<control>(<init><decl><type><name>String</name></type> <name>f</name> <range>: <expr><call><name><name>in</name><operator>.</operator><name>listAll</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
        <comment type="line">// Cannot do this -- if lucene calls createOutput but</comment>
        <comment type="line">// file already exists then this falsely trips:</comment>
        <comment type="line">//assert !files.contains(f): "file \"" + f + "\" is in both dirs";</comment>
        <expr_stmt><expr><call><name><name>files</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></for>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>NoSuchDirectoryException</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <comment type="line">// however, if there are no cached files, then the directory truly</comment>
      <comment type="line">// does not "exist"</comment>
      <if_stmt><if>if <condition>(<expr><call><name><name>files</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
        <throw>throw <expr><name>ex</name></expr>;</throw>
    <for>for<control>(<init><decl><type><name>String</name></type> <name>f</name> <range>: <expr><call><name><name>in</name><operator>.</operator><name>listAll</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>files</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <throw>throw <expr><operator>new</operator> <call><name>IllegalStateException</name><argument_list>(<argument><expr><literal type="string">"file: "</literal> <operator>+</operator> <name>in</name> <operator>+</operator> <literal type="string">" appears both in delegate and in cache: "</literal> <operator>+</operator>
                                        <literal type="string">"cache="</literal> <operator>+</operator> <call><name><name>Arrays</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><call><name><name>cache</name><operator>.</operator><name>listAll</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="string">",delegate="</literal> <operator>+</operator> <call><name><name>Arrays</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><call><name><name>in</name><operator>.</operator><name>listAll</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
       </block_content>}</block></if></if_stmt>
     </block_content>}</block></for>
     <return>return <expr><call><name><name>files</name><operator>.</operator><name>toArray</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>String</name><index>[<expr><call><name><name>files</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>NativeFSLockFactory</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>NativeFSLockFactory</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>b772aca9d61</name><operator>..</operator><name>ee1802e1d71</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>NativeFSLockFactory</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>NativeFSLockFactory</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name></name>;</package>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>channels</name><operator>.</operator><name>FileChannel</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>channels</name><operator>.</operator><name>FileLock</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>channels</name><operator>.</operator><name>OverlappingFileLockException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>StandardOpenOption</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">77</literal></expr><operator>,</operator><expr><literal type="number">18</literal> <operator>+</operator><literal type="number">79</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>NativeFSLockFactory</name> extends <name>FSLockFactory</name> <block>{
    <expr><operator>*</operator> <name>directory</name> <name><name>itself</name><operator>.</operator> <name>Be</name></name> <name>sure</name> <name>to</name> <name>create</name> <name>one</name> <name>instance</name></expr> <for>for each directory
    * your create!
    */
  public NativeFSLockFactory<control>(<init><expr/></init>)</control> <block>{<block_content>
    <expr_stmt><expr><call><name>this</name><argument_list>(<argument><expr><operator>(</operator><name>File</name><operator>)</operator> <literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></for>

  <comment type="block" format="javadoc">/**
   * Create a NativeFSLockFactory instance, storing lock
   * files into the specified lockDirName:
   *
   * @param lockDirName where lock files are created.
   */</comment>
  <specifier>public</specifier> <call><name>NativeFSLockFactory</name><argument_list>(<argument><expr><name>String</name> <name>lockDirName</name></expr></argument>)</argument_list></call> <block>{
    <expr><call><name>this</name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>lockDirName</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
  <specifier>public</specifier> <call><name>NativeFSLockFactory</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><call><name>this</name><argument_list>(<argument><expr><operator>(</operator><name>Path</name><operator>)</operator> <literal type="null">null</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></block></block></expr>;</expr_stmt>
   </block_content>}</block></if></if_stmt>
 
   <comment type="block" format="javadoc">/**
@@ -97,7 +89,7 @@ public class NativeFSLockFactory extends FSLockFactory {
    * 
    * @param lockDir where lock files are created.
    */</comment>
  <constructor><specifier>public</specifier> <name>NativeFSLockFactory</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>lockDir</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <constructor><specifier>public</specifier> <name>NativeFSLockFactory</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>lockDir</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
     <expr_stmt><expr><call><name>setLockDir</name><argument_list>(<argument><expr><name>lockDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></constructor>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">118</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">110</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ <name>class</name> <name>NativeFSLock</name> extends <name>Lock</name> <block>{
 
   <expr><specifier>private</specifier> <name>FileChannel</name> <name>channel</name></expr>;
   <specifier>private</specifier> <name>FileLock</name> <name>lock</name></block></expr>;</expr_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>File</name></type> <name>path</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>File</name></type> <name>lockDir</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>Path</name></type> <name>path</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>Path</name></type> <name>lockDir</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>LOCK_HELD</name> <init>= <expr><call><name><name>Collections</name><operator>.</operator><name>synchronizedSet</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
 
  <constructor><specifier>public</specifier> <name>NativeFSLock</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>lockDir</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>lockFileName</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <constructor><specifier>public</specifier> <name>NativeFSLock</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>lockDir</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>lockFileName</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <expr_stmt><expr><name><name>this</name><operator>.</operator><name>lockDir</name></name> <operator>=</operator> <name>lockDir</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>path</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>lockDir</name></expr></argument>, <argument><expr><name>lockFileName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>path</name> <operator>=</operator> <call><name><name>lockDir</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><name>lockFileName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></constructor>
 
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">138</literal></expr><operator>,</operator><expr><literal type="number">16</literal> <operator>+</operator><literal type="number">130</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ <name>class</name> <name>NativeFSLock</name> extends <name>Lock</name> <block>{
     }</block></expr></expr_stmt>
 
     <comment type="line">// Ensure that lockDir exists and is a directory.</comment>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>lockDir</name><operator>.</operator><name>exists</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>lockDir</name><operator>.</operator><name>mkdirs</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
        <throw>throw <expr><operator>new</operator> <call><name>IOException</name><argument_list>(<argument><expr><literal type="string">"Cannot create directory: "</literal> <operator>+</operator>
            <call><name><name>lockDir</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw></block_content></block></if></if_stmt>
    </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><operator>!</operator><call><name><name>lockDir</name><operator>.</operator><name>isDirectory</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <comment type="line">// TODO: NoSuchDirectoryException instead?</comment>
      <throw>throw <expr><operator>new</operator> <call><name>IOException</name><argument_list>(<argument><expr><literal type="string">"Found regular file where directory expected: "</literal> <operator>+</operator> 
          <call><name><name>lockDir</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
    <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>createDirectories</name></name><argument_list>(<argument><expr><name>lockDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <try>try <block>{<block_content>
      <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>createFile</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>ignore</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <comment type="line">// we must create the file to have a truly canonical path.</comment>
      <comment type="line">// if its already created, we don't care. if it cant be created, it will fail below.</comment>
     </block_content>}</block></catch></try>
    <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>canonicalPath</name> <init>= <expr><call><name><name>path</name><operator>.</operator><name>getCanonicalPath</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>Path</name></type> <name>canonicalPath</name> <init>= <expr><call><name><name>path</name><operator>.</operator><name>toRealPath</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <comment type="line">// Make sure nobody else in-process has this lock held</comment>
     <comment type="line">// already, and, mark it held if not:</comment>
     <comment type="line">// This is a pretty crazy workaround for some documented</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">162</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">152</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <name>class</name> <name>NativeFSLock</name> extends <name>Lock</name> <block>{
     <comment type="line">// is that we can't re-obtain the lock in the same JVM but from a different process if that happens. Nevertheless</comment>
     <comment type="line">// this is super trappy. See LUCENE-5738</comment>
     <expr><name>boolean</name> <name>obtained</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;</block></expr></expr_stmt>
    <if_stmt><if>if <condition>(<expr><call><name><name>LOCK_HELD</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>canonicalPath</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><call><name><name>LOCK_HELD</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name><name>canonicalPath</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
       <try>try <block>{<block_content>
        <expr_stmt><expr><name>channel</name> <operator>=</operator> <call><name><name>FileChannel</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><call><name><name>path</name><operator>.</operator><name>toPath</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>StandardOpenOption</name><operator>.</operator><name>CREATE</name></name></expr></argument>, <argument><expr><name><name>StandardOpenOption</name><operator>.</operator><name>WRITE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>channel</name> <operator>=</operator> <call><name><name>FileChannel</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>, <argument><expr><name><name>StandardOpenOption</name><operator>.</operator><name>CREATE</name></name></expr></argument>, <argument><expr><name><name>StandardOpenOption</name><operator>.</operator><name>WRITE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <try>try <block>{<block_content>
           <expr_stmt><expr><name>lock</name> <operator>=</operator> <call><name><name>channel</name><operator>.</operator><name>tryLock</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
           <expr_stmt><expr><name>obtained</name> <operator>=</operator> <name>lock</name> <operator>!=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">209</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">199</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <name>class</name> <name>NativeFSLock</name> extends <name>Lock</name> <block>{
     }</block></expr></expr_stmt>
   </block_content>}</block></try>
 
  <function><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>void</name></type> <name>clearLockHeld</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>path</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>boolean</name></type> <name>remove</name> <init>= <expr><call><name><name>LOCK_HELD</name><operator>.</operator><name>remove</name></name><argument_list>(<argument><expr><call><name><name>path</name><operator>.</operator><name>getCanonicalPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <function><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>void</name></type> <name>clearLockHeld</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>path</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><name>path</name> <operator>=</operator> <call><name><name>path</name><operator>.</operator><name>toRealPath</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>boolean</name></type> <name>remove</name> <init>= <expr><call><name><name>LOCK_HELD</name><operator>.</operator><name>remove</name></name><argument_list>(<argument><expr><call><name><name>path</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <assert>assert <expr><name>remove</name> <operator>:</operator> <literal type="string">"Lock was cleared but never marked as held"</literal></expr>;</assert>
   </block_content>}</block></function>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">221</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">212</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <name>class</name> <name>NativeFSLock</name> extends <name>Lock</name> <block>{
     <comment type="line">// First a shortcut, if a lock reference in this instance is available</comment>
     <if_stmt><if>if <condition>(<expr><name>lock</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><literal type="boolean">true</literal></expr>;</return></block_content></block></if></if_stmt></block></expr></expr_stmt>
     
    <comment type="line">// Look if lock file is present; if not, there can definitely be no lock!</comment>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>path</name><operator>.</operator><name>exists</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><literal type="boolean">false</literal></expr>;</return></block_content></block></if></if_stmt>
    <comment type="line">// Look if lock file is definitely not present; if not, there can definitely be no lock!</comment>
    <if_stmt><if>if <condition>(<expr><call><name><name>Files</name><operator>.</operator><name>notExists</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><literal type="boolean">false</literal></expr>;</return></block_content></block></if></if_stmt>
     
     <comment type="line">// Try to obtain and release (if was locked) the lock</comment>
     <try>try <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>NoSuchDirectoryException</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>NoSuchDirectoryException</name><operator>.</operator><name>java</name></name>
<name>deleted</name> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <name>b9879cb0b8c</name><operator>..</operator><literal type="number">00000000000</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>NoSuchDirectoryException</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
@@ <operator>-</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">31</literal> <operator>+</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> @@</expr></expr_stmt>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name></name>;</package>

<comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileNotFoundException</name></name>;</import>

<comment type="block" format="javadoc">/**
 * This exception is thrown when you try to list a
 * non-existent directory.
 */</comment>

<class><specifier>public</specifier> class <name>NoSuchDirectoryException</name> <super_list><extends>extends <super><name>FileNotFoundException</name></super></extends></super_list> <block>{
  <constructor><specifier>public</specifier> <name>NoSuchDirectoryException</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>message</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>message</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></constructor>
}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>SimpleFSDirectory</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>SimpleFSDirectory</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">0f6e5444646</literal><operator>..</operator><name>a2dd07caaf9</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>SimpleFSDirectory</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>SimpleFSDirectory</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>EOFException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>RandomAccessFile</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 
 <comment type="block" format="javadoc">/** A straightforward implementation of {@link FSDirectory}
  *  using java.io.RandomAccessFile.  However, this class has
@@ -28,6 +29,8 @@ import java.io.RandomAccessFile;
  *  bottleneck) as it synchronizes when multiple threads
  *  read from the same file.  It's usually better to use
  *  {@link NIOFSDirectory} or {@link MMapDirectory} instead. */</comment>
<comment type="line">// TODO: we currently mandate .toFile to still use RandomAccessFile, to avoid ClosedByInterruptException.</comment>
<comment type="line">// should we change to SeekableByteChannel instead?</comment>
 <class><specifier>public</specifier> class <name>SimpleFSDirectory</name> <super_list><extends>extends <super><name>FSDirectory</name></super></extends></super_list> <block>{
     
   <comment type="block" format="javadoc">/** Create a new SimpleFSDirectory for the named location.
@@ -37,8 +40,9 @@ public class SimpleFSDirectory extends FSDirectory {
    * ({@link NativeFSLockFactory});
    * @throws IOException if there is a low-level I/O error
    */</comment>
  <constructor><specifier>public</specifier> <name>SimpleFSDirectory</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>path</name></decl></parameter>, <parameter><decl><type><name>LockFactory</name></type> <name>lockFactory</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
  <constructor><specifier>public</specifier> <name>SimpleFSDirectory</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>path</name></decl></parameter>, <parameter><decl><type><name>LockFactory</name></type> <name>lockFactory</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
     <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>path</name></expr></argument>, <argument><expr><name>lockFactory</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>path</name><operator>.</operator><name>toFile</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt> <comment type="line">// throw exception if we can't get a File for now</comment>
   </block_content>}</block></constructor>
   
   <comment type="block" format="javadoc">/** Create a new SimpleFSDirectory for the named location and {@link NativeFSLockFactory}.
@@ -46,15 +50,16 @@ public class SimpleFSDirectory extends FSDirectory {
    * @param path the path of the directory
    * @throws IOException if there is a low-level I/O error
    */</comment>
  <constructor><specifier>public</specifier> <name>SimpleFSDirectory</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>path</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
  <constructor><specifier>public</specifier> <name>SimpleFSDirectory</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>path</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
     <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>path</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>path</name><operator>.</operator><name>toFile</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt> <comment type="line">// throw exception if we can't get a File for now</comment>
   </block_content>}</block></constructor>
 
   <comment type="block" format="javadoc">/** Creates an IndexInput for the file with the given name. */</comment>
   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>public</specifier> <name>IndexInput</name></type> <name>openInput</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>name</name></decl></parameter>, <parameter><decl><type><name>IOContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
     <expr_stmt><expr><call><name>ensureOpen</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>File</name></type> <name>path</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>directory</name></expr></argument>, <argument><expr><name>name</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>File</name></type> <name>path</name> <init>= <expr><call><name><name>directory</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>RandomAccessFile</name></type> <name>raf</name> <init>= <expr><operator>new</operator> <call><name>RandomAccessFile</name><argument_list>(<argument><expr><name>path</name></expr></argument>, <argument><expr><literal type="string">"r"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <return>return <expr><operator>new</operator> <call><name>SimpleFSIndexInput</name><argument_list>(<argument><expr><literal type="string">"SimpleFSIndexInput(path=\""</literal> <operator>+</operator> <call><name><name>path</name><operator>.</operator><name>getPath</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"\")"</literal></expr></argument>, <argument><expr><name>raf</name></expr></argument>, <argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>SimpleFSLockFactory</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>SimpleFSLockFactory</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">1022b92c11a</literal><operator>..</operator><literal type="number">3dbec93493a</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>SimpleFSLockFactory</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>SimpleFSLockFactory</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name></name>;</package>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
  * &lt;p&gt;Implements {@link LockFactory} using {@link
 * File#createNewFile()}.&lt;/p&gt;
 * Files#createFile}.&lt;/p&gt;
  *
  * &lt;p&gt;&lt;b&gt;NOTE:&lt;/b&gt; the {@linkplain File#createNewFile() javadocs
  * for &lt;code&gt;File.createNewFile()&lt;/code&gt;} contain a vague
@@ -68,26 +69,18 @@ public class SimpleFSLockFactory extends FSLockFactory {
    * directory itself. Be sure to create one instance for each directory
    * your create!
    */</comment>
  <constructor><specifier>public</specifier> <name>SimpleFSLockFactory</name><parameter_list>()</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>this</name><argument_list>(<argument><expr><operator>(</operator><name>File</name><operator>)</operator> <literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <constructor><specifier>public</specifier> <name>SimpleFSLockFactory</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name>this</name><argument_list>(<argument><expr><operator>(</operator><name>Path</name><operator>)</operator> <literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></constructor>
 
   <comment type="block" format="javadoc">/**
   * Instantiate using the provided directory (as a File instance).
   * Instantiate using the provided directory (as a Path instance).
    * @param lockDir where lock files should be created.
    */</comment>
  <constructor><specifier>public</specifier> <name>SimpleFSLockFactory</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>lockDir</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <constructor><specifier>public</specifier> <name>SimpleFSLockFactory</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>lockDir</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
     <expr_stmt><expr><call><name>setLockDir</name><argument_list>(<argument><expr><name>lockDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></constructor>
 
  <comment type="block" format="javadoc">/**
   * Instantiate using the provided directory name (String).
   * @param lockDirName where lock files should be created.
   */</comment>
  <constructor><specifier>public</specifier> <name>SimpleFSLockFactory</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>lockDirName</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>setLockDir</name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>lockDirName</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></constructor>

   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>public</specifier> <name>Lock</name></type> <name>makeLock</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>lockName</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <if_stmt><if>if <condition>(<expr><name>lockPrefix</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">98</literal></expr><operator>,</operator><expr><literal type="number">42</literal> <operator>+</operator><literal type="number">91</literal></expr><operator>,</operator><expr><literal type="number">29</literal> @@ <specifier>public</specifier> <name>class</name> <name>SimpleFSLockFactory</name> extends <name>FSLockFactory</name> <block>{
 
   @<expr><name>Override</name>
   <specifier>public</specifier> <name>void</name> <call><name>clearLock</name><argument_list>(<argument><expr><name>String</name> <name>lockName</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr>
    <if_stmt><if>if <condition>(<expr><call><name><name>lockDir</name><operator>.</operator><name>exists</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><name>lockPrefix</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>lockName</name> <operator>=</operator> <name>lockPrefix</name> <operator>+</operator> <literal type="string">"-"</literal> <operator>+</operator> <name>lockName</name></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
      <decl_stmt><decl><type><name>File</name></type> <name>lockFile</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>lockDir</name></expr></argument>, <argument><expr><name>lockName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>deleteIfExists</name></name><argument_list>(<argument><expr><call><name><name>lockFile</name><operator>.</operator><name>toPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>lockPrefix</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>lockName</name> <operator>=</operator> <name>lockPrefix</name> <operator>+</operator> <literal type="string">"-"</literal> <operator>+</operator> <name>lockName</name></expr>;</expr_stmt>
     </block_content>}</block></if></if_stmt>
    <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>deleteIfExists</name></name><argument_list>(<argument><expr><call><name><name>lockDir</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><name>lockName</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></if></if_stmt>
 }</block></expr></expr_stmt>
 
 <class>class <name>SimpleFSLock</name> <super_list><extends>extends <super><name>Lock</name></super></extends></super_list> <block>{
 
  <decl_stmt><decl><type><name>File</name></type> <name>lockFile</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>File</name></type> <name>lockDir</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>Path</name></type> <name>lockFile</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>Path</name></type> <name>lockDir</name></decl>;</decl_stmt>
 
  <constructor><specifier>public</specifier> <name>SimpleFSLock</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>lockDir</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>lockFileName</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <constructor><specifier>public</specifier> <name>SimpleFSLock</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>lockDir</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>lockFileName</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <expr_stmt><expr><name><name>this</name><operator>.</operator><name>lockDir</name></name> <operator>=</operator> <name>lockDir</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>lockFile</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>lockDir</name></expr></argument>, <argument><expr><name>lockFileName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>lockFile</name> <operator>=</operator> <call><name><name>lockDir</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><name>lockFileName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></constructor>
 
   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>public</specifier> <name>boolean</name></type> <name>obtain</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>

    <comment type="line">// Ensure that lockDir exists and is a directory:</comment>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>lockDir</name><operator>.</operator><name>exists</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>lockDir</name><operator>.</operator><name>mkdirs</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
        <throw>throw <expr><operator>new</operator> <call><name>IOException</name><argument_list>(<argument><expr><literal type="string">"Cannot create directory: "</literal> <operator>+</operator>
                              <call><name><name>lockDir</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw></block_content></block></if></if_stmt>
    </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><operator>!</operator><call><name><name>lockDir</name><operator>.</operator><name>isDirectory</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <comment type="line">// TODO: NoSuchDirectoryException instead?</comment>
      <throw>throw <expr><operator>new</operator> <call><name>IOException</name><argument_list>(<argument><expr><literal type="string">"Found regular file where directory expected: "</literal> <operator>+</operator> 
                            <call><name><name>lockDir</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></if></if_stmt>
    
     <try>try <block>{<block_content>
      <return>return <expr><call><name><name>lockFile</name><operator>.</operator><name>createNewFile</name></name><argument_list>()</argument_list></call></expr>;</return>
      <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>createDirectories</name></name><argument_list>(<argument><expr><name>lockDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>createFile</name></name><argument_list>(<argument><expr><name>lockFile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <return>return <expr><literal type="boolean">true</literal></expr>;</return>
     </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>ioe</name></decl></parameter>)</parameter_list> <block>{<block_content>
       <comment type="line">// On Windows, on concurrent createNewFile, the 2nd process gets "access denied".</comment>
       <comment type="line">// In that case, the lock was not aquired successfully, so return false.</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">148</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">128</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <name>class</name> <name>SimpleFSLock</name> extends <name>Lock</name> <block>{
   <expr><specifier>public</specifier> <name>void</name> <call><name>close</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>LockReleaseFailedException</name> <block>{</block></expr></argument></throws></expr>
     <comment type="line">// TODO: wierd that clearLock() throws the raw IOException...</comment>
     <try>try <block>{<block_content>
      <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>deleteIfExists</name></name><argument_list>(<argument><expr><call><name><name>lockFile</name><operator>.</operator><name>toPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>deleteIfExists</name></name><argument_list>(<argument><expr><name>lockFile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Throwable</name></type> <name>cause</name></decl></parameter>)</parameter_list> <block>{<block_content>
       <throw>throw <expr><operator>new</operator> <call><name>LockReleaseFailedException</name><argument_list>(<argument><expr><literal type="string">"failed to delete "</literal> <operator>+</operator> <name>lockFile</name></expr></argument>, <argument><expr><name>cause</name></expr></argument>)</argument_list></call></expr>;</throw>
     </block_content>}</block></catch></try>
@@ <operator>-</operator><literal type="number">156</literal><operator>,</operator><literal type="number">7</literal> <operator>+</operator><literal type="number">136</literal><operator>,</operator><literal type="number">7</literal> @@ <name>class</name> <name>SimpleFSLock</name> extends <name>Lock</name> <block>{
 
   @<expr><name>Override</name>
   <specifier>public</specifier> <name>boolean</name> <call><name>isLocked</name><argument_list>()</argument_list></call> <block>{
    <return>return <expr><call><name><name>lockFile</name><operator>.</operator><name>exists</name></name><argument_list>()</argument_list></call></expr>;</return></block></expr>
    <return>return <expr><call><name><name>Files</name><operator>.</operator><name>exists</name></name><argument_list>(<argument><expr><name>lockFile</name></expr></argument>)</argument_list></call></expr>;</return>
   }</block>
 
   @<name>Override</name>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>CommandLineUtil</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>CommandLineUtil</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>c8e5ef55e29</name><operator>..</operator><name>b33b71831a4</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>CommandLineUtil</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>CommandLineUtil</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal><operator>,</operator><literal type="number">9</literal> <operator>+</operator><literal type="number">17</literal><operator>,</operator><literal type="number">9</literal> @@</block></expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>reflect</name><operator>.</operator><name>Constructor</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>reflect</name><operator>.</operator><name>InvocationTargetException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>Directory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>FSDirectory</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">37</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">37</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>CommandLineUtil</name> <block>{
   <comment type="block" format="javadoc">/**
    * Creates a specific FSDirectory instance starting from its class name
    * @param clazzName The name of the FSDirectory class to load
   * @param file The file to be used as parameter constructor
   * @param path The path to be used as parameter constructor
    * @return the new FSDirectory instance
    */</comment>
  <expr><specifier>public</specifier> <specifier>static</specifier> <name>FSDirectory</name> <call><name>newFSDirectory</name><argument_list>(<argument><expr><name>String</name> <name>clazzName</name></expr></argument>, <argument><expr><name>File</name> <name>file</name></expr></argument>)</argument_list></call> <block>{
  <expr><specifier>public</specifier> <specifier>static</specifier> <name>FSDirectory</name> <call><name>newFSDirectory</name><argument_list>(<argument><expr><name>String</name> <name>clazzName</name></expr></argument>, <argument><expr><name>Path</name> <name>path</name></expr></argument>)</argument_list></call> <block>{
     <try>try <block>{<block_content>
       <decl_stmt><decl><type><specifier>final</specifier> <name><name>Class</name><argument_list type="generic">&lt;<argument><name>?</name> <extends>extends <name>FSDirectory</name></extends></argument>&gt;</argument_list></name></type> <name>clazz</name> <init>= <expr><call><name>loadFSDirectoryClass</name><argument_list>(<argument><expr><name>clazzName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <return>return <expr><call><name>newFSDirectory</name><argument_list>(<argument><expr><name>clazz</name></expr></argument>, <argument><expr><name>file</name></expr></argument>)</argument_list></call></expr>;</return>
      <return>return <expr><call><name>newFSDirectory</name><argument_list>(<argument><expr><name>clazz</name></expr></argument>, <argument><expr><name>path</name></expr></argument>)</argument_list></call></expr>;</return>
     <expr_stmt/></block_content></block></try></block></expr>}</block></expr> <catch>catch <parameter_list>(<parameter><decl><type><name>ClassNotFoundException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
       <throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><call><name><name>FSDirectory</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getSimpleName</name></name></name><argument_list>()</argument_list></call>
           <operator>+</operator> <literal type="string">" implementation not found: "</literal> <operator>+</operator> <name>clazzName</name></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">52</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">52</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>CommandLineUtil</name> <block>{
           <expr><operator>+</operator> <literal type="string">" implementation"</literal></expr>, <expr><name>e</name></expr>)</block></expr>;</expr_stmt>
     </block_content>}</block></catch></block></expr></expr_stmt> <catch>catch <parameter_list>(<parameter><decl><type><name>NoSuchMethodException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
       <throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><name>clazzName</name> <operator>+</operator> <literal type="string">" constructor with "</literal>
          <operator>+</operator> <call><name><name>File</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getSimpleName</name></name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">" as parameter not found"</literal></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
          <expr_stmt><expr><operator>+</operator> <call><name><name>Path</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getSimpleName</name></name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">" as parameter not found"</literal></expr><operator>,</operator> <expr><name>e</name></expr></expr_stmt>)</block_content></block><empty_stmt>;</empty_stmt></catch>
     </block_content>}</block></catch> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
       <throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><literal type="string">"Error creating "</literal> <operator>+</operator> <name>clazzName</name> <operator>+</operator> <literal type="string">" instance"</literal></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
     </block_content>}</block></catch></try>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">95</literal></expr><operator>,</operator><expr><literal type="number">18</literal> <operator>+</operator><literal type="number">95</literal></expr><operator>,</operator><expr><literal type="number">18</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>CommandLineUtil</name> <block>{
   <comment type="block" format="javadoc">/**
    * Creates a new specific FSDirectory instance
    * @param clazz The class of the object to be created
   * @param file The file to be used as parameter constructor
   * @param path The file to be used as parameter constructor
    * @return The new FSDirectory instance
   * @throws NoSuchMethodException If the Directory does not have a constructor that takes &lt;code&gt;File&lt;/code&gt;.
   * @throws NoSuchMethodException If the Directory does not have a constructor that takes &lt;code&gt;Path&lt;/code&gt;.
    * @throws InstantiationException If the class is abstract or an interface.
    * @throws IllegalAccessException If the constructor does not have public visibility.
    * @throws InvocationTargetException If the constructor throws an exception
    */</comment>
  <expr><specifier>public</specifier> <specifier>static</specifier> <name>FSDirectory</name> <call><name>newFSDirectory</name><argument_list>(<argument><expr><name><name>Class</name><argument_list type="generic">&lt;<argument><name>?</name> <extends>extends <name>FSDirectory</name></extends></argument>&gt;</argument_list></name> <name>clazz</name></expr></argument>, <argument><expr><name>File</name> <name>file</name></expr></argument>)</argument_list></call> 
  <specifier>public</specifier> <specifier>static</specifier> <name>FSDirectory</name> <call><name>newFSDirectory</name><argument_list>(<argument><expr><name><name>Class</name><argument_list type="generic">&lt;<argument><name>?</name> <extends>extends <name>FSDirectory</name></extends></argument>&gt;</argument_list></name> <name>clazz</name></expr></argument>, <argument><expr><name>Path</name> <name>path</name></expr></argument>)</argument_list></call> 
       <throws>throws <argument><expr><name>NoSuchMethodException</name></expr></argument>, <argument><expr><name>InstantiationException</name></expr></argument>, <argument><expr><name>IllegalAccessException</name></expr></argument>, <argument><expr><name>InvocationTargetException</name> <block>{
    <comment type="line">// Assuming every FSDirectory has a ctor(File):</comment>
    <expr><name><name>Constructor</name><argument_list type="generic">&lt;<argument><name>?</name> <extends>extends <name>FSDirectory</name></extends></argument>&gt;</argument_list></name> <name>ctor</name> <operator>=</operator> <call><name><name>clazz</name><operator>.</operator><name>getConstructor</name></name><argument_list>(<argument><expr><name><name>File</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</block></expr></expr_stmt>
    <return>return <expr><call><name><name>ctor</name><operator>.</operator><name>newInstance</name></name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr>;</return>
    <comment type="line">// Assuming every FSDirectory has a ctor(Path):</comment>
    <decl_stmt><decl><type><name><name>Constructor</name><argument_list type="generic">&lt;<argument><name>?</name> <extends>extends <name>FSDirectory</name></extends></argument>&gt;</argument_list></name></type> <name>ctor</name> <init>= <expr><call><name><name>clazz</name><operator>.</operator><name>getConstructor</name></name><argument_list>(<argument><expr><name><name>Path</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <return>return <expr><call><name><name>ctor</name><operator>.</operator><name>newInstance</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
   
 </block_content>}</block></constructor>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>IOUtils</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>IOUtils</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">42e923f1895</literal><operator>..</operator><name>d774eaa11ec</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>IOUtils</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>IOUtils</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>Directory</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>BufferedReader</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>Closeable</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileInputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileOutputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStreamReader</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">33</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">30</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>Charset</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>CharsetDecoder</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>CodingErrorAction</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>StandardCharsets</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>FileVisitResult</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>FileVisitor</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>StandardOpenOption</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>attribute</name><operator>.</operator><name>BasicFileAttributes</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>LinkedHashMap</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">154</literal></expr><operator>,</operator><expr><literal type="number">34</literal> <operator>+</operator><literal type="number">155</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>IOUtils</name> <block>{
         <expr><operator>.</operator><call><name>onUnmappableCharacter</name><argument_list>(<argument><expr><name><name>CodingErrorAction</name><operator>.</operator><name>REPORT</name></name></expr></argument>)</argument_list></call></expr>;</block></expr></expr_stmt>
     <return>return <expr><operator>new</operator> <call><name>BufferedReader</name><argument_list>(<argument><expr><operator>new</operator> <call><name>InputStreamReader</name><argument_list>(<argument><expr><name>stream</name></expr></argument>, <argument><expr><name>charSetDecoder</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
   }</block></class>
  
  <comment type="block" format="javadoc">/**
   * Opens a Reader for the given {@link File} using a {@link CharsetDecoder}.
   * Unlike Java's defaults this reader will throw an exception if your it detects 
   * the read charset doesn't match the expected {@link Charset}. 
   * &lt;p&gt;
   * Decoding readers are useful to load configuration files, stopword lists or synonym files
   * to detect character set problems. However, its not recommended to use as a common purpose 
   * reader.
   * @param file the file to open a reader on
   * @param charSet the expected charset
   * @return a reader to read the given file
   */</comment>
  <function><type><specifier>public</specifier> <specifier>static</specifier> <name>Reader</name></type> <name>getDecodingReader</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>file</name></decl></parameter>, <parameter><decl><type><name>Charset</name></type> <name>charSet</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>FileInputStream</name></type> <name>stream</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>boolean</name></type> <name>success</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
    <try>try <block>{<block_content>
      <expr_stmt><expr><name>stream</name> <operator>=</operator> <operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><specifier>final</specifier> <name>Reader</name></type> <name>reader</name> <init>= <expr><call><name>getDecodingReader</name><argument_list>(<argument><expr><name>stream</name></expr></argument>, <argument><expr><name>charSet</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><name>success</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
      <return>return <expr><name>reader</name></expr>;</return>

    </block_content>}</block> <finally>finally <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><operator>!</operator><name>success</name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>IOUtils</name><operator>.</operator><name>close</name></name><argument_list>(<argument><expr><name>stream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block></finally></try>
  </block_content>}</block></function>
 
   <comment type="block" format="javadoc">/**
    * Opens a Reader for the given resource using a {@link CharsetDecoder}.
@@ -233,7 +206,7 @@ public final class IOUtils {
    * &lt;p&gt;
    * Some of the files may be null, if so they are ignored.
    */</comment>
  <function><type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>deleteFilesIgnoringExceptions</name><parameter_list>(<parameter><decl><type><name>File</name><modifier>...</modifier></type> <name>files</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <function><type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>deleteFilesIgnoringExceptions</name><parameter_list>(<parameter><decl><type><name>Path</name><modifier>...</modifier></type> <name>files</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <expr_stmt><expr><call><name>deleteFilesIgnoringExceptions</name><argument_list>(<argument><expr><call><name><name>Arrays</name><operator>.</operator><name>asList</name></name><argument_list>(<argument><expr><name>files</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
   
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">242</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">215</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>IOUtils</name> <block>{
    <expr><operator>*</operator> <operator>&lt;</operator><name>p</name><operator>&gt;</operator>
    <operator>*</operator> <name>Some</name> <name>of</name> <name>the</name> <name>files</name> <name>may</name> <name>be</name> <literal type="null">null</literal></expr>, <if_stmt><if>if so they are ignored.
    */
  public static void deleteFilesIgnoringExceptions<condition>(<expr><name><name>Iterable</name><argument_list type="generic">&lt;<argument><name>?</name> <extends>extends <name>File</name></extends></argument>&gt;</argument_list></name> <name>files</name></expr>)</condition> <block>{<block_content>
    <for>for <control>(<init><decl><type><name>File</name></type> <name>name</name> <range>: <expr><name>files</name></expr></range></decl></init>)</control> <block>{<block_content>
  <function><type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>deleteFilesIgnoringExceptions</name><parameter_list>(<parameter><decl><type><name><name>Iterable</name><argument_list type="generic">&lt;<argument><name>?</name> <extends>extends <name>Path</name></extends></argument>&gt;</argument_list></name></type> <name>files</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <for>for <control>(<init><decl><type><name>Path</name></type> <name>name</name> <range>: <expr><name>files</name></expr></range></decl></init>)</control> <block>{<block_content>
       <if_stmt><if>if <condition>(<expr><name>name</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
         <try>try <block>{<block_content>
          <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>delete</name></name><argument_list>(<argument><expr><call><name><name>name</name><operator>.</operator><name>toPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>delete</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Throwable</name></type> <name>ignored</name></decl></parameter>)</parameter_list> <block>{<block_content>
           <comment type="line">// ignore</comment>
         </block_content>}</block></catch></try>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">255</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">228</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>IOUtils</name> <block>{
   }</block>
   
   <comment type="block" format="javadoc">/**
   * Deletes all given &lt;tt&gt;File&lt;/tt&gt;s, if they exist.  Some of the
   * Deletes all given &lt;tt&gt;Path&lt;/tt&gt;s, if they exist.  Some of the
    * &lt;tt&gt;File&lt;/tt&gt;s may be null; they are
    * ignored.  After everything is deleted, the method either
    * throws the first exception it hit while deleting, or
@@ -263,12 +236,12 @@ public final class IOUtils {
    * 
    * @param files files to delete
    */</comment>
  <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>deleteFilesIfExist</name><argument_list>(<argument><expr><name>File</name><operator>...</operator> <name>files</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>deleteFilesIfExist</name><argument_list>(<argument><expr><name>Path</name><operator>...</operator> <name>files</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><call><name>deleteFilesIfExist</name><argument_list>(<argument><expr><call><name><name>Arrays</name><operator>.</operator><name>asList</name></name><argument_list>(<argument><expr><name>files</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
   </block_content>}</block></if></if_stmt>
   
   <comment type="block" format="javadoc">/**
   * Deletes all given &lt;tt&gt;File&lt;/tt&gt;s, if they exist.  Some of the
   * Deletes all given &lt;tt&gt;Path&lt;/tt&gt;s, if they exist.  Some of the
    * &lt;tt&gt;File&lt;/tt&gt;s may be null; they are
    * ignored.  After everything is deleted, the method either
    * throws the first exception it hit while deleting, or
@@ -276,13 +249,13 @@ public final class IOUtils {
    * 
    * @param files files to delete
    */</comment>
  <function><type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>deleteFilesIfExist</name><parameter_list>(<parameter><decl><type><name><name>Iterable</name><argument_list type="generic">&lt;<argument><name>?</name> <extends>extends <name>File</name></extends></argument>&gt;</argument_list></name></type> <name>files</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
  <function><type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>deleteFilesIfExist</name><parameter_list>(<parameter><decl><type><name><name>Iterable</name><argument_list type="generic">&lt;<argument><name>?</name> <extends>extends <name>Path</name></extends></argument>&gt;</argument_list></name></type> <name>files</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
     <decl_stmt><decl><type><name>Throwable</name></type> <name>th</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
 
    <for>for <control>(<init><decl><type><name>File</name></type> <name>file</name> <range>: <expr><name>files</name></expr></range></decl></init>)</control> <block>{<block_content>
    <for>for <control>(<init><decl><type><name>Path</name></type> <name>file</name> <range>: <expr><name>files</name></expr></range></decl></init>)</control> <block>{<block_content>
       <try>try <block>{<block_content>
         <if_stmt><if>if <condition>(<expr><name>file</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>deleteIfExists</name></name><argument_list>(<argument><expr><call><name><name>file</name><operator>.</operator><name>toPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>deleteIfExists</name></name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></if></if_stmt>
       </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Throwable</name></type> <name>t</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <expr_stmt><expr><call><name>addSuppressed</name><argument_list>(<argument><expr><name>th</name></expr></argument>, <argument><expr><name>t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">301</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">274</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>IOUtils</name> <block>{
    <expr><operator>*</operator> @<throws>throws <argument><expr><name>IOException</name></expr></argument></throws></expr> <if_stmt><if>if any of the given files <condition>(<expr><name>or</name> <name>their</name> <name>subhierarchy</name> <name>files</name> <name>in</name></expr></condition></if></if_stmt> <case>case
    <expr><operator>*</operator> <name>of</name> <name>directories</name></expr></case>)</block> <name>cannot</name> <name>be</name> <name><name>removed</name><operator>.</operator></name>
    *<operator>/</operator>
  <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>rm</name><argument_list>(<argument><expr><name>File</name><operator>...</operator> <name>locations</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><name><name>LinkedHashMap</name><argument_list type="generic">&lt;<argument><name>File</name></argument>,<argument><name>Throwable</name></argument>&gt;</argument_list></name> <name>unremoved</name> <operator>=</operator> <call><name>rm</name><argument_list>(<argument><expr><operator>new</operator> <call><name><name>LinkedHashMap</name><argument_list type="generic">&lt;<argument><name>File</name></argument>,<argument><name>Throwable</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>locations</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
  <function><type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>rm</name><parameter_list>(<parameter><decl><type><name>Path</name><modifier>...</modifier></type> <name>locations</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name><name>LinkedHashMap</name><argument_list type="generic">&lt;<argument><name>Path</name></argument>,<argument><name>Throwable</name></argument>&gt;</argument_list></name></type> <name>unremoved</name> <init>= <expr><call><name>rm</name><argument_list>(<argument><expr><operator>new</operator> <call><name><name>LinkedHashMap</name><argument_list type="generic">&lt;<argument><name>Path</name></argument>,<argument><name>Throwable</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>locations</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>unremoved</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
       <decl_stmt><decl><type><name>StringBuilder</name></type> <name>b</name> <init>= <expr><operator>new</operator> <call><name>StringBuilder</name><argument_list>(<argument><expr><literal type="string">"Could not remove the following files (in the order of attempts):\n"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <for>for <control>(<init><decl><type><name><name>Map</name><operator>.</operator><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>File</name></argument>,<argument><name>Throwable</name></argument>&gt;</argument_list></name></name></type> <name>kv</name> <range>: <expr><call><name><name>unremoved</name><operator>.</operator><name>entrySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
      <for>for <control>(<init><decl><type><name><name>Map</name><operator>.</operator><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>Path</name></argument>,<argument><name>Throwable</name></argument>&gt;</argument_list></name></name></type> <name>kv</name> <range>: <expr><call><name><name>unremoved</name><operator>.</operator><name>entrySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
         <expr_stmt><expr><call><name><name>b</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><literal type="string">"   "</literal></expr></argument>)</argument_list></call>
         <operator>.</operator><call><name>append</name><argument_list>(<argument><expr><call><name><name>kv</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
         <operator>.</operator><call><name>append</name><argument_list>(<argument><expr><call><name><name>kv</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toAbsolutePath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>append</name><argument_list>(<argument><expr><literal type="string">": "</literal></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>append</name><argument_list>(<argument><expr><call><name><name>kv</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
          <operator>.</operator><call><name>append</name><argument_list>(<argument><expr><literal type="string">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">316</literal></expr><operator>,</operator><expr><literal type="number">18</literal> <operator>+</operator><literal type="number">289</literal></expr><operator>,</operator><expr><literal type="number">50</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>IOUtils</name> <block>{
     }</block></expr></expr_stmt>
   </block_content>}</block></for>
 
  <function><type><specifier>private</specifier> <specifier>static</specifier> <name><name>LinkedHashMap</name><argument_list type="generic">&lt;<argument><name>File</name></argument>,<argument><name>Throwable</name></argument>&gt;</argument_list></name></type> <name>rm</name><parameter_list>(<parameter><decl><type><name><name>LinkedHashMap</name><argument_list type="generic">&lt;<argument><name>File</name></argument>,<argument><name>Throwable</name></argument>&gt;</argument_list></name></type> <name>unremoved</name></decl></parameter>, <parameter><decl><type><name>File</name><modifier>...</modifier></type> <name>locations</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <function><type><specifier>private</specifier> <specifier>static</specifier> <name><name>LinkedHashMap</name><argument_list type="generic">&lt;<argument><name>Path</name></argument>,<argument><name>Throwable</name></argument>&gt;</argument_list></name></type> <name>rm</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name><name>LinkedHashMap</name><argument_list type="generic">&lt;<argument><name>Path</name></argument>,<argument><name>Throwable</name></argument>&gt;</argument_list></name></type> <name>unremoved</name></decl></parameter>, <parameter><decl><type><name>Path</name><modifier>...</modifier></type> <name>locations</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <if_stmt><if>if <condition>(<expr><name>locations</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <for>for <control>(<init><decl><type><name>File</name></type> <name>location</name> <range>: <expr><name>locations</name></expr></range></decl></init>)</control> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name>location</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>location</name><operator>.</operator><name>exists</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
          <if_stmt><if>if <condition>(<expr><call><name><name>location</name><operator>.</operator><name>isDirectory</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name>rm</name><argument_list>(<argument><expr><name>unremoved</name></expr></argument>, <argument><expr><call><name><name>location</name><operator>.</operator><name>listFiles</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          </block_content>}</block></if></if_stmt>
  
      <for>for <control>(<init><decl><type><name>Path</name></type> <name>location</name> <range>: <expr><name>locations</name></expr></range></decl></init>)</control> <block>{<block_content>
        <comment type="line">// TODO: remove this leniency!</comment>
        <if_stmt><if>if <condition>(<expr><name>location</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>Files</name><operator>.</operator><name>exists</name></name><argument_list>(<argument><expr><name>location</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
           <try>try <block>{<block_content>
            <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>delete</name></name><argument_list>(<argument><expr><call><name><name>location</name><operator>.</operator><name>toPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Throwable</name></type> <name>cause</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <expr_stmt><expr><call><name><name>unremoved</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>location</name></expr></argument>, <argument><expr><name>cause</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>walkFileTree</name></name><argument_list>(<argument><expr><name>location</name></expr></argument>, <argument><expr><operator>new</operator> <class><super><name><name>FileVisitor</name><argument_list type="generic">&lt;<argument><name>Path</name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{            
              <function><annotation>@<name>Override</name></annotation>
              <type><specifier>public</specifier> <name>FileVisitResult</name></type> <name>preVisitDirectory</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>dir</name></decl></parameter>, <parameter><decl><type><name>BasicFileAttributes</name></type> <name>attrs</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
                <return>return <expr><name><name>FileVisitResult</name><operator>.</operator><name>CONTINUE</name></name></expr>;</return>
              </block_content>}</block></function>
              
              <function><annotation>@<name>Override</name></annotation>
              <type><specifier>public</specifier> <name>FileVisitResult</name></type> <name>postVisitDirectory</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>dir</name></decl></parameter>, <parameter><decl><type><name>IOException</name></type> <name>impossible</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
                <assert>assert <expr><name>impossible</name> <operator>==</operator> <literal type="null">null</literal></expr>;</assert>
                
                <try>try <block>{<block_content>
                  <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>delete</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
                  <expr_stmt><expr><call><name><name>unremoved</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></catch></try>
                <return>return <expr><name><name>FileVisitResult</name><operator>.</operator><name>CONTINUE</name></name></expr>;</return>
              </block_content>}</block></function>
              
              <function><annotation>@<name>Override</name></annotation>
              <type><specifier>public</specifier> <name>FileVisitResult</name></type> <name>visitFile</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>file</name></decl></parameter>, <parameter><decl><type><name>BasicFileAttributes</name></type> <name>attrs</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
                <try>try <block>{<block_content>
                  <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>delete</name></name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>exc</name></decl></parameter>)</parameter_list> <block>{<block_content>
                  <expr_stmt><expr><call><name><name>unremoved</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>file</name></expr></argument>, <argument><expr><name>exc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></catch></try>
                <return>return <expr><name><name>FileVisitResult</name><operator>.</operator><name>CONTINUE</name></name></expr>;</return>
              </block_content>}</block></function>
              
              <function><annotation>@<name>Override</name></annotation>
              <type><specifier>public</specifier> <name>FileVisitResult</name></type> <name>visitFileFailed</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>file</name></decl></parameter>, <parameter><decl><type><name>IOException</name></type> <name>exc</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
                <if_stmt><if>if <condition>(<expr><name>exc</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                  <expr_stmt><expr><call><name><name>unremoved</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>file</name></expr></argument>, <argument><expr><name>exc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
                <return>return <expr><name><name>FileVisitResult</name><operator>.</operator><name>CONTINUE</name></name></expr>;</return>
              </block_content>}</block></function>
            }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          </block_content>}</block></catch> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>impossible</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <throw>throw <expr><operator>new</operator> <call><name>AssertionError</name><argument_list>(<argument><expr><literal type="string">"visitor threw exception"</literal></expr></argument>, <argument><expr><name>impossible</name></expr></argument>)</argument_list></call></expr>;</throw>
           </block_content>}</block></catch></try>
         </block_content>}</block></if></if_stmt>
       </block_content>}</block></for>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">335</literal></expr><operator>,</operator><expr><literal type="number">27</literal> <operator>+</operator><literal type="number">340</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>IOUtils</name> <block>{
     <return>return <expr><name>unremoved</name></expr>;</return>
   }</block></expr></expr_stmt>
 
  <comment type="block" format="javadoc">/**
   * Copy one file's contents to another file. The target will be overwritten
   * if it exists. The source must exist.
   */</comment>
  <function><type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>copy</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>source</name></decl></parameter>, <parameter><decl><type><name>File</name></type> <name>target</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>FileInputStream</name></type> <name>fis</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>FileOutputStream</name></type> <name>fos</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
    <try>try <block>{<block_content>
      <expr_stmt><expr><name>fis</name> <operator>=</operator> <operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>source</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>fos</name> <operator>=</operator> <operator>new</operator> <call><name>FileOutputStream</name><argument_list>(<argument><expr><name>target</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      
      <decl_stmt><decl><type><specifier>final</specifier> <name><name>byte</name> <index>[]</index></name></type> <name>buffer</name> <init>= <expr><operator>new</operator> <name><name>byte</name> <index>[<expr><literal type="number">1024</literal> <operator>*</operator> <literal type="number">8</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>int</name></type> <name>len</name></decl>;</decl_stmt>
      <while>while <condition>(<expr><operator>(</operator><name>len</name> <operator>=</operator> <call><name><name>fis</name><operator>.</operator><name>read</name></name><argument_list>(<argument><expr><name>buffer</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>fos</name><operator>.</operator><name>write</name></name><argument_list>(<argument><expr><name>buffer</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></while>
    </block_content>}</block> <finally>finally <block>{<block_content>
      <expr_stmt><expr><call><name>close</name><argument_list>(<argument><expr><name>fis</name></expr></argument>, <argument><expr><name>fos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></finally></try>
  </block_content>}</block></function>

   <comment type="block" format="javadoc">/**
    * Simple utilty method that takes a previously caught
    * {@code Throwable} and rethrows either {@code
@@ -394,12 +378,12 @@ public final class IOUtils {
    * @param isDir if true, the given file is a directory (we open for read and ignore IOExceptions,
    *  because not all file systems and operating systems allow to fsync on a directory)
    */</comment>
  <function><type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>fsync</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>fileToSync</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>isDir</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
  <function><type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>fsync</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>fileToSync</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>isDir</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
     <decl_stmt><decl><type><name>IOException</name></type> <name>exc</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
     
     <comment type="line">// If the file is a directory we have to open read-only, for regular files we must open r/w for the fsync to have an effect.</comment>
     <comment type="line">// See http://blog.httrack.com/blog/2013/11/15/everything-you-always-wanted-to-know-about-fsync/</comment>
    <try>try <init>(<decl><type><specifier>final</specifier> <name>FileChannel</name></type> <name>file</name> <init>= <expr><call><name><name>FileChannel</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><call><name><name>fileToSync</name><operator>.</operator><name>toPath</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><ternary><condition><expr><name>isDir</name></expr> ?</condition><then> <expr><name><name>StandardOpenOption</name><operator>.</operator><name>READ</name></name></expr> </then><else>: <expr><name><name>StandardOpenOption</name><operator>.</operator><name>WRITE</name></name></expr></else></ternary></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
    <try>try <init>(<decl><type><specifier>final</specifier> <name>FileChannel</name></type> <name>file</name> <init>= <expr><call><name><name>FileChannel</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><name>fileToSync</name></expr></argument>, <argument><expr><ternary><condition><expr><name>isDir</name></expr> ?</condition><then> <expr><name><name>StandardOpenOption</name><operator>.</operator><name>READ</name></name></expr> </then><else>: <expr><name><name>StandardOpenOption</name><operator>.</operator><name>WRITE</name></name></expr></else></ternary></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
       <for>for <control>(<init><decl><type><name>int</name></type> <name>retry</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>retry</name> <operator>&lt;</operator> <literal type="number">5</literal></expr>;</condition> <incr><expr><name>retry</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
         <try>try <block>{<block_content>
           <expr_stmt><expr><call><name><name>file</name><operator>.</operator><name>force</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>OfflineSorter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>OfflineSorter</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">441b6027566</literal><operator>..</operator><literal type="number">36258084fb1</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>OfflineSorter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>OfflineSorter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">25</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">25</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>DataInputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>DataOutput</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>DataOutputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>EOFException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileInputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileOutputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>OutputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Paths</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>StandardCopyOption</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Comparator</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">45</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">43</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Locale</name></name>;</import>
  <expr_stmt><expr><operator>*</operator>   <operator>&lt;</operator><name>li</name><operator>&gt;</operator><name>exactly</name> <name>the</name> <name>above</name> <name>count</name> <name>of</name> <name>bytes</name></expr></expr_stmt> <for>for the sequence to be sorted.
  * &lt;/ul&gt;
  * 
 * @see #sort<control>(<init><expr><name>File</name></expr><operator>,</operator> <expr><name>File</name></expr></init>)</control><block type="pseudo"><block_content>
 <expr_stmt><expr><operator>*</operator> @<name>see</name> <operator>#</operator><call><name>sort</name><argument_list>(<argument><expr><name>Path</name></expr></argument>, <argument><expr><name>Path</name></expr></argument>)</argument_list></call>
  <operator>*</operator> @<name><name>lucene</name><operator>.</operator><name>experimental</name></name>
  <operator>*</operator> @<name><name>lucene</name><operator>.</operator><name>internal</name></name>
  <operator>*</operator><operator>/</operator>
@@ <operator>-</operator><literal type="number">167</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">165</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>OfflineSorter</name> <block>{
   }</block>
 
   <specifier>private</specifier> <name>final</name> <name>BufferSize</name> <name>ramBufferSize</name></expr>;</expr_stmt></block_content></block></for>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>File</name></type> <name>tempDirectory</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>Path</name></type> <name>tempDirectory</name></decl>;</decl_stmt>
   
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>Counter</name></type> <name>bufferBytesUsed</name> <init>= <expr><call><name><name>Counter</name><operator>.</operator><name>newCounter</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>BytesRefArray</name></type> <name>buffer</name> <init>= <expr><operator>new</operator> <call><name>BytesRefArray</name><argument_list>(<argument><expr><name>bufferBytesUsed</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">201</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">199</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>OfflineSorter</name> <block>{
   <comment type="block" format="javadoc">/**
    * All-details constructor.
    */</comment>
  <expr><specifier>public</specifier> <call><name>OfflineSorter</name><argument_list>(<argument><expr><name><name>Comparator</name><argument_list type="generic">&lt;<argument><name>BytesRef</name></argument>&gt;</argument_list></name> <name>comparator</name></expr></argument>, <argument><expr><name>BufferSize</name> <name>ramBufferSize</name></expr></argument>, <argument><expr><name>File</name> <name>tempDirectory</name></expr></argument>, <argument><expr><name>int</name> <name>maxTempfiles</name></expr></argument>)</argument_list></call> <block>{
  <expr><specifier>public</specifier> <call><name>OfflineSorter</name><argument_list>(<argument><expr><name><name>Comparator</name><argument_list type="generic">&lt;<argument><name>BytesRef</name></argument>&gt;</argument_list></name> <name>comparator</name></expr></argument>, <argument><expr><name>BufferSize</name> <name>ramBufferSize</name></expr></argument>, <argument><expr><name>Path</name> <name>tempDirectory</name></expr></argument>, <argument><expr><name>int</name> <name>maxTempfiles</name></expr></argument>)</argument_list></call> <block>{
     <if_stmt><if>if <condition>(<expr><name><name>ramBufferSize</name><operator>.</operator><name>bytes</name></name> <operator>&lt;</operator> <name>ABSOLUTE_MIN_SORT_BUFFER_SIZE</name></expr>)</condition> <block>{<block_content>
       <throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><name>MIN_BUFFER_SIZE_MSG</name> <operator>+</operator> <literal type="string">": "</literal> <operator>+</operator> <name><name>ramBufferSize</name><operator>.</operator><name>bytes</name></name></expr></argument>)</argument_list></call></expr>;</throw>
     <expr_stmt/></block_content></block></if></if_stmt></block></expr>}</block>
@@ <operator>-</operator><literal type="number">220</literal></expr>,<expr><literal type="number">13</literal> <operator>+</operator><literal type="number">218</literal></expr>,<expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>OfflineSorter</name> <block>{
    <expr><operator>*</operator> <name>Sort</name> <name>input</name> <name>to</name> <name>output</name></expr>, <expr><name>explicit</name> <name>hint</name></expr> <for>for the buffer size. The amount of allocated
    * memory may deviate from the hint <control>(<init><expr><name>may</name> <name>be</name> <name>smaller</name> <name>or</name> <name>larger</name></expr></init>)</control><block type="pseudo"><block_content><expr_stmt><expr><operator>.</operator>  
    <operator>*</operator><operator>/</operator>
  <specifier>public</specifier> <name>SortInfo</name> <call><name>sort</name><argument_list>(<argument><expr><name>File</name> <name>input</name></expr></argument>, <argument><expr><name>File</name> <name>output</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>public</specifier> <name>SortInfo</name> <call><name>sort</name><argument_list>(<argument><expr><name>Path</name> <name>input</name></expr></argument>, <argument><expr><name>Path</name> <name>output</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><name>sortInfo</name> <operator>=</operator> <operator>new</operator> <call><name>SortInfo</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt></block_content></block></for>
     <name><name>sortInfo</name><operator>.</operator><name>totalTime</name></name> <operator>=</operator> <call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call></block></expr>;
 
    <call><name><name>Files</name><operator>.</operator><name>deleteIfExists</name></name><argument_list>(<argument><expr><call><name><name>output</name><operator>.</operator><name>toPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>deleteIfExists</name></name><argument_list>(<argument><expr><name>output</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
    <decl_stmt><decl><type><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>File</name></argument>&gt;</argument_list></name></type> <name>merges</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>Path</name></argument>&gt;</argument_list></name></type> <name>merges</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>boolean</name></type> <name>success3</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
     <try>try <block>{<block_content>
       <decl_stmt><decl><type><name>ByteSequencesReader</name></type> <name>is</name> <init>= <expr><operator>new</operator> <call><name>ByteSequencesReader</name><argument_list>(<argument><expr><name>input</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">240</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">238</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>OfflineSorter</name> <block>{
 
           <comment type="line">// Handle intermediate merges.</comment>
           <if_stmt><if>if <condition>(<expr><call><name><name>merges</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>==</operator> <name>maxTempFiles</name></expr>)</condition> <block>{<block_content>
            <decl_stmt><decl><type><name>File</name></type> <name>intermediate</name> <init>= <expr><call><name><name>File</name><operator>.</operator><name>createTempFile</name></name><argument_list>(<argument><expr><literal type="string">"sort"</literal></expr></argument>, <argument><expr><literal type="string">"intermediate"</literal></expr></argument>, <argument><expr><name>tempDirectory</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>Path</name></type> <name>intermediate</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>createTempFile</name></name><argument_list>(<argument><expr><name>tempDirectory</name></expr></argument>, <argument><expr><literal type="string">"sort"</literal></expr></argument>, <argument><expr><literal type="string">"intermediate"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
             <decl_stmt><decl><type><name>boolean</name></type> <name>success2</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
             <try>try <block>{<block_content>
               <expr_stmt><expr><call><name>mergePartitions</name><argument_list>(<argument><expr><name>merges</name></expr></argument>, <argument><expr><name>intermediate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">267</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">265</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>OfflineSorter</name> <block>{
 
       <comment type="line">// One partition, try to rename or copy if unsuccessful.</comment>
       <if_stmt><if>if <condition>(<expr><call><name><name>merges</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>     
        <decl_stmt><decl><type><name>File</name></type> <name>single</name> <init>= <expr><call><name><name>merges</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Path</name></type> <name>single</name> <init>= <expr><call><name><name>merges</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <comment type="line">// If simple rename doesn't work this means the output is</comment>
         <comment type="line">// on a different volume or something. Copy the input then.</comment>
        <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>single</name><operator>.</operator><name>renameTo</name></name><argument_list>(<argument><expr><name>output</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name>copy</name><argument_list>(<argument><expr><name>single</name></expr></argument>, <argument><expr><name>output</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <try>try <block>{<block_content>
          <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>move</name></name><argument_list>(<argument><expr><name>single</name></expr></argument>, <argument><expr><name>output</name></expr></argument>, <argument><expr><name><name>StandardCopyOption</name><operator>.</operator><name>ATOMIC_MOVE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> | <type><name>UnsupportedOperationException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
          <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>copy</name></name><argument_list>(<argument><expr><name>single</name></expr></argument>, <argument><expr><name>output</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></catch></try>
       </block_content>}</block></if> <else>else <block>{<block_content> 
         <comment type="line">// otherwise merge the partitions with a priority queue.</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">295</literal></expr><operator>,</operator><expr><literal type="number">43</literal> <operator>+</operator><literal type="number">295</literal></expr><operator>,</operator><expr><literal type="number">23</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>OfflineSorter</name> <block>{
    <expr><operator>*</operator> <name>Returns</name> <name>the</name> default <name>temporary</name> <name><name>directory</name><operator>.</operator> <name>By</name></name> default</expr>, <expr><name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>tmpdir</name><operator>.</operator> <name>If</name></name> <name>not</name> <name>accessible</name>
    <operator>*</operator> <name>or</name> <name>not</name> <name>available</name></expr>, <expr><name>an</name> <name>IOException</name> <name>is</name> <name>thrown</name>
    <operator>*</operator><operator>/</operator>
  <specifier>public</specifier> <specifier>static</specifier> <name>File</name> <call><name>defaultTempDir</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>public</specifier> <specifier>static</specifier> <name>Path</name> <call><name>defaultTempDir</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><name>String</name> <name>tempDirPath</name> <operator>=</operator> <call><name><name>System</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><literal type="string">"java.io.tmpdir"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</block></expr></expr_stmt>
     <if_stmt><if>if <condition>(<expr><name>tempDirPath</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content> 
       <throw>throw <expr><operator>new</operator> <call><name>IOException</name><argument_list>(<argument><expr><literal type="string">"Java has no temporary folder property (java.io.tmpdir)?"</literal></expr></argument>)</argument_list></call></expr>;</throw></block_content></block></if></if_stmt>
 
    <decl_stmt><decl><type><name>File</name></type> <name>tempDirectory</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>tempDirPath</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>tempDirectory</name><operator>.</operator><name>exists</name></name><argument_list>()</argument_list></call> <operator>||</operator> <operator>!</operator><call><name><name>tempDirectory</name><operator>.</operator><name>canWrite</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
    <decl_stmt><decl><type><name>Path</name></type> <name>tempDirectory</name> <init>= <expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>tempDirPath</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>Files</name><operator>.</operator><name>isWritable</name></name><argument_list>(<argument><expr><name>tempDirectory</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
       <throw>throw <expr><operator>new</operator> <call><name>IOException</name><argument_list>(<argument><expr><literal type="string">"Java's temporary folder not present or writeable?: "</literal> 
          <operator>+</operator> <call><name><name>tempDirectory</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
          <expr_stmt><expr><operator>+</operator> <call><name><name>tempDirectory</name><operator>.</operator><name>toAbsolutePath</name></name><argument_list>()</argument_list></call></expr></expr_stmt>)</block_content></block><empty_stmt>;</empty_stmt></if></if_stmt>
     </block_content>}</block></if></if_stmt>
     <return>return <expr><name>tempDirectory</name></expr>;</return>
   </block_content>}</block></else></if_stmt>
 
  <comment type="block" format="javadoc">/**
   * Copies one file to another.
   */</comment>
  <function><type><specifier>private</specifier> <specifier>static</specifier> <name>void</name></type> <name>copy</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>file</name></decl></parameter>, <parameter><decl><type><name>File</name></type> <name>output</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <comment type="line">// 64kb copy buffer (empirical pick).</comment>
    <decl_stmt><decl><type><name><name>byte</name> <index>[]</index></name></type> <name>buffer</name> <init>= <expr><operator>new</operator> <name><name>byte</name> <index>[<expr><literal type="number">16</literal> <operator>*</operator> <literal type="number">1024</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>InputStream</name></type> <name>is</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>OutputStream</name></type> <name>os</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
    <try>try <block>{<block_content>
      <expr_stmt><expr><name>is</name> <operator>=</operator> <operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>os</name> <operator>=</operator> <operator>new</operator> <call><name>FileOutputStream</name><argument_list>(<argument><expr><name>output</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>int</name></type> <name>length</name></decl>;</decl_stmt>
      <while>while <condition>(<expr><operator>(</operator><name>length</name> <operator>=</operator> <call><name><name>is</name><operator>.</operator><name>read</name></name><argument_list>(<argument><expr><name>buffer</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>os</name><operator>.</operator><name>write</name></name><argument_list>(<argument><expr><name>buffer</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></while>
    </block_content>}</block> <finally>finally <block>{<block_content>
      <expr_stmt><expr><call><name><name>IOUtils</name><operator>.</operator><name>close</name></name><argument_list>(<argument><expr><name>is</name></expr></argument>, <argument><expr><name>os</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></finally></try>
  </block_content>}</block></function>

   <comment type="block" format="javadoc">/** Sort a single partition in-memory. */</comment>
  <function><type><specifier>protected</specifier> <name>File</name></type> <name>sortPartition</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
  <function><type><specifier>protected</specifier> <name>Path</name></type> <name>sortPartition</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
     <decl_stmt><decl><type><name>BytesRefArray</name></type> <name>data</name> <init>= <expr><name><name>this</name><operator>.</operator><name>buffer</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>tempFile</name> <init>= <expr><call><name><name>File</name><operator>.</operator><name>createTempFile</name></name><argument_list>(<argument><expr><literal type="string">"sort"</literal></expr></argument>, <argument><expr><literal type="string">"partition"</literal></expr></argument>, <argument><expr><name>tempDirectory</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>tempFile</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>createTempFile</name></name><argument_list>(<argument><expr><name>tempDirectory</name></expr></argument>, <argument><expr><literal type="string">"sort"</literal></expr></argument>, <argument><expr><literal type="string">"partition"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <decl_stmt><decl><type><name>long</name></type> <name>start</name> <init>= <expr><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><name><name>sortInfo</name><operator>.</operator><name>sortTime</name></name> <operator>+=</operator> <operator>(</operator><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call> <operator>-</operator> <name>start</name><operator>)</operator></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">356</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">336</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>OfflineSorter</name> <block>{
   }</block>
 
   <comment type="block" format="javadoc">/** Merge a list of sorted temporary files (partitions) into an output file */</comment>
  <name>void</name> <call><name>mergePartitions</name><argument_list>(<argument><expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>File</name></argument>&gt;</argument_list></name> <name>merges</name></expr></argument>, <argument><expr><name>File</name> <name>outputFile</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><name>void</name> <call><name>mergePartitions</name><argument_list>(<argument><expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>Path</name></argument>&gt;</argument_list></name> <name>merges</name></expr></argument>, <argument><expr><name>Path</name> <name>outputFile</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><name>long</name> <name>start</name> <operator>=</operator> <call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><name>ByteSequencesWriter</name></type> <name>out</name> <init>= <expr><operator>new</operator> <call><name>ByteSequencesWriter</name><argument_list>(<argument><expr><name>outputFile</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">441</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">421</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>OfflineSorter</name> <block>{
   <expr><specifier>public</specifier> <specifier>static</specifier> <name>class</name> <name>ByteSequencesWriter</name> implements <name>Closeable</name> <block>{
     <expr><specifier>private</specifier> <name>final</name> <name>DataOutput</name> <name>os</name></expr>;
 
    <comment type="block" format="javadoc">/** Constructs a ByteSequencesWriter to the provided File */</comment>
    <specifier>public</specifier> <call><name>ByteSequencesWriter</name><argument_list>(<argument><expr><name>File</name> <name>file</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <comment type="block" format="javadoc">/** Constructs a ByteSequencesWriter to the provided Path */</comment>
    <expr><specifier>public</specifier> <call><name>ByteSequencesWriter</name><argument_list>(<argument><expr><name>Path</name> <name>path</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
       <expr><call><name>this</name><argument_list>(<argument><expr><operator>new</operator> <call><name>DataOutputStream</name><argument_list>(
           <argument><expr><operator>new</operator> <call><name>BufferedOutputStream</name><argument_list>(
              <argument><expr><operator>new</operator> <call><name>FileOutputStream</name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></block></expr>;
              <call><name><name>Files</name><operator>.</operator><name>newOutputStream</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call>)</block></expr></expr_stmt>)</block_content></block></function>)</block_content></block>;</function>
     </block_content>}</block></if></if_stmt>
 
     <comment type="block" format="javadoc">/** Constructs a ByteSequencesWriter to the provided DataOutput */</comment>
@@ <operator>-</operator><literal type="number">505</literal><operator>,</operator><literal type="number">11</literal> <operator>+</operator><literal type="number">485</literal><operator>,</operator><literal type="number">11</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>OfflineSorter</name> <block>{
   <expr><specifier>public</specifier> <specifier>static</specifier> <name>class</name> <name>ByteSequencesReader</name> implements <name>Closeable</name> <block>{
     <expr><specifier>private</specifier> <name>final</name> <name>DataInput</name> <name>is</name></expr>;
 
    <comment type="block" format="javadoc">/** Constructs a ByteSequencesReader from the provided File */</comment>
    <specifier>public</specifier> <call><name>ByteSequencesReader</name><argument_list>(<argument><expr><name>File</name> <name>file</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <comment type="block" format="javadoc">/** Constructs a ByteSequencesReader from the provided Path */</comment>
    <expr><specifier>public</specifier> <call><name>ByteSequencesReader</name><argument_list>(<argument><expr><name>Path</name> <name>path</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
       <expr><call><name>this</name><argument_list>(<argument><expr><operator>new</operator> <call><name>DataInputStream</name><argument_list>(
           <argument><expr><operator>new</operator> <call><name>BufferedInputStream</name><argument_list>(
              <argument><expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></block></expr>;
              <call><name><name>Files</name><operator>.</operator><name>newInputStream</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call>)</block>)</block></expr></expr_stmt>)</block_content></block><empty_stmt>;</empty_stmt></try>
     </block_content>}</block></if></if_stmt>
 
     <comment type="block" format="javadoc">/** Constructs a ByteSequencesReader from the provided DataInput */</comment>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name>fst</name><operator>/</operator><name><name>FST</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name>fst</name><operator>/</operator><name><name>FST</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">990e3760d77</literal><operator>..</operator><literal type="number">75d7f808594</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name>fst</name><operator>/</operator><name><name>FST</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name>fst</name><operator>/</operator><name><name>FST</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">19</literal><operator>,</operator><literal type="number">12</literal> <operator>+</operator><literal type="number">19</literal><operator>,</operator><literal type="number">11</literal> @@</block></expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>fst</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>BufferedInputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>BufferedOutputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileInputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileOutputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>OutputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">614</literal></expr><operator>,</operator><expr><literal type="number">37</literal> <operator>+</operator><literal type="number">613</literal></expr><operator>,</operator><expr><literal type="number">18</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name><name>FST</name><argument_list type="generic">&lt;<argument><name>T</name></argument>&gt;</argument_list></name> implements <name>Accountable</name> <block>{
   <comment type="block" format="javadoc">/**
    * Writes an automaton to a file. 
    */</comment>
  <expr><specifier>public</specifier> <name>void</name> <call><name>save</name><argument_list>(<argument><expr><name>final</name> <name>File</name> <name>file</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><name>boolean</name> <name>success</name> <operator>=</operator> <literal type="boolean">false</literal></expr></block></expr></argument></throws></expr>;
    <name>OutputStream</name> <name>os</name> <operator>=</operator> <operator>new</operator> <call><name>BufferedOutputStream</name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileOutputStream</name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <try>try <block>{<block_content>
      <expr_stmt><expr><call><name>save</name><argument_list>(<argument><expr><operator>new</operator> <call><name>OutputStreamDataOutput</name><argument_list>(<argument><expr><name>os</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>success</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
    </block_content>}</block> <finally>finally <block>{<block_content> 
      <if_stmt><if>if <condition>(<expr><name>success</name></expr>)</condition> <block>{<block_content> 
        <expr_stmt><expr><call><name><name>IOUtils</name><operator>.</operator><name>close</name></name><argument_list>(<argument><expr><name>os</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if> <else>else <block>{<block_content>
        <expr_stmt><expr><call><name><name>IOUtils</name><operator>.</operator><name>closeWhileHandlingException</name></name><argument_list>(<argument><expr><name>os</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
      </block_content>}</block></else></if_stmt>
  <function><type><specifier>public</specifier> <name>void</name></type> <name>save</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>Path</name></type> <name>path</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <try>try <init>(<decl><type><name>OutputStream</name></type> <name>os</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>newOutputStream</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
      <expr_stmt><expr><call><name>save</name><argument_list>(<argument><expr><operator>new</operator> <call><name>OutputStreamDataOutput</name><argument_list>(<argument><expr><operator>new</operator> <call><name>BufferedOutputStream</name><argument_list>(<argument><expr><name>os</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></try>
   </block_content>}</block></function>
 
   <comment type="block" format="javadoc">/**
    * Reads an automaton from a file. 
    */</comment>
  <function><type><specifier>public</specifier> <specifier>static</specifier> <parameter_list type="generic">&lt;<parameter><name>T</name></parameter>&gt;</parameter_list> <name><name>FST</name><argument_list type="generic">&lt;<argument><name>T</name></argument>&gt;</argument_list></name></type> <name>read</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>file</name></decl></parameter>, <parameter><decl><type><name><name>Outputs</name><argument_list type="generic">&lt;<argument><name>T</name></argument>&gt;</argument_list></name></type> <name>outputs</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>InputStream</name></type> <name>is</name> <init>= <expr><operator>new</operator> <call><name>BufferedInputStream</name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>boolean</name></type> <name>success</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
    <try>try <block>{<block_content>
      <decl_stmt><decl><type><name><name>FST</name><argument_list type="generic">&lt;<argument><name>T</name></argument>&gt;</argument_list></name></type> <name>fst</name> <init>= <expr><operator>new</operator> <call><name><name>FST</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>(<argument><expr><operator>new</operator> <call><name>InputStreamDataInput</name><argument_list>(<argument><expr><name>is</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>outputs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><name>success</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
      <return>return <expr><name>fst</name></expr>;</return>
    </block_content>}</block> <finally>finally <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><name>success</name></expr>)</condition> <block>{<block_content> 
        <expr_stmt><expr><call><name><name>IOUtils</name><operator>.</operator><name>close</name></name><argument_list>(<argument><expr><name>is</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if> <else>else <block>{<block_content>
        <expr_stmt><expr><call><name><name>IOUtils</name><operator>.</operator><name>closeWhileHandlingException</name></name><argument_list>(<argument><expr><name>is</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
      </block_content>}</block></else></if_stmt>
  <function><type><specifier>public</specifier> <specifier>static</specifier> <parameter_list type="generic">&lt;<parameter><name>T</name></parameter>&gt;</parameter_list> <name><name>FST</name><argument_list type="generic">&lt;<argument><name>T</name></argument>&gt;</argument_list></name></type> <name>read</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>path</name></decl></parameter>, <parameter><decl><type><name><name>Outputs</name><argument_list type="generic">&lt;<argument><name>T</name></argument>&gt;</argument_list></name></type> <name>outputs</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <try>try <init>(<decl><type><name>InputStream</name></type> <name>is</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>newInputStream</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
      <return>return <expr><operator>new</operator> <call><name><name>FST</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>(<argument><expr><operator>new</operator> <call><name>InputStreamDataInput</name><argument_list>(<argument><expr><operator>new</operator> <call><name>BufferedInputStream</name><argument_list>(<argument><expr><name>is</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>outputs</name></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block></try>
   </block_content>}</block></function>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestAtomicUpdate</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestAtomicUpdate</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">94e55096cd4</literal><operator>..</operator><name>db6bbb69f7b</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestAtomicUpdate</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestAtomicUpdate</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name></name>;</package>
  <expr_stmt><expr><operator>*</operator><operator>/</operator></expr></expr_stmt>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>MockAnalyzer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>*</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">174</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">175</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestAtomicUpdate</name> extends <name>LuceneTestCase</name> <block>{
     <expr><call><name><name>directory</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;
 
     <comment type="line">// Second in an FSDirectory:</comment>
    <name>File</name> <name>dirPath</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"lucene.test.atomic"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>dirPath</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"lucene.test.atomic"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><name>directory</name> <operator>=</operator> <call><name>newFSDirectory</name><argument_list>(<argument><expr><name>dirPath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>runTest</name><argument_list>(<argument><expr><name>directory</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>directory</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestCompoundFile</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestCompoundFile</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">704131f5633</literal><operator>..</operator><literal type="number">5c284749099</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestCompoundFile</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestCompoundFile</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">30</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">30</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>IOUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>LuceneTestCase</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>TestUtil</name></name>;</import>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 
 <import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>TestHelper</name><operator>.</operator><name>isSimpleFSIndexInput</name></name>;</import>
 <import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>TestHelper</name><operator>.</operator><name>isSimpleFSIndexInputOpen</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">43</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">43</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestCompoundFile</name> extends <name>LuceneTestCase</name>
     @<name>Override</name>
     <specifier>public</specifier> <name>void</name> <call><name>setUp</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
        <expr><call><name><name>super</name><operator>.</operator><name>setUp</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
       <decl_stmt><decl><type><name>File</name></type> <name>file</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"testIndex"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>Path</name></type> <name>file</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"testIndex"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <comment type="line">// use a simple FSDir here, to be sure to have SimpleFSInputs</comment>
        <expr_stmt><expr><name>dir</name> <operator>=</operator> <operator>new</operator> <call><name>SimpleFSDirectory</name><argument_list>(<argument><expr><name>file</name></expr></argument>,<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></finally></try>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestCrashCausesCorruptIndex</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestCrashCausesCorruptIndex</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>e8ae00a4be2</name><operator>..</operator><name>db1f09d655b</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestCrashCausesCorruptIndex</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestCrashCausesCorruptIndex</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>MockAnalyzer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Document</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">35</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">35</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>LuceneTestCase</name></name>;</import>
 
 <class><specifier>public</specifier> class <name>TestCrashCausesCorruptIndex</name> <super_list><extends>extends <super><name>LuceneTestCase</name></super></extends></super_list>  <block>{
 
  <decl_stmt><decl><type><name>File</name></type> <name>path</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>Path</name></type> <name>path</name></decl>;</decl_stmt>
     
   <comment type="block" format="javadoc">/**
    * LUCENE-3627: This test fails.
diff --git a/lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader.java b/lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader.java
index 1046363da64..fc82dceeb83 100644
-- a/lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader.java
++ b/lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader.java
@@ -22,6 +22,7 @@ import java.io.FileNotFoundException;
 import java.io.IOException;
 import java.nio.file.Files;
 import java.nio.file.NoSuchFileException;
import java.nio.file.Path;
 import java.util.Collection;
 import java.util.HashSet;
 import java.util.Iterator;
@@ -38,8 +39,8 @@ import org.apache.lucene.document.StringField;
 import org.apache.lucene.document.TextField;
 import org.apache.lucene.index.IndexWriterConfig.OpenMode;
 import org.apache.lucene.search.DocIdSetIterator;
import org.apache.lucene.store.BaseDirectoryWrapper;
 import org.apache.lucene.store.Directory;
import org.apache.lucene.store.NoSuchDirectoryException;
 import org.apache.lucene.util.Bits;
 import org.apache.lucene.util.BytesRef;
 import org.apache.lucene.util.IOUtils;
@@ -440,7 +441,7 @@ void assertTermDocsCount(String msg,
   
 public void testFilesOpenClose() throws IOException {
       // Create initial data set
      File dirFile = createTempDir("TestIndexReader.testFilesOpenClose");
      Path dirFile = createTempDir("TestIndexReader.testFilesOpenClose");
       Directory dir = newFSDirectory(dirFile);
       IndexWriter writer  = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));
       addDoc(writer, "test");
@@ -470,8 +471,11 @@ public void testFilesOpenClose() throws IOException {
   }
 
   public void testOpenReaderAfterDelete() throws IOException {
    File dirFile = createTempDir("deletetest");
    Path dirFile = createTempDir("deletetest");
     Directory dir = newFSDirectory(dirFile);
    if (dir instanceof BaseDirectoryWrapper) {
      ((BaseDirectoryWrapper)dir).setCheckIndexOnClose(false); // we will hit NoSuchFileException in MDW since we nuked it!
    }
     try {
       DirectoryReader.open(dir);
       fail("expected FileNotFoundException/NoSuchFileException");
@@ -479,7 +483,7 @@ public void testFilesOpenClose() throws IOException {
       // expected
     }
 
    Files.delete(dirFile.toPath());
    Files.delete(dirFile);
 
     // Make sure we still get a CorruptIndexException (not NPE):
     try {
@@ -717,13 +721,13 @@ public void testFilesOpenClose() throws IOException {
   // DirectoryReader on a non-existent directory, you get a
   // good exception
   public void testNoDir() throws Throwable {
    File tempDir = createTempDir("doesnotexist");
    Path tempDir = createTempDir("doesnotexist");
     IOUtils.rm(tempDir);
     Directory dir = newFSDirectory(tempDir);
     try {
       DirectoryReader.open(dir);
       fail("did not hit expected exception");
    } catch (NoSuchDirectoryException nsde) {
    } catch (IndexNotFoundException nsde) {
       // expected
     }
     dir.close();
@@ -1053,8 +1057,8 @@ public void testFilesOpenClose() throws IOException {
   }
 
   public void testIndexExistsOnNonExistentDirectory() throws Exception {
    File tempDir = createTempDir("testIndexExistsOnNonExistentDirectory");
    Files.delete(tempDir.toPath());
    Path tempDir = createTempDir("testIndexExistsOnNonExistentDirectory");
    Files.delete(tempDir);
     Directory dir = newFSDirectory(tempDir);
     assertFalse(DirectoryReader.indexExists(dir));
     dir.close();
diff --git a/lucene/core/src/test/org/apache/lucene/index/TestDoc.java b/lucene/core/src/test/org/apache/lucene/index/TestDoc.java
index a2b06de5691..78c7534bd1c 100644
-- a/lucene/core/src/test/org/apache/lucene/index/TestDoc.java
++ b/lucene/core/src/test/org/apache/lucene/index/TestDoc.java
@@ -16,9 +16,7 @@ package org.apache.lucene.index;
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */</comment>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileInputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileOutputStream</name></name>;</import>

 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStreamReader</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>OutputStreamWriter</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">27</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">25</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>StringWriter</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>Writer</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>StandardCharsets</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collection</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">50</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">49</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>Version</name></name>;</import>
 <comment type="block" format="javadoc">/** JUnit adaptation of an older test case DocTest. */</comment>
 <class><specifier>public</specifier> class <name>TestDoc</name> <super_list><extends>extends <super><name>LuceneTestCase</name></super></extends></super_list> <block>{
 
    <decl_stmt><decl><type><specifier>private</specifier> <name>File</name></type> <name>workDir</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <name>File</name></type> <name>indexDir</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <name><name>LinkedList</name><argument_list type="generic">&lt;<argument><name>File</name></argument>&gt;</argument_list></name></type> <name>files</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <name>Path</name></type> <name>workDir</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <name>Path</name></type> <name>indexDir</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <name><name>LinkedList</name><argument_list type="generic">&lt;<argument><name>Path</name></argument>&gt;</argument_list></name></type> <name>files</name></decl>;</decl_stmt>
 
     <comment type="block" format="javadoc">/** Set the test case. This test case needs
      *  a few text files created in the current working directory.
@@ -64,10 +63,7 @@ public class TestDoc extends LuceneTestCase {
           System.out.println("TEST: setUp");
         }
         workDir = createTempDir("TestDoc");
        workDir.mkdirs();

         indexDir = createTempDir("testIndex");
        indexDir.mkdirs();
 
         Directory directory = newFSDirectory(indexDir);
         directory.close();
@@ -82,18 +78,18 @@ public class TestDoc extends LuceneTestCase {
         ));
     }
 
    private File createOutput(String name, String text) throws IOException {
    private Path createOutput(String name, String text) throws IOException {
         Writer fw = null;
         PrintWriter pw = null;
 
         try {
            File f = new File(workDir, name);
            Files.deleteIfExists(f.toPath());
            Path path = workDir.resolve(name);
            Files.deleteIfExists(path);
 
            fw = new OutputStreamWriter(new FileOutputStream(f), StandardCharsets.UTF_8);
            fw = new OutputStreamWriter(Files.newOutputStream(path), StandardCharsets.UTF_8);
             pw = new PrintWriter(fw);
             pw.println(text);
            return f;
            return path;
 
         } finally {
             if (pw != null) pw.close();
@@ -203,9 +199,9 @@ public class TestDoc extends LuceneTestCase {
    private SegmentCommitInfo indexDoc(IndexWriter writer, String fileName)
    throws Exception
    {
      File file = new File(workDir, fileName);
      Path path = workDir.resolve(fileName);
       Document doc = new Document();
      InputStreamReader is = new InputStreamReader(new FileInputStream(file), StandardCharsets.UTF_8);
      InputStreamReader is = new InputStreamReader(Files.newInputStream(path), StandardCharsets.UTF_8);
       doc.add(new TextField("contents", is));
       writer.addDocument(doc);
       writer.commit();
diff --git a/lucene/core/src/test/org/apache/lucene/index/TestFieldsReader.java b/lucene/core/src/test/org/apache/lucene/index/TestFieldsReader.java
index e9917d717e6..fd62a4639bd 100644
-- a/lucene/core/src/test/org/apache/lucene/index/TestFieldsReader.java
++ b/lucene/core/src/test/org/apache/lucene/index/TestFieldsReader.java
@@ -19,6 +19,7 @@ package org.apache.lucene.index;
 
 import java.io.File;
 import java.io.IOException;
import java.nio.file.Path;
 import java.util.*;
 import java.util.concurrent.atomic.AtomicBoolean;
 
@@ -110,7 +111,7 @@ public class TestFieldsReader extends LuceneTestCase {
     Directory fsDir;
     AtomicBoolean doFail = new AtomicBoolean();
 
    public FaultyFSDirectory(File dir) {
    public FaultyFSDirectory(Path dir) {
       fsDir = newFSDirectory(dir);
       lockFactory = fsDir.getLockFactory();
     }
@@ -220,7 +221,7 @@ public class TestFieldsReader extends LuceneTestCase {
 
   // LUCENE-1262
   public void testExceptions() throws Throwable {
    File indexDir = createTempDir("testfieldswriterexceptions");
    Path indexDir = createTempDir("testfieldswriterexceptions");
 
     try {
       FaultyFSDirectory dir = new FaultyFSDirectory(indexDir);
diff --git a/lucene/core/src/test/org/apache/lucene/index/TestIndexWriterOnJRECrash.java b/lucene/core/src/test/org/apache/lucene/index/TestIndexWriterOnJRECrash.java
index c0db3dcd1eb..f4d9972ee3c 100644
-- a/lucene/core/src/test/org/apache/lucene/index/TestIndexWriterOnJRECrash.java
++ b/lucene/core/src/test/org/apache/lucene/index/TestIndexWriterOnJRECrash.java
@@ -18,15 +18,19 @@ package org.apache.lucene.index;
  *
  */</comment>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>OutputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>PrintStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>reflect</name><operator>.</operator><name>Field</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>reflect</name><operator>.</operator><name>Method</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>FileVisitResult</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>SimpleFileVisitor</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>atomic</name><operator>.</operator><name>AtomicBoolean</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>BaseDirectoryWrapper</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>Constants</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">38</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">42</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>com</name><operator>.</operator><name>carrotsearch</name><operator>.</operator><name>randomizedtesting</name><operator>.</operator><name>SeedUtils</name></name>;</import>
  <expr_stmt><expr><operator>*</operator> <name>of</name> <name>execution</name></expr><operator>,</operator> <expr><name>then</name> <name>runs</name> <name>checkindex</name> <name>to</name> <name>make</name> <name>sure</name> <name>its</name> <name>not</name> <name><name>corrupt</name><operator>.</operator></name>
  *<operator>/</operator>
 <specifier>public</specifier> <name>class</name> <name>TestIndexWriterOnJRECrash</name> extends <name>TestNRTThreads</name> <block>{
  <expr><specifier>private</specifier> <name>File</name> <name>tempDir</name></expr>;
  <specifier>private</specifier> <name>Path</name> <name>tempDir</name></block></expr>;</expr_stmt>
   
   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>public</specifier> <name>void</name></type> <name>setUp</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">96</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">100</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestIndexWriterOnJRECrash</name> extends <name>TestNRTThreads</name> <block>{
     <expr><call><name><name>cmd</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"-Dtests.crashmode=true"</literal></expr></argument>)</argument_list></call></expr>;
     <comment type="line">// passing NIGHTLY to this test makes it run for much longer, easier to catch it in the act...</comment>
     <call><name><name>cmd</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"-Dtests.nightly=true"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>cmd</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"-DtempDir="</literal> <operator>+</operator> <call><name><name>tempDir</name><operator>.</operator><name>getPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>cmd</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"-DtempDir="</literal> <operator>+</operator> <name>tempDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>cmd</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"-Dtests.seed="</literal> <operator>+</operator> <call><name><name>SeedUtils</name><operator>.</operator><name>formatSeed</name></name><argument_list>(<argument><expr><call><name>random</name><argument_list>()</argument_list></call><operator>.</operator><call><name>nextLong</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>cmd</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"-ea"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>cmd</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"-cp"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">104</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">108</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestIndexWriterOnJRECrash</name> extends <name>TestNRTThreads</name> <block>{
     <expr><call><name><name>cmd</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"org.junit.runner.JUnitCore"</literal></expr></argument>)</argument_list></call></expr>;
     <call><name><name>cmd</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name>getClass</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>ProcessBuilder</name></type> <name>pb</name> <init>= <expr><operator>new</operator> <call><name>ProcessBuilder</name><argument_list>(<argument><expr><name>cmd</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>pb</name><operator>.</operator><name>directory</name></name><argument_list>(<argument><expr><name>tempDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>pb</name><operator>.</operator><name>directory</name></name><argument_list>(<argument><expr><call><name><name>tempDir</name><operator>.</operator><name>toFile</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>pb</name><operator>.</operator><name>redirectErrorStream</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>Process</name></type> <name>p</name> <init>= <expr><call><name><name>pb</name><operator>.</operator><name>start</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">147</literal></expr><operator>,</operator><expr><literal type="number">30</literal> <operator>+</operator><literal type="number">151</literal></expr><operator>,</operator><expr><literal type="number">35</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestIndexWriterOnJRECrash</name> extends <name>TestNRTThreads</name> <block>{
    <expr><operator>*</operator> <name>Recursively</name> <name>looks</name></expr> <for>for indexes underneath &lt;code&gt;file&lt;/code&gt;<operator>,</operator>
    <expr_stmt><expr><operator>*</operator> <name>and</name> <name>runs</name> <name>checkindex</name> <name>on</name> <name><name>them</name><operator>.</operator> <name>returns</name></name> <literal type="boolean">true</literal></expr></expr_stmt></for> <if_stmt><if>if it found any indexes.
    */
  public boolean checkIndexes<condition>(<expr><name>File</name> <name>file</name></expr>)</condition><block type="pseudo"><block_content> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws>
    <if_stmt><if>if <condition>(<expr><call><name><name>file</name><operator>.</operator><name>isDirectory</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>BaseDirectoryWrapper</name></type> <name>dir</name> <init>= <expr><call><name>newFSDirectory</name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>dir</name><operator>.</operator><name>setCheckIndexOnClose</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// don't double-checkindex</comment>
      <if_stmt><if>if <condition>(<expr><call><name><name>DirectoryReader</name><operator>.</operator><name>indexExists</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name>VERBOSE</name></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>err</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"Checking index: "</literal> <operator>+</operator> <name>file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <comment type="line">// LUCENE-4738: if we crashed while writing first</comment>
        <comment type="line">// commit it's possible index will be corrupt (by</comment>
        <comment type="line">// design we don't try to be smart about this case</comment>
        <comment type="line">// since that too risky):</comment>
        <if_stmt><if>if <condition>(<expr><call><name><name>SegmentInfos</name><operator>.</operator><name>getLastCommitGeneration</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call> <operator>&gt;</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name><name>TestUtil</name><operator>.</operator><name>checkIndex</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <function><type><specifier>public</specifier> <name>boolean</name></type> <name>checkIndexes</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>path</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><specifier>final</specifier> <name>AtomicBoolean</name></type> <name>found</name> <init>= <expr><operator>new</operator> <call><name>AtomicBoolean</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>walkFileTree</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>, <argument><expr><operator>new</operator> <class><super><name><name>SimpleFileVisitor</name><argument_list type="generic">&lt;<argument><name>Path</name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{
      <function><annotation>@<name>Override</name></annotation>
      <type><specifier>public</specifier> <name>FileVisitResult</name></type> <name>postVisitDirectory</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>dirPath</name></decl></parameter>, <parameter><decl><type><name>IOException</name></type> <name>exc</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name>exc</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
          <throw>throw <expr><name>exc</name></expr>;</throw>
        </block_content>}</block></if> <else>else <block>{<block_content>
          <decl_stmt><decl><type><name>BaseDirectoryWrapper</name></type> <name>dir</name> <init>= <expr><call><name>newFSDirectory</name><argument_list>(<argument><expr><name>dirPath</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <expr_stmt><expr><call><name><name>dir</name><operator>.</operator><name>setCheckIndexOnClose</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// don't double-checkindex</comment>
          <if_stmt><if>if <condition>(<expr><call><name><name>DirectoryReader</name><operator>.</operator><name>indexExists</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><name>VERBOSE</name></expr>)</condition> <block>{<block_content>
              <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>err</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"Checking index: "</literal> <operator>+</operator> <name>dirPath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <comment type="line">// LUCENE-4738: if we crashed while writing first</comment>
            <comment type="line">// commit it's possible index will be corrupt (by</comment>
            <comment type="line">// design we don't try to be smart about this case</comment>
            <comment type="line">// since that too risky):</comment>
            <if_stmt><if>if <condition>(<expr><call><name><name>SegmentInfos</name><operator>.</operator><name>getLastCommitGeneration</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call> <operator>&gt;</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>
              <expr_stmt><expr><call><name><name>TestUtil</name><operator>.</operator><name>checkIndex</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <expr_stmt><expr><call><name><name>dir</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>found</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          </block_content>}</block></if></if_stmt>
          <return>return <expr><name><name>FileVisitResult</name><operator>.</operator><name>CONTINUE</name></name></expr>;</return>
         </block_content>}</block></else></if_stmt>
        <expr_stmt><expr><call><name><name>dir</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <return>return <expr><literal type="boolean">true</literal></expr>;</return>
       </block_content>}</block></function>
      <constructor_decl><name><name>dir</name><operator>.</operator><name>close</name></name><parameter_list>()</parameter_list>;</constructor_decl>
      <for>for <control>(<init><decl><type><name>File</name></type> <name>f</name> <range>: <expr><call><name><name>file</name><operator>.</operator><name>listFiles</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control><block type="pseudo"><block_content>
        <if_stmt><if>if <condition>(<expr><call><name>checkIndexes</name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
          <return>return <expr><literal type="boolean">true</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></for>
    }</block></class></expr></argument></argument_list></call></expr></expr_stmt>
    <return>return <expr><literal type="boolean">false</literal></expr>;</return>
    </block_content>}</block></function>)</block_content></block><empty_stmt>;</empty_stmt></if></if_stmt>
    <return>return <expr><call><name><name>found</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr>;</return>
   </block_content>}</block></if></if_stmt>
 
   <comment type="block" format="javadoc">/**
diff --git a/lucene/core/src/test/org/apache/lucene/index/TestNeverDelete.java b/lucene/core/src/test/org/apache/lucene/index/TestNeverDelete.java
index f5801209a53..0a0438a53d8 100644
-- a/lucene/core/src/test/org/apache/lucene/index/TestNeverDelete.java
++ b/lucene/core/src/test/org/apache/lucene/index/TestNeverDelete.java
@@ -17,7 +17,7 @@ package org.apache.lucene.index;
  * limitations under the License.
  */</comment>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">36</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">36</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>TestUtil</name></name>;</import>
 <class><specifier>public</specifier> class <name>TestNeverDelete</name> <super_list><extends>extends <super><name>LuceneTestCase</name></super></extends></super_list> <block>{
 
   <function><type><specifier>public</specifier> <name>void</name></type> <name>testIndexing</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><specifier>final</specifier> <name>File</name></type> <name>tmpDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"TestNeverDelete"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>Path</name></type> <name>tmpDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"TestNeverDelete"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>final</specifier> <name>BaseDirectoryWrapper</name></type> <name>d</name> <init>= <expr><call><name>newFSDirectory</name><argument_list>(<argument><expr><name>tmpDir</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <comment type="line">// We want to "see" files removed if Lucene removed</comment>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestBufferedIndexInput</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestBufferedIndexInput</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">9acda2970ae</literal><operator>..</operator><literal type="number">97ee2ba9865</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestBufferedIndexInput</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestBufferedIndexInput</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileOutputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>OutputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collection</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">45</literal></expr><operator>,</operator><expr><literal type="number">21</literal> <operator>+</operator><literal type="number">43</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayUtil</name></name>;</import>
 
 <class><specifier>public</specifier> class <name>TestBufferedIndexInput</name> <super_list><extends>extends <super><name>LuceneTestCase</name></super></extends></super_list> <block>{
   
  <function><type><specifier>private</specifier> <specifier>static</specifier> <name>void</name></type> <name>writeBytes</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>aFile</name></decl></parameter>, <parameter><decl><type><name>long</name></type> <name>size</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws><block>{<block_content>
    <decl_stmt><decl><type><name>OutputStream</name></type> <name>stream</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
    <try>try <block>{<block_content>
      <expr_stmt><expr><name>stream</name> <operator>=</operator> <operator>new</operator> <call><name>FileOutputStream</name><argument_list>(<argument><expr><name>aFile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>size</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
        <expr_stmt><expr><call><name><name>stream</name><operator>.</operator><name>write</name></name><argument_list>(<argument><expr><call><name>byten</name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>  
      </block_content>}</block></for>
      <expr_stmt><expr><call><name><name>stream</name><operator>.</operator><name>flush</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> <finally>finally <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><name>stream</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>stream</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block></finally></try>
  </block_content>}</block></function>

   <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>long</name></type> <name>TEST_FILE_LENGTH</name> <init>= <expr><literal type="number">100</literal><operator>*</operator><literal type="number">1024</literal></expr></init></decl>;</decl_stmt>
  
   <comment type="line">// Call readByte() repeatedly, past the buffer boundary, and see that it</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">228</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">211</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestBufferedIndexInput</name> extends <name>LuceneTestCase</name> <block>{
     }</block>
 
     <specifier>public</specifier> <name>void</name> <call><name>testSetBufferSize</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
      <expr><name>File</name> <name>indexDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"testSetBufferSize"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>Path</name></type> <name>indexDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"testSetBufferSize"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>MockFSDirectory</name></type> <name>dir</name> <init>= <expr><operator>new</operator> <call><name>MockFSDirectory</name><argument_list>(<argument><expr><name>indexDir</name></expr></argument>, <argument><expr><call><name>random</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <try>try <block>{<block_content>
         <decl_stmt><decl><type><name>IndexWriter</name></type> <name>writer</name> <init>= <expr><operator>new</operator> <call><name>IndexWriter</name><argument_list>(
<argument>@@ <expr><operator>-</operator><literal type="number">292</literal></expr></argument>,<argument><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">275</literal></expr></argument>,<argument><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestBufferedIndexInput</name> extends <name>LuceneTestCase</name> <block>{
 
       <expr><specifier>private</specifier> <name>Directory</name> <name>dir</name></expr>;
 
      <specifier>public</specifier> <call><name>MockFSDirectory</name><argument_list>(<argument><expr><name>File</name> <name>path</name></expr></argument>, <argument><expr><name>Random</name> <name>rand</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
      <expr><specifier>public</specifier> <call><name>MockFSDirectory</name><argument_list>(<argument><expr><name>Path</name> <name>path</name></expr></argument>, <argument><expr><name>Random</name> <name>rand</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
         <expr><name><name>this</name><operator>.</operator><name>rand</name></name> <operator>=</operator> <name>rand</name></expr></block></expr></argument></throws></block></expr></argument>;</argument_list></call></expr></init></decl></decl_stmt>
         <expr_stmt><expr><name>lockFactory</name> <operator>=</operator> <call><name><name>NoLockFactory</name><operator>.</operator><name>getNoLockFactory</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><name>dir</name> <operator>=</operator> <operator>new</operator> <call><name>SimpleFSDirectory</name><argument_list>(<argument><expr><name>path</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestDirectory</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestDirectory</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">66f1f81da7c</literal><operator>..</operator><literal type="number">57c2c27ab80</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestDirectory</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestDirectory</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name></name>;</package>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileNotFoundException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>NoSuchFileException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">30</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">32</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>TestUtil</name></name>;</import>
 <class><specifier>public</specifier> class <name>TestDirectory</name> <super_list><extends>extends <super><name>BaseDirectoryTestCase</name></super></extends></super_list> <block>{
 
   <function><annotation>@<name>Override</name></annotation>
  <type><specifier>protected</specifier> <name>Directory</name></type> <name>getDirectory</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>path</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
  <function><type><specifier>protected</specifier> <name>Directory</name></type> <name>getDirectory</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>path</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
     <decl_stmt><decl><type><specifier>final</specifier> <name>Directory</name></type> <name>dir</name></decl>;</decl_stmt>
     <if_stmt><if>if <condition>(<expr><call><name>random</name><argument_list>()</argument_list></call><operator>.</operator><call><name>nextBoolean</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><name>dir</name> <operator>=</operator> <call><name>newDirectory</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">53</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">55</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestDirectory</name> extends <name>BaseDirectoryTestCase</name> <block>{
   <comment type="line">// Test that different instances of FSDirectory can coexist on the same</comment>
   <comment type="line">// path, can read, write, and lock files.</comment>
   <expr><specifier>public</specifier> <name>void</name> <call><name>testDirectInstantiation</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>final</name> <name>File</name> <name>path</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"testDirectInstantiation"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>final</name> <name>Path</name> <name>path</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"testDirectInstantiation"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     
     <decl_stmt><decl><type><specifier>final</specifier> <name><name>byte</name><index>[]</index></name></type> <name>largeBuffer</name> <init>= <expr><operator>new</operator> <name><name>byte</name><index>[<expr><call><name>random</name><argument_list>()</argument_list></call><operator>.</operator><call><name>nextInt</name><argument_list>(<argument><expr><literal type="number">256</literal><operator>*</operator><literal type="number">1024</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr></init></decl>, <decl><type ref="prev"/><name>largeReadBuffer</name> <init>= <expr><operator>new</operator> <name><name>byte</name><index>[<expr><name><name>largeBuffer</name><operator>.</operator><name>length</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>
     <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>largeBuffer</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">141</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">143</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestDirectory</name> extends <name>BaseDirectoryTestCase</name> <block>{
 
   <comment type="line">// LUCENE-1468</comment>
   <expr><specifier>public</specifier> <name>void</name> <call><name>testCopySubdir</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Throwable</name> <block>{
    <expr><name>File</name> <name>path</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"testsubdir"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>Path</name> <name>path</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"testsubdir"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <try>try <block>{<block_content>
      <expr_stmt><expr><call><name><name>path</name><operator>.</operator><name>mkdirs</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>path</name></expr></argument>, <argument><expr><literal type="string">"subdir"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>mkdirs</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>createDirectory</name></name><argument_list>(<argument><expr><call><name><name>path</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><literal type="string">"subdir"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <decl_stmt><decl><type><name>Directory</name></type> <name>fsDir</name> <init>= <expr><operator>new</operator> <call><name>SimpleFSDirectory</name><argument_list>(<argument><expr><name>path</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>RAMDirectory</name><argument_list>(<argument><expr><name>fsDir</name></expr></argument>, <argument><expr><call><name>newIOContext</name><argument_list>(<argument><expr><call><name>random</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>listAll</name><argument_list>()</argument_list></call><operator>.</operator><name>length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block> <finally>finally <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">154</literal></expr><operator>,</operator><expr><literal type="number">16</literal> <operator>+</operator><literal type="number">155</literal></expr><operator>,</operator><expr><literal type="number">16</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestDirectory</name> extends <name>BaseDirectoryTestCase</name> <block>{
 
   <comment type="line">// LUCENE-1468</comment>
   <expr><specifier>public</specifier> <name>void</name> <call><name>testNotDirectory</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Throwable</name> <block>{
    <expr><name>File</name> <name>path</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"testnotdir"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>Path</name> <name>path</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"testnotdir"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>Directory</name></type> <name>fsDir</name> <init>= <expr><operator>new</operator> <call><name>SimpleFSDirectory</name><argument_list>(<argument><expr><name>path</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <try>try <block>{<block_content>
       <decl_stmt><decl><type><name>IndexOutput</name></type> <name>out</name> <init>= <expr><call><name><name>fsDir</name><operator>.</operator><name>createOutput</name></name><argument_list>(<argument><expr><literal type="string">"afile"</literal></expr></argument>, <argument><expr><call><name>newIOContext</name><argument_list>(<argument><expr><call><name>random</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>out</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name>slowFileExists</name><argument_list>(<argument><expr><name>fsDir</name></expr></argument>, <argument><expr><literal type="string">"afile"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <try>try <block>{<block_content>
        <expr_stmt><expr><operator>new</operator> <call><name>SimpleFSDirectory</name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>path</name></expr></argument>, <argument><expr><literal type="string">"afile"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><operator>new</operator> <call><name>SimpleFSDirectory</name><argument_list>(<argument><expr><call><name><name>path</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><literal type="string">"afile"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><call><name>fail</name><argument_list>(<argument><expr><literal type="string">"did not hit expected exception"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>NoSuchDirectoryException</name></type> <name>nsde</name></decl></parameter>)</parameter_list> <block>{<block_content>
      </block_content>}</block></catch> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>nsde</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <comment type="line">// Expected</comment>
       </block_content>}</block></catch></try>
     </block_content>}</block> <finally>finally <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestFileSwitchDirectory</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestFileSwitchDirectory</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>b3dd7caa793</name><operator>..</operator><literal type="number">1135423045f</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestFileSwitchDirectory</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestFileSwitchDirectory</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>NoSuchFileException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">27</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">28</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>MockAnalyzer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>codecs</name><operator>.</operator><name>Codec</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>codecs</name><operator>.</operator><name>compressing</name><operator>.</operator><name>CompressingStoredFieldsWriter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>DirectoryReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexNotFoundException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexWriter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexWriterConfig</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>TestIndexWriterReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>IOUtils</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>TestUtil</name></name>;</import>
 
 <class><specifier>public</specifier> class <name>TestFileSwitchDirectory</name> <super_list><extends>extends <super><name>BaseDirectoryTestCase</name></super></extends></super_list> <block>{
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">85</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">86</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestFileSwitchDirectory</name> extends <name>BaseDirectoryTestCase</name> <block>{
   }</block>
   
   <specifier>private</specifier> <name>Directory</name> <call><name>newFSSwitchDirectory</name><argument_list>(<argument><expr><name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name> <name>primaryExtensions</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><name>File</name> <name>primDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"foo"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>secondDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"bar"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>primDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"foo"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>secondDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"bar"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <return>return <expr><call><name>newFSSwitchDirectory</name><argument_list>(<argument><expr><name>primDir</name></expr></argument>, <argument><expr><name>secondDir</name></expr></argument>, <argument><expr><name>primaryExtensions</name></expr></argument>)</argument_list></call></expr>;</return>
   }</block></class>
 
  <function><type><specifier>private</specifier> <name>Directory</name></type> <name>newFSSwitchDirectory</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>aDir</name></decl></parameter>, <parameter><decl><type><name>File</name></type> <name>bDir</name></decl></parameter>, <parameter><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>primaryExtensions</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
  <function><type><specifier>private</specifier> <name>Directory</name></type> <name>newFSSwitchDirectory</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>aDir</name></decl></parameter>, <parameter><decl><type><name>Path</name></type> <name>bDir</name></decl></parameter>, <parameter><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>primaryExtensions</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
     <decl_stmt><decl><type><name>Directory</name></type> <name>a</name> <init>= <expr><operator>new</operator> <call><name>SimpleFSDirectory</name><argument_list>(<argument><expr><name>aDir</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>Directory</name></type> <name>b</name> <init>= <expr><operator>new</operator> <call><name>SimpleFSDirectory</name><argument_list>(<argument><expr><name>bDir</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <return>return <expr><operator>new</operator> <call><name>FileSwitchDirectory</name><argument_list>(<argument><expr><name>primaryExtensions</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</return>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">98</literal></expr><operator>,</operator><expr><literal type="number">21</literal> <operator>+</operator><literal type="number">99</literal></expr><operator>,</operator><expr><literal type="number">21</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestFileSwitchDirectory</name> extends <name>BaseDirectoryTestCase</name> <block>{
   
   <comment type="line">// LUCENE-3380 -- make sure we get exception if the directory really does not exist.</comment>
   <expr><specifier>public</specifier> <name>void</name> <call><name>testNoDir</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Throwable</name> <block>{
    <expr><name>File</name> <name>primDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"foo"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>File</name> <name>secondDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"bar"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>primDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"foo"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>secondDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"bar"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>IOUtils</name><operator>.</operator><name>rm</name></name><argument_list>(<argument><expr><name>primDir</name></expr></argument>, <argument><expr><name>secondDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>Directory</name></type> <name>dir</name> <init>= <expr><call><name>newFSSwitchDirectory</name><argument_list>(<argument><expr><name>primDir</name></expr></argument>, <argument><expr><name>secondDir</name></expr></argument>, <argument><expr><name><name>Collections</name><operator>.</operator></name>&lt;<name>String</name><operator>&gt;</operator><call><name>emptySet</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <try>try <block>{<block_content>
       <expr_stmt><expr><call><name><name>DirectoryReader</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>fail</name><argument_list>(<argument><expr><literal type="string">"did not hit expected exception"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>NoSuchDirectoryException</name></type> <name>nsde</name></decl></parameter>)</parameter_list> <block>{<block_content>
    </block_content>}</block></catch> <catch>catch <parameter_list>(<parameter><decl><type><name>IndexNotFoundException</name></type> <name>nsde</name></decl></parameter>)</parameter_list> <block>{<block_content>
       <comment type="line">// expected</comment>
     </block_content>}</block></catch></try>
     <expr_stmt><expr><call><name><name>dir</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
 
   <function><annotation>@<name>Override</name></annotation>
  <type><specifier>protected</specifier> <name>Directory</name></type> <name>getDirectory</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>path</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
  <function><type><specifier>protected</specifier> <name>Directory</name></type> <name>getDirectory</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>path</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
     <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>extensions</name> <init>= <expr><operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <if_stmt><if>if <condition>(<expr><call><name>random</name><argument_list>()</argument_list></call><operator>.</operator><call><name>nextBoolean</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><call><name><name>extensions</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"cfs"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestLockFactory</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestLockFactory</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>efd59a15ac4</name><operator>..</operator><name>b511e7c629f</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestLockFactory</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestLockFactory</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">38</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">38</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Query</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>TermQuery</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>IOUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>LuceneTestCase</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>TestUtil</name></name>;</import>
 
 <class><specifier>public</specifier> class <name>TestLockFactory</name> <super_list><extends>extends <super><name>LuceneTestCase</name></super></extends></super_list> <block>{
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">126</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">125</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestLockFactory</name> extends <name>LuceneTestCase</name> <block>{
             <expr><call><name><name>writer2</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;
         }</block></expr></expr_stmt>
     }</block></class>
    
    <function><type><specifier>public</specifier> <name>void</name></type> <name>testSimpleFSLockFactory</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
      <comment type="line">// test string file instantiation</comment>
      <expr_stmt><expr><operator>new</operator> <call><name>SimpleFSLockFactory</name><argument_list>(<argument><expr><literal type="string">"test"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>
 
     <comment type="line">// Verify: do stress test, by opening IndexReaders and</comment>
     <comment type="line">// IndexWriters over &amp; over in 2 threads and making sure</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">146</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">140</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestLockFactory</name> extends <name>LuceneTestCase</name> <block>{
     <comment type="line">// NativeFSLockFactory:</comment>
     @<expr><name>Nightly</name>
     <specifier>public</specifier> <name>void</name> <call><name>testStressLocksNativeFSLockFactory</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
      <expr><name>File</name> <name>dir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"index.TestLockFactory7"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
      <name>Path</name> <name>dir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"index.TestLockFactory7"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>_testStressLocks</name><argument_list>(<argument><expr><operator>new</operator> <call><name>NativeFSLockFactory</name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></if></if_stmt>
 
    <function><type><specifier>public</specifier> <name>void</name></type> <name>_testStressLocks</name><parameter_list>(<parameter><decl><type><name>LockFactory</name></type> <name>lockFactory</name></decl></parameter>, <parameter><decl><type><name>File</name></type> <name>indexDir</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>_testStressLocks</name><parameter_list>(<parameter><decl><type><name>LockFactory</name></type> <name>lockFactory</name></decl></parameter>, <parameter><decl><type><name>Path</name></type> <name>indexDir</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
         <decl_stmt><decl><type><name>Directory</name></type> <name>dir</name> <init>= <expr><call><name>newFSDirectory</name><argument_list>(<argument><expr><name>indexDir</name></expr></argument>, <argument><expr><name>lockFactory</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
         <comment type="line">// First create a 1 doc index:</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">202</literal></expr><operator>,</operator><expr><literal type="number">22</literal> <operator>+</operator><literal type="number">196</literal></expr><operator>,</operator><expr><literal type="number">22</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestLockFactory</name> extends <name>LuceneTestCase</name> <block>{
     
     <comment type="line">// Verify: NativeFSLockFactory works correctly if the lock file exists</comment>
     <expr><specifier>public</specifier> <name>void</name> <call><name>testNativeFSLockFactoryLockExists</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
      <expr><name>File</name> <name>tempDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><call><name><name>LuceneTestCase</name><operator>.</operator><name>getTestClass</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getSimpleName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
      <name>File</name> <name>lockFile</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>tempDir</name></expr></argument>, <argument><expr><literal type="string">"test.lock"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>lockFile</name><operator>.</operator><name>createNewFile</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>Path</name></type> <name>tempDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><call><name><name>LuceneTestCase</name><operator>.</operator><name>getTestClass</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getSimpleName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>Path</name></type> <name>lockFile</name> <init>= <expr><call><name><name>tempDir</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><literal type="string">"test.lock"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>createFile</name></name><argument_list>(<argument><expr><name>lockFile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       
       <decl_stmt><decl><type><name>Lock</name></type> <name>l</name> <init>= <expr><operator>new</operator> <call><name>NativeFSLockFactory</name><argument_list>(<argument><expr><name>tempDir</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>makeLock</name><argument_list>(<argument><expr><literal type="string">"test.lock"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"failed to obtain lock"</literal></expr></argument>, <argument><expr><call><name><name>l</name><operator>.</operator><name>obtain</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>l</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><literal type="string">"failed to release lock"</literal></expr></argument>, <argument><expr><call><name><name>l</name><operator>.</operator><name>isLocked</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>deleteIfExists</name></name><argument_list>(<argument><expr><call><name><name>lockFile</name><operator>.</operator><name>toPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>deleteIfExists</name></name><argument_list>(<argument><expr><name>lockFile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></function>
 
     <comment type="line">// Verify: NativeFSLockFactory assigns null as lockPrefix if the lockDir is inside directory</comment>
     <function><type><specifier>public</specifier> <name>void</name></type> <name>testNativeFSLockFactoryPrefix</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
 
      <decl_stmt><decl><type><name>File</name></type> <name>fdir1</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"TestLockFactory.8"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>File</name></type> <name>fdir2</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"TestLockFactory.8.Lockdir"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>Path</name></type> <name>fdir1</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"TestLockFactory.8"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>Path</name></type> <name>fdir2</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"TestLockFactory.8.Lockdir"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>Directory</name></type> <name>dir1</name> <init>= <expr><call><name>newFSDirectory</name><argument_list>(<argument><expr><name>fdir1</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>NativeFSLockFactory</name><argument_list>(<argument><expr><name>fdir1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <comment type="line">// same directory, but locks are stored somewhere else. The prefix of the lock factory should != null</comment>
       <decl_stmt><decl><type><name>Directory</name></type> <name>dir2</name> <init>= <expr><call><name>newFSDirectory</name><argument_list>(<argument><expr><name>fdir1</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>NativeFSLockFactory</name><argument_list>(<argument><expr><name>fdir2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">238</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">232</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestLockFactory</name> extends <name>LuceneTestCase</name> <block>{
     <expr><specifier>public</specifier> <name>void</name> <call><name>testDefaultFSLockFactoryPrefix</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
 
       <comment type="line">// Make sure we get null prefix, which wont happen if setLockFactory is ever called.</comment>
      <expr><name>File</name> <name>dirName</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"TestLockFactory.10"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
      <name>Path</name> <name>dirName</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"TestLockFactory.10"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
 
       <decl_stmt><decl><type><name>Directory</name></type> <name>dir</name> <init>= <expr><operator>new</operator> <call><name>SimpleFSDirectory</name><argument_list>(<argument><expr><name>dirName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name>assertNull</name><argument_list>(<argument><expr><literal type="string">"Default lock prefix should be null"</literal></expr></argument>, <argument><expr><call><name><name>dir</name><operator>.</operator><name>getLockFactory</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getLockPrefix</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestMmapDirectory</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestMmapDirectory</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>bc896e0dbcd</name><operator>..</operator><name>bd7dd219ae7</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestMmapDirectory</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestMmapDirectory</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
  * Tests MMapDirectory
@@ -26,7 +26,7 @@ import java.io.IOException;
 public class TestMmapDirectory extends BaseDirectoryTestCase {
 
   @Override
  protected Directory getDirectory(File path) throws IOException {
  protected Directory getDirectory(Path path) throws IOException {
     return new MMapDirectory(path);
   }
 }
diff --git a/lucene/core/src/test/org/apache/lucene/store/TestMultiMMap.java b/lucene/core/src/test/org/apache/lucene/store/TestMultiMMap.java
index 79caa27e58d..8e0a5513327 100644
-- a/lucene/core/src/test/org/apache/lucene/store/TestMultiMMap.java
++ b/lucene/core/src/test/org/apache/lucene/store/TestMultiMMap.java
@@ -17,8 +17,8 @@ package org.apache.lucene.store;
  * limitations under the License.
  */</comment>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Random</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>MockAnalyzer</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">37</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">37</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>TestUtil</name></name>;</import>
  <expr_stmt><expr><operator>*</operator> <name><name>Integer</name><operator>.</operator><name>MAX_VALUE</name></name> <name>in</name> <name>size</name> <name>using</name> <name>multiple</name> <name>byte</name> <name><name>buffers</name><operator>.</operator></name>
  *<operator>/</operator>
 <specifier>public</specifier> <name>class</name> <name>TestMultiMMap</name> extends <name>BaseDirectoryTestCase</name> <block>{
  <expr><name>File</name> <name>workDir</name></expr>;
 
   @<name>Override</name>
  <specifier>protected</specifier> <name>Directory</name> <call><name>getDirectory</name><argument_list>(<argument><expr><name>File</name> <name>path</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>protected</specifier> <name>Directory</name> <call><name>getDirectory</name><argument_list>(<argument><expr><name>Path</name> <name>path</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></block></expr></expr_stmt>
     <return>return <expr><operator>new</operator> <call><name>MMapDirectory</name><argument_list>(<argument><expr><name>path</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="number">1</literal><operator>&lt;&lt;</operator><call><name><name>TestUtil</name><operator>.</operator><name>nextInt</name></name><argument_list>(<argument><expr><call><name>random</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="number">28</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
   
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">335</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">334</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestMultiMMap</name> extends <name>BaseDirectoryTestCase</name> <block>{
   }</block>
   
   <specifier>private</specifier> <name>void</name> <call><name>assertChunking</name><argument_list>(<argument><expr><name>Random</name> <name>random</name></expr></argument>, <argument><expr><name>int</name> <name>chunkSize</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>File</name> <name>path</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"mmap"</literal> <operator>+</operator> <name>chunkSize</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>path</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"mmap"</literal> <operator>+</operator> <name>chunkSize</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>MMapDirectory</name></type> <name>mmapDir</name> <init>= <expr><operator>new</operator> <call><name>MMapDirectory</name><argument_list>(<argument><expr><name>path</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>chunkSize</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <comment type="line">// we will map a lot, try to turn on the unmap hack</comment>
     <if_stmt><if>if <condition>(<expr><name><name>MMapDirectory</name><operator>.</operator><name>UNMAP_SUPPORTED</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestNIOFSDirectory</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestNIOFSDirectory</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>cfbd40941fd</name><operator>..</operator><literal type="number">91d4c362e16</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestNIOFSDirectory</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestNIOFSDirectory</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt></block_content></block></if></if_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
  * Tests NIOFSDirectory
@@ -26,7 +26,7 @@ import java.io.IOException;
 public class TestNIOFSDirectory extends BaseDirectoryTestCase {
 
   @Override
  protected Directory getDirectory(File path) throws IOException {
  protected Directory getDirectory(Path path) throws IOException {
     return new NIOFSDirectory(path);
   }
 }
diff --git a/lucene/core/src/test/org/apache/lucene/store/TestNRTCachingDirectory.java b/lucene/core/src/test/org/apache/lucene/store/TestNRTCachingDirectory.java
index 8d9a5a183c2..cd41dff3986 100644
-- a/lucene/core/src/test/org/apache/lucene/store/TestNRTCachingDirectory.java
++ b/lucene/core/src/test/org/apache/lucene/store/TestNRTCachingDirectory.java
@@ -17,8 +17,8 @@ package org.apache.lucene.store;
  * limitations under the License.
  */</comment>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">43</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">43</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestNRTCachingDirectory</name> extends <name>BaseDirectoryTestCase</name> <block>{
   <comment type="line">// for the threads tests... maybe because of the synchronization in listAll?</comment>
   <comment type="line">// would be good to investigate further...</comment>
   @<expr><name>Override</name>
  <specifier>protected</specifier> <name>Directory</name> <call><name>getDirectory</name><argument_list>(<argument><expr><name>File</name> <name>path</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>protected</specifier> <name>Directory</name> <call><name>getDirectory</name><argument_list>(<argument><expr><name>Path</name> <name>path</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr>
     <return>return <expr><operator>new</operator> <call><name>NRTCachingDirectory</name><argument_list>(<argument><expr><operator>new</operator> <call><name>RAMDirectory</name><argument_list>()</argument_list></call></expr></argument>,
                                    <argument><expr><literal type="number">.1</literal> <operator>+</operator> <literal type="number">2.0</literal><operator>*</operator><call><name>random</name><argument_list>()</argument_list></call><operator>.</operator><call><name>nextDouble</name><argument_list>()</argument_list></call></expr></argument>,
                                    <argument><expr><literal type="number">.1</literal> <operator>+</operator> <literal type="number">5.0</literal><operator>*</operator><call><name>random</name><argument_list>()</argument_list></call><operator>.</operator><call><name>nextDouble</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
@@ <operator>-</operator><literal type="number">115</literal><operator>,</operator><literal type="number">7</literal> <operator>+</operator><literal type="number">115</literal><operator>,</operator><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestNRTCachingDirectory</name> extends <name>BaseDirectoryTestCase</name> <block>{
   <expr><specifier>public</specifier> <name>void</name> <call><name>verifyCompiles</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><name>Analyzer</name> <name>analyzer</name> <operator>=</operator> <literal type="null">null</literal></expr></block></expr></argument></throws></expr>;
 
    <name>Directory</name> <name>fsDir</name> <operator>=</operator> <call><name><name>FSDirectory</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><literal type="string">"/path/to/index"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></block></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Directory</name></type> <name>fsDir</name> <init>= <expr><call><name><name>FSDirectory</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"verify"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>NRTCachingDirectory</name></type> <name>cachedFSDir</name> <init>= <expr><operator>new</operator> <call><name>NRTCachingDirectory</name><argument_list>(<argument><expr><name>fsDir</name></expr></argument>, <argument><expr><literal type="number">2.0</literal></expr></argument>, <argument><expr><literal type="number">25.0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>IndexWriterConfig</name></type> <name>conf</name> <init>= <expr><operator>new</operator> <call><name>IndexWriterConfig</name><argument_list>(<argument><expr><name>analyzer</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>IndexWriter</name></type> <name>writer</name> <init>= <expr><operator>new</operator> <call><name>IndexWriter</name><argument_list>(<argument><expr><name>cachedFSDir</name></expr></argument>, <argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestRAMDirectory</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestRAMDirectory</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">50612b571bb</literal><operator>..</operator><literal type="number">694ec1a8911</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestRAMDirectory</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestRAMDirectory</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>MockAnalyzer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Document</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">32</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">33</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>StoredDocument</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>IndexSearcher</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>English</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>IOUtils</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>TestUtil</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
  * JUnit testcase to test RAMDirectory. RAMDirectory itself is used in many testcases,
@@ -41,15 +41,15 @@ import org.apache.lucene.util.TestUtil;
 public class TestRAMDirectory extends BaseDirectoryTestCase {
   
   @Override
  protected Directory getDirectory(File path) {
  protected Directory getDirectory(Path path) {
     return new RAMDirectory();
   }
   
   // add enough document so that the index will be larger than RAMDirectory.READ_BUFFER_SIZE
   private final int docsToAdd = 500;
 
  private File buildIndex() throws IOException {
    File path = createTempDir("buildIndex");
  private Path buildIndex() throws IOException {
    Path path = createTempDir("buildIndex");
     
     Directory dir = newFSDirectory(path);
     IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(
@@ -70,11 +70,10 @@ public class TestRAMDirectory extends BaseDirectoryTestCase {
   
   // LUCENE-1468
   public void testCopySubdir() throws Throwable {
    File path = createTempDir("testsubdir");
    Path path = createTempDir("testsubdir");
     Directory fsDir = null;
     try {
      path.mkdirs();
      new File(path, "subdir").mkdirs();
      Files.createDirectory(path.resolve("subdir"));
       fsDir = newFSDirectory(path);
       assertEquals(0, new RAMDirectory(fsDir, newIOContext(random())).listAll().length);
     } finally {
@@ -84,7 +83,7 @@ public class TestRAMDirectory extends BaseDirectoryTestCase {
   }
 
   public void testRAMDirectory () throws IOException {
    File indexDir = buildIndex();
    Path indexDir = buildIndex();
     
     Directory dir = newFSDirectory(indexDir);
     MockDirectoryWrapper ramDir = new MockDirectoryWrapper(random(), new RAMDirectory(dir, newIOContext(random())));
@@ -117,7 +116,7 @@ public class TestRAMDirectory extends BaseDirectoryTestCase {
   
   public void testRAMDirectorySize() throws IOException, InterruptedException {
 
    File indexDir = buildIndex();
    Path indexDir = buildIndex();
       
     Directory dir = newFSDirectory(indexDir);
     final MockDirectoryWrapper ramDir = new MockDirectoryWrapper(random(), new RAMDirectory(dir, newIOContext(random())));
diff --git a/lucene/core/src/test/org/apache/lucene/store/TestRateLimitedDirectoryWrapper.java b/lucene/core/src/test/org/apache/lucene/store/TestRateLimitedDirectoryWrapper.java
index f01d9765325..6c34526eff4 100644
-- a/lucene/core/src/test/org/apache/lucene/store/TestRateLimitedDirectoryWrapper.java
++ b/lucene/core/src/test/org/apache/lucene/store/TestRateLimitedDirectoryWrapper.java
@@ -17,12 +17,12 @@ package org.apache.lucene.store;
  * limitations under the License.
  */</comment>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 
 <class><specifier>public</specifier> class <name>TestRateLimitedDirectoryWrapper</name> <super_list><extends>extends <super><name>BaseDirectoryTestCase</name></super></extends></super_list> <block>{
 
   <function><annotation>@<name>Override</name></annotation>
  <type><specifier>protected</specifier> <name>Directory</name></type> <name>getDirectory</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>path</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <function><type><specifier>protected</specifier> <name>Directory</name></type> <name>getDirectory</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>path</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <decl_stmt><decl><type><name>Directory</name></type> <name>in</name> <init>= <expr><call><name>newFSDirectory</name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <if_stmt><if>if <condition>(<expr><name>in</name> <operator>instanceof</operator> <name>MockDirectoryWrapper</name></expr>)</condition> <block>{<block_content>
       <comment type="line">// test manipulates directory directly</comment>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestSimpleFSDirectory</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestSimpleFSDirectory</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>e222b5a0367</name><operator>..</operator><name>e8b62774434</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestSimpleFSDirectory</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestSimpleFSDirectory</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
  * Tests SimpleFSDirectory
@@ -26,7 +26,7 @@ import java.io.IOException;
 public class TestSimpleFSDirectory extends BaseDirectoryTestCase {
 
   @Override
  protected Directory getDirectory(File path) throws IOException {
  protected Directory getDirectory(Path path) throws IOException {
     return new SimpleFSDirectory(path);
   }
 }
diff --git a/lucene/core/src/test/org/apache/lucene/store/TestWindowsMMap.java b/lucene/core/src/test/org/apache/lucene/store/TestWindowsMMap.java
index 91eb8eb0d01..737a558346f 100644
-- a/lucene/core/src/test/org/apache/lucene/store/TestWindowsMMap.java
++ b/lucene/core/src/test/org/apache/lucene/store/TestWindowsMMap.java
@@ -17,7 +17,7 @@ package org.apache.lucene.store;
  * limitations under the License.
  */</comment>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Field</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>LuceneTestCase</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">64</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">64</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestWindowsMMap</name> extends <name>LuceneTestCase</name> <block>{
     <comment type="line">// sometimes the directory is not cleaned by rmDir, because on Windows it</comment>
     <comment type="line">// may take some time until the files are finally dereferenced. So clean the</comment>
     <comment type="line">// directory up front, or otherwise new IndexWriter will fail.</comment>
    <expr><name>File</name> <name>dirPath</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"testLuceneMmap"</literal></expr></argument>)</argument_list></call></expr>;
    <name>Path</name> <name>dirPath</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"testLuceneMmap"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>MMapDirectory</name></type> <name>dir</name> <init>= <expr><operator>new</operator> <call><name>MMapDirectory</name><argument_list>(<argument><expr><name>dirPath</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     
     <comment type="line">// plan to add a set of useful stopwords, consider changing some of the</comment>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestOfflineSorter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestOfflineSorter</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">26a168dd2fe</literal><operator>..</operator><name>fa1df8a73ec</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestOfflineSorter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestOfflineSorter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name></name>;</package>
  <expr_stmt><expr><operator>*</operator><operator>/</operator></expr></expr_stmt>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>DataInputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileInputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>StandardCharsets</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Comparator</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">32</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">32</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>OfflineSorter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>OfflineSorter</name><operator>.</operator><name>BufferSize</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>OfflineSorter</name><operator>.</operator><name>ByteSequencesWriter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>OfflineSorter</name><operator>.</operator><name>SortInfo</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>TestUtil</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
  * Tests for on-disk merge sorting.
  */</comment>
 <class><specifier>public</specifier> class <name>TestOfflineSorter</name> <super_list><extends>extends <super><name>LuceneTestCase</name></super></extends></super_list> <block>{
  <decl_stmt><decl><type><specifier>private</specifier> <name>File</name></type> <name>tempDir</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>Path</name></type> <name>tempDir</name></decl>;</decl_stmt>
 
   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>public</specifier> <name>void</name></type> <name>setUp</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">112</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">111</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestOfflineSorter</name> extends <name>LuceneTestCase</name> <block>{
    <expr><operator>*</operator> <name>Check</name> <name>sorting</name> <name>data</name> <name>on</name> <name>an</name> <name>instance</name> <name>of</name> <block>{@<expr><name>link</name> <name>OfflineSorter</name></expr>}</block><operator>.</operator>
    <operator>*</operator><operator>/</operator>
   <specifier>private</specifier> <name>SortInfo</name> <call><name>checkSort</name><argument_list>(<argument><expr><name>OfflineSorter</name> <name>sort</name></expr></argument>, <argument><expr><name><name>byte</name><index>[]</index><index>[]</index></name> <name>data</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><name>File</name> <name>unsorted</name> <operator>=</operator> <call><name>writeAll</name><argument_list>(<argument><expr><literal type="string">"unsorted"</literal></expr></argument>, <argument><expr><name>data</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>Path</name> <name>unsorted</name> <operator>=</operator> <call><name>writeAll</name><argument_list>(<argument><expr><literal type="string">"unsorted"</literal></expr></argument>, <argument><expr><name>data</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
 
     <expr_stmt><expr><call><name><name>Arrays</name><operator>.</operator><name>sort</name></name><argument_list>(<argument><expr><name>data</name></expr></argument>, <argument><expr><name>unsignedByteOrderComparator</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>golden</name> <init>= <expr><call><name>writeAll</name><argument_list>(<argument><expr><literal type="string">"golden"</literal></expr></argument>, <argument><expr><name>data</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>golden</name> <init>= <expr><call><name>writeAll</name><argument_list>(<argument><expr><literal type="string">"golden"</literal></expr></argument>, <argument><expr><name>data</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
    <decl_stmt><decl><type><name>File</name></type> <name>sorted</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>tempDir</name></expr></argument>, <argument><expr><literal type="string">"sorted"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>sorted</name> <init>= <expr><call><name><name>tempDir</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><literal type="string">"sorted"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>SortInfo</name></type> <name>sortInfo</name> <init>= <expr><call><name><name>sort</name><operator>.</operator><name>sort</name></name><argument_list>(<argument><expr><name>unsorted</name></expr></argument>, <argument><expr><name>sorted</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <comment type="line">//System.out.println("Input size [MB]: " + unsorted.length() / (1024 * 1024));</comment>
     <comment type="line">//System.out.println(sortInfo);</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">129</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">128</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestOfflineSorter</name> extends <name>LuceneTestCase</name> <block>{
   <comment type="block" format="javadoc">/**
    * Make sure two files are byte-byte identical.
    */</comment>
  <expr><specifier>private</specifier> <name>void</name> <call><name>assertFilesIdentical</name><argument_list>(<argument><expr><name>File</name> <name>golden</name></expr></argument>, <argument><expr><name>File</name> <name>sorted</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>golden</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>sorted</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
  <specifier>private</specifier> <name>void</name> <call><name>assertFilesIdentical</name><argument_list>(<argument><expr><name>Path</name> <name>golden</name></expr></argument>, <argument><expr><name>Path</name> <name>sorted</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>Files</name><operator>.</operator><name>size</name></name><argument_list>(<argument><expr><name>golden</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>Files</name><operator>.</operator><name>size</name></name><argument_list>(<argument><expr><name>sorted</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></block></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><name><name>byte</name> <index>[]</index></name></type> <name>buf1</name> <init>= <expr><operator>new</operator> <name><name>byte</name> <index>[<expr><literal type="number">64</literal> <operator>*</operator> <literal type="number">1024</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name><name>byte</name> <index>[]</index></name></type> <name>buf2</name> <init>= <expr><operator>new</operator> <name><name>byte</name> <index>[<expr><literal type="number">64</literal> <operator>*</operator> <literal type="number">1024</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>int</name></type> <name>len</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>DataInputStream</name></type> <name>is1</name> <init>= <expr><operator>new</operator> <call><name>DataInputStream</name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>golden</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>DataInputStream</name></type> <name>is2</name> <init>= <expr><operator>new</operator> <call><name>DataInputStream</name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>sorted</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>DataInputStream</name></type> <name>is1</name> <init>= <expr><operator>new</operator> <call><name>DataInputStream</name><argument_list>(<argument><expr><call><name><name>Files</name><operator>.</operator><name>newInputStream</name></name><argument_list>(<argument><expr><name>golden</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>DataInputStream</name></type> <name>is2</name> <init>= <expr><operator>new</operator> <call><name>DataInputStream</name><argument_list>(<argument><expr><call><name><name>Files</name><operator>.</operator><name>newInputStream</name></name><argument_list>(<argument><expr><name>sorted</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <while>while <condition>(<expr><operator>(</operator><name>len</name> <operator>=</operator> <call><name><name>is1</name><operator>.</operator><name>read</name></name><argument_list>(<argument><expr><name>buf1</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><call><name><name>is2</name><operator>.</operator><name>readFully</name></name><argument_list>(<argument><expr><name>buf2</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>len</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">146</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">145</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestOfflineSorter</name> extends <name>LuceneTestCase</name> <block>{
     <expr><call><name><name>IOUtils</name><operator>.</operator><name>close</name></name><argument_list>(<argument><expr><name>is1</name></expr></argument>, <argument><expr><name>is2</name></expr></argument>)</argument_list></call></expr>;
   }</block></expr></expr_stmt>
 
  <function><type><specifier>private</specifier> <name>File</name></type> <name>writeAll</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>name</name></decl></parameter>, <parameter><decl><type><name><name>byte</name><index>[]</index><index>[]</index></name></type> <name>data</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>File</name></type> <name>file</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>tempDir</name></expr></argument>, <argument><expr><name>name</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <function><type><specifier>private</specifier> <name>Path</name></type> <name>writeAll</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>name</name></decl></parameter>, <parameter><decl><type><name><name>byte</name><index>[]</index><index>[]</index></name></type> <name>data</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>Path</name></type> <name>file</name> <init>= <expr><call><name><name>tempDir</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>ByteSequencesWriter</name></type> <name>w</name> <init>= <expr><operator>new</operator> <call><name><name>OfflineSorter</name><operator>.</operator><name>ByteSequencesWriter</name></name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <for>for <control>(<init><decl><type><name><name>byte</name> <index>[]</index></name></type> <name>datum</name> <range>: <expr><name>data</name></expr></range></decl></init>)</control> <block>{<block_content>
       <expr_stmt><expr><call><name><name>w</name><operator>.</operator><name>write</name></name><argument_list>(<argument><expr><name>datum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name>fst</name><operator>/</operator><name><name>TestFSTs</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name>fst</name><operator>/</operator><name><name>TestFSTs</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>f5a80fd72e6</name><operator>..</operator><literal type="number">49b7e7af9be</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name>fst</name><operator>/</operator><name><name>TestFSTs</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name>fst</name><operator>/</operator><name><name>TestFSTs</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">15</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>fst</name></name>;</package>
  <expr_stmt><expr><operator>*</operator><operator>/</operator></expr></expr_stmt>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>BufferedReader</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileInputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileOutputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStreamReader</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>OutputStreamWriter</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>StringWriter</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>Writer</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>StandardCharsets</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Paths</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">313</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">311</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestFSTs</name> extends <name>LuceneTestCase</name> <block>{
     <expr><call><name><name>analyzer</name><operator>.</operator><name>setMaxTokenLength</name></name><argument_list>(<argument><expr><call><name><name>TestUtil</name><operator>.</operator><name>nextInt</name></name><argument_list>(<argument><expr><call><name>random</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name><name>IndexWriter</name><operator>.</operator><name>MAX_TERM_LENGTH</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
     <name>final</name> <name>IndexWriterConfig</name> <name>conf</name> <operator>=</operator> <call><name>newIndexWriterConfig</name><argument_list>(<argument><expr><name>analyzer</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>setMaxBufferedDocs</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>setRAMBufferSizeMB</name><argument_list>(<argument><expr><literal type="number">64</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>File</name></type> <name>tempDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"fstlines"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>Path</name></type> <name>tempDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"fstlines"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>final</specifier> <name>Directory</name></type> <name>dir</name> <init>= <expr><call><name>newFSDirectory</name><argument_list>(<argument><expr><name>tempDir</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>final</specifier> <name>IndexWriter</name></type> <name>writer</name> <init>= <expr><operator>new</operator> <call><name>IndexWriter</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>final</specifier> <name>long</name></type> <name>stopTime</name> <init>= <expr><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call> <operator>+</operator> <name>RUN_TIME_MSEC</name></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">458</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">456</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestFSTs</name> extends <name>LuceneTestCase</name> <block>{
   }</block>
 
   <specifier>private</specifier> <specifier>static</specifier> <specifier>abstract</specifier> <name>class</name> <name><name>VisitTerms</name><argument_list type="generic">&lt;<argument><name>T</name></argument>&gt;</argument_list></name> <block>{
    <expr><specifier>private</specifier> <name>final</name> <name>String</name> <name>dirOut</name></expr>;
    <specifier>private</specifier> <name>final</name> <name>String</name> <name>wordsFileIn</name></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>Path</name></type> <name>dirOut</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>Path</name></type> <name>wordsFileIn</name></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>private</specifier> <name>int</name></type> <name>inputMode</name></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name><name>Outputs</name><argument_list type="generic">&lt;<argument><name>T</name></argument>&gt;</argument_list></name></type> <name>outputs</name></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name><name>Builder</name><argument_list type="generic">&lt;<argument><name>T</name></argument>&gt;</argument_list></name></type> <name>builder</name></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>boolean</name></type> <name>doPack</name></decl>;</decl_stmt>
 
    <constructor><specifier>public</specifier> <name>VisitTerms</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>dirOut</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>wordsFileIn</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>inputMode</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>prune</name></decl></parameter>, <parameter><decl><type><name><name>Outputs</name><argument_list type="generic">&lt;<argument><name>T</name></argument>&gt;</argument_list></name></type> <name>outputs</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>doPack</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>noArcArrays</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <constructor><specifier>public</specifier> <name>VisitTerms</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>dirOut</name></decl></parameter>, <parameter><decl><type><name>Path</name></type> <name>wordsFileIn</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>inputMode</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>prune</name></decl></parameter>, <parameter><decl><type><name><name>Outputs</name><argument_list type="generic">&lt;<argument><name>T</name></argument>&gt;</argument_list></name></type> <name>outputs</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>doPack</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>noArcArrays</name></decl></parameter>)</parameter_list> <block>{<block_content>
       <expr_stmt><expr><name><name>this</name><operator>.</operator><name>dirOut</name></name> <operator>=</operator> <name>dirOut</name></expr>;</expr_stmt>
       <expr_stmt><expr><name><name>this</name><operator>.</operator><name>wordsFileIn</name></name> <operator>=</operator> <name>wordsFileIn</name></expr>;</expr_stmt>
       <expr_stmt><expr><name><name>this</name><operator>.</operator><name>inputMode</name></name> <operator>=</operator> <name>inputMode</name></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">478</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">476</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestFSTs</name> extends <name>LuceneTestCase</name> <block>{
     <expr><specifier>protected</specifier> <specifier>abstract</specifier> <name>T</name> <call><name>getOutput</name><argument_list>(<argument><expr><name>IntsRef</name> <name>input</name></expr></argument>, <argument><expr><name>int</name> <name>ord</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws></expr>;
 
     <specifier>public</specifier> <name>void</name> <call><name>run</name><argument_list>(<argument><expr><name>int</name> <name>limit</name></expr></argument>, <argument><expr><name>boolean</name> <name>verify</name></expr></argument>, <argument><expr><name>boolean</name> <name>verifyByOutput</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
      <expr><name>BufferedReader</name> <name>is</name> <operator>=</operator> <operator>new</operator> <call><name>BufferedReader</name><argument_list>(<argument><expr><operator>new</operator> <call><name>InputStreamReader</name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>wordsFileIn</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">65536</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></block></expr>;</expr_stmt>
      
      <decl_stmt><decl><type><name>BufferedReader</name></type> <name>is</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>newBufferedReader</name></name><argument_list>(<argument><expr><name>wordsFileIn</name></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <try>try <block>{<block_content>
         <decl_stmt><decl><type><specifier>final</specifier> <name>IntsRefBuilder</name></type> <name>intsRef</name> <init>= <expr><operator>new</operator> <call><name>IntsRefBuilder</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
         <decl_stmt><decl><type><name>long</name></type> <name>tStart</name> <init>= <expr><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">521</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">520</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestFSTs</name> extends <name>LuceneTestCase</name> <block>{
 
         <expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><name>ord</name> <operator>+</operator> <literal type="string">" terms; "</literal> <operator>+</operator> <call><name><name>fst</name><operator>.</operator><name>getNodeCount</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">" nodes; "</literal> <operator>+</operator> <call><name><name>fst</name><operator>.</operator><name>getArcCount</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">" arcs; "</literal> <operator>+</operator> <call><name><name>fst</name><operator>.</operator><name>getArcWithOutputCount</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">" arcs w/ output; tot size "</literal> <operator>+</operator> <call><name><name>fst</name><operator>.</operator><name>ramBytesUsed</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</block></expr></expr_stmt>
         <if_stmt><if>if <condition>(<expr><call><name><name>fst</name><operator>.</operator><name>getNodeCount</name></name><argument_list>()</argument_list></call> <operator>&lt;</operator> <literal type="number">100</literal></expr>)</condition> <block>{<block_content>
          <decl_stmt><decl><type><name>Writer</name></type> <name>w</name> <init>= <expr><operator>new</operator> <call><name>OutputStreamWriter</name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileOutputStream</name><argument_list>(<argument><expr><literal type="string">"out.dot"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <decl_stmt><decl><type><name>Writer</name></type> <name>w</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>newBufferedWriter</name></name><argument_list>(<argument><expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"out.dot"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
           <expr_stmt><expr><call><name><name>Util</name><operator>.</operator><name>toDot</name></name><argument_list>(<argument><expr><name>fst</name></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           <expr_stmt><expr><call><name><name>w</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
           <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"Wrote FST to out.dot"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></if></if_stmt>
 
        <decl_stmt><decl><type><name>Directory</name></type> <name>dir</name> <init>= <expr><call><name><name>FSDirectory</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>dirOut</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Directory</name></type> <name>dir</name> <init>= <expr><call><name><name>FSDirectory</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><name>dirOut</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <decl_stmt><decl><type><name>IndexOutput</name></type> <name>out</name> <init>= <expr><call><name><name>dir</name><operator>.</operator><name>createOutput</name></name><argument_list>(<argument><expr><literal type="string">"fst.bin"</literal></expr></argument>, <argument><expr><name><name>IOContext</name><operator>.</operator><name>DEFAULT</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <expr_stmt><expr><call><name><name>fst</name><operator>.</operator><name>save</name></name><argument_list>(<argument><expr><name>out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><call><name><name>out</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">548</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">547</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestFSTs</name> extends <name>LuceneTestCase</name> <block>{
         <while>while<condition>(<expr><literal type="boolean">true</literal></expr>)</condition> <block>{<block_content>
           <for>for<control>(<init><decl><type><name>int</name></type> <name>iter</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>iter</name><operator>&lt;</operator><literal type="number">2</literal></expr>;</condition><incr><expr><name>iter</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
             <expr_stmt><expr><call><name><name>is</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name>is</name> <operator>=</operator> <operator>new</operator> <call><name>BufferedReader</name><argument_list>(<argument><expr><operator>new</operator> <call><name>InputStreamReader</name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>wordsFileIn</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">65536</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name>is</name> <operator>=</operator> <call><name><name>Files</name><operator>.</operator><name>newBufferedReader</name></name><argument_list>(<argument><expr><name>wordsFileIn</name></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
             <expr_stmt><expr><name>ord</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
             <expr_stmt><expr><name>tStart</name> <operator>=</operator> <call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">622</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">621</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestFSTs</name> extends <name>LuceneTestCase</name> <block>{
     <expr><name>boolean</name> <name>verify</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;
     <name>boolean</name> <name>doPack</name> <operator>=</operator> <literal type="boolean">false</literal></block></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>boolean</name></type> <name>noArcArrays</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>wordsFileIn</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>dirOut</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>wordsFileIn</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>dirOut</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
 
     <decl_stmt><decl><type><name>int</name></type> <name>idx</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
     <while>while <condition>(<expr><name>idx</name> <operator>&lt;</operator> <name><name>args</name><operator>.</operator><name>length</name></name></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">652</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">651</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestFSTs</name> extends <name>LuceneTestCase</name> <block>{
         <expr><call><name><name>System</name><operator>.</operator><name>exit</name></name><argument_list>(<argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;
       }</block></expr></expr_stmt> <if_stmt><else>else <block>{<block_content>
         <if_stmt><if>if <condition>(<expr><name>wordsFileIn</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><name>wordsFileIn</name> <operator>=</operator> <name><name>args</name><index>[<expr><name>idx</name></expr>]</index></name></expr>;</expr_stmt>
          <expr_stmt><expr><name>wordsFileIn</name> <operator>=</operator> <call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>args</name><index>[<expr><name>idx</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>dirOut</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><name>dirOut</name> <operator>=</operator> <name><name>args</name><index>[<expr><name>idx</name></expr>]</index></name></expr>;</expr_stmt>
          <expr_stmt><expr><name>dirOut</name> <operator>=</operator> <call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>args</name><index>[<expr><name>idx</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></if> <else>else <block>{<block_content>
           <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>err</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"Too many arguments, expected: input [output]"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>exit</name></name><argument_list>(<argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name>junitcompat</name><operator>/</operator><name><name>TestLeaveFilesIfTestFails</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name>junitcompat</name><operator>/</operator><name><name>TestLeaveFilesIfTestFails</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">8b479163302</literal><operator>..</operator><literal type="number">48234622245</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name>junitcompat</name><operator>/</operator><name><name>TestLeaveFilesIfTestFails</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name>junitcompat</name><operator>/</operator><name><name>TestLeaveFilesIfTestFails</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">15</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">15</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>junitcompat</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>RandomAccessFile</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>channels</name><operator>.</operator><name>SeekableByteChannel</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>StandardOpenOption</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>Constants</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>IOUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>LuceneTestCase</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>TestUtil</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Assert</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>runner</name><operator>.</operator><name>JUnitCore</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">39</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">39</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestLeaveFilesIfTestFails</name> extends <name>WithNestedTests</name> <block>{
   }</block>
   
   <specifier>public</specifier> <specifier>static</specifier> <name>class</name> <name>Nested1</name> extends <name><name>WithNestedTests</name><operator>.</operator><name>AbstractNestedTest</name></name> <block>{
    <expr><specifier>static</specifier> <name>File</name> <name>file</name></expr>;
    <specifier>static</specifier> <name>Path</name> <name>file</name></block></expr>;</expr_stmt>
     <function><type><specifier>public</specifier> <name>void</name></type> <name>testDummy</name><parameter_list>()</parameter_list> <block>{<block_content>
       <expr_stmt><expr><name>file</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"leftover"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>fail</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">50</literal></expr><operator>,</operator><expr><literal type="number">19</literal> <operator>+</operator><literal type="number">50</literal></expr><operator>,</operator><expr><literal type="number">19</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestLeaveFilesIfTestFails</name> extends <name>WithNestedTests</name> <block>{
   <expr><specifier>public</specifier> <name>void</name> <call><name>testLeaveFilesIfTestFails</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><name>Result</name> <name>r</name> <operator>=</operator> <call><name><name>JUnitCore</name><operator>.</operator><name>runClasses</name></name><argument_list>(<argument><expr><name><name>Nested1</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
     <call><name><name>Assert</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><call><name><name>r</name><operator>.</operator><name>getFailureCount</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertTrue</name></name><argument_list>(<argument><expr><name><name>Nested1</name><operator>.</operator><name>file</name></name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>Nested1</name><operator>.</operator><name>file</name><operator>.</operator><name>exists</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>delete</name></name><argument_list>(<argument><expr><call><name><name>Nested1</name><operator>.</operator><name>file</name><operator>.</operator><name>toPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertTrue</name></name><argument_list>(<argument><expr><name><name>Nested1</name><operator>.</operator><name>file</name></name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>Files</name><operator>.</operator><name>exists</name></name><argument_list>(<argument><expr><name><name>Nested1</name><operator>.</operator><name>file</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>delete</name></name><argument_list>(<argument><expr><name><name>Nested1</name><operator>.</operator><name>file</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
   
   <class><specifier>public</specifier> <specifier>static</specifier> class <name>Nested2</name> <super_list><extends>extends <super><name><name>WithNestedTests</name><operator>.</operator><name>AbstractNestedTest</name></name></super></extends></super_list> <block>{
    <decl_stmt><decl><type><specifier>static</specifier> <name>File</name></type> <name>file</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>static</specifier> <name>File</name></type> <name>parent</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>static</specifier> <name>RandomAccessFile</name></type> <name>openFile</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>static</specifier> <name>Path</name></type> <name>file</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>static</specifier> <name>Path</name></type> <name>parent</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>static</specifier> <name>SeekableByteChannel</name></type> <name>openFile</name></decl>;</decl_stmt>
 
     <function><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"deprecation"</literal></expr></argument>)</argument_list></annotation>
     <type><specifier>public</specifier> <name>void</name></type> <name>testDummy</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
      <expr_stmt><expr><name>file</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"leftover"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"child.locked"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>openFile</name> <operator>=</operator> <operator>new</operator> <call><name>RandomAccessFile</name><argument_list>(<argument><expr><name>file</name></expr></argument>, <argument><expr><literal type="string">"rw"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>file</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"leftover"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>resolve</name><argument_list>(<argument><expr><literal type="string">"child.locked"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>openFile</name> <operator>=</operator> <call><name><name>Files</name><operator>.</operator><name>newByteChannel</name></name><argument_list>(<argument><expr><name>file</name></expr></argument>, <argument><expr><name><name>StandardOpenOption</name><operator>.</operator><name>READ</name></name></expr></argument>, <argument><expr><name><name>StandardOpenOption</name><operator>.</operator><name>WRITE</name></name></expr></argument>, <argument><expr><name><name>StandardOpenOption</name><operator>.</operator><name>CREATE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
       <expr_stmt><expr><name>parent</name> <operator>=</operator> <call><name><name>LuceneTestCase</name><operator>.</operator><name>getBaseTempDirForTestClass</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>demo</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>demo</name><operator>/</operator><name><name>IndexFiles</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>demo</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>demo</name><operator>/</operator><name><name>IndexFiles</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">2993e600d0b</literal><operator>..</operator><literal type="number">8c324b70f1f</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>demo</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>demo</name><operator>/</operator><name><name>IndexFiles</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>demo</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>demo</name><operator>/</operator><name><name>IndexFiles</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">32</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">32</literal></expr><operator>,</operator><expr><literal type="number">16</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>Directory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>FSDirectory</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>BufferedReader</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileInputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileNotFoundException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStreamReader</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>StandardCharsets</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>FileVisitResult</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Paths</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>SimpleFileVisitor</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>attribute</name><operator>.</operator><name>BasicFileAttributes</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Date</name></name>;</import>
 
 <comment type="block" format="javadoc">/** Index all text files under a directory.
@@ -75,9 +79,9 @@ public class IndexFiles {
       System.exit(1);
     }
 
    final File docDir = new File(docsPath);
    if (!docDir.exists() || !docDir.canRead()) {
      System.out.println("Document directory '" +docDir.getAbsolutePath()+ "' does not exist or is not readable, please check the path");
    final Path docDir = Paths.get(docsPath);
    if (!Files.isReadable(docDir)) {
      System.out.println("Document directory '" +docDir.toAbsolutePath()+ "' does not exist or is not readable, please check the path");
       System.exit(1);
     }
     
@@ -85,7 +89,7 @@ public class IndexFiles {
     try {
       System.out.println("Indexing to directory '" + indexPath + "'...");
 
      Directory dir = FSDirectory.open(new File(indexPath));
      Directory dir = FSDirectory.open(Paths.get(indexPath));
       Analyzer analyzer = new StandardAnalyzer();
       IndexWriterConfig iwc = new IndexWriterConfig(analyzer);
 
@@ -139,74 +143,65 @@ public class IndexFiles {
    * &gt;WriteLineDocTask&lt;/a&gt;.
    *  
    * @param writer Writer to the index where the given file/dir info will be stored
   * @param file The file to index, or the directory to recurse into to find files to index
   * @param path The file to index, or the directory to recurse into to find files to index
    * @throws IOException If there is a low-level I/O error
    */</comment>
  <function><type><specifier>static</specifier> <name>void</name></type> <name>indexDocs</name><parameter_list>(<parameter><decl><type><name>IndexWriter</name></type> <name>writer</name></decl></parameter>, <parameter><decl><type><name>File</name></type> <name>file</name></decl></parameter>)</parameter_list>
    <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <comment type="line">// do not try to index files that cannot be read</comment>
    <if_stmt><if>if <condition>(<expr><call><name><name>file</name><operator>.</operator><name>canRead</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><call><name><name>file</name><operator>.</operator><name>isDirectory</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
        <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>files</name> <init>= <expr><call><name><name>file</name><operator>.</operator><name>list</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <comment type="line">// an IO error could occur</comment>
        <if_stmt><if>if <condition>(<expr><name>files</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
          <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>files</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
            <expr_stmt><expr><call><name>indexDocs</name><argument_list>(<argument><expr><name>writer</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>file</name></expr></argument>, <argument><expr><name><name>files</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <function><type><specifier>static</specifier> <name>void</name></type> <name>indexDocs</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>IndexWriter</name></type> <name>writer</name></decl></parameter>, <parameter><decl><type><name>Path</name></type> <name>path</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><call><name><name>Files</name><operator>.</operator><name>isDirectory</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>walkFileTree</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>, <argument><expr><operator>new</operator> <class><super><name><name>SimpleFileVisitor</name><argument_list type="generic">&lt;<argument><name>Path</name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{
        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>FileVisitResult</name></type> <name>visitFile</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>file</name></decl></parameter>, <parameter><decl><type><name>BasicFileAttributes</name></type> <name>attrs</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
          <try>try <block>{<block_content>
            <expr_stmt><expr><call><name>indexDoc</name><argument_list>(<argument><expr><name>writer</name></expr></argument>, <argument><expr><name>file</name></expr></argument>, <argument><expr><call><name><name>attrs</name><operator>.</operator><name>lastModifiedTime</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toMillis</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>ignore</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <comment type="line">// don't index files that can't be read.</comment>
           </block_content>}</block></catch></try>
          <return>return <expr><name><name>FileVisitResult</name><operator>.</operator><name>CONTINUE</name></name></expr>;</return>
         </block_content>}</block></function>
      }</block></class></expr></argument> <if_stmt><else>else <block>{<block_content>

        <decl_stmt><decl><type><name>FileInputStream</name></type> <name>fis</name></decl>;</decl_stmt>
        <try>try <block>{<block_content>
          <expr_stmt><expr><name>fis</name> <operator>=</operator> <operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>FileNotFoundException</name></type> <name>fnfe</name></decl></parameter>)</parameter_list> <block>{<block_content>
          <comment type="line">// at least on windows, some temporary files raise this exception with an "access denied" message</comment>
          <comment type="line">// checking if the file can be read doesn't help</comment>
          <return>return;</return>
        </block_content>}</block></catch></try>
      </block_content>}</block></else></if_stmt></argument_list></call></expr></expr_stmt>)</block_content></block><empty_stmt>;</empty_stmt></if></if_stmt>
    </block_content>}</block></function> <if_stmt><else>else <block>{<block_content>
      <expr_stmt><expr><call><name>indexDoc</name><argument_list>(<argument><expr><name>writer</name></expr></argument>, <argument><expr><name>path</name></expr></argument>, <argument><expr><call><name><name>Files</name><operator>.</operator><name>getLastModifiedTime</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toMillis</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
  </block_content>}</block></for>
 
        <try>try <block>{<block_content>

          <comment type="line">// make a new, empty document</comment>
          <decl_stmt><decl><type><name>Document</name></type> <name>doc</name> <init>= <expr><operator>new</operator> <call><name>Document</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

          <comment type="line">// Add the path of the file as a field named "path".  Use a</comment>
          <comment type="line">// field that is indexed (i.e. searchable), but don't tokenize </comment>
          <comment type="line">// the field into separate words and don't index term frequency</comment>
          <comment type="line">// or positional information:</comment>
          <decl_stmt><decl><type><name>Field</name></type> <name>pathField</name> <init>= <expr><operator>new</operator> <call><name>StringField</name><argument_list>(<argument><expr><literal type="string">"path"</literal></expr></argument>, <argument><expr><call><name><name>file</name><operator>.</operator><name>getPath</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>Field</name><operator>.</operator><name>Store</name><operator>.</operator><name>YES</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <expr_stmt><expr><call><name><name>doc</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>pathField</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

          <comment type="line">// Add the last modified date of the file a field named "modified".</comment>
          <comment type="line">// Use a LongField that is indexed (i.e. efficiently filterable with</comment>
          <comment type="line">// NumericRangeFilter).  This indexes to milli-second resolution, which</comment>
          <comment type="line">// is often too fine.  You could instead create a number based on</comment>
          <comment type="line">// year/month/day/hour/minutes/seconds, down the resolution you require.</comment>
          <comment type="line">// For example the long value 2011021714 would mean</comment>
          <comment type="line">// February 17, 2011, 2-3 PM.</comment>
          <expr_stmt><expr><call><name><name>doc</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>LongField</name><argument_list>(<argument><expr><literal type="string">"modified"</literal></expr></argument>, <argument><expr><call><name><name>file</name><operator>.</operator><name>lastModified</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>Field</name><operator>.</operator><name>Store</name><operator>.</operator><name>NO</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

          <comment type="line">// Add the contents of the file to a field named "contents".  Specify a Reader,</comment>
          <comment type="line">// so that the text of the file is tokenized and indexed, but not stored.</comment>
          <comment type="line">// Note that FileReader expects the file to be in UTF-8 encoding.</comment>
          <comment type="line">// If that's not the case searching for special characters will fail.</comment>
          <expr_stmt><expr><call><name><name>doc</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>TextField</name><argument_list>(<argument><expr><literal type="string">"contents"</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>BufferedReader</name><argument_list>(<argument><expr><operator>new</operator> <call><name>InputStreamReader</name><argument_list>(<argument><expr><name>fis</name></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

          <if_stmt><if>if <condition>(<expr><call><name><name>writer</name><operator>.</operator><name>getConfig</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getOpenMode</name><argument_list>()</argument_list></call> <operator>==</operator> <name><name>OpenMode</name><operator>.</operator><name>CREATE</name></name></expr>)</condition> <block>{<block_content>
            <comment type="line">// New index, so we just add the document (no old document can be there):</comment>
            <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"adding "</literal> <operator>+</operator> <name>file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>addDocument</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          </block_content>}</block></if> <else>else <block>{<block_content>
            <comment type="line">// Existing index (an old copy of this document may have been indexed) so </comment>
            <comment type="line">// we use updateDocument instead to replace the old one matching the exact </comment>
            <comment type="line">// path, if present:</comment>
            <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"updating "</literal> <operator>+</operator> <name>file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>updateDocument</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Term</name><argument_list>(<argument><expr><literal type="string">"path"</literal></expr></argument>, <argument><expr><call><name><name>file</name><operator>.</operator><name>getPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          </block_content>}</block></else></if_stmt>
          
        </block_content>}</block> <finally>finally <block>{<block_content>
          <expr_stmt><expr><call><name><name>fis</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></finally></try>
  <comment type="block" format="javadoc">/** Indexes a single document */</comment>
  <function><type><specifier>static</specifier> <name>void</name></type> <name>indexDoc</name><parameter_list>(<parameter><decl><type><name>IndexWriter</name></type> <name>writer</name></decl></parameter>, <parameter><decl><type><name>Path</name></type> <name>file</name></decl></parameter>, <parameter><decl><type><name>long</name></type> <name>lastModified</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <try>try <init>(<decl><type><name>InputStream</name></type> <name>stream</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>newInputStream</name></name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
      <comment type="line">// make a new, empty document</comment>
      <decl_stmt><decl><type><name>Document</name></type> <name>doc</name> <init>= <expr><operator>new</operator> <call><name>Document</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      
      <comment type="line">// Add the path of the file as a field named "path".  Use a</comment>
      <comment type="line">// field that is indexed (i.e. searchable), but don't tokenize </comment>
      <comment type="line">// the field into separate words and don't index term frequency</comment>
      <comment type="line">// or positional information:</comment>
      <decl_stmt><decl><type><name>Field</name></type> <name>pathField</name> <init>= <expr><operator>new</operator> <call><name>StringField</name><argument_list>(<argument><expr><literal type="string">"path"</literal></expr></argument>, <argument><expr><call><name><name>file</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>Field</name><operator>.</operator><name>Store</name><operator>.</operator><name>YES</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>doc</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>pathField</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      
      <comment type="line">// Add the last modified date of the file a field named "modified".</comment>
      <comment type="line">// Use a LongField that is indexed (i.e. efficiently filterable with</comment>
      <comment type="line">// NumericRangeFilter).  This indexes to milli-second resolution, which</comment>
      <comment type="line">// is often too fine.  You could instead create a number based on</comment>
      <comment type="line">// year/month/day/hour/minutes/seconds, down the resolution you require.</comment>
      <comment type="line">// For example the long value 2011021714 would mean</comment>
      <comment type="line">// February 17, 2011, 2-3 PM.</comment>
      <expr_stmt><expr><call><name><name>doc</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>LongField</name><argument_list>(<argument><expr><literal type="string">"modified"</literal></expr></argument>, <argument><expr><name>lastModified</name></expr></argument>, <argument><expr><name><name>Field</name><operator>.</operator><name>Store</name><operator>.</operator><name>NO</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      
      <comment type="line">// Add the contents of the file to a field named "contents".  Specify a Reader,</comment>
      <comment type="line">// so that the text of the file is tokenized and indexed, but not stored.</comment>
      <comment type="line">// Note that FileReader expects the file to be in UTF-8 encoding.</comment>
      <comment type="line">// If that's not the case searching for special characters will fail.</comment>
      <expr_stmt><expr><call><name><name>doc</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>TextField</name><argument_list>(<argument><expr><literal type="string">"contents"</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>BufferedReader</name><argument_list>(<argument><expr><operator>new</operator> <call><name>InputStreamReader</name><argument_list>(<argument><expr><name>stream</name></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      
      <if_stmt><if>if <condition>(<expr><call><name><name>writer</name><operator>.</operator><name>getConfig</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getOpenMode</name><argument_list>()</argument_list></call> <operator>==</operator> <name><name>OpenMode</name><operator>.</operator><name>CREATE</name></name></expr>)</condition> <block>{<block_content>
        <comment type="line">// New index, so we just add the document (no old document can be there):</comment>
        <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"adding "</literal> <operator>+</operator> <name>file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>addDocument</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if> <else>else <block>{<block_content>
        <comment type="line">// Existing index (an old copy of this document may have been indexed) so </comment>
        <comment type="line">// we use updateDocument instead to replace the old one matching the exact </comment>
        <comment type="line">// path, if present:</comment>
        <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"updating "</literal> <operator>+</operator> <name>file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>updateDocument</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Term</name><argument_list>(<argument><expr><literal type="string">"path"</literal></expr></argument>, <argument><expr><call><name><name>file</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></else></if_stmt>
     </block_content>}</block></try>
   </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>demo</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>demo</name><operator>/</operator><name><name>SearchFiles</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>demo</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>demo</name><operator>/</operator><name><name>SearchFiles</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">33db27f4d32</literal><operator>..</operator><name>daade5c22eb</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>demo</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>demo</name><operator>/</operator><name><name>SearchFiles</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>demo</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>demo</name><operator>/</operator><name><name>SearchFiles</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">16</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">15</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>demo</name></name>;</package>
  <expr_stmt><expr><operator>*</operator><operator>/</operator></expr></expr_stmt>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>BufferedReader</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileInputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStreamReader</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>StandardCharsets</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Paths</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Date</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>Analyzer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>standard</name><operator>.</operator><name>StandardAnalyzer</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Document</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>DirectoryReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>StoredDocument</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">88</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">87</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>SearchFiles</name> <block>{
       }</block></expr></expr_stmt>
     </block_content>}</block></if></if_stmt>
     
    <decl_stmt><decl><type><name>IndexReader</name></type> <name>reader</name> <init>= <expr><call><name><name>DirectoryReader</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><call><name><name>FSDirectory</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>index</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>IndexReader</name></type> <name>reader</name> <init>= <expr><call><name><name>DirectoryReader</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><call><name><name>FSDirectory</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>index</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>IndexSearcher</name></type> <name>searcher</name> <init>= <expr><operator>new</operator> <call><name>IndexSearcher</name><argument_list>(<argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>Analyzer</name></type> <name>analyzer</name> <init>= <expr><operator>new</operator> <call><name>StandardAnalyzer</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <decl_stmt><decl><type><name>BufferedReader</name></type> <name>in</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
     <if_stmt><if>if <condition>(<expr><name>queries</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>in</name> <operator>=</operator> <operator>new</operator> <call><name>BufferedReader</name><argument_list>(<argument><expr><operator>new</operator> <call><name>InputStreamReader</name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>queries</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>in</name> <operator>=</operator> <call><name><name>Files</name><operator>.</operator><name>newBufferedReader</name></name><argument_list>(<argument><expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>queries</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></if> <else>else <block>{<block_content>
       <expr_stmt><expr><name>in</name> <operator>=</operator> <operator>new</operator> <call><name>BufferedReader</name><argument_list>(<argument><expr><operator>new</operator> <call><name>InputStreamReader</name><argument_list>(<argument><expr><name><name>System</name><operator>.</operator><name>in</name></name></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></else></if_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>demo</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>demo</name><operator>/</operator><name><name>TestDemo</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>demo</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>demo</name><operator>/</operator><name><name>TestDemo</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>b7590336fb6</name><operator>..</operator><name>a51231963cd</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>demo</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>demo</name><operator>/</operator><name><name>TestDemo</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>demo</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>demo</name><operator>/</operator><name><name>TestDemo</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">19</literal> <operator>+</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">20</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>ByteArrayOutputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>PrintStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>Charset</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>LuceneTestCase</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>LuceneTestCase</name><operator>.</operator><name>SuppressSysoutChecks</name></name>;</import>
 
 <class><specifier>public</specifier> class <name>TestDemo</name> <super_list><extends>extends <super><name>LuceneTestCase</name></super></extends></super_list> <block>{
 
  <function><type><specifier>private</specifier> <name>void</name></type> <name>testOneSearch</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>indexPath</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>query</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>expectedHitCount</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
  <function><type><specifier>private</specifier> <name>void</name></type> <name>testOneSearch</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>indexPath</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>query</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>expectedHitCount</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
     <decl_stmt><decl><type><name>PrintStream</name></type> <name>outSave</name> <init>= <expr><name><name>System</name><operator>.</operator><name>out</name></name></expr></init></decl>;</decl_stmt>
     <try>try <block>{<block_content>
       <decl_stmt><decl><type><name>ByteArrayOutputStream</name></type> <name>bytes</name> <init>= <expr><operator>new</operator> <call><name>ByteArrayOutputStream</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>PrintStream</name></type> <name>fakeSystemOut</name> <init>= <expr><operator>new</operator> <call><name>PrintStream</name><argument_list>(<argument><expr><name>bytes</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><call><name><name>Charset</name><operator>.</operator><name>defaultCharset</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>name</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>setOut</name></name><argument_list>(<argument><expr><name>fakeSystemOut</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>SearchFiles</name><operator>.</operator><name>main</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{<expr><literal type="string">"-query"</literal></expr>, <expr><name>query</name></expr>, <expr><literal type="string">"-index"</literal></expr>, <expr><call><name><name>indexPath</name><operator>.</operator><name>getPath</name></name><argument_list>()</argument_list></call></expr>}</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>SearchFiles</name><operator>.</operator><name>main</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{<expr><literal type="string">"-query"</literal></expr>, <expr><name>query</name></expr>, <expr><literal type="string">"-index"</literal></expr>, <expr><call><name><name>indexPath</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr>}</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>fakeSystemOut</name><operator>.</operator><name>flush</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <decl_stmt><decl><type><name>String</name></type> <name>output</name> <init>= <expr><call><name><name>bytes</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><call><name><name>Charset</name><operator>.</operator><name>defaultCharset</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>name</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="line">// intentionally use default encoding</comment>
       <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"output="</literal> <operator>+</operator> <name>output</name></expr></argument>, <argument><expr><call><name><name>output</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><name>expectedHitCount</name> <operator>+</operator> <literal type="string">" total matching documents"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">43</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">44</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestDemo</name> extends <name>LuceneTestCase</name> <block>{
   }</block>
 
   <specifier>public</specifier> <name>void</name> <call><name>testIndexSearch</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>File</name> <name>dir</name> <operator>=</operator> <call><name>getDataFile</name><argument_list>(<argument><expr><literal type="string">"test-files/docs"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>indexDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"ContribDemoTest"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>IndexFiles</name><operator>.</operator><name>main</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{ <expr><literal type="string">"-create"</literal></expr>, <expr><literal type="string">"-docs"</literal></expr>, <expr><call><name><name>dir</name><operator>.</operator><name>getPath</name></name><argument_list>()</argument_list></call></expr>, <expr><literal type="string">"-index"</literal></expr>, <expr><call><name><name>indexDir</name><operator>.</operator><name>getPath</name></name><argument_list>()</argument_list></call></expr>}</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>dir</name> <init>= <expr><call><name>getDataPath</name><argument_list>(<argument><expr><literal type="string">"test-files/docs"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>indexDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"ContribDemoTest"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>IndexFiles</name><operator>.</operator><name>main</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{ <expr><literal type="string">"-create"</literal></expr>, <expr><literal type="string">"-docs"</literal></expr>, <expr><call><name><name>dir</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr>, <expr><literal type="string">"-index"</literal></expr>, <expr><call><name><name>indexDir</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr>}</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>testOneSearch</name><argument_list>(<argument><expr><name>indexDir</name></expr></argument>, <argument><expr><literal type="string">"apache"</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>testOneSearch</name><argument_list>(<argument><expr><name>indexDir</name></expr></argument>, <argument><expr><literal type="string">"patent"</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>testOneSearch</name><argument_list>(<argument><expr><name>indexDir</name></expr></argument>, <argument><expr><literal type="string">"lucene"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name>taxonomy</name><operator>/</operator><name><name>PrintTaxonomyStats</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name>taxonomy</name><operator>/</operator><name><name>PrintTaxonomyStats</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>e30e534fc19</name><operator>..</operator><literal type="number">102e47c9b3c</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name>taxonomy</name><operator>/</operator><name><name>PrintTaxonomyStats</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name>taxonomy</name><operator>/</operator><name><name>PrintTaxonomyStats</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>facet</name><operator>.</operator><name>taxonomy</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>PrintStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Paths</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>facet</name><operator>.</operator><name>taxonomy</name><operator>.</operator><name>TaxonomyReader</name><operator>.</operator><name>ChildrenIterator</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>facet</name><operator>.</operator><name>taxonomy</name><operator>.</operator><name>directory</name><operator>.</operator><name>DirectoryTaxonomyReader</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">50</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">50</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>PrintTaxonomyStats</name> <block>{
       <expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"\nUsage: java -classpath ... org.apache.lucene.facet.util.PrintTaxonomyStats [-printTree] /path/to/taxononmy/index\n"</literal></expr></argument>)</argument_list></call></expr>;
       <call><name><name>System</name><operator>.</operator><name>exit</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     </block_content>}</block></try>
    <decl_stmt><decl><type><name>Directory</name></type> <name>dir</name> <init>= <expr><call><name><name>FSDirectory</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Directory</name></type> <name>dir</name> <init>= <expr><call><name><name>FSDirectory</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>TaxonomyReader</name></type> <name>r</name> <init>= <expr><operator>new</operator> <call><name>DirectoryTaxonomyReader</name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>printStats</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><name><name>System</name><operator>.</operator><name>out</name></name></expr></argument>, <argument><expr><name>printTree</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>r</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name>taxonomy</name><operator>/</operator><name>directory</name><operator>/</operator><name><name>DirectoryTaxonomyWriter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name>taxonomy</name><operator>/</operator><name>directory</name><operator>/</operator><name><name>DirectoryTaxonomyWriter</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>ca334204542</name><operator>..</operator><literal type="number">2bde43de53e</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name>taxonomy</name><operator>/</operator><name>directory</name><operator>/</operator><name><name>DirectoryTaxonomyWriter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name>taxonomy</name><operator>/</operator><name>directory</name><operator>/</operator><name><name>DirectoryTaxonomyWriter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">4</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">4</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>BufferedInputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>BufferedOutputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>DataInputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>DataOutputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileInputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileNotFoundException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileOutputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>atomic</name><operator>.</operator><name>AtomicInteger</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">891</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">888</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ <specifier>public</specifier> <name>class</name> <name>DirectoryTaxonomyWriter</name> implements <name>TaxonomyWriter</name> <block>{
    <expr><operator>*</operator> <block>{@<expr><name>link</name> <name>OrdinalMap</name></expr>}</block> <name>maintained</name> <name>on</name> <name>file</name> <name>system</name>
    <operator>*</operator><operator>/</operator>
   <specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>class</name> <name>DiskOrdinalMap</name> implements <name>OrdinalMap</name> <block>{
    <expr><name>File</name> <name>tmpfile</name></expr>;
    <name>Path</name> <name>tmpfile</name></block></expr>;
     <name>DataOutputStream</name> <name>out</name></block></expr>;</expr_stmt>
 
     <comment type="block" format="javadoc">/** Sole constructor. */</comment>
    <constructor><specifier>public</specifier> <name>DiskOrdinalMap</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>tmpfile</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>FileNotFoundException</name></expr></argument></throws> <block>{<block_content>
    <constructor><specifier>public</specifier> <name>DiskOrdinalMap</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>tmpfile</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
       <expr_stmt><expr><name><name>this</name><operator>.</operator><name>tmpfile</name></name> <operator>=</operator> <name>tmpfile</name></expr>;</expr_stmt>
       <expr_stmt><expr><name>out</name> <operator>=</operator> <operator>new</operator> <call><name>DataOutputStream</name><argument_list>(<argument><expr><operator>new</operator> <call><name>BufferedOutputStream</name><argument_list>(
          <argument><expr><operator>new</operator> <call><name>FileOutputStream</name><argument_list>(<argument><expr><name>tmpfile</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>newOutputStream</name></name><argument_list>(<argument><expr><name>tmpfile</name></expr></argument>)</argument_list></call></expr></expr_stmt>)</block_content></block></constructor>)</block_content></block><empty_stmt>;</empty_stmt></constructor>
     </block_content>}</block></function>
 
     <annotation>@<name>Override</name></annotation>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">929</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">926</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>DirectoryTaxonomyWriter</name> implements <name>TaxonomyWriter</name> <block>{
       }</block>
       <call><name>addDone</name><argument_list>()</argument_list></call></expr>;</expr_stmt> <comment type="line">// in case this wasn't previously called</comment>
       <decl_stmt><decl><type><name>DataInputStream</name></type> <name>in</name> <init>= <expr><operator>new</operator> <call><name>DataInputStream</name><argument_list>(<argument><expr><operator>new</operator> <call><name>BufferedInputStream</name><argument_list>(
          <argument><expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>tmpfile</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>newInputStream</name></name><argument_list>(<argument><expr><name>tmpfile</name></expr></argument>)</argument_list></call></expr></expr_stmt>)</block_content></block></function>)</block>;</class>
       <expr_stmt><expr><name>map</name> <operator>=</operator> <operator>new</operator> <name><name>int</name><index>[<expr><call><name><name>in</name><operator>.</operator><name>readInt</name></name><argument_list>()</argument_list></call></expr>]</index></name></expr>;</expr_stmt>
       <comment type="line">// NOTE: The current code assumes here that the map is complete,</comment>
       <comment type="line">// i.e., every ordinal gets one and exactly one value. Otherwise,</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">942</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">939</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>DirectoryTaxonomyWriter</name> implements <name>TaxonomyWriter</name> <block>{
       <expr><call><name><name>in</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;
 
       <comment type="line">// Delete the temporary file, which is no longer needed.</comment>
      <call><name><name>Files</name><operator>.</operator><name>delete</name></name><argument_list>(<argument><expr><call><name><name>tmpfile</name><operator>.</operator><name>toPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>delete</name></name><argument_list>(<argument><expr><name>tmpfile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
       <return>return <expr><name>map</name></expr>;</return>
     </block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name>taxonomy</name><operator>/</operator><name>writercache</name><operator>/</operator><name><name>CompactLabelToOrdinal</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name>taxonomy</name><operator>/</operator><name>writercache</name><operator>/</operator><name><name>CompactLabelToOrdinal</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>a9af612b0d1</name><operator>..</operator><literal type="number">68922a4045d</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name>taxonomy</name><operator>/</operator><name>writercache</name><operator>/</operator><name><name>CompactLabelToOrdinal</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name>taxonomy</name><operator>/</operator><name>writercache</name><operator>/</operator><name><name>CompactLabelToOrdinal</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>BufferedInputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>BufferedOutputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>DataInputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>DataOutputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileInputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileOutputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>OutputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Iterator</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>facet</name><operator>.</operator><name>taxonomy</name><operator>.</operator><name>FacetLabel</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">352</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">352</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>CompactLabelToOrdinal</name> extends <name>LabelToOrdinal</name> <block>{
 
   <comment type="block" format="javadoc">/**
    * Opens the file and reloads the CompactLabelToOrdinal. The file it expects
   * is generated from the {@link #flush(File)} command.
   * is generated from the {@link #flush(Path)} command.
    */</comment>
  <expr><specifier>static</specifier> <name>CompactLabelToOrdinal</name> <call><name>open</name><argument_list>(<argument><expr><name>File</name> <name>file</name></expr></argument>, <argument><expr><name>float</name> <name>loadFactor</name></expr></argument>,
  <argument><expr><specifier>static</specifier> <name>CompactLabelToOrdinal</name> <call><name>open</name><argument_list>(<argument><expr><name>Path</name> <name>file</name></expr></argument>, <argument><expr><name>float</name> <name>loadFactor</name></expr></argument>,
                                     <argument><expr><name>int</name> <name>numHashArrays</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
     <comment type="block" format="javadoc">/**
      * Part of the file is the labelRepository, which needs to be rehashed
@@ -369,7 +369,7 @@ public class CompactLabelToOrdinal extends LabelToOrdinal {
     DataInputStream dis = null;
     try {
       dis = new DataInputStream(new BufferedInputStream(
          new FileInputStream(file)));
          Files.newInputStream(file)));
 
       // TaxiReader needs to load the "counter" or occupancy (L2O) to know
       // the next unique facet. we used to load the delimiter too, but
@@ -433,8 +433,8 @@ public class CompactLabelToOrdinal extends LabelToOrdinal {
 
   }
 
  void flush(File file) throws IOException {
    FileOutputStream fos = new FileOutputStream(file);
  void flush(Path file) throws IOException {
    OutputStream fos = Files.newOutputStream(file);
 
     try {
       BufferedOutputStream os = new BufferedOutputStream(fos);
diff --git a/lucene/facet/src/test/org/apache/lucene/facet/taxonomy/writercache/TestCharBlockArray.java b/lucene/facet/src/test/org/apache/lucene/facet/taxonomy/writercache/TestCharBlockArray.java
index 0c2045a7742..e0b1289196f 100644
-- a/lucene/facet/src/test/org/apache/lucene/facet/taxonomy/writercache/TestCharBlockArray.java
++ b/lucene/facet/src/test/org/apache/lucene/facet/taxonomy/writercache/TestCharBlockArray.java
@@ -2,13 +2,12 @@ package org.apache.lucene.facet.taxonomy.writercache;
 
 import java.io.BufferedInputStream;
 import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
 import java.nio.ByteBuffer;
 import java.nio.charset.CharsetDecoder;
 import java.nio.charset.CodingErrorAction;
 import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Path;
 
 import org.apache.lucene.facet.FacetTestCase;
 import org.apache.lucene.util.TestUtil;
@@ -85,14 +84,14 @@ public class TestCharBlockArray extends FacetTestCase {
 
     assertEqualsInternal("GrowingCharArray&lt;-&gt;StringBuilder mismatch.", builder, array);
 
    File tempDir = createTempDir("growingchararray");
    File f = new File(tempDir, "GrowingCharArrayTest.tmp");
    BufferedOutputStream out = new BufferedOutputStream(new FileOutputStream(f));
    Path tempDir = createTempDir("growingchararray");
    Path f = tempDir.resolve("GrowingCharArrayTest.tmp");
    BufferedOutputStream out = new BufferedOutputStream(Files.newOutputStream(f));
     array.flush(out);
     out.flush();
     out.close();
 
    BufferedInputStream in = new BufferedInputStream(new FileInputStream(f));
    BufferedInputStream in = new BufferedInputStream(Files.newInputStream(f));
     array = CharBlockArray.open(in);
     assertEqualsInternal("GrowingCharArray&lt;-&gt;StringBuilder mismatch after flush/load.", builder, array);
     in.close();
diff --git a/lucene/facet/src/test/org/apache/lucene/facet/taxonomy/writercache/TestCompactLabelToOrdinal.java b/lucene/facet/src/test/org/apache/lucene/facet/taxonomy/writercache/TestCompactLabelToOrdinal.java
index 6b1097ed02b..982664544df 100644
-- a/lucene/facet/src/test/org/apache/lucene/facet/taxonomy/writercache/TestCompactLabelToOrdinal.java
++ b/lucene/facet/src/test/org/apache/lucene/facet/taxonomy/writercache/TestCompactLabelToOrdinal.java
@@ -1,18 +1,17 @@
 package org.apache.lucene.facet.taxonomy.writercache;
 
import java.io.File;
 import java.nio.ByteBuffer;
 import java.nio.charset.CharsetDecoder;
 import java.nio.charset.CodingErrorAction;
 import java.nio.charset.StandardCharsets;
 import java.nio.file.Files;
import java.nio.file.Path;
 import java.util.HashMap;
 import java.util.Map;
 import java.util.Random;
 
 import org.apache.lucene.facet.FacetTestCase;
 import org.apache.lucene.facet.taxonomy.FacetLabel;
import org.apache.lucene.util.TestUtil;
 
 import org.junit.Test;
 
@@ -69,15 +68,15 @@ public class TestCompactLabelToOrdinal extends FacetTestCase {
       }
     }
 
    File tmpDir = createTempDir("testLableToOrdinal");
    File f = new File(tmpDir, "CompactLabelToOrdinalTest.tmp");
    Path tmpDir = createTempDir("testLableToOrdinal");
    Path f = tmpDir.resolve("CompactLabelToOrdinalTest.tmp");
     int flushInterval = 10;
 
     for (int i = 0; i &lt; n; i++) {
       if (i &gt; 0 &amp;&amp; i % flushInterval == 0) {
         compact.flush(f);    
         compact = CompactLabelToOrdinal.open(f, 0.15f, 3);
        Files.delete(f.toPath());
        Files.delete(f);
         if (flushInterval &lt; (n / 10)) {
           flushInterval *= 10;
         }
diff --git a/lucene/misc/build.xml b/lucene/misc/build.xml
index b5ee7b2a5f4..cf95d8cd1b8 100644
-- a/lucene/misc/build.xml
++ b/lucene/misc/build.xml
@@ -23,6 +23,11 @@
     Index tools and other miscellaneous code
   &lt;/description&gt;
 
  &lt;property name="forbidden-base-excludes" value="
    org/apache/lucene/store/NativeUnixDirectory$NativeUnixIndexInput.class
    org/apache/lucene/store/NativeUnixDirectory$NativeUnixIndexOutput.class
  "/&gt;

   &lt;property name="forbidden-sysout-excludes" value="
     org/apache/lucene/index/CompoundFileExtractor.class
     org/apache/lucene/index/IndexSplitter.class
diff --git a/lucene/misc/src/java/org/apache/lucene/index/CompoundFileExtractor.java b/lucene/misc/src/java/org/apache/lucene/index/CompoundFileExtractor.java
index f12d5f8e42f..a78430f0ac3 100644
-- a/lucene/misc/src/java/org/apache/lucene/index/CompoundFileExtractor.java
++ b/lucene/misc/src/java/org/apache/lucene/index/CompoundFileExtractor.java
@@ -25,9 +25,11 @@ package org.apache.lucene.index;
  * @param args Usage: org.apache.lucene.index.IndexReader [-extract] &amp;lt;cfsfile&amp;gt;
  */</comment>
 
<expr><name>import</name> <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name></expr></block></expr></argument></throws></expr></argument>;</argument_list></call></expr></block></expr></expr_stmt>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileOutputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>OutputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Paths</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>CompoundFileDirectory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>Directory</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">75</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">77</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>CompoundFileExtractor</name> <block>{
     <expr><name>IOContext</name> <name>context</name> <operator>=</operator> <name><name>IOContext</name><operator>.</operator><name>READ</name></name></expr>;</block></expr></expr_stmt>
 
     <try>try <block>{<block_content>
      <decl_stmt><decl><type><name>File</name></type> <name>file</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>filename</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>String</name></type> <name>dirname</name> <init>= <expr><call><name><name>file</name><operator>.</operator><name>getAbsoluteFile</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getParent</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><name>filename</name> <operator>=</operator> <call><name><name>file</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>Path</name></type> <name>file</name> <init>= <expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>filename</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>Path</name></type> <name>directory</name> <init>= <expr><call><name><name>file</name><operator>.</operator><name>toAbsolutePath</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getParent</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><name>filename</name> <operator>=</operator> <call><name><name>file</name><operator>.</operator><name>getFileName</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <if_stmt><if>if <condition>(<expr><name>dirImpl</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>dir</name> <operator>=</operator> <call><name><name>FSDirectory</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>dirname</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>dir</name> <operator>=</operator> <call><name><name>FSDirectory</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><name>directory</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></if> <else>else <block>{<block_content>
        <expr_stmt><expr><name>dir</name> <operator>=</operator> <call><name><name>CommandLineUtil</name><operator>.</operator><name>newFSDirectory</name></name><argument_list>(<argument><expr><name>dirImpl</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>dirname</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>dir</name> <operator>=</operator> <call><name><name>CommandLineUtil</name><operator>.</operator><name>newFSDirectory</name></name><argument_list>(<argument><expr><name>dirImpl</name></expr></argument>, <argument><expr><name>directory</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></else></if_stmt>
       
       <expr_stmt><expr><name>cfr</name> <operator>=</operator> <operator>new</operator> <call><name>CompoundFileDirectory</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><name>filename</name></expr></argument>, <argument><expr><name><name>IOContext</name><operator>.</operator><name>DEFAULT</name></name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">96</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">98</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>CompoundFileExtractor</name> <block>{
           <expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"extract "</literal> <operator>+</operator> <name><name>files</name><index>[<expr><name>i</name></expr>]</index></name> <operator>+</operator> <literal type="string">" with "</literal> <operator>+</operator> <name>len</name> <operator>+</operator> <literal type="string">" bytes to local directory..."</literal></expr></argument>)</argument_list></call></expr>;
           <name>IndexInput</name> <name>ii</name> <operator>=</operator> <call><name><name>cfr</name><operator>.</operator><name>openInput</name></name><argument_list>(<argument><expr><name><name>files</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name>context</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
 
          <decl_stmt><decl><type><name>FileOutputStream</name></type> <name>f</name> <init>= <expr><operator>new</operator> <call><name>FileOutputStream</name><argument_list>(<argument><expr><name><name>files</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <decl_stmt><decl><type><name>OutputStream</name></type> <name>f</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>newOutputStream</name></name><argument_list>(<argument><expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>files</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
           <comment type="line">// read and write with a small buffer, which is more effective than reading byte by byte</comment>
           <decl_stmt><decl><type><name><name>byte</name><index>[]</index></name></type> <name>buffer</name> <init>= <expr><operator>new</operator> <name><name>byte</name><index>[<expr><literal type="number">1024</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>misc</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>IndexSplitter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>misc</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>IndexSplitter</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>a3c028728cb</name><operator>..</operator><literal type="number">849a85aa7e8</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>misc</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>IndexSplitter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>misc</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>IndexSplitter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@
  <operator>*</operator><operator>/</operator></expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name></name>;</package>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileInputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileOutputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>OutputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Paths</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>text</name><operator>.</operator><name>DecimalFormat</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>text</name><operator>.</operator><name>DecimalFormatSymbols</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">53</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">51</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>IndexSplitter</name> <block>{
 
   <expr><name>FSDirectory</name> <name>fsDir</name></expr>;
 
  <name>File</name> <name>dir</name></block></expr>;</expr_stmt>
  <decl_stmt><decl><type><name>Path</name></type> <name>dir</name></decl>;</decl_stmt>
 
   <function><type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>main</name><parameter_list>(<parameter><decl><type><name><name>String</name><index>[]</index></name></type> <name>args</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
     <if_stmt><if>if <condition>(<expr><name><name>args</name><operator>.</operator><name>length</name></name> <operator>&lt;</operator> <literal type="number">2</literal></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">64</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">62</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>IndexSplitter</name> <block>{
           <expr><operator>.</operator><call><name>println</name><argument_list>(<argument><expr><literal type="string">"IndexSplitter &lt;srcDir&gt; -d (delete the following segments)"</literal></expr></argument>)</argument_list></call></expr>;</block></expr></expr_stmt>
       <return>return;</return>
     </block_content>}</block></if></if_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>srcDir</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name><name>args</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>srcDir</name> <init>= <expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>args</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>IndexSplitter</name></type> <name>is</name> <init>= <expr><operator>new</operator> <call><name>IndexSplitter</name><argument_list>(<argument><expr><name>srcDir</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>srcDir</name><operator>.</operator><name>exists</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>Exception</name><argument_list>(<argument><expr><literal type="string">"srcdir:"</literal> <operator>+</operator> <call><name><name>srcDir</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument></argument_list></call></expr></throw>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>Files</name><operator>.</operator><name>exists</name></name><argument_list>(<argument><expr><name>srcDir</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>Exception</name><argument_list>(<argument><expr><literal type="string">"srcdir:"</literal> <operator>+</operator> <call><name><name>srcDir</name><operator>.</operator><name>toAbsolutePath</name></name><argument_list>()</argument_list></call>
           <operator>+</operator> <literal type="string">" doesn't exist"</literal></expr></argument>)</argument_list></call></expr>;</throw>
     </block_content>}</block></if></if_stmt>
     <if_stmt><if>if <condition>(<expr><name><name>args</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><literal type="string">"-l"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">79</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">77</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>IndexSplitter</name> <block>{
       }</block>
       <call><name><name>is</name><operator>.</operator><name>remove</name></name><argument_list>(<argument><expr><call><name><name>segs</name><operator>.</operator><name>toArray</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>String</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></if> <else>else <block>{<block_content>
      <decl_stmt><decl><type><name>File</name></type> <name>targetDir</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name><name>args</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>Path</name></type> <name>targetDir</name> <init>= <expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>args</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>segs</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <for>for <control>(<init><decl><type><name>int</name></type> <name>x</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>;</init> <condition><expr><name>x</name> <operator>&lt;</operator> <name><name>args</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>x</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
         <expr_stmt><expr><call><name><name>segs</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name><name>args</name><index>[<expr><name>x</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">88</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">86</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>IndexSplitter</name> <block>{
     }</block></expr></expr_stmt>
   </block_content>}</block></for>
   
  <constructor><specifier>public</specifier> <name>IndexSplitter</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>dir</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
  <constructor><specifier>public</specifier> <name>IndexSplitter</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>dir</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
     <expr_stmt><expr><name><name>this</name><operator>.</operator><name>dir</name></name> <operator>=</operator> <name>dir</name></expr>;</expr_stmt>
     <expr_stmt><expr><name>fsDir</name> <operator>=</operator> <call><name><name>FSDirectory</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>infos</name> <operator>=</operator> <operator>new</operator> <call><name>SegmentInfos</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">129</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">127</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>IndexSplitter</name> <block>{
     <expr><call><name><name>infos</name><operator>.</operator><name>commit</name></name><argument_list>(<argument><expr><name>fsDir</name></expr></argument>)</argument_list></call></expr>;
   }</block></expr></expr_stmt>
 
  <function><type><specifier>public</specifier> <name>void</name></type> <name>split</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>destDir</name></decl></parameter>, <parameter><decl><type><name><name>String</name><index>[]</index></name></type> <name>segs</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>destDir</name><operator>.</operator><name>mkdirs</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  <function><type><specifier>public</specifier> <name>void</name></type> <name>split</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>destDir</name></decl></parameter>, <parameter><decl><type><name><name>String</name><index>[]</index></name></type> <name>segs</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>createDirectories</name></name><argument_list>(<argument><expr><name>destDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>FSDirectory</name></type> <name>destFSDir</name> <init>= <expr><call><name><name>FSDirectory</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><name>destDir</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>SegmentInfos</name></type> <name>destInfos</name> <init>= <expr><operator>new</operator> <call><name>SegmentInfos</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><name><name>destInfos</name><operator>.</operator><name>counter</name></name> <operator>=</operator> <name><name>infos</name><operator>.</operator><name>counter</name></name></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">146</literal></expr><operator>,</operator><expr><literal type="number">26</literal> <operator>+</operator><literal type="number">144</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>IndexSplitter</name> <block>{
       <comment type="line">// now copy files over</comment>
       <expr><name><name>Collection</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name> <name>files</name> <operator>=</operator> <call><name><name>infoPerCommit</name><operator>.</operator><name>files</name></name><argument_list>()</argument_list></call></expr>;</block></expr></expr_stmt>
       <for>for <control>(<init><decl><type><specifier>final</specifier> <name>String</name></type> <name>srcName</name> <range>: <expr><name>files</name></expr></range></decl></init>)</control> <block>{<block_content>
        <decl_stmt><decl><type><name>File</name></type> <name>srcFile</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><name>srcName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>File</name></type> <name>destFile</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>destDir</name></expr></argument>, <argument><expr><name>srcName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>copyFile</name><argument_list>(<argument><expr><name>srcFile</name></expr></argument>, <argument><expr><name>destFile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>Path</name></type> <name>srcFile</name> <init>= <expr><call><name><name>dir</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><name>srcName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Path</name></type> <name>destFile</name> <init>= <expr><call><name><name>destDir</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><name>srcName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>copy</name></name><argument_list>(<argument><expr><name>srcFile</name></expr></argument>, <argument><expr><name>destFile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></for>
     </block_content>}</block></function>
     <expr_stmt><expr><call><name><name>destInfos</name><operator>.</operator><name>changed</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>destInfos</name><operator>.</operator><name>commit</name></name><argument_list>(<argument><expr><name>destFSDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <comment type="line">// System.out.println("destDir:"+destDir.getAbsolutePath());</comment>
   </block_content>}</block></function>

  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name><name>byte</name><index>[]</index></name></type> <name>copyBuffer</name> <init>= <expr><operator>new</operator> <name><name>byte</name><index>[<expr><literal type="number">32</literal><operator>*</operator><literal type="number">1024</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

  <function><type><specifier>private</specifier> <specifier>static</specifier> <name>void</name></type> <name>copyFile</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>src</name></decl></parameter>, <parameter><decl><type><name>File</name></type> <name>dst</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>InputStream</name></type> <name>in</name> <init>= <expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>src</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>OutputStream</name></type> <name>out</name> <init>= <expr><operator>new</operator> <call><name>FileOutputStream</name><argument_list>(<argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>len</name></decl>;</decl_stmt>
    <while>while <condition>(<expr><operator>(</operator><name>len</name> <operator>=</operator> <call><name><name>in</name><operator>.</operator><name>read</name></name><argument_list>(<argument><expr><name>copyBuffer</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>out</name><operator>.</operator><name>write</name></name><argument_list>(<argument><expr><name>copyBuffer</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <expr_stmt><expr><call><name><name>in</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>out</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>
 </block_content>}</block></constructor>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>misc</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>MultiPassIndexSplitter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>misc</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>MultiPassIndexSplitter</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">746c26b8ff3</literal><operator>..</operator><name>f41361b5d7f</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>misc</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>MultiPassIndexSplitter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>misc</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>MultiPassIndexSplitter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Paths</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">128</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">130</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>MultiPassIndexSplitter</name> <block>{
       }</block></expr></expr_stmt> <if_stmt><if type="elseif">else if <condition>(<expr><name><name>args</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><literal type="string">"-seq"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
         <expr_stmt><expr><name>seq</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
       </block_content>}</block></if> <else>else <block>{<block_content>
        <decl_stmt><decl><type><name>File</name></type> <name>file</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name><name>args</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>file</name><operator>.</operator><name>exists</name></name><argument_list>()</argument_list></call> <operator>||</operator> <operator>!</operator><call><name><name>file</name><operator>.</operator><name>isDirectory</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
        <decl_stmt><decl><type><name>Path</name></type> <name>file</name> <init>= <expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>args</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>Files</name><operator>.</operator><name>isDirectory</name></name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
           <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>err</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"Invalid input path - skipping: "</literal> <operator>+</operator> <name>file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           <continue>continue;</continue>
         </block_content>}</block></if></if_stmt>
        <decl_stmt><decl><type><name>Directory</name></type> <name>dir</name> <init>= <expr><call><name><name>FSDirectory</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name><name>args</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Directory</name></type> <name>dir</name> <init>= <expr><call><name><name>FSDirectory</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <try>try <block>{<block_content>
           <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>DirectoryReader</name><operator>.</operator><name>indexExists</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
             <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>err</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"Invalid input index - skipping: "</literal> <operator>+</operator> <name>file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">155</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">157</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>MultiPassIndexSplitter</name> <block>{
     <if_stmt><if>if <condition>(<expr><call><name><name>indexes</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
       <throw>throw <expr><operator>new</operator> <call><name>Exception</name><argument_list>(<argument><expr><literal type="string">"No input indexes to process"</literal></expr></argument>)</argument_list></call></expr>;</throw>
     </block_content>}</block></if></if_stmt>
    <name>File</name> <name>out</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>outDir</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>out</name><operator>.</operator><name>mkdirs</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>Exception</name><argument_list>(<argument><expr><literal type="string">"Can't create output directory: "</literal> <operator>+</operator> <name>out</name></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></if></if_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>out</name> <init>= <expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>outDir</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>createDirectories</name></name><argument_list>(<argument><expr><name>out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name><name>Directory</name><index>[]</index></name></type> <name>dirs</name> <init>= <expr><operator>new</operator> <name><name>Directory</name><index>[<expr><name>numParts</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
     <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>numParts</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
      <expr_stmt><expr><name><name>dirs</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name><name>FSDirectory</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><literal type="string">"part-"</literal> <operator>+</operator> <name>i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>dirs</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name><name>FSDirectory</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><call><name><name>out</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><literal type="string">"part-"</literal> <operator>+</operator> <name>i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></for>
     <decl_stmt><decl><type><name>MultiPassIndexSplitter</name></type> <name>splitter</name> <init>= <expr><operator>new</operator> <call><name>MultiPassIndexSplitter</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>IndexReader</name></type> <name>input</name></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>misc</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>misc</name><operator>/</operator><name><name>GetTermInfo</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>misc</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>misc</name><operator>/</operator><name><name>GetTermInfo</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>b6f202dc3ee</name><operator>..</operator><literal type="number">9b5f86662ea</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>misc</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>misc</name><operator>/</operator><name><name>GetTermInfo</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>misc</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>misc</name><operator>/</operator><name><name>GetTermInfo</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>misc</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Paths</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Locale</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>Directory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>FSDirectory</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">37</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">37</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>GetTermInfo</name> <block>{
     <expr><name>String</name> <name>field</name> <operator>=</operator> <literal type="null">null</literal></expr>;</block></expr></expr_stmt>
     
     <if_stmt><if>if <condition>(<expr><name><name>args</name><operator>.</operator><name>length</name></name> <operator>==</operator> <literal type="number">3</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>dir</name> <operator>=</operator> <call><name><name>FSDirectory</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name><name>args</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>dir</name> <operator>=</operator> <call><name><name>FSDirectory</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>args</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><name>field</name> <operator>=</operator> <name><name>args</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
       <expr_stmt><expr><name>inputStr</name> <operator>=</operator> <name><name>args</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>
     </block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>misc</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>misc</name><operator>/</operator><name><name>HighFreqTerms</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>misc</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>misc</name><operator>/</operator><name><name>HighFreqTerms</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>d1139c9ee01</name><operator>..</operator><literal type="number">161f7f20af2</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>misc</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>misc</name><operator>/</operator><name><name>HighFreqTerms</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>misc</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>misc</name><operator>/</operator><name><name>HighFreqTerms</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">28</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">28</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>FSDirectory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>PriorityQueue</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>BytesRef</name></name>;</import>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Paths</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Comparator</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Locale</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">56</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">56</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>HighFreqTerms</name> <block>{
       <expr><call><name><name>System</name><operator>.</operator><name>exit</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;
     }</block></expr></expr_stmt>     
 
    <decl_stmt><decl><type><name>Directory</name></type> <name>dir</name> <init>= <expr><call><name><name>FSDirectory</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name><name>args</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Directory</name></type> <name>dir</name> <init>= <expr><call><name><name>FSDirectory</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>args</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     
     <decl_stmt><decl><type><name><name>Comparator</name><argument_list type="generic">&lt;<argument><name>TermStats</name></argument>&gt;</argument_list></name></type> <name>comparator</name> <init>= <expr><operator>new</operator> <call><name>DocFreqComparator</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>misc</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>misc</name><operator>/</operator><name><name>IndexMergeTool</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>misc</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>misc</name><operator>/</operator><name><name>IndexMergeTool</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">90f14550d83</literal><operator>..</operator><literal type="number">780ee7a5bb7</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>misc</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>misc</name><operator>/</operator><name><name>IndexMergeTool</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>misc</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>misc</name><operator>/</operator><name><name>IndexMergeTool</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">22</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">22</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexWriterConfig</name><operator>.</operator><name>OpenMode</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>Directory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>FSDirectory</name></name>;</import>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Paths</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
  * Merges indices specified on the command line into the index
@@ -35,14 +35,14 @@ public class IndexMergeTool {
       System.err.println("Usage: IndexMergeTool &lt;mergedIndex&gt; &lt;index1&gt; &lt;index2&gt; [index3] ...");
       System.exit(1);
     }
    FSDirectory mergedIndex = FSDirectory.open(new File(args[0]));
    FSDirectory mergedIndex = FSDirectory.open(Paths.get(args[0]));
 
     IndexWriter writer = new IndexWriter(mergedIndex, new IndexWriterConfig(null)
         .setOpenMode(OpenMode.CREATE));
 
     Directory[] indexes = new Directory[args.length - 1];
     for (int i = 1; i &lt; args.length; i++) {
      indexes[i  - 1] = FSDirectory.open(new File(args[i]));
      indexes[i  - 1] = FSDirectory.open(Paths.get(args[i]));
     }
 
     System.out.println("Merging...");
diff --git a/lucene/misc/src/java/org/apache/lucene/store/NativeUnixDirectory.java b/lucene/misc/src/java/org/apache/lucene/store/NativeUnixDirectory.java
index e951f7d116d..92eb062faf5 100644
-- a/lucene/misc/src/java/org/apache/lucene/store/NativeUnixDirectory.java
++ b/lucene/misc/src/java/org/apache/lucene/store/NativeUnixDirectory.java
@@ -18,13 +18,13 @@ package org.apache.lucene.store;
  */</comment>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>EOFException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileInputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileDescriptor</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileOutputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>ByteBuffer</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>channels</name><operator>.</operator><name>FileChannel</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>Directory</name></name>;</import> <comment type="line">// javadoc</comment>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>IOContext</name><operator>.</operator><name>Context</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">99</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">99</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>NativeUnixDirectory</name> extends <name>FSDirectory</name> <block>{
    <expr><operator>*</operator> @<name>param</name> <name>delegate</name> <name>fallback</name> <name>Directory</name></expr> <for>for non-merges
    * @<throws>throws <argument><expr><name>IOException</name> <name>If</name> <name>there</name> <name>is</name> <name>a</name> <name>low</name><operator>-</operator><name>level</name> <name>I</name><operator>/</operator><name>O</name> <name>error</name>
    <operator>*</operator><operator>/</operator>
  <specifier>public</specifier> <call><name>NativeUnixDirectory</name><argument_list>(<argument><expr><name>File</name> <name>path</name></expr></argument>, <argument><expr><name>int</name> <name>mergeBufferSize</name></expr></argument>, <argument><expr><name>long</name> <name>minBytesDirect</name></expr></argument>, <argument><expr><name>Directory</name> <name>delegate</name></expr></argument>)</argument_list></call></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>public</specifier> <call><name>NativeUnixDirectory</name><argument_list>(<argument><expr><name>Path</name> <name>path</name></expr></argument>, <argument><expr><name>int</name> <name>mergeBufferSize</name></expr></argument>, <argument><expr><name>long</name> <name>minBytesDirect</name></expr></argument>, <argument><expr><name>Directory</name> <name>delegate</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><call><name>super</name><argument_list>(<argument><expr><name>path</name></expr></argument>, <argument><expr><call><name><name>delegate</name><operator>.</operator><name>getLockFactory</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws><empty_stmt>;</empty_stmt></for></block></expr></expr_stmt>
     <if_stmt><if>if <condition>(<expr><operator>(</operator><name>mergeBufferSize</name> <operator>&amp;</operator> <name>ALIGN</name><operator>)</operator> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
       <throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><literal type="string">"mergeBufferSize must be 0 mod "</literal> <operator>+</operator> <name>ALIGN</name> <operator>+</operator> <literal type="string">" (got: "</literal> <operator>+</operator> <name>mergeBufferSize</name> <operator>+</operator> <literal type="string">")"</literal></expr></argument>)</argument_list></call></expr>;</throw>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">115</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">115</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>NativeUnixDirectory</name> extends <name>FSDirectory</name> <block>{
    <expr><operator>*</operator> @<name>param</name> <name>delegate</name> <name>fallback</name> <name>Directory</name></expr> <for>for non-merges
    * @<throws>throws <argument><expr><name>IOException</name> <name>If</name> <name>there</name> <name>is</name> <name>a</name> <name>low</name><operator>-</operator><name>level</name> <name>I</name><operator>/</operator><name>O</name> <name>error</name>
    <operator>*</operator><operator>/</operator>
  <specifier>public</specifier> <call><name>NativeUnixDirectory</name><argument_list>(<argument><expr><name>File</name> <name>path</name></expr></argument>, <argument><expr><name>Directory</name> <name>delegate</name></expr></argument>)</argument_list></call></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>public</specifier> <call><name>NativeUnixDirectory</name><argument_list>(<argument><expr><name>Path</name> <name>path</name></expr></argument>, <argument><expr><name>Directory</name> <name>delegate</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><call><name>this</name><argument_list>(<argument><expr><name>path</name></expr></argument>, <argument><expr><name>DEFAULT_MERGE_BUFFER_SIZE</name></expr></argument>, <argument><expr><name>DEFAULT_MIN_BYTES_DIRECT</name></expr></argument>, <argument><expr><name>delegate</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws><empty_stmt>;</empty_stmt></for>
   }</block></expr></expr_stmt>  
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">125</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">125</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>NativeUnixDirectory</name> extends <name>FSDirectory</name> <block>{
     <if_stmt><if>if <condition>(<expr><name><name>context</name><operator>.</operator><name>context</name></name> <operator>!=</operator> <name><name>Context</name><operator>.</operator><name>MERGE</name></name> <operator>||</operator> <name><name>context</name><operator>.</operator><name>mergeInfo</name><operator>.</operator><name>estimatedMergeBytes</name></name> <operator>&lt;</operator> <name>minBytesDirect</name> <operator>||</operator> <call><name>fileLength</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call> <operator>&lt;</operator> <name>minBytesDirect</name></expr>)</condition> <block>{<block_content>
       <return>return <expr><call><name><name>delegate</name><operator>.</operator><name>openInput</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block></if> <else>else <block>{<block_content>
      <return>return <expr><operator>new</operator> <call><name>NativeUnixIndexInput</name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>getDirectory</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>name</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>mergeBufferSize</name></expr></argument>)</argument_list></call></expr>;</return>
      <return>return <expr><operator>new</operator> <call><name>NativeUnixIndexInput</name><argument_list>(<argument><expr><call><name>getDirectory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>resolve</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>mergeBufferSize</name></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block></else></if_stmt>
   }</block></expr></expr_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">136</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">136</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>NativeUnixDirectory</name> extends <name>FSDirectory</name> <block>{
       <return>return <expr><call><name><name>delegate</name><operator>.</operator><name>createOutput</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</return>
     }</block></expr></expr_stmt> <if_stmt><else>else <block>{<block_content>
       <expr_stmt><expr><call><name>ensureCanWrite</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <return>return <expr><operator>new</operator> <call><name>NativeUnixIndexOutput</name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>getDirectory</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>name</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>mergeBufferSize</name></expr></argument>)</argument_list></call></expr>;</return>
      <return>return <expr><operator>new</operator> <call><name>NativeUnixIndexOutput</name><argument_list>(<argument><expr><call><name>getDirectory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>resolve</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>mergeBufferSize</name></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block></else></if_stmt>
   </block_content>}</block></if></if_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">153</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">153</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>NativeUnixDirectory</name> extends <name>FSDirectory</name> <block>{
     <expr><specifier>private</specifier> <name>long</name> <name>fileLength</name></expr>;
     <specifier>private</specifier> <name>boolean</name> <name>isOpen</name></block></expr>;</expr_stmt>
 
    <constructor><specifier>public</specifier> <name>NativeUnixIndexOutput</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>path</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>bufferSize</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <constructor><specifier>public</specifier> <name>NativeUnixIndexOutput</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>path</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>bufferSize</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
       <comment type="line">//this.path = path;</comment>
       <decl_stmt><decl><type><specifier>final</specifier> <name>FileDescriptor</name></type> <name>fd</name> <init>= <expr><call><name><name>NativePosixUtil</name><operator>.</operator><name>open_direct</name></name><argument_list>(<argument><expr><call><name><name>path</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><name>fos</name> <operator>=</operator> <operator>new</operator> <call><name>FileOutputStream</name><argument_list>(<argument><expr><name>fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">271</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">271</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>NativeUnixDirectory</name> extends <name>FSDirectory</name> <block>{
     <expr><specifier>private</specifier> <name>long</name> <name>filePos</name></expr>;
     <specifier>private</specifier> <name>int</name> <name>bufferPos</name></block></expr>;</expr_stmt>
 
    <constructor><specifier>public</specifier> <name>NativeUnixIndexInput</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>path</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>bufferSize</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
      <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><literal type="string">"NativeUnixIndexInput(path=\""</literal> <operator>+</operator> <call><name><name>path</name><operator>.</operator><name>getPath</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"\")"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <constructor><specifier>public</specifier> <name>NativeUnixIndexInput</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>path</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>bufferSize</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
      <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><literal type="string">"NativeUnixIndexInput(path=\""</literal> <operator>+</operator> <name>path</name> <operator>+</operator> <literal type="string">"\")"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <decl_stmt><decl><type><specifier>final</specifier> <name>FileDescriptor</name></type> <name>fd</name> <init>= <expr><call><name><name>NativePosixUtil</name><operator>.</operator><name>open_direct</name></name><argument_list>(<argument><expr><call><name><name>path</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><name>fis</name> <operator>=</operator> <operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><name>channel</name> <operator>=</operator> <call><name><name>fis</name><operator>.</operator><name>getChannel</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>misc</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>WindowsDirectory</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>misc</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>WindowsDirectory</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>f635fe37ccd</name><operator>..</operator><literal type="number">58940851e5b</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>misc</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>WindowsDirectory</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>misc</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>WindowsDirectory</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>EOFException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>Directory</name></name>;</import> <comment type="line">// javadoc</comment>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>NativeFSLockFactory</name></name>;</import> <comment type="line">// javadoc</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">56</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">56</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>WindowsDirectory</name> extends <name>FSDirectory</name> <block>{
    <expr><operator>*</operator> <operator>(</operator><block>{@<expr><name>link</name> <name>NativeFSLockFactory</name></expr>}</block><operator>)</operator></expr>;
    <operator>*</operator> @<throws>throws <argument><expr><name>IOException</name> <name>If</name> <name>there</name> <name>is</name> <name>a</name> <name>low</name><operator>-</operator><name>level</name> <name>I</name><operator>/</operator><name>O</name> <name>error</name>
    <operator>*</operator><operator>/</operator>
  <specifier>public</specifier> <call><name>WindowsDirectory</name><argument_list>(<argument><expr><name>File</name> <name>path</name></expr></argument>, <argument><expr><name>LockFactory</name> <name>lockFactory</name></expr></argument>)</argument_list></call></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>public</specifier> <call><name>WindowsDirectory</name><argument_list>(<argument><expr><name>Path</name> <name>path</name></expr></argument>, <argument><expr><name>LockFactory</name> <name>lockFactory</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><call><name>super</name><argument_list>(<argument><expr><name>path</name></expr></argument>, <argument><expr><name>lockFactory</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></block></expr>;</expr_stmt>
   </block_content>}</block></constructor>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">65</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">65</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ <specifier>public</specifier> <name>class</name> <name>WindowsDirectory</name> extends <name>FSDirectory</name> <block>{
    <expr><operator>*</operator> @<name>param</name> <name>path</name> <name>the</name> <name>path</name> <name>of</name> <name>the</name> <name>directory</name>
    <operator>*</operator> @<throws>throws <argument><expr><name>IOException</name> <name>If</name> <name>there</name> <name>is</name> <name>a</name> <name>low</name><operator>-</operator><name>level</name> <name>I</name><operator>/</operator><name>O</name> <name>error</name>
    <operator>*</operator><operator>/</operator>
  <specifier>public</specifier> <call><name>WindowsDirectory</name><argument_list>(<argument><expr><name>File</name> <name>path</name></expr></argument>)</argument_list></call></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>public</specifier> <call><name>WindowsDirectory</name><argument_list>(<argument><expr><name>Path</name> <name>path</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><call><name>super</name><argument_list>(<argument><expr><name>path</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
   }</block></expr></expr_stmt>
 
   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>public</specifier> <name>IndexInput</name></type> <name>openInput</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>name</name></decl></parameter>, <parameter><decl><type><name>IOContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
     <expr_stmt><expr><call><name>ensureOpen</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><operator>new</operator> <call><name>WindowsIndexInput</name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>getDirectory</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>name</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>Math</name><operator>.</operator><name>max</name></name><argument_list>(<argument><expr><call><name><name>BufferedIndexInput</name><operator>.</operator><name>bufferSize</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>DEFAULT_BUFFERSIZE</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
    <return>return <expr><operator>new</operator> <call><name>WindowsIndexInput</name><argument_list>(<argument><expr><call><name>getDirectory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>resolve</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>Math</name><operator>.</operator><name>max</name></name><argument_list>(<argument><expr><call><name><name>BufferedIndexInput</name><operator>.</operator><name>bufferSize</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>DEFAULT_BUFFERSIZE</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
   
   <class><specifier>static</specifier> class <name>WindowsIndexInput</name> <super_list><extends>extends <super><name>BufferedIndexInput</name></super></extends></super_list> <block>{
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">81</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">81</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>WindowsDirectory</name> extends <name>FSDirectory</name> <block>{
     <expr><name>boolean</name> <name>isClone</name></expr>;
     <name>boolean</name> <name>isOpen</name></block></expr>;</expr_stmt>
     
    <constructor><specifier>public</specifier> <name>WindowsIndexInput</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>file</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>bufferSize</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
      <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><literal type="string">"WindowsIndexInput(path=\""</literal> <operator>+</operator> <call><name><name>file</name><operator>.</operator><name>getPath</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"\")"</literal></expr></argument>, <argument><expr><name>bufferSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>fd</name> <operator>=</operator> <call><name><name>WindowsDirectory</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><call><name><name>file</name><operator>.</operator><name>getPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <constructor><specifier>public</specifier> <name>WindowsIndexInput</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>file</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>bufferSize</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
      <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><literal type="string">"WindowsIndexInput(path=\""</literal> <operator>+</operator> <name>file</name> <operator>+</operator> <literal type="string">"\")"</literal></expr></argument>, <argument><expr><name>bufferSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>fd</name> <operator>=</operator> <call><name><name>WindowsDirectory</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><call><name><name>file</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><name>length</name> <operator>=</operator> <call><name><name>WindowsDirectory</name><operator>.</operator><name>length</name></name><argument_list>(<argument><expr><name>fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><name>isOpen</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
     </block_content>}</block></constructor>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>misc</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexSplitter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>misc</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexSplitter</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">0206bd9bbcc</literal><operator>..</operator><literal type="number">8ad652dbc9f</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>misc</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexSplitter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>misc</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexSplitter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@
  <operator>*</operator><operator>/</operator></expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name></name>;</package>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>MockAnalyzer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Document</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">27</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">27</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>LuceneTestCase</name></name>;</import>
 
 <class><specifier>public</specifier> class <name>TestIndexSplitter</name> <super_list><extends>extends <super><name>LuceneTestCase</name></super></extends></super_list> <block>{
   <function><type><specifier>public</specifier> <name>void</name></type> <name>test</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>File</name></type> <name>dir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><call><name><name>LuceneTestCase</name><operator>.</operator><name>getTestClass</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getSimpleName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>destDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><call><name><name>LuceneTestCase</name><operator>.</operator><name>getTestClass</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getSimpleName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>dir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><call><name><name>LuceneTestCase</name><operator>.</operator><name>getTestClass</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getSimpleName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>destDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><call><name><name>LuceneTestCase</name><operator>.</operator><name>getTestClass</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getSimpleName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>Directory</name></type> <name>fsDir</name> <init>= <expr><call><name>newFSDirectory</name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <comment type="line">// IndexSplitter.split makes its own commit directly with SIPC/SegmentInfos,</comment>
     <comment type="line">// so the unreferenced files are expected.</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">75</literal></expr><operator>,</operator><expr><literal type="number">17</literal> <operator>+</operator><literal type="number">75</literal></expr><operator>,</operator><expr><literal type="number">17</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestIndexSplitter</name> extends <name>LuceneTestCase</name> <block>{
     <expr><call><name><name>fsDirDest</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;
     
     <comment type="line">// now test cmdline</comment>
    <name>File</name> <name>destDir2</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><call><name><name>LuceneTestCase</name><operator>.</operator><name>getTestClass</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getSimpleName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>IndexSplitter</name><operator>.</operator><name>main</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{<expr><call><name><name>dir</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr>, <expr><call><name><name>destDir2</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr>, <expr><name>splitSegName</name></expr>}</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><call><name><name>destDir2</name><operator>.</operator><name>listFiles</name></name><argument_list>()</argument_list></call><operator>.</operator><name>length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>destDir2</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><call><name><name>LuceneTestCase</name><operator>.</operator><name>getTestClass</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getSimpleName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>IndexSplitter</name><operator>.</operator><name>main</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{<expr><call><name><name>dir</name><operator>.</operator><name>toAbsolutePath</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr>, <expr><call><name><name>destDir2</name><operator>.</operator><name>toAbsolutePath</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr>, <expr><name>splitSegName</name></expr>}</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>Directory</name></type> <name>fsDirDest2</name> <init>= <expr><call><name>newFSDirectory</name><argument_list>(<argument><expr><name>destDir2</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><call><name><name>fsDirDest2</name><operator>.</operator><name>listAll</name></name><argument_list>()</argument_list></call><operator>.</operator><name>length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>r</name> <operator>=</operator> <call><name><name>DirectoryReader</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><name>fsDirDest2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">50</literal></expr></argument>, <argument><expr><call><name><name>r</name><operator>.</operator><name>maxDoc</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>r</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>fsDirDest2</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     
     <comment type="line">// now remove the copied segment from src</comment>
    <expr_stmt><expr><call><name><name>IndexSplitter</name><operator>.</operator><name>main</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{<expr><call><name><name>dir</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr>, <expr><literal type="string">"-d"</literal></expr>, <expr><name>splitSegName</name></expr>}</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>IndexSplitter</name><operator>.</operator><name>main</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{<expr><call><name><name>dir</name><operator>.</operator><name>toAbsolutePath</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr>, <expr><literal type="string">"-d"</literal></expr>, <expr><name>splitSegName</name></expr>}</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>r</name> <operator>=</operator> <call><name><name>DirectoryReader</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><name>fsDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><call><name><name>r</name><operator>.</operator><name>leaves</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>r</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>replicator</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>replicator</name><operator>/</operator><name><name>PerSessionDirectoryFactory</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>replicator</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>replicator</name><operator>/</operator><name><name>PerSessionDirectoryFactory</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>fe43752b674</name><operator>..</operator><literal type="number">794ab041625</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>replicator</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>replicator</name><operator>/</operator><name><name>PerSessionDirectoryFactory</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>replicator</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>replicator</name><operator>/</operator><name><name>PerSessionDirectoryFactory</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>replicator</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>replicator</name><operator>.</operator><name>ReplicationClient</name><operator>.</operator><name>SourceDirectoryFactory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>Directory</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">34</literal></expr><operator>,</operator><expr><literal type="number">23</literal> <operator>+</operator><literal type="number">35</literal></expr><operator>,</operator><expr><literal type="number">19</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>IOUtils</name></name>;</import>
  <expr_stmt><expr><operator>*</operator><operator>/</operator>
 <specifier>public</specifier> <name>class</name> <name>PerSessionDirectoryFactory</name> implements <name>SourceDirectoryFactory</name> <block>{
   
  <expr><specifier>private</specifier> <name>final</name> <name>File</name> <name>workDir</name></expr>;
  <specifier>private</specifier> <name>final</name> <name>Path</name> <name>workDir</name></block></expr>;</expr_stmt>
   
   <comment type="block" format="javadoc">/** Constructor with the given sources mapping. */</comment>
  <constructor><specifier>public</specifier> <name>PerSessionDirectoryFactory</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>workDir</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <constructor><specifier>public</specifier> <name>PerSessionDirectoryFactory</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>workDir</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <expr_stmt><expr><name><name>this</name><operator>.</operator><name>workDir</name></name> <operator>=</operator> <name>workDir</name></expr>;</expr_stmt>
   </block_content>}</block></constructor>
   
   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>public</specifier> <name>Directory</name></type> <name>getDirectory</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>sessionID</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>source</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>File</name></type> <name>sessionDir</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>workDir</name></expr></argument>, <argument><expr><name>sessionID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>sessionDir</name><operator>.</operator><name>exists</name></name><argument_list>()</argument_list></call> <operator>&amp;&amp;</operator> <operator>!</operator><call><name><name>sessionDir</name><operator>.</operator><name>mkdirs</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>IOException</name><argument_list>(<argument><expr><literal type="string">"failed to create session directory "</literal> <operator>+</operator> <name>sessionDir</name></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></if></if_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>sourceDir</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>sessionDir</name></expr></argument>, <argument><expr><name>source</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>sourceDir</name><operator>.</operator><name>mkdirs</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>IOException</name><argument_list>(<argument><expr><literal type="string">"failed to create source directory "</literal> <operator>+</operator> <name>sourceDir</name></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></if></if_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>sessionDir</name> <init>= <expr><call><name><name>workDir</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><name>sessionID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>createDirectories</name></name><argument_list>(<argument><expr><name>sessionDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>sourceDir</name> <init>= <expr><call><name><name>sessionDir</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><name>source</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>createDirectories</name></name><argument_list>(<argument><expr><name>sourceDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <return>return <expr><call><name><name>FSDirectory</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><name>sourceDir</name></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
   
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">59</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">56</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>PerSessionDirectoryFactory</name> implements <name>SourceDirectoryFactory</name> <block>{
     <if_stmt><if>if <condition>(<expr><call><name><name>sessionID</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content> <comment type="line">// protect against deleting workDir entirely!</comment>
       <throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><literal type="string">"sessionID cannot be empty"</literal></expr></argument>)</argument_list></call></expr>;</throw>
     </block_content>}</block></if></if_stmt>
    <call><name><name>IOUtils</name><operator>.</operator><name>rm</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>workDir</name></expr></argument>, <argument><expr><name>sessionID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>IOUtils</name><operator>.</operator><name>rm</name></name><argument_list>(<argument><expr><call><name><name>workDir</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><name>sessionID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></constructor>
   
 </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>replicator</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>replicator</name><operator>/</operator><name><name>IndexAndTaxonomyReplicationClientTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>replicator</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>replicator</name><operator>/</operator><name><name>IndexAndTaxonomyReplicationClientTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">12ef20aacf7</literal><operator>..</operator><literal type="number">5871c081ba2</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>replicator</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>replicator</name><operator>/</operator><name><name>IndexAndTaxonomyReplicationClientTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>replicator</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>replicator</name><operator>/</operator><name><name>IndexAndTaxonomyReplicationClientTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>replicator</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>ByteArrayOutputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>Closeable</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>PrintStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>Callable</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>atomic</name><operator>.</operator><name>AtomicBoolean</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">138</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">138</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>IndexAndTaxonomyReplicationClientTest</name> extends <name>ReplicatorTestCase</name> <block>{
   <expr><specifier>private</specifier> <name>SnapshotDirectoryTaxonomyWriter</name> <name>publishTaxoWriter</name></expr>;
   <specifier>private</specifier> <name>FacetsConfig</name> <name>config</name></block></expr>;</expr_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <name>IndexAndTaxonomyReadyCallback</name></type> <name>callback</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>File</name></type> <name>clientWorkDir</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>Path</name></type> <name>clientWorkDir</name></decl>;</decl_stmt>
   
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>VERSION_ID</name> <init>= <expr><literal type="string">"version"</literal></expr></init></decl>;</decl_stmt>
   
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>replicator</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>replicator</name><operator>/</operator><name>http</name><operator>/</operator><name><name>HttpReplicatorTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>replicator</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>replicator</name><operator>/</operator><name>http</name><operator>/</operator><name><name>HttpReplicatorTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>d0b1a03713e</name><operator>..</operator><name>cb9e4661552</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>replicator</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>replicator</name><operator>/</operator><name>http</name><operator>/</operator><name><name>HttpReplicatorTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>replicator</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>replicator</name><operator>/</operator><name>http</name><operator>/</operator><name><name>HttpReplicatorTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>replicator</name><operator>.</operator><name>http</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>http</name><operator>.</operator><name>impl</name><operator>.</operator><name>conn</name><operator>.</operator><name>BasicHttpClientConnectionManager</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">52</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">52</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>HttpReplicatorTest</name> extends <name>ReplicatorTestCase</name> <block>{
   <expr><specifier>public</specifier> <name>TestRule</name> <name>testRules</name> <operator>=</operator> 
     <call><name><name>RuleChain</name><operator>.</operator><name>outerRule</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>SystemPropertiesRestoreRule</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
  <specifier>private</specifier> <name>File</name> <name>clientWorkDir</name></block></expr>;</expr_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>Path</name></type> <name>clientWorkDir</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <name>Replicator</name></type> <name>serverReplicator</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <name>IndexWriter</name></type> <name>writer</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <name>DirectoryReader</name></type> <name>reader</name></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>suggest</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>spell</name><operator>/</operator><name><name>PlainTextDictionary</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>suggest</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>spell</name><operator>/</operator><name><name>PlainTextDictionary</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>a87ef87a859</name><operator>..</operator><literal type="number">6ec352da5f8</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>suggest</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>spell</name><operator>/</operator><name><name>PlainTextDictionary</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>suggest</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>spell</name><operator>/</operator><name><name>PlainTextDictionary</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>spell</name></name>;</package>
  <expr_stmt><expr><operator>*</operator><operator>/</operator></expr></expr_stmt>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>BufferedReader</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>Reader</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>StandardCharsets</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>suggest</name><operator>.</operator><name>InputIterator</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>BytesRef</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">44</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">45</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>PlainTextDictionary</name> implements <name>Dictionary</name> <block>{
   <expr><specifier>private</specifier> <name>BufferedReader</name> <name>in</name></expr>;
 
   <comment type="block" format="javadoc">/**
   * Creates a dictionary based on a File.
   * Creates a dictionary based on a Path.
    * &lt;p&gt;
    * NOTE: content is treated as UTF-8
    */</comment>
  <specifier>public</specifier> <call><name>PlainTextDictionary</name><argument_list>(<argument><expr><name>File</name> <name>file</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><name>in</name> <operator>=</operator> <operator>new</operator> <call><name>BufferedReader</name><argument_list>(<argument><expr><call><name><name>IOUtils</name><operator>.</operator><name>getDecodingReader</name></name><argument_list>(<argument><expr><name>file</name></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></block></expr>;</expr_stmt>
  <constructor><specifier>public</specifier> <name>PlainTextDictionary</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>path</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><name>in</name> <operator>=</operator> <call><name><name>Files</name><operator>.</operator><name>newBufferedReader</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></constructor>
 
   <comment type="block" format="javadoc">/**
diff --git a/lucene/suggest/src/java/org/apache/lucene/search/suggest/SortedInputIterator.java b/lucene/suggest/src/java/org/apache/lucene/search/suggest/SortedInputIterator.java
index 3a8ad160c88..d5b4c593107 100644
-- a/lucene/suggest/src/java/org/apache/lucene/search/suggest/SortedInputIterator.java
++ b/lucene/suggest/src/java/org/apache/lucene/search/suggest/SortedInputIterator.java
@@ -17,8 +17,9 @@ package org.apache.lucene.search.suggest;
  * limitations under the License.
  */</comment>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Comparator</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">40</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">41</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>OfflineSorter</name><operator>.</operator><name>ByteSequencesWriter</name></name>;</import>
 <class><specifier>public</specifier> class <name>SortedInputIterator</name> <super_list><implements>implements <super><name>InputIterator</name></super></implements></super_list> <block>{
   
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>InputIterator</name></type> <name>source</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>File</name></type> <name>tempInput</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>File</name></type> <name>tempSorted</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>Path</name></type> <name>tempInput</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>Path</name></type> <name>tempSorted</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>ByteSequencesReader</name></type> <name>reader</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name><name>Comparator</name><argument_list type="generic">&lt;<argument><name>BytesRef</name></argument>&gt;</argument_list></name></type> <name>comparator</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>boolean</name></type> <name>hasPayloads</name></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">168</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">169</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>SortedInputIterator</name> implements <name>InputIterator</name> <block>{
   
   <expr><specifier>private</specifier> <name>ByteSequencesReader</name> <call><name>sort</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><name>String</name> <name>prefix</name> <operator>=</operator> <call><name>getClass</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getSimpleName</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>File</name> <name>directory</name> <operator>=</operator> <call><name><name>OfflineSorter</name><operator>.</operator><name>defaultTempDir</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><name>tempInput</name> <operator>=</operator> <call><name><name>File</name><operator>.</operator><name>createTempFile</name></name><argument_list>(<argument><expr><name>prefix</name></expr></argument>, <argument><expr><literal type="string">".input"</literal></expr></argument>, <argument><expr><name>directory</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>tempSorted</name> <operator>=</operator> <call><name><name>File</name><operator>.</operator><name>createTempFile</name></name><argument_list>(<argument><expr><name>prefix</name></expr></argument>, <argument><expr><literal type="string">".sorted"</literal></expr></argument>, <argument><expr><name>directory</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>directory</name> <init>= <expr><call><name><name>OfflineSorter</name><operator>.</operator><name>defaultTempDir</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>tempInput</name> <operator>=</operator> <call><name><name>Files</name><operator>.</operator><name>createTempFile</name></name><argument_list>(<argument><expr><name>directory</name></expr></argument>, <argument><expr><name>prefix</name></expr></argument>, <argument><expr><literal type="string">".input"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>tempSorted</name> <operator>=</operator> <call><name><name>Files</name><operator>.</operator><name>createTempFile</name></name><argument_list>(<argument><expr><name>directory</name></expr></argument>, <argument><expr><name>prefix</name></expr></argument>, <argument><expr><literal type="string">".sorted"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     
     <decl_stmt><decl><type><specifier>final</specifier> <name><name>OfflineSorter</name><operator>.</operator><name>ByteSequencesWriter</name></name></type> <name>writer</name> <init>= <expr><operator>new</operator> <call><name><name>OfflineSorter</name><operator>.</operator><name>ByteSequencesWriter</name></name><argument_list>(<argument><expr><name>tempInput</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>boolean</name></type> <name>success</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>suggest</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>suggest</name><operator>/</operator><name>analyzing</name><operator>/</operator><name><name>AnalyzingInfixSuggester</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>suggest</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>suggest</name><operator>/</operator><name>analyzing</name><operator>/</operator><name><name>AnalyzingInfixSuggester</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>ac1ea730849</name><operator>..</operator><name>eb1f63f8867</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>suggest</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>suggest</name><operator>/</operator><name>analyzing</name><operator>/</operator><name><name>AnalyzingInfixSuggester</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>suggest</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>suggest</name><operator>/</operator><name>analyzing</name><operator>/</operator><name><name>AnalyzingInfixSuggester</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>suggest</name><operator>.</operator><name>analyzing</name></name>;</package>
  <expr_stmt><expr><operator>*</operator><operator>/</operator></expr></expr_stmt>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>Closeable</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>StringReader</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">222</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">222</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>AnalyzingInfixSuggester</name> extends <name>Lookup</name> implements <name>Closeable</name> <block>{
 
   <comment type="block" format="javadoc">/** Subclass can override to choose a specific {@link
    *  Directory} implementation. */</comment>
  <expr><specifier>protected</specifier> <name>Directory</name> <call><name>getDirectory</name><argument_list>(<argument><expr><name>File</name> <name>path</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>protected</specifier> <name>Directory</name> <call><name>getDirectory</name><argument_list>(<argument><expr><name>Path</name> <name>path</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr>
     <return>return <expr><call><name><name>FSDirectory</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr>;</return>
   }</block></expr></expr_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>suggest</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>suggest</name><operator>/</operator><name>analyzing</name><operator>/</operator><name><name>AnalyzingSuggester</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>suggest</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>suggest</name><operator>/</operator><name>analyzing</name><operator>/</operator><name><name>AnalyzingSuggester</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>f42a70a1c59</name><operator>..</operator><literal type="number">6496e3acab8</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>suggest</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>suggest</name><operator>/</operator><name>analyzing</name><operator>/</operator><name><name>AnalyzingSuggester</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>suggest</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>suggest</name><operator>/</operator><name>analyzing</name><operator>/</operator><name><name>AnalyzingSuggester</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>suggest</name><operator>.</operator><name>analyzing</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Comparator</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">416</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">416</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>AnalyzingSuggester</name> extends <name>Lookup</name> <block>{
       <throw>throw <argument_list>new <argument><expr><call><name>IllegalArgumentException</name><argument_list>(<argument><expr><literal type="string">"this suggester doesn't support contexts"</literal></expr></argument>)</argument_list></call></expr></argument></argument_list></throw>;
     }</block></expr></expr_stmt>
     <decl_stmt><decl><type><name>String</name></type> <name>prefix</name> <init>= <expr><call><name>getClass</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getSimpleName</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>directory</name> <init>= <expr><call><name><name>OfflineSorter</name><operator>.</operator><name>defaultTempDir</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>tempInput</name> <init>= <expr><call><name><name>File</name><operator>.</operator><name>createTempFile</name></name><argument_list>(<argument><expr><name>prefix</name></expr></argument>, <argument><expr><literal type="string">".input"</literal></expr></argument>, <argument><expr><name>directory</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>tempSorted</name> <init>= <expr><call><name><name>File</name><operator>.</operator><name>createTempFile</name></name><argument_list>(<argument><expr><name>prefix</name></expr></argument>, <argument><expr><literal type="string">".sorted"</literal></expr></argument>, <argument><expr><name>directory</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>directory</name> <init>= <expr><call><name><name>OfflineSorter</name><operator>.</operator><name>defaultTempDir</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>tempInput</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>createTempFile</name></name><argument_list>(<argument><expr><name>directory</name></expr></argument>, <argument><expr><name>prefix</name></expr></argument>, <argument><expr><literal type="string">".input"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>tempSorted</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>createTempFile</name></name><argument_list>(<argument><expr><name>directory</name></expr></argument>, <argument><expr><name>prefix</name></expr></argument>, <argument><expr><literal type="string">".sorted"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <expr_stmt><expr><name>hasPayloads</name> <operator>=</operator> <call><name><name>iterator</name><operator>.</operator><name>hasPayloads</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">501</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">501</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>AnalyzingSuggester</name> extends <name>Lookup</name> <block>{
       <expr><operator>new</operator> <call><name>OfflineSorter</name><argument_list>(<argument><expr><operator>new</operator> <call><name>AnalyzingComparator</name><argument_list>(<argument><expr><name>hasPayloads</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>sort</name><argument_list>(<argument><expr><name>tempInput</name></expr></argument>, <argument><expr><name>tempSorted</name></expr></argument>)</argument_list></call></expr>;
 
       <comment type="line">// Free disk space:</comment>
      <call><name><name>Files</name><operator>.</operator><name>delete</name></name><argument_list>(<argument><expr><call><name><name>tempInput</name><operator>.</operator><name>toPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
      <constructor_decl><name><name>Files</name><operator>.</operator><name>delete</name></name><parameter_list>(<parameter><decl><type><name>tempInput</name></type></decl></parameter>)</parameter_list>;</constructor_decl>
 
       <expr_stmt><expr><name>reader</name> <operator>=</operator> <operator>new</operator> <call><name><name>OfflineSorter</name><operator>.</operator><name>ByteSequencesReader</name></name><argument_list>(<argument><expr><name>tempSorted</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>suggest</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>suggest</name><operator>/</operator><name>analyzing</name><operator>/</operator><name><name>FreeTextSuggester</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>suggest</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>suggest</name><operator>/</operator><name>analyzing</name><operator>/</operator><name><name>FreeTextSuggester</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>cbcdc901434</name><operator>..</operator><literal type="number">255fc1b8695</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>suggest</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>suggest</name><operator>/</operator><name>analyzing</name><operator>/</operator><name><name>FreeTextSuggester</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>suggest</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>suggest</name><operator>/</operator><name>analyzing</name><operator>/</operator><name><name>FreeTextSuggester</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">68</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">68</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>fst</name><operator>.</operator><name>Util</name><operator>.</operator><name>TopResults</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Comparator</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">292</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">293</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>FreeTextSuggester</name> extends <name>Lookup</name> <block>{
     }</block>
 
     <name>String</name> <name>prefix</name> <operator>=</operator> <call><name>getClass</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getSimpleName</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>tempIndexPath</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>createTempDirectory</name></name><argument_list>(<argument><expr><name>prefix</name> <operator>+</operator> <literal type="string">".index."</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>tempIndexPath</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>createTempDirectory</name></name><argument_list>(<argument><expr><name>prefix</name> <operator>+</operator> <literal type="string">".index."</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <decl_stmt><decl><type><name>Directory</name></type> <name>dir</name> <init>= <expr><call><name><name>FSDirectory</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><name>tempIndexPath</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>suggest</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>suggest</name><operator>/</operator><name>fst</name><operator>/</operator><name><name>ExternalRefSorter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>suggest</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>suggest</name><operator>/</operator><name>fst</name><operator>/</operator><name><name>ExternalRefSorter</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">78d69af551b</literal><operator>..</operator><literal type="number">0f18fa50ddd</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>suggest</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>suggest</name><operator>/</operator><name>fst</name><operator>/</operator><name><name>ExternalRefSorter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>suggest</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>suggest</name><operator>/</operator><name>fst</name><operator>/</operator><name><name>ExternalRefSorter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>suggest</name><operator>.</operator><name>fst</name></name>;</package>
  <expr_stmt><expr><operator>*</operator><operator>/</operator></expr></expr_stmt>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>Closeable</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Comparator</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>BytesRef</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">36</literal></expr><operator>,</operator><expr><literal type="number">16</literal> <operator>+</operator><literal type="number">36</literal></expr><operator>,</operator><expr><literal type="number">15</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>OfflineSorter</name></name>;</import>
 <class><specifier>public</specifier> class <name>ExternalRefSorter</name> <super_list><implements>implements <super><name>BytesRefSorter</name></super>, <super><name>Closeable</name></super></implements></super_list> <block>{
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>OfflineSorter</name></type> <name>sort</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <name><name>OfflineSorter</name><operator>.</operator><name>ByteSequencesWriter</name></name></type> <name>writer</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>File</name></type> <name>input</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>File</name></type> <name>sorted</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>Path</name></type> <name>input</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>Path</name></type> <name>sorted</name></decl>;</decl_stmt>
   
   <comment type="block" format="javadoc">/**
    * Will buffer all sequences to a temporary file and then sort (all on-disk).
    */</comment>
   <constructor><specifier>public</specifier> <name>ExternalRefSorter</name><parameter_list>(<parameter><decl><type><name>OfflineSorter</name></type> <name>sort</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
     <expr_stmt><expr><name><name>this</name><operator>.</operator><name>sort</name></name> <operator>=</operator> <name>sort</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>input</name></name> <operator>=</operator> <call><name><name>File</name><operator>.</operator><name>createTempFile</name></name><argument_list>(<argument><expr><literal type="string">"RefSorter-"</literal></expr></argument>, <argument><expr><literal type="string">".raw"</literal></expr></argument>,
        <argument><expr><call><name><name>OfflineSorter</name><operator>.</operator><name>defaultTempDir</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>input</name></name> <operator>=</operator> <call><name><name>Files</name><operator>.</operator><name>createTempFile</name></name><argument_list>(<argument><expr><call><name><name>OfflineSorter</name><operator>.</operator><name>defaultTempDir</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"RefSorter-"</literal></expr></argument>, <argument><expr><literal type="string">".raw"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name><name>this</name><operator>.</operator><name>writer</name></name> <operator>=</operator> <operator>new</operator> <call><name><name>OfflineSorter</name><operator>.</operator><name>ByteSequencesWriter</name></name><argument_list>(<argument><expr><name>input</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></constructor>
   
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">60</literal></expr><operator>,</operator><expr><literal type="number">15</literal> <operator>+</operator><literal type="number">59</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ <specifier>public</specifier> <name>class</name> <name>ExternalRefSorter</name> implements <name>BytesRefSorter</name></expr><operator>,</operator> <expr><name>Closeable</name> <block>{
     <if_stmt><if>if <condition>(<expr><name>sorted</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><call><name>closeWriter</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       
      <expr_stmt><expr><name>sorted</name> <operator>=</operator> <call><name><name>File</name><operator>.</operator><name>createTempFile</name></name><argument_list>(<argument><expr><literal type="string">"RefSorter-"</literal></expr></argument>, <argument><expr><literal type="string">".sorted"</literal></expr></argument>,
          <argument><expr><call><name><name>OfflineSorter</name><operator>.</operator><name>defaultTempDir</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>sorted</name> <operator>=</operator> <call><name><name>Files</name><operator>.</operator><name>createTempFile</name></name><argument_list>(<argument><expr><call><name><name>OfflineSorter</name><operator>.</operator><name>defaultTempDir</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"RefSorter-"</literal></expr></argument>, <argument><expr><literal type="string">".sorted"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <decl_stmt><decl><type><name>boolean</name></type> <name>success</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
       <try>try <block>{<block_content>
         <expr_stmt><expr><call><name><name>sort</name><operator>.</operator><name>sort</name></name><argument_list>(<argument><expr><name>input</name></expr></argument>, <argument><expr><name>sorted</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><name>success</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
       </block_content>}</block> <finally>finally <block>{<block_content>
         <if_stmt><if>if <condition>(<expr><name>success</name></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>delete</name></name><argument_list>(<argument><expr><call><name><name>input</name><operator>.</operator><name>toPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>delete</name></name><argument_list>(<argument><expr><name>input</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></if> <else>else <block>{<block_content>
           <expr_stmt><expr><call><name><name>IOUtils</name><operator>.</operator><name>deleteFilesIgnoringExceptions</name></name><argument_list>(<argument><expr><name>input</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></else></if_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>suggest</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>suggest</name><operator>/</operator><name>fst</name><operator>/</operator><name><name>FSTCompletionLookup</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>suggest</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>suggest</name><operator>/</operator><name>fst</name><operator>/</operator><name><name>FSTCompletionLookup</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">4af480db4f4</literal><operator>..</operator><literal type="number">84ab69cc02d</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>suggest</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>suggest</name><operator>/</operator><name>fst</name><operator>/</operator><name><name>FSTCompletionLookup</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>suggest</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>suggest</name><operator>/</operator><name>fst</name><operator>/</operator><name><name>FSTCompletionLookup</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>suggest</name><operator>.</operator><name>fst</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">158</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">158</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>FSTCompletionLookup</name> extends <name>Lookup</name> implements <name>Accountable</name> <block>{
     <if_stmt><if>if <condition>(<expr><call><name><name>iterator</name><operator>.</operator><name>hasContexts</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
       <throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><literal type="string">"this suggester doesn't support contexts"</literal></expr></argument>)</argument_list></call></expr>;</throw>
     </block_content>}</block></if></if_stmt>
    <name>File</name> <name>tempInput</name> <operator>=</operator> <call><name><name>File</name><operator>.</operator><name>createTempFile</name></name><argument_list>(
        <argument><expr><call><name><name>FSTCompletionLookup</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getSimpleName</name></name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">".input"</literal></expr></argument>, <argument><expr><call><name><name>OfflineSorter</name><operator>.</operator><name>defaultTempDir</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>tempSorted</name> <init>= <expr><call><name><name>File</name><operator>.</operator><name>createTempFile</name></name><argument_list>(
        <argument><expr><call><name><name>FSTCompletionLookup</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getSimpleName</name></name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">".sorted"</literal></expr></argument>, <argument><expr><call><name><name>OfflineSorter</name><operator>.</operator><name>defaultTempDir</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>tempInput</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>createTempFile</name></name><argument_list>(
        <argument><expr><call><name><name>OfflineSorter</name><operator>.</operator><name>defaultTempDir</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>FSTCompletionLookup</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getSimpleName</name></name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">".input"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>tempSorted</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>createTempFile</name></name><argument_list>(
        <argument><expr><call><name><name>OfflineSorter</name><operator>.</operator><name>defaultTempDir</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>FSTCompletionLookup</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getSimpleName</name></name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">".sorted"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <decl_stmt><decl><type><name><name>OfflineSorter</name><operator>.</operator><name>ByteSequencesWriter</name></name></type> <name>writer</name> <init>= <expr><operator>new</operator> <call><name><name>OfflineSorter</name><operator>.</operator><name>ByteSequencesWriter</name></name><argument_list>(<argument><expr><name>tempInput</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name><name>OfflineSorter</name><operator>.</operator><name>ByteSequencesReader</name></name></type> <name>reader</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">190</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">190</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>FSTCompletionLookup</name> extends <name>Lookup</name> implements <name>Accountable</name> <block>{
       <comment type="line">// We don't know the distribution of scores and we need to bucket them, so we'll sort</comment>
       <comment type="line">// and divide into equal buckets.</comment>
       <expr><name>SortInfo</name> <name>info</name> <operator>=</operator> <operator>new</operator> <call><name>OfflineSorter</name><argument_list>()</argument_list></call><operator>.</operator><call><name>sort</name><argument_list>(<argument><expr><name>tempInput</name></expr></argument>, <argument><expr><name>tempSorted</name></expr></argument>)</argument_list></call></expr>;
      <call><name><name>Files</name><operator>.</operator><name>delete</name></name><argument_list>(<argument><expr><call><name><name>tempInput</name><operator>.</operator><name>toPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>delete</name></name><argument_list>(<argument><expr><name>tempInput</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <decl_stmt><decl><type><name>FSTCompletionBuilder</name></type> <name>builder</name> <init>= <expr><operator>new</operator> <call><name>FSTCompletionBuilder</name><argument_list>(
           <argument><expr><name>buckets</name></expr></argument>, <argument><expr><name>sorter</name> <operator>=</operator> <operator>new</operator> <call><name>ExternalRefSorter</name><argument_list>(<argument><expr><operator>new</operator> <call><name>OfflineSorter</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>sharedTailLength</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">235</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">235</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>FSTCompletionLookup</name> extends <name>Lookup</name> implements <name>Accountable</name> <block>{
       <expr><call><name><name>IOUtils</name><operator>.</operator><name>closeWhileHandlingException</name></name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><name>writer</name></expr></argument>, <argument><expr><name>sorter</name></expr></argument>)</argument_list></call></expr>;</block></expr></expr_stmt>
 
       <if_stmt><if>if <condition>(<expr><name>success</name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>delete</name></name><argument_list>(<argument><expr><call><name><name>tempSorted</name><operator>.</operator><name>toPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>delete</name></name><argument_list>(<argument><expr><name>tempSorted</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></if> <else>else <block>{<block_content>
         <expr_stmt><expr><call><name><name>IOUtils</name><operator>.</operator><name>deleteFilesIgnoringExceptions</name></name><argument_list>(<argument><expr><name>tempInput</name></expr></argument>, <argument><expr><name>tempSorted</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></else></if_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>suggest</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>suggest</name><operator>/</operator><name>jaspell</name><operator>/</operator><name><name>JaspellTernarySearchTrie</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>suggest</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>suggest</name><operator>/</operator><name>jaspell</name><operator>/</operator><name><name>JaspellTernarySearchTrie</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">728fe12344f</literal><operator>..</operator><name>c93ae9a20c2</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>suggest</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>suggest</name><operator>/</operator><name>jaspell</name><operator>/</operator><name><name>JaspellTernarySearchTrie</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>suggest</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>suggest</name><operator>/</operator><name>jaspell</name><operator>/</operator><name><name>JaspellTernarySearchTrie</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">30</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">30</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>suggest</name><operator>.</operator><name>jaspell</name></name>;</package>
  <expr_stmt><expr><operator>*</operator><operator>/</operator></expr></expr_stmt>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>BufferedReader</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileInputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>StandardCharsets</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Locale</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Vector</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">198</literal></expr><operator>,</operator><expr><literal type="number">16</literal> <operator>+</operator><literal type="number">198</literal></expr><operator>,</operator><expr><literal type="number">16</literal> @@ <specifier>public</specifier> <name>class</name> <name>JaspellTernarySearchTrie</name> implements <name>Accountable</name> <block>{
   }</block>
 
   <comment type="block" format="javadoc">/**
   * Constructs a Ternary Search Trie and loads data from a &lt;code&gt;File&lt;/code&gt;
   * Constructs a Ternary Search Trie and loads data from a &lt;code&gt;Path&lt;/code&gt;
    * into the Trie. The file is a normal text document, where each line is of
    * the form word TAB float.
    * 
    *@param file
   *          The &lt;code&gt;File&lt;/code&gt; with the data to load into the Trie.
   *          The &lt;code&gt;Path&lt;/code&gt; with the data to load into the Trie.
    *@exception IOException
    *              A problem occured while reading the data.
    */</comment>
  <specifier>public</specifier> <call><name>JaspellTernarySearchTrie</name><argument_list>(<argument><expr><name>File</name> <name>file</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>public</specifier> <call><name>JaspellTernarySearchTrie</name><argument_list>(<argument><expr><name>Path</name> <name>file</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><call><name>this</name><argument_list>(<argument><expr><name>file</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
   </block_content>}</block></finally></try>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">224</literal></expr><operator>,</operator><expr><literal type="number">15</literal> <operator>+</operator><literal type="number">224</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ <specifier>public</specifier> <name>class</name> <name>JaspellTernarySearchTrie</name> implements <name>Accountable</name> <block>{
    <expr><operator>*</operator>@<name>exception</name> <name>IOException</name>
    <operator>*</operator>              <name>A</name> <name>problem</name> <name>occured</name></expr> <while>while reading the data.
    */
  public JaspellTernarySearchTrie<condition>(<expr><name>File</name> <name>file</name></expr><operator>,</operator> <expr><name>boolean</name> <name>compression</name></expr>)</condition><block type="pseudo"><block_content>
  <constructor><specifier>public</specifier> <name>JaspellTernarySearchTrie</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>file</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>compression</name></decl></parameter>)</parameter_list>
           <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
     <expr_stmt><expr><call><name>this</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>BufferedReader</name></type> <name>in</name></decl>;</decl_stmt>
     <if_stmt><if>if <condition>(<expr><name>compression</name></expr>)</condition><block type="pseudo"><block_content>
       <expr_stmt><expr><name>in</name> <operator>=</operator> <operator>new</operator> <call><name>BufferedReader</name><argument_list>(<argument><expr><call><name><name>IOUtils</name><operator>.</operator><name>getDecodingReader</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>GZIPInputStream</name><argument_list>(
              <argument><expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
    <else>else<block type="pseudo"><block_content> <expr_stmt><expr><name>in</name> <operator>=</operator> <operator>new</operator> <call><name>BufferedReader</name><argument_list>(<argument><expr><call><name><name>IOUtils</name><operator>.</operator><name>getDecodingReader</name></name><argument_list>(<argument><expr><operator>(</operator><operator>new</operator> <call><name>FileInputStream</name><argument_list>(
            <argument><expr><name>file</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
              <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>newInputStream</name></name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr></expr_stmt>)</block_content></block><operator>,</operator> StandardCharsets.UTF_8</constructor></block_content></block></while>)</block></expr></expr_stmt>)</block_content></block><empty_stmt>;</empty_stmt></if>
    <else>else<block type="pseudo"><block_content> <expr_stmt><expr><name>in</name> <operator>=</operator> <call><name><name>Files</name><operator>.</operator><name>newBufferedReader</name></name><argument_list>(<argument><expr><name>file</name></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
     <name>String</name> <name>word</name></block></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>int</name></type> <name>pos</name></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>Float</name></type> <name>occur</name></decl>, <decl><type ref="prev"/><name>one</name> <init>= <expr><operator>new</operator> <call><name>Float</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>suggest</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>suggest</name><operator>/</operator><name><name>PersistenceTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>suggest</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>suggest</name><operator>/</operator><name><name>PersistenceTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>b492cf4f29e</name><operator>..</operator><literal type="number">690b56c8ce0</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>suggest</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>suggest</name><operator>/</operator><name><name>PersistenceTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>suggest</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>suggest</name><operator>/</operator><name><name>PersistenceTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@
  <operator>*</operator><operator>/</operator></expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>suggest</name></name>;</package>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Random</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileInputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileOutputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>suggest</name><operator>.</operator><name>Lookup</name><operator>.</operator><name>LookupResult</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">70</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">69</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>PersistenceTest</name> extends <name>LuceneTestCase</name> <block>{
     <expr><call><name><name>lookup</name><operator>.</operator><name>build</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>InputArrayIterator</name><argument_list>(<argument><expr><name>keys</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
     <comment type="line">// Store the suggester.</comment>
    <name>File</name> <name>storeDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><call><name><name>LuceneTestCase</name><operator>.</operator><name>getTestClass</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getSimpleName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>lookup</name><operator>.</operator><name>store</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileOutputStream</name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>storeDir</name></expr></argument>, <argument><expr><literal type="string">"lookup.dat"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>storeDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><call><name><name>LuceneTestCase</name><operator>.</operator><name>getTestClass</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getSimpleName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>lookup</name><operator>.</operator><name>store</name></name><argument_list>(<argument><expr><call><name><name>Files</name><operator>.</operator><name>newOutputStream</name></name><argument_list>(<argument><expr><call><name><name>storeDir</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><literal type="string">"lookup.dat"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <comment type="line">// Re-read it from disk.</comment>
     <expr_stmt><expr><name>lookup</name> <operator>=</operator> <call><name><name>lookupClass</name><operator>.</operator><name>newInstance</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>lookup</name><operator>.</operator><name>load</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>storeDir</name></expr></argument>, <argument><expr><literal type="string">"lookup.dat"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>lookup</name><operator>.</operator><name>load</name></name><argument_list>(<argument><expr><call><name><name>Files</name><operator>.</operator><name>newInputStream</name></name><argument_list>(<argument><expr><call><name><name>storeDir</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><literal type="string">"lookup.dat"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <comment type="line">// Assert validity.</comment>
     <decl_stmt><decl><type><name>Random</name></type> <name>random</name> <init>= <expr><call><name>random</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>suggest</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>suggest</name><operator>/</operator><name>analyzing</name><operator>/</operator><name><name>AnalyzingInfixSuggesterTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>suggest</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>suggest</name><operator>/</operator><name>analyzing</name><operator>/</operator><name><name>AnalyzingInfixSuggesterTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">103d675b520</literal><operator>..</operator><name>a7caacf53f6</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>suggest</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>suggest</name><operator>/</operator><name>analyzing</name><operator>/</operator><name><name>AnalyzingInfixSuggesterTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>suggest</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>suggest</name><operator>/</operator><name>analyzing</name><operator>/</operator><name><name>AnalyzingInfixSuggesterTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>suggest</name><operator>.</operator><name>analyzing</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>StringReader</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Comparator</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">91</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">91</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>AnalyzingInfixSuggesterTest</name> extends <name>LuceneTestCase</name> <block>{
       <expr><operator>new</operator> <call><name>Input</name><argument_list>(<argument><expr><literal type="string">"a penny saved is a penny earned"</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>BytesRef</name><argument_list>(<argument><expr><literal type="string">"foobaz"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>,
     }</block></expr>;</expr_stmt>
 
    <decl_stmt><decl><type><name>File</name></type> <name>tempDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"AnalyzingInfixSuggesterTest"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>tempDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"AnalyzingInfixSuggesterTest"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <decl_stmt><decl><type><name>Analyzer</name></type> <name>a</name> <init>= <expr><operator>new</operator> <call><name>MockAnalyzer</name><argument_list>(<argument><expr><call><name>random</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>MockTokenizer</name><operator>.</operator><name>WHITESPACE</name></name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>AnalyzingInfixSuggester</name></type> <name>suggester</name> <init>= <expr><operator>new</operator> <call><name>AnalyzingInfixSuggester</name><argument_list>(<argument><expr><call><name>newFSDirectory</name><argument_list>(<argument><expr><name>tempDir</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">210</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">210</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>AnalyzingInfixSuggesterTest</name> extends <name>LuceneTestCase</name> <block>{
       <expr><operator>new</operator> <call><name>Input</name><argument_list>(<argument><expr><literal type="string">"lend me your ear"</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>BytesRef</name><argument_list>(<argument><expr><literal type="string">"foobar"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>,
       <expr><operator>new</operator> <call><name>Input</name><argument_list>(<argument><expr><literal type="string">"a penny saved is a penny earned"</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>BytesRef</name><argument_list>(<argument><expr><literal type="string">"foobaz"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>,
     }</block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>tempDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"AnalyzingInfixSuggesterTest"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>tempDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"AnalyzingInfixSuggesterTest"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <decl_stmt><decl><type><name>Analyzer</name></type> <name>a</name> <init>= <expr><operator>new</operator> <call><name>MockAnalyzer</name><argument_list>(<argument><expr><call><name>random</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>MockTokenizer</name><operator>.</operator><name>WHITESPACE</name></name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>int</name></type> <name>minPrefixLength</name> <init>= <expr><call><name>random</name><argument_list>()</argument_list></call><operator>.</operator><call><name>nextInt</name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">471</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">471</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>AnalyzingInfixSuggesterTest</name> extends <name>LuceneTestCase</name> <block>{
   }</block>
 
   <specifier>public</specifier> <name>void</name> <call><name>testRandomNRT</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>final</name> <name>File</name> <name>tempDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"AnalyzingInfixSuggesterTest"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>Path</name></type> <name>tempDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"AnalyzingInfixSuggesterTest"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>Analyzer</name></type> <name>a</name> <init>= <expr><operator>new</operator> <call><name>MockAnalyzer</name><argument_list>(<argument><expr><call><name>random</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>MockTokenizer</name><operator>.</operator><name>WHITESPACE</name></name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>int</name></type> <name>minPrefixChars</name> <init>= <expr><call><name>random</name><argument_list>()</argument_list></call><operator>.</operator><call><name>nextInt</name><argument_list>(<argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <if_stmt><if>if <condition>(<expr><name>VERBOSE</name></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">793</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">793</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>AnalyzingInfixSuggesterTest</name> extends <name>LuceneTestCase</name> <block>{
   <expr><specifier>public</specifier> <name>void</name> <call><name>testNRTWithParallelAdds</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name></expr></argument>, <argument><expr><name>InterruptedException</name> <block>{
     <expr><name><name>String</name><index>[]</index></name> <name>keys</name> <operator>=</operator> <operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{<expr><literal type="string">"python"</literal></expr>, <argument><expr><literal type="string">"java"</literal></expr></argument>, <argument><expr><literal type="string">"c"</literal></expr></argument>, <argument><expr><literal type="string">"scala"</literal></expr></argument>, <argument><expr><literal type="string">"ruby"</literal></expr></argument>, <argument><expr><literal type="string">"clojure"</literal></expr></argument>, <argument><expr><literal type="string">"erlang"</literal></expr></argument>, <argument><expr><literal type="string">"go"</literal></expr></argument>, <argument><expr><literal type="string">"swift"</literal></expr></argument>, <argument><expr><literal type="string">"lisp"</literal></expr></argument>}</block></expr></block></expr></argument></throws></expr>;
     <name>Analyzer</name> <name>a</name> <operator>=</operator> <operator>new</operator> <call><name>MockAnalyzer</name><argument_list>(<argument><expr><call><name>random</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>MockTokenizer</name><operator>.</operator><name>WHITESPACE</name></name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>tempDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"AIS_NRT_PERSIST_TEST"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>tempDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"AIS_NRT_PERSIST_TEST"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>AnalyzingInfixSuggester</name></type> <name>suggester</name> <init>= <expr><operator>new</operator> <call><name>AnalyzingInfixSuggester</name><argument_list>(<argument><expr><call><name>newFSDirectory</name><argument_list>(<argument><expr><name>tempDir</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name><name>Thread</name><index>[]</index></name></type> <name>multiAddThreads</name> <init>= <expr><operator>new</operator> <name><name>Thread</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
     <try>try <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">865</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">865</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>AnalyzingInfixSuggesterTest</name> extends <name>LuceneTestCase</name> <block>{
       <expr><operator>new</operator> <call><name>Input</name><argument_list>(<argument><expr><literal type="string">"a penny saved is a penny earned"</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>BytesRef</name><argument_list>(<argument><expr><literal type="string">"foobaz"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>asSet</name><argument_list>(<argument><expr><literal type="string">"foo"</literal></expr></argument>, <argument><expr><literal type="string">"baz"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>
     }</block></expr>;</expr_stmt>
 
    <decl_stmt><decl><type><name>File</name></type> <name>tempDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"analyzingInfixContext"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>tempDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"analyzingInfixContext"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <for>for<control>(<init><decl><type><name>int</name></type> <name>iter</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>iter</name><operator>&lt;</operator><literal type="number">2</literal></expr>;</condition><incr><expr><name>iter</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
       <decl_stmt><decl><type><name>AnalyzingInfixSuggester</name></type> <name>suggester</name></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>suggest</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>suggest</name><operator>/</operator><name>analyzing</name><operator>/</operator><name><name>AnalyzingSuggesterTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>suggest</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>suggest</name><operator>/</operator><name>analyzing</name><operator>/</operator><name><name>AnalyzingSuggesterTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">6e99ff41887</literal><operator>..</operator><name>d7fd5585e3e</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>suggest</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>suggest</name><operator>/</operator><name>analyzing</name><operator>/</operator><name><name>AnalyzingSuggesterTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>suggest</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>suggest</name><operator>/</operator><name>analyzing</name><operator>/</operator><name><name>AnalyzingSuggesterTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>suggest</name><operator>.</operator><name>analyzing</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileInputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileOutputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>OutputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>Reader</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Comparator</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">921</literal></expr><operator>,</operator><expr><literal type="number">16</literal> <operator>+</operator><literal type="number">920</literal></expr><operator>,</operator><expr><literal type="number">15</literal> @@ <specifier>public</specifier> <name>class</name> <name>AnalyzingSuggesterTest</name> extends <name>LuceneTestCase</name> <block>{
     <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><call><name><name>results</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call><operator>.</operator><name>value</name></expr></argument>)</argument_list></call></expr>;
 
     <comment type="line">// Try again after save/load:</comment>
    <name>File</name> <name>tmpDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"AnalyzingSuggesterTest"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>tmpDir</name><operator>.</operator><name>mkdir</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>tmpDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"AnalyzingSuggesterTest"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
    <decl_stmt><decl><type><name>File</name></type> <name>path</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>tmpDir</name></expr></argument>, <argument><expr><literal type="string">"suggester"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>path</name> <init>= <expr><call><name><name>tmpDir</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><literal type="string">"suggester"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
    <decl_stmt><decl><type><name>OutputStream</name></type> <name>os</name> <init>= <expr><operator>new</operator> <call><name>FileOutputStream</name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>OutputStream</name></type> <name>os</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>newOutputStream</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>suggester</name><operator>.</operator><name>store</name></name><argument_list>(<argument><expr><name>os</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>os</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
    <decl_stmt><decl><type><name>InputStream</name></type> <name>is</name> <init>= <expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>InputStream</name></type> <name>is</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>newInputStream</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>suggester</name><operator>.</operator><name>load</name></name><argument_list>(<argument><expr><name>is</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>is</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">983</literal></expr><operator>,</operator><expr><literal type="number">16</literal> <operator>+</operator><literal type="number">981</literal></expr><operator>,</operator><expr><literal type="number">15</literal> @@ <specifier>public</specifier> <name>class</name> <name>AnalyzingSuggesterTest</name> extends <name>LuceneTestCase</name> <block>{
     <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><call><name><name>results</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call><operator>.</operator><name>value</name></expr></argument>)</argument_list></call></expr>;
 
     <comment type="line">// Try again after save/load:</comment>
    <name>File</name> <name>tmpDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"AnalyzingSuggesterTest"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>tmpDir</name><operator>.</operator><name>mkdir</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>tmpDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"AnalyzingSuggesterTest"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
    <decl_stmt><decl><type><name>File</name></type> <name>path</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>tmpDir</name></expr></argument>, <argument><expr><literal type="string">"suggester"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>path</name> <init>= <expr><call><name><name>tmpDir</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><literal type="string">"suggester"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
    <decl_stmt><decl><type><name>OutputStream</name></type> <name>os</name> <init>= <expr><operator>new</operator> <call><name>FileOutputStream</name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>OutputStream</name></type> <name>os</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>newOutputStream</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>suggester</name><operator>.</operator><name>store</name></name><argument_list>(<argument><expr><name>os</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>os</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
    <decl_stmt><decl><type><name>InputStream</name></type> <name>is</name> <init>= <expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>InputStream</name></type> <name>is</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>newInputStream</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>suggester</name><operator>.</operator><name>load</name></name><argument_list>(<argument><expr><name>is</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>is</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1053</literal></expr><operator>,</operator><expr><literal type="number">16</literal> <operator>+</operator><literal type="number">1050</literal></expr><operator>,</operator><expr><literal type="number">15</literal> @@ <specifier>public</specifier> <name>class</name> <name>AnalyzingSuggesterTest</name> extends <name>LuceneTestCase</name> <block>{
     <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><call><name><name>results</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call><operator>.</operator><name>value</name></expr></argument>)</argument_list></call></expr>;
 
     <comment type="line">// Try again after save/load:</comment>
    <name>File</name> <name>tmpDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"AnalyzingSuggesterTest"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>tmpDir</name><operator>.</operator><name>mkdir</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>tmpDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"AnalyzingSuggesterTest"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
    <decl_stmt><decl><type><name>File</name></type> <name>path</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>tmpDir</name></expr></argument>, <argument><expr><literal type="string">"suggester"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>path</name> <init>= <expr><call><name><name>tmpDir</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><literal type="string">"suggester"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
    <decl_stmt><decl><type><name>OutputStream</name></type> <name>os</name> <init>= <expr><operator>new</operator> <call><name>FileOutputStream</name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>OutputStream</name></type> <name>os</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>newOutputStream</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>suggester</name><operator>.</operator><name>store</name></name><argument_list>(<argument><expr><name>os</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>os</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
    <decl_stmt><decl><type><name>InputStream</name></type> <name>is</name> <init>= <expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>InputStream</name></type> <name>is</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>newInputStream</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>suggester</name><operator>.</operator><name>load</name></name><argument_list>(<argument><expr><name>is</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>is</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>suggest</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>suggest</name><operator>/</operator><name>analyzing</name><operator>/</operator><name><name>BlendedInfixSuggesterTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>suggest</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>suggest</name><operator>/</operator><name>analyzing</name><operator>/</operator><name><name>BlendedInfixSuggesterTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>c0f7148c951</name><operator>..</operator><name>bd9f08a9108</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>suggest</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>suggest</name><operator>/</operator><name>analyzing</name><operator>/</operator><name><name>BlendedInfixSuggesterTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>suggest</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>suggest</name><operator>/</operator><name>analyzing</name><operator>/</operator><name><name>BlendedInfixSuggesterTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>suggest</name><operator>.</operator><name>analyzing</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>Analyzer</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">44</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">44</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>BlendedInfixSuggesterTest</name> extends <name>LuceneTestCase</name> <block>{
         <expr><operator>new</operator> <call><name>Input</name><argument_list>(<argument><expr><literal type="string">"star wars: episode v - the empire strikes back"</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>payload</name></expr></argument>)</argument_list></call></expr>
     }</block></expr>;</expr_stmt>
 
    <decl_stmt><decl><type><name>File</name></type> <name>tempDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"BlendedInfixSuggesterTest"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>tempDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"BlendedInfixSuggesterTest"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <decl_stmt><decl><type><name>Analyzer</name></type> <name>a</name> <init>= <expr><operator>new</operator> <call><name>StandardAnalyzer</name><argument_list>(<argument><expr><name><name>CharArraySet</name><operator>.</operator><name>EMPTY_SET</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>BlendedInfixSuggester</name></type> <name>suggester</name> <init>= <expr><operator>new</operator> <call><name>BlendedInfixSuggester</name><argument_list>(<argument><expr><call><name>newFSDirectory</name><argument_list>(<argument><expr><name>tempDir</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>a</name></expr></argument>,
<argument>@@ <expr><operator>-</operator><literal type="number">83</literal></expr></argument>,<argument><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">83</literal></expr></argument>,<argument><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>BlendedInfixSuggesterTest</name> extends <name>LuceneTestCase</name> <block>{
         <expr><operator>new</operator> <call><name>Input</name><argument_list>(<argument><expr><literal type="string">"top of the lake"</literal></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><name>pl</name></expr></argument>)</argument_list></call></expr>
     }</block></expr></argument>;</argument_list></call></expr></init></decl></decl_stmt>
 
    <decl_stmt><decl><type><name>File</name></type> <name>tempDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"BlendedInfixSuggesterTest"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>tempDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"BlendedInfixSuggesterTest"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>Analyzer</name></type> <name>a</name> <init>= <expr><operator>new</operator> <call><name>StandardAnalyzer</name><argument_list>(<argument><expr><name><name>CharArraySet</name><operator>.</operator><name>EMPTY_SET</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <comment type="line">// BlenderType.LINEAR is used by default (remove position*10%)</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">125</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">125</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>BlendedInfixSuggesterTest</name> extends <name>LuceneTestCase</name> <block>{
         <expr><operator>new</operator> <call><name>Input</name><argument_list>(<argument><expr><literal type="string">"the returned"</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>ret</name></expr></argument>)</argument_list></call></expr>,
     }</block></expr>;</expr_stmt>
 
    <decl_stmt><decl><type><name>File</name></type> <name>tempDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"BlendedInfixSuggesterTest"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>tempDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"BlendedInfixSuggesterTest"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>Analyzer</name></type> <name>a</name> <init>= <expr><operator>new</operator> <call><name>StandardAnalyzer</name><argument_list>(<argument><expr><name><name>CharArraySet</name><operator>.</operator><name>EMPTY_SET</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <comment type="line">// if factor is small, we don't get the expected element</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">177</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">177</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>BlendedInfixSuggesterTest</name> extends <name>LuceneTestCase</name> <block>{
         <expr><operator>new</operator> <call><name>Input</name><argument_list>(<argument><expr><literal type="string">"the returned"</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>ret</name></expr></argument>)</argument_list></call></expr>,
     }</block></expr>;</expr_stmt>
 
    <decl_stmt><decl><type><name>File</name></type> <name>tempDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"BlendedInfixSuggesterTest"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>tempDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"BlendedInfixSuggesterTest"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>Analyzer</name></type> <name>a</name> <init>= <expr><operator>new</operator> <call><name>StandardAnalyzer</name><argument_list>(<argument><expr><name><name>CharArraySet</name><operator>.</operator><name>EMPTY_SET</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <comment type="line">// if factor is small, we don't get the expected element</comment>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>suggest</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>suggest</name><operator>/</operator><name>analyzing</name><operator>/</operator><name><name>TestFreeTextSuggester</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>suggest</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>suggest</name><operator>/</operator><name>analyzing</name><operator>/</operator><name><name>TestFreeTextSuggester</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>aaf6605a5d3</name><operator>..</operator><literal type="number">84bdf2bfdd0</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>suggest</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>suggest</name><operator>/</operator><name>analyzing</name><operator>/</operator><name><name>TestFreeTextSuggester</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>suggest</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>suggest</name><operator>/</operator><name>analyzing</name><operator>/</operator><name><name>TestFreeTextSuggester</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>suggest</name><operator>.</operator><name>analyzing</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileInputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileOutputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>OutputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Comparator</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">82</literal></expr><operator>,</operator><expr><literal type="number">16</literal> <operator>+</operator><literal type="number">81</literal></expr><operator>,</operator><expr><literal type="number">15</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestFreeTextSuggester</name> extends <name>LuceneTestCase</name> <block>{
                    <expr><call><name>toString</name><argument_list>(<argument><expr><call><name><name>sug</name><operator>.</operator><name>lookup</name></name><argument_list>(<argument><expr><literal type="string">"b"</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</block></expr>;</expr_stmt>
 
       <comment type="line">// Try again after save/load:</comment>
      <decl_stmt><decl><type><name>File</name></type> <name>tmpDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"FreeTextSuggesterTest"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>tmpDir</name><operator>.</operator><name>mkdir</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>Path</name></type> <name>tmpDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"FreeTextSuggesterTest"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
      <decl_stmt><decl><type><name>File</name></type> <name>path</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>tmpDir</name></expr></argument>, <argument><expr><literal type="string">"suggester"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>Path</name></type> <name>path</name> <init>= <expr><call><name><name>tmpDir</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><literal type="string">"suggester"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
      <decl_stmt><decl><type><name>OutputStream</name></type> <name>os</name> <init>= <expr><operator>new</operator> <call><name>FileOutputStream</name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>OutputStream</name></type> <name>os</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>newOutputStream</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>sug</name><operator>.</operator><name>store</name></name><argument_list>(<argument><expr><name>os</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>os</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
      <decl_stmt><decl><type><name>InputStream</name></type> <name>is</name> <init>= <expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>InputStream</name></type> <name>is</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>newInputStream</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><name>sug</name> <operator>=</operator> <operator>new</operator> <call><name>FreeTextSuggester</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><operator>(</operator><name>byte</name><operator>)</operator> <literal type="number">0x20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>sug</name><operator>.</operator><name>load</name></name><argument_list>(<argument><expr><name>is</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>is</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>suggest</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>suggest</name><operator>/</operator><name>fst</name><operator>/</operator><name><name>LargeInputFST</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>suggest</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>suggest</name><operator>/</operator><name>fst</name><operator>/</operator><name><name>LargeInputFST</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">02b09b78023</literal><operator>..</operator><literal type="number">868453f4d2f</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>suggest</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>suggest</name><operator>/</operator><name>fst</name><operator>/</operator><name><name>LargeInputFST</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>suggest</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>suggest</name><operator>/</operator><name>fst</name><operator>/</operator><name><name>LargeInputFST</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>suggest</name><operator>.</operator><name>fst</name></name>;</package>
 
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>BufferedReader</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileInputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStreamReader</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>StandardCharsets</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Paths</name></name>;</import>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>BytesRef</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>BytesRefBuilder</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>OfflineSorter</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">35</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">34</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>OfflineSorter</name></name>;</import>
  <expr_stmt><expr><operator>*</operator><operator>/</operator>
 <specifier>public</specifier> <name>class</name> <name>LargeInputFST</name> <block>{
   <expr><specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>main</name><argument_list>(<argument><expr><name><name>String</name><index>[]</index></name> <name>args</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><name>File</name> <name>input</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><literal type="string">"/home/dweiss/tmp/shuffled.dict"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>Path</name> <name>input</name> <operator>=</operator> <call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"/home/dweiss/tmp/shuffled.dict"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><name>int</name></type> <name>buckets</name> <init>= <expr><literal type="number">20</literal></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>int</name></type> <name>shareMaxTail</name> <init>= <expr><literal type="number">10</literal></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">43</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">42</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>LargeInputFST</name> <block>{
     <expr><name>ExternalRefSorter</name> <name>sorter</name> <operator>=</operator> <operator>new</operator> <call><name>ExternalRefSorter</name><argument_list>(<argument><expr><operator>new</operator> <call><name>OfflineSorter</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <name>FSTCompletionBuilder</name> <name>builder</name> <operator>=</operator> <operator>new</operator> <call><name>FSTCompletionBuilder</name><argument_list>(<argument><expr><name>buckets</name></expr></argument>, <argument><expr><name>sorter</name></expr></argument>, <argument><expr><name>shareMaxTail</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
 
    <decl_stmt><decl><type><name>BufferedReader</name></type> <name>reader</name> <init>= <expr><operator>new</operator> <call><name>BufferedReader</name><argument_list>(
        <argument><expr><operator>new</operator> <call><name>InputStreamReader</name><argument_list>(
            <argument><expr><operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>input</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>BufferedReader</name></type> <name>reader</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>newBufferedReader</name></name><argument_list>(<argument><expr><name>input</name></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     
     <decl_stmt><decl><type><name>BytesRefBuilder</name></type> <name>scratch</name> <init>= <expr><operator>new</operator> <call><name>BytesRefBuilder</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>String</name></type> <name>line</name></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">61</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">58</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>LargeInputFST</name> <block>{
     <expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"Building FSTCompletion."</literal></expr></argument>)</argument_list></call></expr>;
     <name>FSTCompletion</name> <name>completion</name> <operator>=</operator> <call><name><name>builder</name><operator>.</operator><name>build</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
 
    <decl_stmt><decl><type><name>File</name></type> <name>fstFile</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><literal type="string">"completion.fst"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"Done. Writing automaton: "</literal> <operator>+</operator> <call><name><name>fstFile</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>fstFile</name> <init>= <expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"completion.fst"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"Done. Writing automaton: "</literal> <operator>+</operator> <call><name><name>fstFile</name><operator>.</operator><name>toAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>completion</name><operator>.</operator><name>getFST</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>save</name><argument_list>(<argument><expr><name>fstFile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>sorter</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></for>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name><name>BaseTokenStreamTestCase</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name><name>BaseTokenStreamTestCase</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>fe3c5e5a2b4</name><operator>..</operator><name>aedac0ab774</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name><name>BaseTokenStreamTestCase</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name><name>BaseTokenStreamTestCase</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">16</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">15</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileOutputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>OutputStreamWriter</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>PrintWriter</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>Reader</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>StringReader</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>StringWriter</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>Writer</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>reflect</name><operator>.</operator><name>Constructor</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>StandardCharsets</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Paths</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>*</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>CountDownLatch</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">896</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">895</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>BaseTokenStreamTestCase</name> extends <name>LuceneTestCase</name> <block>{
   }</block>
 
   <specifier>protected</specifier> <name>void</name> <call><name>toDotFile</name><argument_list>(<argument><expr><name>Analyzer</name> <name>a</name></expr></argument>, <argument><expr><name>String</name> <name>inputText</name></expr></argument>, <argument><expr><name>String</name> <name>localFileName</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><name>Writer</name> <name>w</name> <operator>=</operator> <operator>new</operator> <call><name>OutputStreamWriter</name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileOutputStream</name><argument_list>(<argument><expr><name>localFileName</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Writer</name></type> <name>w</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>newBufferedWriter</name></name><argument_list>(<argument><expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>localFileName</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>final</specifier> <name>TokenStream</name></type> <name>ts</name> <init>= <expr><call><name><name>a</name><operator>.</operator><name>tokenStream</name></name><argument_list>(<argument><expr><literal type="string">"field"</literal></expr></argument>, <argument><expr><name>inputText</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>ts</name><operator>.</operator><name>reset</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><operator>new</operator> <call><name>TokenStreamToDot</name><argument_list>(<argument><expr><name>inputText</name></expr></argument>, <argument><expr><name>ts</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>PrintWriter</name><argument_list>(<argument><expr><name>w</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>toDot</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name><name>VocabularyAssert</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name><name>VocabularyAssert</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>cdcacc587bf</name><operator>..</operator><name>dc3765a4a74</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name><name>VocabularyAssert</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>analysis</name><operator>/</operator><name><name>VocabularyAssert</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name></name>;</package>
  <expr_stmt><expr><operator>*</operator><operator>/</operator></expr></expr_stmt>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>BufferedReader</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStreamReader</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>StandardCharsets</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>zip</name><operator>.</operator><name>ZipFile</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>Analyzer</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">61</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">61</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>VocabularyAssert</name> <block>{
   }</block>
   
   <comment type="block" format="javadoc">/** Run a vocabulary test against two data files inside a zip file */</comment>
  <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>assertVocabulary</name><argument_list>(<argument><expr><name>Analyzer</name> <name>a</name></expr></argument>, <argument><expr><name>File</name> <name>zipFile</name></expr></argument>, <argument><expr><name>String</name> <name>voc</name></expr></argument>, <argument><expr><name>String</name> <name>out</name></expr></argument>)</argument_list></call>
  <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><name>ZipFile</name> <name>zip</name> <operator>=</operator> <operator>new</operator> <call><name>ZipFile</name><argument_list>(<argument><expr><name>zipFile</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
  <function><type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>assertVocabulary</name><parameter_list>(<parameter><decl><type><name>Analyzer</name></type> <name>a</name></decl></parameter>, <parameter><decl><type><name>Path</name></type> <name>zipFile</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>voc</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>out</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>ZipFile</name></type> <name>zip</name> <init>= <expr><operator>new</operator> <call><name>ZipFile</name><argument_list>(<argument><expr><call><name><name>zipFile</name><operator>.</operator><name>toFile</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>InputStream</name></type> <name>v</name> <init>= <expr><call><name><name>zip</name><operator>.</operator><name>getInputStream</name></name><argument_list>(<argument><expr><call><name><name>zip</name><operator>.</operator><name>getEntry</name></name><argument_list>(<argument><expr><name>voc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>InputStream</name></type> <name>o</name> <init>= <expr><call><name><name>zip</name><operator>.</operator><name>getInputStream</name></name><argument_list>(<argument><expr><call><name><name>zip</name><operator>.</operator><name>getEntry</name></name><argument_list>(<argument><expr><name>out</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>assertVocabulary</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>v</name></expr></argument>, <argument><expr><name>o</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">73</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">72</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>VocabularyAssert</name> <block>{
   }</block>
   
   <comment type="block" format="javadoc">/** Run a vocabulary test against a tab-separated data file inside a zip file */</comment>
  <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>assertVocabulary</name><argument_list>(<argument><expr><name>Analyzer</name> <name>a</name></expr></argument>, <argument><expr><name>File</name> <name>zipFile</name></expr></argument>, <argument><expr><name>String</name> <name>vocOut</name></expr></argument>)</argument_list></call>
  <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><name>ZipFile</name> <name>zip</name> <operator>=</operator> <operator>new</operator> <call><name>ZipFile</name><argument_list>(<argument><expr><name>zipFile</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
  <function><type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>assertVocabulary</name><parameter_list>(<parameter><decl><type><name>Analyzer</name></type> <name>a</name></decl></parameter>, <parameter><decl><type><name>Path</name></type> <name>zipFile</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>vocOut</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>ZipFile</name></type> <name>zip</name> <init>= <expr><operator>new</operator> <call><name>ZipFile</name><argument_list>(<argument><expr><call><name><name>zipFile</name><operator>.</operator><name>toFile</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>InputStream</name></type> <name>vo</name> <init>= <expr><call><name><name>zip</name><operator>.</operator><name>getInputStream</name></name><argument_list>(<argument><expr><call><name><name>zip</name><operator>.</operator><name>getEntry</name></name><argument_list>(<argument><expr><name>vocOut</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>assertVocabulary</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>vo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>vo</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>BasePostingsFormatTestCase</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>BasePostingsFormatTestCase</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">9b07768ffd7</literal><operator>..</operator><name>b6ba0e14885</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>BasePostingsFormatTestCase</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>BasePostingsFormatTestCase</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1335</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">1336</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>BasePostingsFormatTestCase</name> extends <name>BaseIndexFileFormatTest</name>
   <comment type="block" format="javadoc">/** Indexes all fields/terms at the specified
    *  IndexOptions, and fully tests at that IndexOptions. */</comment>
   <specifier>private</specifier> <name>void</name> <call><name>testFull</name><argument_list>(<argument><expr><name>IndexOptions</name> <name>options</name></expr></argument>, <argument><expr><name>boolean</name> <name>withPayloads</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>File</name> <name>path</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"testPostingsFormat.testExact"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>path</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"testPostingsFormat.testExact"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>Directory</name></type> <name>dir</name> <init>= <expr><call><name>newFSDirectory</name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <comment type="line">// TODO test thread safety of buildIndex too</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1388</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">1389</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>BasePostingsFormatTestCase</name> extends <name>BaseIndexFileFormatTest</name>
     <name>int</name> <name>iters</name> <operator>=</operator> <literal type="number">5</literal></expr>;</expr_stmt>
 
     <for>for<control>(<init><decl><type><name>int</name></type> <name>iter</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>iter</name><operator>&lt;</operator><name>iters</name></expr>;</condition><incr><expr><name>iter</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
      <decl_stmt><decl><type><name>File</name></type> <name>path</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"testPostingsFormat"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>Path</name></type> <name>path</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"testPostingsFormat"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>Directory</name></type> <name>dir</name> <init>= <expr><call><name>newFSDirectory</name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
       <decl_stmt><decl><type><name>boolean</name></type> <name>indexPayloads</name> <init>= <expr><call><name>random</name><argument_list>()</argument_list></call><operator>.</operator><call><name>nextBoolean</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>ThreadedIndexingAndSearchingTestCase</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>ThreadedIndexingAndSearchingTestCase</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">3c8c4edcdac</literal><operator>..</operator><literal type="number">4fc43f9d442</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>ThreadedIndexingAndSearchingTestCase</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>ThreadedIndexingAndSearchingTestCase</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>*</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>ExecutorService</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>Executors</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">436</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">437</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>ThreadedIndexingAndSearchingTestCase</name> extends <name>LuceneTestCas</name>
 
     <name>Random</name> <name>random</name> <operator>=</operator> <operator>new</operator> <call><name>Random</name><argument_list>(<argument><expr><call><name>random</name><argument_list>()</argument_list></call><operator>.</operator><call><name>nextLong</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><specifier>final</specifier> <name>LineFileDocs</name></type> <name>docs</name> <init>= <expr><operator>new</operator> <call><name>LineFileDocs</name><argument_list>(<argument><expr><name>random</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>File</name></type> <name>tempDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><name>testName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>Path</name></type> <name>tempDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><name>testName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><name>dir</name> <operator>=</operator> <call><name>getDirectory</name><argument_list>(<argument><expr><call><name>newMockFSDirectory</name><argument_list>(<argument><expr><name>tempDir</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// some subclasses rely on this being MDW</comment>
     <if_stmt><if>if <condition>(<expr><name>dir</name> <operator>instanceof</operator> <name>BaseDirectoryWrapper</name></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><operator>(</operator><operator>(</operator><name>BaseDirectoryWrapper</name><operator>)</operator> <name>dir</name><operator>)</operator><operator>.</operator><call><name>setCheckIndexOnClose</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// don't double-checkIndex, we do it ourselves.</comment>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>BaseDirectoryTestCase</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>BaseDirectoryTestCase</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">8031b50b5b9</literal><operator>..</operator><name>daa23f59599</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>BaseDirectoryTestCase</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>BaseDirectoryTestCase</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">23</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">23</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileNotFoundException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>NoSuchFileException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">42</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">43</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>BaseDirectoryTestCase</name> extends <name>LuceneTestCase</name> <block>{
   <comment type="block" format="javadoc">/** Subclass returns the Directory to be tested; if it's
    *  an FS-based directory it should point to the specified
    *  path, else it can ignore it. */</comment>
  <expr><specifier>protected</specifier> <specifier>abstract</specifier> <name>Directory</name> <call><name>getDirectory</name><argument_list>(<argument><expr><name>File</name> <name>path</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws></expr>;
  <specifier>protected</specifier> <specifier>abstract</specifier> <name>Directory</name> <call><name>getDirectory</name><argument_list>(<argument><expr><name>Path</name> <name>path</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws></block></expr>;</expr_stmt>
   
   <comment type="line">// first some basic tests for the directory api</comment>
   
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">473</literal></expr><operator>,</operator><expr><literal type="number">17</literal> <operator>+</operator><literal type="number">474</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>BaseDirectoryTestCase</name> extends <name>LuceneTestCase</name> <block>{
     <expr><call><name><name>dir</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;
   }</block></expr></expr_stmt>
 
  <comment type="block" format="javadoc">/** LUCENE-1464: just creating a Directory should not
   *  mkdir the underling directory in the filesystem. */</comment>
  <function><type><specifier>public</specifier> <name>void</name></type> <name>testDontCreate</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Throwable</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>File</name></type> <name>path</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"doesnotexist"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>IOUtils</name><operator>.</operator><name>rm</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><operator>!</operator><call><name><name>path</name><operator>.</operator><name>exists</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Directory</name></type> <name>dir</name> <init>= <expr><call><name>getDirectory</name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><operator>!</operator><call><name><name>path</name><operator>.</operator><name>exists</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>dir</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

   <comment type="block" format="javadoc">/** LUCENE-1468: once we create an output, we should see
    *  it in the dir listing and be able to open it with
    *  openInput. */</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">582</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">572</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>BaseDirectoryTestCase</name> extends <name>LuceneTestCase</name> <block>{
   
   <comment type="line">// LUCENE-3382 -- make sure we get exception if the directory really does not exist.</comment>
   <expr><specifier>public</specifier> <name>void</name> <call><name>testNoDir</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Throwable</name> <block>{
    <expr><name>File</name> <name>tempDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"doesnotexist"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>Path</name> <name>tempDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"doesnotexist"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>IOUtils</name><operator>.</operator><name>rm</name></name><argument_list>(<argument><expr><name>tempDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>Directory</name></type> <name>dir</name> <init>= <expr><call><name>getDirectory</name><argument_list>(<argument><expr><name>tempDir</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <try>try <block>{<block_content>
       <expr_stmt><expr><call><name><name>DirectoryReader</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>fail</name><argument_list>(<argument><expr><literal type="string">"did not hit expected exception"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>NoSuchDirectoryException</name></type> | <type><name>IndexNotFoundException</name></type> <name>nsde</name></decl></parameter>)</parameter_list> <block>{<block_content>
    </block_content>}</block></catch> <catch>catch <parameter_list>(<parameter><decl><type><name>NoSuchFileException</name></type> | <type><name>IndexNotFoundException</name></type> <name>nsde</name></decl></parameter>)</parameter_list> <block>{<block_content>
       <comment type="line">// expected</comment>
     </block_content>}</block></catch></try>
     <expr_stmt><expr><call><name><name>dir</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">774</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">764</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>BaseDirectoryTestCase</name> extends <name>LuceneTestCase</name> <block>{
   <comment type="line">// this test backdoors the directory via the filesystem. so it must actually use the filesystem</comment>
   <comment type="line">// TODO: somehow change this test to </comment>
   <expr><specifier>public</specifier> <name>void</name> <call><name>testFsyncDoesntCreateNewFiles</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>File</name> <name>path</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"nocreate"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>Path</name> <name>path</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"nocreate"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>Directory</name></type> <name>fsdir</name> <init>= <expr><call><name>getDirectory</name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     
     <comment type="line">// this test backdoors the directory via the filesystem. so it must be an FSDir (for now)</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">791</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">781</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>BaseDirectoryTestCase</name> extends <name>LuceneTestCase</name> <block>{
     <expr><call><name><name>out</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;
     
     <comment type="line">// delete it</comment>
    <call><name><name>Files</name><operator>.</operator><name>delete</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>path</name></expr></argument>, <argument><expr><literal type="string">"afile"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toPath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>delete</name></name><argument_list>(<argument><expr><call><name><name>path</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><literal type="string">"afile"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     
     <comment type="line">// directory is empty</comment>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><call><name><name>fsdir</name><operator>.</operator><name>listAll</name></name><argument_list>()</argument_list></call><operator>.</operator><name>length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>LineFileDocs</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>LineFileDocs</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">4cc95bb0f3d</literal><operator>..</operator><name>b6990030401</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>LineFileDocs</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>LineFileDocs</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">17</literal> <operator>+</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">17</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>BufferedReader</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>Closeable</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileInputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStreamReader</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>RandomAccessFile</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>channels</name><operator>.</operator><name>Channels</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>channels</name><operator>.</operator><name>FileChannel</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>channels</name><operator>.</operator><name>SeekableByteChannel</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>CharsetDecoder</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>CodingErrorAction</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>StandardCharsets</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Paths</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Random</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>atomic</name><operator>.</operator><name>AtomicInteger</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>zip</name><operator>.</operator><name>GZIPInputStream</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">89</literal></expr><operator>,</operator><expr><literal type="number">15</literal> <operator>+</operator><literal type="number">89</literal></expr><operator>,</operator><expr><literal type="number">15</literal> @@ <specifier>public</specifier> <name>class</name> <name>LineFileDocs</name> implements <name>Closeable</name> <block>{
     <expr><name>long</name> <name>size</name> <operator>=</operator> <literal type="number">0L</literal></expr>, <expr><name>seekTo</name> <operator>=</operator> <literal type="number">0L</literal></expr>;</block></expr></expr_stmt>
     <if_stmt><if>if <condition>(<expr><name>is</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
       <comment type="line">// if its not in classpath, we load it as absolute filesystem path (e.g. Hudson's home dir)</comment>
      <decl_stmt><decl><type><name>File</name></type> <name>file</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><name>size</name> <operator>=</operator> <call><name><name>file</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>Path</name></type> <name>file</name> <init>= <expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><name>size</name> <operator>=</operator> <call><name><name>Files</name><operator>.</operator><name>size</name></name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <if_stmt><if>if <condition>(<expr><call><name><name>path</name><operator>.</operator><name>endsWith</name></name><argument_list>(<argument><expr><literal type="string">".gz"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
         <comment type="line">// if it is a gzip file, we need to use InputStream and slowly skipTo:</comment>
        <expr_stmt><expr><name>is</name> <operator>=</operator> <operator>new</operator> <call><name>FileInputStream</name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>is</name> <operator>=</operator> <call><name><name>Files</name><operator>.</operator><name>newInputStream</name></name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></if> <else>else <block>{<block_content>
        <comment type="line">// optimized seek using RandomAccessFile:</comment>
        <comment type="line">// optimized seek using SeekableByteChannel</comment>
         <expr_stmt><expr><name>seekTo</name> <operator>=</operator> <call><name>randomSeekPos</name><argument_list>(<argument><expr><name>random</name></expr></argument>, <argument><expr><name>size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><specifier>final</specifier> <name>FileChannel</name></type> <name>channel</name> <init>= <expr><operator>new</operator> <call><name>RandomAccessFile</name><argument_list>(<argument><expr><name>path</name></expr></argument>, <argument><expr><literal type="string">"r"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getChannel</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier>final</specifier> <name>SeekableByteChannel</name></type> <name>channel</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>newByteChannel</name></name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <if_stmt><if>if <condition>(<expr><name><name>LuceneTestCase</name><operator>.</operator><name>VERBOSE</name></name></expr>)</condition> <block>{<block_content>
           <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"TEST: LineFileDocs: file seek to fp="</literal> <operator>+</operator> <name>seekTo</name> <operator>+</operator> <literal type="string">" on open"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>LuceneTestCase</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>LuceneTestCase</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>a332cb6853b</name><operator>..</operator><name>b20fd2cf668</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>LuceneTestCase</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>LuceneTestCase</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name></name>;</package>
  <expr_stmt><expr><operator>*</operator><operator>/</operator></expr></expr_stmt>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>Closeable</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileNotFoundException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>PrintStream</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">32</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">31</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>reflect</name><operator>.</operator><name>Constructor</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>reflect</name><operator>.</operator><name>InvocationTargetException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>reflect</name><operator>.</operator><name>Method</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>NoSuchFileException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Paths</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1170</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">1171</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>LuceneTestCase</name> extends <name>Assert</name> <block>{
     <return>return <expr><operator>(</operator><name>MockDirectoryWrapper</name><operator>)</operator> <call><name>wrapDirectory</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><call><name>newDirectoryImpl</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><name>TEST_DIRECTORY</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</return>
   }</block></expr></expr_stmt>
 
  <function><type><specifier>public</specifier> <specifier>static</specifier> <name>MockDirectoryWrapper</name></type> <name>newMockFSDirectory</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>f</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <function><type><specifier>public</specifier> <specifier>static</specifier> <name>MockDirectoryWrapper</name></type> <name>newMockFSDirectory</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>f</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <return>return <expr><operator>(</operator><name>MockDirectoryWrapper</name><operator>)</operator> <call><name>newFSDirectory</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1184</literal></expr><operator>,</operator><expr><literal type="number">16</literal> <operator>+</operator><literal type="number">1185</literal></expr><operator>,</operator><expr><literal type="number">16</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>LuceneTestCase</name> extends <name>Assert</name> <block>{
   }</block>
 
   <comment type="block" format="javadoc">/** Returns a new FSDirectory instance over the given file, which must be a folder. */</comment>
  <specifier>public</specifier> <specifier>static</specifier> <name>BaseDirectoryWrapper</name> <call><name>newFSDirectory</name><argument_list>(<argument><expr><name>File</name> <name>f</name></expr></argument>)</argument_list></call> <block>{
  <expr><specifier>public</specifier> <specifier>static</specifier> <name>BaseDirectoryWrapper</name> <call><name>newFSDirectory</name><argument_list>(<argument><expr><name>Path</name> <name>f</name></expr></argument>)</argument_list></call> <block>{
     <return>return <expr><call><name>newFSDirectory</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</return></block></expr>
   }</block>
 
   <comment type="block" format="javadoc">/** Returns a new FSDirectory instance over the given file, which must be a folder. */</comment>
  <specifier>public</specifier> <specifier>static</specifier> <name>BaseDirectoryWrapper</name> <call><name>newFSDirectory</name><argument_list>(<argument><expr><name>File</name> <name>f</name></expr></argument>, <argument><expr><name>LockFactory</name> <name>lf</name></expr></argument>)</argument_list></call> <block>{
  <expr><specifier>public</specifier> <specifier>static</specifier> <name>BaseDirectoryWrapper</name> <call><name>newFSDirectory</name><argument_list>(<argument><expr><name>Path</name> <name>f</name></expr></argument>, <argument><expr><name>LockFactory</name> <name>lf</name></expr></argument>)</argument_list></call> <block>{
     <return>return <expr><call><name>newFSDirectory</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><name>lf</name></expr></argument>, <argument><expr><call><name>rarely</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return></block></expr>
   }</block>
 
  <specifier>private</specifier> <specifier>static</specifier> <name>BaseDirectoryWrapper</name> <call><name>newFSDirectory</name><argument_list>(<argument><expr><name>File</name> <name>f</name></expr></argument>, <argument><expr><name>LockFactory</name> <name>lf</name></expr></argument>, <argument><expr><name>boolean</name> <name>bare</name></expr></argument>)</argument_list></call> <block>{
  <expr><specifier>private</specifier> <specifier>static</specifier> <name>BaseDirectoryWrapper</name> <call><name>newFSDirectory</name><argument_list>(<argument><expr><name>Path</name> <name>f</name></expr></argument>, <argument><expr><name>LockFactory</name> <name>lf</name></expr></argument>, <argument><expr><name>boolean</name> <name>bare</name></expr></argument>)</argument_list></call> <block>{
     <expr><name>String</name> <name>fsdirClass</name> <operator>=</operator> <name>TEST_DIRECTORY</name></expr>;</block></expr>
     <if_stmt><if>if <condition>(<expr><call><name><name>fsdirClass</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><literal type="string">"random"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><name>fsdirClass</name> <operator>=</operator> <call><name><name>RandomPicks</name><operator>.</operator><name>randomFrom</name></name><argument_list>(<argument><expr><call><name>random</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>FS_DIRECTORIES</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1408</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">1409</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>LuceneTestCase</name> extends <name>Assert</name> <block>{
     }</block></expr></expr_stmt>
   </block_content>}</block></if></if_stmt>
 
  <specifier>private</specifier> <specifier>static</specifier> <name>Directory</name> <call><name>newFSDirectoryImpl</name><argument_list>(
      <argument><expr><name><name>Class</name><argument_list type="generic">&lt;<argument><name>?</name> <extends>extends <name>FSDirectory</name></extends></argument>&gt;</argument_list></name> <name>clazz</name></expr></argument>, <argument><expr><name>File</name> <name>file</name></expr></argument>)</argument_list></call>
      <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>private</specifier> <specifier>static</specifier> <name>Directory</name> <call><name>newFSDirectoryImpl</name><argument_list>(<argument><expr><name><name>Class</name><argument_list type="generic">&lt;<argument><name>?</name> <extends>extends <name>FSDirectory</name></extends></argument>&gt;</argument_list></name> <name>clazz</name></expr></argument>, <argument><expr><name>Path</name> <name>path</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><name>FSDirectory</name> <name>d</name> <operator>=</operator> <literal type="null">null</literal></expr></block></expr></argument></throws></block></expr>;</expr_stmt>
     <try>try <block>{<block_content>
      <expr_stmt><expr><name>d</name> <operator>=</operator> <call><name><name>CommandLineUtil</name><operator>.</operator><name>newFSDirectory</name></name><argument_list>(<argument><expr><name>clazz</name></expr></argument>, <argument><expr><name>file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>d</name> <operator>=</operator> <call><name><name>CommandLineUtil</name><operator>.</operator><name>newFSDirectory</name></name><argument_list>(<argument><expr><name>clazz</name></expr></argument>, <argument><expr><name>path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>NoSuchMethodException</name></type> | <type><name>InstantiationException</name></type> | <type><name>IllegalAccessException</name></type> | <type><name>InvocationTargetException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
       <expr_stmt><expr><call><name><name>Rethrow</name><operator>.</operator><name>rethrow</name></name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></catch></try>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1431</literal></expr><operator>,</operator><expr><literal type="number">24</literal> <operator>+</operator><literal type="number">1430</literal></expr><operator>,</operator><expr><literal type="number">24</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>LuceneTestCase</name> extends <name>Assert</name> <block>{
 
     <try>try <block>{<block_content>
       <decl_stmt><decl><type><specifier>final</specifier> <name><name>Class</name><argument_list type="generic">&lt;<argument><name>?</name> <extends>extends <name>Directory</name></extends></argument>&gt;</argument_list></name></type> <name>clazz</name> <init>= <expr><call><name><name>CommandLineUtil</name><operator>.</operator><name>loadDirectoryClass</name></name><argument_list>(<argument><expr><name>clazzName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <comment type="line">// If it is a FSDirectory type, try its ctor(File)</comment>
      <comment type="line">// If it is a FSDirectory type, try its ctor(Path)</comment>
       <if_stmt><if>if <condition>(<expr><call><name><name>FSDirectory</name><operator>.</operator><name><name>class</name><operator>.</operator><name>isAssignableFrom</name></name></name><argument_list>(<argument><expr><name>clazz</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <decl_stmt><decl><type><specifier>final</specifier> <name>File</name></type> <name>dir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"index-"</literal> <operator>+</operator> <name>clazzName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier>final</specifier> <name>Path</name></type> <name>dir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"index-"</literal> <operator>+</operator> <name>clazzName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <return>return <expr><call><name>newFSDirectoryImpl</name><argument_list>(<argument><expr><call><name><name>clazz</name><operator>.</operator><name>asSubclass</name></name><argument_list>(<argument><expr><name><name>FSDirectory</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr>;</return>
       </block_content>}</block></if></if_stmt>
 
      <comment type="line">// See if it has a File ctor even though it's not an</comment>
      <comment type="line">// See if it has a Path ctor even though it's not an</comment>
       <comment type="line">// FSDir subclass:</comment>
      <decl_stmt><decl><type><name><name>Constructor</name><argument_list type="generic">&lt;<argument><name>?</name> <extends>extends <name>Directory</name></extends></argument>&gt;</argument_list></name></type> <name>fileCtor</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name><name>Constructor</name><argument_list type="generic">&lt;<argument><name>?</name> <extends>extends <name>Directory</name></extends></argument>&gt;</argument_list></name></type> <name>pathCtor</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
       <try>try <block>{<block_content>
        <expr_stmt><expr><name>fileCtor</name> <operator>=</operator> <call><name><name>clazz</name><operator>.</operator><name>getConstructor</name></name><argument_list>(<argument><expr><name><name>File</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>pathCtor</name> <operator>=</operator> <call><name><name>clazz</name><operator>.</operator><name>getConstructor</name></name><argument_list>(<argument><expr><name><name>Path</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>NoSuchMethodException</name></type> <name>nsme</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <comment type="line">// Ignore</comment>
       </block_content>}</block></catch></try>
 
      <if_stmt><if>if <condition>(<expr><name>fileCtor</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <decl_stmt><decl><type><specifier>final</specifier> <name>File</name></type> <name>dir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"index"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <return>return <expr><call><name><name>fileCtor</name><operator>.</operator><name>newInstance</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr>;</return>
      <if_stmt><if>if <condition>(<expr><name>pathCtor</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <decl_stmt><decl><type><specifier>final</specifier> <name>Path</name></type> <name>dir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"index"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <return>return <expr><call><name><name>pathCtor</name><operator>.</operator><name>newInstance</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr>;</return>
       </block_content>}</block></if></if_stmt>
 
       <comment type="line">// try empty ctor</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1662</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">1661</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>LuceneTestCase</name> extends <name>Assert</name> <block>{
   }</block>
 
   <comment type="block" format="javadoc">/**
   * Gets a resource from the classpath as {@link File}. This method should only
   * Gets a resource from the classpath as {@link Path}. This method should only
    * be used, if a real file is needed. To get a stream, code should prefer
    * {@link Class#getResourceAsStream} using {@code this.getClass()}.
    */</comment>
  <specifier>protected</specifier> <name>File</name> <call><name>getDataFile</name><argument_list>(<argument><expr><name>String</name> <name>name</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>protected</specifier> <name>Path</name> <call><name>getDataPath</name><argument_list>(<argument><expr><name>String</name> <name>name</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr></expr_stmt>
     <try>try <block>{<block_content>
      <return>return <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>getClass</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getResource</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toURI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
      <return>return <expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>getClass</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getResource</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toURI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
       <throw>throw <expr><operator>new</operator> <call><name>IOException</name><argument_list>(<argument><expr><literal type="string">"Cannot find resource: "</literal> <operator>+</operator> <name>name</name></expr></argument>)</argument_list></call></expr>;</throw>
     </block_content>}</block></catch></try>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">2364</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">2363</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>LuceneTestCase</name> extends <name>Assert</name> <block>{
    <expr><operator>*</operator> <name>or</name> <block>{@<expr><name>link</name> <operator>#</operator><call><name>createTempDir</name><argument_list>(<argument><expr><name>String</name></expr></argument>)</argument_list></call></expr>}</block> <name>or</name> <block>{@<expr><name>link</name> <operator>#</operator><call><name>createTempFile</name><argument_list>(<argument><expr><name>String</name></expr></argument>, <argument><expr><name>String</name></expr></argument>)</argument_list></call></expr>}</block><operator>.</operator>
    <operator>*</operator><operator>/</operator>
   @<name>Deprecated</name>
  <specifier>public</specifier> <specifier>static</specifier> <name>File</name> <call><name>getBaseTempDirForTestClass</name><argument_list>()</argument_list></call> <block>{
  <expr><specifier>public</specifier> <specifier>static</specifier> <name>Path</name> <call><name>getBaseTempDirForTestClass</name><argument_list>()</argument_list></call> <block>{
     <return>return <expr><call><name><name>tempFilesCleanupRule</name><operator>.</operator><name>getPerTestClassTempDir</name></name><argument_list>()</argument_list></call></expr>;</return></block></expr>
   }</block>
 
@@ <operator>-</operator><literal type="number">2374</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">2373</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>LuceneTestCase</name> extends <name>Assert</name> <block>{
    <expr><operator>*</operator> 
    <operator>*</operator> @<name>see</name> <operator>#</operator><call><name>createTempDir</name><argument_list>(<argument><expr><name>String</name></expr></argument>)</argument_list></call>
    <operator>*</operator><operator>/</operator>
  <specifier>public</specifier> <specifier>static</specifier> <name>File</name> <call><name>createTempDir</name><argument_list>()</argument_list></call> <block>{
  <expr><specifier>public</specifier> <specifier>static</specifier> <name>Path</name> <call><name>createTempDir</name><argument_list>()</argument_list></call> <block>{
     <return>return <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"tempDir"</literal></expr></argument>)</argument_list></call></expr>;</return></block></expr>
   }</block>
 
@@ <operator>-</operator><literal type="number">2386</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">2385</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>LuceneTestCase</name> extends <name>Assert</name> <block>{
    <expr><operator>*</operator> <name>test</name> <name>class</name> <name>completes</name> <name><name>successfully</name><operator>.</operator> <name>The</name></name> <name>test</name> <name>should</name> <name>close</name> <name>any</name> <name>file</name> <name>handles</name> <name>that</name> <name>would</name> <name>prevent</name>
    <operator>*</operator> <name>the</name> <name>folder</name> <name>from</name> <name>being</name> <name><name>removed</name><operator>.</operator></name> 
    *<operator>/</operator>
  <specifier>public</specifier> <specifier>static</specifier> <name>File</name> <call><name>createTempDir</name><argument_list>(<argument><expr><name>String</name> <name>prefix</name></expr></argument>)</argument_list></call> <block>{
  <expr><specifier>public</specifier> <specifier>static</specifier> <name>Path</name> <call><name>createTempDir</name><argument_list>(<argument><expr><name>String</name> <name>prefix</name></expr></argument>)</argument_list></call> <block>{
     <return>return <expr><call><name><name>tempFilesCleanupRule</name><operator>.</operator><name>createTempDir</name></name><argument_list>(<argument><expr><name>prefix</name></expr></argument>)</argument_list></call></expr>;</return></block></expr>
   }</block>
   
@@ <operator>-</operator><literal type="number">2398</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">2397</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>LuceneTestCase</name> extends <name>Assert</name> <block>{
    <expr><operator>*</operator> <name>test</name> <name>class</name> <name>completes</name> <name><name>successfully</name><operator>.</operator> <name>The</name></name> <name>test</name> <name>should</name> <name>close</name> <name>any</name> <name>file</name> <name>handles</name> <name>that</name> <name>would</name> <name>prevent</name>
    <operator>*</operator> <name>the</name> <name>folder</name> <name>from</name> <name>being</name> <name><name>removed</name><operator>.</operator></name> 
    *<operator>/</operator>
  <specifier>public</specifier> <specifier>static</specifier> <name>File</name> <call><name>createTempFile</name><argument_list>(<argument><expr><name>String</name> <name>prefix</name></expr></argument>, <argument><expr><name>String</name> <name>suffix</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>public</specifier> <specifier>static</specifier> <name>Path</name> <call><name>createTempFile</name><argument_list>(<argument><expr><name>String</name> <name>prefix</name></expr></argument>, <argument><expr><name>String</name> <name>suffix</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr>
     <return>return <expr><call><name><name>tempFilesCleanupRule</name><operator>.</operator><name>createTempFile</name></name><argument_list>(<argument><expr><name>prefix</name></expr></argument>, <argument><expr><name>suffix</name></expr></argument>)</argument_list></call></expr>;</return></block></expr>
   }</block>
 
@@ <operator>-</operator><literal type="number">2407</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">2406</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>LuceneTestCase</name> extends <name>Assert</name> <block>{
    <expr><operator>*</operator> 
    <operator>*</operator> @<name>see</name> <operator>#</operator><call><name>createTempFile</name><argument_list>(<argument><expr><name>String</name></expr></argument>, <argument><expr><name>String</name></expr></argument>)</argument_list></call> 
    <operator>*</operator><operator>/</operator>
  <specifier>public</specifier> <specifier>static</specifier> <name>File</name> <call><name>createTempFile</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>public</specifier> <specifier>static</specifier> <name>Path</name> <call><name>createTempFile</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr>
     <return>return <expr><call><name>createTempFile</name><argument_list>(<argument><expr><literal type="string">"tempFile"</literal></expr></argument>, <argument><expr><literal type="string">".tmp"</literal></expr></argument>)</argument_list></call></expr>;</return></block></expr>
   }</block></expr>
 }</block>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>RemoveUponClose</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>RemoveUponClose</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">4f012275a78</literal><operator>..</operator><literal type="number">90a97ae75a6</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>RemoveUponClose</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>RemoveUponClose</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@</expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>Closeable</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 
 <comment type="block">/*
  * Licensed to the Apache Software Foundation (ASF) under one or more
@@ -25,12 +26,12 @@ import java.io.IOException;
  * A {@link Closeable} that attempts to remove a given file/folder.
  */</comment>
 <class><specifier>final</specifier> class <name>RemoveUponClose</name> <super_list><implements>implements <super><name>Closeable</name></super></implements></super_list> <block>{
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>File</name></type> <name>file</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>Path</name></type> <name>path</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>TestRuleMarkFailure</name></type> <name>failureMarker</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>String</name></type> <name>creationStack</name></decl>;</decl_stmt>
 
  <constructor><specifier>public</specifier> <name>RemoveUponClose</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>file</name></decl></parameter>, <parameter><decl><type><name>TestRuleMarkFailure</name></type> <name>failureMarker</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>file</name></name> <operator>=</operator> <name>file</name></expr>;</expr_stmt>
  <constructor><specifier>public</specifier> <name>RemoveUponClose</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>path</name></decl></parameter>, <parameter><decl><type><name>TestRuleMarkFailure</name></type> <name>failureMarker</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>path</name></name> <operator>=</operator> <name>path</name></expr>;</expr_stmt>
     <expr_stmt><expr><name><name>this</name><operator>.</operator><name>failureMarker</name></name> <operator>=</operator> <name>failureMarker</name></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><name>StringBuilder</name></type> <name>b</name> <init>= <expr><operator>new</operator> <call><name>StringBuilder</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">44</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">45</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <name>final</name> <name>class</name> <name>RemoveUponClose</name> implements <name>Closeable</name> <block>{
   <expr><specifier>public</specifier> <name>void</name> <call><name>close</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr>
     <comment type="line">// only if there were no other test failures.</comment>
     <if_stmt><if>if <condition>(<expr><call><name><name>failureMarker</name><operator>.</operator><name>wasSuccessful</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><call><name><name>file</name><operator>.</operator><name>exists</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><call><name><name>Files</name><operator>.</operator><name>exists</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
         <try>try <block>{<block_content>
          <expr_stmt><expr><call><name><name>IOUtils</name><operator>.</operator><name>rm</name></name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>IOUtils</name><operator>.</operator><name>rm</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
           <throw>throw <expr><operator>new</operator> <call><name>IOException</name><argument_list>(
               <argument><expr><literal type="string">"Could not remove temporary location '"</literal> 
                  <operator>+</operator> <call><name><name>file</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"', created at stack trace:\n"</literal> <operator>+</operator> <name>creationStack</name></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
                  <expr_stmt><expr><operator>+</operator> <call><name><name>path</name><operator>.</operator><name>toAbsolutePath</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"', created at stack trace:\n"</literal> <operator>+</operator> <name>creationStack</name></expr><operator>,</operator> <expr><name>e</name></expr></expr_stmt>)</block_content></block><empty_stmt>;</empty_stmt></catch></try>
         </block_content>}</block></if></if_stmt>
       </block_content>}</block></if></if_stmt>
     </block_content>}</block></if></if_stmt>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestRuleTemporaryFilesCleanup</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestRuleTemporaryFilesCleanup</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>d139d60b189</name><operator>..</operator><literal type="number">47aab8e162e</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestRuleTemporaryFilesCleanup</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestRuleTemporaryFilesCleanup</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">1</literal><operator>,</operator><literal type="number">7</literal> <operator>+</operator><literal type="number">1</literal><operator>,</operator><literal type="number">9</literal> @@</block></expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name></name>;</package>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Paths</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">44</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">46</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <name>final</name> <name>class</name> <name>TestRuleTemporaryFilesCleanup</name> extends <name>TestRuleAdapter</name> <block>{
   <comment type="block" format="javadoc">/**
    * Writeable temporary base folder. 
    */</comment>
  <expr><specifier>private</specifier> <name>File</name> <name>javaTempDir</name></expr>;
  <specifier>private</specifier> <name>Path</name> <name>javaTempDir</name></block></expr>;</expr_stmt>
 
   <comment type="block" format="javadoc">/**
    * Per-test class temporary folder.
    */</comment>
  <decl_stmt><decl><type><specifier>private</specifier> <name>File</name></type> <name>tempDirBase</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>Path</name></type> <name>tempDirBase</name></decl>;</decl_stmt>
 
   <comment type="block" format="javadoc">/**
    * Suite failure marker.
@@ -59,9 +61,9 @@ final class TestRuleTemporaryFilesCleanup extends TestRuleAdapter {
   /**
    * A queue of temporary resources to be removed after the
    * suite completes.
   * @see #registerToRemoveAfterSuite(File)
   * @see #registerToRemoveAfterSuite(Path)
    */</comment>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <specifier>static</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>File</name></argument>&gt;</argument_list></name></type> <name>cleanupQueue</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>File</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <specifier>static</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>Path</name></argument>&gt;</argument_list></name></type> <name>cleanupQueue</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>Path</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
   <constructor><specifier>public</specifier> <name>TestRuleTemporaryFilesCleanup</name><parameter_list>(<parameter><decl><type><name>TestRuleMarkFailure</name></type> <name>failureMarker</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <expr_stmt><expr><name><name>this</name><operator>.</operator><name>failureMarker</name></name> <operator>=</operator> <name>failureMarker</name></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">70</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">72</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <name>final</name> <name>class</name> <name>TestRuleTemporaryFilesCleanup</name> extends <name>TestRuleAdapter</name> <block>{
   <comment type="block" format="javadoc">/**
    * Register temporary folder for removal after the suite completes.
    */</comment>
  <expr><name>void</name> <call><name>registerToRemoveAfterSuite</name><argument_list>(<argument><expr><name>File</name> <name>f</name></expr></argument>)</argument_list></call> <block>{
  <expr><name>void</name> <call><name>registerToRemoveAfterSuite</name><argument_list>(<argument><expr><name>Path</name> <name>f</name></expr></argument>)</argument_list></call> <block>{
     <assert>assert <expr><name>f</name> <operator>!=</operator> <literal type="null">null</literal></expr>;</assert></block></expr>
 
     <if_stmt><if>if <condition>(<expr><name><name>LuceneTestCase</name><operator>.</operator><name>LEAVE_TEMPORARY</name></name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>err</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"INFO: Will leave temporary file: "</literal> <operator>+</operator> <call><name><name>f</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>err</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"INFO: Will leave temporary file: "</literal> <operator>+</operator> <call><name><name>f</name><operator>.</operator><name>toAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <return>return;</return>
     <expr_stmt/></block_content></block></if></if_stmt></block></expr>}</block>
 
@@ <operator>-</operator><literal type="number">91</literal></expr><operator>,</operator><expr><literal type="number">28</literal> <operator>+</operator><literal type="number">93</literal></expr><operator>,</operator><expr><literal type="number">27</literal> @@ <name>final</name> <name>class</name> <name>TestRuleTemporaryFilesCleanup</name> extends <name>TestRuleAdapter</name> <block>{
     <expr><name>javaTempDir</name> <operator>=</operator> <call><name>initializeJavaTempDir</name><argument_list>()</argument_list></call></expr>;
   }</block></expr></expr_stmt>
 
  <function><type><specifier>private</specifier> <name>File</name></type> <name>initializeJavaTempDir</name><parameter_list>()</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>File</name></type> <name>javaTempDir</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name><name>System</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><literal type="string">"tempDir"</literal></expr></argument>, <argument><expr><call><name><name>System</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><literal type="string">"java.io.tmpdir"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>javaTempDir</name><operator>.</operator><name>exists</name></name><argument_list>()</argument_list></call> <operator>&amp;&amp;</operator> <operator>!</operator><call><name><name>javaTempDir</name><operator>.</operator><name>mkdirs</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(<argument><expr><literal type="string">"Could not create temp dir: "</literal> <operator>+</operator> <call><name><name>javaTempDir</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></if></if_stmt>
    <assert>assert <expr><call><name><name>javaTempDir</name><operator>.</operator><name>isDirectory</name></name><argument_list>()</argument_list></call> <operator>&amp;&amp;</operator>
           <call><name><name>javaTempDir</name><operator>.</operator><name>canWrite</name></name><argument_list>()</argument_list></call></expr>;</assert>
  <function><type><specifier>private</specifier> <name>Path</name></type> <name>initializeJavaTempDir</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>Path</name></type> <name>javaTempDir</name> <init>= <expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>System</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><literal type="string">"tempDir"</literal></expr></argument>, <argument><expr><call><name><name>System</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><literal type="string">"java.io.tmpdir"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>createDirectories</name></name><argument_list>(<argument><expr><name>javaTempDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <assert>assert <expr><call><name><name>Files</name><operator>.</operator><name>isDirectory</name></name><argument_list>(<argument><expr><name>javaTempDir</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator>
           <call><name><name>Files</name><operator>.</operator><name>isWritable</name></name><argument_list>(<argument><expr><name>javaTempDir</name></expr></argument>)</argument_list></call></expr>;</assert>
 
    <return>return <expr><call><name><name>javaTempDir</name><operator>.</operator><name>getAbsoluteFile</name></name><argument_list>()</argument_list></call></expr>;</return>
    <return>return <expr><call><name><name>javaTempDir</name><operator>.</operator><name>toRealPath</name></name><argument_list>()</argument_list></call></expr>;</return>
   </block_content>}</block></function>
 
   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>protected</specifier> <name>void</name></type> <name>afterAlways</name><parameter_list>(<parameter><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>Throwable</name></argument>&gt;</argument_list></name></type> <name>errors</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Throwable</name></expr></argument></throws> <block>{<block_content>
     <comment type="line">// Drain cleanup queue and clear it.</comment>
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>File</name> <index>[]</index></name></type> <name>everything</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>Path</name> <index>[]</index></name></type> <name>everything</name></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>tempDirBasePath</name></decl>;</decl_stmt>
     <synchronized>synchronized <init>(<expr><name>cleanupQueue</name></expr>)</init> <block>{<block_content>
      <expr_stmt><expr><name>tempDirBasePath</name> <operator>=</operator> <operator>(</operator><ternary><condition><expr><name>tempDirBase</name> <operator>!=</operator> <literal type="null">null</literal></expr> ?</condition><then> <expr><call><name><name>tempDirBase</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr> </then><else>: <expr><literal type="null">null</literal></expr></else></ternary><operator>)</operator></expr>;</expr_stmt>
      <expr_stmt><expr><name>tempDirBasePath</name> <operator>=</operator> <operator>(</operator><ternary><condition><expr><name>tempDirBase</name> <operator>!=</operator> <literal type="null">null</literal></expr> ?</condition><then> <expr><call><name><name>tempDirBase</name><operator>.</operator><name>toAbsolutePath</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr> </then><else>: <expr><literal type="null">null</literal></expr></else></ternary><operator>)</operator></expr>;</expr_stmt>
       <expr_stmt><expr><name>tempDirBase</name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
 
       <expr_stmt><expr><call><name><name>Collections</name><operator>.</operator><name>reverse</name></name><argument_list>(<argument><expr><name>cleanupQueue</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>everything</name> <operator>=</operator> <operator>new</operator> <name><name>File</name> <index>[<expr><call><name><name>cleanupQueue</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>]</index></name></expr>;</expr_stmt>
      <expr_stmt><expr><name>everything</name> <operator>=</operator> <operator>new</operator> <name><name>Path</name> <index>[<expr><call><name><name>cleanupQueue</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>]</index></name></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>cleanupQueue</name><operator>.</operator><name>toArray</name></name><argument_list>(<argument><expr><name>everything</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>cleanupQueue</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></synchronized>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">140</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">141</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <name>final</name> <name>class</name> <name>TestRuleTemporaryFilesCleanup</name> extends <name>TestRuleAdapter</name> <block>{
     }</block></expr></expr_stmt>
   </block_content>}</block></function>
   
  <function><type><specifier>final</specifier> <name>File</name></type> <name>getPerTestClassTempDir</name><parameter_list>()</parameter_list> <block>{<block_content>
  <function><type><specifier>final</specifier> <name>Path</name></type> <name>getPerTestClassTempDir</name><parameter_list>()</parameter_list> <block>{<block_content>
     <if_stmt><if>if <condition>(<expr><name>tempDirBase</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
       <decl_stmt><decl><type><name>RandomizedContext</name></type> <name>ctx</name> <init>= <expr><call><name><name>RandomizedContext</name><operator>.</operator><name>current</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name><name>Class</name><argument_list type="generic">&lt;<argument><name>?</name></argument>&gt;</argument_list></name></type> <name>clazz</name> <init>= <expr><call><name><name>ctx</name><operator>.</operator><name>getTargetClass</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">149</literal></expr><operator>,</operator><expr><literal type="number">16</literal> <operator>+</operator><literal type="number">150</literal></expr><operator>,</operator><expr><literal type="number">21</literal> @@ <name>final</name> <name>class</name> <name>TestRuleTemporaryFilesCleanup</name> extends <name>TestRuleAdapter</name> <block>{
       <expr><name>prefix</name> <operator>=</operator> <call><name><name>prefix</name><operator>.</operator><name>replaceFirst</name></name><argument_list>(<argument><expr><literal type="string">"^org.apache.solr."</literal></expr></argument>, <argument><expr><literal type="string">"solr."</literal></expr></argument>)</argument_list></call></expr>;
 
       <name>int</name> <name>attempt</name> <operator>=</operator> <literal type="number">0</literal></block></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>File</name></type> <name>f</name></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>Path</name></type> <name>f</name></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>boolean</name></type> <name>success</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
       <do>do <block>{<block_content>
         <if_stmt><if>if <condition>(<expr><name>attempt</name><operator>++</operator> <operator>&gt;=</operator> <name>TEMP_NAME_RETRY_THRESHOLD</name></expr>)</condition> <block>{<block_content>
           <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(
               <argument><expr><literal type="string">"Failed to get a temporary name too many times, check your temp directory and consider manually cleaning it: "</literal>
                <operator>+</operator> <call><name><name>javaTempDir</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>            
                <expr_stmt><expr><operator>+</operator> <call><name><name>javaTempDir</name><operator>.</operator><name>toAbsolutePath</name></name><argument_list>()</argument_list></call></expr></expr_stmt>)</block_content></block><empty_stmt>;</empty_stmt></if></if_stmt>            
         </block_content>}</block>
        f = new File(javaTempDir<operator>,</operator> prefix + "-" + ctx.getRunnerSeedAsString(</do>)</block_content> 
        f = javaTempDir.resolve(prefix + "-" + ctx.getRunnerSeedAsString(</block></if></if_stmt>)</block_content> 
               + "-" + String.format(Locale.ENGLISH</block><operator>,</operator> "%03d"<operator>,</operator> attempt</function>)</block_content></block></function>)</block_content></block>;</function>
      </block_content>}</block></constructor> <while>while <condition>(<expr><operator>!</operator><call><name><name>f</name><operator>.</operator><name>mkdirs</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content><empty_stmt>;</empty_stmt></block_content></block></while>
        <try>try <block>{<block_content>
          <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>createDirectory</name></name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><name>success</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
        </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>ignore</name></decl></parameter>)</parameter_list> <block>{<block_content/>}</block></catch></try>
      </block_content>}</block></constructor> <while>while <condition>(<expr><operator>!</operator><name>success</name></expr>)</condition><block type="pseudo"><block_content><empty_stmt>;</empty_stmt></block_content></block></while>
 
       <expr_stmt><expr><name>tempDirBase</name> <operator>=</operator> <name>f</name></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>registerToRemoveAfterSuite</name><argument_list>(<argument><expr><name>tempDirBase</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">169</literal></expr><operator>,</operator><expr><literal type="number">19</literal> <operator>+</operator><literal type="number">175</literal></expr><operator>,</operator><expr><literal type="number">24</literal> @@ <name>final</name> <name>class</name> <name>TestRuleTemporaryFilesCleanup</name> extends <name>TestRuleAdapter</name> <block>{
   <comment type="block" format="javadoc">/**
    * @see LuceneTestCase#createTempDir()
    */</comment>
  <expr><specifier>public</specifier> <name>File</name> <call><name>createTempDir</name><argument_list>(<argument><expr><name>String</name> <name>prefix</name></expr></argument>)</argument_list></call> <block>{
    <expr><name>File</name> <name>base</name> <operator>=</operator> <call><name>getPerTestClassTempDir</name><argument_list>()</argument_list></call></expr>;
  <specifier>public</specifier> <name>Path</name> <call><name>createTempDir</name><argument_list>(<argument><expr><name>String</name> <name>prefix</name></expr></argument>)</argument_list></call> <block>{
    <expr><name>Path</name> <name>base</name> <operator>=</operator> <call><name>getPerTestClassTempDir</name><argument_list>()</argument_list></call></expr>;
 
     <name>int</name> <name>attempt</name> <operator>=</operator> <literal type="number">0</literal></block></block></expr>;
    <name>File</name> <name>f</name></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>f</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>boolean</name></type> <name>success</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
     <do>do <block>{<block_content>
       <if_stmt><if>if <condition>(<expr><name>attempt</name><operator>++</operator> <operator>&gt;=</operator> <name>TEMP_NAME_RETRY_THRESHOLD</name></expr>)</condition> <block>{<block_content>
         <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(
             <argument><expr><literal type="string">"Failed to get a temporary name too many times, check your temp directory and consider manually cleaning it: "</literal>
              <operator>+</operator> <call><name><name>base</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>            
              <expr_stmt><expr><operator>+</operator> <call><name><name>base</name><operator>.</operator><name>toAbsolutePath</name></name><argument_list>()</argument_list></call></expr></expr_stmt>)</block_content></block><empty_stmt>;</empty_stmt></if></if_stmt>            
       </block_content>}</block>
      f = new File(base<operator>,</operator> prefix + "-" + String.format(Locale.ENGLISH<operator>,</operator> "%03d"<operator>,</operator> attempt</do>)</block_content></block></constructor>)</block>;</class>
    </block_content>}</block></if></if_stmt> <while>while <condition>(<expr><operator>!</operator><call><name><name>f</name><operator>.</operator><name>mkdirs</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content><empty_stmt>;</empty_stmt></block_content></block></while>
      <expr_stmt><expr><name>f</name> <operator>=</operator> <call><name><name>base</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><name>prefix</name> <operator>+</operator> <literal type="string">"-"</literal> <operator>+</operator> <call><name><name>String</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><name><name>Locale</name><operator>.</operator><name>ENGLISH</name></name></expr></argument>, <argument><expr><literal type="string">"%03d"</literal></expr></argument>, <argument><expr><name>attempt</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <try>try <block>{<block_content>
        <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>createDirectory</name></name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>success</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
      </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>ignore</name></decl></parameter>)</parameter_list> <block>{<block_content/>}</block></catch></try>
    </block_content>}</block></try></block></expr></expr_stmt> <while>while <condition>(<expr><operator>!</operator><name>success</name></expr>)</condition><block type="pseudo"><block_content><empty_stmt>;</empty_stmt></block_content></block></while>
 
     <expr_stmt><expr><call><name>registerToRemoveAfterSuite</name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <return>return <expr><name>f</name></expr>;</return>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">190</literal></expr><operator>,</operator><expr><literal type="number">19</literal> <operator>+</operator><literal type="number">201</literal></expr><operator>,</operator><expr><literal type="number">24</literal> @@ <name>final</name> <name>class</name> <name>TestRuleTemporaryFilesCleanup</name> extends <name>TestRuleAdapter</name> <block>{
   <comment type="block" format="javadoc">/**
    * @see LuceneTestCase#createTempFile()
    */</comment>
  <expr><specifier>public</specifier> <name>File</name> <call><name>createTempFile</name><argument_list>(<argument><expr><name>String</name> <name>prefix</name></expr></argument>, <argument><expr><name>String</name> <name>suffix</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><name>File</name> <name>base</name> <operator>=</operator> <call><name>getPerTestClassTempDir</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
  <specifier>public</specifier> <name>Path</name> <call><name>createTempFile</name><argument_list>(<argument><expr><name>String</name> <name>prefix</name></expr></argument>, <argument><expr><name>String</name> <name>suffix</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><name>Path</name> <name>base</name> <operator>=</operator> <call><name>getPerTestClassTempDir</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></block></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><name>int</name></type> <name>attempt</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>f</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>f</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>boolean</name></type> <name>success</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
     <do>do <block>{<block_content>
       <if_stmt><if>if <condition>(<expr><name>attempt</name><operator>++</operator> <operator>&gt;=</operator> <name>TEMP_NAME_RETRY_THRESHOLD</name></expr>)</condition> <block>{<block_content>
         <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(
             <argument><expr><literal type="string">"Failed to get a temporary name too many times, check your temp directory and consider manually cleaning it: "</literal>
              <operator>+</operator> <call><name><name>base</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>            
              <expr_stmt><expr><operator>+</operator> <call><name><name>base</name><operator>.</operator><name>toAbsolutePath</name></name><argument_list>()</argument_list></call></expr></expr_stmt>)</block_content></block><empty_stmt>;</empty_stmt></if></if_stmt>            
       </block_content>}</block>
      f = new File(base<operator>,</operator> prefix + "-" + String.format(Locale.ENGLISH<operator>,</operator> "%03d"<operator>,</operator> attempt</do>)</block_content> + suffix</block></function>)</block_content></block><empty_stmt>;</empty_stmt></else></if_stmt>
    </block_content>}</block></if></if_stmt> <while>while <condition>(<expr><operator>!</operator><call><name><name>f</name><operator>.</operator><name>createNewFile</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content><empty_stmt>;</empty_stmt></block_content></block></while>
      <expr_stmt><expr><name>f</name> <operator>=</operator> <call><name><name>base</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><name>prefix</name> <operator>+</operator> <literal type="string">"-"</literal> <operator>+</operator> <call><name><name>String</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><name><name>Locale</name><operator>.</operator><name>ENGLISH</name></name></expr></argument>, <argument><expr><literal type="string">"%03d"</literal></expr></argument>, <argument><expr><name>attempt</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>suffix</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <try>try <block>{<block_content>
        <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>createFile</name></name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>success</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
      </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>ignore</name></decl></parameter>)</parameter_list> <block>{<block_content/>}</block></catch></try>
    </block_content>}</block></if></if_stmt> <while>while <condition>(<expr><operator>!</operator><name>success</name></expr>)</condition><block type="pseudo"><block_content><empty_stmt>;</empty_stmt></block_content></block></while>
 
     <expr_stmt><expr><call><name>registerToRemoveAfterSuite</name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <return>return <expr><name>f</name></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestUtil</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestUtil</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">56f3f5f3c84</literal><operator>..</operator><literal type="number">49e675b5667</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestUtil</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestUtil</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>BufferedOutputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>ByteArrayOutputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileOutputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>OutputStream</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">29</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">26</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>math</name><operator>.</operator><name>BigDecimal</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>math</name><operator>.</operator><name>BigInteger</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>CharBuffer</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Enumeration</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>LinkedHashMap</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Random</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">104</literal></expr><operator>,</operator><expr><literal type="number">28</literal> <operator>+</operator><literal type="number">101</literal></expr><operator>,</operator><expr><literal type="number">24</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>TestUtil</name> <block>{
    <expr><operator>*</operator> <name>Convenience</name> <name>method</name> <name>unzipping</name> <name>zipName</name> <name>into</name> <name>destDir</name></expr>, <expr><name>cleaning</name> <name>up</name> 
    <operator>*</operator> <name>destDir</name> <name><name>first</name><operator>.</operator></name> 
    *<operator>/</operator>
  <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>unzip</name><argument_list>(<argument><expr><name>File</name> <name>zipName</name></expr></argument>, <argument><expr><name>File</name> <name>destDir</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>unzip</name><argument_list>(<argument><expr><name>Path</name> <name>zipName</name></expr></argument>, <argument><expr><name>Path</name> <name>destDir</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><call><name><name>IOUtils</name><operator>.</operator><name>rm</name></name><argument_list>(<argument><expr><name>destDir</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <call><name><name>destDir</name><operator>.</operator><name>mkdir</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>createDirectory</name></name><argument_list>(<argument><expr><name>destDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
    <decl_stmt><decl><type><name>ZipFile</name></type> <name>zipFile</name> <init>= <expr><operator>new</operator> <call><name>ZipFile</name><argument_list>(<argument><expr><name>zipName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>ZipFile</name></type> <name>zipFile</name> <init>= <expr><operator>new</operator> <call><name>ZipFile</name><argument_list>(<argument><expr><call><name><name>zipName</name><operator>.</operator><name>toFile</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name><name>Enumeration</name><argument_list type="generic">&lt;<argument><name>?</name> <extends>extends <name>ZipEntry</name></extends></argument>&gt;</argument_list></name></type> <name>entries</name> <init>= <expr><call><name><name>zipFile</name><operator>.</operator><name>entries</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <while>while <condition>(<expr><call><name><name>entries</name><operator>.</operator><name>hasMoreElements</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
       <decl_stmt><decl><type><name>ZipEntry</name></type> <name>entry</name> <init>= <expr><call><name><name>entries</name><operator>.</operator><name>nextElement</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       
       <decl_stmt><decl><type><name>InputStream</name></type> <name>in</name> <init>= <expr><call><name><name>zipFile</name><operator>.</operator><name>getInputStream</name></name><argument_list>(<argument><expr><name>entry</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>File</name></type> <name>targetFile</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>destDir</name></expr></argument>, <argument><expr><call><name><name>entry</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><call><name><name>entry</name><operator>.</operator><name>isDirectory</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
        <comment type="line">// allow unzipping with directory structure</comment>
        <expr_stmt><expr><call><name><name>targetFile</name><operator>.</operator><name>mkdirs</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if> <else>else <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><call><name><name>targetFile</name><operator>.</operator><name>getParentFile</name></name><argument_list>()</argument_list></call><operator>!=</operator><literal type="null">null</literal></expr>)</condition> <block>{<block_content>
          <comment type="line">// be on the safe side: do not rely on that directories are always extracted</comment>
          <comment type="line">// before their children (although this makes sense, but is it guaranteed?)</comment>
          <expr_stmt><expr><call><name><name>targetFile</name><operator>.</operator><name>getParentFile</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>mkdirs</name><argument_list>()</argument_list></call></expr>;</expr_stmt>   
        </block_content>}</block></if></if_stmt>
        <decl_stmt><decl><type><name>OutputStream</name></type> <name>out</name> <init>= <expr><operator>new</operator> <call><name>BufferedOutputStream</name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileOutputStream</name><argument_list>(<argument><expr><name>targetFile</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>Path</name></type> <name>targetFile</name> <init>= <expr><call><name><name>destDir</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><call><name><name>entry</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      
      <comment type="line">// be on the safe side: do not rely on that directories are always extracted</comment>
      <comment type="line">// before their children (although this makes sense, but is it guaranteed?)</comment>
      <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>createDirectories</name></name><argument_list>(<argument><expr><call><name><name>targetFile</name><operator>.</operator><name>getParent</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>entry</name><operator>.</operator><name>isDirectory</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
        <decl_stmt><decl><type><name>OutputStream</name></type> <name>out</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>newOutputStream</name></name><argument_list>(<argument><expr><name>targetFile</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         
         <decl_stmt><decl><type><name><name>byte</name><index>[]</index></name></type> <name>buffer</name> <init>= <expr><operator>new</operator> <name><name>byte</name><index>[<expr><literal type="number">8192</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
         <decl_stmt><decl><type><name>int</name></type> <name>len</name></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name>fst</name><operator>/</operator><name><name>FSTTester</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name>fst</name><operator>/</operator><name><name>FSTTester</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">4b41901b14d</literal><operator>..</operator><literal type="number">5393a48ad80</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name>fst</name><operator>/</operator><name><name>FSTTester</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name>fst</name><operator>/</operator><name><name>FSTTester</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>fst</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileOutputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>OutputStreamWriter</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>Writer</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>StandardCharsets</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Paths</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">321</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">321</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name><name>FSTTester</name><argument_list type="generic">&lt;<argument><name>T</name></argument>&gt;</argument_list></name> <block>{
     }</block></expr></expr_stmt>
 
     <if_stmt><if>if <condition>(<expr><name><name>LuceneTestCase</name><operator>.</operator><name>VERBOSE</name></name> <operator>&amp;&amp;</operator> <call><name><name>pairs</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>&lt;=</operator> <literal type="number">20</literal> <operator>&amp;&amp;</operator> <name>fst</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>Writer</name></type> <name>w</name> <init>= <expr><operator>new</operator> <call><name>OutputStreamWriter</name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileOutputStream</name><argument_list>(<argument><expr><literal type="string">"out.dot"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>Writer</name></type> <name>w</name> <init>= <expr><call><name><name>Files</name><operator>.</operator><name>newBufferedWriter</name></name><argument_list>(<argument><expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"out.dot"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>Util</name><operator>.</operator><name>toDot</name></name><argument_list>(<argument><expr><name>fst</name></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>w</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"SAVED out.dot"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>tools</name><operator>/</operator><name>forbiddenApis</name><operator>/</operator><name><name>lucene</name><operator>.</operator><name>txt</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>tools</name><operator>/</operator><name>forbiddenApis</name><operator>/</operator><name><name>lucene</name><operator>.</operator><name>txt</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">00000000000..bc8430b2f39</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>tools</name><operator>/</operator><name>forbiddenApis</name><operator>/</operator><name><name>lucene</name><operator>.</operator><name>txt</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">20</literal> @@
#  <name>Licensed</name> <name>to</name> <name>the</name> <name>Apache</name> <name>Software</name> <call><name>Foundation</name> <argument_list>(<argument><expr><name>ASF</name></expr></argument>)</argument_list></call> <name>under</name> <name>one</name> <name>or</name> <name>more</name>
#  <name>contributor</name> <name>license</name> <name><name>agreements</name><operator>.</operator>  <name>See</name></name> <name>the</name> <name>NOTICE</name> <name>file</name> <name>distributed</name> <name>with</name>
#  <name>this</name> <name>work</name></expr></expr_stmt> <for>for additional information regarding copyright ownership.
#  The ASF licenses this file to You under the Apache License<operator>,</operator> <expr_stmt><expr><name>Version</name> <literal type="number">2.0</literal>
#  <operator>(</operator><name>the</name> <literal type="string">"License"</literal><operator>)</operator></expr>;</expr_stmt></for> <expr_stmt><expr><name>you</name> <name>may</name> <name>not</name> <name>use</name> <name>this</name> <name>file</name> <name>except</name> <name>in</name> <name>compliance</name> <name>with</name>
#  <name>the</name> <name><name>License</name><operator>.</operator>  <name>You</name></name> <name>may</name> <name>obtain</name> <name>a</name> <name>copy</name> <name>of</name> <name>the</name> <name>License</name> <name>at</name>
#
#       <name>http</name><operator>:</operator><comment type="line">//www.apache.org/licenses/LICENSE-2.0</comment>
#
#  <name>Unless</name> <name>required</name> <name>by</name> <name>applicable</name> <name>law</name> <name>or</name> <name>agreed</name> <name>to</name> <name>in</name> <name>writing</name></expr><operator>,</operator> <expr><name>software</name>
#  <name>distributed</name> <name>under</name> <name>the</name> <name>License</name> <name>is</name> <name>distributed</name> <name>on</name> <name>an</name> <literal type="string">"AS IS"</literal> <name>BASIS</name></expr><operator>,</operator>
#  <expr><name>WITHOUT</name> <name>WARRANTIES</name> <name>OR</name> <name>CONDITIONS</name> <name>OF</name> <name>ANY</name> <name>KIND</name></expr><operator>,</operator> <expr><name>either</name> <name>express</name> <name>or</name> <name><name>implied</name><operator>.</operator></name>
#  <name>See</name> <name>the</name> <name>License</name></expr></expr_stmt> <for>for the specific language governing permissions and
#  limitations under the License.

@defaultMessage Use NIO.2 instead
java.io.File
java.io.FileInputStream
java.io.FileOutputStream
# TODO: all kinds of other stuff taking "String" but making a file itself...
diff --git a/solr/contrib/analysis-extras/src/test/org/apache/solr/analysis/TestFoldingMultitermExtrasQuery.java b/solr/contrib/analysis-extras/src/test/org/apache/solr/analysis/TestFoldingMultitermExtrasQuery.java
index cc93887ffd2..bb0845eb5a4 100644
-- a/solr/contrib/analysis-extras/src/test/org/apache/solr/analysis/TestFoldingMultitermExtrasQuery.java
++ b/solr/contrib/analysis-extras/src/test/org/apache/solr/analysis/TestFoldingMultitermExtrasQuery.java
@@ -32<operator>,</operator><expr_stmt><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">32</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestFoldingMultitermExtrasQuery</name> extends <name>SolrTestCaseJ4</name> <block>{
 
   @<expr><name>BeforeClass</name>
   <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>beforeTests</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>File</name> <name>testHome</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>File</name> <name>testHome</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt></for>
     <expr_stmt><expr><call><name><name>FileUtils</name><operator>.</operator><name>copyDirectory</name></name><argument_list>(<argument><expr><call><name>getFile</name><argument_list>(<argument><expr><literal type="string">"analysis-extras/solr"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>testHome</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>initCore</name><argument_list>(<argument><expr><literal type="string">"solrconfig-icucollate.xml"</literal></expr></argument>,<argument><expr><literal type="string">"schema-folding-extra.xml"</literal></expr></argument>, <argument><expr><call><name><name>testHome</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>analysis</name><operator>-</operator><name>extras</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>TestICUCollationField</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>analysis</name><operator>-</operator><name>extras</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>TestICUCollationField</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">9ae3e4d9677</literal><operator>..</operator><literal type="number">161f6476741</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>analysis</name><operator>-</operator><name>extras</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>TestICUCollationField</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>analysis</name><operator>-</operator><name>extras</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>TestICUCollationField</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">63</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">63</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestICUCollationField</name> extends <name>SolrTestCaseJ4</name> <block>{
    <expr><operator>*</operator> <name>So</name> <name>its</name> <name>preferable</name> <name>to</name> <name>create</name> <name>this</name> <name>file</name> <name>on</name><operator>-</operator><name>the</name><operator>-</operator><name><name>fly</name><operator>.</operator></name>
    *<operator>/</operator>
   <specifier>public</specifier> <specifier>static</specifier> <name>String</name> <call><name>setupSolrHome</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>String</name> <name>tmpFile</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>String</name> <name>tmpFile</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <comment type="line">// make data and conf dirs</comment>
     <expr_stmt><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>tmpFile</name>  <operator>+</operator> <literal type="string">"/collection1"</literal></expr></argument>, <argument><expr><literal type="string">"data"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>mkdirs</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>File</name></type> <name>confDir</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>tmpFile</name> <operator>+</operator> <literal type="string">"/collection1"</literal></expr></argument>, <argument><expr><literal type="string">"conf"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>analysis</name><operator>-</operator><name>extras</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>TestICUCollationFieldDocValues</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>analysis</name><operator>-</operator><name>extras</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>TestICUCollationFieldDocValues</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>f3d45752dca</name><operator>..</operator><name>cba27a08e35</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>analysis</name><operator>-</operator><name>extras</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>TestICUCollationFieldDocValues</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>analysis</name><operator>-</operator><name>extras</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>TestICUCollationFieldDocValues</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">61</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">61</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestICUCollationFieldDocValues</name> extends <name>SolrTestCaseJ4</name> <block>{
    <expr><operator>*</operator> <name>So</name> <name>its</name> <name>preferable</name> <name>to</name> <name>create</name> <name>this</name> <name>file</name> <name>on</name><operator>-</operator><name>the</name><operator>-</operator><name><name>fly</name><operator>.</operator></name>
    *<operator>/</operator>
   <specifier>public</specifier> <specifier>static</specifier> <name>String</name> <call><name>setupSolrHome</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>File</name> <name>tmpFile</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>File</name> <name>tmpFile</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     
     <comment type="line">// make data and conf dirs</comment>
     <expr_stmt><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>tmpFile</name> <operator>+</operator> <literal type="string">"/collection1"</literal></expr></argument>, <argument><expr><literal type="string">"data"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>mkdirs</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>analysis</name><operator>-</operator><name>extras</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>TestICUCollationFieldOptions</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>analysis</name><operator>-</operator><name>extras</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>TestICUCollationFieldOptions</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">3a6671931d6</literal><operator>..</operator><name>f1fcf536a46</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>analysis</name><operator>-</operator><name>extras</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>TestICUCollationFieldOptions</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>analysis</name><operator>-</operator><name>extras</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>TestICUCollationFieldOptions</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">29</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">29</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <class><specifier>public</specifier> class <name>TestICUCollationFieldOptions</name> <super_list><extends>extends <super><name>SolrTestCaseJ4</name></super></extends></super_list> <block>{
   <function><annotation>@<name>BeforeClass</name></annotation>
   <type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>beforeClass</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>File</name></type> <name>testHome</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>testHome</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>FileUtils</name><operator>.</operator><name>copyDirectory</name></name><argument_list>(<argument><expr><call><name>getFile</name><argument_list>(<argument><expr><literal type="string">"analysis-extras/solr"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>testHome</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>initCore</name><argument_list>(<argument><expr><literal type="string">"solrconfig-icucollate.xml"</literal></expr></argument>,<argument><expr><literal type="string">"schema-icucollateoptions.xml"</literal></expr></argument>, <argument><expr><call><name><name>testHome</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <comment type="line">// add some docs</comment>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>clustering</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>clustering</name><operator>/</operator><name><name>AbstractClusteringTestCase</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>clustering</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>clustering</name><operator>/</operator><name><name>AbstractClusteringTestCase</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">89390999199..77de5f7cc9d</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>clustering</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>clustering</name><operator>/</operator><name><name>AbstractClusteringTestCase</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>clustering</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>clustering</name><operator>/</operator><name><name>AbstractClusteringTestCase</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">33</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">33</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>AbstractClusteringTestCase</name> extends <name>SolrTestCaseJ4</name> <block>{
 
   @<expr><name>BeforeClass</name>
   <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>beforeClass</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>File</name> <name>testHome</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>File</name> <name>testHome</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>FileUtils</name><operator>.</operator><name>copyDirectory</name></name><argument_list>(<argument><expr><call><name>getFile</name><argument_list>(<argument><expr><literal type="string">"clustering/solr"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>testHome</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>initCore</name><argument_list>(<argument><expr><literal type="string">"solrconfig.xml"</literal></expr></argument>, <argument><expr><literal type="string">"schema.xml"</literal></expr></argument>, <argument><expr><call><name><name>testHome</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>numberOfDocs</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>AbstractDataImportHandlerTestCase</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>AbstractDataImportHandlerTestCase</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">2e3e395226e</literal><operator>..</operator><literal type="number">12bed334a65</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>AbstractDataImportHandlerTestCase</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>AbstractDataImportHandlerTestCase</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">55</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">55</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>AbstractDataImportHandlerTestCase</name> extends
 
   <comment type="line">// note, a little twisted that we shadow this static method</comment>
   <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>initCore</name><argument_list>(<argument><expr><name>String</name> <name>config</name></expr></argument>, <argument><expr><name>String</name> <name>schema</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>File</name> <name>testHome</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"core-home"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>testHome</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"core-home"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>FileUtils</name><operator>.</operator><name>copyDirectory</name></name><argument_list>(<argument><expr><call><name>getFile</name><argument_list>(<argument><expr><literal type="string">"dih/solr"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>testHome</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>initCore</name><argument_list>(<argument><expr><name>config</name></expr></argument>, <argument><expr><name>schema</name></expr></argument>, <argument><expr><call><name><name>testHome</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">64</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">64</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>AbstractDataImportHandlerTestCase</name> extends
   @<name>Before</name>
   <specifier>public</specifier> <name>void</name> <call><name>setUp</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><call><name><name>super</name><operator>.</operator><name>setUp</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>home</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"dih-properties"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>home</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"dih-properties"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"solr.solr.home"</literal></expr></argument>, <argument><expr><call><name><name>home</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>    
   }</block></class>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">99</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">99</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>AbstractDataImportHandlerTestCase</name> extends
    <operator>*</operator><operator>/</operator>
   <specifier>protected</specifier> <name>File</name> <call><name>redirectTempProperties</name><argument_list>(<argument><expr><name>DataImporter</name> <name>di</name></expr></argument>)</argument_list></call> <block>{
     <try>try <block>{<block_content>
      <decl_stmt><decl><type><name>File</name></type> <name>tempFile</name> <init>= <expr><call><name>createTempFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>File</name></type> <name>tempFile</name> <init>= <expr><call><name>createTempFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>di</name><operator>.</operator><name>getConfig</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getPropertyWriter</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getParameters</name><argument_list>()</argument_list></call>
         <operator>.</operator><call><name>put</name><argument_list>(<argument><expr><name><name>SimplePropertiesWriter</name><operator>.</operator><name>FILENAME</name></name></expr></argument>, <argument><expr><call><name><name>tempFile</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <return>return <expr><name>tempFile</name></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>AbstractSqlEntityProcessorTestCase</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>AbstractSqlEntityProcessorTestCase</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">78b3bfd027e</literal><operator>..</operator><name>ecb58f85dcc</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>AbstractSqlEntityProcessorTestCase</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>AbstractSqlEntityProcessorTestCase</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">55</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">55</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>AbstractSqlEntityProcessorTestCase</name> extends
   
   @<name>Before</name>
   <specifier>public</specifier> <name>void</name> <call><name>beforeSqlEntitiyProcessorTestCase</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>File</name> <name>tmpdir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>tmpdir</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><name>fileLocation</name> <operator>=</operator> <call><name><name>tmpdir</name><operator>.</operator><name>getPath</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>fileName</name> <operator>=</operator> <literal type="string">"the.properties"</literal></expr>;</expr_stmt>
   </block_content>}</block></try> 
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>TestContentStreamDataSource</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>TestContentStreamDataSource</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>a15e2d18320</name><operator>..</operator><literal type="number">3c92c297dc7</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>TestContentStreamDataSource</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>TestContentStreamDataSource</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">149</literal><operator>,</operator><literal type="number">7</literal> <operator>+</operator><literal type="number">149</literal><operator>,</operator><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestContentStreamDataSource</name> extends <name>AbstractDataImportHandlerTestCa</name>
 
 
     <specifier>public</specifier> <name>void</name> <call><name>setUp</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
      <expr><name>homeDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"inst"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></block></expr>;</expr_stmt>
      <expr_stmt><expr><name>homeDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"inst"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><name>dataDir</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>homeDir</name> <operator>+</operator> <literal type="string">"/collection1"</literal></expr></argument>, <argument><expr><literal type="string">"data"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><name>confDir</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>homeDir</name> <operator>+</operator> <literal type="string">"/collection1"</literal></expr></argument>, <argument><expr><literal type="string">"conf"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>TestDocBuilder2</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>TestDocBuilder2</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">2efc90c664a</literal><operator>..</operator><literal type="number">33a9646e4bf</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>TestDocBuilder2</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>TestDocBuilder2</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">253</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">253</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestDocBuilder2</name> extends <name>AbstractDataImportHandlerTestCase</name> <block>{
   @<expr><name>Test</name>
   @<call><name>Ignore</name><argument_list>(<argument><expr><literal type="string">"Fix Me. See SOLR-4103."</literal></expr></argument>)</argument_list></call>
   <specifier>public</specifier> <name>void</name> <call><name>testFileListEntityProcessor_lastIndexTime</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name>  <block>{
    <expr><name>File</name> <name>tmpdir</name> <operator>=</operator> <call><name><name>File</name><operator>.</operator><name>createTempFile</name></name><argument_list>(<argument><expr><literal type="string">"test"</literal></expr></argument>, <argument><expr><literal type="string">"tmp"</literal></expr></argument>, <argument><expr><call><name>createTempDir</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>File</name> <name>tmpdir</name> <operator>=</operator> <call><name><name>File</name><operator>.</operator><name>createTempFile</name></name><argument_list>(<argument><expr><literal type="string">"test"</literal></expr></argument>, <argument><expr><literal type="string">"tmp"</literal></expr></argument>, <argument><expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>params</name> <init>= <expr><call><name>createMap</name><argument_list>(<argument><expr><literal type="string">"baseDir"</literal></expr></argument>, <argument><expr><call><name><name>tmpdir</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>TestFileListEntityProcessor</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>TestFileListEntityProcessor</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>e87f7640091</name><operator>..</operator><literal type="number">15517d17b60</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>TestFileListEntityProcessor</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>TestFileListEntityProcessor</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">41</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">41</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestFileListEntityProcessor</name> extends <name>AbstractDataImportHandlerTestCa</name>
   @<name>Test</name>
   @<call><name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"unchecked"</literal></expr></argument>)</argument_list></call>
   <specifier>public</specifier> <name>void</name> <call><name>testSimple</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><name>File</name> <name>tmpdir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>tmpdir</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <expr_stmt><expr><call><name>createFile</name><argument_list>(<argument><expr><name>tmpdir</name></expr></argument>, <argument><expr><literal type="string">"a.xml"</literal></expr></argument>, <argument><expr><literal type="string">"a.xml"</literal><operator>.</operator><call><name>getBytes</name><argument_list>(<argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>createFile</name><argument_list>(<argument><expr><name>tmpdir</name></expr></argument>, <argument><expr><literal type="string">"b.xml"</literal></expr></argument>, <argument><expr><literal type="string">"b.xml"</literal><operator>.</operator><call><name>getBytes</name><argument_list>(<argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">65</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">65</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestFileListEntityProcessor</name> extends <name>AbstractDataImportHandlerTestCa</name>
   
   @<name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testBiggerSmallerFiles</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><name>File</name> <name>tmpdir</name> <operator>=</operator> <call><name><name>File</name><operator>.</operator><name>createTempFile</name></name><argument_list>(<argument><expr><literal type="string">"test"</literal></expr></argument>, <argument><expr><literal type="string">"tmp"</literal></expr></argument>, <argument><expr><call><name>createTempDir</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>tmpdir</name> <init>= <expr><call><name><name>File</name><operator>.</operator><name>createTempFile</name></name><argument_list>(<argument><expr><literal type="string">"test"</literal></expr></argument>, <argument><expr><literal type="string">"tmp"</literal></expr></argument>, <argument><expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>delete</name></name><argument_list>(<argument><expr><call><name><name>tmpdir</name><operator>.</operator><name>toPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>tmpdir</name><operator>.</operator><name>mkdir</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">135</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">135</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestFileListEntityProcessor</name> extends <name>AbstractDataImportHandlerTestCa</name>
 
   @<name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testNTOT</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><name>File</name> <name>tmpdir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>tmpdir</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <expr_stmt><expr><call><name>createFile</name><argument_list>(<argument><expr><name>tmpdir</name></expr></argument>, <argument><expr><literal type="string">"a.xml"</literal></expr></argument>, <argument><expr><literal type="string">"a.xml"</literal><operator>.</operator><call><name>getBytes</name><argument_list>(<argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>createFile</name><argument_list>(<argument><expr><name>tmpdir</name></expr></argument>, <argument><expr><literal type="string">"b.xml"</literal></expr></argument>, <argument><expr><literal type="string">"b.xml"</literal><operator>.</operator><call><name>getBytes</name><argument_list>(<argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">169</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">169</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestFileListEntityProcessor</name> extends <name>AbstractDataImportHandlerTestCa</name>
 
   @<name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testRECURSION</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><name>File</name> <name>tmpdir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>tmpdir</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>File</name></type> <name>childdir</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>tmpdir</name> <operator>+</operator> <literal type="string">"/child"</literal></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>childdir</name><operator>.</operator><name>mkdir</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>createFile</name><argument_list>(<argument><expr><name>childdir</name></expr></argument>, <argument><expr><literal type="string">"a.xml"</literal></expr></argument>, <argument><expr><literal type="string">"a.xml"</literal><operator>.</operator><call><name>getBytes</name><argument_list>(<argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>TestFileListWithLineEntityProcessor</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>TestFileListWithLineEntityProcessor</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">00109d16181</literal><operator>..</operator><literal type="number">656bdaf0c68</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>TestFileListWithLineEntityProcessor</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>TestFileListWithLineEntityProcessor</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">32</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">32</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestFileListWithLineEntityProcessor</name> extends <name>AbstractDataImportHandl</name></expr></expr_stmt>
   </block_content>}</block></if></if_stmt>
   
   <function><type><specifier>public</specifier> <name>void</name></type> <name>test</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>File</name></type> <name>tmpdir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><call><name><name>LuceneTestCase</name><operator>.</operator><name>getTestClass</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getSimpleName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>tmpdir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><call><name><name>LuceneTestCase</name><operator>.</operator><name>getTestClass</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getSimpleName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>createFile</name><argument_list>(<argument><expr><name>tmpdir</name></expr></argument>, <argument><expr><literal type="string">"a.txt"</literal></expr></argument>, <argument><expr><literal type="string">"a line one\na line two\na line three"</literal><operator>.</operator><call><name>getBytes</name><argument_list>(<argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>createFile</name><argument_list>(<argument><expr><name>tmpdir</name></expr></argument>, <argument><expr><literal type="string">"b.txt"</literal></expr></argument>, <argument><expr><literal type="string">"b line one\nb line two"</literal><operator>.</operator><call><name>getBytes</name><argument_list>(<argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>createFile</name><argument_list>(<argument><expr><name>tmpdir</name></expr></argument>, <argument><expr><literal type="string">"c.txt"</literal></expr></argument>, <argument><expr><literal type="string">"c line one\nc line two\nc line three\nc line four"</literal><operator>.</operator><call><name>getBytes</name><argument_list>(<argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>TestNonWritablePersistFile</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>TestNonWritablePersistFile</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>ab53346e304</name><operator>..</operator><literal type="number">8d50ba50c49</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>TestNonWritablePersistFile</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>TestNonWritablePersistFile</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">52</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">52</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestNonWritablePersistFile</name> extends <name>AbstractDataImportHandlerTestCas</name>
 
   @<name>BeforeClass</name>
   <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>createTempSolrHomeAndCore</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>tmpSolrHome</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <expr_stmt><expr><name>tmpSolrHome</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>FileUtils</name><operator>.</operator><name>copyDirectory</name></name><argument_list>(<argument><expr><call><name>getFile</name><argument_list>(<argument><expr><literal type="string">"dih/solr"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>tmpSolrHome</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getAbsoluteFile</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>initCore</name><argument_list>(<argument><expr><literal type="string">"dataimport-solrconfig.xml"</literal></expr></argument>, <argument><expr><literal type="string">"dataimport-schema.xml"</literal></expr></argument>, 
              <argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>tmpSolrHome</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>TestSimplePropertiesWriter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>TestSimplePropertiesWriter</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">0521b6162a8</literal><operator>..</operator><name>eb26b492670</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>TestSimplePropertiesWriter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>TestSimplePropertiesWriter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">43</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">43</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSimplePropertiesWriter</name> extends <name>AbstractDIHJdbcTestCase</name> <block>{
   
   @<expr><name>Before</name>
   <specifier>public</specifier> <name>void</name> <call><name>spwBefore</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>fileLocation</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>fileLocation</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><name>fileName</name> <operator>=</operator> <literal type="string">"the.properties"</literal></expr>;</expr_stmt>
   </block_content>}</block></function>
  
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>TestSolrEntityProcessorEndToEnd</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>TestSolrEntityProcessorEndToEnd</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">9f0fd9b7569</literal><operator>..</operator><literal type="number">55483f55201</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>TestSolrEntityProcessorEndToEnd</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>TestSolrEntityProcessorEndToEnd</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">317</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">317</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSolrEntityProcessorEndToEnd</name> extends <name>AbstractDataImportHandlerTe</name></expr></expr_stmt>
     </block_content>}</block></if></if_stmt>
 
     <function><type><specifier>public</specifier> <name>void</name></type> <name>setUp</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
      <expr_stmt><expr><name>homeDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>homeDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><name>initCoreDataDir</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>homeDir</name> <operator>+</operator> <literal type="string">"/collection1"</literal></expr></argument>, <argument><expr><literal type="string">"data"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><name>confDir</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>homeDir</name> <operator>+</operator> <literal type="string">"/collection1"</literal></expr></argument>, <argument><expr><literal type="string">"conf"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">336</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">336</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSolrEntityProcessorEndToEnd</name> extends <name>AbstractDataImportHandlerTe</name></expr></expr_stmt>
     </block_content>}</block></function>
 
     <function><type><specifier>public</specifier> <name>void</name></type> <name>tearDown</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
      <expr_stmt><expr><call><name><name>IOUtils</name><operator>.</operator><name>rm</name></name><argument_list>(<argument><expr><name>homeDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>IOUtils</name><operator>.</operator><name>rm</name></name><argument_list>(<argument><expr><call><name><name>homeDir</name><operator>.</operator><name>toPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></function>
   </block_content>}</block></else></if_stmt>
   
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>TestXPathEntityProcessor</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>TestXPathEntityProcessor</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">778d1913847</literal><operator>..</operator><literal type="number">72da77a60ba</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>TestXPathEntityProcessor</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>TestXPathEntityProcessor</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">43</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">43</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestXPathEntityProcessor</name> extends <name>AbstractDataImportHandlerTestCase</name>
   
   @<name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>withFieldsAndXpath</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>File</name> <name>tmpdir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>tmpdir</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     
     <expr_stmt><expr><call><name>createFile</name><argument_list>(<argument><expr><name>tmpdir</name></expr></argument>, <argument><expr><literal type="string">"x.xsl"</literal></expr></argument>, <argument><expr><call><name><name>xsl</name><operator>.</operator><name>getBytes</name></name><argument_list>(<argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>Map</name></type> <name>entityAttrs</name> <init>= <expr><call><name>createMap</name><argument_list>(<argument><expr><literal type="string">"name"</literal></expr></argument>, <argument><expr><literal type="string">"e"</literal></expr></argument>, <argument><expr><literal type="string">"url"</literal></expr></argument>, <argument><expr><literal type="string">"cd.xml"</literal></expr></argument>,
<argument>@@ <expr><operator>-</operator><literal type="number">332</literal></expr></argument>,<argument><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">332</literal></expr></argument>,<argument><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestXPathEntityProcessor</name> extends <name>AbstractDataImportHandlerTestCase</name>
   
   @<name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>withDefaultSolrAndXsl</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>File</name> <name>tmpdir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr></argument>;</argument_list></call></expr></init></decl></decl_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>tmpdir</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>AbstractDataImportHandlerTestCase</name><operator>.</operator><name>createFile</name></name><argument_list>(<argument><expr><name>tmpdir</name></expr></argument>, <argument><expr><literal type="string">"x.xsl"</literal></expr></argument>, <argument><expr><call><name><name>xsl</name><operator>.</operator><name>getBytes</name></name><argument_list>(<argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></argument>,
             <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>TestZKPropertiesWriter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>TestZKPropertiesWriter</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">91c2d689d5d</literal><operator>..</operator><name>df2e31aafe9</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>TestZKPropertiesWriter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>TestZKPropertiesWriter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">49</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">49</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestZKPropertiesWriter</name> extends <name>AbstractDataImportHandlerTestCase</name> <block>{
 
   @<expr><name>BeforeClass</name>
   <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>dihZk_beforeClass</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>zkDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"zkData"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>zkDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"zkData"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><name>zkServer</name> <operator>=</operator> <operator>new</operator> <call><name>ZkTestServer</name><argument_list>(<argument><expr><name>zkDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>zkServer</name><operator>.</operator><name>run</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>map</name><operator>-</operator><name>reduce</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>MRUnitBase</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>map</name><operator>-</operator><name>reduce</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>MRUnitBase</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>f382f76db0e</name><operator>..</operator><name>b663151772f</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>map</name><operator>-</operator><name>reduce</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>MRUnitBase</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>map</name><operator>-</operator><name>reduce</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>MRUnitBase</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">50</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">50</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>MRUnitBase</name> extends <name>SolrTestCaseJ4</name> <block>{
   
   <expr><specifier>protected</specifier> <name>void</name> <call><name>setupHadoopConfig</name><argument_list>(<argument><expr><name>Configuration</name> <name>config</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
     
    <expr><name>String</name> <name>tempDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>String</name> <name>tempDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
 
     <expr_stmt><expr><call><name><name>FileUtils</name><operator>.</operator><name>copyFile</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>RESOURCES_DIR</name> <operator>+</operator> <literal type="string">"/custom-mimetypes.xml"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>tempDir</name> <operator>+</operator> <literal type="string">"/custom-mimetypes.xml"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>map</name><operator>-</operator><name>reduce</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>MapReduceIndexerToolArgumentParserTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>map</name><operator>-</operator><name>reduce</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>MapReduceIndexerToolArgumentParserTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">6909ce3f68a</literal><operator>..</operator><literal type="number">269282d87d0</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>map</name><operator>-</operator><name>reduce</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>MapReduceIndexerToolArgumentParserTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>map</name><operator>-</operator><name>reduce</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>MapReduceIndexerToolArgumentParserTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">57</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">57</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>MapReduceIndexerToolArgumentParserTest</name> extends <name>SolrTestCaseJ4</name> <block>{
     
   <expr><specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name>Logger</name> <name>LOG</name> <operator>=</operator> <call><name><name>LoggerFactory</name><operator>.</operator><name>getLogger</name></name><argument_list>(<argument><expr><name><name>MapReduceIndexerToolArgumentParserTest</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
   
  <specifier>private</specifier> <name>final</name> <name>File</name> <name>solrHomeDirectory</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>File</name></type> <name>solrHomeDirectory</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
   
   <function><annotation>@<name>BeforeClass</name></annotation>
   <type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>beforeClass</name><parameter_list>()</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>map</name><operator>-</operator><name>reduce</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>MorphlineBasicMiniMRTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>map</name><operator>-</operator><name>reduce</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>MorphlineBasicMiniMRTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>cd90d012fde</name><operator>..</operator><literal type="number">0c8b3a0d374</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>map</name><operator>-</operator><name>reduce</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>MorphlineBasicMiniMRTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>map</name><operator>-</operator><name>reduce</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>MorphlineBasicMiniMRTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">109</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">109</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>MorphlineBasicMiniMRTest</name> extends <name>SolrTestCaseJ4</name> <block>{
 
   @<expr><name>BeforeClass</name>
   <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>setupClass</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>solrHomeDirectory</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>solrHomeDirectory</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assumeTrue</name><argument_list>(
         <argument><expr><literal type="string">"Currently this test can only be run without the lucene test security policy in place"</literal></expr></argument>,
         <argument><expr><call><name><name>System</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><literal type="string">"java.security.manager"</literal></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">123</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">123</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>MorphlineBasicMiniMRTest</name> extends <name>SolrTestCaseJ4</name> <block>{
     
     <expr><name><name>AbstractZkTestCase</name><operator>.</operator><name>SOLRHOME</name></name> <operator>=</operator> <name>solrHomeDirectory</name></expr>;
     <call><name><name>FileUtils</name><operator>.</operator><name>copyDirectory</name></name><argument_list>(<argument><expr><name>MINIMR_CONF_DIR</name></expr></argument>, <argument><expr><name>solrHomeDirectory</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>dataDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>dataDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><name>tempDir</name> <operator>=</operator> <call><name><name>dataDir</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>tempDir</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>mkdirs</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>FileUtils</name><operator>.</operator><name>copyFile</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>RESOURCES_DIR</name> <operator>+</operator> <literal type="string">"/custom-mimetypes.xml"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>tempDir</name> <operator>+</operator> <literal type="string">"/custom-mimetypes.xml"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>map</name><operator>-</operator><name>reduce</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>MorphlineGoLiveMiniMRTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>map</name><operator>-</operator><name>reduce</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>MorphlineGoLiveMiniMRTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">6d8c0863e6a</literal><operator>..</operator><name>b49d94049b6</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>map</name><operator>-</operator><name>reduce</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>MorphlineGoLiveMiniMRTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>map</name><operator>-</operator><name>reduce</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>MorphlineGoLiveMiniMRTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">132</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">132</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>MorphlineGoLiveMiniMRTest</name> extends <name>AbstractFullDistribZkTestBase</name> <block>{
     <expr><call><name><name>System</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"solr.hdfs.blockcache.enabled"</literal></expr></argument>, <argument><expr><call><name><name>Boolean</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><call><name><name>LuceneTestCase</name><operator>.</operator><name>random</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>nextBoolean</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <call><name><name>System</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"solr.hdfs.blockcache.blocksperbank"</literal></expr></argument>, <argument><expr><literal type="string">"2048"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     
    <expr_stmt><expr><name>solrHomeDirectory</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>solrHomeDirectory</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assumeTrue</name><argument_list>(
             <argument><expr><literal type="string">"Currently this test can only be run without the lucene test security policy in place"</literal></expr></argument>,
             <argument><expr><call><name><name>System</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><literal type="string">"java.security.manager"</literal></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">146</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">146</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>MorphlineGoLiveMiniMRTest</name> extends <name>AbstractFullDistribZkTestBase</name> <block>{
     
     <expr><name><name>AbstractZkTestCase</name><operator>.</operator><name>SOLRHOME</name></name> <operator>=</operator> <name>solrHomeDirectory</name></expr>;
     <call><name><name>FileUtils</name><operator>.</operator><name>copyDirectory</name></name><argument_list>(<argument><expr><name>MINIMR_INSTANCE_DIR</name></expr></argument>, <argument><expr><name><name>AbstractZkTestCase</name><operator>.</operator><name>SOLRHOME</name></name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><name>tempDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>tempDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
     <expr_stmt><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>tempDir</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>mkdirs</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>morphlines</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>morphlines</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>AbstractSolrMorphlineTestBase</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>morphlines</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>morphlines</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>AbstractSolrMorphlineTestBase</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">584284d1555</literal><operator>..</operator><name>b5698ae4b96</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>morphlines</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>morphlines</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>AbstractSolrMorphlineTestBase</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>morphlines</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>morphlines</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>AbstractSolrMorphlineTestBase</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">134</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">134</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>AbstractSolrMorphlineTestBase</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><name>testServer</name> <operator>=</operator> <operator>new</operator> <call><name>SolrServerDocumentLoader</name><argument_list>(<argument><expr><name>solrServer</name></expr></argument>, <argument><expr><name>batchSize</name></expr></argument>)</argument_list></call></expr>;
     <call><name>deleteAllDocuments</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     
    <expr_stmt><expr><name>tempDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>tempDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
   
   <annotation>@<name>After</name></annotation>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>morphlines</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>morphlines</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>AbstractSolrMorphlineZkTestBase</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>morphlines</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>morphlines</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>AbstractSolrMorphlineZkTestBase</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>da9ef6324fa</name><operator>..</operator><literal type="number">13e47960744</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>morphlines</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>morphlines</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>AbstractSolrMorphlineZkTestBase</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>morphlines</name><operator>-</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>morphlines</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>AbstractSolrMorphlineZkTestBase</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">71</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">71</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>AbstractSolrMorphlineZkTestBase</name> extends <name>AbstractFullDistri</name>
   <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>setupClass</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><call><name>assumeFalse</name><argument_list>(<argument><expr><literal type="string">"This test fails on UNIX with Turkish default locale (https://issues.apache.org/jira/browse/SOLR-6387)"</literal></expr></argument>,
         <argument><expr><operator>new</operator> <call><name>Locale</name><argument_list>(<argument><expr><literal type="string">"tr"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getLanguage</name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><call><name><name>Locale</name><operator>.</operator><name>getDefault</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getLanguage</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <expr_stmt><expr><name>solrHomeDirectory</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>solrHomeDirectory</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name><name>AbstractZkTestCase</name><operator>.</operator><name>SOLRHOME</name></name> <operator>=</operator> <name>solrHomeDirectory</name></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>FileUtils</name><operator>.</operator><name>copyDirectory</name></name><argument_list>(<argument><expr><name>SOLR_INSTANCE_DIR</name></expr></argument>, <argument><expr><name>solrHomeDirectory</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></while>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>CachingDirectoryFactory</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>CachingDirectoryFactory</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">69984bb7064</literal><operator>..</operator><literal type="number">3f2aecd115e</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>CachingDirectoryFactory</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>CachingDirectoryFactory</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">497</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">497</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>CachingDirectoryFactory</name> extends <name>DirectoryFactory</name> <block>{
     
     <if_stmt><if>if <condition>(<expr><literal type="string">"simple"</literal><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>lockType</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
       <comment type="line">// multiple SimpleFSLockFactory instances should be OK</comment>
      <expr_stmt><expr><call><name><name>dir</name><operator>.</operator><name>setLockFactory</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>SimpleFSLockFactory</name><argument_list>(<argument><expr><name>lockPath</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>dir</name><operator>.</operator><name>setLockFactory</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>SimpleFSLockFactory</name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>lockPath</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toPath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><literal type="string">"native"</literal><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>lockType</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>dir</name><operator>.</operator><name>setLockFactory</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>NativeFSLockFactory</name><argument_list>(<argument><expr><name>lockPath</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>dir</name><operator>.</operator><name>setLockFactory</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>NativeFSLockFactory</name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>lockPath</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toPath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><literal type="string">"single"</literal><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>lockType</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
       <if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><call><name><name>dir</name><operator>.</operator><name>getLockFactory</name></name><argument_list>()</argument_list></call> <operator>instanceof</operator> <name>SingleInstanceLockFactory</name><operator>)</operator></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name><name>dir</name>
           <operator>.</operator><name>setLockFactory</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>SingleInstanceLockFactory</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>MMapDirectoryFactory</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>MMapDirectoryFactory</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">4bc5b599c43</literal><operator>..</operator><literal type="number">0dd2cdb7bb1</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>MMapDirectoryFactory</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>MMapDirectoryFactory</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">28</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">28</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 
 
 <comment type="block" format="javadoc">/**
@@ -36,7 +37,7 @@ import java.io.IOException;
  * Can set the following parameters:
  * &lt;ul&gt;
  *  &lt;li&gt;unmap -- See {@link MMapDirectory#setUseUnmap(boolean)}&lt;/li&gt;
 *  &lt;li&gt;maxChunkSize -- The Max chunk size.  See {@link MMapDirectory#MMapDirectory(File, LockFactory, int)}&lt;/li&gt;
 *  &lt;li&gt;maxChunkSize -- The Max chunk size.  See {@link MMapDirectory#MMapDirectory(Path, LockFactory, int)}&lt;/li&gt;
  * &lt;/ul&gt;
  *
  **/</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">58</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">59</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>MMapDirectoryFactory</name> extends <name>StandardDirectoryFactory</name> <block>{
 
   @<expr><name>Override</name>
   <specifier>protected</specifier> <name>Directory</name> <call><name>create</name><argument_list>(<argument><expr><name>String</name> <name>path</name></expr></argument>, <argument><expr><name>DirContext</name> <name>dirContext</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><name>MMapDirectory</name> <name>mapDirectory</name> <operator>=</operator> <operator>new</operator> <call><name>MMapDirectory</name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>maxChunk</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>MMapDirectory</name> <name>mapDirectory</name> <operator>=</operator> <operator>new</operator> <call><name>MMapDirectory</name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toPath</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>maxChunk</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <try>try <block>{<block_content>
       <expr_stmt><expr><call><name><name>mapDirectory</name><operator>.</operator><name>setUseUnmap</name></name><argument_list>(<argument><expr><name>unmapHack</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>NIOFSDirectoryFactory</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>NIOFSDirectoryFactory</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">303f001552d</literal><operator>..</operator><literal type="number">7c6f5ed523a</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>NIOFSDirectoryFactory</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>NIOFSDirectoryFactory</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">31</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">31</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>NIOFSDirectoryFactory</name> extends <name>StandardDirectoryFactory</name> <block>{
 
   @<expr><name>Override</name>
   <specifier>protected</specifier> <name>Directory</name> <call><name>create</name><argument_list>(<argument><expr><name>String</name> <name>path</name></expr></argument>, <argument><expr><name>DirContext</name> <name>dirContext</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr>
    <return>return <expr><operator>new</operator> <call><name>NIOFSDirectory</name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return></block></expr></expr_stmt>
    <return>return <expr><operator>new</operator> <call><name>NIOFSDirectory</name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toPath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></catch></try>
   
   <annotation>@<name>Override</name></annotation>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>NRTCachingDirectoryFactory</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>NRTCachingDirectoryFactory</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">536e24429dd</literal><operator>..</operator><literal type="number">525c428589d</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>NRTCachingDirectoryFactory</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>NRTCachingDirectoryFactory</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">51</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">51</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>NRTCachingDirectoryFactory</name> extends <name>StandardDirectoryFactory</name> <block>{
 
   @<expr><name>Override</name>
   <specifier>protected</specifier> <name>Directory</name> <call><name>create</name><argument_list>(<argument><expr><name>String</name> <name>path</name></expr></argument>, <argument><expr><name>DirContext</name> <name>dirContext</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr>
    <return>return <expr><operator>new</operator> <call><name>NRTCachingDirectory</name><argument_list>(<argument><expr><call><name><name>FSDirectory</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>maxMergeSizeMB</name></expr></argument>, <argument><expr><name>maxCachedMB</name></expr></argument>)</argument_list></call></expr>;</return></block></expr></expr_stmt>
    <return>return <expr><operator>new</operator> <call><name>NRTCachingDirectory</name><argument_list>(<argument><expr><call><name><name>FSDirectory</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toPath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>maxMergeSizeMB</name></expr></argument>, <argument><expr><name>maxCachedMB</name></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></if></if_stmt>
   
   @<name>Override</name>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SimpleFSDirectoryFactory</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SimpleFSDirectoryFactory</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">7489d7512ff</literal><operator>..</operator><name>d6835b80046</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SimpleFSDirectoryFactory</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SimpleFSDirectoryFactory</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">31</literal><operator>,</operator><literal type="number">7</literal> <operator>+</operator><literal type="number">31</literal><operator>,</operator><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SimpleFSDirectoryFactory</name> extends <name>StandardDirectoryFactory</name> <block>{
 
   @<expr><name>Override</name>
   <specifier>protected</specifier> <name>Directory</name> <call><name>create</name><argument_list>(<argument><expr><name>String</name> <name>path</name></expr></argument>, <argument><expr><name>DirContext</name> <name>dirContext</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr>
    <return>return <expr><operator>new</operator> <call><name>SimpleFSDirectory</name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return></block></block></expr></expr_stmt>
    <return>return <expr><operator>new</operator> <call><name>SimpleFSDirectory</name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toPath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></for>
 
   <annotation>@<name>Override</name></annotation>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrDeletionPolicy</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrDeletionPolicy</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>bbe810ced4e</name><operator>..</operator><literal type="number">303fbd7cc7d</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrDeletionPolicy</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrDeletionPolicy</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">211</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">211</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrDeletionPolicy</name> extends <name>IndexDeletionPolicy</name> implements <name>NamedList</name></expr></expr_stmt>
     <comment type="line">// be the same, regardless of the Directory instance.</comment>
     <if_stmt><if>if <condition>(<expr><name>dir</name> <operator>instanceof</operator> <name>FSDirectory</name></expr>)</condition> <block>{<block_content>
       <decl_stmt><decl><type><name>FSDirectory</name></type> <name>fsd</name> <init>= <expr><operator>(</operator><name>FSDirectory</name><operator>)</operator> <name>dir</name></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>File</name></type> <name>fdir</name> <init>= <expr><call><name><name>fsd</name><operator>.</operator><name>getDirectory</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>File</name></type> <name>fdir</name> <init>= <expr><call><name><name>fsd</name><operator>.</operator><name>getDirectory</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>sb</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><call><name><name>fdir</name><operator>.</operator><name>getPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></if> <else>else <block>{<block_content>
       <expr_stmt><expr><call><name><name>sb</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>StandardDirectoryFactory</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>StandardDirectoryFactory</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">85bc9b0aeb8</literal><operator>..</operator><literal type="number">6a13516e038</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>StandardDirectoryFactory</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>StandardDirectoryFactory</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">39</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">39</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>StandardDirectoryFactory</name> extends <name>CachingDirectoryFactory</name> <block>{
 
   @<expr><name>Override</name>
   <specifier>protected</specifier> <name>Directory</name> <call><name>create</name><argument_list>(<argument><expr><name>String</name> <name>path</name></expr></argument>, <argument><expr><name>DirContext</name> <name>dirContext</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr>
    <return>return <expr><call><name><name>FSDirectory</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return></block></expr></expr_stmt>
    <return>return <expr><call><name><name>FSDirectory</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toPath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></else></if_stmt>
   
   <annotation>@<name>Override</name></annotation>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">96</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">96</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>StandardDirectoryFactory</name> extends <name>CachingDirectoryFactory</name> <block>{
     <expr><name>Directory</name> <name>baseToDir</name> <operator>=</operator> <call><name>getBaseDir</name><argument_list>(<argument><expr><name>toDir</name></expr></argument>)</argument_list></call></expr>;</block></expr></expr_stmt>
     
     <if_stmt><if>if <condition>(<expr><name>baseFromDir</name> <operator>instanceof</operator> <name>FSDirectory</name> <operator>&amp;&amp;</operator> <name>baseToDir</name> <operator>instanceof</operator> <name>FSDirectory</name></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>File</name></type> <name>dir1</name> <init>= <expr><operator>(</operator><operator>(</operator><name>FSDirectory</name><operator>)</operator> <name>baseFromDir</name><operator>)</operator><operator>.</operator><call><name>getDirectory</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>File</name></type> <name>dir2</name> <init>= <expr><operator>(</operator><operator>(</operator><name>FSDirectory</name><operator>)</operator> <name>baseToDir</name><operator>)</operator><operator>.</operator><call><name>getDirectory</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>File</name></type> <name>dir1</name> <init>= <expr><operator>(</operator><operator>(</operator><name>FSDirectory</name><operator>)</operator> <name>baseFromDir</name><operator>)</operator><operator>.</operator><call><name>getDirectory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>File</name></type> <name>dir2</name> <init>= <expr><operator>(</operator><operator>(</operator><name>FSDirectory</name><operator>)</operator> <name>baseToDir</name><operator>)</operator><operator>.</operator><call><name>getDirectory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>File</name></type> <name>indexFileInTmpDir</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>dir1</name></expr></argument>, <argument><expr><name>fileName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>File</name></type> <name>indexFileInIndex</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>dir2</name></expr></argument>, <argument><expr><name>fileName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>boolean</name></type> <name>success</name> <init>= <expr><call><name><name>indexFileInTmpDir</name><operator>.</operator><name>renameTo</name></name><argument_list>(<argument><expr><name>indexFileInIndex</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>SnapPuller</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>SnapPuller</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>fd92d38284c</name><operator>..</operator><name>ddc1269f1ac</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>SnapPuller</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>SnapPuller</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">1040</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">1040</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SnapPuller</name> <block>{
   
   <expr><specifier>static</specifier> <name>boolean</name> <call><name>delTree</name><argument_list>(<argument><expr><name>File</name> <name>dir</name></expr></argument>)</argument_list></call> <block>{
     <try>try <block>{<block_content>
      <expr_stmt><expr><call><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>IOUtils</name><operator>.</operator><name>rm</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>IOUtils</name><operator>.</operator><name>rm</name></name><argument_list>(<argument><expr><call><name><name>dir</name><operator>.</operator><name>toPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <return>return <expr><literal type="boolean">true</literal></expr>;</return>
     <expr_stmt/></block_content></block></try></block></expr>}</block></expr></expr_stmt> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
       <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"Unable to delete directory : "</literal> <operator>+</operator> <name>dir</name></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>SnapShooter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>SnapShooter</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">913f339ef87</literal><operator>..</operator><literal type="number">857f3b505a7</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>SnapShooter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>SnapShooter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">67</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">67</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>SnapShooter</name> <block>{
       <expr><name>File</name> <name>dir</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>snapDir</name></expr></argument>)</argument_list></call></expr>;</block></expr></expr_stmt>
       <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>dir</name><operator>.</operator><name>exists</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>  <expr_stmt><expr><call><name><name>dir</name><operator>.</operator><name>mkdirs</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
     </block_content>}</block></catch>
    <expr_stmt><expr><name>lockFactory</name> <operator>=</operator> <operator>new</operator> <call><name>SimpleFSLockFactory</name><argument_list>(<argument><expr><name>snapDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <try>try <block>{<block_content>
      <expr_stmt><expr><name>lockFactory</name> <operator>=</operator> <operator>new</operator> <call><name>SimpleFSLockFactory</name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>snapDir</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toPath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></catch></try>
     <expr_stmt><expr><name><name>this</name><operator>.</operator><name>snapshotName</name></name> <operator>=</operator> <name>snapshotName</name></expr>;</expr_stmt>
 
     <if_stmt><if>if<condition>(<expr><name>snapshotName</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">250</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">254</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SnapShooter</name> <block>{
         <expr><call><name><name>destDir</name><operator>.</operator><name>mkdirs</name></name><argument_list>()</argument_list></call></expr>;
       }</block></expr></expr_stmt>
       
      <decl_stmt><decl><type><name>FSDirectory</name></type> <name>dir</name> <init>= <expr><call><name><name>FSDirectory</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><name>destDir</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>FSDirectory</name></type> <name>dir</name> <init>= <expr><call><name><name>FSDirectory</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><call><name><name>destDir</name><operator>.</operator><name>toPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <try>try <block>{<block_content>
         <for>for <control>(<init><decl><type><name>String</name></type> <name>indexFile</name> <range>: <expr><name>files</name></expr></range></decl></init>)</control> <block>{<block_content>
           <expr_stmt><expr><call><name>copyFile</name><argument_list>(<argument><expr><name>sourceDir</name></expr></argument>, <argument><expr><name>indexFile</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>destDir</name></expr></argument>, <argument><expr><name>indexFile</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>spelling</name><operator>/</operator><name><name>AbstractLuceneSpellChecker</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>spelling</name><operator>/</operator><name><name>AbstractLuceneSpellChecker</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">41ba2ecbabd</literal><operator>..</operator><literal type="number">248dc703094</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>spelling</name><operator>/</operator><name><name>AbstractLuceneSpellChecker</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>spelling</name><operator>/</operator><name><name>AbstractLuceneSpellChecker</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">228</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">228</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>AbstractLuceneSpellChecker</name> extends <name>SolrSpellChecker</name> <block>{
    <expr><operator>*</operator><operator>/</operator>
   <specifier>protected</specifier> <name>void</name> <call><name>initIndex</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr>
     <if_stmt><if>if <condition>(<expr><name>indexDir</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>index</name> <operator>=</operator> <call><name><name>FSDirectory</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>indexDir</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>index</name> <operator>=</operator> <call><name><name>FSDirectory</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>indexDir</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toPath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></if> <else>else <block>{<block_content>
       <expr_stmt><expr><name>index</name> <operator>=</operator> <operator>new</operator> <call><name>RAMDirectory</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></else></if_stmt>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>spelling</name><operator>/</operator><name><name>IndexBasedSpellChecker</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>spelling</name><operator>/</operator><name><name>IndexBasedSpellChecker</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">95c9d00ffac</literal><operator>..</operator><literal type="number">5726166a37d</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>spelling</name><operator>/</operator><name><name>IndexBasedSpellChecker</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>spelling</name><operator>/</operator><name><name>IndexBasedSpellChecker</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">64</literal><operator>,</operator><literal type="number">7</literal> <operator>+</operator><literal type="number">64</literal><operator>,</operator><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>IndexBasedSpellChecker</name> extends <name>AbstractLuceneSpellChecker</name> <block>{
   <expr><specifier>private</specifier> <name>void</name> <call><name>initSourceReader</name><argument_list>()</argument_list></call> <block>{
     <if_stmt><if>if <condition>(<expr><name>sourceLocation</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
       <try>try <block>{<block_content>
        <decl_stmt><decl><type><name>FSDirectory</name></type> <name>luceneIndexDir</name> <init>= <expr><call><name><name>FSDirectory</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>sourceLocation</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>FSDirectory</name></type> <name>luceneIndexDir</name> <init>= <expr><call><name><name>FSDirectory</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>sourceLocation</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toPath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <expr_stmt><expr><name><name>this</name><operator>.</operator><name>reader</name></name> <operator>=</operator> <call><name><name>DirectoryReader</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><name>luceneIndexDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt/></block_content></block></try></block_content></block></if></if_stmt></block></expr>}</block></block></expr></expr_stmt> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>spelling</name><operator>/</operator><name>suggest</name><operator>/</operator><name>fst</name><operator>/</operator><name><name>AnalyzingInfixLookupFactory</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>spelling</name><operator>/</operator><name>suggest</name><operator>/</operator><name>fst</name><operator>/</operator><name><name>AnalyzingInfixLookupFactory</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">2327d785960</literal><operator>..</operator><literal type="number">5e30fb1cfba</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>spelling</name><operator>/</operator><name>suggest</name><operator>/</operator><name>fst</name><operator>/</operator><name><name>AnalyzingInfixLookupFactory</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>spelling</name><operator>/</operator><name>suggest</name><operator>/</operator><name>fst</name><operator>/</operator><name><name>AnalyzingInfixLookupFactory</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">93</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">93</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>AnalyzingInfixLookupFactory</name> extends <name>LookupFactory</name> <block>{
 
     <try>try <block>{<block_content>
       <return>return <expr><operator>new</operator> <call><name>AnalyzingInfixSuggester</name><argument_list>(<argument><expr><call><name><name>core</name><operator>.</operator><name>getSolrConfig</name></name><argument_list>()</argument_list></call><operator>.</operator><name>luceneMatchVersion</name></expr></argument>, 
                                         <argument><expr><call><name><name>FSDirectory</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>indexPath</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>indexAnalyzer</name></expr></argument>,
                                         <argument><expr><call><name><name>FSDirectory</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>indexPath</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toPath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>indexAnalyzer</name></expr></argument>,
                                          <argument><expr><name>queryAnalyzer</name></expr></argument>, <argument><expr><name>minPrefixChars</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
       <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>()</argument_list></call></expr>;</throw>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>spelling</name><operator>/</operator><name>suggest</name><operator>/</operator><name>fst</name><operator>/</operator><name><name>BlendedInfixLookupFactory</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>spelling</name><operator>/</operator><name>suggest</name><operator>/</operator><name>fst</name><operator>/</operator><name><name>BlendedInfixLookupFactory</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">82daeab31d7</literal><operator>..</operator><literal type="number">48bdf983b27</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>spelling</name><operator>/</operator><name>suggest</name><operator>/</operator><name>fst</name><operator>/</operator><name><name>BlendedInfixLookupFactory</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>spelling</name><operator>/</operator><name>suggest</name><operator>/</operator><name>fst</name><operator>/</operator><name><name>BlendedInfixLookupFactory</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">98</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">98</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>BlendedInfixLookupFactory</name> extends <name>AnalyzingInfixLookupFactory</name> <block>{
     
     <try>try <block>{<block_content>
       <return>return <expr><operator>new</operator> <call><name>BlendedInfixSuggester</name><argument_list>(<argument><expr><call><name><name>core</name><operator>.</operator><name>getSolrConfig</name></name><argument_list>()</argument_list></call><operator>.</operator><name>luceneMatchVersion</name></expr></argument>, 
                                       <argument><expr><call><name><name>FSDirectory</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>indexPath</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
                                       <argument><expr><call><name><name>FSDirectory</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>indexPath</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toPath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
                                        <argument><expr><name>indexAnalyzer</name></expr></argument>, <argument><expr><name>queryAnalyzer</name></expr></argument>, <argument><expr><name>minPrefixChars</name></expr></argument>,
                                        <argument><expr><name>blenderType</name></expr></argument>, <argument><expr><name>numFactor</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>store</name><operator>/</operator><name>blockcache</name><operator>/</operator><name><name>BlockDirectory</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>store</name><operator>/</operator><name>blockcache</name><operator>/</operator><name><name>BlockDirectory</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">5c7e5142c35</literal><operator>..</operator><literal type="number">2aef29829cf</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>store</name><operator>/</operator><name>blockcache</name><operator>/</operator><name><name>BlockDirectory</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>store</name><operator>/</operator><name>blockcache</name><operator>/</operator><name><name>BlockDirectory</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">252</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">252</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>BlockDirectory</name> extends <name>Directory</name> <block>{
   
   <expr><specifier>private</specifier> <name>long</name> <call><name>getFileModified</name><argument_list>(<argument><expr><name>String</name> <name>name</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr>
     <if_stmt><if>if <condition>(<expr><name>directory</name> <operator>instanceof</operator> <name>FSDirectory</name></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>File</name></type> <name>directory</name> <init>= <expr><operator>(</operator><operator>(</operator><name>FSDirectory</name><operator>)</operator> <name><name>this</name><operator>.</operator><name>directory</name></name><operator>)</operator><operator>.</operator><call><name>getDirectory</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>File</name></type> <name>directory</name> <init>= <expr><operator>(</operator><operator>(</operator><name>FSDirectory</name><operator>)</operator> <name><name>this</name><operator>.</operator><name>directory</name></name><operator>)</operator><operator>.</operator><call><name>getDirectory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>File</name></type> <name>file</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>directory</name></expr></argument>, <argument><expr><name>name</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>file</name><operator>.</operator><name>exists</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
         <throw>throw <expr><operator>new</operator> <call><name>FileNotFoundException</name><argument_list>(<argument><expr><literal type="string">"File ["</literal> <operator>+</operator> <name>name</name> <operator>+</operator> <literal type="string">"] not found"</literal></expr></argument>)</argument_list></call></expr>;</throw>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>AnalysisAfterCoreReloadTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>AnalysisAfterCoreReloadTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>d545f05aba3</name><operator>..</operator><literal type="number">81b5b80838f</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>AnalysisAfterCoreReloadTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>AnalysisAfterCoreReloadTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">42</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">42</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>AnalysisAfterCoreReloadTest</name> extends <name>SolrTestCaseJ4</name> <block>{
   
   @<expr><name>BeforeClass</name>
   <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>beforeClass</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>tmpSolrHome</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>tmpSolrHome</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>FileUtils</name><operator>.</operator><name>copyDirectory</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>TEST_HOME</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>tmpSolrHome</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getAbsoluteFile</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>initCore</name><argument_list>(<argument><expr><literal type="string">"solrconfig.xml"</literal></expr></argument>, <argument><expr><literal type="string">"schema.xml"</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>tmpSolrHome</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>SolrTestCaseJ4Test</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>SolrTestCaseJ4Test</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">15532073d0a</literal><operator>..</operator><literal type="number">74aeee96a66</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>SolrTestCaseJ4Test</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>SolrTestCaseJ4Test</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">33</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">33</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrTestCaseJ4Test</name> extends <name>SolrTestCaseJ4</name> <block>{
   <expr><specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>beforeClass</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <comment type="line">// Create a temporary directory that holds a core NOT named "collection1". Use the smallest configuration sets</comment>
     <comment type="line">// we can so we don't copy that much junk around.</comment>
    <expr><name>tmpSolrHome</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>tmpSolrHome</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><name>File</name></type> <name>subHome</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>tmpSolrHome</name></expr></argument>, <argument><expr><literal type="string">"core0"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"conf"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"Failed to make subdirectory "</literal></expr></argument>, <argument><expr><call><name><name>subHome</name><operator>.</operator><name>mkdirs</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>TestSolrCoreProperties</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>TestSolrCoreProperties</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">17de9263d9b</literal><operator>..</operator><name>b6000c7dce9</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>TestSolrCoreProperties</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>TestSolrCoreProperties</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">41</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">41</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSolrCoreProperties</name> extends <name>SolrJettyTestBase</name> <block>{
 
   @<expr><name>BeforeClass</name>
   <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>beforeTest</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>File</name> <name>homeDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>File</name> <name>homeDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><name>File</name></type> <name>collDir</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>homeDir</name></expr></argument>, <argument><expr><literal type="string">"collection1"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>File</name></type> <name>dataDir</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>collDir</name></expr></argument>, <argument><expr><literal type="string">"data"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>TestTolerantSearch</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>TestTolerantSearch</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">81f65ad55da</literal><operator>..</operator><name>c4d81f0e2e2</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>TestTolerantSearch</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>TestTolerantSearch</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">47</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">47</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestTolerantSearch</name> extends <name>SolrJettyTestBase</name> <block>{
   <expr><specifier>private</specifier> <specifier>static</specifier> <name>File</name> <name>solrHome</name></expr>;
   
   <specifier>private</specifier> <specifier>static</specifier> <name>File</name> <call><name>createSolrHome</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>File</name> <name>workDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>workDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>setupJettyTestHome</name><argument_list>(<argument><expr><name>workDir</name></expr></argument>, <argument><expr><literal type="string">"collection1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>FileUtils</name><operator>.</operator><name>copyFile</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name><name>SolrTestCaseJ4</name><operator>.</operator><name>TEST_HOME</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"/collection1/conf/solrconfig-tolerant-search.xml"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>workDir</name></expr></argument>, <argument><expr><literal type="string">"/collection1/conf/solrconfig.xml"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>FileUtils</name><operator>.</operator><name>copyDirectory</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>workDir</name></expr></argument>, <argument><expr><literal type="string">"collection1"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>workDir</name></expr></argument>, <argument><expr><literal type="string">"collection2"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>BasicDistributedZk2Test</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>BasicDistributedZk2Test</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">651cbbed6b5</literal><operator>..</operator><name>c8c298a41b2</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>BasicDistributedZk2Test</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>BasicDistributedZk2Test</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">169</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">169</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>BasicDistributedZk2Test</name> extends <name>AbstractFullDistribZkTestBase</name> <block>{
       <expr><call><name><name>createCmd</name><operator>.</operator><name>setCoreName</name></name><argument_list>(<argument><expr><name>ONE_NODE_COLLECTION</name> <operator>+</operator> <literal type="string">"core"</literal></expr></argument>)</argument_list></call></expr>;
       <call><name><name>createCmd</name><operator>.</operator><name>setCollection</name></name><argument_list>(<argument><expr><name>ONE_NODE_COLLECTION</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>createCmd</name><operator>.</operator><name>setNumShards</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>createCmd</name><operator>.</operator><name>setDataDir</name></name><argument_list>(<argument><expr><call><name>getDataDir</name><argument_list>(<argument><expr><call><name>createTempDir</name><argument_list>(<argument><expr><name>ONE_NODE_COLLECTION</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>createCmd</name><operator>.</operator><name>setDataDir</name></name><argument_list>(<argument><expr><call><name>getDataDir</name><argument_list>(<argument><expr><call><name>createTempDir</name><argument_list>(<argument><expr><name>ONE_NODE_COLLECTION</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>server</name><operator>.</operator><name>request</name></name><argument_list>(<argument><expr><name>createCmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>server</name><operator>.</operator><name>shutdown</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></if></if_stmt></block></expr></expr_stmt> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">415</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">415</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>BasicDistributedZk2Test</name> extends <name>AbstractFullDistribZkTestBase</name> <block>{
     <expr><name>ModifiableSolrParams</name> <name>params</name> <operator>=</operator> <operator>new</operator> <call><name>ModifiableSolrParams</name><argument_list>()</argument_list></call></expr>;
     <call><name><name>params</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"qt"</literal></expr></argument>, <argument><expr><literal type="string">"/replication"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>params</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"command"</literal></expr></argument>, <argument><expr><literal type="string">"backup"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>location</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>location</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>params</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"location"</literal></expr></argument>, <argument><expr><call><name><name>location</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><name>QueryRequest</name></type> <name>request</name> <init>= <expr><operator>new</operator> <call><name>QueryRequest</name><argument_list>(<argument><expr><name>params</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">488</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">488</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>BasicDistributedZk2Test</name> extends <name>AbstractFullDistribZkTestBase</name> <block>{
     <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>Arrays</name><operator>.</operator><name>asList</name></name><argument_list>(<argument><expr><name>files</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name><name>files</name><operator>.</operator><name>length</name></name></expr></argument>)</argument_list></call></expr>;
     <name>File</name> <name>snapDir</name> <operator>=</operator> <name><name>files</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></block></expr>;</expr_stmt>
     
    <expr_stmt><expr><call><name><name>IOUtils</name><operator>.</operator><name>rm</name></name><argument_list>(<argument><expr><name>snapDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>IOUtils</name><operator>.</operator><name>rm</name></name><argument_list>(<argument><expr><call><name><name>snapDir</name><operator>.</operator><name>toPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></catch>
   
   <function><type><specifier>private</specifier> <name>void</name></type> <name>addNewReplica</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>BasicDistributedZkTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>BasicDistributedZkTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>ca0bea6de11</name><operator>..</operator><literal type="number">9f91893c427</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>BasicDistributedZkTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>BasicDistributedZkTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">375</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">375</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>BasicDistributedZkTest</name> extends <name>AbstractFullDistribZkTestBase</name> <block>{
     <expr><name>Create</name> <name>createCmd</name> <operator>=</operator> <operator>new</operator> <call><name>Create</name><argument_list>()</argument_list></call></expr>;
     <call><name><name>createCmd</name><operator>.</operator><name>setCoreName</name></name><argument_list>(<argument><expr><literal type="string">"core1"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>createCmd</name><operator>.</operator><name>setCollection</name></name><argument_list>(<argument><expr><literal type="string">"the_core_collection"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>coredataDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>coredataDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>createCmd</name><operator>.</operator><name>setDataDir</name></name><argument_list>(<argument><expr><name>coredataDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>createCmd</name><operator>.</operator><name>setNumShards</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>createCmd</name><operator>.</operator><name>setSchemaName</name></name><argument_list>(<argument><expr><literal type="string">"nonexistent_schema.xml"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">555</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">555</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>BasicDistributedZkTest</name> extends <name>AbstractFullDistribZkTestBase</name> <block>{
 
           <expr><call><name><name>createCmd</name><operator>.</operator><name>setNumShards</name></name><argument_list>(<argument><expr><name>numShards</name></expr></argument>)</argument_list></call></expr>;</block></expr></expr_stmt>
           <try>try <block>{<block_content>
            <decl_stmt><decl><type><name>String</name></type> <name>core3dataDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><name>collection</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>String</name></type> <name>core3dataDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><name>collection</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
             <expr_stmt><expr><call><name><name>createCmd</name><operator>.</operator><name>setDataDir</name></name><argument_list>(<argument><expr><call><name>getDataDir</name><argument_list>(<argument><expr><name>core3dataDir</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
             <expr_stmt><expr><call><name><name>server</name><operator>.</operator><name>request</name></name><argument_list>(<argument><expr><name>createCmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">967</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">967</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>BasicDistributedZkTest</name> extends <name>AbstractFullDistribZkTestBase</name> <block>{
           <if_stmt><if>if <condition>(<expr><name>shardId</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
             <expr_stmt><expr><call><name><name>createCmd</name><operator>.</operator><name>setNumShards</name></name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           </block_content>}</block></if></if_stmt>
          <call><name><name>createCmd</name><operator>.</operator><name>setDataDir</name></name><argument_list>(<argument><expr><call><name>getDataDir</name><argument_list>(<argument><expr><call><name>createTempDir</name><argument_list>(<argument><expr><name>collection</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>createCmd</name><operator>.</operator><name>setDataDir</name></name><argument_list>(<argument><expr><call><name>getDataDir</name><argument_list>(<argument><expr><call><name>createTempDir</name><argument_list>(<argument><expr><name>collection</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           <if_stmt><if>if <condition>(<expr><name>shardId</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
             <expr_stmt><expr><call><name><name>createCmd</name><operator>.</operator><name>setShardId</name></name><argument_list>(<argument><expr><name>shardId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           </block_content>}</block></if></if_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1094</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">1094</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>BasicDistributedZkTest</name> extends <name>AbstractFullDistribZkTestBase</name> <block>{
             <expr><call><name><name>server</name><operator>.</operator><name>setSoTimeout</name></name><argument_list>(<argument><expr><literal type="number">60000</literal></expr></argument>)</argument_list></call></expr>;
             <name>Create</name> <name>createCmd</name> <operator>=</operator> <operator>new</operator> <call><name>Create</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
             <expr_stmt><expr><call><name><name>createCmd</name><operator>.</operator><name>setCoreName</name></name><argument_list>(<argument><expr><name>collection</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>createCmd</name><operator>.</operator><name>setDataDir</name></name><argument_list>(<argument><expr><call><name>getDataDir</name><argument_list>(<argument><expr><call><name>createTempDir</name><argument_list>(<argument><expr><name>collection</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>createCmd</name><operator>.</operator><name>setDataDir</name></name><argument_list>(<argument><expr><call><name>getDataDir</name><argument_list>(<argument><expr><call><name>createTempDir</name><argument_list>(<argument><expr><name>collection</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <expr_stmt><expr><call><name><name>server</name><operator>.</operator><name>request</name></name><argument_list>(<argument><expr><name>createCmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
             <expr_stmt><expr><call><name><name>e</name><operator>.</operator><name>printStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ClusterStateUpdateTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ClusterStateUpdateTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">6bf3cd36a88</literal><operator>..</operator><name>c51ba6881a5</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ClusterStateUpdateTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ClusterStateUpdateTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">71</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">71</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ClusterStateUpdateTest</name> extends <name>SolrTestCaseJ4</name>  <block>{
 
   @<expr><name>BeforeClass</name>
   <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>beforeClass</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><name>solrHomeDirectory</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>solrHomeDirectory</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"solrcloud.skip.autorecovery"</literal></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"genericCoreNodeNames"</literal></expr></argument>, <argument><expr><literal type="string">"false"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>copyMinFullSetup</name><argument_list>(<argument><expr><name>solrHomeDirectory</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">89</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">89</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ClusterStateUpdateTest</name> extends <name>SolrTestCaseJ4</name>  <block>{
   <expr><specifier>public</specifier> <name>void</name> <call><name>setUp</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><call><name><name>super</name><operator>.</operator><name>setUp</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
     <call><name><name>System</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"zkClientTimeout"</literal></expr></argument>, <argument><expr><literal type="string">"3000"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>tmpDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"zkData"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>tmpDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"zkData"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><name>zkDir</name> <operator>=</operator> <call><name><name>tmpDir</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>zkServer</name> <operator>=</operator> <operator>new</operator> <call><name>ZkTestServer</name><argument_list>(<argument><expr><name>zkDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>zkServer</name><operator>.</operator><name>run</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>CollectionsAPIDistributedZkTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>CollectionsAPIDistributedZkTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>d7d6a20ac65</name><operator>..</operator><literal type="number">4d5be3c4ac8</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>CollectionsAPIDistributedZkTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>CollectionsAPIDistributedZkTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">384</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">384</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>CollectionsAPIDistributedZkTest</name> extends <name>AbstractFullDistribZkTestBa</name>
     <name>Create</name> <name>createCmd</name> <operator>=</operator> <operator>new</operator> <call><name>Create</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>createCmd</name><operator>.</operator><name>setCoreName</name></name><argument_list>(<argument><expr><literal type="string">"halfdeletedcollection_shard1_replica1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>createCmd</name><operator>.</operator><name>setCollection</name></name><argument_list>(<argument><expr><name>collectionName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>dataDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>dataDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>createCmd</name><operator>.</operator><name>setDataDir</name></name><argument_list>(<argument><expr><name>dataDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>createCmd</name><operator>.</operator><name>setNumShards</name></name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <if_stmt><if>if <condition>(<expr><name>secondConfigSet</name></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">574</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">574</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>CollectionsAPIDistributedZkTest</name> extends <name>AbstractFullDistribZkTestBa</name>
     <name>Create</name> <name>createCmd</name> <operator>=</operator> <operator>new</operator> <call><name>Create</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>createCmd</name><operator>.</operator><name>setCoreName</name></name><argument_list>(<argument><expr><literal type="string">"halfcollection_shard1_replica1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>createCmd</name><operator>.</operator><name>setCollection</name></name><argument_list>(<argument><expr><literal type="string">"halfcollectionblocker"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>dataDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>dataDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>createCmd</name><operator>.</operator><name>setDataDir</name></name><argument_list>(<argument><expr><name>dataDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>createCmd</name><operator>.</operator><name>setNumShards</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <if_stmt><if>if <condition>(<expr><name>secondConfigSet</name></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">585</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">585</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>CollectionsAPIDistributedZkTest</name> extends <name>AbstractFullDistribZkTestBa</name>
     <name>createCmd</name> <operator>=</operator> <operator>new</operator> <call><name>Create</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>createCmd</name><operator>.</operator><name>setCoreName</name></name><argument_list>(<argument><expr><literal type="string">"halfcollection_shard1_replica1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>createCmd</name><operator>.</operator><name>setCollection</name></name><argument_list>(<argument><expr><literal type="string">"halfcollectionblocker2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>dataDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>dataDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>createCmd</name><operator>.</operator><name>setDataDir</name></name><argument_list>(<argument><expr><name>dataDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>createCmd</name><operator>.</operator><name>setNumShards</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <if_stmt><if>if <condition>(<expr><name>secondConfigSet</name></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">634</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">634</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>CollectionsAPIDistributedZkTest</name> extends <name>AbstractFullDistribZkTestBa</name>
     <name>Create</name> <name>createCmd</name> <operator>=</operator> <operator>new</operator> <call><name>Create</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>createCmd</name><operator>.</operator><name>setCoreName</name></name><argument_list>(<argument><expr><literal type="string">"corewithnocollection"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>createCmd</name><operator>.</operator><name>setCollection</name></name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>dataDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>dataDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>createCmd</name><operator>.</operator><name>setDataDir</name></name><argument_list>(<argument><expr><name>dataDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>createCmd</name><operator>.</operator><name>setNumShards</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <if_stmt><if>if <condition>(<expr><name>secondConfigSet</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ConnectionManagerTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ConnectionManagerTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">5bee2164e54</literal><operator>..</operator><literal type="number">0c568a9f42e</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ConnectionManagerTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ConnectionManagerTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">35</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">35</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ConnectionManagerTest</name> extends <name>SolrTestCaseJ4</name> <block>{
   <expr><specifier>public</specifier> <name>void</name> <call><name>testConnectionManager</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     
     <comment type="line">// setup a SolrZkClient to do some getBaseUrlForNodeName testing</comment>
    <expr><name>String</name> <name>zkDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"zkData"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>String</name> <name>zkDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"zkData"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     
     <decl_stmt><decl><type><name>ZkTestServer</name></type> <name>server</name> <init>= <expr><operator>new</operator> <call><name>ZkTestServer</name><argument_list>(<argument><expr><name>zkDir</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <try>try <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">68</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">68</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ConnectionManagerTest</name> extends <name>SolrTestCaseJ4</name> <block>{
   <expr><specifier>public</specifier> <name>void</name> <call><name>testLikelyExpired</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
 
     <comment type="line">// setup a SolrZkClient to do some getBaseUrlForNodeName testing</comment>
    <expr><name>String</name> <name>zkDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"zkData"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>String</name> <name>zkDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"zkData"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><name>ZkTestServer</name></type> <name>server</name> <init>= <expr><operator>new</operator> <call><name>ZkTestServer</name><argument_list>(<argument><expr><name>zkDir</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <try>try <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>LeaderElectionIntegrationTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>LeaderElectionIntegrationTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">1646e87e343</literal><operator>..</operator><literal type="number">55a02a5b2e0</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>LeaderElectionIntegrationTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>LeaderElectionIntegrationTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">79</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">79</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>LeaderElectionIntegrationTest</name> extends <name>SolrTestCaseJ4</name> <block>{
     
     <expr><call><name><name>System</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"zkClientTimeout"</literal></expr></argument>, <argument><expr><literal type="string">"8000"</literal></expr></argument>)</argument_list></call></expr>;
     
    <name>zkDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"zkData"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><name>zkDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"zkData"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>zkServer</name> <operator>=</operator> <operator>new</operator> <call><name>ZkTestServer</name><argument_list>(<argument><expr><name>zkDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>zkServer</name><operator>.</operator><name>run</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"zkHost"</literal></expr></argument>, <argument><expr><call><name><name>zkServer</name><operator>.</operator><name>getZkAddress</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">132</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">132</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>LeaderElectionIntegrationTest</name> extends <name>SolrTestCaseJ4</name> <block>{
      
   <expr><specifier>private</specifier> <name>void</name> <call><name>setupContainer</name><argument_list>(<argument><expr><name>int</name> <name>port</name></expr></argument>, <argument><expr><name>String</name> <name>shard</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name></expr></argument>,
       <argument><expr><name>ParserConfigurationException</name></expr></argument>, <argument><expr><name>SAXException</name> <block>{
    <expr><name>File</name> <name>data</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>File</name> <name>data</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     
     <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"hostPort"</literal></expr></argument>, <argument><expr><call><name><name>Integer</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><name>port</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"shard"</literal></expr></argument>, <argument><expr><name>shard</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>LeaderElectionTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>LeaderElectionTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>c43d9fb405b</name><operator>..</operator><name>b97af3d8586</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>LeaderElectionTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>LeaderElectionTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">67</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">67</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>LeaderElectionTest</name> extends <name>SolrTestCaseJ4</name> <block>{
   @<expr><name>Override</name>
   <specifier>public</specifier> <name>void</name> <call><name>setUp</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><call><name><name>super</name><operator>.</operator><name>setUp</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>String</name> <name>zkDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"zkData"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt><empty_stmt>;</empty_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>zkDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"zkData"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt><empty_stmt>;</empty_stmt>
     
     <expr_stmt><expr><name>server</name> <operator>=</operator> <operator>new</operator> <call><name>ZkTestServer</name><argument_list>(<argument><expr><name>zkDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>server</name><operator>.</operator><name>setTheTickTime</name></name><argument_list>(<argument><expr><literal type="number">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>OverseerTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>OverseerTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>dbc1013b9d3</name><operator>..</operator><literal type="number">50730a93d65</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>OverseerTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>OverseerTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">203</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">203</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>OverseerTest</name> extends <name>SolrTestCaseJ4</name> <block>{
 
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testShardAssignment</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>String</name> <name>zkDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"zkData"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>String</name> <name>zkDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"zkData"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><name>ZkTestServer</name></type> <name>server</name> <init>= <expr><operator>new</operator> <call><name>ZkTestServer</name><argument_list>(<argument><expr><name>zkDir</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">258</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">258</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>OverseerTest</name> extends <name>SolrTestCaseJ4</name> <block>{
 
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testBadQueueItem</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>String</name> <name>zkDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"zkData"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>String</name> <name>zkDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"zkData"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><name>ZkTestServer</name></type> <name>server</name> <init>= <expr><operator>new</operator> <call><name>ZkTestServer</name><argument_list>(<argument><expr><name>zkDir</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">332</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">332</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>OverseerTest</name> extends <name>SolrTestCaseJ4</name> <block>{
   
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testShardAssignmentBigger</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>String</name> <name>zkDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"zkData"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>String</name> <name>zkDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"zkData"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><specifier>final</specifier> <name>int</name></type> <name>nodeCount</name> <init>= <expr><call><name>random</name><argument_list>()</argument_list></call><operator>.</operator><call><name>nextInt</name><argument_list>(<argument><expr><ternary><condition><expr><name>TEST_NIGHTLY</name></expr> ?</condition><then> <expr><literal type="number">50</literal></expr> </then><else>: <expr><literal type="number">10</literal></expr></else></ternary></expr></argument>)</argument_list></call><operator>+</operator><operator>(</operator><ternary><condition><expr><name>TEST_NIGHTLY</name></expr> ?</condition><then> <expr><literal type="number">50</literal></expr> </then><else>: <expr><literal type="number">10</literal></expr></else></ternary><operator>)</operator><operator>+</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt>   <comment type="line">//how many simulated nodes (num of threads)</comment>
     <decl_stmt><decl><type><specifier>final</specifier> <name>int</name></type> <name>coreCount</name> <init>= <expr><call><name>random</name><argument_list>()</argument_list></call><operator>.</operator><call><name>nextInt</name><argument_list>(<argument><expr><ternary><condition><expr><name>TEST_NIGHTLY</name></expr> ?</condition><then> <expr><literal type="number">100</literal></expr> </then><else>: <expr><literal type="number">11</literal></expr></else></ternary></expr></argument>)</argument_list></call><operator>+</operator><operator>(</operator><ternary><condition><expr><name>TEST_NIGHTLY</name></expr> ?</condition><then> <expr><literal type="number">100</literal></expr> </then><else>: <expr><literal type="number">11</literal></expr></else></ternary><operator>)</operator><operator>+</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt> <comment type="line">//how many cores to register</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">502</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">502</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>OverseerTest</name> extends <name>SolrTestCaseJ4</name> <block>{
   
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testStateChange</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>String</name> <name>zkDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"zkData"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>String</name> <name>zkDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"zkData"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     
     <decl_stmt><decl><type><name>ZkTestServer</name></type> <name>server</name> <init>= <expr><operator>new</operator> <call><name>ZkTestServer</name><argument_list>(<argument><expr><name>zkDir</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">598</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">598</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>OverseerTest</name> extends <name>SolrTestCaseJ4</name> <block>{
 
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testOverseerFailure</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>String</name> <name>zkDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"zkData"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>String</name> <name>zkDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"zkData"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>ZkTestServer</name></type> <name>server</name> <init>= <expr><operator>new</operator> <call><name>ZkTestServer</name><argument_list>(<argument><expr><name>zkDir</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">720</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">720</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>OverseerTest</name> extends <name>SolrTestCaseJ4</name> <block>{
   
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testShardLeaderChange</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>String</name> <name>zkDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"zkData"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>String</name> <name>zkDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"zkData"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <decl_stmt><decl><type><specifier>final</specifier> <name>ZkTestServer</name></type> <name>server</name> <init>= <expr><operator>new</operator> <call><name>ZkTestServer</name><argument_list>(<argument><expr><name>zkDir</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>SolrZkClient</name></type> <name>controllerClient</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>ZkStateReader</name></type> <name>reader</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">775</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">775</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>OverseerTest</name> extends <name>SolrTestCaseJ4</name> <block>{
 
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testDoubleAssignment</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>String</name> <name>zkDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"zkData"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>String</name> <name>zkDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"zkData"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     
     <decl_stmt><decl><type><name>ZkTestServer</name></type> <name>server</name> <init>= <expr><operator>new</operator> <call><name>ZkTestServer</name><argument_list>(<argument><expr><name>zkDir</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">839</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">839</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>OverseerTest</name> extends <name>SolrTestCaseJ4</name> <block>{
 
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testPlaceholders</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>String</name> <name>zkDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"zkData"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>String</name> <name>zkDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"zkData"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     
     <decl_stmt><decl><type><name>ZkTestServer</name></type> <name>server</name> <init>= <expr><operator>new</operator> <call><name>ZkTestServer</name><argument_list>(<argument><expr><name>zkDir</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">887</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">887</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>OverseerTest</name> extends <name>SolrTestCaseJ4</name> <block>{
   
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testReplay</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name><block>{
    <expr><name>String</name> <name>zkDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call> <operator>+</operator> <name><name>File</name><operator>.</operator><name>separator</name></name>
    <name>String</name> <name>zkDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call> <operator>+</operator> <name><name>File</name><operator>.</operator><name>separator</name></name>
         <operator>+</operator> <literal type="string">"zookeeper/server1/data"</literal></expr></block></expr></argument></throws></expr>;
     <name>ZkTestServer</name> <name>server</name> <operator>=</operator> <operator>new</operator> <call><name>ZkTestServer</name><argument_list>(<argument><expr><name>zkDir</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>SolrZkClient</name></type> <name>zkClient</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>SharedFSAutoReplicaFailoverTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>SharedFSAutoReplicaFailoverTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">7e156594bb7</literal><operator>..</operator><literal type="number">10a8afe7ecc</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>SharedFSAutoReplicaFailoverTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>SharedFSAutoReplicaFailoverTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">66</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">66</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SharedFSAutoReplicaFailoverTest</name> extends <name>AbstractFullDistribZkTestBa</name>
   
   @<name>BeforeClass</name>
   <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>hdfsFailoverBeforeClass</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>dfsCluster</name> <operator>=</operator> <call><name><name>HdfsTestUtil</name><operator>.</operator><name>setupClass</name></name><argument_list>(<argument><expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <expr_stmt><expr><name>dfsCluster</name> <operator>=</operator> <call><name><name>HdfsTestUtil</name><operator>.</operator><name>setupClass</name></name><argument_list>(<argument><expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></try>
   
   <annotation>@<name>AfterClass</name></annotation>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>SolrXmlInZkTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>SolrXmlInZkTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">42708796754..03d2b5ecd4b</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>SolrXmlInZkTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>SolrXmlInZkTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">58</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">58</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrXmlInZkTest</name> extends <name>SolrTestCaseJ4</name> <block>{
   }</block>
 
   <specifier>private</specifier> <name>void</name> <call><name>setUpZkAndDiskXml</name><argument_list>(<argument><expr><name>boolean</name> <name>toZk</name></expr></argument>, <argument><expr><name>boolean</name> <name>leaveOnLocal</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>File</name> <name>tmpDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>tmpDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>File</name></type> <name>solrHome</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>tmpDir</name></expr></argument>, <argument><expr><literal type="string">"home"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>copyMinConf</name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>solrHome</name></expr></argument>, <argument><expr><literal type="string">"myCollect"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <if_stmt><if>if <condition>(<expr><name>leaveOnLocal</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestLeaderElectionZkExpiry</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestLeaderElectionZkExpiry</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">3740c97742e</literal><operator>..</operator><literal type="number">851c41f2951</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestLeaderElectionZkExpiry</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestLeaderElectionZkExpiry</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">35</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">35</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestLeaderElectionZkExpiry</name> extends <name>SolrTestCaseJ4</name> <block>{
 
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testLeaderElectionWithZkExpiry</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>String</name> <name>zkDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"zkData"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>String</name> <name>ccDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"testLeaderElectionWithZkExpiry-solr"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>zkDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"zkData"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>ccDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"testLeaderElectionWithZkExpiry-solr"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>CoreContainer</name></type> <name>cc</name> <init>= <expr><call><name>createCoreContainer</name><argument_list>(<argument><expr><name>ccDir</name></expr></argument>, <argument><expr><name>SOLRXML</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>final</specifier> <name>ZkTestServer</name></type> <name>server</name> <init>= <expr><operator>new</operator> <call><name>ZkTestServer</name><argument_list>(<argument><expr><name>zkDir</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>server</name><operator>.</operator><name>setTheTickTime</name></name><argument_list>(<argument><expr><literal type="number">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestMiniSolrCloudCluster</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestMiniSolrCloudCluster</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>f5009f32b91</name><operator>..</operator><name>c61da707971</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestMiniSolrCloudCluster</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestMiniSolrCloudCluster</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">80</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">80</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestMiniSolrCloudCluster</name> extends <name>LuceneTestCase</name> <block>{
   @<expr><name>BeforeClass</name>
   <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>startup</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><name>File</name> <name>solrXml</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name><name>SolrTestCaseJ4</name><operator>.</operator><name>TEST_HOME</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"solr-no-core.xml"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>miniCluster</name> <operator>=</operator> <operator>new</operator> <call><name>MiniSolrCloudCluster</name><argument_list>(<argument><expr><name>NUM_SERVERS</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><call><name>createTempDir</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>solrXml</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><name>miniCluster</name> <operator>=</operator> <operator>new</operator> <call><name>MiniSolrCloudCluster</name><argument_list>(<argument><expr><name>NUM_SERVERS</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>solrXml</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></if></if_stmt>
 
   <annotation>@<name>AfterClass</name></annotation>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestMultiCoreConfBootstrap</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestMultiCoreConfBootstrap</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">5d66b96a40a</literal><operator>..</operator><literal type="number">438cc679465</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestMultiCoreConfBootstrap</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestMultiCoreConfBootstrap</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">43</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">43</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestMultiCoreConfBootstrap</name> extends <name>SolrTestCaseJ4</name> <block>{
   @<expr><name>Before</name>
   <specifier>public</specifier> <name>void</name> <call><name>setUp</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><call><name><name>super</name><operator>.</operator><name>setUp</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>dataDir1</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><name>dataDir2</name>  <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>dataDir1</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>dataDir2</name>  <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
     <expr_stmt><expr><name>home</name> <operator>=</operator> <name><name>ExternalPaths</name><operator>.</operator><name>EXAMPLE_MULTICORE_HOME</name></name></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"solr.solr.home"</literal></expr></argument>, <argument><expr><name>home</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestZkChroot</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestZkChroot</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">78f7233a6ea</literal><operator>..</operator><literal type="number">4546bd65019</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestZkChroot</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestZkChroot</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">43</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">43</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestZkChroot</name> extends <name>SolrTestCaseJ4</name> <block>{
   <expr><specifier>public</specifier> <name>void</name> <call><name>setUp</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><call><name><name>super</name><operator>.</operator><name>setUp</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
 
    <name>zkDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"zkData"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><name>zkDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"zkData"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>zkServer</name> <operator>=</operator> <operator>new</operator> <call><name>ZkTestServer</name><argument_list>(<argument><expr><name>zkDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>zkServer</name><operator>.</operator><name>run</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>home</name> <operator>=</operator> <name><name>ExternalPaths</name><operator>.</operator><name>EXAMPLE_HOME</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>UnloadDistributedZkTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>UnloadDistributedZkTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>f66bee70ebc</name><operator>..</operator><literal type="number">774f61d1c11</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>UnloadDistributedZkTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>UnloadDistributedZkTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">88</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">88</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>UnloadDistributedZkTest</name> extends <name>BasicDistributedZkTest</name> <block>{
     <expr><call><name><name>createCmd</name><operator>.</operator><name>setCoreName</name></name><argument_list>(<argument><expr><literal type="string">"test_unload_shard_and_collection_1"</literal></expr></argument>)</argument_list></call></expr>;
     <name>String</name> <name>collection</name> <operator>=</operator> <literal type="string">"test_unload_shard_and_collection"</literal></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>createCmd</name><operator>.</operator><name>setCollection</name></name><argument_list>(<argument><expr><name>collection</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>coreDataDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>coreDataDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>createCmd</name><operator>.</operator><name>setDataDir</name></name><argument_list>(<argument><expr><call><name>getDataDir</name><argument_list>(<argument><expr><name>coreDataDir</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>createCmd</name><operator>.</operator><name>setNumShards</name></name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">103</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">103</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>UnloadDistributedZkTest</name> extends <name>BasicDistributedZkTest</name> <block>{
     <expr><call><name><name>createCmd</name><operator>.</operator><name>setCoreName</name></name><argument_list>(<argument><expr><literal type="string">"test_unload_shard_and_collection_2"</literal></expr></argument>)</argument_list></call></expr>;
     <name>collection</name> <operator>=</operator> <literal type="string">"test_unload_shard_and_collection"</literal></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>createCmd</name><operator>.</operator><name>setCollection</name></name><argument_list>(<argument><expr><name>collection</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>coreDataDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>coreDataDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>createCmd</name><operator>.</operator><name>setDataDir</name></name><argument_list>(<argument><expr><call><name>getDataDir</name><argument_list>(<argument><expr><name>coreDataDir</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     
     <expr_stmt><expr><call><name><name>server</name><operator>.</operator><name>request</name></name><argument_list>(<argument><expr><name>createCmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">154</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">154</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>UnloadDistributedZkTest</name> extends <name>BasicDistributedZkTest</name> <block>{
    <expr><operator>*</operator> @<throws>throws <argument><expr><name>Exception</name> <name>on</name> <name>any</name> <name>problem</name>
    <operator>*</operator><operator>/</operator>
   <specifier>private</specifier> <name>void</name> <call><name>testCoreUnloadAndLeaders</name><argument_list>()</argument_list></call></expr></argument></throws> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>File</name> <name>tmpDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>File</name> <name>tmpDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     
     <comment type="line">// create a new collection collection</comment>
     <decl_stmt><decl><type><name>SolrServer</name></type> <name>client</name> <init>= <expr><call><name><name>clients</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ZkCLITest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ZkCLITest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">26f9894a566</literal><operator>..</operator><name>ac2d0640add</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ZkCLITest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ZkCLITest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">77</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">77</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ZkCLITest</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"####SETUP_START "</literal> <operator>+</operator> <call><name>getTestName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
     
     <name>boolean</name> <name>useNewSolrXml</name> <operator>=</operator> <call><name>random</name><argument_list>()</argument_list></call><operator>.</operator><call><name>nextBoolean</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>tmpDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>tmpDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <if_stmt><if>if <condition>(<expr><name>useNewSolrXml</name></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><name>solrHome</name> <operator>=</operator> <name><name>ExternalPaths</name><operator>.</operator><name>EXAMPLE_HOME</name></name></expr>;</expr_stmt>
     </block_content>}</block></if> <else>else <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">204</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">204</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ZkCLITest</name> extends <name>SolrTestCaseJ4</name> <block>{
   
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testUpConfigLinkConfigClearZk</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>File</name> <name>tmpDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>File</name> <name>tmpDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     
     <comment type="line">// test upconfig</comment>
     <decl_stmt><decl><type><name>String</name></type> <name>confsetname</name> <init>= <expr><literal type="string">"confsetone"</literal></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">278</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">278</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ZkCLITest</name> extends <name>SolrTestCaseJ4</name> <block>{
 
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testGetFile</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>File</name> <name>tmpDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>File</name> <name>tmpDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     
     <decl_stmt><decl><type><name>String</name></type> <name>getNode</name> <init>= <expr><literal type="string">"/getFileNode"</literal></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name><name>byte</name> <index>[]</index></name></type> <name>data</name> <init>= <expr><operator>new</operator> <call><name>String</name><argument_list>(<argument><expr><literal type="string">"getFileNode-data"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getBytes</name><argument_list>(<argument><expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">296</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">296</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ZkCLITest</name> extends <name>SolrTestCaseJ4</name> <block>{
 
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testGetFileNotExists</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>File</name> <name>tmpDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>File</name> <name>tmpDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>String</name></type> <name>getNode</name> <init>= <expr><literal type="string">"/getFileNotExistsNode"</literal></expr></init></decl>;</decl_stmt>
 
     <decl_stmt><decl><type><name>File</name></type> <name>file</name> <init>= <expr><call><name><name>File</name><operator>.</operator><name>createTempFile</name></name><argument_list>(<argument><expr><literal type="string">"newfile"</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>tmpDir</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ZkControllerTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ZkControllerTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">5ae7a1f1b26</literal><operator>..</operator><literal type="number">6642a661340</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ZkControllerTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ZkControllerTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">84</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">84</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ZkControllerTest</name> extends <name>SolrTestCaseJ4</name> <block>{
                  <expr><call><name><name>ZkController</name><operator>.</operator><name>generateNodeName</name></name><argument_list>(<argument><expr><literal type="string">"foo-bar"</literal></expr></argument>, <argument><expr><literal type="string">"77"</literal></expr></argument>, <argument><expr><literal type="string">"/solr/sub_dir/"</literal></expr></argument>)</argument_list></call></expr>)</block></expr>;</expr_stmt>
 
     <comment type="line">// setup a SolrZkClient to do some getBaseUrlForNodeName testing</comment>
    <decl_stmt><decl><type><name>String</name></type> <name>zkDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"zkData"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>zkDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"zkData"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <decl_stmt><decl><type><name>ZkTestServer</name></type> <name>server</name> <init>= <expr><operator>new</operator> <call><name>ZkTestServer</name><argument_list>(<argument><expr><name>zkDir</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <try>try <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">154</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">154</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ZkControllerTest</name> extends <name>SolrTestCaseJ4</name> <block>{
 
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testReadConfigName</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>String</name> <name>zkDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"zkData"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>String</name> <name>zkDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"zkData"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>CoreContainer</name></type> <name>cc</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
 
     <decl_stmt><decl><type><name>ZkTestServer</name></type> <name>server</name> <init>= <expr><operator>new</operator> <call><name>ZkTestServer</name><argument_list>(<argument><expr><name>zkDir</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">209</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">209</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ZkControllerTest</name> extends <name>SolrTestCaseJ4</name> <block>{
 
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testUploadToCloud</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>String</name> <name>zkDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"zkData"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>String</name> <name>zkDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"zkData"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><name>ZkTestServer</name></type> <name>server</name> <init>= <expr><operator>new</operator> <call><name>ZkTestServer</name><argument_list>(<argument><expr><name>zkDir</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>ZkController</name></type> <name>zkController</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">261</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">261</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ZkControllerTest</name> extends <name>SolrTestCaseJ4</name> <block>{
 
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testGetHostName</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>String</name> <name>zkDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"zkData"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>String</name> <name>zkDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"zkData"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>CoreContainer</name></type> <name>cc</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
 
     <decl_stmt><decl><type><name>ZkTestServer</name></type> <name>server</name> <init>= <expr><operator>new</operator> <call><name>ZkTestServer</name><argument_list>(<argument><expr><name>zkDir</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ZkSolrClientTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ZkSolrClientTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">6340f78052a</literal><operator>..</operator><literal type="number">283b7d1d751</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ZkSolrClientTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ZkSolrClientTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">51</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">51</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ZkSolrClientTest</name> extends <name>AbstractSolrTestCase</name> <block>{
     }</block>
 
     <call><name>ZkConnection</name><argument_list>(<argument><expr><name>boolean</name> <name>makeRoot</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
      <expr><name>String</name> <name>zkDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"zkData"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>String</name></type> <name>zkDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"zkData"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><name>server</name> <operator>=</operator> <operator>new</operator> <call><name>ZkTestServer</name><argument_list>(<argument><expr><name>zkDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>server</name><operator>.</operator><name>run</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">109</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">109</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ZkSolrClientTest</name> extends <name>AbstractSolrTestCase</name> <block>{
   }</block>
 
   <specifier>public</specifier> <name>void</name> <call><name>testReconnect</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>String</name> <name>zkDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"zkData"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>zkDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"zkData"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>ZkTestServer</name></type> <name>server</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>SolrZkClient</name></type> <name>zkClient</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
     <try>try <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">202</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">202</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ZkSolrClientTest</name> extends <name>AbstractSolrTestCase</name> <block>{
   }</block>
   
   <specifier>public</specifier> <name>void</name> <call><name>testZkCmdExectutor</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>String</name> <name>zkDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"zkData"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>zkDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"zkData"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>ZkTestServer</name></type> <name>server</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
 
     <try>try <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsBasicDistributedZk2Test</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsBasicDistributedZk2Test</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">9baf3e03bd8</literal><operator>..</operator><literal type="number">71103ee200a</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsBasicDistributedZk2Test</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsBasicDistributedZk2Test</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">37</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">37</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>HdfsBasicDistributedZk2Test</name> extends <name>BasicDistributedZk2Test</name> <block>{
   
   @<expr><name>BeforeClass</name>
   <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>setupClass</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>dfsCluster</name> <operator>=</operator> <call><name><name>HdfsTestUtil</name><operator>.</operator><name>setupClass</name></name><argument_list>(<argument><expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>dfsCluster</name> <operator>=</operator> <call><name><name>HdfsTestUtil</name><operator>.</operator><name>setupClass</name></name><argument_list>(<argument><expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
   </block_content>}</block></try>
   
   <annotation>@<name>AfterClass</name></annotation>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsBasicDistributedZkTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsBasicDistributedZkTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">4125490485b</literal><operator>..</operator><literal type="number">928e65d9556</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsBasicDistributedZkTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsBasicDistributedZkTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">39</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">39</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>HdfsBasicDistributedZkTest</name> extends <name>BasicDistributedZkTest</name> <block>{
   
   @<expr><name>BeforeClass</name>
   <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>setupClass</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>dfsCluster</name> <operator>=</operator> <call><name><name>HdfsTestUtil</name><operator>.</operator><name>setupClass</name></name><argument_list>(<argument><expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>dfsCluster</name> <operator>=</operator> <call><name><name>HdfsTestUtil</name><operator>.</operator><name>setupClass</name></name><argument_list>(<argument><expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
   </block_content>}</block></try>
   
   <annotation>@<name>AfterClass</name></annotation>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsChaosMonkeySafeLeaderTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsChaosMonkeySafeLeaderTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">8a0e4a6ffc8</literal><operator>..</operator><name>c39de4e6bd7</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsChaosMonkeySafeLeaderTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsChaosMonkeySafeLeaderTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">38</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">38</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>HdfsChaosMonkeySafeLeaderTest</name> extends <name>ChaosMonkeySafeLeaderTest</name> <block>{
   
   @<expr><name>BeforeClass</name>
   <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>setupClass</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>dfsCluster</name> <operator>=</operator> <call><name><name>HdfsTestUtil</name><operator>.</operator><name>setupClass</name></name><argument_list>(<argument><expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>dfsCluster</name> <operator>=</operator> <call><name><name>HdfsTestUtil</name><operator>.</operator><name>setupClass</name></name><argument_list>(<argument><expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
   </block_content>}</block></try>
   
   <annotation>@<name>AfterClass</name></annotation>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsCollectionsAPIDistributedZkTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsCollectionsAPIDistributedZkTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>eb454127aa1</name><operator>..</operator><name>c777e063920</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsCollectionsAPIDistributedZkTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsCollectionsAPIDistributedZkTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">37</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">37</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>HdfsCollectionsAPIDistributedZkTest</name> extends <name>CollectionsAPIDistribut</name>
   
   @<name>BeforeClass</name>
   <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>setupClass</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>dfsCluster</name> <operator>=</operator> <call><name><name>HdfsTestUtil</name><operator>.</operator><name>setupClass</name></name><argument_list>(<argument><expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <expr_stmt><expr><name>dfsCluster</name> <operator>=</operator> <call><name><name>HdfsTestUtil</name><operator>.</operator><name>setupClass</name></name><argument_list>(<argument><expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     
     <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"solr.hdfs.home"</literal></expr></argument>, <argument><expr><call><name><name>dfsCluster</name><operator>.</operator><name>getURI</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"/solr"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"solr.hdfs.blockcache.enabled"</literal></expr></argument>, <argument><expr><literal type="string">"false"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsRecoveryZkTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsRecoveryZkTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">8d254c04ded</literal><operator>..</operator><literal type="number">797a323a23e</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsRecoveryZkTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsRecoveryZkTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">37</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">37</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>HdfsRecoveryZkTest</name> extends <name>RecoveryZkTest</name> <block>{
   
   @<expr><name>BeforeClass</name>
   <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>setupClass</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>dfsCluster</name> <operator>=</operator> <call><name><name>HdfsTestUtil</name><operator>.</operator><name>setupClass</name></name><argument_list>(<argument><expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>dfsCluster</name> <operator>=</operator> <call><name><name>HdfsTestUtil</name><operator>.</operator><name>setupClass</name></name><argument_list>(<argument><expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"solr.hdfs.blockcache.blocksperbank"</literal></expr></argument>, <argument><expr><literal type="string">"2048"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></else></if_stmt>
   
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsSyncSliceTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsSyncSliceTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">304eb333ecf</literal><operator>..</operator><literal type="number">8f51c1ae2ee</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsSyncSliceTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsSyncSliceTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">38</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">38</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>HdfsSyncSliceTest</name> extends <name>SyncSliceTest</name> <block>{
   
   @<expr><name>BeforeClass</name>
   <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>setupClass</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>dfsCluster</name> <operator>=</operator> <call><name><name>HdfsTestUtil</name><operator>.</operator><name>setupClass</name></name><argument_list>(<argument><expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>dfsCluster</name> <operator>=</operator> <call><name><name>HdfsTestUtil</name><operator>.</operator><name>setupClass</name></name><argument_list>(<argument><expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
   </block_content>}</block></try>
   
   <annotation>@<name>AfterClass</name></annotation>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsUnloadDistributedZkTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsUnloadDistributedZkTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>b5faf418818</name><operator>..</operator><literal type="number">45a2802755a</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsUnloadDistributedZkTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsUnloadDistributedZkTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">37</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">37</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>HdfsUnloadDistributedZkTest</name> extends <name>UnloadDistributedZkTest</name> <block>{
   
   @<expr><name>BeforeClass</name>
   <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>setupClass</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>dfsCluster</name> <operator>=</operator> <call><name><name>HdfsTestUtil</name><operator>.</operator><name>setupClass</name></name><argument_list>(<argument><expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>dfsCluster</name> <operator>=</operator> <call><name><name>HdfsTestUtil</name><operator>.</operator><name>setupClass</name></name><argument_list>(<argument><expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
   </block_content>}</block></if></if_stmt>
   
   <annotation>@<name>AfterClass</name></annotation>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsWriteToMultipleCollectionsTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsWriteToMultipleCollectionsTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">39b25b1a346</literal><operator>..</operator><literal type="number">21eec1fe55d</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsWriteToMultipleCollectionsTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsWriteToMultipleCollectionsTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">59</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">59</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>HdfsWriteToMultipleCollectionsTest</name> extends <name>BasicDistributedZkTest</name> <block>{
   @<expr><name>BeforeClass</name>
   <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>setupClass</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><name>schemaString</name> <operator>=</operator> <literal type="string">"schema15.xml"</literal></expr></block></expr></argument></throws></expr>;      <comment type="line">// we need a string id</comment>
    <name>dfsCluster</name> <operator>=</operator> <call><name><name>HdfsTestUtil</name><operator>.</operator><name>setupClass</name></name><argument_list>(<argument><expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><name>dfsCluster</name> <operator>=</operator> <call><name><name>HdfsTestUtil</name><operator>.</operator><name>setupClass</name></name><argument_list>(<argument><expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><name>SOLR_HDFS_HOME</name></expr></argument>, <argument><expr><call><name><name>dfsCluster</name><operator>.</operator><name>getURI</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"/solr"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></if></if_stmt>
   
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>StressHdfsTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>StressHdfsTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">040be68b17c</literal><operator>..</operator><name>d64c723097c</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>StressHdfsTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>StressHdfsTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">61</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">61</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>StressHdfsTest</name> extends <name>BasicDistributedZkTest</name> <block>{
   
   @<expr><name>BeforeClass</name>
   <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>setupClass</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>dfsCluster</name> <operator>=</operator> <call><name><name>HdfsTestUtil</name><operator>.</operator><name>setupClass</name></name><argument_list>(<argument><expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>dfsCluster</name> <operator>=</operator> <call><name><name>HdfsTestUtil</name><operator>.</operator><name>setupClass</name></name><argument_list>(<argument><expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"solr.hdfs.home"</literal></expr></argument>, <argument><expr><call><name><name>dfsCluster</name><operator>.</operator><name>getURI</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"/solr"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></if></if_stmt>
   
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>AlternateDirectoryTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>AlternateDirectoryTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>b78683177f2</name><operator>..</operator><literal type="number">69729f74c0f</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>AlternateDirectoryTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>AlternateDirectoryTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">58</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">58</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>AlternateDirectoryTest</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><specifier>public</specifier> <name>Directory</name> <call><name>create</name><argument_list>(<argument><expr><name>String</name> <name>path</name></expr></argument>, <argument><expr><name>DirContext</name> <name>dirContext</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
       <expr><name>openCalled</name> <operator>=</operator> <literal type="boolean">true</literal></expr></block></expr></argument></throws></expr>;</block></expr></expr_stmt>
 
      <return>return <expr><name>dir</name> <operator>=</operator> <call><name>newFSDirectory</name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
      <return>return <expr><name>dir</name> <operator>=</operator> <call><name>newFSDirectory</name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toPath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block></if></if_stmt>
 
   </block_content>}</block></catch></try>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>CoreContainerCoreInitFailuresTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>CoreContainerCoreInitFailuresTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">2093fd03591</literal><operator>..</operator><name>af374e19f08</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>CoreContainerCoreInitFailuresTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>CoreContainerCoreInitFailuresTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">35</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">35</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>CoreContainerCoreInitFailuresTest</name> extends <name>SolrTestCaseJ4</name> <block>{
   <expr><name>CoreContainer</name> <name>cc</name> <operator>=</operator> <literal type="null">null</literal></expr>;
 
   <specifier>private</specifier> <name>void</name> <call><name>init</name><argument_list>(<argument><expr><name>final</name> <name>String</name> <name>dirSuffix</name></expr></argument>)</argument_list></call> <block>{
    <expr><name>solrHome</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><name>dirSuffix</name></expr></argument>)</argument_list></call></expr>;
    <name>solrHome</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><name>dirSuffix</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></block></block></expr>;</expr_stmt>
   </block_content>}</block></function>
 
   <annotation>@<name>After</name></annotation>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>OpenCloseCoreStressTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>OpenCloseCoreStressTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>cb6a1a49832</name><operator>..</operator><name>d5f62511e8d</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>OpenCloseCoreStressTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>OpenCloseCoreStressTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">85</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">85</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>OpenCloseCoreStressTest</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><name>coreNames</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
     <name>cumulativeDocs</name> <operator>=</operator> <literal type="number">0</literal></block></expr>;</expr_stmt>
 
    <expr_stmt><expr><name>solrHomeDirectory</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>solrHomeDirectory</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
     <expr_stmt><expr><name>jetty</name> <operator>=</operator> <operator>new</operator> <call><name>JettySolrRunner</name><argument_list>(<argument><expr><call><name><name>solrHomeDirectory</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"/solr"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>sslConfig</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></catch></try>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>ResourceLoaderTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>ResourceLoaderTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>c0d12034884</name><operator>..</operator><literal type="number">0007a783a7f</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>ResourceLoaderTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>ResourceLoaderTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">61</literal><operator>,</operator><literal type="number">7</literal> <operator>+</operator><literal type="number">61</literal><operator>,</operator><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ResourceLoaderTest</name> extends <name>SolrTestCaseJ4</name>
   }</block></expr></expr_stmt>
 
   <function><type><specifier>public</specifier> <name>void</name></type> <name>testEscapeInstanceDir</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>File</name></type> <name>temp</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"testEscapeInstanceDir"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>temp</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"testEscapeInstanceDir"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <try>try <block>{<block_content>
       <expr_stmt><expr><call><name><name>temp</name><operator>.</operator><name>mkdirs</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>temp</name></expr></argument>, <argument><expr><literal type="string">"dummy.txt"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>createNewFile</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">77</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">77</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ResourceLoaderTest</name> extends <name>SolrTestCaseJ4</name></expr></expr_stmt>
       </block_content>}</block></try>
       <expr_stmt><expr><call><name><name>loader</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></function> <finally>finally <block>{<block_content>
      <expr_stmt><expr><call><name><name>IOUtils</name><operator>.</operator><name>rm</name></name><argument_list>(<argument><expr><name>temp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>IOUtils</name><operator>.</operator><name>rm</name></name><argument_list>(<argument><expr><call><name><name>temp</name><operator>.</operator><name>toPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></finally>
   </block_content>}</block></catch></try>
 
@@ <operator>-</operator><literal type="number">171</literal><operator>,</operator><literal type="number">7</literal> <operator>+</operator><literal type="number">171</literal><operator>,</operator><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ResourceLoaderTest</name> extends <name>SolrTestCaseJ4</name>
   }</block></expr></expr_stmt>
 
   <function><type><specifier>public</specifier> <name>void</name></type> <name>testClassLoaderLibs</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>File</name></type> <name>tmpRoot</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"testClassLoaderLibs"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>tmpRoot</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"testClassLoaderLibs"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <decl_stmt><decl><type><name>File</name></type> <name>lib</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>tmpRoot</name></expr></argument>, <argument><expr><literal type="string">"lib"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>lib</name><operator>.</operator><name>mkdirs</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrCoreCheckLockOnStartupTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrCoreCheckLockOnStartupTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">391690943b0</literal><operator>..</operator><literal type="number">5ca1e9b1ed9</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrCoreCheckLockOnStartupTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrCoreCheckLockOnStartupTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">48</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">48</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrCoreCheckLockOnStartupTest</name> extends <name>SolrTestCaseJ4</name> <block>{
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testSimpleLockErrorOnStartup</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
 
    <expr><name>Directory</name> <name>directory</name> <operator>=</operator> <call><name>newFSDirectory</name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>initCoreDataDir</name></expr></argument>, <argument><expr><literal type="string">"index"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <call><name>SimpleFSLockFactory</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>Directory</name> <name>directory</name> <operator>=</operator> <call><name>newFSDirectory</name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>initCoreDataDir</name></expr></argument>, <argument><expr><literal type="string">"index"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toPath</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <call><name>SimpleFSLockFactory</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <comment type="line">//creates a new IndexWriter without releasing the lock yet</comment>
     <decl_stmt><decl><type><name>IndexWriter</name></type> <name>indexWriter</name> <init>= <expr><operator>new</operator> <call><name>IndexWriter</name><argument_list>(<argument><expr><name>directory</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>IndexWriterConfig</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">74</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">74</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrCoreCheckLockOnStartupTest</name> extends <name>SolrTestCaseJ4</name> <block>{
 
     <expr><name>File</name> <name>indexDir</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>initCoreDataDir</name></expr></argument>, <argument><expr><literal type="string">"index"</literal></expr></argument>)</argument_list></call></expr>;
     <call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Acquiring lock on {}"</literal></expr></argument>, <argument><expr><call><name><name>indexDir</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Directory</name></type> <name>directory</name> <init>= <expr><call><name>newFSDirectory</name><argument_list>(<argument><expr><name>indexDir</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>NativeFSLockFactory</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Directory</name></type> <name>directory</name> <init>= <expr><call><name>newFSDirectory</name><argument_list>(<argument><expr><call><name><name>indexDir</name><operator>.</operator><name>toPath</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <call><name>NativeFSLockFactory</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <comment type="line">//creates a new IndexWriter without releasing the lock yet</comment>
     <decl_stmt><decl><type><name>IndexWriter</name></type> <name>indexWriter</name> <init>= <expr><operator>new</operator> <call><name>IndexWriter</name><argument_list>(<argument><expr><name>directory</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>IndexWriterConfig</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrCoreTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrCoreTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">362408fbf6d</literal><operator>..</operator><literal type="number">1c5cfb82abf</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrCoreTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrCoreTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">63</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">63</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrCoreTest</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><call><name><name>core</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;
 
     <name>CoreDescriptor</name> <name>cd</name> <operator>=</operator> <operator>new</operator> <call><name>CoreDescriptor</name><argument_list>(<argument><expr><name>cores</name></expr></argument>, <argument><expr><name>COLLECTION1</name></expr></argument>, <argument><expr><literal type="string">"collection1"</literal></expr></argument>,
                                            <argument><expr><name><name>CoreDescriptor</name><operator>.</operator><name>CORE_DATADIR</name></name></expr></argument>, <argument><expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"dataDir2"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
                                            <expr_stmt><expr><name><name>CoreDescriptor</name><operator>.</operator><name>CORE_DATADIR</name></name></expr><operator>,</operator> <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"dataDir2"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></expr_stmt>)</block_content></block>;</function>
     
     <expr_stmt><expr><call><name><name>cores</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><name>cd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestArbitraryIndexDir</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestArbitraryIndexDir</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">87dab276775</literal><operator>..</operator><name>d78d28acdc0</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestArbitraryIndexDir</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestArbitraryIndexDir</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">73</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">73</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestArbitraryIndexDir</name> extends <name>AbstractSolrTestCase</name><block>{
   <expr><specifier>public</specifier> <name>void</name> <call><name>setUp</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><call><name><name>super</name><operator>.</operator><name>setUp</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
     
    <name>File</name> <name>tmpDataDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>tmpDataDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <expr_stmt><expr><name>solrConfig</name> <operator>=</operator> <call><name><name>TestHarness</name><operator>.</operator><name>createConfig</name></name><argument_list>(<argument><expr><call><name>getSolrHome</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"solrconfig.xml"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>h</name> <operator>=</operator> <operator>new</operator> <call><name>TestHarness</name><argument_list>( <argument><expr><call><name><name>tmpDataDir</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>,
<argument>@@ <expr><operator>-</operator><literal type="number">112</literal></expr></argument>,<argument><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">112</literal></expr></argument>,<argument><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestArbitraryIndexDir</name> extends <name>AbstractSolrTestCase</name><block>{
     }</block>
 
     <comment type="line">//add a doc in the new index dir</comment>
    <name>Directory</name> <name>dir</name> <operator>=</operator> <call><name>newFSDirectory</name><argument_list>(<argument><expr><name>newDir</name></expr></argument>)</argument_list></call></expr></argument>;</argument_list></call></expr></expr_stmt>
    <decl_stmt><decl><type><name>Directory</name></type> <name>dir</name> <init>= <expr><call><name>newFSDirectory</name><argument_list>(<argument><expr><call><name><name>newDir</name><operator>.</operator><name>toPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>IndexWriter</name></type> <name>iw</name> <init>= <expr><operator>new</operator> <call><name>IndexWriter</name><argument_list>(
         <argument><expr><name>dir</name></expr></argument>,
         <argument><expr><operator>new</operator> <call><name>IndexWriterConfig</name><argument_list>(<argument><expr><operator>new</operator> <call><name>StandardAnalyzer</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestConfigSets</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestConfigSets</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">4271f94bc90</literal><operator>..</operator><name>faf8ad49d60</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestConfigSets</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestConfigSets</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">41</literal></expr></argument>,<argument><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">41</literal></expr></argument>,<argument><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestConfigSets</name> extends <name>SolrTestCaseJ4</name> <block>{
   <expr><specifier>public</specifier> <specifier>static</specifier> <name>String</name> <name>solrxml</name> <operator>=</operator> <literal type="string">"&lt;solr&gt;&lt;str name=\"configSetBaseDir\"&gt;${configsets:configsets}&lt;/str&gt;&lt;/solr&gt;"</literal></expr>;
 
   <specifier>public</specifier> <name>CoreContainer</name> <call><name>setupContainer</name><argument_list>(<argument><expr><name>String</name> <name>configSetsBaseDir</name></expr></argument>)</argument_list></call> <block>{
    <expr><name>File</name> <name>testDirectory</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr>;
    <name>File</name> <name>testDirectory</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></block></block></expr></argument>;</argument_list></call></expr></init></decl></decl_stmt>
 
     <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"configsets"</literal></expr></argument>, <argument><expr><name>configSetsBaseDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestCoreContainer</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestCoreContainer</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">37f11e30e90</literal><operator>..</operator><literal type="number">2b97664650b</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestCoreContainer</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestCoreContainer</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">71</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">71</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestCoreContainer</name> extends <name>SolrTestCaseJ4</name> <block>{
 
   <expr><specifier>private</specifier> <name>CoreContainer</name> <call><name>init</name><argument_list>(<argument><expr><name>String</name> <name>dirName</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
 
    <expr><name>solrHomeDirectory</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><name>dirName</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>solrHomeDirectory</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><name>dirName</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
 
     <expr_stmt><expr><call><name><name>FileUtils</name><operator>.</operator><name>copyDirectory</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name><name>SolrTestCaseJ4</name><operator>.</operator><name>TEST_HOME</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>solrHomeDirectory</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"Using solrconfig from "</literal> <operator>+</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name><name>SolrTestCaseJ4</name><operator>.</operator><name>TEST_HOME</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">148</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">148</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestCoreContainer</name> extends <name>SolrTestCaseJ4</name> <block>{
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testNoCores</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name></expr></argument>, <argument><expr><name>ParserConfigurationException</name></expr></argument>, <argument><expr><name>SAXException</name> <block>{
     <comment type="line">//create solrHome</comment>
    <expr><name>File</name> <name>solrHomeDirectory</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>File</name> <name>solrHomeDirectory</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     
     <decl_stmt><decl><type><name>boolean</name></type> <name>oldSolrXml</name> <init>= <expr><call><name>random</name><argument_list>()</argument_list></call><operator>.</operator><call><name>nextBoolean</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">221</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">221</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestCoreContainer</name> extends <name>SolrTestCaseJ4</name> <block>{
 
     <expr><name>MockCoresLocator</name> <name>cl</name> <operator>=</operator> <operator>new</operator> <call><name>MockCoresLocator</name><argument_list>()</argument_list></call></expr>;
 
    <name>solrHomeDirectory</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"_deleteBadCores"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><name>solrHomeDirectory</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"_deleteBadCores"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>SolrResourceLoader</name></type> <name>resourceLoader</name> <init>= <expr><operator>new</operator> <call><name>SolrResourceLoader</name><argument_list>(<argument><expr><call><name><name>solrHomeDirectory</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>File</name></type> <name>instanceDir</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>solrHomeDirectory</name></expr></argument>, <argument><expr><literal type="string">"_deleteBadCores"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"configsets"</literal></expr></argument>, <argument><expr><call><name>getFile</name><argument_list>(<argument><expr><literal type="string">"solr/configsets"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">267</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">267</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestCoreContainer</name> extends <name>SolrTestCaseJ4</name> <block>{
 
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testSharedLib</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>File</name> <name>tmpRoot</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"testSharedLib"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>File</name> <name>tmpRoot</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"testSharedLib"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><name>File</name></type> <name>lib</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>tmpRoot</name></expr></argument>, <argument><expr><literal type="string">"lib"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>lib</name><operator>.</operator><name>mkdirs</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">350</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">350</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestCoreContainer</name> extends <name>SolrTestCaseJ4</name> <block>{
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testCustomHandlers</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
 
    <expr><name>solrHomeDirectory</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"_customHandlers"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>solrHomeDirectory</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"_customHandlers"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>SolrResourceLoader</name></type> <name>loader</name> <init>= <expr><operator>new</operator> <call><name>SolrResourceLoader</name><argument_list>(<argument><expr><call><name><name>solrHomeDirectory</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <decl_stmt><decl><type><name>ConfigSolr</name></type> <name>config</name> <init>= <expr><call><name><name>ConfigSolr</name><operator>.</operator><name>fromString</name></name><argument_list>(<argument><expr><name>loader</name></expr></argument>, <argument><expr><name>CUSTOM_HANDLERS_SOLR_XML</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestCoreDiscovery</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestCoreDiscovery</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">0a753c277a2</literal><operator>..</operator><literal type="number">3d871309227</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestCoreDiscovery</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestCoreDiscovery</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">41</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">41</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestCoreDiscovery</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><call><name>initCore</name><argument_list>()</argument_list></call></expr>;
   }</block></expr></expr_stmt>
 
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>File</name></type> <name>solrHomeDirectory</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>File</name></type> <name>solrHomeDirectory</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
   <function><type><specifier>private</specifier> <name>void</name></type> <name>setMeUp</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>alternateCoreDir</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
     <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"solr.solr.home"</literal></expr></argument>, <argument><expr><call><name><name>solrHomeDirectory</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">195</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">195</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestCoreDiscovery</name> extends <name>SolrTestCaseJ4</name> <block>{
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testAlternateCoreDir</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
 
    <expr><name>File</name> <name>alt</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>File</name> <name>alt</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
 
     <expr_stmt><expr><call><name>setMeUp</name><argument_list>(<argument><expr><call><name><name>alt</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>addCoreWithProps</name><argument_list>(<argument><expr><call><name>makeCorePropFile</name><argument_list>(<argument><expr><literal type="string">"core1"</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"dataDir=core1"</literal></expr></argument>)</argument_list></call></expr></argument>,
<argument>@@ <expr><operator>-</operator><literal type="number">213</literal></expr></argument>,<argument><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">213</literal></expr></argument>,<argument><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestCoreDiscovery</name> extends <name>SolrTestCaseJ4</name> <block>{
   }</block>
   @<name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testNoCoreDir</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>File</name> <name>noCoreDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr></argument>;</argument_list></call></expr></expr_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>noCoreDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>setMeUp</name><argument_list>(<argument><expr><call><name><name>noCoreDir</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>addCoreWithProps</name><argument_list>(<argument><expr><call><name>makeCorePropFile</name><argument_list>(<argument><expr><literal type="string">"core1"</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></argument>,
         <argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>noCoreDir</name></expr></argument>, <argument><expr><literal type="string">"core1"</literal> <operator>+</operator> <name><name>File</name><operator>.</operator><name>separator</name></name> <operator>+</operator> <name><name>CorePropertiesLocator</name><operator>.</operator><name>PROPERTIES_FILENAME</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestLazyCores</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestLazyCores</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">81e2d0c3eab</literal><operator>..</operator><name>befd579993b</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestLazyCores</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestLazyCores</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">62</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">62</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestLazyCores</name> extends <name>SolrTestCaseJ4</name> <block>{
   }</block>
 
   <specifier>private</specifier> <name>CoreContainer</name> <call><name>init</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>solrHomeDirectory</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <expr_stmt><expr><name>solrHomeDirectory</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     
     <for>for <control>(<init><decl><type><name>int</name></type> <name>idx</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>idx</name> <operator>&lt;</operator> <literal type="number">10</literal></expr>;</condition> <incr><expr><operator>++</operator><name>idx</name></expr></incr>)</control> <block>{<block_content>
       <expr_stmt><expr><call><name>copyMinConf</name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>solrHomeDirectory</name></expr></argument>, <argument><expr><literal type="string">"collection"</literal> <operator>+</operator> <name>idx</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">585</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">585</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestLazyCores</name> extends <name>SolrTestCaseJ4</name> <block>{
   <expr><specifier>private</specifier> <name>CoreContainer</name> <call><name>initGoodAndBad</name><argument_list>(<argument><expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name> <name>goodCores</name></expr></argument>,
                                        <argument><expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name> <name>badSchemaCores</name></expr></argument>,
                                        <argument><expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name> <name>badConfigCores</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>solrHomeDirectory</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>solrHomeDirectory</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     
     <comment type="line">// Don't pollute the log with exception traces when they're expected.</comment>
     <expr_stmt><expr><call><name>ignoreException</name><argument_list>(<argument><expr><call><name><name>Pattern</name><operator>.</operator><name>quote</name></name><argument_list>(<argument><expr><literal type="string">"SAXParseException"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestSolrXml</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestSolrXml</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">19b0e601fad</literal><operator>..</operator><name>ab6e9b33a2e</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestSolrXml</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestSolrXml</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">48</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">48</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSolrXml</name> extends <name>SolrTestCaseJ4</name> <block>{
 
   @<expr><name>BeforeClass</name>
   <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>setupLoader</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>solrHome</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>solrHome</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><name>loader</name> <operator>=</operator> <operator>new</operator> <call><name>SolrResourceLoader</name><argument_list>(<argument><expr><call><name><name>solrHome</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></for>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestSolrXmlPersistence</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestSolrXmlPersistence</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">2878082b152</literal><operator>..</operator><literal type="number">2e43e61f3ca</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestSolrXmlPersistence</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestSolrXmlPersistence</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">54</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">54</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import static <name><name>org</name><operator>.</operator><name>hamcrest</name><operator>.</operator><name>core</name><operator>.</operator><name>Is</name><operator>.</operator><name>is</name></name>;</import>
 
 <class><specifier>public</specifier> class <name>TestSolrXmlPersistence</name> <super_list><extends>extends <super><name>SolrTestCaseJ4</name></super></extends></super_list> <block>{
 
  <decl_stmt><decl><type><specifier>private</specifier> <name>File</name></type> <name>solrHomeDirectory</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>File</name></type> <name>solrHomeDirectory</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
   <decl_stmt><decl><annotation>@<name>Rule</name></annotation>
   <type><specifier>public</specifier> <name>TestRule</name></type> <name>solrTestRules</name> <init>=
@@ <expr><operator>-</operator><literal type="number">62</literal></expr></init></decl>,7 +62,7 @@ public <decl><type ref="prev"/><name>class</name> <name>TestSolrXmlPersistence</name> extends <name>SolrTestCaseJ4</name> <block>{<block_content>
 
   <function><annotation>@<name>Before</name></annotation>
   <type><specifier>public</specifier> <name>void</name></type> <name>setupTest</name><parameter_list>()</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name>solrHomeDirectory</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><call><name><name>LuceneTestCase</name><operator>.</operator><name>getTestClass</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getSimpleName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>solrHomeDirectory</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><call><name><name>LuceneTestCase</name><operator>.</operator><name>getTestClass</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getSimpleName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
 
   <function><type><specifier>private</specifier> <name>CoreContainer</name></type> <name>init</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>solrXmlString</name></decl></parameter>, <parameter><decl><type><name>String</name><modifier>...</modifier></type> <name>subDirs</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestSolrXmlPersistor</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestSolrXmlPersistor</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">41ef686aa1c</literal><operator>..</operator><name>f93117f54fb</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestSolrXmlPersistor</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestSolrXmlPersistor</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">62</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">62</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSolrXmlPersistor</name>  extends <name>SolrTestCaseJ4</name> <block>{
     
     <expr><name>final</name> <name>String</name> <name>solrxml</name> <operator>=</operator> <literal type="string">"&lt;solr&gt;&lt;cores&gt;&lt;/cores&gt;&lt;/solr&gt;"</literal></expr>;
     
    <name>final</name> <name>File</name> <name>solrHomeDirectory</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>File</name></type> <name>solrHomeDirectory</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     
     <expr_stmt><expr><call><name>copyMinFullSetup</name><argument_list>(<argument><expr><name>solrHomeDirectory</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>TestCSVLoader</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>TestCSVLoader</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">031c0178d92</literal><operator>..</operator><literal type="number">2353e2b9f42</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>TestCSVLoader</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>TestCSVLoader</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">51</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">51</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestCSVLoader</name> extends <name>SolrTestCaseJ4</name> <block>{
     <comment type="line">// if you override setUp or tearDown, you better call</comment>
     <comment type="line">// the super classes version</comment>
     <expr><call><name><name>super</name><operator>.</operator><name>setUp</name></name><argument_list>()</argument_list></call></expr>;
    <name>File</name> <name>tempDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"TestCSVLoader"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>tempDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"TestCSVLoader"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><name>file</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>tempDir</name></expr></argument>, <argument><expr><literal type="string">"solr_tmp.csv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>filename</name> <operator>=</operator> <call><name><name>file</name><operator>.</operator><name>getPath</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>cleanup</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>TestReplicationHandler</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>TestReplicationHandler</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">270fcb015e1</literal><operator>..</operator><name>f8d0a7616cc</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>TestReplicationHandler</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>TestReplicationHandler</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">103</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">103</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestReplicationHandler</name> extends <name>SolrTestCaseJ4</name> <block>{
 <comment type="line">//    System.setProperty("solr.directoryFactory", "solr.StandardDirectoryFactory");</comment>
     <comment type="line">// For manual testing only</comment>
     <comment type="line">// useFactory(null); // force an FS factory.</comment>
    <expr><name>master</name> <operator>=</operator> <operator>new</operator> <call><name>SolrInstance</name><argument_list>(<argument><expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"solr-instance"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"master"</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;
    <name>master</name> <operator>=</operator> <operator>new</operator> <call><name>SolrInstance</name><argument_list>(<argument><expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"solr-instance"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"master"</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>master</name><operator>.</operator><name>setUp</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>masterJetty</name> <operator>=</operator> <call><name>createJetty</name><argument_list>(<argument><expr><name>master</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>masterClient</name> <operator>=</operator> <call><name>createNewSolrServer</name><argument_list>(<argument><expr><call><name><name>masterJetty</name><operator>.</operator><name>getLocalPort</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
    <expr_stmt><expr><name>slave</name> <operator>=</operator> <operator>new</operator> <call><name>SolrInstance</name><argument_list>(<argument><expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"solr-instance"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"slave"</literal></expr></argument>, <argument><expr><call><name><name>masterJetty</name><operator>.</operator><name>getLocalPort</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>slave</name> <operator>=</operator> <operator>new</operator> <call><name>SolrInstance</name><argument_list>(<argument><expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"solr-instance"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"slave"</literal></expr></argument>, <argument><expr><call><name><name>masterJetty</name><operator>.</operator><name>getLocalPort</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>slave</name><operator>.</operator><name>setUp</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>slaveJetty</name> <operator>=</operator> <call><name>createJetty</name><argument_list>(<argument><expr><name>slave</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>slaveClient</name> <operator>=</operator> <call><name>createNewSolrServer</name><argument_list>(<argument><expr><call><name><name>slaveJetty</name><operator>.</operator><name>getLocalPort</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">312</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">312</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestReplicationHandler</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><name>JettySolrRunner</name> <name>repeaterJetty</name> <operator>=</operator> <literal type="null">null</literal></expr>;
     <name>SolrServer</name> <name>repeaterClient</name> <operator>=</operator> <literal type="null">null</literal></block></expr>;</expr_stmt>
     <try>try <block>{<block_content>
      <expr_stmt><expr><name>repeater</name> <operator>=</operator> <operator>new</operator> <call><name>SolrInstance</name><argument_list>(<argument><expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"solr-instance"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"repeater"</literal></expr></argument>, <argument><expr><call><name><name>masterJetty</name><operator>.</operator><name>getLocalPort</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>repeater</name> <operator>=</operator> <operator>new</operator> <call><name>SolrInstance</name><argument_list>(<argument><expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"solr-instance"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"repeater"</literal></expr></argument>, <argument><expr><call><name><name>masterJetty</name><operator>.</operator><name>getLocalPort</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>repeater</name><operator>.</operator><name>setUp</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><name>repeaterJetty</name> <operator>=</operator> <call><name>createJetty</name><argument_list>(<argument><expr><name>repeater</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><name>repeaterClient</name> <operator>=</operator> <call><name>createNewSolrServer</name><argument_list>(<argument><expr><call><name><name>repeaterJetty</name><operator>.</operator><name>getLocalPort</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">899</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">899</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestReplicationHandler</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><name>slaveClient</name> <operator>=</operator> <call><name>createNewSolrServer</name><argument_list>(<argument><expr><call><name><name>slaveJetty</name><operator>.</operator><name>getLocalPort</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</block></expr></expr_stmt>
 
     <try>try <block>{<block_content>
      <expr_stmt><expr><name>repeater</name> <operator>=</operator> <operator>new</operator> <call><name>SolrInstance</name><argument_list>(<argument><expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"solr-instance"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"repeater"</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>repeater</name> <operator>=</operator> <operator>new</operator> <call><name>SolrInstance</name><argument_list>(<argument><expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"solr-instance"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"repeater"</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>repeater</name><operator>.</operator><name>setUp</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>repeater</name><operator>.</operator><name>copyConfigFile</name></name><argument_list>(<argument><expr><name>CONF_DIR</name> <operator>+</operator> <literal type="string">"solrconfig-repeater.xml"</literal></expr></argument>,
           <argument><expr><literal type="string">"solrconfig.xml"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1438</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">1438</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestReplicationHandler</name> extends <name>SolrTestCaseJ4</name> <block>{
     }</block>
 
     <specifier>public</specifier> <name>void</name> <call><name>tearDown</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
      <expr><call><name><name>IOUtils</name><operator>.</operator><name>rm</name></name><argument_list>(<argument><expr><name>homeDir</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>IOUtils</name><operator>.</operator><name>rm</name></name><argument_list>(<argument><expr><call><name><name>homeDir</name><operator>.</operator><name>toPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></try>
 
     <decl_stmt><decl><type><specifier>public</specifier> <name>void</name></type> <name>copyConfigFile</name><argument_list>(<argument><expr><name>String</name> <name>srcFile</name></expr></argument>, <argument><expr><name>String</name> <name>destFile</name></expr></argument>)</argument_list> 
<name>diff</name> --<name>git</name> <name>a</name>/<name>solr</name>/<name>core</name>/<name>src</name>/<name>test</name>/<name>org</name>/<name>apache</name>/<name>solr</name>/<name>handler</name>/<name><name>TestReplicationHandlerBackup</name><operator>.</operator><name>java</name></name> <name>b</name>/<name>solr</name>/<name>core</name>/<name>src</name>/<name>test</name>/<name>org</name>/<name>apache</name>/<name>solr</name>/<name>handler</name>/<name><name>TestReplicationHandlerBackup</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>fd34fb25475</name>..<name>ea87803e6f2</name> 100644
-- <name>a</name>/<name>solr</name>/<name>core</name>/<name>src</name>/<name>test</name>/<name>org</name>/<name>apache</name>/<name>solr</name>/<name>handler</name>/<name><name>TestReplicationHandlerBackup</name><operator>.</operator><name>java</name></name>
++ <name>b</name>/<name>solr</name>/<name>core</name>/<name>src</name>/<name>test</name>/<name>org</name>/<name>apache</name>/<name>solr</name>/<name>handler</name>/<name><name>TestReplicationHandlerBackup</name><operator>.</operator><name>java</name></name>
@@ -43</decl>,6 +43,7 @@ <decl><type ref="prev"/><name>import</name> <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FilenameFilter</name></name></decl>;</decl_stmt>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>URL</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>regex</name><operator>.</operator><name>Matcher</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>regex</name><operator>.</operator><name>Pattern</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">96</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">97</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestReplicationHandlerBackup</name> extends <name>SolrJettyTestBase</name> <block>{
       <expr><name>addNumberToKeepInRequest</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;
       <name>backupKeepParamName</name> <operator>=</operator> <name><name>ReplicationHandler</name><operator>.</operator><name>NUMBER_BACKUPS_TO_KEEP_INIT_PARAM</name></name></block></expr>;</expr_stmt>
     </block_content>}</block></try>
    <expr_stmt><expr><name>master</name> <operator>=</operator> <operator>new</operator> <call><name><name>TestReplicationHandler</name><operator>.</operator><name>SolrInstance</name></name><argument_list>(<argument><expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"solr-instance"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"master"</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>master</name> <operator>=</operator> <operator>new</operator> <call><name><name>TestReplicationHandler</name><operator>.</operator><name>SolrInstance</name></name><argument_list>(<argument><expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"solr-instance"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"master"</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>master</name><operator>.</operator><name>setUp</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>master</name><operator>.</operator><name>copyConfigFile</name></name><argument_list>(<argument><expr><name>CONF_DIR</name> <operator>+</operator> <name>configFile</name></expr></argument>, <argument><expr><literal type="string">"solrconfig.xml"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">193</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">194</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestReplicationHandlerBackup</name> extends <name>SolrJettyTestBase</name> <block>{
         }</block>
         <call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name><name>files</name><operator>.</operator><name>length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><name><name>snapDir</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>files</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>Directory</name></type> <name>dir</name> <init>= <expr><operator>new</operator> <call><name>SimpleFSDirectory</name><argument_list>(<argument><expr><name><name>snapDir</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>getAbsoluteFile</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Directory</name></type> <name>dir</name> <init>= <expr><operator>new</operator> <call><name>SimpleFSDirectory</name><argument_list>(<argument><expr><name><name>snapDir</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>getAbsoluteFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toPath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <decl_stmt><decl><type><name>IndexReader</name></type> <name>reader</name> <init>= <expr><call><name><name>DirectoryReader</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <decl_stmt><decl><type><name>IndexSearcher</name></type> <name>searcher</name> <init>= <expr><operator>new</operator> <call><name>IndexSearcher</name><argument_list>(<argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <decl_stmt><decl><type><name>TopDocs</name></type> <name>hits</name> <init>= <expr><call><name><name>searcher</name><operator>.</operator><name>search</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>MatchAllDocsQuery</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">214</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">215</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestReplicationHandlerBackup</name> extends <name>SolrJettyTestBase</name> <block>{
 
     }</block></expr></expr_stmt> <finally>finally <block>{<block_content>
       <if_stmt><if>if<condition>(<expr><operator>!</operator><name>namedBackup</name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>IOUtils</name><operator>.</operator><name>rm</name></name><argument_list>(<argument><expr><name>snapDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>Path</name></type> <name><name>toDelete</name><index>[]</index></name> <init>= <expr><operator>new</operator> <name><name>Path</name><index>[<expr><name><name>snapDir</name><operator>.</operator><name>length</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>snapDir</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
          <expr_stmt><expr><name><name>toDelete</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>snapDir</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>toPath</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
        <expr_stmt><expr><call><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>IOUtils</name><operator>.</operator><name>rm</name></name><argument_list>(<argument><expr><name>toDelete</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></if></if_stmt>
     </block_content>}</block></finally>
   </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>CoreAdminCreateDiscoverTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>CoreAdminCreateDiscoverTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>ccd43c0071e</name><operator>..</operator><name>edd5fd6520e</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>CoreAdminCreateDiscoverTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>CoreAdminCreateDiscoverTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">50</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">50</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>CoreAdminCreateDiscoverTest</name> extends <name>SolrTestCaseJ4</name> <block>{
   <expr><specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>beforeClass</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><call><name>useFactory</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>; <comment type="line">// I require FS-based indexes for this test.</comment>
 
    <name>solrHomeDirectory</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><name>solrHomeDirectory</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
     <expr_stmt><expr><call><name>setupNoCoreTest</name><argument_list>(<argument><expr><name>solrHomeDirectory</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>CoreAdminHandlerTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>CoreAdminHandlerTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>ebb1b5b6e8b</name><operator>..</operator><name>c6a93abc890</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>CoreAdminHandlerTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>CoreAdminHandlerTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">59</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">59</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>CoreAdminHandlerTest</name> extends <name>SolrTestCaseJ4</name> <block>{
   <expr><specifier>public</specifier> <name>void</name> <call><name>testCreateWithSysVars</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><call><name>useFactory</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>; <comment type="line">// I require FS-based indexes for this test.</comment>
 
    <name>final</name> <name>File</name> <name>workDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><call><name>getCoreName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>File</name></type> <name>workDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><call><name>getCoreName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <decl_stmt><decl><type><name>String</name></type> <name>coreName</name> <init>= <expr><literal type="string">"with_sys_vars"</literal></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>File</name></type> <name>instDir</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>workDir</name></expr></argument>, <argument><expr><name>coreName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">124</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">124</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>CoreAdminHandlerTest</name> extends <name>SolrTestCaseJ4</name> <block>{
 
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testCoreAdminHandler</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>final</name> <name>File</name> <name>workDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>final</name> <name>File</name> <name>workDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     
     <decl_stmt><decl><type><specifier>final</specifier> <name>CoreContainer</name></type> <name>cores</name> <init>= <expr><call><name><name>h</name><operator>.</operator><name>getCoreContainer</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>CoreAdminRequestStatusTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>CoreAdminRequestStatusTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>afa5306b0c0</name><operator>..</operator><literal type="number">017f443398d</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>CoreAdminRequestStatusTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>CoreAdminRequestStatusTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">37</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">37</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>CoreAdminRequestStatusTest</name> extends <name>SolrTestCaseJ4</name><block>{
 
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testCoreAdminRequestStatus</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>final</name> <name>File</name> <name>workDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>final</name> <name>File</name> <name>workDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><specifier>final</specifier> <name>CoreContainer</name></type> <name>cores</name> <init>= <expr><call><name><name>h</name><operator>.</operator><name>getCoreContainer</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>CoreMergeIndexesAdminHandlerTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>CoreMergeIndexesAdminHandlerTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>b8c1e782357</name><operator>..</operator><literal type="number">32b7e02800e</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>CoreMergeIndexesAdminHandlerTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>CoreMergeIndexesAdminHandlerTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">71</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">71</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>CoreMergeIndexesAdminHandlerTest</name> extends <name>SolrTestCaseJ4</name> <block>{
 
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testMergeIndexesCoreAdminHandler</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>final</name> <name>File</name> <name>workDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>final</name> <name>File</name> <name>workDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><specifier>final</specifier> <name>CoreContainer</name></type> <name>cores</name> <init>= <expr><call><name><name>h</name><operator>.</operator><name>getCoreContainer</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>DistributedDebugComponentTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>DistributedDebugComponentTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">3484711f2ed</literal><operator>..</operator><literal type="number">90f5e21c4f7</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>DistributedDebugComponentTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>DistributedDebugComponentTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">53</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">53</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>DistributedDebugComponentTest</name> extends <name>SolrJettyTestBase</name> <block>{
   <expr><specifier>private</specifier> <specifier>static</specifier> <name>File</name> <name>solrHome</name></expr>;
   
   <specifier>private</specifier> <specifier>static</specifier> <name>File</name> <call><name>createSolrHome</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>File</name> <name>workDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>workDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>setupJettyTestHome</name><argument_list>(<argument><expr><name>workDir</name></expr></argument>, <argument><expr><literal type="string">"collection1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>FileUtils</name><operator>.</operator><name>copyDirectory</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>workDir</name></expr></argument>, <argument><expr><literal type="string">"collection1"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>workDir</name></expr></argument>, <argument><expr><literal type="string">"collection2"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <return>return <expr><name>workDir</name></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>request</name><operator>/</operator><name><name>TestRemoteStreaming</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>request</name><operator>/</operator><name><name>TestRemoteStreaming</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">1fdfb23580b</literal><operator>..</operator><literal type="number">2c2a75410aa</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>request</name><operator>/</operator><name><name>TestRemoteStreaming</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>request</name><operator>/</operator><name><name>TestRemoteStreaming</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">56</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">56</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestRemoteStreaming</name> extends <name>SolrJettyTestBase</name> <block>{
   @<expr><name>BeforeClass</name>
   <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>beforeTest</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <comment type="line">//this one has handleSelect=true which a test here needs</comment>
    <expr><name>solrHomeDirectory</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><call><name><name>LuceneTestCase</name><operator>.</operator><name>getTestClass</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getSimpleName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>solrHomeDirectory</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><call><name><name>LuceneTestCase</name><operator>.</operator><name>getTestClass</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getSimpleName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>setupJettyTestHome</name><argument_list>(<argument><expr><name>solrHomeDirectory</name></expr></argument>, <argument><expr><literal type="string">"collection1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>createJetty</name><argument_list>(<argument><expr><call><name><name>solrHomeDirectory</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></decl></decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>rest</name><operator>/</operator><name><name>TestManagedResourceStorage</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>rest</name><operator>/</operator><name><name>TestManagedResourceStorage</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>cd55901c8a1</name><operator>..</operator><name>ffc203d6f36</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>rest</name><operator>/</operator><name><name>TestManagedResourceStorage</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>rest</name><operator>/</operator><name><name>TestManagedResourceStorage</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">70</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">70</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestManagedResourceStorage</name> extends <name>AbstractZkTestCase</name> <block>{
    <expr><operator>*</operator><operator>/</operator>
   @<name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testFileBasedJsonStorage</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>File</name> <name>instanceDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"json-storage"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>File</name> <name>instanceDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"json-storage"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>SolrResourceLoader</name></type> <name>loader</name> <init>= <expr><operator>new</operator> <call><name>SolrResourceLoader</name><argument_list>(<argument><expr><call><name><name>instanceDir</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <try>try <block>{<block_content>
       <decl_stmt><decl><type><name><name>NamedList</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>initArgs</name> <init>= <expr><operator>new</operator> <call><name><name>NamedList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>rest</name><operator>/</operator><name><name>TestRestManager</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>rest</name><operator>/</operator><name><name>TestRestManager</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>d82469ae153</name><operator>..</operator><literal type="number">06f6dc48ce2</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>rest</name><operator>/</operator><name><name>TestRestManager</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>rest</name><operator>/</operator><name><name>TestRestManager</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">229</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">229</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestRestManager</name> extends <name>SolrRestletTestBase</name> <block>{
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testReloadFromPersistentStorage</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><name>SolrResourceLoader</name> <name>loader</name> <operator>=</operator> <operator>new</operator> <call><name>SolrResourceLoader</name><argument_list>(<argument><expr><literal type="string">"./"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>File</name> <name>unitTestStorageDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"testRestManager"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>unitTestStorageDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"testRestManager"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>unitTestStorageDir</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call><operator>+</operator><literal type="string">" is not a directory!"</literal></expr></argument>, 
         <argument><expr><call><name><name>unitTestStorageDir</name><operator>.</operator><name>isDirectory</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>    
     <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>unitTestStorageDir</name><operator>.</operator><name>canRead</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>rest</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>TestManagedSchemaDynamicFieldResource</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>rest</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>TestManagedSchemaDynamicFieldResource</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">466e37212a0</literal><operator>..</operator><literal type="number">05c9c9eabc4</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>rest</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>TestManagedSchemaDynamicFieldResource</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>rest</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>TestManagedSchemaDynamicFieldResource</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">40</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">40</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestManagedSchemaDynamicFieldResource</name> extends <name>RestTestBase</name> <block>{
 
   @<expr><name>Before</name>
   <specifier>public</specifier> <name>void</name> <call><name>before</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>tmpSolrHome</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>tmpSolrHome</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><name>tmpConfDir</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>tmpSolrHome</name></expr></argument>, <argument><expr><name>confDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>FileUtils</name><operator>.</operator><name>copyDirectory</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>TEST_HOME</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>tmpSolrHome</name><operator>.</operator><name>getAbsoluteFile</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>rest</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>TestManagedSchemaFieldResource</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>rest</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>TestManagedSchemaFieldResource</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>dffa9e8b373</name><operator>..</operator><name>d14618720c5</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>rest</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>TestManagedSchemaFieldResource</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>rest</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>TestManagedSchemaFieldResource</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">40</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">40</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestManagedSchemaFieldResource</name> extends <name>RestTestBase</name> <block>{
 
   @<expr><name>Before</name>
   <specifier>public</specifier> <name>void</name> <call><name>before</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>tmpSolrHome</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>tmpSolrHome</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><name>tmpConfDir</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>tmpSolrHome</name></expr></argument>, <argument><expr><name>confDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>FileUtils</name><operator>.</operator><name>copyDirectory</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>TEST_HOME</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>tmpSolrHome</name><operator>.</operator><name>getAbsoluteFile</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>rest</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>TestManagedSchemaFieldTypeResource</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>rest</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>TestManagedSchemaFieldTypeResource</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">4bac2feea1b</literal><operator>..</operator><literal type="number">26fab12dcc6</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>rest</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>TestManagedSchemaFieldTypeResource</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>rest</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>TestManagedSchemaFieldTypeResource</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">44</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">44</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestManagedSchemaFieldTypeResource</name> extends <name>RestTestBase</name> <block>{
 
   @<expr><name>Before</name>
   <specifier>public</specifier> <name>void</name> <call><name>before</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>tmpSolrHome</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>tmpSolrHome</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><name>tmpConfDir</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>tmpSolrHome</name></expr></argument>, <argument><expr><name>confDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>FileUtils</name><operator>.</operator><name>copyDirectory</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>TEST_HOME</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>tmpSolrHome</name><operator>.</operator><name>getAbsoluteFile</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>rest</name><operator>/</operator><name>schema</name><operator>/</operator><name>analysis</name><operator>/</operator><name><name>TestManagedStopFilterFactory</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>rest</name><operator>/</operator><name>schema</name><operator>/</operator><name>analysis</name><operator>/</operator><name><name>TestManagedStopFilterFactory</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">9cf083b1833</literal><operator>..</operator><literal type="number">3b29557959e</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>rest</name><operator>/</operator><name>schema</name><operator>/</operator><name>analysis</name><operator>/</operator><name><name>TestManagedStopFilterFactory</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>rest</name><operator>/</operator><name>schema</name><operator>/</operator><name>analysis</name><operator>/</operator><name><name>TestManagedStopFilterFactory</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">44</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">44</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestManagedStopFilterFactory</name> extends <name>RestTestBase</name> <block>{
 
   @<expr><name>Before</name>
   <specifier>public</specifier> <name>void</name> <call><name>before</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>tmpSolrHome</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>tmpSolrHome</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><name>tmpConfDir</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>tmpSolrHome</name></expr></argument>, <argument><expr><name>confDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>FileUtils</name><operator>.</operator><name>copyDirectory</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>TEST_HOME</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>tmpSolrHome</name><operator>.</operator><name>getAbsoluteFile</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>rest</name><operator>/</operator><name>schema</name><operator>/</operator><name>analysis</name><operator>/</operator><name><name>TestManagedSynonymFilterFactory</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>rest</name><operator>/</operator><name>schema</name><operator>/</operator><name>analysis</name><operator>/</operator><name><name>TestManagedSynonymFilterFactory</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">4eb1e53df78</literal><operator>..</operator><literal type="number">2b20aa2dda0</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>rest</name><operator>/</operator><name>schema</name><operator>/</operator><name>analysis</name><operator>/</operator><name><name>TestManagedSynonymFilterFactory</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>rest</name><operator>/</operator><name>schema</name><operator>/</operator><name>analysis</name><operator>/</operator><name><name>TestManagedSynonymFilterFactory</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">42</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">42</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestManagedSynonymFilterFactory</name> extends <name>RestTestBase</name> <block>{
    <expr><operator>*</operator><operator>/</operator>
   @<name>Before</name>
   <specifier>public</specifier> <name>void</name> <call><name>before</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>tmpSolrHome</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>tmpSolrHome</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>FileUtils</name><operator>.</operator><name>copyDirectory</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>TEST_HOME</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>tmpSolrHome</name><operator>.</operator><name>getAbsoluteFile</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><specifier>final</specifier> <name><name>SortedMap</name><argument_list type="generic">&lt;<argument><name>ServletHolder</name></argument>,<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>extraServlets</name> <init>= <expr><operator>new</operator> <call><name><name>TreeMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>ChangedSchemaMergeTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>ChangedSchemaMergeTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">65425a78267</literal><operator>..</operator><literal type="number">8e1486a14b1</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>ChangedSchemaMergeTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>ChangedSchemaMergeTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">40</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">40</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ChangedSchemaMergeTest</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><call><name>initCore</name><argument_list>()</argument_list></call></expr>;
   }</block></expr></expr_stmt>
 
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>File</name></type> <name>solrHomeDirectory</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>File</name></type> <name>solrHomeDirectory</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <name>File</name></type> <name>schemaFile</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
 
   <function><type><specifier>private</specifier> <name>void</name></type> <name>addDoc</name><parameter_list>(<parameter><decl><type><name>SolrCore</name></type> <name>core</name></decl></parameter>, <parameter><decl><type><name>String</name><modifier>...</modifier></type> <name>fieldValues</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>ModifyConfFileTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>ModifyConfFileTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">08774709389..43f39c67955</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>ModifyConfFileTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>ModifyConfFileTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">43</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">43</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>rules</name><operator>.</operator><name>TestRule</name></name>;</import>
 <import>import <name><name>com</name><operator>.</operator><name>carrotsearch</name><operator>.</operator><name>randomizedtesting</name><operator>.</operator><name>rules</name><operator>.</operator><name>SystemPropertiesRestoreRule</name></name>;</import>
 
 <class><specifier>public</specifier> class <name>ModifyConfFileTest</name> <super_list><extends>extends <super><name>SolrTestCaseJ4</name></super></extends></super_list> <block>{
  <decl_stmt><decl><type><specifier>private</specifier> <name>File</name></type> <name>solrHomeDirectory</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>File</name></type> <name>solrHomeDirectory</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
   <decl_stmt><decl><annotation>@<name>Rule</name></annotation>
   <type><specifier>public</specifier> <name>TestRule</name></type> <name>solrTestRules</name> <init>= <expr><call><name><name>RuleChain</name><operator>.</operator><name>outerRule</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>SystemPropertiesRestoreRule</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">52</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">52</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ModifyConfFileTest</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><call><name><name>System</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"solr.test.sys.prop1"</literal></expr></argument>, <argument><expr><literal type="string">"propone"</literal></expr></argument>)</argument_list></call></expr>;
     <call><name><name>System</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"solr.test.sys.prop2"</literal></expr></argument>, <argument><expr><literal type="string">"proptwo"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
 
    <expr_stmt><expr><name>solrHomeDirectory</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>solrHomeDirectory</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
     <expr_stmt><expr><call><name>copySolrHomeToTemp</name><argument_list>(<argument><expr><name>solrHomeDirectory</name></expr></argument>, <argument><expr><literal type="string">"core1"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>FileUtils</name><operator>.</operator><name>write</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>solrHomeDirectory</name></expr></argument>, <argument><expr><literal type="string">"core1"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"core.properties"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><call><name><name>Charsets</name><operator>.</operator><name>UTF_8</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>TestBinaryField</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>TestBinaryField</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>e2b9c2b80e6</name><operator>..</operator><name>f1175358864</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>TestBinaryField</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>TestBinaryField</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">35</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">35</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestBinaryField</name> extends <name>SolrJettyTestBase</name> <block>{
 
   @<expr><name>BeforeClass</name>
   <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>beforeTest</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>File</name> <name>homeDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>File</name> <name>homeDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><name>File</name></type> <name>collDir</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>homeDir</name></expr></argument>, <argument><expr><literal type="string">"collection1"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>File</name></type> <name>dataDir</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>collDir</name></expr></argument>, <argument><expr><literal type="string">"data"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>TestCollationField</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>TestCollationField</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>b92013d751b</name><operator>..</operator><name>db63a8fa0f4</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>TestCollationField</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>TestCollationField</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">63</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">63</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestCollationField</name> extends <name>SolrTestCaseJ4</name> <block>{
    <expr><operator>*</operator><operator>/</operator>
   <specifier>public</specifier> <specifier>static</specifier> <name>String</name> <call><name>setupSolrHome</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <comment type="line">// make a solr home underneath the test's TEMP_DIR</comment>
    <expr><name>File</name> <name>tmpFile</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"collation1"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>File</name> <name>tmpFile</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"collation1"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     
     <comment type="line">// make data and conf dirs</comment>
     <expr_stmt><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>tmpFile</name></expr></argument>, <argument><expr><literal type="string">"data"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>mkdir</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>TestCollationFieldDocValues</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>TestCollationFieldDocValues</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">70bfb79c2a5</literal><operator>..</operator><literal type="number">5ecde3bf734</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>TestCollationFieldDocValues</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>TestCollationFieldDocValues</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">61</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">61</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestCollationFieldDocValues</name> extends <name>SolrTestCaseJ4</name> <block>{
    <expr><operator>*</operator><operator>/</operator>
   <specifier>public</specifier> <specifier>static</specifier> <name>String</name> <call><name>setupSolrHome</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <comment type="line">// make a solr home underneath the test's TEMP_DIR</comment>
    <expr><name>File</name> <name>tmpFile</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"collation1"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>File</name> <name>tmpFile</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"collation1"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     
     <comment type="line">// make data and conf dirs</comment>
     <expr_stmt><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>tmpFile</name></expr></argument>, <argument><expr><literal type="string">"data"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>mkdir</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>TestManagedSchema</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>TestManagedSchema</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">0636606af41</literal><operator>..</operator><literal type="number">343c27e37d4</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>TestManagedSchema</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>TestManagedSchema</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">47</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">47</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestManagedSchema</name> extends <name>AbstractBadConfigTestBase</name> <block>{
   
   @<expr><name>Before</name>
   <specifier>private</specifier> <name>void</name> <call><name>initManagedSchemaCore</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>tmpSolrHome</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>tmpSolrHome</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><name>tmpConfDir</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>tmpSolrHome</name></expr></argument>, <argument><expr><name>confDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>File</name></type> <name>testHomeConfDir</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>TEST_HOME</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>confDir</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>FileUtils</name><operator>.</operator><name>copyFileToDirectory</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>testHomeConfDir</name></expr></argument>, <argument><expr><literal type="string">"solrconfig-managed-schema.xml"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>tmpConfDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestAddFieldRealTimeGet</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestAddFieldRealTimeGet</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">7beeab99986</literal><operator>..</operator><literal type="number">475f9e98f62</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestAddFieldRealTimeGet</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestAddFieldRealTimeGet</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">35</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">35</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestAddFieldRealTimeGet</name> extends <name>TestRTGBase</name> <block>{
 
   @<expr><name>Before</name>
   <specifier>private</specifier> <name>void</name> <call><name>initManagedSchemaCore</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>final</name> <name>String</name> <name>tmpSolrHomePath</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>final</name> <name>String</name> <name>tmpSolrHomePath</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><name>tmpSolrHome</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>tmpSolrHomePath</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getAbsoluteFile</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>tmpConfDir</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>tmpSolrHome</name></expr></argument>, <argument><expr><name>confDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>File</name></type> <name>testHomeConfDir</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>TEST_HOME</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>confDir</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestRecoveryHdfs</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestRecoveryHdfs</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>d244cfec880</name><operator>..</operator><literal type="number">65af5998e61</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestRecoveryHdfs</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestRecoveryHdfs</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">77</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">77</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestRecoveryHdfs</name> extends <name>SolrTestCaseJ4</name> <block>{
   
   @<expr><name>BeforeClass</name>
   <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>beforeClass</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>dfsCluster</name> <operator>=</operator> <call><name><name>HdfsTestUtil</name><operator>.</operator><name>setupClass</name></name><argument_list>(<argument><expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>dfsCluster</name> <operator>=</operator> <call><name><name>HdfsTestUtil</name><operator>.</operator><name>setupClass</name></name><argument_list>(<argument><expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"solr.hdfs.home"</literal></expr></argument>, <argument><expr><call><name><name>dfsCluster</name><operator>.</operator><name>getURI</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"/solr"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>hdfsUri</name> <operator>=</operator> <call><name><name>dfsCluster</name><operator>.</operator><name>getFileSystem</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getUri</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSearcherReuse</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSearcherReuse</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>ff056b3562d</name><operator>..</operator><literal type="number">6d759710369</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSearcherReuse</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSearcherReuse</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">49</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">49</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSearcherReuse</name> extends <name>SolrTestCaseJ4</name> <block>{
    <expr><operator>*</operator><operator>/</operator>
   @<name>BeforeClass</name>
   <specifier>private</specifier> <specifier>static</specifier> <name>void</name> <call><name>setupTempDirAndCoreWithManagedSchema</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>solrHome</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>solrHome</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><name>solrHome</name> <operator>=</operator> <call><name><name>solrHome</name><operator>.</operator><name>getAbsoluteFile</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><name>File</name></type> <name>confDir</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>solrHome</name></expr></argument>, <argument><expr><name>confPath</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>servlet</name><operator>/</operator><name><name>CacheHeaderTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>servlet</name><operator>/</operator><name><name>CacheHeaderTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>c00b37219be</name><operator>..</operator><literal type="number">3ce4f45c9f3</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>servlet</name><operator>/</operator><name><name>CacheHeaderTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>servlet</name><operator>/</operator><name><name>CacheHeaderTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">44</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">44</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>CacheHeaderTest</name> extends <name>CacheHeaderTestBase</name> <block>{
     
   @<expr><name>BeforeClass</name>
   <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>beforeTest</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>solrHomeDirectory</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>solrHomeDirectory</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>setupJettyTestHome</name><argument_list>(<argument><expr><name>solrHomeDirectory</name></expr></argument>, <argument><expr><literal type="string">"collection1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>createJetty</name><argument_list>(<argument><expr><call><name><name>solrHomeDirectory</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   }</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>servlet</name><operator>/</operator><name><name>ResponseHeaderTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>servlet</name><operator>/</operator><name><name>ResponseHeaderTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">6736cdac252</literal><operator>..</operator><name>e64eae75cf6</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>servlet</name><operator>/</operator><name><name>ResponseHeaderTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>servlet</name><operator>/</operator><name><name>ResponseHeaderTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">47</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">47</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ResponseHeaderTest</name> extends <name>SolrJettyTestBase</name> <block>{
   
   @<expr><name>BeforeClass</name>
   <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>beforeTest</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>solrHomeDirectory</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>solrHomeDirectory</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>setupJettyTestHome</name><argument_list>(<argument><expr><name>solrHomeDirectory</name></expr></argument>, <argument><expr><literal type="string">"collection1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>String</name></type> <name>top</name> <init>= <expr><call><name><name>SolrTestCaseJ4</name><operator>.</operator><name>TEST_HOME</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"/collection1/conf"</literal></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>FileUtils</name><operator>.</operator><name>copyFile</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>top</name></expr></argument>, <argument><expr><literal type="string">"solrconfig-headers.xml"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>solrHomeDirectory</name> <operator>+</operator> <literal type="string">"/collection1/conf"</literal></expr></argument>, <argument><expr><literal type="string">"solrconfig.xml"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>spelling</name><operator>/</operator><name><name>FileBasedSpellCheckerTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>spelling</name><operator>/</operator><name><name>FileBasedSpellCheckerTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>f2f0e48b44d</name><operator>..</operator><literal type="number">9f56223e953</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>spelling</name><operator>/</operator><name><name>FileBasedSpellCheckerTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>spelling</name><operator>/</operator><name><name>FileBasedSpellCheckerTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">71</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">71</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>FileBasedSpellCheckerTest</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><call><name><name>spellchecker</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name><name>AbstractLuceneSpellChecker</name><operator>.</operator><name>LOCATION</name></name></expr></argument>, <argument><expr><literal type="string">"spellings.txt"</literal></expr></argument>)</argument_list></call></expr>;
     <call><name><name>spellchecker</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name><name>AbstractLuceneSpellChecker</name><operator>.</operator><name>FIELD</name></name></expr></argument>, <argument><expr><literal type="string">"teststop"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>spellchecker</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name><name>FileBasedSpellChecker</name><operator>.</operator><name>SOURCE_FILE_CHAR_ENCODING</name></name></expr></argument>, <argument><expr><literal type="string">"UTF-8"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>indexDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><call><name><name>LuceneTestCase</name><operator>.</operator><name>getTestClass</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getSimpleName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>indexDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><call><name><name>LuceneTestCase</name><operator>.</operator><name>getTestClass</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getSimpleName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>spellchecker</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name><name>AbstractLuceneSpellChecker</name><operator>.</operator><name>INDEX_DIR</name></name></expr></argument>, <argument><expr><call><name><name>indexDir</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>SolrCore</name></type> <name>core</name> <init>= <expr><call><name><name>h</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>String</name></type> <name>dictName</name> <init>= <expr><call><name><name>checker</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>spellchecker</name></expr></argument>, <argument><expr><name>core</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">106</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">106</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>FileBasedSpellCheckerTest</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><call><name><name>spellchecker</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name><name>AbstractLuceneSpellChecker</name><operator>.</operator><name>LOCATION</name></name></expr></argument>, <argument><expr><literal type="string">"spellings.txt"</literal></expr></argument>)</argument_list></call></expr>;
     <call><name><name>spellchecker</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name><name>AbstractLuceneSpellChecker</name><operator>.</operator><name>FIELD</name></name></expr></argument>, <argument><expr><literal type="string">"teststop"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>spellchecker</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name><name>FileBasedSpellChecker</name><operator>.</operator><name>SOURCE_FILE_CHAR_ENCODING</name></name></expr></argument>, <argument><expr><literal type="string">"UTF-8"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>indexDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>indexDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>indexDir</name><operator>.</operator><name>mkdirs</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>spellchecker</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name><name>AbstractLuceneSpellChecker</name><operator>.</operator><name>INDEX_DIR</name></name></expr></argument>, <argument><expr><call><name><name>indexDir</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>spellchecker</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name><name>SolrSpellChecker</name><operator>.</operator><name>FIELD_TYPE</name></name></expr></argument>, <argument><expr><literal type="string">"teststop"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>spelling</name><operator>/</operator><name><name>IndexBasedSpellCheckerTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>spelling</name><operator>/</operator><name><name>IndexBasedSpellCheckerTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">2906a3fe71b</literal><operator>..</operator><literal type="number">75de4db7ca6</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>spelling</name><operator>/</operator><name><name>IndexBasedSpellCheckerTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>spelling</name><operator>/</operator><name><name>IndexBasedSpellCheckerTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">110</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">110</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>IndexBasedSpellCheckerTest</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><name>NamedList</name> <name>spellchecker</name> <operator>=</operator> <operator>new</operator> <call><name>NamedList</name><argument_list>()</argument_list></call></expr>;
     <call><name><name>spellchecker</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"classname"</literal></expr></argument>, <argument><expr><call><name><name>IndexBasedSpellChecker</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
 
    <decl_stmt><decl><type><name>File</name></type> <name>indexDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>indexDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <expr_stmt><expr><call><name><name>spellchecker</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name><name>AbstractLuceneSpellChecker</name><operator>.</operator><name>INDEX_DIR</name></name></expr></argument>, <argument><expr><call><name><name>indexDir</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>spellchecker</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name><name>AbstractLuceneSpellChecker</name><operator>.</operator><name>FIELD</name></name></expr></argument>, <argument><expr><literal type="string">"title"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">186</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">186</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>IndexBasedSpellCheckerTest</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><name>NamedList</name> <name>spellchecker</name> <operator>=</operator> <operator>new</operator> <call><name>NamedList</name><argument_list>()</argument_list></call></expr>;
     <call><name><name>spellchecker</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"classname"</literal></expr></argument>, <argument><expr><call><name><name>IndexBasedSpellChecker</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
 
    <decl_stmt><decl><type><name>File</name></type> <name>indexDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>indexDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>indexDir</name><operator>.</operator><name>mkdirs</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>spellchecker</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name><name>AbstractLuceneSpellChecker</name><operator>.</operator><name>INDEX_DIR</name></name></expr></argument>, <argument><expr><call><name><name>indexDir</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>spellchecker</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name><name>AbstractLuceneSpellChecker</name><operator>.</operator><name>FIELD</name></name></expr></argument>, <argument><expr><literal type="string">"title"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">243</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">243</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>IndexBasedSpellCheckerTest</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><name>NamedList</name> <name>spellchecker</name> <operator>=</operator> <operator>new</operator> <call><name>NamedList</name><argument_list>()</argument_list></call></expr>;
     <call><name><name>spellchecker</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"classname"</literal></expr></argument>, <argument><expr><call><name><name>IndexBasedSpellChecker</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
 
    <decl_stmt><decl><type><name>File</name></type> <name>indexDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>indexDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>spellchecker</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name><name>AbstractLuceneSpellChecker</name><operator>.</operator><name>INDEX_DIR</name></name></expr></argument>, <argument><expr><call><name><name>indexDir</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>spellchecker</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name><name>AbstractLuceneSpellChecker</name><operator>.</operator><name>FIELD</name></name></expr></argument>, <argument><expr><literal type="string">"title"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>spellchecker</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name><name>AbstractLuceneSpellChecker</name><operator>.</operator><name>SPELLCHECKER_ARG_NAME</name></name></expr></argument>, <argument><expr><name>spellchecker</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">282</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">282</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>IndexBasedSpellCheckerTest</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><name>NamedList</name> <name>spellchecker</name> <operator>=</operator> <operator>new</operator> <call><name>NamedList</name><argument_list>()</argument_list></call></expr>;
     <call><name><name>spellchecker</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"classname"</literal></expr></argument>, <argument><expr><call><name><name>IndexBasedSpellChecker</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     
    <decl_stmt><decl><type><name>File</name></type> <name>tmpDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>tmpDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>File</name></type> <name>indexDir</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>tmpDir</name></expr></argument>, <argument><expr><literal type="string">"spellingIdx"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <comment type="line">//create a standalone index</comment>
     <decl_stmt><decl><type><name>File</name></type> <name>altIndexDir</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>tmpDir</name></expr></argument>, <argument><expr><literal type="string">"alternateIdx"</literal> <operator>+</operator> <operator>new</operator> <call><name>Date</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTime</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Directory</name></type> <name>dir</name> <init>= <expr><call><name>newFSDirectory</name><argument_list>(<argument><expr><name>altIndexDir</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Directory</name></type> <name>dir</name> <init>= <expr><call><name>newFSDirectory</name><argument_list>(<argument><expr><call><name><name>altIndexDir</name><operator>.</operator><name>toPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>IndexWriter</name></type> <name>iw</name> <init>= <expr><operator>new</operator> <call><name>IndexWriter</name><argument_list>(
         <argument><expr><name>dir</name></expr></argument>,
         <argument><expr><operator>new</operator> <call><name>IndexWriterConfig</name><argument_list>(<argument><expr><operator>new</operator> <call><name>WhitespaceAnalyzer</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>store</name><operator>/</operator><name>blockcache</name><operator>/</operator><name><name>BlockDirectoryTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>store</name><operator>/</operator><name>blockcache</name><operator>/</operator><name><name>BlockDirectoryTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">7deaf51f04e</literal><operator>..</operator><literal type="number">4de0b42d825</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>store</name><operator>/</operator><name>blockcache</name><operator>/</operator><name><name>BlockDirectoryTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>store</name><operator>/</operator><name>blockcache</name><operator>/</operator><name><name>BlockDirectoryTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">105</literal></expr></argument>,<argument><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">105</literal></expr></argument>,<argument><expr><literal type="number">8</literal> @@ <specifier>public</specifier> class <name>BlockDirectoryTest</name> extends <name>SolrTestCaseJ4</name> <block>{
   @<expr><name>Before</name>
   <specifier>public</specifier> <name>void</name> <call><name>setUp</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><call><name><name>super</name><operator>.</operator><name>setUp</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>file</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></block></expr></argument>;</argument_list></call></expr></init></decl></decl_stmt>
    <decl_stmt><decl><type><name>FSDirectory</name></type> <name>dir</name> <init>= <expr><call><name><name>FSDirectory</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>file</name></expr></argument>, <argument><expr><literal type="string">"base"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>file</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>FSDirectory</name></type> <name>dir</name> <init>= <expr><call><name><name>FSDirectory</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>file</name></expr></argument>, <argument><expr><literal type="string">"base"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toPath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><name>mapperCache</name> <operator>=</operator> <operator>new</operator> <call><name>MapperCache</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>directory</name> <operator>=</operator> <operator>new</operator> <call><name>BlockDirectory</name><argument_list>(<argument><expr><literal type="string">"test"</literal></expr></argument>, <argument><expr><name>dir</name></expr></argument>, <argument><expr><name>mapperCache</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>random</name> <operator>=</operator> <call><name>random</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">120</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">120</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>BlockDirectoryTest</name> extends <name>SolrTestCaseJ4</name> <block>{
 
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testEOF</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><name>Directory</name> <name>fsDir</name> <operator>=</operator> <call><name><name>FSDirectory</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>file</name></expr></argument>, <argument><expr><literal type="string">"normal"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>Directory</name> <name>fsDir</name> <operator>=</operator> <call><name><name>FSDirectory</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>file</name></expr></argument>, <argument><expr><literal type="string">"normal"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toPath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>String</name></type> <name>name</name> <init>= <expr><literal type="string">"test.eof"</literal></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>createFile</name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><name>fsDir</name></expr></argument>, <argument><expr><name>directory</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>long</name></type> <name>fsLength</name> <init>= <expr><call><name><name>fsDir</name><operator>.</operator><name>fileLength</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">152</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">152</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>BlockDirectoryTest</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><name>int</name> <name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</block></expr></expr_stmt>
     <try>try <block>{<block_content>
       <for>for <control>(<init>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">10</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
        <decl_stmt><decl><type><name>Directory</name></type> <name>fsDir</name> <init>= <expr><call><name><name>FSDirectory</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>file</name></expr></argument>, <argument><expr><literal type="string">"normal"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Directory</name></type> <name>fsDir</name> <init>= <expr><call><name><name>FSDirectory</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>file</name></expr></argument>, <argument><expr><literal type="string">"normal"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toPath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <decl_stmt><decl><type><name>String</name></type> <name>name</name> <init>= <expr><call><name>getName</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
         <expr_stmt><expr><call><name>createFile</name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><name>fsDir</name></expr></argument>, <argument><expr><name>directory</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><call><name>assertInputsEquals</name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><name>fsDir</name></expr></argument>, <argument><expr><name>directory</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">234</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">234</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>BlockDirectoryTest</name> extends <name>SolrTestCaseJ4</name> <block>{
 
   <expr><specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>rm</name><argument_list>(<argument><expr><name>File</name> <name>file</name></expr></argument>)</argument_list></call> <block>{
     <try>try <block>{<block_content>
      <expr_stmt><expr><call><name><name>IOUtils</name><operator>.</operator><name>rm</name></name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>IOUtils</name><operator>.</operator><name>rm</name></name><argument_list>(<argument><expr><call><name><name>file</name><operator>.</operator><name>toPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt/></block_content></block></try></block></expr>}</block></expr></expr_stmt> <catch>catch <parameter_list>(<parameter><decl><type><name>Throwable</name></type> <name>ignored</name></decl></parameter>)</parameter_list> <block>{<block_content>
       <comment type="line">// TODO: should this class care if a file couldnt be deleted?</comment>
       <comment type="line">// this just emulates previous behavior, where only SecurityException would be handled.</comment>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>store</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsDirectoryTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>store</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsDirectoryTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">533c74c09cd</literal><operator>..</operator><literal type="number">3d0bc0d8e14</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>store</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsDirectoryTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>store</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsDirectoryTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">57</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">57</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>HdfsDirectoryTest</name> extends <name>SolrTestCaseJ4</name> <block>{
 
   @<expr><name>BeforeClass</name>
   <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>beforeClass</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>dfsCluster</name> <operator>=</operator> <call><name><name>HdfsTestUtil</name><operator>.</operator><name>setupClass</name></name><argument_list>(<argument><expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>dfsCluster</name> <operator>=</operator> <call><name><name>HdfsTestUtil</name><operator>.</operator><name>setupClass</name></name><argument_list>(<argument><expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
   </block_content>}</block></catch>
   
   <annotation>@<name>AfterClass</name></annotation>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">73</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">73</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>HdfsDirectoryTest</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><name>Configuration</name> <name>conf</name> <operator>=</operator> <operator>new</operator> <call><name>Configuration</name><argument_list>()</argument_list></call></expr>;
     <call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"dfs.permissions.enabled"</literal></expr></argument>, <argument><expr><literal type="string">"false"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     
    <expr_stmt><expr><name>directory</name> <operator>=</operator> <operator>new</operator> <call><name>HdfsDirectory</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><call><name><name>dfsCluster</name><operator>.</operator><name>getURI</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call> <operator>+</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"/hdfs"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>directory</name> <operator>=</operator> <operator>new</operator> <call><name>HdfsDirectory</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><call><name><name>dfsCluster</name><operator>.</operator><name>getURI</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call> <operator>+</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"/hdfs"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     
     <expr_stmt><expr><name>random</name> <operator>=</operator> <call><name>random</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></for>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>store</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsLockFactoryTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>store</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsLockFactoryTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">76f7b26543d</literal><operator>..</operator><literal type="number">94d895321c3</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>store</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsLockFactoryTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>store</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsLockFactoryTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">42</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">42</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>HdfsLockFactoryTest</name> extends <name>SolrTestCaseJ4</name> <block>{
 
   @<expr><name>BeforeClass</name>
   <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>beforeClass</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>dfsCluster</name> <operator>=</operator> <call><name><name>HdfsTestUtil</name><operator>.</operator><name>setupClass</name></name><argument_list>(<argument><expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>dfsCluster</name> <operator>=</operator> <call><name><name>HdfsTestUtil</name><operator>.</operator><name>setupClass</name></name><argument_list>(<argument><expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
   </block_content>}</block></try>
 
   <annotation>@<name>AfterClass</name></annotation>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>update</name><operator>/</operator><name><name>SolrIndexSplitterTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>update</name><operator>/</operator><name><name>SolrIndexSplitterTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>a0d1279c580</name><operator>..</operator><name>f128f9ce2e4</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>update</name><operator>/</operator><name><name>SolrIndexSplitterTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>update</name><operator>/</operator><name><name>SolrIndexSplitterTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">56</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">56</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrIndexSplitterTest</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><call><name><name>super</name><operator>.</operator><name>setUp</name></name><argument_list>()</argument_list></call></expr>;
     <call><name>clearIndex</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertU</name><argument_list>(<argument><expr><call><name>commit</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>indexDir1</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"_testSplit1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>indexDir2</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"_testSplit2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>indexDir3</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"_testSplit3"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>indexDir1</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"_testSplit1"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>indexDir2</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"_testSplit2"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>indexDir3</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"_testSplit3"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
 
   <annotation>@<name>Test</name></annotation>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">241</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">241</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrIndexSplitterTest</name> extends <name>SolrTestCaseJ4</name> <block>{
 
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testSplitByRouteKey</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name>  <block>{
    <expr><name>File</name> <name>indexDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>File</name> <name>indexDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><name>CompositeIdRouter</name></type> <name>r1</name> <init>= <expr><operator>new</operator> <call><name>CompositeIdRouter</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>String</name></type> <name>splitKey</name> <init>= <expr><literal type="string">"sea-line!"</literal></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>update</name><operator>/</operator><name>processor</name><operator>/</operator><name><name>AddSchemaFieldsUpdateProcessorFactoryTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>update</name><operator>/</operator><name>processor</name><operator>/</operator><name><name>AddSchemaFieldsUpdateProcessorFactoryTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">5b390191ce9</literal><operator>..</operator><literal type="number">1d640db4a9f</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>update</name><operator>/</operator><name>processor</name><operator>/</operator><name><name>AddSchemaFieldsUpdateProcessorFactoryTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>update</name><operator>/</operator><name>processor</name><operator>/</operator><name><name>AddSchemaFieldsUpdateProcessorFactoryTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">46</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">46</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>AddSchemaFieldsUpdateProcessorFactoryTest</name> extends <name>UpdateProcessorTe</name>
 
   @<name>Before</name>
   <specifier>private</specifier> <name>void</name> <call><name>initManagedSchemaCore</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>tmpSolrHome</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <expr_stmt><expr><name>tmpSolrHome</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>tmpConfDir</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>tmpSolrHome</name></expr></argument>, <argument><expr><name>confDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>File</name></type> <name>testHomeConfDir</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>TEST_HOME</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>confDir</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>FileUtils</name><operator>.</operator><name>copyFileToDirectory</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>testHomeConfDir</name></expr></argument>, <argument><expr><name>SOLRCONFIG_XML</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>tmpConfDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>solrj</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>client</name><operator>/</operator><name>solrj</name><operator>/</operator><name><name>MergeIndexesExampleTestBase</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>solrj</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>client</name><operator>/</operator><name>solrj</name><operator>/</operator><name><name>MergeIndexesExampleTestBase</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">7a0a6185620</literal><operator>..</operator><name>d11e3bba0cc</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>solrj</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>client</name><operator>/</operator><name>solrj</name><operator>/</operator><name><name>MergeIndexesExampleTestBase</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>solrj</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>client</name><operator>/</operator><name>solrj</name><operator>/</operator><name><name>MergeIndexesExampleTestBase</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">67</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">67</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>MergeIndexesExampleTestBase</name> extends <name>SolrExampleTestBase</name> <block>{
     <expr><name>saveProp</name> <operator>=</operator> <call><name><name>System</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><literal type="string">"solr.directoryFactory"</literal></expr></argument>)</argument_list></call></expr>;
     <call><name><name>System</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"solr.directoryFactory"</literal></expr></argument>, <argument><expr><literal type="string">"solr.StandardDirectoryFactory"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>setUp</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>dataDir1</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>dataDir1</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <comment type="line">// setup datadirs</comment>
     <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>setProperty</name></name><argument_list>( <argument><expr><literal type="string">"solr.core0.data.dir"</literal></expr></argument>, <argument><expr><call><name><name>dataDir1</name><operator>.</operator><name>getCanonicalPath</name></name><argument_list>()</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
 
    <expr_stmt><expr><name>dataDir2</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>dataDir2</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
     <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>setProperty</name></name><argument_list>( <argument><expr><literal type="string">"solr.core1.data.dir"</literal></expr></argument>, <argument><expr><call><name><name>this</name><operator>.</operator><name>dataDir2</name><operator>.</operator><name>getCanonicalPath</name></name><argument_list>()</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>solrj</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>client</name><operator>/</operator><name>solrj</name><operator>/</operator><name><name>MultiCoreExampleTestBase</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>solrj</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>client</name><operator>/</operator><name>solrj</name><operator>/</operator><name><name>MultiCoreExampleTestBase</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">9a79b4fb99e</literal><operator>..</operator><literal type="number">0d7659f0812</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>solrj</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>client</name><operator>/</operator><name>solrj</name><operator>/</operator><name><name>MultiCoreExampleTestBase</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>solrj</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>client</name><operator>/</operator><name>solrj</name><operator>/</operator><name><name>MultiCoreExampleTestBase</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">57</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">57</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>MultiCoreExampleTestBase</name> extends <name>SolrExampleTestBase</name>
 
   @<name>Override</name> <specifier>public</specifier> <name>void</name> <call><name>setUp</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><call><name><name>super</name><operator>.</operator><name>setUp</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <expr_stmt><expr><name>dataDir1</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>dataDir2</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>dataDir1</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>dataDir2</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     
     <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>setProperty</name></name><argument_list>( <argument><expr><literal type="string">"solr.core0.data.dir"</literal></expr></argument>, <argument><expr><call><name><name>this</name><operator>.</operator><name>dataDir1</name><operator>.</operator><name>getCanonicalPath</name></name><argument_list>()</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt> 
     <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>setProperty</name></name><argument_list>( <argument><expr><literal type="string">"solr.core1.data.dir"</literal></expr></argument>, <argument><expr><call><name><name>this</name><operator>.</operator><name>dataDir2</name><operator>.</operator><name>getCanonicalPath</name></name><argument_list>()</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>solrj</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>client</name><operator>/</operator><name>solrj</name><operator>/</operator><name><name>SolrSchemalessExampleTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>solrj</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>client</name><operator>/</operator><name>solrj</name><operator>/</operator><name><name>SolrSchemalessExampleTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">8a89891041b</literal><operator>..</operator><name>aee09e47ad2</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>solrj</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>client</name><operator>/</operator><name>solrj</name><operator>/</operator><name><name>SolrSchemalessExampleTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>solrj</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>client</name><operator>/</operator><name>solrj</name><operator>/</operator><name><name>SolrSchemalessExampleTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">39</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">39</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrSchemalessExampleTest</name> extends <name>SolrExampleTestsBase</name> <block>{
 
   @<expr><name>BeforeClass</name>
   <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>beforeClass</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>File</name> <name>tempSolrHome</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>File</name> <name>tempSolrHome</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <comment type="line">// Schemaless renames schema.xml -&gt; schema.xml.bak, and creates + modifies conf/managed-schema,</comment>
     <comment type="line">// which violates the test security manager's rules, which disallow writes outside the build dir,</comment>
     <comment type="line">// so we copy the example/example-schemaless/solr/ directory to a new temp dir where writes are allowed. </comment>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>solrj</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>client</name><operator>/</operator><name>solrj</name><operator>/</operator><name><name>TestLBHttpSolrServer</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>solrj</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>client</name><operator>/</operator><name>solrj</name><operator>/</operator><name><name>TestLBHttpSolrServer</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">2667d193121</literal><operator>..</operator><literal type="number">559b1f5e925</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>solrj</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>client</name><operator>/</operator><name>solrj</name><operator>/</operator><name><name>TestLBHttpSolrServer</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>solrj</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>client</name><operator>/</operator><name>solrj</name><operator>/</operator><name><name>TestLBHttpSolrServer</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">93</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">93</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestLBHttpSolrServer</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><name>httpClient</name> <operator>=</operator> <call><name><name>HttpClientUtil</name><operator>.</operator><name>createClient</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;
     <call><name><name>HttpClientUtil</name><operator>.</operator><name>setConnectionTimeout</name></name><argument_list>(<argument><expr><name>httpClient</name></expr></argument>,  <argument><expr><literal type="number">1000</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>solr</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
      <expr_stmt><expr><name><name>solr</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>new</operator> <call><name>SolrInstance</name><argument_list>(<argument><expr><literal type="string">"solr/collection1"</literal> <operator>+</operator> <name>i</name></expr></argument>, <argument><expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"instance-"</literal> <operator>+</operator> <name>i</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>solr</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>new</operator> <call><name>SolrInstance</name><argument_list>(<argument><expr><literal type="string">"solr/collection1"</literal> <operator>+</operator> <name>i</name></expr></argument>, <argument><expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"instance-"</literal> <operator>+</operator> <name>i</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><name><name>solr</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>setUp</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><name><name>solr</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>startJetty</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>addDocs</name><argument_list>(<argument><expr><name><name>solr</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">306</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">306</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestLBHttpSolrServer</name> extends <name>SolrTestCaseJ4</name> <block>{
 
     <expr><specifier>public</specifier> <name>void</name> <call><name>tearDown</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{</block></expr></argument></throws></expr>
       <if_stmt><if>if <condition>(<expr><name>jetty</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name><name>jetty</name><operator>.</operator><name>stop</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
      <call><name><name>IOUtils</name><operator>.</operator><name>rm</name></name><argument_list>(<argument><expr><name>homeDir</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>IOUtils</name><operator>.</operator><name>rm</name></name><argument_list>(<argument><expr><call><name><name>homeDir</name><operator>.</operator><name>toPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></for>
 
     <function><type><specifier>public</specifier> <name>void</name></type> <name>startJetty</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>solrj</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>client</name><operator>/</operator><name>solrj</name><operator>/</operator><name>embedded</name><operator>/</operator><name><name>AbstractEmbeddedSolrServerTestCase</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>solrj</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>client</name><operator>/</operator><name>solrj</name><operator>/</operator><name>embedded</name><operator>/</operator><name><name>AbstractEmbeddedSolrServerTestCase</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">17e5f4de01b</literal><operator>..</operator><name>b55c023a262</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>solrj</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>client</name><operator>/</operator><name>solrj</name><operator>/</operator><name>embedded</name><operator>/</operator><name><name>AbstractEmbeddedSolrServerTestCase</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>solrj</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>client</name><operator>/</operator><name>solrj</name><operator>/</operator><name>embedded</name><operator>/</operator><name><name>AbstractEmbeddedSolrServerTestCase</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">46</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">46</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>AbstractEmbeddedSolrServerTestCase</name> extends <name>SolrTestCaseJ4</name>
     <call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"Solr home: "</literal> <operator>+</operator> <call><name><name>SOLR_HOME</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <comment type="line">//The index is always stored within a temporary directory</comment>
    <expr_stmt><expr><name>tempDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>tempDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     
     <decl_stmt><decl><type><name>File</name></type> <name>dataDir</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>tempDir</name></expr></argument>,<argument><expr><literal type="string">"data1"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>File</name></type> <name>dataDir2</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>tempDir</name></expr></argument>,<argument><expr><literal type="string">"data2"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>solrj</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>client</name><operator>/</operator><name>solrj</name><operator>/</operator><name>embedded</name><operator>/</operator><name><name>JettyWebappTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>solrj</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>client</name><operator>/</operator><name>solrj</name><operator>/</operator><name>embedded</name><operator>/</operator><name><name>JettyWebappTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>edbde924ec5</name><operator>..</operator><literal type="number">6dc7252bf8b</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>solrj</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>client</name><operator>/</operator><name>solrj</name><operator>/</operator><name>embedded</name><operator>/</operator><name><name>JettyWebappTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>solrj</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>client</name><operator>/</operator><name>solrj</name><operator>/</operator><name>embedded</name><operator>/</operator><name><name>JettyWebappTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">59</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">59</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>JettyWebappTest</name> extends <name>SolrTestCaseJ4</name>
     <call><name><name>System</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"solr.solr.home"</literal></expr></argument>, <argument><expr><name><name>ExternalPaths</name><operator>.</operator><name>EXAMPLE_HOME</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"tests.shardhandler.randomSeed"</literal></expr></argument>, <argument><expr><call><name><name>Long</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><call><name>random</name><argument_list>()</argument_list></call><operator>.</operator><call><name>nextLong</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
    <decl_stmt><decl><type><name>File</name></type> <name>dataDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>dataDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>dataDir</name><operator>.</operator><name>mkdirs</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
     <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"solr.data.dir"</literal></expr></argument>, <argument><expr><call><name><name>dataDir</name><operator>.</operator><name>getCanonicalPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>solrj</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>client</name><operator>/</operator><name>solrj</name><operator>/</operator><name>request</name><operator>/</operator><name><name>SolrPingTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>solrj</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>client</name><operator>/</operator><name>solrj</name><operator>/</operator><name>request</name><operator>/</operator><name><name>SolrPingTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>b2f637517b2</name><operator>..</operator><name>d568a4eda37</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>solrj</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>client</name><operator>/</operator><name>solrj</name><operator>/</operator><name>request</name><operator>/</operator><name><name>SolrPingTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>solrj</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>client</name><operator>/</operator><name>solrj</name><operator>/</operator><name>request</name><operator>/</operator><name><name>SolrPingTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">37</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">37</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrPingTest</name> extends <name>SolrJettyTestBase</name> <block>{
   
   @<expr><name>BeforeClass</name>
   <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>beforeClass</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>File</name> <name>testHome</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>File</name> <name>testHome</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>FileUtils</name><operator>.</operator><name>copyDirectory</name></name><argument_list>(<argument><expr><call><name>getFile</name><argument_list>(<argument><expr><literal type="string">"solrj/solr"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>testHome</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>initCore</name><argument_list>(<argument><expr><literal type="string">"solrconfig.xml"</literal></expr></argument>, <argument><expr><literal type="string">"schema.xml"</literal></expr></argument>, <argument><expr><call><name><name>testHome</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"collection1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>solrj</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>client</name><operator>/</operator><name>solrj</name><operator>/</operator><name>request</name><operator>/</operator><name><name>TestCoreAdmin</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>solrj</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>client</name><operator>/</operator><name>solrj</name><operator>/</operator><name>request</name><operator>/</operator><name><name>TestCoreAdmin</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>fe29cbb5b24</name><operator>..</operator><literal type="number">0c71a679c6c</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>solrj</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>client</name><operator>/</operator><name>solrj</name><operator>/</operator><name>request</name><operator>/</operator><name><name>TestCoreAdmin</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>solrj</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>client</name><operator>/</operator><name>solrj</name><operator>/</operator><name>request</name><operator>/</operator><name><name>TestCoreAdmin</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">76</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">76</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestCoreAdmin</name> extends <name>AbstractEmbeddedSolrServerTestCase</name> <block>{
   <expr><specifier>public</specifier> <name>void</name> <call><name>testConfigSet</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
 
     <expr><name>SolrServer</name> <name>server</name> <operator>=</operator> <call><name>getSolrAdmin</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>File</name> <name>testDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><call><name><name>LuceneTestCase</name><operator>.</operator><name>getTestClass</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getSimpleName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>testDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><call><name><name>LuceneTestCase</name><operator>.</operator><name>getTestClass</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getSimpleName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <decl_stmt><decl><type><name>File</name></type> <name>newCoreInstanceDir</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>testDir</name></expr></argument>, <argument><expr><literal type="string">"newcore"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">99</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">99</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestCoreAdmin</name> extends <name>AbstractEmbeddedSolrServerTestCase</name> <block>{
     
     <expr><name>SolrServer</name> <name>server</name> <operator>=</operator> <call><name>getSolrAdmin</name><argument_list>()</argument_list></call></expr>;
     
    <name>File</name> <name>dataDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"data"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>dataDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"data"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     
    <decl_stmt><decl><type><name>File</name></type> <name>newCoreInstanceDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"instance"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>newCoreInstanceDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"instance"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     
     <decl_stmt><decl><type><name>File</name></type> <name>instanceDir</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name><name>cores</name><operator>.</operator><name>getSolrHome</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>FileUtils</name><operator>.</operator><name>copyDirectory</name></name><argument_list>(<argument><expr><name>instanceDir</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>newCoreInstanceDir</name></expr></argument>,
<argument><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>solrj</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>common</name><operator>/</operator><name>util</name><operator>/</operator><name><name>ContentStreamTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>solrj</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>common</name><operator>/</operator><name>util</name><operator>/</operator><name><name>ContentStreamTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">618e6c9abac</literal><operator>..</operator><literal type="number">537d60a9414</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>solrj</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>common</name><operator>/</operator><name>util</name><operator>/</operator><name><name>ContentStreamTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>solrj</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>common</name><operator>/</operator><name>util</name><operator>/</operator><name><name>ContentStreamTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">49</literal></expr></argument>,<argument><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">49</literal></expr></argument>,<argument><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>ContentStreamTest</name> extends <name>SolrTestCaseJ4</name>
   <block>{
     <expr><name>InputStream</name> <name>is</name> <operator>=</operator> <operator>new</operator> <call><name>SolrResourceLoader</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>openResource</name><argument_list>( <argument><expr><literal type="string">"solrj/README"</literal></expr></argument> )</argument_list></call></expr>;
     <call><name>assertNotNull</name><argument_list>( <argument><expr><name>is</name></expr></argument> )</argument_list></call></block></expr></argument>;</argument_list></call></expr></argument></argument_list></call></expr></expr_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>file</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>createTempDir</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"README"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>file</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"README"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>FileOutputStream</name></type> <name>os</name> <init>= <expr><operator>new</operator> <call><name>FileOutputStream</name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>IOUtils</name><operator>.</operator><name>copy</name></name><argument_list>(<argument><expr><name>is</name></expr></argument>, <argument><expr><name>os</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>os</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">78</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">78</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ContentStreamTest</name> extends <name>SolrTestCaseJ4</name>
   <block>{
     <expr><name>InputStream</name> <name>is</name> <operator>=</operator> <operator>new</operator> <call><name>SolrResourceLoader</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>openResource</name><argument_list>( <argument><expr><literal type="string">"solrj/README"</literal></expr></argument> )</argument_list></call></expr>;
     <call><name>assertNotNull</name><argument_list>( <argument><expr><name>is</name></expr></argument> )</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>file</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>createTempDir</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"README"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>file</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"README"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>FileOutputStream</name></type> <name>os</name> <init>= <expr><operator>new</operator> <call><name>FileOutputStream</name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>IOUtils</name><operator>.</operator><name>copy</name></name><argument_list>(<argument><expr><name>is</name></expr></argument>, <argument><expr><name>os</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>os</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>BaseDistributedSearchTestCase</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>BaseDistributedSearchTestCase</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">1826ac66fa0</literal><operator>..</operator><literal type="number">13a96fe76a8</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>BaseDistributedSearchTestCase</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>BaseDistributedSearchTestCase</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">276</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">276</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>BaseDistributedSearchTestCase</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><call><name><name>super</name><operator>.</operator><name>setUp</name></name><argument_list>()</argument_list></call></expr>;
     <call><name><name>System</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"solr.test.sys.prop1"</literal></expr></argument>, <argument><expr><literal type="string">"propone"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"solr.test.sys.prop2"</literal></expr></argument>, <argument><expr><literal type="string">"proptwo"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>testDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>testDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></try>
 
   <annotation>@<name>Override</name></annotation>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>SolrJettyTestBase</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>SolrJettyTestBase</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>fb3f7e747a5</name><operator>..</operator><name>aad3b268743</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>SolrJettyTestBase</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>SolrJettyTestBase</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">61</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">61</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>abstract</specifier> <specifier>public</specifier> <name>class</name> <name>SolrJettyTestBase</name> extends <name>SolrTestCaseJ4</name></expr></expr_stmt>
 
     <comment type="line">// this sets the property for jetty starting SolrDispatchFilter</comment>
     <if_stmt><if>if <condition>(<expr><call><name><name>System</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><literal type="string">"solr.data.dir"</literal></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>System</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><literal type="string">"solr.hdfs.home"</literal></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>jetty</name><operator>.</operator><name>setDataDir</name></name><argument_list>(<argument><expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCanonicalPath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>jetty</name><operator>.</operator><name>setDataDir</name></name><argument_list>(<argument><expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCanonicalPath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></if></if_stmt>
     
     <constructor_decl><name><name>jetty</name><operator>.</operator><name>start</name></name><parameter_list>()</parameter_list>;</constructor_decl>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>SolrTestCaseJ4</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>SolrTestCaseJ4</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">33d4644fbf4</literal><operator>..</operator><name>dd6734f020d</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>SolrTestCaseJ4</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>SolrTestCaseJ4</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">91</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">91</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>annotation</name><operator>.</operator><name>Retention</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>annotation</name><operator>.</operator><name>RetentionPolicy</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>annotation</name><operator>.</operator><name>Target</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>URL</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Comparator</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">153</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">154</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>SolrTestCaseJ4</name> extends <name>LuceneTestCase</name> <block>{
   @<expr><name>BeforeClass</name> 
   @<call><name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"unused"</literal></expr></argument>)</argument_list></call>
   <specifier>private</specifier> <specifier>static</specifier> <name>void</name> <call><name>beforeClass</name><argument_list>()</argument_list></call> <block>{
    <expr><name>initCoreDataDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"init-core-data"</literal></expr></argument>)</argument_list></call></expr>;
    <name>initCoreDataDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"init-core-data"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></block></expr>;
 
     <call><name><name>System</name><operator>.</operator><name>err</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"Creating dataDir: "</literal> <operator>+</operator> <call><name><name>initCoreDataDir</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1038</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">1039</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>SolrTestCaseJ4</name> extends <name>LuceneTestCase</name> <block>{
   }</block>
 
   <comment type="block" format="javadoc">/**
   * @see IOUtils#rm(File...)
   * @see IOUtils#rm(Path...)
    */</comment>
   @<call><name>Deprecated</name><argument_list>()</argument_list></call>
   <specifier>public</specifier> <specifier>static</specifier> <name>boolean</name> <call><name>recurseDelete</name><argument_list>(<argument><expr><name>File</name> <name>f</name></expr></argument>)</argument_list></call> <block>{
     <try>try <block>{<block_content>
      <expr_stmt><expr><call><name><name>IOUtils</name><operator>.</operator><name>rm</name></name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>IOUtils</name><operator>.</operator><name>rm</name></name><argument_list>(<argument><expr><call><name><name>f</name><operator>.</operator><name>toPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <return>return <expr><literal type="boolean">true</literal></expr>;</return>
     </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
       <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>err</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><call><name><name>e</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>AbstractFullDistribZkTestBase</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>AbstractFullDistribZkTestBase</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">971841a33dd</literal><operator>..</operator><name>fb5e59cb74a</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>AbstractFullDistribZkTestBase</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>AbstractFullDistribZkTestBase</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">272</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">272</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>AbstractFullDistribZkTestBase</name> extends <name>AbstractDistribZkTes</name></expr></expr_stmt>
     
     <try>try <block>{<block_content>
       
      <decl_stmt><decl><type><name>File</name></type> <name>controlJettyDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>File</name></type> <name>controlJettyDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name>setupJettySolrHome</name><argument_list>(<argument><expr><name>controlJettyDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       
       <expr_stmt><expr><name>controlJetty</name> <operator>=</operator> <call><name>createJetty</name><argument_list>(<argument><expr><name>controlJettyDir</name></expr></argument>, <argument><expr><ternary><condition><expr><name>useJettyDataDir</name></expr> ?</condition><then> <expr><call><name>getDataDir</name><argument_list>(<argument><expr><name>testDir</name>
@@ <operator>-</operator><literal type="number">384</literal></expr></argument>,<argument><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">384</literal></expr></argument>,<argument><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> class <name>AbstractFullDistribZkTestBase</name> extends <name>AbstractDistribZkTes</name></expr></argument></argument_list></call></expr></then></ternary></expr></argument></argument_list></call></expr></expr_stmt>
       <if_stmt><if>if <condition>(<expr><call><name><name>sb</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name><name>sb</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><literal type="char">','</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
       <decl_stmt><decl><type><name>int</name></type> <name>cnt</name> <init>= <expr><call><name><name>this</name><operator>.</operator><name>jettyIntCntr</name><operator>.</operator><name>incrementAndGet</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
      <decl_stmt><decl><type><name>File</name></type> <name>jettyDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>File</name></type> <name>jettyDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
       <expr_stmt><expr><call><name><name>jettyDir</name><operator>.</operator><name>mkdirs</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>setupJettySolrHome</name><argument_list>(<argument><expr><name>jettyDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">449</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">449</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>AbstractFullDistribZkTestBase</name> extends <name>AbstractDistribZkTes</name>
 
     <name>int</name> <name>cnt</name> <operator>=</operator> <call><name><name>this</name><operator>.</operator><name>jettyIntCntr</name><operator>.</operator><name>incrementAndGet</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
      <decl_stmt><decl><type><name>File</name></type> <name>jettyDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"jetty"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>File</name></type> <name>jettyDir</name> <init>= <expr><call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"jetty"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>jettyDir</name><operator>.</operator><name>mkdirs</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>io</name><operator>.</operator><name>FileUtils</name><operator>.</operator><name>copyDirectory</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name>getSolrHome</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>jettyDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <decl_stmt><decl><type><name>JettySolrRunner</name></type> <name>j</name> <init>= <expr><call><name>createJetty</name><argument_list>(<argument><expr><name>jettyDir</name></expr></argument>, <argument><expr><name>testDir</name> <operator>+</operator> <literal type="string">"/jetty"</literal> <operator>+</operator> <name>cnt</name></expr></argument>, <argument><expr><name>shard</name></expr></argument>, <argument><expr><literal type="string">"solrconfig.xml"</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>AbstractZkTestCase</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>AbstractZkTestCase</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">537ad6b096e</literal><operator>..</operator><literal type="number">2535e70ff1d</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>AbstractZkTestCase</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>AbstractZkTestCase</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">63</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">63</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>AbstractZkTestCase</name> extends <name>SolrTestCaseJ4</name> <block>{
 
   @<expr><name>BeforeClass</name>
   <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>azt_beforeClass</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>zkDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"zkData"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>zkDir</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>(<argument><expr><literal type="string">"zkData"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><name>zkServer</name> <operator>=</operator> <operator>new</operator> <call><name>ZkTestServer</name><argument_list>(<argument><expr><name>zkDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>zkServer</name><operator>.</operator><name>run</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>MockFSDirectoryFactory</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>MockFSDirectoryFactory</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">7dea27f5b97</literal><operator>..</operator><name>b6b61e6b16a</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>MockFSDirectoryFactory</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>MockFSDirectoryFactory</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>Directory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>MockDirectoryWrapper</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">28</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">29</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>TrackingDirectoryWrapper</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>LuceneTestCase</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
 * Opens a directory with {@link LuceneTestCase#newFSDirectory(File)}
 * Opens a directory with {@link LuceneTestCase#newFSDirectory(Path)}
  */</comment>
 <class><specifier>public</specifier> class <name>MockFSDirectoryFactory</name> <super_list><extends>extends <super><name>StandardDirectoryFactory</name></super></extends></super_list> <block>{
 
   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>public</specifier> <name>Directory</name></type> <name>create</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>path</name></decl></parameter>, <parameter><decl><type><name>DirContext</name></type> <name>dirContext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>Directory</name></type> <name>dir</name> <init>= <expr><call><name><name>LuceneTestCase</name><operator>.</operator><name>newFSDirectory</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Directory</name></type> <name>dir</name> <init>= <expr><call><name><name>LuceneTestCase</name><operator>.</operator><name>newFSDirectory</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toPath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <comment type="line">// we can't currently do this check because of how</comment>
     <comment type="line">// Solr has to reboot a new Directory sometimes when replicating</comment>
     <comment type="line">// or rolling back - the old directory is closed and the following</comment>
<expr_stmt><expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></expr_stmt></block_content></block></function></block></class></block_content></block></try></block_content></block></catch></try></block></expr></expr_stmt></block></class></block_content></block></function></block_content></block></catch></block_content></block></for></block_content></block></try></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></block_content></block></function></block_content></block></try></block_content></block></if></if_stmt></block></class></block></class></block></class></block_content></block></constructor></block></class></block_content></block></constructor></block_content></block></constructor></block_content></block></constructor></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></try></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></constructor></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></function></block_content></block></try></block_content></block></if></if_stmt></block_content></block></function></block></class></block_content></block></else></if_stmt></block_content></block></else></if_stmt></block_content></block></while></block_content></block></for></block_content></block></while></block></expr></expr_stmt></block_content></block></try></block_content></block></constructor></block_content></block></constructor></block_content></block></for></block_content></block></function></block_content></block></function></block_content></block></for></block_content></block></while></block_content></block></function></block></class></block_content></block></if></if_stmt></block_content></block></function></block_content></block></function></block></class></block_content></block></function></block_content></block></function></block_content></block></function></block_content></block></function></block_content></block></finally></try></block_content></block></finally></try></block_content></block></for></block_content></block></if></if_stmt></block_content></block></function></block_content></block></function></block></class></block_content></block></try></block></class></block_content></block></function></block></class></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block></expr></expr_stmt></block_content></block></function></block></class></block></class></block_content></block></function></block_content></block></finally></try></block_content></block></try></block_content></block></try></block_content></block></for></block_content></block></try></block_content></block></try></block_content></block></function></block_content></block></function></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></function></block_content></block></function></block_content></block></for></block_content></block></if></if_stmt></block_content></block></function></block_content></block></catch></try></block_content></block></for></block_content></block></for></block_content></block></function></block_content></block></function></block_content></block></for></block_content></block></function></block_content></block></for></block_content></block></if></if_stmt></block></expr></expr_stmt></block_content></block></function></block_content></block></if></if_stmt></block_content></block></function></block_content></block></constructor></block_content></block></constructor></block_content></block></constructor></block_content></block></constructor></block></class></block_content></block></try></block_content></block></function></block_content></block></try></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></constructor></block_content></block></constructor></block_content></block></catch></try></block_content></block></if></if_stmt></block_content></block></function></block_content></block></function></block_content></block></constructor></block_content></block></for></block_content></block></function></block_content></block></function></block_content></block></function></block_content></block></function></block_content></block></function></block_content></block></function></block></class></block_content></block></function></block_content></block></function></block_content></block></function></block_content></block></switch></block_content></block></if></if_stmt></block_content></block></for></block_content></block></try></block_content></block></function></block></class></block_content></block></function></block_content></block></for></block_content></block></function></block_content></block></function></block_content></block></function></block_content></block></function></block_content></block></function></block_content></block></function></block_content></block></function></block></class></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></function></block_content></block></function></block_content></block></function></block_content></block></function></block_content></block></constructor></block></class></block_content></block></function></block_content></block></if></if_stmt></block_content></block></function></block></class></block_content></block></function></block_content></block></if></if_stmt>

</unit>
