<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/lucene/571264bcc0.java"><expr_stmt><expr><name>From</name> <literal type="number">571264bcc007a3d853f678dd7ac5b529644e938d</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name><name>jdyer1</name> <argument_list type="generic">&lt;<argument><name>jdyer</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Mon</name></expr><operator>,</operator> <expr><literal type="number">8</literal> <name>May</name> <literal type="number">2017</literal> <literal type="number">13</literal><operator>:</operator><literal type="number">26</literal><operator>:</operator><literal type="number">42</literal> <operator>-</operator><literal type="number">0500</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>SOLR</name><operator>-</operator><literal type="number">10522</literal><operator>:</operator> <name>Revert</name> <literal type="string">"SOLR-9972: SpellCheckComponent collations
 and suggestions returned as a JSON object rather than a list"</literal>

<name>This</name> <name>reverts</name> <name>commit</name> <literal type="number">4cd3d15da8ef77ef50e2bda91ed6d3c6e87b5426</literal><operator>.</operator>
<operator>--</operator>
 <operator>...</operator><operator>/</operator><name>component</name><operator>/</operator><name><name>SpellCheckComponent</name><operator>.</operator><name>java</name></name>        <operator>|</operator> <literal type="number">12</literal> <operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>component</name><operator>/</operator><name><name>SpellCheckComponentTest</name><operator>.</operator><name>java</name></name>    <operator>|</operator> <literal type="number">79</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <literal type="number">2</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">50</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">41</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>SpellCheckComponent</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>SpellCheckComponent</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">4e3cd125c27</literal><operator>..</operator><name>eee36ccce5a</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>SpellCheckComponent</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>SpellCheckComponent</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">199</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">199</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>SpellCheckComponent</name> extends <name>SearchComponent</name> implements <name>SolrCoreAwar</name>
         <name>boolean</name> <name>isCorrectlySpelled</name> <operator>=</operator> <name>hits</name> <operator>&gt;</operator> <operator>(</operator><ternary><condition><expr><name>maxResultsForSuggest</name><operator>==</operator><literal type="null">null</literal></expr> ?</condition><then> <expr><literal type="number">0</literal></expr> </then><else>: <expr><name>maxResultsForSuggest</name></expr></else></ternary><operator>)</operator></expr>;</expr_stmt>
 
         <decl_stmt><decl><type><name>NamedList</name></type> <name>response</name> <init>= <expr><operator>new</operator> <call><name>SimpleOrderedMap</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"suggestions"</literal></expr></argument>, <argument><expr><call><name>toNamedList</name><argument_list>(<argument><expr><name>shardRequest</name></expr></argument>, <argument><expr><name>spellingResult</name></expr></argument>, <argument><expr><name>q</name></expr></argument>, <argument><expr><name>extendedResults</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>NamedList</name></type> <name>suggestions</name> <init>= <expr><call><name>toNamedList</name><argument_list>(<argument><expr><name>shardRequest</name></expr></argument>, <argument><expr><name>spellingResult</name></expr></argument>, <argument><expr><name>q</name></expr></argument>, <argument><expr><name>extendedResults</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"suggestions"</literal></expr></argument>, <argument><expr><name>suggestions</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
         <if_stmt><if>if <condition>(<expr><name>extendedResults</name></expr>)</condition> <block>{<block_content>
           <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"correctlySpelled"</literal></expr></argument>, <argument><expr><name>isCorrectlySpelled</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">299</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">300</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SpellCheckComponent</name> extends <name>SearchComponent</name> implements <name>SolrCoreAwar</name>
     <comment type="line">//even in cases when the internal rank is the same.</comment>
     <call><name><name>Collections</name><operator>.</operator><name>sort</name></name><argument_list>(<argument><expr><name>collations</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
    <decl_stmt><decl><type><name>NamedList</name></type> <name>collationList</name> <init>= <expr><operator>new</operator> <call><name>SimpleOrderedMap</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>NamedList</name></type> <name>collationList</name> <init>= <expr><operator>new</operator> <call><name>NamedList</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <for>for <control>(<init><decl><type><name>SpellCheckCollation</name></type> <name>collation</name> <range>: <expr><name>collations</name></expr></range></decl></init>)</control> <block>{<block_content>
       <if_stmt><if>if <condition>(<expr><name>collationExtendedResults</name></expr>)</condition> <block>{<block_content>
         <decl_stmt><decl><type><name>NamedList</name></type> <name>extendedResult</name> <init>= <expr><operator>new</operator> <call><name>SimpleOrderedMap</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">423</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">424</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>SpellCheckComponent</name> extends <name>SearchComponent</name> implements <name>SolrCoreAwar</name>
 
     <name>NamedList</name> <name>response</name> <operator>=</operator> <operator>new</operator> <call><name>SimpleOrderedMap</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
    <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"suggestions"</literal></expr></argument>, <argument><expr><call><name>toNamedList</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><name>result</name></expr></argument>, <argument><expr><name>origQuery</name></expr></argument>, <argument><expr><name>extendedResults</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>NamedList</name></type> <name>suggestions</name> <init>= <expr><call><name>toNamedList</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><name>result</name></expr></argument>, <argument><expr><name>origQuery</name></expr></argument>, <argument><expr><name>extendedResults</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"suggestions"</literal></expr></argument>, <argument><expr><name>suggestions</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <if_stmt><if>if <condition>(<expr><name>extendedResults</name></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"correctlySpelled"</literal></expr></argument>, <argument><expr><name>isCorrectlySpelled</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">434</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">436</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SpellCheckComponent</name> extends <name>SearchComponent</name> implements <call><name><name>SolrCoreAwar</name>
           <operator>.</operator><name>toArray</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>SpellCheckCollation</name><index>[<expr><call><name><name>mergeData</name><operator>.</operator><name>collations</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>Arrays</name><operator>.</operator><name>sort</name></name><argument_list>(<argument><expr><name>sortedCollations</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
      <decl_stmt><decl><type><name>NamedList</name></type> <name>collations</name> <init>= <expr><operator>new</operator> <call><name>SimpleOrderedMap</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>NamedList</name></type> <name>collations</name> <init>= <expr><operator>new</operator> <call><name>NamedList</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
       <while>while <condition>(<expr><name>i</name> <operator>&lt;</operator> <name>maxCollations</name> <operator>&amp;&amp;</operator> <name>i</name> <operator>&lt;</operator> <name><name>sortedCollations</name><operator>.</operator><name>length</name></name></expr>)</condition> <block>{<block_content>
         <decl_stmt><decl><type><name>SpellCheckCollation</name></type> <name>collation</name> <init>= <expr><name><name>sortedCollations</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">634</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">636</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SpellCheckComponent</name> extends <name>SearchComponent</name> implements <name>SolrCoreAwar</name>
 
   <specifier>protected</specifier> <name>NamedList</name> <call><name>toNamedList</name><argument_list>(<argument><expr><name>boolean</name> <name>shardRequest</name></expr></argument>,
       <argument><expr><name>SpellingResult</name> <name>spellingResult</name></expr></argument>, <argument><expr><name>String</name> <name>origQuery</name></expr></argument>, <argument><expr><name>boolean</name> <name>extendedResults</name></expr></argument>)</argument_list></call> <block>{
    <expr><name>NamedList</name> <name>result</name> <operator>=</operator> <operator>new</operator> <call><name>SimpleOrderedMap</name><argument_list>()</argument_list></call></expr>;
    <name>NamedList</name> <name>result</name> <operator>=</operator> <operator>new</operator> <call><name>NamedList</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>Token</name></argument>,<argument><name><name>LinkedHashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Integer</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>suggestions</name> <init>= <expr><call><name><name>spellingResult</name>
         <operator>.</operator><name>getSuggestions</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>boolean</name></type> <name>hasFreqInfo</name> <init>= <expr><call><name><name>spellingResult</name><operator>.</operator><name>hasTokenFrequencyInfo</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>SpellCheckComponentTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>SpellCheckComponentTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">473153aec71</literal><operator>..</operator><literal type="number">37d02d9be87</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>SpellCheckComponentTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>SpellCheckComponentTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">82</literal></expr><operator>,</operator><expr><literal type="number">62</literal> <operator>+</operator><literal type="number">82</literal></expr><operator>,</operator><expr><literal type="number">77</literal> @@ <specifier>public</specifier> <name>class</name> <name>SpellCheckComponentTest</name> extends <name>SolrTestCaseJ4</name> <block>{
   <expr><specifier>public</specifier> <name>void</name> <call><name>testMaximumResultsForSuggest</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><call><name>assertJQ</name><argument_list>(<argument><expr><call><name>req</name><argument_list>(<argument><expr><literal type="string">"qt"</literal></expr></argument>,<argument><expr><name>rh</name></expr></argument>, <argument><expr><name><name>SpellCheckComponent</name><operator>.</operator><name>COMPONENT_NAME</name></name></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>, <argument><expr><name><name>SpellingParams</name><operator>.</operator><name>SPELLCHECK_BUILD</name></name></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>, <argument><expr><literal type="string">"q"</literal></expr></argument>,<argument><expr><literal type="string">"lowerfilt:(this OR brwn)"</literal></expr></argument>,
         <argument><expr><name><name>SpellingParams</name><operator>.</operator><name>SPELLCHECK_COUNT</name></name></expr></argument>,<argument><expr><literal type="string">"5"</literal></expr></argument>, <argument><expr><name><name>SpellingParams</name><operator>.</operator><name>SPELLCHECK_EXTENDED_RESULTS</name></name></expr></argument>,<argument><expr><literal type="string">"false"</literal></expr></argument>, <argument><expr><name><name>SpellingParams</name><operator>.</operator><name>SPELLCHECK_MAX_RESULTS_FOR_SUGGEST</name></name></expr></argument>, <argument><expr><literal type="string">"7"</literal></expr></argument>)</argument_list></call></expr></argument>
        ,<argument><expr><literal type="string">"/spellcheck/suggestions/brwn/numFound==1"</literal></expr></argument>
        ,<argument><expr><literal type="string">"/spellcheck/suggestions/[0]=='brwn'"</literal></expr></argument>
        ,<argument><expr><literal type="string">"/spellcheck/suggestions/[1]/numFound==1"</literal></expr></argument>
      )</argument_list></call></expr></block></expr></argument></throws></expr>;

   <call><name>assertJQ</name><argument_list>(<argument><expr><call><name>req</name><argument_list>(<argument><expr><literal type="string">"qt"</literal></expr></argument>,<argument><expr><name>rh</name></expr></argument>, <argument><expr><name><name>SpellCheckComponent</name><operator>.</operator><name>COMPONENT_NAME</name></name></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>, <argument><expr><name><name>SpellingParams</name><operator>.</operator><name>SPELLCHECK_BUILD</name></name></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>, <argument><expr><literal type="string">"q"</literal></expr></argument>,<argument><expr><literal type="string">"lowerfilt:(this OR brwn)"</literal></expr></argument>,
       <argument><expr><name><name>SpellingParams</name><operator>.</operator><name>SPELLCHECK_COUNT</name></name></expr></argument>,<argument><expr><literal type="string">"5"</literal></expr></argument>, <argument><expr><name><name>SpellingParams</name><operator>.</operator><name>SPELLCHECK_EXTENDED_RESULTS</name></name></expr></argument>,<argument><expr><literal type="string">"false"</literal></expr></argument>, <argument><expr><name><name>SpellingParams</name><operator>.</operator><name>SPELLCHECK_MAX_RESULTS_FOR_SUGGEST</name></name></expr></argument>, <argument><expr><literal type="string">"6"</literal></expr></argument>)</argument_list></call></expr></argument>
       ,<argument><expr><literal type="string">"/spellcheck/suggestions=={}"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
   <comment type="line">// there should have been no suggestions (6&lt;7)</comment>

    <try>try <block>{<block_content>
      <expr_stmt><expr><call><name>assertJQ</name><argument_list>(<argument><expr><call><name>req</name><argument_list>(<argument><expr><literal type="string">"qt"</literal></expr></argument>,<argument><expr><name>rh</name></expr></argument>, <argument><expr><name><name>SpellCheckComponent</name><operator>.</operator><name>COMPONENT_NAME</name></name></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>, <argument><expr><name><name>SpellingParams</name><operator>.</operator><name>SPELLCHECK_BUILD</name></name></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>, <argument><expr><literal type="string">"q"</literal></expr></argument>,<argument><expr><literal type="string">"lowerfilt:(this OR brwn)"</literal></expr></argument>,
          <argument><expr><name><name>SpellingParams</name><operator>.</operator><name>SPELLCHECK_COUNT</name></name></expr></argument>,<argument><expr><literal type="string">"5"</literal></expr></argument>, <argument><expr><name><name>SpellingParams</name><operator>.</operator><name>SPELLCHECK_EXTENDED_RESULTS</name></name></expr></argument>,<argument><expr><literal type="string">"false"</literal></expr></argument>, <argument><expr><name><name>SpellingParams</name><operator>.</operator><name>SPELLCHECK_MAX_RESULTS_FOR_SUGGEST</name></name></expr></argument>, <argument><expr><literal type="string">"6"</literal></expr></argument>)</argument_list></call></expr></argument>
          ,<argument><expr><literal type="string">"/spellcheck/suggestions/[1]/numFound==1"</literal></expr></argument>
       )</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>fail</name><argument_list>(<argument><expr><literal type="string">"there should have been no suggestions (6&lt;7)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> <catch>catch<parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <comment type="line">//correctly threw exception</comment>
    </block_content>}</block></catch></try>
     <expr_stmt><expr><call><name>assertJQ</name><argument_list>(<argument><expr><call><name>req</name><argument_list>(<argument><expr><literal type="string">"qt"</literal></expr></argument>,<argument><expr><name>rh</name></expr></argument>, <argument><expr><name><name>SpellCheckComponent</name><operator>.</operator><name>COMPONENT_NAME</name></name></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>, <argument><expr><name><name>SpellingParams</name><operator>.</operator><name>SPELLCHECK_BUILD</name></name></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>, <argument><expr><literal type="string">"q"</literal></expr></argument>,<argument><expr><literal type="string">"lowerfilt:(this OR brwn)"</literal></expr></argument>,
         <argument><expr><literal type="string">"fq"</literal></expr></argument>, <argument><expr><literal type="string">"id:[0 TO 9]"</literal></expr></argument>, <comment type="block">/*returns 10, less selective */</comment> <argument><expr><literal type="string">"fq"</literal></expr></argument>, <argument><expr><literal type="string">"lowerfilt:th*"</literal></expr></argument>, <comment type="block">/* returns 8, most selective */</comment>
         <argument><expr><name><name>SpellingParams</name><operator>.</operator><name>SPELLCHECK_COUNT</name></name></expr></argument>,<argument><expr><literal type="string">"5"</literal></expr></argument>, <argument><expr><name><name>SpellingParams</name><operator>.</operator><name>SPELLCHECK_EXTENDED_RESULTS</name></name></expr></argument>,<argument><expr><literal type="string">"false"</literal></expr></argument>, <argument><expr><name><name>SpellingParams</name><operator>.</operator><name>SPELLCHECK_MAX_RESULTS_FOR_SUGGEST</name></name></expr></argument>, <argument><expr><literal type="string">".90"</literal></expr></argument>)</argument_list></call></expr></argument>
        ,<argument><expr><literal type="string">"/spellcheck/suggestions/brwn/numFound==1"</literal></expr></argument>
        ,<argument><expr><literal type="string">"/spellcheck/suggestions/[0]=='brwn'"</literal></expr></argument>
        ,<argument><expr><literal type="string">"/spellcheck/suggestions/[1]/numFound==1"</literal></expr></argument>
      )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>assertJQ</name><argument_list>(<argument><expr><call><name>req</name><argument_list>(<argument><expr><literal type="string">"qt"</literal></expr></argument>,<argument><expr><name>rh</name></expr></argument>, <argument><expr><name><name>SpellCheckComponent</name><operator>.</operator><name>COMPONENT_NAME</name></name></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>, <argument><expr><name><name>SpellingParams</name><operator>.</operator><name>SPELLCHECK_BUILD</name></name></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>, <argument><expr><literal type="string">"q"</literal></expr></argument>,<argument><expr><literal type="string">"lowerfilt:(this OR brwn)"</literal></expr></argument>,
        <argument><expr><literal type="string">"fq"</literal></expr></argument>, <argument><expr><literal type="string">"id:[0 TO 9]"</literal></expr></argument>, <comment type="block">/*returns 10, less selective */</comment> <argument><expr><literal type="string">"fq"</literal></expr></argument>, <argument><expr><literal type="string">"lowerfilt:th*"</literal></expr></argument>, <comment type="block">/* returns 8, most selective */</comment>
        <argument><expr><name><name>SpellingParams</name><operator>.</operator><name>SPELLCHECK_COUNT</name></name></expr></argument>,<argument><expr><literal type="string">"5"</literal></expr></argument>, <argument><expr><name><name>SpellingParams</name><operator>.</operator><name>SPELLCHECK_EXTENDED_RESULTS</name></name></expr></argument>,<argument><expr><literal type="string">"false"</literal></expr></argument>, <argument><expr><name><name>SpellingParams</name><operator>.</operator><name>SPELLCHECK_MAX_RESULTS_FOR_SUGGEST</name></name></expr></argument>, <argument><expr><literal type="string">".80"</literal></expr></argument>)</argument_list></call></expr></argument>
        ,<argument><expr><literal type="string">"/spellcheck/suggestions=={}"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="line">// there should have been no suggestions ((.8 * 8)&lt;7)</comment>
    <try>try <block>{<block_content>
      <expr_stmt><expr><call><name>assertJQ</name><argument_list>(<argument><expr><call><name>req</name><argument_list>(<argument><expr><literal type="string">"qt"</literal></expr></argument>,<argument><expr><name>rh</name></expr></argument>, <argument><expr><name><name>SpellCheckComponent</name><operator>.</operator><name>COMPONENT_NAME</name></name></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>, <argument><expr><name><name>SpellingParams</name><operator>.</operator><name>SPELLCHECK_BUILD</name></name></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>, <argument><expr><literal type="string">"q"</literal></expr></argument>,<argument><expr><literal type="string">"lowerfilt:(this OR brwn)"</literal></expr></argument>,
          <argument><expr><literal type="string">"fq"</literal></expr></argument>, <argument><expr><literal type="string">"id:[0 TO 9]"</literal></expr></argument>, <comment type="block">/*returns 10, less selective */</comment> <argument><expr><literal type="string">"fq"</literal></expr></argument>, <argument><expr><literal type="string">"lowerfilt:th*"</literal></expr></argument>, <comment type="block">/* returns 8, most selective */</comment>
          <argument><expr><name><name>SpellingParams</name><operator>.</operator><name>SPELLCHECK_COUNT</name></name></expr></argument>,<argument><expr><literal type="string">"5"</literal></expr></argument>, <argument><expr><name><name>SpellingParams</name><operator>.</operator><name>SPELLCHECK_EXTENDED_RESULTS</name></name></expr></argument>,<argument><expr><literal type="string">"false"</literal></expr></argument>, <argument><expr><name><name>SpellingParams</name><operator>.</operator><name>SPELLCHECK_MAX_RESULTS_FOR_SUGGEST</name></name></expr></argument>, <argument><expr><literal type="string">".80"</literal></expr></argument>)</argument_list></call></expr></argument>
          ,<argument><expr><literal type="string">"/spellcheck/suggestions/[1]/numFound==1"</literal></expr></argument>
       )</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>fail</name><argument_list>(<argument><expr><literal type="string">"there should have been no suggestions ((.8 * 8)&lt;7)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> <catch>catch<parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <comment type="line">//correctly threw exception</comment>
    </block_content>}</block></catch></try>
     
     
     <expr_stmt><expr><call><name>assertJQ</name><argument_list>(<argument><expr><call><name>req</name><argument_list>(<argument><expr><literal type="string">"qt"</literal></expr></argument>,<argument><expr><name>rh</name></expr></argument>, <argument><expr><name><name>SpellCheckComponent</name><operator>.</operator><name>COMPONENT_NAME</name></name></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>, <argument><expr><name><name>SpellingParams</name><operator>.</operator><name>SPELLCHECK_BUILD</name></name></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>, <argument><expr><literal type="string">"q"</literal></expr></argument>,<argument><expr><literal type="string">"lowerfilt:(this OR brwn)"</literal></expr></argument>,
         <argument><expr><literal type="string">"fq"</literal></expr></argument>, <argument><expr><literal type="string">"id:[0 TO 9]"</literal></expr></argument>, <argument><expr><name><name>SpellingParams</name><operator>.</operator><name>SPELLCHECK_MAX_RESULTS_FOR_SUGGEST_FQ</name></name></expr></argument>, <argument><expr><literal type="string">"id:[0 TO 9]"</literal></expr></argument>, 
         <argument><expr><name><name>SpellingParams</name><operator>.</operator><name>SPELLCHECK_COUNT</name></name></expr></argument>,<argument><expr><literal type="string">"5"</literal></expr></argument>, <argument><expr><name><name>SpellingParams</name><operator>.</operator><name>SPELLCHECK_EXTENDED_RESULTS</name></name></expr></argument>,<argument><expr><literal type="string">"false"</literal></expr></argument>, <argument><expr><name><name>SpellingParams</name><operator>.</operator><name>SPELLCHECK_MAX_RESULTS_FOR_SUGGEST</name></name></expr></argument>, <argument><expr><literal type="string">".70"</literal></expr></argument>)</argument_list></call></expr></argument>
        ,<argument><expr><literal type="string">"/spellcheck/suggestions/brwn/numFound==1"</literal></expr></argument>
        ,<argument><expr><literal type="string">"/spellcheck/suggestions/[0]=='brwn'"</literal></expr></argument>
        ,<argument><expr><literal type="string">"/spellcheck/suggestions/[1]/numFound==1"</literal></expr></argument>
      )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>assertJQ</name><argument_list>(<argument><expr><call><name>req</name><argument_list>(<argument><expr><literal type="string">"qt"</literal></expr></argument>,<argument><expr><name>rh</name></expr></argument>, <argument><expr><name><name>SpellCheckComponent</name><operator>.</operator><name>COMPONENT_NAME</name></name></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>, <argument><expr><name><name>SpellingParams</name><operator>.</operator><name>SPELLCHECK_BUILD</name></name></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>, <argument><expr><literal type="string">"q"</literal></expr></argument>,<argument><expr><literal type="string">"lowerfilt:(this OR brwn)"</literal></expr></argument>,
        <argument><expr><literal type="string">"fq"</literal></expr></argument>, <argument><expr><literal type="string">"id:[0 TO 9]"</literal></expr></argument>, <argument><expr><name><name>SpellingParams</name><operator>.</operator><name>SPELLCHECK_MAX_RESULTS_FOR_SUGGEST_FQ</name></name></expr></argument>, <argument><expr><literal type="string">"lowerfilt:th*"</literal></expr></argument>, 
        <argument><expr><name><name>SpellingParams</name><operator>.</operator><name>SPELLCHECK_COUNT</name></name></expr></argument>,<argument><expr><literal type="string">"5"</literal></expr></argument>, <argument><expr><name><name>SpellingParams</name><operator>.</operator><name>SPELLCHECK_EXTENDED_RESULTS</name></name></expr></argument>,<argument><expr><literal type="string">"false"</literal></expr></argument>, <argument><expr><name><name>SpellingParams</name><operator>.</operator><name>SPELLCHECK_MAX_RESULTS_FOR_SUGGEST</name></name></expr></argument>, <argument><expr><literal type="string">".64"</literal></expr></argument>)</argument_list></call></expr></argument>
        ,<argument><expr><literal type="string">"/spellcheck/suggestions=={}"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="line">// there should have been no suggestions ((.64 * 10)&lt;7)</comment>
    <try>try <block>{<block_content>
      <expr_stmt><expr><call><name>assertJQ</name><argument_list>(<argument><expr><call><name>req</name><argument_list>(<argument><expr><literal type="string">"qt"</literal></expr></argument>,<argument><expr><name>rh</name></expr></argument>, <argument><expr><name><name>SpellCheckComponent</name><operator>.</operator><name>COMPONENT_NAME</name></name></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>, <argument><expr><name><name>SpellingParams</name><operator>.</operator><name>SPELLCHECK_BUILD</name></name></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>, <argument><expr><literal type="string">"q"</literal></expr></argument>,<argument><expr><literal type="string">"lowerfilt:(this OR brwn)"</literal></expr></argument>,
          <argument><expr><literal type="string">"fq"</literal></expr></argument>, <argument><expr><literal type="string">"id:[0 TO 9]"</literal></expr></argument>, <argument><expr><name><name>SpellingParams</name><operator>.</operator><name>SPELLCHECK_MAX_RESULTS_FOR_SUGGEST_FQ</name></name></expr></argument>, <argument><expr><literal type="string">"lowerfilt:th*"</literal></expr></argument>, 
          <argument><expr><name><name>SpellingParams</name><operator>.</operator><name>SPELLCHECK_COUNT</name></name></expr></argument>,<argument><expr><literal type="string">"5"</literal></expr></argument>, <argument><expr><name><name>SpellingParams</name><operator>.</operator><name>SPELLCHECK_EXTENDED_RESULTS</name></name></expr></argument>,<argument><expr><literal type="string">"false"</literal></expr></argument>, <argument><expr><name><name>SpellingParams</name><operator>.</operator><name>SPELLCHECK_MAX_RESULTS_FOR_SUGGEST</name></name></expr></argument>, <argument><expr><literal type="string">".64"</literal></expr></argument>)</argument_list></call></expr></argument>
          ,<argument><expr><literal type="string">"/spellcheck/suggestions/[1]/numFound==1"</literal></expr></argument>
       )</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>fail</name><argument_list>(<argument><expr><literal type="string">"there should have been no suggestions ((.64 * 10)&lt;7)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> <catch>catch<parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <comment type="line">//correctly threw exception</comment>
    </block_content>}</block></catch></try>
   </block_content>}</block></while> 
   
   <function><annotation>@<name>Test</name></annotation>
   <type><specifier>public</specifier> <name>void</name></type> <name>testExtendedResultsCount</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
     <expr_stmt><expr><call><name>assertJQ</name><argument_list>(<argument><expr><call><name>req</name><argument_list>(<argument><expr><literal type="string">"qt"</literal></expr></argument>,<argument><expr><name>rh</name></expr></argument>, <argument><expr><name><name>SpellCheckComponent</name><operator>.</operator><name>COMPONENT_NAME</name></name></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>, <argument><expr><name><name>SpellingParams</name><operator>.</operator><name>SPELLCHECK_BUILD</name></name></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>, <argument><expr><literal type="string">"q"</literal></expr></argument>,<argument><expr><literal type="string">"bluo"</literal></expr></argument>, <argument><expr><name><name>SpellingParams</name><operator>.</operator><name>SPELLCHECK_COUNT</name></name></expr></argument>,<argument><expr><literal type="string">"5"</literal></expr></argument>, <argument><expr><name><name>SpellingParams</name><operator>.</operator><name>SPELLCHECK_EXTENDED_RESULTS</name></name></expr></argument>,<argument><expr><literal type="string">"false"</literal></expr></argument>)</argument_list></call></expr></argument>
       ,<argument><expr><literal type="string">"/spellcheck/suggestions/bluo/numFound==5"</literal></expr></argument>
       ,<argument><expr><literal type="string">"/spellcheck/suggestions/[0]=='bluo'"</literal></expr></argument>
       ,<argument><expr><literal type="string">"/spellcheck/suggestions/[1]/numFound==5"</literal></expr></argument>
     )</argument_list></call></expr>;</expr_stmt>
 
     <expr_stmt><expr><call><name>assertJQ</name><argument_list>(<argument><expr><call><name>req</name><argument_list>(<argument><expr><literal type="string">"qt"</literal></expr></argument>,<argument><expr><name>rh</name></expr></argument>, <argument><expr><name><name>SpellCheckComponent</name><operator>.</operator><name>COMPONENT_NAME</name></name></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>, <argument><expr><literal type="string">"q"</literal></expr></argument>,<argument><expr><literal type="string">"bluo"</literal></expr></argument>, <argument><expr><name><name>SpellingParams</name><operator>.</operator><name>SPELLCHECK_COUNT</name></name></expr></argument>,<argument><expr><literal type="string">"3"</literal></expr></argument>, <argument><expr><name><name>SpellingParams</name><operator>.</operator><name>SPELLCHECK_EXTENDED_RESULTS</name></name></expr></argument>,<argument><expr><literal type="string">"true"</literal></expr></argument>)</argument_list></call></expr></argument>
       ,<argument><expr><literal type="string">"/spellcheck/suggestions/bluo/suggestion==[{'word':'blud','freq':1}, {'word':'blue','freq':1}, {'word':'blee','freq':1}]"</literal></expr></argument>
       ,<argument><expr><literal type="string">"/spellcheck/suggestions/[1]/suggestion==[{'word':'blud','freq':1}, {'word':'blue','freq':1}, {'word':'blee','freq':1}]"</literal></expr></argument>
     )</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
 
   <function><annotation>@<name>Test</name></annotation>
   <type><specifier>public</specifier> <name>void</name></type> <name>test</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
     <expr_stmt><expr><call><name>assertJQ</name><argument_list>(<argument><expr><call><name>req</name><argument_list>(<argument><expr><literal type="string">"qt"</literal></expr></argument>,<argument><expr><name>rh</name></expr></argument>, <argument><expr><name><name>SpellCheckComponent</name><operator>.</operator><name>COMPONENT_NAME</name></name></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>, <argument><expr><literal type="string">"q"</literal></expr></argument>,<argument><expr><literal type="string">"documemt"</literal></expr></argument>)</argument_list></call></expr></argument>
       ,<argument><expr><literal type="string">"/spellcheck=={'suggestions':{'documemt':{'numFound':1,'startOffset':0,'endOffset':8,'suggestion':['document']}}}"</literal></expr></argument>
       ,<argument><expr><literal type="string">"/spellcheck=={'suggestions':['documemt',{'numFound':1,'startOffset':0,'endOffset':8,'suggestion':['document']}]}"</literal></expr></argument>
     )</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
   
   <function><annotation>@<name>Test</name></annotation>
   <type><specifier>public</specifier> <name>void</name></type> <name>testNumericQuery</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
     <expr_stmt><expr><call><name>assertJQ</name><argument_list>(<argument><expr><call><name>req</name><argument_list>(<argument><expr><literal type="string">"qt"</literal></expr></argument>,<argument><expr><name>rh</name></expr></argument>, <argument><expr><name><name>SpellCheckComponent</name><operator>.</operator><name>COMPONENT_NAME</name></name></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>, <argument><expr><literal type="string">"q"</literal></expr></argument>,<argument><expr><literal type="string">"12346"</literal></expr></argument>)</argument_list></call></expr></argument>
       ,<argument><expr><literal type="string">"/spellcheck=={'suggestions':{'12346':{'numFound':1,'startOffset':0,'endOffset':5,'suggestion':['12345']}}}"</literal></expr></argument>
       ,<argument><expr><literal type="string">"/spellcheck=={'suggestions':['12346',{'numFound':1,'startOffset':0,'endOffset':5,'suggestion':['12345']}]}"</literal></expr></argument>
     )</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">171</literal></expr><operator>,</operator><expr><literal type="number">21</literal> <operator>+</operator><literal type="number">186</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>SpellCheckComponentTest</name> extends <name>SolrTestCaseJ4</name> <block>{
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testCollateExtendedResultsWithJsonNl</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><name>final</name> <name>String</name> <name>q</name> <operator>=</operator> <literal type="string">"documemtsss broens"</literal></expr></block></expr></argument></throws></expr>;
    <name>final</name> <name>String</name> <name>jsonNl</name> <operator>=</operator> <operator>(</operator><ternary><condition><expr><call><name>random</name><argument_list>()</argument_list></call><operator>.</operator><call><name>nextBoolean</name><argument_list>()</argument_list></call></expr> ?</condition><then> <expr><literal type="string">"map"</literal></expr> </then><else>: <expr><literal type="string">"arrntv"</literal></expr></else></ternary><operator>)</operator></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>jsonNl</name> <init>= <expr><literal type="string">"map"</literal></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>final</specifier> <name>boolean</name></type> <name>collateExtendedResults</name> <init>= <expr><call><name>random</name><argument_list>()</argument_list></call><operator>.</operator><call><name>nextBoolean</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>final</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>testsList</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <if_stmt><if>if <condition>(<expr><name>collateExtendedResults</name></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><call><name><name>testsList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"/spellcheck/collations/collation/collationQuery=='document brown'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>testsList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"/spellcheck/collations/collation/hits==0"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <switch>switch <condition>(<expr><name>jsonNl</name></expr>)</condition> <block>{<block_content>
        <case>case <expr><literal type="string">"arrntv"</literal></expr>:</case>
          <expr_stmt><expr><call><name><name>testsList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"/spellcheck/collations/collation/misspellingsAndCorrections/[0]/name=='documemtsss'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>testsList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"/spellcheck/collations/collation/misspellingsAndCorrections/[0]/type=='str'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>testsList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"/spellcheck/collations/collation/misspellingsAndCorrections/[0]/value=='document'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>testsList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"/spellcheck/collations/collation/misspellingsAndCorrections/[1]/name=='broens'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>testsList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"/spellcheck/collations/collation/misspellingsAndCorrections/[1]/type=='str'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>testsList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"/spellcheck/collations/collation/misspellingsAndCorrections/[1]/value=='brown'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <break>break;</break>
         <case>case <expr><literal type="string">"map"</literal></expr>:</case>
           <expr_stmt><expr><call><name><name>testsList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"/spellcheck/collations/collation/misspellingsAndCorrections/documemtsss=='document'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           <expr_stmt><expr><call><name><name>testsList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"/spellcheck/collations/collation/misspellingsAndCorrections/broens=='brown'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">304</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">311</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>SpellCheckComponentTest</name> extends <name>SolrTestCaseJ4</name> <block>{
         <comment type="line">//while "document" is present.</comment>
 
         <expr><call><name>assertJQ</name><argument_list>(<argument><expr><call><name>req</name><argument_list>(<argument><expr><literal type="string">"qt"</literal></expr></argument>,<argument><expr><name>rh</name></expr></argument>, <argument><expr><name><name>SpellCheckComponent</name><operator>.</operator><name>COMPONENT_NAME</name></name></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>, <argument><expr><literal type="string">"q"</literal></expr></argument>,<argument><expr><literal type="string">"documenq"</literal></expr></argument>, <argument><expr><name><name>SpellingParams</name><operator>.</operator><name>SPELLCHECK_DICT</name></name></expr></argument>, <argument><expr><literal type="string">"threshold"</literal></expr></argument>, <argument><expr><name><name>SpellingParams</name><operator>.</operator><name>SPELLCHECK_COUNT</name></name></expr></argument>,<argument><expr><literal type="string">"5"</literal></expr></argument>, <argument><expr><name><name>SpellingParams</name><operator>.</operator><name>SPELLCHECK_EXTENDED_RESULTS</name></name></expr></argument>,<argument><expr><literal type="string">"true"</literal></expr></argument>)</argument_list></call></expr></argument>
            ,<argument><expr><literal type="string">"/spellcheck/suggestions/documenq/suggestion==[{'word':'document','freq':2}]"</literal></expr></argument>
            ,<argument><expr><literal type="string">"/spellcheck/suggestions/[1]/suggestion==[{'word':'document','freq':2}]"</literal></expr></argument>
         )</argument_list></call></expr>;
 
         <call><name>assertJQ</name><argument_list>(<argument><expr><call><name>req</name><argument_list>(<argument><expr><literal type="string">"qt"</literal></expr></argument>,<argument><expr><name>rh</name></expr></argument>, <argument><expr><name><name>SpellCheckComponent</name><operator>.</operator><name>COMPONENT_NAME</name></name></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>, <argument><expr><literal type="string">"q"</literal></expr></argument>,<argument><expr><literal type="string">"documenq"</literal></expr></argument>, <argument><expr><name><name>SpellingParams</name><operator>.</operator><name>SPELLCHECK_DICT</name></name></expr></argument>, <argument><expr><literal type="string">"threshold_direct"</literal></expr></argument>, <argument><expr><name><name>SpellingParams</name><operator>.</operator><name>SPELLCHECK_COUNT</name></name></expr></argument>,<argument><expr><literal type="string">"5"</literal></expr></argument>, <argument><expr><name><name>SpellingParams</name><operator>.</operator><name>SPELLCHECK_EXTENDED_RESULTS</name></name></expr></argument>,<argument><expr><literal type="string">"true"</literal></expr></argument>)</argument_list></call></expr></argument>
            ,<argument><expr><literal type="string">"/spellcheck/suggestions/documenq/suggestion==[{'word':'document','freq':2}]"</literal></expr></argument>
            ,<argument><expr><literal type="string">"/spellcheck/suggestions/[1]/suggestion==[{'word':'document','freq':2}]"</literal></expr></argument>
         )</argument_list></call></block></expr>;</expr_stmt>
 
         <comment type="line">//TODO:  how do we make this into a 1-liner using "assertQ()" ???</comment>
<expr_stmt><expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></expr_stmt></block_content></block></switch></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt>

</unit>
