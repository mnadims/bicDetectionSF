<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/lucene/a7f879db76.java"><expr_stmt><expr><name>From</name> <name>a7f879db7682841539468f9af71f8b28423d9321</name> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Noble</name> <name><name>Paul</name> <argument_list type="generic">&lt;<argument><name>noble</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Mon</name></expr><operator>,</operator> <expr><literal type="number">2</literal> <name>Dec</name> <literal type="number">2013</literal> <literal type="number">07</literal><operator>:</operator><literal type="number">25</literal><operator>:</operator><literal type="number">58</literal> <operator>+</operator><literal type="number">0000</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>SOLR</name><operator>-</operator><literal type="number">5510</literal>

<name>git</name><operator>-</operator><name>svn</name><operator>-</operator><name>id</name><operator>:</operator> <name>https</name><operator>:</operator><comment type="line">//svn.apache.org/repos/asf/lucene/dev/trunk@1546922 13f79535-47bb-0310-9956-ffa450edef68</comment>
<operator>--</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ZkController</name><operator>.</operator><name>java</name></name>   <operator>|</operator> <literal type="number">25</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <literal type="number">1</literal> <name>file</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">13</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">12</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ZkController</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ZkController</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>a4aac548ddc</name><operator>..</operator><name>d291eb9ba55</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ZkController</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ZkController</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">1333</literal></expr><operator>,</operator><expr><literal type="number">30</literal> <operator>+</operator><literal type="number">1333</literal></expr><operator>,</operator><expr><literal type="number">31</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>ZkController</name> <block>{
   <expr><specifier>public</specifier> <name>void</name> <call><name>preRegister</name><argument_list>(<argument><expr><name>CoreDescriptor</name> <name>cd</name></expr></argument> )</argument_list></call> <block>{
 
     <expr><name>String</name> <name>coreNodeName</name> <operator>=</operator> <call><name>getCoreNodeName</name><argument_list>(<argument><expr><name>cd</name></expr></argument>)</argument_list></call></expr>;

    <comment type="line">// make sure the node name is set on the descriptor</comment>
    <if_stmt><if>if <condition>(<expr><call><name><name>cd</name><operator>.</operator><name>getCloudDescriptor</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCoreNodeName</name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>cd</name><operator>.</operator><name>getCloudDescriptor</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>setCoreNodeName</name><argument_list>(<argument><expr><name>coreNodeName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt/></block_content></block></if></if_stmt>}</block></expr>

     <comment type="line">// before becoming available, make sure we are not live and active</comment>
     <comment type="line">// this also gets us our assigned shard id if it was not specified</comment>
     <try>try <block>{<block_content>
      <if_stmt><if>if<condition>(<expr><call><name><name>cd</name><operator>.</operator><name>getCloudDescriptor</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCollectionName</name><argument_list>()</argument_list></call> <operator>!=</operator><literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>cd</name><operator>.</operator><name>getCloudDescriptor</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCoreNodeName</name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr> )</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>CloudDescriptor</name></type> <name>cloudDesc</name> <init>= <expr><call><name><name>cd</name><operator>.</operator><name>getCloudDescriptor</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if<condition>(<expr><call><name><name>cd</name><operator>.</operator><name>getCloudDescriptor</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCollectionName</name><argument_list>()</argument_list></call> <operator>!=</operator><literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>cloudDesc</name><operator>.</operator><name>getCoreNodeName</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr> )</condition> <block>{<block_content>
         <comment type="line">//we were already registered</comment>
        <if_stmt><if>if<condition>(<expr><call><name><name>zkStateReader</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>hasCollection</name><argument_list>(<argument><expr><call><name><name>cd</name><operator>.</operator><name>getCloudDescriptor</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCollectionName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><block>{<block_content>
        <decl_stmt><decl><type><name>DocCollection</name></type> <name>coll</name> <init>= <expr><call><name><name>zkStateReader</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCollection</name><argument_list>(<argument><expr><call><name><name>cd</name><operator>.</operator><name>getCloudDescriptor</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCollectionName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if<condition>(<expr><call><name><name>zkStateReader</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>hasCollection</name><argument_list>(<argument><expr><call><name><name>cloudDesc</name><operator>.</operator><name>getCollectionName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><block>{<block_content>
        <decl_stmt><decl><type><name>DocCollection</name></type> <name>coll</name> <init>= <expr><call><name><name>zkStateReader</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCollection</name><argument_list>(<argument><expr><call><name><name>cloudDesc</name><operator>.</operator><name>getCollectionName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <if_stmt><if>if<condition>(<expr><operator>!</operator><literal type="string">"true"</literal><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><call><name><name>coll</name><operator>.</operator><name>getStr</name></name><argument_list>(<argument><expr><literal type="string">"autoCreated"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><block>{<block_content>
           <decl_stmt><decl><type><name>Slice</name></type> <name>slice</name> <init>= <expr><call><name><name>coll</name><operator>.</operator><name>getSlice</name></name><argument_list>(<argument><expr><call><name><name>cd</name><operator>.</operator><name>getCloudDescriptor</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getShardId</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
           <decl_stmt><decl><type><name>Slice</name></type> <name>slice</name> <init>= <expr><call><name><name>coll</name><operator>.</operator><name>getSlice</name></name><argument_list>(<argument><expr><call><name><name>cloudDesc</name><operator>.</operator><name>getShardId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if_stmt><if>if<condition>(<expr><name>slice</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><block>{<block_content>
             <if_stmt><if>if<condition>(<expr><call><name><name>slice</name><operator>.</operator><name>getReplica</name></name><argument_list>(<argument><expr><call><name><name>cd</name><operator>.</operator><name>getCloudDescriptor</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCoreNodeName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
             <if_stmt><if>if<condition>(<expr><call><name><name>slice</name><operator>.</operator><name>getReplica</name></name><argument_list>(<argument><expr><call><name><name>cloudDesc</name><operator>.</operator><name>getCoreNodeName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"core_removed This core is removed from ZK"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
               <throw>throw <expr><operator>new</operator> <call><name>SolrException</name><argument_list>(<argument><expr><name><name>ErrorCode</name><operator>.</operator><name>NOT_FOUND</name></name></expr></argument>,<argument><expr><name>coreNodeName</name> <operator>+</operator><literal type="string">" is removed"</literal></expr></argument>)</argument_list></call></expr>;</throw>
               <throw>throw <expr><operator>new</operator> <call><name>SolrException</name><argument_list>(<argument><expr><name><name>ErrorCode</name><operator>.</operator><name>NOT_FOUND</name></name></expr></argument>,<argument><expr><call><name><name>cloudDesc</name><operator>.</operator><name>getCoreNodeName</name></name><argument_list>()</argument_list></call> <operator>+</operator><literal type="string">" is removed"</literal></expr></argument>)</argument_list></call></expr>;</throw>
              <expr_stmt/></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></try>}</block></expr></expr_stmt>
            }
          }
         }
       }

      <comment type="line">// make sure the node name is set on the descriptor</comment>
      <if_stmt><if>if <condition>(<expr><call><name><name>cloudDesc</name><operator>.</operator><name>getCoreNodeName</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>cloudDesc</name><operator>.</operator><name>setCoreNodeName</name></name><argument_list>(<argument><expr><name>coreNodeName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>

       <expr_stmt><expr><call><name>publish</name><argument_list>(<argument><expr><name>cd</name></expr></argument>, <argument><expr><name><name>ZkStateReader</name><operator>.</operator><name>DOWN</name></name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     } catch <expr_stmt><expr><operator>(</operator><name>KeeperException</name> <name>e</name><operator>)</operator> <block>{
       <expr><call><name><name>log</name><operator>.</operator><name>error</name></name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;
<expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></block></expr></expr_stmt>

</unit>
