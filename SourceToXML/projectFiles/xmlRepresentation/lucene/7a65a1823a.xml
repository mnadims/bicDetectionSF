<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/lucene/7a65a1823a.java"><expr_stmt><expr><name>From</name> <literal type="number">7a65a1823ac3fe81f6f8f896cb01095afb9ab2fb</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Shai</name> <name><name>Erera</name> <argument_list type="generic">&lt;<argument><name>shaie</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Tue</name></expr><operator>,</operator> <expr><literal type="number">13</literal> <name>Apr</name> <literal type="number">2010</literal> <literal type="number">14</literal><operator>:</operator><literal type="number">04</literal><operator>:</operator><literal type="number">18</literal> <operator>+</operator><literal type="number">0000</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>LUCENE</name><operator>-</operator><literal type="number">2386</literal><operator>:</operator> <name>IndexWriter</name> <name>commits</name> <name>unnecessarily</name> <name>on</name> <name>fresh</name>
 <call><name>Directory</name> <argument_list>(<argument><expr><name>take</name> <operator>#</operator><literal type="number">2</literal></expr></argument>)</argument_list></call>

<name>git</name><operator>-</operator><name>svn</name><operator>-</operator><name>id</name><operator>:</operator> <name>https</name><operator>:</operator><comment type="line">//svn.apache.org/repos/asf/lucene/dev/trunk@933613 13f79535-47bb-0310-9956-ffa450edef68</comment>
<operator>--</operator>
 <name>lucene</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>                            <operator>|</operator>  <literal type="number">6</literal> <operator>++</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name><name>TestSnapshotDeletionPolicy</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>index</name><operator>/</operator><name><name>TestBackwardsCompatibility</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestCrash</name><operator>.</operator><name>java</name></name>    <operator>|</operator> <literal type="number">28</literal> <operator>++</operator><operator>++</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestDeletionPolicy</name><operator>.</operator><name>java</name></name>      <operator>|</operator> <literal type="number">24</literal> <operator>++</operator><operator>+</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexFileDeleter</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexReader</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">3</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexReaderReopen</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexWriter</name><operator>.</operator><name>java</name></name>  <operator>|</operator> <literal type="number">21</literal> <operator>++</operator><operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexWriterDelete</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">3</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexWriterExceptions</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexWriterReader</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestStressIndexing</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">3</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestStressIndexing2</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestBufferedIndexInput</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">1</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestLockFactory</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">3</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestWindowsMMap</name><operator>.</operator><name>java</name></name>  <operator>|</operator> <literal type="number">26</literal> <operator>++</operator><operator>+</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>TestNumericRangeFilterBuilder</name><operator>.</operator><name>java</name></name>        <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>IndexFileDeleter</name><operator>.</operator><name>java</name></name> <operator>|</operator> <literal type="number">29</literal> <operator>++</operator><operator>++</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>IndexNotFoundException</name><operator>.</operator><name>java</name></name>  <operator>|</operator> <literal type="number">32</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>IndexReader</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>IndexWriter</name><operator>.</operator><name>java</name></name>  <operator>|</operator> <literal type="number">15</literal> <operator>+</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>SegmentInfos</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>Directory</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">9</literal> <operator>++</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name><name>TestSnapshotDeletionPolicy</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">7</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>index</name><operator>/</operator><name><name>TestBackwardsCompatibility</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">5</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestCrash</name><operator>.</operator><name>java</name></name>    <operator>|</operator> <literal type="number">35</literal> <operator>++</operator><operator>++</operator><operator>+</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestDeletionPolicy</name><operator>.</operator><name>java</name></name>      <operator>|</operator> <literal type="number">24</literal> <operator>++</operator><operator>+</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexFileDeleter</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexReader</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">8</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexReaderReopen</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">1</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexWriter</name><operator>.</operator><name>java</name></name>  <operator>|</operator> <literal type="number">79</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexWriterDelete</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexWriterExceptions</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexWriterReader</name><operator>.</operator><name>java</name></name>   <operator>|</operator> <literal type="number">12</literal> <operator>++</operator><operator>+</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestNoDeletionPolicy</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">5</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestStressIndexing</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">3</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestStressIndexing2</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">1</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestLockFactory</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestWindowsMMap</name><operator>.</operator><name>java</name></name>  <operator>|</operator> <literal type="number">33</literal> <operator>++</operator><operator>++</operator><operator>+</operator><operator>--</operator><operator>-</operator>
 <literal type="number">40</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">312</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">144</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>IndexNotFoundException</name><operator>.</operator><name>java</name></name>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
<name>index</name> <literal type="number">46cb73c95c2</literal><operator>..</operator><name>bd4d9c96301</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
@@ <operator>-</operator><literal type="number">105</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">105</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <name>Changes</name> <name>in</name> <name>backwards</name> <name>compatibility</name> <name>policy</name>
   <name>of</name> <call><name>incrementToken</name><argument_list>()</argument_list></call></expr><operator>,</operator> <expr><call><name>tokenStream</name><argument_list>()</argument_list></call></expr><operator>,</operator> <expr><name>and</name> <call><name>reusableTokenStream</name><argument_list>()</argument_list></call><operator>.</operator>
   <operator>(</operator><name>Uwe</name> <name>Schindler</name><operator>,</operator> <name>Robert</name> <name>Muir</name><operator>)</operator>
 
<operator>*</operator> <name>LUCENE</name><operator>-</operator><literal type="number">2386</literal><operator>:</operator> <name>IndexWriter</name> <name>no</name> <name>longer</name> <name>performs</name> <name>an</name> <name>empty</name> <name>commit</name> <name>upon</name> <operator>new</operator> <name>index</name>
  <name><name>creation</name><operator>.</operator> <name>Previously</name></name></expr><operator>,</operator></expr_stmt> <if_stmt><if>if you passed an empty Directory and set OpenMode to
  CREATE*<operator>,</operator> <expr_stmt><expr><name>IndexWriter</name> <name>would</name> <name>make</name> <name>a</name> <name>first</name> <name>empty</name> <name><name>commit</name><operator>.</operator> <name>If</name></name> <name>you</name> <name>need</name> <name>that</name> 
  <name>behavior</name> <name>you</name> <name>can</name> <name>call</name> <call><name><name>writer</name><operator>.</operator><name>commit</name></name><argument_list>()</argument_list></call><operator>/</operator><call><name>close</name><argument_list>()</argument_list></call> <name>immediately</name> <name>after</name> <name>you</name> <name>create</name> <name><name>it</name><operator>.</operator></name>
  (<name>Shai</name> <name>Erera</name></expr><operator>,</operator> <expr><name>Mike</name> <name>McCandless</name></expr></expr_stmt></if></if_stmt>)
  
 <expr_stmt><expr><name>Changes</name> <name>in</name> <name>runtime</name> <name>behavior</name>
 
 <operator>*</operator> <name>LUCENE</name><operator>-</operator><literal type="number">1923</literal><operator>:</operator> <name>Made</name> <call><name><name>IndexReader</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call> <name>produce</name> <name>something</name>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>backwards</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>TestSnapshotDeletionPolicy</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>backwards</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>TestSnapshotDeletionPolicy</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">89a57571d9b</literal><operator>..</operator><literal type="number">02d0227de6b</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>backwards</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>TestSnapshotDeletionPolicy</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>backwards</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>TestSnapshotDeletionPolicy</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">113</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">113</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSnapshotDeletionPolicy</name> extends <name>LuceneTestCase</name>
 
     <name>SnapshotDeletionPolicy</name> <name>dp</name> <operator>=</operator> <operator>new</operator> <call><name>SnapshotDeletionPolicy</name><argument_list>(<argument><expr><operator>new</operator> <call><name>KeepOnlyLastCommitDeletionPolicy</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><specifier>final</specifier> <name>IndexWriter</name></type> <name>writer</name> <init>= <expr><operator>new</operator> <call><name>IndexWriter</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>StandardAnalyzer</name><argument_list>(<argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>Version</name><operator>.</operator><name>LUCENE_CURRENT</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>dp</name></expr></argument>, <argument><expr><name><name>IndexWriter</name><operator>.</operator><name>MaxFieldLength</name><operator>.</operator><name>UNLIMITED</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>commit</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <comment type="line">// Force frequent flushes</comment>
     <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>setMaxBufferedDocs</name></name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>backwards</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestBackwardsCompatibility</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>backwards</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestBackwardsCompatibility</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">07a7668f4ea</literal><operator>..</operator><name>bb09f9b4ea9</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>backwards</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestBackwardsCompatibility</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>backwards</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestBackwardsCompatibility</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">553</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">553</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestBackwardsCompatibility</name> extends <name>LuceneTestCase</name>
       <name>expected</name> <operator>=</operator> <operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{<expr><literal type="string">"_0.cfs"</literal></expr>,
                                <expr><literal type="string">"_0_1.del"</literal></expr>,
                                <expr><literal type="string">"_0_1.s"</literal> <operator>+</operator> <name>contentFieldIndex</name></expr>,
                               <expr><literal type="string">"segments_3"</literal></expr>,
                               <expr><literal type="string">"segments_2"</literal></expr>,
                                <expr><literal type="string">"segments.gen"</literal></expr>}</block></expr>;</expr_stmt>
 
       <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>actual</name> <init>= <expr><call><name><name>dir</name><operator>.</operator><name>listAll</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>backwards</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestCrash</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>backwards</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestCrash</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">09275e263c8</literal><operator>..</operator><literal type="number">9bedfb68a39</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>backwards</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestCrash</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>backwards</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestCrash</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">25</literal></expr><operator>,</operator><expr><literal type="number">20</literal> <operator>+</operator><literal type="number">25</literal></expr><operator>,</operator><expr><literal type="number">24</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>MockRAMDirectory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>NoLockFactory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Document</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Field</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexWriter</name></name>;</import>
 
 <class><specifier>public</specifier> class <name>TestCrash</name> <super_list><extends>extends <super><name>LuceneTestCase</name></super></extends></super_list> <block>{
 
  <function><type><specifier>private</specifier> <name>IndexWriter</name></type> <name>initIndex</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <return>return <expr><call><name>initIndex</name><argument_list>(<argument><expr><operator>new</operator> <call><name>MockRAMDirectory</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  <function><type><specifier>private</specifier> <name>IndexWriter</name></type> <name>initIndex</name><parameter_list>(<parameter><decl><type><name>boolean</name></type> <name>initialCommit</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <return>return <expr><call><name>initIndex</name><argument_list>(<argument><expr><operator>new</operator> <call><name>MockRAMDirectory</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>initialCommit</name></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
 
  <function><type><specifier>private</specifier> <name>IndexWriter</name></type> <name>initIndex</name><parameter_list>(<parameter><decl><type><name>MockRAMDirectory</name></type> <name>dir</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
  <function><type><specifier>private</specifier> <name>IndexWriter</name></type> <name>initIndex</name><parameter_list>(<parameter><decl><type><name>MockRAMDirectory</name></type> <name>dir</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>initialCommit</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
     <expr_stmt><expr><call><name><name>dir</name><operator>.</operator><name>setLockFactory</name></name><argument_list>(<argument><expr><call><name><name>NoLockFactory</name><operator>.</operator><name>getNoLockFactory</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><name>IndexWriter</name></type> <name>writer</name>  <init>= <expr><operator>new</operator> <call><name>IndexWriter</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>WhitespaceAnalyzer</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>IndexWriter</name><operator>.</operator><name>MaxFieldLength</name><operator>.</operator><name>UNLIMITED</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <comment type="line">//writer.setMaxBufferedDocs(2);</comment>
     <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>setMaxBufferedDocs</name></name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><operator>(</operator><operator>(</operator><name>ConcurrentMergeScheduler</name><operator>)</operator> <call><name><name>writer</name><operator>.</operator><name>getMergeScheduler</name></name><argument_list>()</argument_list></call><operator>)</operator><operator>.</operator><call><name>setSuppressExceptions</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>initialCommit</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>commit</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
 
     <decl_stmt><decl><type><name>Document</name></type> <name>doc</name> <init>= <expr><operator>new</operator> <call><name>Document</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>doc</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Field</name><argument_list>(<argument><expr><literal type="string">"content"</literal></expr></argument>, <argument><expr><literal type="string">"aaa"</literal></expr></argument>, <argument><expr><name><name>Field</name><operator>.</operator><name>Store</name><operator>.</operator><name>YES</name></name></expr></argument>, <argument><expr><name><name>Field</name><operator>.</operator><name>Index</name><operator>.</operator><name>ANALYZED</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">58</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">62</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestCrash</name> extends <name>LuceneTestCase</name> <block>{
   }</block>
 
   <specifier>public</specifier> <name>void</name> <call><name>testCrashWhileIndexing</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><name>IndexWriter</name> <name>writer</name> <operator>=</operator> <call><name>initIndex</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>IndexWriter</name></type> <name>writer</name> <init>= <expr><call><name>initIndex</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>MockRAMDirectory</name></type> <name>dir</name> <init>= <expr><operator>(</operator><name>MockRAMDirectory</name><operator>)</operator> <call><name><name>writer</name><operator>.</operator><name>getDirectory</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>crash</name><argument_list>(<argument><expr><name>writer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>IndexReader</name></type> <name>reader</name> <init>= <expr><call><name><name>IndexReader</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">66</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">70</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestCrash</name> extends <name>LuceneTestCase</name> <block>{
   }</block>
 
   <specifier>public</specifier> <name>void</name> <call><name>testWriterAfterCrash</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><name>IndexWriter</name> <name>writer</name> <operator>=</operator> <call><name>initIndex</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>IndexWriter</name></type> <name>writer</name> <init>= <expr><call><name>initIndex</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>MockRAMDirectory</name></type> <name>dir</name> <init>= <expr><operator>(</operator><name>MockRAMDirectory</name><operator>)</operator> <call><name><name>writer</name><operator>.</operator><name>getDirectory</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>dir</name><operator>.</operator><name>setPreventDoubleWrite</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>crash</name><argument_list>(<argument><expr><name>writer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>writer</name> <operator>=</operator> <call><name>initIndex</name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>writer</name> <operator>=</operator> <call><name>initIndex</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><name>IndexReader</name></type> <name>reader</name> <init>= <expr><call><name><name>IndexReader</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">78</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">82</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestCrash</name> extends <name>LuceneTestCase</name> <block>{
   }</block>
 
   <specifier>public</specifier> <name>void</name> <call><name>testCrashAfterReopen</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><name>IndexWriter</name> <name>writer</name> <operator>=</operator> <call><name>initIndex</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>IndexWriter</name></type> <name>writer</name> <init>= <expr><call><name>initIndex</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>MockRAMDirectory</name></type> <name>dir</name> <init>= <expr><operator>(</operator><name>MockRAMDirectory</name><operator>)</operator> <call><name><name>writer</name><operator>.</operator><name>getDirectory</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>writer</name> <operator>=</operator> <call><name>initIndex</name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>writer</name> <operator>=</operator> <call><name>initIndex</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">314</literal></expr></argument>, <argument><expr><call><name><name>writer</name><operator>.</operator><name>maxDoc</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>crash</name><argument_list>(<argument><expr><name>writer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">100</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">104</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestCrash</name> extends <name>LuceneTestCase</name> <block>{
 
   <expr><specifier>public</specifier> <name>void</name> <call><name>testCrashAfterClose</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
     
    <expr><name>IndexWriter</name> <name>writer</name> <operator>=</operator> <call><name>initIndex</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <expr><name>IndexWriter</name> <name>writer</name> <operator>=</operator> <call><name>initIndex</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;
     <expr><name>MockRAMDirectory</name> <name>dir</name> <operator>=</operator> <operator>(</operator><name>MockRAMDirectory</name><operator>)</operator> <call><name><name>writer</name><operator>.</operator><name>getDirectory</name></name><argument_list>()</argument_list></call></expr>;
 
     <expr><call><name><name>writer</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">119</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">123</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestCrash</name> extends <name>LuceneTestCase</name> <block>{
 
   <expr><specifier>public</specifier> <name>void</name> <call><name>testCrashAfterCloseNoWait</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
     
    <expr><name>IndexWriter</name> <name>writer</name> <operator>=</operator> <call><name>initIndex</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <expr><name>IndexWriter</name> <name>writer</name> <operator>=</operator> <call><name>initIndex</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;
     <expr><name>MockRAMDirectory</name> <name>dir</name> <operator>=</operator> <operator>(</operator><name>MockRAMDirectory</name><operator>)</operator> <call><name><name>writer</name><operator>.</operator><name>getDirectory</name></name><argument_list>()</argument_list></call></expr>;
 
     <expr><call><name><name>writer</name><operator>.</operator><name>close</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">138</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">142</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestCrash</name> extends <name>LuceneTestCase</name> <block>{
 
   <expr><specifier>public</specifier> <name>void</name> <call><name>testCrashReaderDeletes</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
     
    <expr><name>IndexWriter</name> <name>writer</name> <operator>=</operator> <call><name>initIndex</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <expr><name>IndexWriter</name> <name>writer</name> <operator>=</operator> <call><name>initIndex</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;
     <expr><name>MockRAMDirectory</name> <name>dir</name> <operator>=</operator> <operator>(</operator><name>MockRAMDirectory</name><operator>)</operator> <call><name><name>writer</name><operator>.</operator><name>getDirectory</name></name><argument_list>()</argument_list></call></expr>;
 
     <expr><call><name><name>writer</name><operator>.</operator><name>close</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">159</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">163</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestCrash</name> extends <name>LuceneTestCase</name> <block>{
 
   <expr><specifier>public</specifier> <name>void</name> <call><name>testCrashReaderDeletesAfterClose</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
     
    <expr><name>IndexWriter</name> <name>writer</name> <operator>=</operator> <call><name>initIndex</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <expr><name>IndexWriter</name> <name>writer</name> <operator>=</operator> <call><name>initIndex</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;
     <expr><name>MockRAMDirectory</name> <name>dir</name> <operator>=</operator> <operator>(</operator><name>MockRAMDirectory</name><operator>)</operator> <call><name><name>writer</name><operator>.</operator><name>getDirectory</name></name><argument_list>()</argument_list></call></expr>;
 
     <expr><call><name><name>writer</name><operator>.</operator><name>close</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>backwards</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestDeletionPolicy</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>backwards</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestDeletionPolicy</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>c4751ff9817</name><operator>..</operator><name>b7a7fefee3e</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>backwards</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestDeletionPolicy</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>backwards</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestDeletionPolicy</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">290</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">290</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestDeletionPolicy</name> extends <name>LuceneTestCase</name>
       <call><name><name>writer</name><operator>.</operator><name>optimize</name></name><argument_list>()</argument_list></call></expr>;
       <expr><call><name><name>writer</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;
 
      <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name><name>policy</name><operator>.</operator><name>numOnInit</name></name></expr></argument>)</argument_list></call></expr>;
      <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name><name>policy</name><operator>.</operator><name>numOnInit</name></name></expr></argument>)</argument_list></call></expr>;
 
       <comment type="line">// If we are not auto committing then there should</comment>
       <comment type="line">// be exactly 2 commits (one per close above):</comment>
@@ <expr><operator>-</operator><literal type="number">298</literal></expr>,<expr><literal type="number">8</literal> <operator>+</operator><literal type="number">298</literal></expr>,<expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestDeletionPolicy</name> extends <name>LuceneTestCase</name>
 
       <comment type="line">// Test listCommits</comment>
       <name>Collection</name> <name>commits</name> <operator>=</operator> <call><name><name>IndexReader</name><operator>.</operator><name>listCommits</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr>;
      <comment type="line">// 1 from opening writer + 2 from closing writer</comment>
      <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><call><name><name>commits</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
      <comment type="line">// 2 from closing writer</comment>
      <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><call><name><name>commits</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
       <expr><name>Iterator</name> <name>it</name> <operator>=</operator> <call><name><name>commits</name><operator>.</operator><name>iterator</name></name><argument_list>()</argument_list></call></expr>;
       <comment type="line">// Make sure we can open a reader on each commit:</comment>
@@ <expr><operator>-</operator><literal type="number">357</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">357</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestDeletionPolicy</name> extends <name>LuceneTestCase</name>
     <call><name><name>writer</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;
 
     <expr><name>Collection</name> <name>commits</name> <operator>=</operator> <call><name><name>IndexReader</name><operator>.</operator><name>listCommits</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><call><name><name>commits</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><call><name><name>commits</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <expr><name>IndexCommit</name> <name>lastCommit</name> <operator>=</operator> <literal type="null">null</literal></expr>;
     <expr><name>Iterator</name> <name>it</name> <operator>=</operator> <call><name><name>commits</name><operator>.</operator><name>iterator</name></name><argument_list>()</argument_list></call></expr>;
     <while>while<condition>(<expr><call><name><name>it</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">374</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">374</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestDeletionPolicy</name> extends <name>LuceneTestCase</name>
     <call><name><name>writer</name><operator>.</operator><name>optimize</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><call><name><name>IndexReader</name><operator>.</operator><name>listCommits</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><call><name><name>IndexReader</name><operator>.</operator><name>listCommits</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <comment type="line">// Now open writer on the commit just before optimize:</comment>
     <expr_stmt><expr><name>writer</name> <operator>=</operator> <operator>new</operator> <call><name>IndexWriter</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>WhitespaceAnalyzer</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>policy</name></expr></argument>, <argument><expr><name><name>IndexWriter</name><operator>.</operator><name>MaxFieldLength</name><operator>.</operator><name>LIMITED</name></name></expr></argument>, <argument><expr><name>lastCommit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">395</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">395</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestDeletionPolicy</name> extends <name>LuceneTestCase</name>
     <call><name><name>writer</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
     <comment type="line">// Now 8 because we made another commit</comment>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><call><name><name>IndexReader</name><operator>.</operator><name>listCommits</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><call><name><name>IndexReader</name><operator>.</operator><name>listCommits</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     
     <expr_stmt><expr><name>r</name> <operator>=</operator> <call><name><name>IndexReader</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <comment type="line">// Not optimized because we rolled it back, and now only</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">465</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">465</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestDeletionPolicy</name> extends <name>LuceneTestCase</name>
       <call><name><name>writer</name><operator>.</operator><name>optimize</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
      <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name><name>policy</name><operator>.</operator><name>numOnInit</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name><name>policy</name><operator>.</operator><name>numOnInit</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <comment type="line">// If we are not auto committing then there should</comment>
       <comment type="line">// be exactly 2 commits (one per close above):</comment>
       <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name><name>policy</name><operator>.</operator><name>numOnCommit</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">506</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">506</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestDeletionPolicy</name> extends <name>LuceneTestCase</name></expr></expr_stmt></block_content></block></while>
       }</block>
 
       <call><name>assertTrue</name><argument_list>(<argument><expr><name><name>policy</name><operator>.</operator><name>numDelete</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;
      <expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>N</name><operator>+</operator><literal type="number">1</literal></expr></argument>, <argument><expr><name><name>policy</name><operator>.</operator><name>numOnInit</name></name></expr></argument>)</argument_list></call></expr>;
      <expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>N</name></expr></argument>, <argument><expr><name><name>policy</name><operator>.</operator><name>numOnInit</name></name></expr></argument>)</argument_list></call></expr>;
       <expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>N</name><operator>+</operator><literal type="number">1</literal></expr></argument>, <argument><expr><name><name>policy</name><operator>.</operator><name>numOnCommit</name></name></expr></argument>)</argument_list></call></expr>;
 
       <comment type="line">// Simplistic check: just verify only the past N segments_N's still</comment>
@@ <expr><operator>-</operator><literal type="number">580</literal></expr>,<expr><literal type="number">8</literal> <operator>+</operator><literal type="number">580</literal></expr>,<expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestDeletionPolicy</name> extends <name>LuceneTestCase</name>
       <comment type="line">// this is a commit</comment>
       <call><name><name>writer</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;
 
      <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">2</literal><operator>*</operator><operator>(</operator><name>N</name><operator>+</operator><literal type="number">2</literal><operator>)</operator></expr></argument>, <argument><expr><name><name>policy</name><operator>.</operator><name>numOnInit</name></name></expr></argument>)</argument_list></call></expr>;
      <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">2</literal><operator>*</operator><operator>(</operator><name>N</name><operator>+</operator><literal type="number">2</literal><operator>)</operator><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><name><name>policy</name><operator>.</operator><name>numOnCommit</name></name></expr></argument>)</argument_list></call></expr>;
      <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">2</literal><operator>*</operator><operator>(</operator><name>N</name><operator>+</operator><literal type="number">1</literal><operator>)</operator><operator>+</operator><literal type="number">1</literal></expr></argument>, <argument><expr><name><name>policy</name><operator>.</operator><name>numOnInit</name></name></expr></argument>)</argument_list></call></expr>;
      <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">2</literal><operator>*</operator><operator>(</operator><name>N</name><operator>+</operator><literal type="number">2</literal><operator>)</operator></expr></argument>, <argument><expr><name><name>policy</name><operator>.</operator><name>numOnCommit</name></name></expr></argument>)</argument_list></call></expr>;
 
       <expr><name>IndexSearcher</name> <name>searcher</name> <operator>=</operator> <operator>new</operator> <call><name>IndexSearcher</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;
       <expr><name><name>ScoreDoc</name><index>[]</index></name> <name>hits</name> <operator>=</operator> <call><name><name>searcher</name><operator>.</operator><name>search</name></name><argument_list>(<argument><expr><name>query</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="number">1000</literal></expr></argument>)</argument_list></call><operator>.</operator><name>scoreDocs</name></expr>;
@@ <expr><operator>-</operator><literal type="number">678</literal></expr>,<expr><literal type="number">8</literal> <operator>+</operator><literal type="number">678</literal></expr>,<expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestDeletionPolicy</name> extends <name>LuceneTestCase</name>
         <call><name><name>writer</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;
       }</block>
 
      <call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1</literal><operator>+</operator><literal type="number">3</literal><operator>*</operator><operator>(</operator><name>N</name><operator>+</operator><literal type="number">1</literal><operator>)</operator></expr></argument>, <argument><expr><name><name>policy</name><operator>.</operator><name>numOnInit</name></name></expr></argument>)</argument_list></call></expr>;
      <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">3</literal><operator>*</operator><operator>(</operator><name>N</name><operator>+</operator><literal type="number">1</literal><operator>)</operator></expr></argument>, <argument><expr><name><name>policy</name><operator>.</operator><name>numOnCommit</name></name></expr></argument>)</argument_list></call></expr>;
      <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">3</literal><operator>*</operator><operator>(</operator><name>N</name><operator>+</operator><literal type="number">1</literal><operator>)</operator></expr></argument>, <argument><expr><name><name>policy</name><operator>.</operator><name>numOnInit</name></name></expr></argument>)</argument_list></call></expr>;
      <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">3</literal><operator>*</operator><operator>(</operator><name>N</name><operator>+</operator><literal type="number">1</literal><operator>)</operator><operator>+</operator><literal type="number">1</literal></expr></argument>, <argument><expr><name><name>policy</name><operator>.</operator><name>numOnCommit</name></name></expr></argument>)</argument_list></call></expr>;
 
       <expr><name>IndexSearcher</name> <name>searcher</name> <operator>=</operator> <operator>new</operator> <call><name>IndexSearcher</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;
       <expr><name><name>ScoreDoc</name><index>[]</index></name> <name>hits</name> <operator>=</operator> <call><name><name>searcher</name><operator>.</operator><name>search</name></name><argument_list>(<argument><expr><name>query</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="number">1000</literal></expr></argument>)</argument_list></call><operator>.</operator><name>scoreDocs</name></expr>;
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>backwards</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexFileDeleter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>backwards</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexFileDeleter</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">3f9b716715c</literal><operator>..</operator><name>a23a2984292</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>backwards</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexFileDeleter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>backwards</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexFileDeleter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">136</literal></expr>,<expr><literal type="number">11</literal> <operator>+</operator><literal type="number">136</literal></expr>,<expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestIndexFileDeleter</name> extends <name>LuceneTestCase</name>
     <call><name>copyFile</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><literal type="string">"_0.cfs"</literal></expr></argument>, <argument><expr><literal type="string">"deletable"</literal></expr></argument>)</argument_list></call></expr>;
 
     <comment type="line">// Create some old segments file:</comment>
    <expr><call><name>copyFile</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><literal type="string">"segments_3"</literal></expr></argument>, <argument><expr><literal type="string">"segments"</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>copyFile</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><literal type="string">"segments_3"</literal></expr></argument>, <argument><expr><literal type="string">"segments_2"</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>copyFile</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><literal type="string">"segments_2"</literal></expr></argument>, <argument><expr><literal type="string">"segments"</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>copyFile</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><literal type="string">"segments_2"</literal></expr></argument>, <argument><expr><literal type="string">"segments_1"</literal></expr></argument>)</argument_list></call></expr>;
 
     <comment type="line">// Create a bogus cfs file shadowing a non-cfs segment:</comment>
    <expr><call><name>copyFile</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><literal type="string">"_2.cfs"</literal></expr></argument>, <argument><expr><literal type="string">"_3.cfs"</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>copyFile</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><literal type="string">"_1.cfs"</literal></expr></argument>, <argument><expr><literal type="string">"_2.cfs"</literal></expr></argument>)</argument_list></call></expr>;
 
     <expr><name><name>String</name><index>[]</index></name> <name>filesPre</name> <operator>=</operator> <call><name><name>dir</name><operator>.</operator><name>listAll</name></name><argument_list>()</argument_list></call></expr>;
 
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>backwards</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexReader</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>backwards</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexReader</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">85dedd0151c</literal><operator>..</operator><literal type="number">83acfb946a4</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>backwards</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexReader</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>backwards</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexReader</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">39</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">39</literal></expr>,<expr><literal type="number">7</literal> @@</expr> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Field</name></name>;</import></block></expr>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>FieldSelector</name></name>;</import></block></expr></expr_stmt>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Fieldable</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>SetBasedFieldSelector</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexWriter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>FieldOption</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>FieldCache</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>IndexSearcher</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">474</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">475</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestIndexReader</name> extends <name>LuceneTestCase</name>
 
         <comment type="line">//  add 11 documents with term : aaa</comment>
         <name>writer</name>  <operator>=</operator> <operator>new</operator> <call><name>IndexWriter</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>WhitespaceAnalyzer</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><name><name>IndexWriter</name><operator>.</operator><name>MaxFieldLength</name><operator>.</operator><name>LIMITED</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>commit</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
         <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">11</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
         <block>{<block_content>
             <expr_stmt><expr><call><name>addDoc</name><argument_list>(<argument><expr><name>writer</name></expr></argument>, <argument><expr><call><name><name>searchTerm</name><operator>.</operator><name>text</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1765</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">1767</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestIndexReader</name> extends <name>LuceneTestCase</name>
   <specifier>public</specifier> <name>void</name> <call><name>testPrepareCommitIsCurrent</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Throwable</name> <block>{
     <expr><name>Directory</name> <name>dir</name> <operator>=</operator> <operator>new</operator> <call><name>MockRAMDirectory</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>IndexWriter</name></type> <name>writer</name> <init>= <expr><operator>new</operator> <call><name>IndexWriter</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>WhitespaceAnalyzer</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>IndexWriter</name><operator>.</operator><name>MaxFieldLength</name><operator>.</operator><name>UNLIMITED</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>commit</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>Document</name></type> <name>doc</name> <init>= <expr><operator>new</operator> <call><name>Document</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>addDocument</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>IndexReader</name></type> <name>r</name> <init>= <expr><call><name><name>IndexReader</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>backwards</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexReaderReopen</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>backwards</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexReaderReopen</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">56d97826f8f</literal><operator>..</operator><literal type="number">1fcf011d026</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>backwards</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexReaderReopen</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>backwards</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexReaderReopen</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">36</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">36</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Document</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Field</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Field</name><operator>.</operator><name>Index</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Field</name><operator>.</operator><name>Store</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexWriter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexWriter</name><operator>.</operator><name>MaxFieldLength</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>IndexSearcher</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>ScoreDoc</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">172</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">173</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestIndexReaderReopen</name> extends <name>LuceneTestCase</name> <block>{
   <expr><specifier>private</specifier> <name>void</name> <call><name>doTestReopenWithCommit</name> <argument_list>(<argument><expr><name>Directory</name> <name>dir</name></expr></argument>, <argument><expr><name>boolean</name> <name>withReopen</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><name>IndexWriter</name> <name>iwriter</name> <operator>=</operator> <operator>new</operator> <call><name>IndexWriter</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>KeywordAnalyzer</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><name><name>MaxFieldLength</name><operator>.</operator><name>LIMITED</name></name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
     <expr><call><name><name>iwriter</name><operator>.</operator><name>setMergeScheduler</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>SerialMergeScheduler</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>iwriter</name><operator>.</operator><name>commit</name></name><argument_list>()</argument_list></call></expr>;
     <expr><name>IndexReader</name> <name>reader</name> <operator>=</operator> <call><name><name>IndexReader</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;
     <try>try <block>{<block_content>
       <decl_stmt><decl><type><name>int</name></type> <name>M</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>backwards</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexWriter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>backwards</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexWriter</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>a47ebe66104</name><operator>..</operator><name>b8367c2768b</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>backwards</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexWriter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>backwards</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexWriter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">47</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">47</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>tokenattributes</name><operator>.</operator><name>TermAttribute</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>tokenattributes</name><operator>.</operator><name>PositionIncrementAttribute</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Document</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Field</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexWriter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>IndexSearcher</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>PhraseQuery</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Query</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">783</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">784</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestIndexWriter</name> extends <name>LuceneTestCase</name> <block>{
         <expr><call><name><name>writer</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;
 
         <expr><name>long</name> <name>gen</name> <operator>=</operator> <call><name><name>SegmentInfos</name><operator>.</operator><name>getCurrentSegmentGeneration</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"segment generation should be &gt; 1 but got "</literal> <operator>+</operator> <name>gen</name></expr></argument>, <argument><expr><name>gen</name> <operator>&gt;</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"segment generation should be &gt; 0 but got "</literal> <operator>+</operator> <name>gen</name></expr></argument>, <argument><expr><name>gen</name> <operator>&gt;</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;
 
         <comment type="line">// Make the next segments file, with last byte</comment>
         <comment type="line">// missing, to simulate a writer that crashed while</comment>
@@ <expr><operator>-</operator><literal type="number">843</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">844</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestIndexWriter</name> extends <name>LuceneTestCase</name> <block>{
         <expr><call><name><name>writer</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;
 
         <expr><name>long</name> <name>gen</name> <operator>=</operator> <call><name><name>SegmentInfos</name><operator>.</operator><name>getCurrentSegmentGeneration</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"segment generation should be &gt; 1 but got "</literal> <operator>+</operator> <name>gen</name></expr></argument>, <argument><expr><name>gen</name> <operator>&gt;</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"segment generation should be &gt; 0 but got "</literal> <operator>+</operator> <name>gen</name></expr></argument>, <argument><expr><name>gen</name> <operator>&gt;</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;
 
         <expr><name>String</name> <name>fileNameIn</name> <operator>=</operator> <call><name><name>SegmentInfos</name><operator>.</operator><name>getCurrentSegmentFileName</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr>;
         <expr><name>String</name> <name>fileNameOut</name> <operator>=</operator> <call><name><name>IndexFileNames</name><operator>.</operator><name>fileNameFromGeneration</name></name><argument_list>(<argument><expr><name><name>IndexFileNames</name><operator>.</operator><name>SEGMENTS</name></name></expr></argument>,
<argument>@@ <expr><operator>-</operator><literal type="number">908</literal></expr></argument>,<argument><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">909</literal></expr></argument>,<argument><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestIndexWriter</name> extends <name>LuceneTestCase</name> <block>{
         <expr><call><name><name>writer</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;
 
         <expr><name>long</name> <name>gen</name> <operator>=</operator> <call><name><name>SegmentInfos</name><operator>.</operator><name>getCurrentSegmentGeneration</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"segment generation should be &gt; 1 but got "</literal> <operator>+</operator> <name>gen</name></expr></argument>, <argument><expr><name>gen</name> <operator>&gt;</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"segment generation should be &gt; 0 but got "</literal> <operator>+</operator> <name>gen</name></expr></argument>, <argument><expr><name>gen</name> <operator>&gt;</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;
 
         <expr><name><name>String</name><index>[]</index></name> <name>files</name> <operator>=</operator> <call><name><name>dir</name><operator>.</operator><name>listAll</name></name><argument_list>()</argument_list></call></expr>;
         <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name><name>files</name><operator>.</operator><name>length</name></name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">2324</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">2325</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestIndexWriter</name> extends <name>LuceneTestCase</name> <block>{
   <expr><specifier>public</specifier> <name>void</name> <call><name>testImmediateDiskFull</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><name>MockRAMDirectory</name> <name>dir</name> <operator>=</operator> <operator>new</operator> <call><name>MockRAMDirectory</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
     <expr><name>IndexWriter</name> <name>writer</name> <operator>=</operator> <operator>new</operator> <call><name>IndexWriter</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>WhitespaceAnalyzer</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>IndexWriter</name><operator>.</operator><name>MaxFieldLength</name><operator>.</operator><name>LIMITED</name></name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>dir</name><operator>.</operator><name>setMaxSizeInBytes</name></name><argument_list>(<argument><expr><call><name><name>dir</name><operator>.</operator><name>getRecomputedActualSizeInBytes</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>dir</name><operator>.</operator><name>setMaxSizeInBytes</name></name><argument_list>(<argument><expr><call><name><name>Math</name><operator>.</operator><name>max</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><call><name><name>dir</name><operator>.</operator><name>getRecomputedActualSizeInBytes</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>writer</name><operator>.</operator><name>setMaxBufferedDocs</name></name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;
     <expr><name>final</name> <name>Document</name> <name>doc</name> <operator>=</operator> <operator>new</operator> <call><name>Document</name><argument_list>()</argument_list></call></expr>;
     <expr><call><name><name>doc</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Field</name><argument_list>(<argument><expr><literal type="string">"field"</literal></expr></argument>, <argument><expr><literal type="string">"aaa bbb ccc ddd eee fff ggg hhh iii jjj"</literal></expr></argument>, <argument><expr><name><name>Field</name><operator>.</operator><name>Store</name><operator>.</operator><name>YES</name></name></expr></argument>, <argument><expr><name><name>Field</name><operator>.</operator><name>Index</name><operator>.</operator><name>ANALYZED</name></name></expr></argument>, <argument><expr><name><name>Field</name><operator>.</operator><name>TermVector</name><operator>.</operator><name>WITH_POSITIONS_OFFSETS</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">2647</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">2648</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestIndexWriter</name> extends <name>LuceneTestCase</name> <block>{
     <expr><call><name><name>writer</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;
 
     <expr><name>long</name> <name>gen</name> <operator>=</operator> <call><name><name>SegmentInfos</name><operator>.</operator><name>getCurrentSegmentGeneration</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"segment generation should be &gt; 1 but got "</literal> <operator>+</operator> <name>gen</name></expr></argument>, <argument><expr><name>gen</name> <operator>&gt;</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"segment generation should be &gt; 0 but got "</literal> <operator>+</operator> <name>gen</name></expr></argument>, <argument><expr><name>gen</name> <operator>&gt;</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;
 
     <expr><name>final</name> <name>String</name> <name>segmentsFileName</name> <operator>=</operator> <call><name><name>SegmentInfos</name><operator>.</operator><name>getCurrentSegmentFileName</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr>;
     <expr><name>IndexInput</name> <name>in</name> <operator>=</operator> <call><name><name>dir</name><operator>.</operator><name>openInput</name></name><argument_list>(<argument><expr><name>segmentsFileName</name></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">2675</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">2676</literal></expr>,<expr><literal type="number">8</literal> @@ <specifier>public</specifier> class <name>TestIndexWriter</name> extends <name>LuceneTestCase</name> <block>{
     <expr><name>IndexWriter</name> <name>writer</name>  <operator>=</operator> <operator>new</operator> <call><name>IndexWriter</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>WhitespaceAnalyzer</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>IndexWriter</name><operator>.</operator><name>MaxFieldLength</name><operator>.</operator><name>LIMITED</name></name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>writer</name><operator>.</operator><name>setMaxBufferedDocs</name></name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>writer</name><operator>.</operator><name>setMergeFactor</name></name><argument_list>(<argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;

    <expr><call><name><name>writer</name><operator>.</operator><name>commit</name></name><argument_list>()</argument_list></call></expr>;
    
     <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">23</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
       <expr_stmt><expr><call><name>addDoc</name><argument_list>(<argument><expr><name>writer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
 
@@ <operator>-</operator><literal type="number">3542</literal><operator>,</operator><literal type="number">7</literal> <operator>+</operator><literal type="number">3544</literal><operator>,</operator><literal type="number">8</literal> @@ <specifier>public</specifier> class <name>TestIndexWriter</name> extends <name>LuceneTestCase</name> <block>{
     <expr><name>IndexWriter</name> <name>writer</name> <operator>=</operator> <operator>new</operator> <call><name>IndexWriter</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>WhitespaceAnalyzer</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>IndexWriter</name><operator>.</operator><name>MaxFieldLength</name><operator>.</operator><name>LIMITED</name></name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>writer</name><operator>.</operator><name>setMaxBufferedDocs</name></name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>writer</name><operator>.</operator><name>setMergeFactor</name></name><argument_list>(<argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;

    <expr><call><name><name>writer</name><operator>.</operator><name>commit</name></name><argument_list>()</argument_list></call></expr>;
    
     <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">23</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
       <expr_stmt><expr><call><name>addDoc</name><argument_list>(<argument><expr><name>writer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
 
@@ <operator>-</operator><literal type="number">3595</literal><operator>,</operator><literal type="number">7</literal> <operator>+</operator><literal type="number">3598</literal><operator>,</operator><literal type="number">8</literal> @@ <specifier>public</specifier> class <name>TestIndexWriter</name> extends <name>LuceneTestCase</name> <block>{
 
     <expr><call><name><name>writer</name><operator>.</operator><name>setMaxBufferedDocs</name></name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>writer</name><operator>.</operator><name>setMergeFactor</name></name><argument_list>(<argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;

    <expr><call><name><name>writer</name><operator>.</operator><name>commit</name></name><argument_list>()</argument_list></call></expr>;
    
     <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">23</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
       <expr_stmt><expr><call><name>addDoc</name><argument_list>(<argument><expr><name>writer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
 
@@ <operator>-</operator><literal type="number">3679</literal><operator>,</operator><literal type="number">6</literal> <operator>+</operator><literal type="number">3683</literal><operator>,</operator><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestIndexWriter</name> extends <name>LuceneTestCase</name> <block>{
 
       <expr><name>dir2</name> <operator>=</operator> <operator>new</operator> <call><name>MockRAMDirectory</name><argument_list>()</argument_list></call></expr>;
       <expr><name>writer2</name> <operator>=</operator> <operator>new</operator> <call><name>IndexWriter</name><argument_list>(<argument><expr><name>dir2</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>WhitespaceAnalyzer</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>IndexWriter</name><operator>.</operator><name>MaxFieldLength</name><operator>.</operator><name>LIMITED</name></name></expr></argument>)</argument_list></call></expr>;
      <expr><call><name><name>writer2</name><operator>.</operator><name>commit</name></name><argument_list>()</argument_list></call></expr>;
       <expr><name>cms</name> <operator>=</operator> <operator>(</operator><name>ConcurrentMergeScheduler</name><operator>)</operator> <call><name><name>writer2</name><operator>.</operator><name>getMergeScheduler</name></name><argument_list>()</argument_list></call></expr>;
 
       <expr><name>readers</name> <operator>=</operator> <operator>new</operator> <name><name>IndexReader</name><index>[<expr><name>NUM_COPY</name></expr>]</index></name></expr>;
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>backwards</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexWriterDelete</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>backwards</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexWriterDelete</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">2a866128cb6</literal><operator>..</operator><name>d030d3fa09b</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>backwards</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexWriterDelete</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>backwards</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexWriterDelete</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">23</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">23</literal></expr>,<expr><literal type="number">7</literal> @@</expr> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import></block></block></block></block></expr>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>WhitespaceAnalyzer</name></name>;</import></block></expr>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Document</name></name>;</import></block></expr></expr_stmt>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Field</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexWriter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>IndexSearcher</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>ScoreDoc</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>TermQuery</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">764</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">765</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestIndexWriterDelete</name> extends <name>LuceneTestCase</name> <block>{
     <expr><name>MockRAMDirectory</name> <name>dir</name> <operator>=</operator> <operator>new</operator> <call><name>MockRAMDirectory</name><argument_list>()</argument_list></call></expr>;
     <expr><name>IndexWriter</name> <name>modifier</name> <operator>=</operator> <operator>new</operator> <call><name>IndexWriter</name><argument_list>(<argument><expr><name>dir</name></expr></argument>,
                                            <argument><expr><operator>new</operator> <call><name>WhitespaceAnalyzer</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><name><name>IndexWriter</name><operator>.</operator><name>MaxFieldLength</name><operator>.</operator><name>UNLIMITED</name></name></expr></argument>)</argument_list></call></expr>;

    <expr><call><name><name>modifier</name><operator>.</operator><name>commit</name></name><argument_list>()</argument_list></call></expr>;
     <expr><call><name><name>dir</name><operator>.</operator><name>failOn</name></name><argument_list>(<argument><expr><call><name><name>failure</name><operator>.</operator><name>reset</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
     <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>keywords</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>backwards</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexWriterExceptions</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>backwards</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexWriterExceptions</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>babc13bb4ba</name><operator>..</operator><name>e0edca32d8f</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>backwards</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexWriterExceptions</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>backwards</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexWriterExceptions</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">138</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">138</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> class <name>TestIndexWriterExceptions</name> extends <name>LuceneTestCase</name> <block>{
     <expr><operator>(</operator><operator>(</operator><name>ConcurrentMergeScheduler</name><operator>)</operator> <call><name><name>writer</name><operator>.</operator><name>getMergeScheduler</name></name><argument_list>()</argument_list></call><operator>)</operator><operator>.</operator><call><name>setSuppressExceptions</name><argument_list>()</argument_list></call></expr>;
     <comment type="line">//writer.setMaxBufferedDocs(10);</comment>
     <expr><call><name><name>writer</name><operator>.</operator><name>setRAMBufferSizeMB</name></name><argument_list>(<argument><expr><literal type="number">0.1</literal></expr></argument>)</argument_list></call></expr>;

    <expr><call><name><name>writer</name><operator>.</operator><name>commit</name></name><argument_list>()</argument_list></call></expr>;
    
     <if_stmt><if>if <condition>(<expr><name>DEBUG</name></expr>)</condition><block type="pseudo"><block_content>
       <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>setInfoStream</name></name><argument_list>(<argument><expr><name><name>System</name><operator>.</operator><name>out</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
 
@@ <operator>-</operator><literal type="number">176</literal><operator>,</operator><literal type="number">6</literal> <operator>+</operator><literal type="number">177</literal><operator>,</operator><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestIndexWriterExceptions</name> extends <name>LuceneTestCase</name> <block>{
     <expr><operator>(</operator><operator>(</operator><name>ConcurrentMergeScheduler</name><operator>)</operator> <call><name><name>writer</name><operator>.</operator><name>getMergeScheduler</name></name><argument_list>()</argument_list></call><operator>)</operator><operator>.</operator><call><name>setSuppressExceptions</name><argument_list>()</argument_list></call></expr>;
     <comment type="line">//writer.setMaxBufferedDocs(10);</comment>
     <expr><call><name><name>writer</name><operator>.</operator><name>setRAMBufferSizeMB</name></name><argument_list>(<argument><expr><literal type="number">0.2</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>writer</name><operator>.</operator><name>commit</name></name><argument_list>()</argument_list></call></expr>;
 
     <if_stmt><if>if <condition>(<expr><name>DEBUG</name></expr>)</condition><block type="pseudo"><block_content>
       <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>setInfoStream</name></name><argument_list>(<argument><expr><name><name>System</name><operator>.</operator><name>out</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>backwards</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexWriterReader</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>backwards</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexWriterReader</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">38be635561d</literal><operator>..</operator><literal type="number">6c8799dec8c</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>backwards</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexWriterReader</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>backwards</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexWriterReader</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">30</literal><operator>,</operator><literal type="number">6</literal> <operator>+</operator><literal type="number">30</literal><operator>,</operator><literal type="number">7</literal> @@</block></block></expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Field</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Field</name><operator>.</operator><name>Index</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Field</name><operator>.</operator><name>Store</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Field</name><operator>.</operator><name>TermVector</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexWriter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>TermQuery</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>IndexSearcher</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Query</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">642</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">643</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestIndexWriterReader</name> extends <name>LuceneTestCase</name> <block>{
     <expr><name>Directory</name> <name>dir1</name> <operator>=</operator> <operator>new</operator> <call><name>MockRAMDirectory</name><argument_list>()</argument_list></call></expr>;
     <expr><name>IndexWriter</name> <name>writer</name> <operator>=</operator> <operator>new</operator> <call><name>IndexWriter</name><argument_list>(<argument><expr><name>dir1</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>WhitespaceAnalyzer</name><argument_list>()</argument_list></call></expr></argument>,
                                          <argument><expr><name><name>IndexWriter</name><operator>.</operator><name>MaxFieldLength</name><operator>.</operator><name>LIMITED</name></name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>writer</name><operator>.</operator><name>commit</name></name><argument_list>()</argument_list></call></expr>;
     <expr><call><name><name>writer</name><operator>.</operator><name>setInfoStream</name></name><argument_list>(<argument><expr><name>infoStream</name></expr></argument>)</argument_list></call></expr>;
 
     <comment type="line">// create the index</comment>
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>backwards</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestStressIndexing</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>backwards</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestStressIndexing</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">01c51d5a825</literal><operator>..</operator><name>cc3de2a2090</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>backwards</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestStressIndexing</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>backwards</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestStressIndexing</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">19</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">19</literal></expr>,<expr><literal type="number">7</literal> @@</expr> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name></name>;</package></block></expr></expr_stmt>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>*</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>*</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>*</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexWriter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>*</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>*</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>queryParser</name><operator>.</operator><name>*</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">121</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">122</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestStressIndexing</name> extends <name>LuceneTestCase</name> <block>{
   <expr><operator>*</operator><operator>/</operator>
   <specifier>public</specifier> <name>void</name> <call><name>runStressTest</name><argument_list>(<argument><expr><name>Directory</name> <name>directory</name></expr></argument>, <argument><expr><name>MergeScheduler</name> <name>mergeScheduler</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><name>IndexWriter</name> <name>modifier</name> <operator>=</operator> <operator>new</operator> <call><name>IndexWriter</name><argument_list>(<argument><expr><name>directory</name></expr></argument>, <argument><expr><name>ANALYZER</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><name><name>IndexWriter</name><operator>.</operator><name>MaxFieldLength</name><operator>.</operator><name>UNLIMITED</name></name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;

    <expr><call><name><name>modifier</name><operator>.</operator><name>commit</name></name><argument_list>()</argument_list></call></expr>;
     <expr><call><name><name>modifier</name><operator>.</operator><name>setMaxBufferedDocs</name></name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;
 
     <expr><name><name>TimedThread</name><index>[]</index></name> <name>threads</name> <operator>=</operator> <operator>new</operator> <name><name>TimedThread</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr>;
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>backwards</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestStressIndexing2</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>backwards</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestStressIndexing2</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">0f02bcdaeb5</literal><operator>..</operator><literal type="number">0d7a8dabae3</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>backwards</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestStressIndexing2</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>backwards</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestStressIndexing2</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">16</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">16</literal></expr>,<expr><literal type="number">7</literal> @@</expr> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name></name>;</package></block></expr></expr_stmt>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>*</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>*</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexWriter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>*</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>LuceneTestCase</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">124</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">125</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestStressIndexing2</name> extends <name>LuceneTestCase</name> <block>{
   <expr><specifier>public</specifier> <name>DocsAndWriter</name> <call><name>indexRandomIWReader</name><argument_list>(<argument><expr><name>int</name> <name>nThreads</name></expr></argument>, <argument><expr><name>int</name> <name>iterations</name></expr></argument>, <argument><expr><name>int</name> <name>range</name></expr></argument>, <argument><expr><name>Directory</name> <name>dir</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name></expr></argument>, <argument><expr><name>InterruptedException</name> <block>{
     <expr><name>Map</name> <name>docs</name> <operator>=</operator> <operator>new</operator> <call><name>HashMap</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
     <expr><name>IndexWriter</name> <name>w</name> <operator>=</operator> <operator>new</operator> <call><name>MockIndexWriter</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>WhitespaceAnalyzer</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><name><name>IndexWriter</name><operator>.</operator><name>MaxFieldLength</name><operator>.</operator><name>UNLIMITED</name></name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>w</name><operator>.</operator><name>commit</name></name><argument_list>()</argument_list></call></expr>;
     <expr><call><name><name>w</name><operator>.</operator><name>setUseCompoundFile</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;
 
     <comment type="block" format="javadoc">/***
diff --git a/lucene/backwards/src/test/org/apache/lucene/store/TestBufferedIndexInput.java b/lucene/backwards/src/test/org/apache/lucene/store/TestBufferedIndexInput.java
index def32daddb6..e89a4f7e075 100755
-- a/lucene/backwards/src/test/org/apache/lucene/store/TestBufferedIndexInput.java
++ b/lucene/backwards/src/test/org/apache/lucene/store/TestBufferedIndexInput.java
@@ -241,6 +241,7 @@ public class TestBufferedIndexInput extends LuceneTestCase {
 
     public void testSetBufferSize() throws IOException {
       File indexDir = new File(System.getProperty("tempDir"), "testSetBufferSize");
      indexDir.mkdirs(); // required for this MockFSDir since we don't commit on IW creation anymore.
       MockFSDirectory dir = new MockFSDirectory(indexDir, newRandom());
       try {
         IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);
diff --git a/lucene/backwards/src/test/org/apache/lucene/store/TestLockFactory.java b/lucene/backwards/src/test/org/apache/lucene/store/TestLockFactory.java
index 75215840b09..37bb83e3772 100755
-- a/lucene/backwards/src/test/org/apache/lucene/store/TestLockFactory.java
++ b/lucene/backwards/src/test/org/apache/lucene/store/TestLockFactory.java
@@ -85,7 +85,8 @@ public class TestLockFactory extends LuceneTestCase {
 
         IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true,
                                              IndexWriter.MaxFieldLength.LIMITED);

        writer.commit(); // required so the second open succeed
        
         // Create a 2nd IndexWriter.  This is normally not allowed but it should run through since we're not
         // using any locks:
         IndexWriter writer2 = null;
diff --git a/lucene/backwards/src/test/org/apache/lucene/store/TestWindowsMMap.java b/lucene/backwards/src/test/org/apache/lucene/store/TestWindowsMMap.java
index 45aa61b0b4d..d1e54410136 100644
-- a/lucene/backwards/src/test/org/apache/lucene/store/TestWindowsMMap.java
++ b/lucene/backwards/src/test/org/apache/lucene/store/TestWindowsMMap.java
@@ -64,14 +64,18 @@ public class TestWindowsMMap extends LuceneTestCase {
     new File(System.getProperty("tempDir"),"testLuceneMmap").getAbsolutePath();
 
   public void testMmapIndex() throws Exception {
    FSDirectory storeDirectory;
    storeDirectory = new MMapDirectory(new File(storePathname), null);
    // sometimes the directory is not cleaned by rmDir, because on Windows it
    // may take some time until the files are finally dereferenced. So clean the
    // directory up front, or otherwise new IndexWriter will fail.
    rmDir(new File(storePathname));
    FSDirectory storeDirectory = new MMapDirectory(new File(storePathname), null);
 
     // plan to add a set of useful stopwords, consider changing some of the
     // interior filters.
     StandardAnalyzer analyzer = new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT, Collections.emptySet());
     // TODO: something about lock timeouts and leftover locks.
     IndexWriter writer = new IndexWriter(storeDirectory, analyzer, true, IndexWriter.MaxFieldLength.LIMITED);
    writer.commit();
     IndexSearcher searcher = new IndexSearcher(storeDirectory, true);
     
     for(int dx = 0; dx &lt; 1000; dx ++) {
@@ -83,14 +87,16 @@ public class TestWindowsMMap extends LuceneTestCase {
     
     searcher.close();
     writer.close();
                rmDir(new File(storePathname));
    rmDir(new File(storePathname));
   }
 
        private void rmDir(File dir) {
          File[] files = dir.listFiles();
          for (int i = 0; i &lt; files.length; i++) {
            files[i].delete();
          }
          dir.delete();
        }
  private void rmDir(File dir) {
    if (!dir.exists()) {
      return;
    }
    for (File file : dir.listFiles()) {
      file.delete();
    }
    dir.delete();
  }
 }
diff --git a/lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/builders/TestNumericRangeFilterBuilder.java b/lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/builders/TestNumericRangeFilterBuilder.java
index 5e7fe7b7ffc..b5f4915f851 100644
-- a/lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/builders/TestNumericRangeFilterBuilder.java
++ b/lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/builders/TestNumericRangeFilterBuilder.java
@@ -29,6 +29,7 @@ import org.apache.lucene.util.LuceneTestCase;
 
 import org.apache.lucene.index.IndexReader;
 import org.apache.lucene.index.IndexWriter;
import org.apache.lucene.index.IndexWriterConfig;
 import org.apache.lucene.index.IndexWriter.MaxFieldLength;
 import org.apache.lucene.search.Filter;
 import org.apache.lucene.search.NumericRangeFilter;
@@ -62,7 +63,8 @@ public class TestNumericRangeFilterBuilder extends LuceneTestCase {
 		Filter filter = filterBuilder.getFilter(doc.getDocumentElement());
 
 		RAMDirectory ramDir = new RAMDirectory();
		IndexWriter writer = new IndexWriter(ramDir, null, MaxFieldLength.UNLIMITED);
		IndexWriter writer = new IndexWriter(ramDir, new IndexWriterConfig(TEST_VERSION_CURRENT, null));
		writer.commit();
 		try
 		{
 			IndexReader reader = IndexReader.open(ramDir, true);
diff --git a/lucene/src/java/org/apache/lucene/index/IndexFileDeleter.java b/lucene/src/java/org/apache/lucene/index/IndexFileDeleter.java
index 5059435bad5..aa82f565d25 100644
-- a/lucene/src/java/org/apache/lucene/index/IndexFileDeleter.java
++ b/lucene/src/java/org/apache/lucene/index/IndexFileDeleter.java
@@ -31,6 +31,7 @@ import java.util.Map;
 
 import org.apache.lucene.index.codecs.CodecProvider;
 import org.apache.lucene.store.Directory;
import org.apache.lucene.store.NoSuchDirectoryException;
 
 /*
  * This class keeps track of each SegmentInfos instance that
@@ -144,16 +145,21 @@ final class IndexFileDeleter {
     long currentGen = segmentInfos.getGeneration();
     indexFilenameFilter = new IndexFileNameFilter(codecs);
     
    String[] files = directory.listAll();

     CommitPoint currentCommitPoint = null;
    boolean seenIndexFiles = false;
    String[] files = null;
    try {
      files = directory.listAll();
    } catch (NoSuchDirectoryException e) {  
      // it means the directory is empty, so ignore it.
      files = new String[0];
    }
 
    for(int i=0;i&lt;files.length;i++) {

      String fileName = files[i];
    for (String fileName : files) {
 
       if ((indexFilenameFilter.accept(null, fileName)) &amp;&amp; !fileName.endsWith("write.lock") &amp;&amp; !fileName.equals(IndexFileNames.SEGMENTS_GEN)) {

        seenIndexFiles = true;
        
         // Add this file to refCounts with initial count 0:
         getRefCount(fileName);
 
@@ -195,7 +201,10 @@ final class IndexFileDeleter {
       }
     }
 
    if (currentCommitPoint == null) {
    // If we haven't seen any Lucene files, then currentCommitPoint is expected
    // to be null, because it means it's a fresh Directory. Therefore it cannot
    // be any NFS cache issues - so just ignore.
    if (currentCommitPoint == null &amp;&amp; seenIndexFiles) {
       // We did not in fact see the segments_N file
       // corresponding to the segmentInfos that was passed
       // in.  Yet, it must exist, because our caller holds
@@ -235,13 +244,15 @@ final class IndexFileDeleter {
 
     // Finally, give policy a chance to remove things on
     // startup:
    policy.onInit(commits);
    if (seenIndexFiles) {
      policy.onInit(commits);
    }
 
     // Always protect the incoming segmentInfos since
     // sometime it may not be the most recent commit
     checkpoint(segmentInfos, false);
     
    startingCommitDeleted = currentCommitPoint.isDeleted();
    startingCommitDeleted = currentCommitPoint == null ? false : currentCommitPoint.isDeleted();
 
     deleteCommits();
   }
diff --git a/lucene/src/java/org/apache/lucene/index/IndexNotFoundException.java b/lucene/src/java/org/apache/lucene/index/IndexNotFoundException.java
new file mode 100644
index 00000000000..5e7107448b8
-- /dev/null
++ b/lucene/src/java/org/apache/lucene/index/IndexNotFoundException.java
@@ -0,0 +1,32 @@
package org.apache.lucene.index;

/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<expr><name>import</name> <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>FileNotFoundException</name></name></expr>;

<comment type="block" format="javadoc">/**
 * Signals that no index was found in the Directory. Possibly because the
 * directory is empty, however can slso indicate an index corruption.
 */</comment>
<expr><specifier>public</specifier> <name>final</name> class <name>IndexNotFoundException</name> extends <name>FileNotFoundException</name> <block>{

  <expr><specifier>public</specifier> <call><name>IndexNotFoundException</name><argument_list>(<argument><expr><name>String</name> <name>msg</name></expr></argument>)</argument_list></call> <block>{
    <expr><call><name>super</name><argument_list>(<argument><expr><name>msg</name></expr></argument>)</argument_list></call></expr>;
  }</block></expr>

}</block>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>IndexReader</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>IndexReader</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">85a61212200</literal><operator>..</operator><name>acd95817c11</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>IndexReader</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>IndexReader</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">1334</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">1334</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> class <name>IndexReader</name> implements <name>Cloneable</name></expr>,<expr><name>Closeable</name> <block>{
    <expr><operator>*</operator>  <name>it</name> <name>by</name> <name>calling</name> <block>{@<expr><name>link</name> <name>IndexReader</name><operator>#</operator><call><name>open</name><argument_list>(<argument><expr><name>IndexCommit</name></expr></argument>,<argument><expr><name>boolean</name></expr></argument>)</argument_list></call></expr>}</block>
    <operator>*</operator>  <name>There</name> <name>must</name> <name>be</name> <name>at</name> <name>least</name> <name>one</name> <name>commit</name> <name>in</name>
    <operator>*</operator>  <name>the</name> <name>Directory</name></expr>, <if_stmt><else>else<block type="pseudo"><block_content> <expr_stmt><expr><name>this</name> <name>method</name> <throws>throws <argument><expr><block>{<expr><annotation>@<name>link</name></annotation>
   <operator>*</operator>  <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name></expr>}</block><operator>.</operator>  <name>Note</name> <name>that</name></expr></argument></throws></expr></expr_stmt></block_content></block></else></if_stmt> <if_stmt><if>if a commit is in
   *  IndexNotFoundException}.  Note that if a commit is in
    *  progress while this method is running<operator>,</operator> <expr_stmt><expr><name>that</name> <name>commit</name>
    <operator>*</operator>  <name>may</name> <name>or</name> <name>may</name> <name>not</name> <name>be</name> <name>returned</name> <name><name>array</name><operator>.</operator></name>  *<operator>/</operator>
   <specifier>public</specifier> <specifier>static</specifier> <name><name>Collection</name><argument_list type="generic">&lt;<argument><name>IndexCommit</name></argument>&gt;</argument_list></name> <call><name>listCommits</name><argument_list>(<argument><expr><name>Directory</name> <name>dir</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>IndexWriter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>IndexWriter</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">9a1c78f7885</literal><operator>..</operator><literal type="number">3e71f822c03</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>IndexWriter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>IndexWriter</name><operator>.</operator><name>java</name></name></expr></block></expr></argument>
@<argument>@ <expr><operator>-</operator><literal type="number">1115</literal></expr></argument>,<argument><expr><literal type="number">25</literal> <operator>+</operator><literal type="number">1115</literal></expr></argument>,<argument><expr><literal type="number">16</literal> @@ <specifier>public</specifier> class <name>IndexWriter</name> implements <name>Closeable</name></expr></argument></throws> <block>{<block_content>
         <comment type="line">// against an index that's currently open for</comment>
         <comment type="line">// searching.  In this case we write the next</comment>
         <comment type="line">// segments_N file with no segments:</comment>
        <decl_stmt><decl><type><name>boolean</name></type> <name>doCommit</name></decl>;</decl_stmt>
         <try>try <block>{<block_content>
           <expr_stmt><expr><call><name><name>segmentInfos</name><operator>.</operator><name>read</name></name><argument_list>(<argument><expr><name>directory</name></expr></argument>, <argument><expr><name>codecs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           <expr_stmt><expr><call><name><name>segmentInfos</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><name>doCommit</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
         <expr_stmt/>}</block_content> catch (IOException e</block></try>)</block_content> <block>{<block_content>
           <comment type="line">// Likely this means it's a fresh directory</comment>
          <expr_stmt><expr><name>doCommit</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
         <expr_stmt/>}</block_content>
 
        if (doCommit</block></block></expr></expr_stmt></if></if_stmt>)</block> <block>{
          <comment type="line">// Only commit if there is no segments file in</comment>
          <comment type="line">// this dir already.</comment>
          <expr><call><name><name>segmentInfos</name><operator>.</operator><name>commit</name></name><argument_list>(<argument><expr><name>directory</name></expr></argument>)</argument_list></call></expr>;
        }</block></expr> <if_stmt><else>else <block>{<block_content>
          <comment type="line">// Record that we have a change (zero out all</comment>
          <comment type="line">// segments) pending:</comment>
          <expr_stmt><expr><name>changeCount</name><operator>++</operator></expr>;</expr_stmt>
        <expr_stmt/>}</block_content>
        <comment type="line">// Record that we have a change (zero out all</comment>
        <comment type="line">// segments) pending:</comment>
        changeCount++</block><empty_stmt>;</empty_stmt></else></if_stmt>
       }</block></expr></expr_stmt> <if_stmt><else>else <block>{<block_content>
         <expr_stmt><expr><call><name><name>segmentInfos</name><operator>.</operator><name>read</name></name><argument_list>(<argument><expr><name>directory</name></expr></argument>, <argument><expr><name>codecs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>SegmentInfos</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>SegmentInfos</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>a368cecf2bb</name><operator>..</operator><literal type="number">4d53e9869a0</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>SegmentInfos</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>SegmentInfos</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">649</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">649</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>final</name> class <name>SegmentInfos</name> extends <name><name>Vector</name><argument_list type="generic">&lt;<argument><name>SegmentInfo</name></argument>&gt;</argument_list></name> <block>{
           
           <if_stmt><if>if <condition>(<expr><name>gen</name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition> <block>{<block_content>
             <comment type="line">// Neither approach found a generation</comment>
            <throw>throw <expr><operator>new</operator> <call><name>FileNotFoundException</name><argument_list>(<argument><expr><literal type="string">"no segments* file found in "</literal> <operator>+</operator> <name>directory</name> <operator>+</operator> <literal type="string">": files: "</literal> <operator>+</operator> <call><name><name>Arrays</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><name>files</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
            <throw>throw <expr><operator>new</operator> <call><name>IndexNotFoundException</name><argument_list>(<argument><expr><literal type="string">"no segments* file found in "</literal> <operator>+</operator> <name>directory</name> <operator>+</operator> <literal type="string">": files: "</literal> <operator>+</operator> <call><name><name>Arrays</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><name>files</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
           <expr_stmt/>}</block_content>
         }
 
diff --git a/lucene/src/java/org/apache/lucene/store/Directory.java b/lucene/src/java/org/apache/lucene/store/Directory.java
index 8ab8d07b308..0fc2ae3df00 100644
-- a/lucene/src/java/org/apache/lucene/store/Directory.java
++ b/lucene/src/java/org/apache/lucene/store/Directory.java
@@ -48</block><operator>,</operator><expr_stmt><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">48</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> class <name>Directory</name> implements <name>Closeable</name> <block>{
    <expr><operator>*</operator> <name>this</name> <name>Directory</name> <name>instance</name></expr></block></expr></expr_stmt></if></if_stmt></block></expr></expr_stmt></block_content></block></else></if_stmt></block_content></block></for></block></expr></expr_stmt></block_content></block></for></block></expr></argument>)</argument_list></call><operator>.</operator> <operator>*</operator><operator>/</operator>
   <specifier>protected</specifier> <name>LockFactory</name> <name>lockFactory</name></expr>;
 
  <comment type="block" format="javadoc">/** Returns an array of strings, one for each file in the
   *  directory.
   * @throws IOException
  /**
   * Returns an array of strings, one for each file in the directory.
   * 
   * @throws NoSuchDirectoryException if the directory is not prepared for any
   *         write operations (such as {@link #createOutput(String)}).
   * @throws IOException in case of other IO errors
    */</comment>
   <expr><specifier>public</specifier> <specifier>abstract</specifier> <name><name>String</name><index>[]</index></name> <call><name>listAll</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws></expr>;
 
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>TestSnapshotDeletionPolicy</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>TestSnapshotDeletionPolicy</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>c43f16364d5</name><operator>..</operator><literal type="number">4f29e74e506</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>TestSnapshotDeletionPolicy</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>TestSnapshotDeletionPolicy</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">45</literal></expr>,<expr><literal type="number">8</literal> <operator>+</operator><literal type="number">45</literal></expr>,<expr><literal type="number">8</literal> @@</expr> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>_TestUtil</name></name>;</import>
 <comment type="line">// http://lucenebook.com</comment>
 <comment type="line">//</comment>
 
<specifier>public</specifier> <name>class</name> <name>TestSnapshotDeletionPolicy</name> extends <name>LuceneTestCase</name>
<block>{
<expr><specifier>public</specifier> <name>class</name> <name>TestSnapshotDeletionPolicy</name> extends <name>LuceneTestCase</name> <block>{
  
   <expr><specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>INDEX_PATH</name> <operator>=</operator> <literal type="string">"test.snapshots"</literal></expr>;
 
   <expr><specifier>public</specifier> <name>void</name> <call><name>testSnapshotDeletionPolicy</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{</block></expr></argument>
@<argument>@ <expr><operator>-</operator><literal type="number">119</literal></expr></argument>,<argument><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">119</literal></expr></argument>,<argument><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSnapshotDeletionPolicy</name> extends <name>LuceneTestCase</name>
         <name>TEST_VERSION_CURRENT</name></expr></argument>, 
         <argument><expr><operator>new</operator> <call><name>StandardAnalyzer</name><argument_list>(<argument><expr><name>TEST_VERSION_CURRENT</name></expr></argument>)</argument_list></call></expr></argument>)</throws><operator>.</operator><call><name>setIndexDeletionPolicy</name><argument_list>(<argument><expr><name>dp</name></expr></argument>)</argument_list></call>
         <operator>.</operator><call><name>setMaxBufferedDocs</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>)</block></expr>;

    <expr><call><name><name>writer</name><operator>.</operator><name>commit</name></name><argument_list>()</argument_list></call></expr>;
    
     <expr><name>final</name> <name>Thread</name> <name>t</name> <operator>=</operator> <operator>new</operator> <class><super><name>Thread</name></super><argument_list>()</argument_list> <block>{
         <function><annotation>@<name>Override</name></annotation>
         <type><specifier>public</specifier> <name>void</name></type> <name>run</name><parameter_list>()</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestBackwardsCompatibility</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestBackwardsCompatibility</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">75ddaa4f103</literal><operator>..</operator><name>d58f385d1ff</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestBackwardsCompatibility</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestBackwardsCompatibility</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">558</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">558</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestBackwardsCompatibility</name> extends <name>LuceneTestCase</name> <block>{
       <expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"could not locate the 'content' field number in the _2.cfs segment"</literal></expr></argument>, <argument><expr><name>contentFieldIndex</name> <operator>!=</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;
 
       <comment type="line">// Now verify file names:</comment>
      <expr><name><name>String</name><index>[]</index></name> <name>expected</name></expr>;
      <expr><name>expected</name> <operator>=</operator> <operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{<expr><literal type="string">"_0.cfs"</literal></expr>,
      <expr><name><name>String</name><index>[]</index></name> <name>expected</name> <operator>=</operator> <operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{<expr><literal type="string">"_0.cfs"</literal></expr>,
                                <expr><literal type="string">"_0_1.del"</literal></expr>,
                                <expr><literal type="string">"_0_1.s"</literal> <operator>+</operator> <name>contentFieldIndex</name></expr>,
                               <expr><literal type="string">"segments_3"</literal></expr>,
                               <expr><literal type="string">"segments_2"</literal></expr>,
                                <expr><literal type="string">"segments.gen"</literal></expr>}</block></expr>;
 
       <expr><name><name>String</name><index>[]</index></name> <name>actual</name> <operator>=</operator> <call><name><name>dir</name><operator>.</operator><name>listAll</name></name><argument_list>()</argument_list></call></expr>;
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestCrash</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestCrash</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">3734f69b927</literal><operator>..</operator><literal type="number">883d89419ec</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestCrash</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestCrash</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">28</literal></expr>,<expr><literal type="number">16</literal> <operator>+</operator><literal type="number">28</literal></expr>,<expr><literal type="number">19</literal> @@</expr> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Field</name></name>;</import>
 
 <specifier>public</specifier> <name>class</name> <name>TestCrash</name> extends <name>LuceneTestCase</name> <block>{
 
  <expr><specifier>private</specifier> <name>IndexWriter</name> <call><name>initIndex</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr>
    <return>return <expr><call><name>initIndex</name><argument_list>(<argument><expr><operator>new</operator> <call><name>MockRAMDirectory</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  <specifier>private</specifier> <name>IndexWriter</name> <call><name>initIndex</name><argument_list>(<argument><expr><name>boolean</name> <name>initialCommit</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></block></block></expr>
    <return>return <expr><call><name>initIndex</name><argument_list>(<argument><expr><operator>new</operator> <call><name>MockRAMDirectory</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>initialCommit</name></expr></argument>)</argument_list></call></expr>;</return></block></expr></expr_stmt></block_content></block></function></block></class></expr>
   }</block></block>
 
  <specifier>private</specifier> <name>IndexWriter</name> <call><name>initIndex</name><argument_list>(<argument><expr><name>MockRAMDirectory</name> <name>dir</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>private</specifier> <name>IndexWriter</name> <call><name>initIndex</name><argument_list>(<argument><expr><name>MockRAMDirectory</name> <name>dir</name></expr></argument>, <argument><expr><name>boolean</name> <name>initialCommit</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><call><name><name>dir</name><operator>.</operator><name>setLockFactory</name></name><argument_list>(<argument><expr><call><name><name>NoLockFactory</name><operator>.</operator><name>getNoLockFactory</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
 
     <expr><name>IndexWriter</name> <name>writer</name>  <operator>=</operator> <operator>new</operator> <call><name>IndexWriter</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>IndexWriterConfig</name><argument_list>(<argument><expr><name>TEST_VERSION_CURRENT</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>WhitespaceAnalyzer</name><argument_list>(<argument><expr><name>TEST_VERSION_CURRENT</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>setMaxBufferedDocs</name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <expr><operator>(</operator><operator>(</operator><name>ConcurrentMergeScheduler</name><operator>)</operator> <call><name><name>writer</name><operator>.</operator><name>getConfig</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getMergeScheduler</name><argument_list>()</argument_list></call><operator>)</operator><operator>.</operator><call><name>setSuppressExceptions</name><argument_list>()</argument_list></call></expr>;

    <if_stmt><if>if <condition>(<expr><name>initialCommit</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>commit</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt/></block_content></block></if></if_stmt>}</block>
    
     <name>Document</name> <name>doc</name> <operator>=</operator> <operator>new</operator> <call><name>Document</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>doc</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Field</name><argument_list>(<argument><expr><literal type="string">"content"</literal></expr></argument>, <argument><expr><literal type="string">"aaa"</literal></expr></argument>, <argument><expr><name><name>Field</name><operator>.</operator><name>Store</name><operator>.</operator><name>YES</name></name></expr></argument>, <argument><expr><name><name>Field</name><operator>.</operator><name>Index</name><operator>.</operator><name>ANALYZED</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>doc</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Field</name><argument_list>(<argument><expr><literal type="string">"id"</literal></expr></argument>, <argument><expr><literal type="string">"0"</literal></expr></argument>, <argument><expr><name><name>Field</name><operator>.</operator><name>Store</name><operator>.</operator><name>YES</name></name></expr></argument>, <argument><expr><name><name>Field</name><operator>.</operator><name>Index</name><operator>.</operator><name>ANALYZED</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">56</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">59</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestCrash</name> extends <name>LuceneTestCase</name> <block>{
   }</block>
 
   <specifier>public</specifier> <name>void</name> <call><name>testCrashWhileIndexing</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><name>IndexWriter</name> <name>writer</name> <operator>=</operator> <call><name>initIndex</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <comment type="line">// This test relies on being able to open a reader before any commit</comment>
    <comment type="line">// happened, so we must create an initial commit just to allow that, but</comment>
    <comment type="line">// before any documents were added.</comment>
    <decl_stmt><decl><type><name>IndexWriter</name></type> <name>writer</name> <init>= <expr><call><name>initIndex</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>MockRAMDirectory</name></type> <name>dir</name> <init>= <expr><operator>(</operator><name>MockRAMDirectory</name><operator>)</operator> <call><name><name>writer</name><operator>.</operator><name>getDirectory</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>crash</name><argument_list>(<argument><expr><name>writer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>IndexReader</name></type> <name>reader</name> <init>= <expr><call><name><name>IndexReader</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">64</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">70</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestCrash</name> extends <name>LuceneTestCase</name> <block>{
   }</block>
 
   <specifier>public</specifier> <name>void</name> <call><name>testWriterAfterCrash</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><name>IndexWriter</name> <name>writer</name> <operator>=</operator> <call><name>initIndex</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <comment type="line">// This test relies on being able to open a reader before any commit</comment>
    <comment type="line">// happened, so we must create an initial commit just to allow that, but</comment>
    <comment type="line">// before any documents were added.</comment>
    <decl_stmt><decl><type><name>IndexWriter</name></type> <name>writer</name> <init>= <expr><call><name>initIndex</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>MockRAMDirectory</name></type> <name>dir</name> <init>= <expr><operator>(</operator><name>MockRAMDirectory</name><operator>)</operator> <call><name><name>writer</name><operator>.</operator><name>getDirectory</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>dir</name><operator>.</operator><name>setPreventDoubleWrite</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>crash</name><argument_list>(<argument><expr><name>writer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>writer</name> <operator>=</operator> <call><name>initIndex</name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>writer</name> <operator>=</operator> <call><name>initIndex</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><name>IndexReader</name></type> <name>reader</name> <init>= <expr><call><name><name>IndexReader</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">76</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">85</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestCrash</name> extends <name>LuceneTestCase</name> <block>{
   }</block>
 
   <specifier>public</specifier> <name>void</name> <call><name>testCrashAfterReopen</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><name>IndexWriter</name> <name>writer</name> <operator>=</operator> <call><name>initIndex</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>IndexWriter</name></type> <name>writer</name> <init>= <expr><call><name>initIndex</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>MockRAMDirectory</name></type> <name>dir</name> <init>= <expr><operator>(</operator><name>MockRAMDirectory</name><operator>)</operator> <call><name><name>writer</name><operator>.</operator><name>getDirectory</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>writer</name> <operator>=</operator> <call><name>initIndex</name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>writer</name> <operator>=</operator> <call><name>initIndex</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">314</literal></expr></argument>, <argument><expr><call><name><name>writer</name><operator>.</operator><name>maxDoc</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>crash</name><argument_list>(<argument><expr><name>writer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">98</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">107</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestCrash</name> extends <name>LuceneTestCase</name> <block>{
 
   <expr><specifier>public</specifier> <name>void</name> <call><name>testCrashAfterClose</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
     
    <expr><name>IndexWriter</name> <name>writer</name> <operator>=</operator> <call><name>initIndex</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <expr><name>IndexWriter</name> <name>writer</name> <operator>=</operator> <call><name>initIndex</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;
     <expr><name>MockRAMDirectory</name> <name>dir</name> <operator>=</operator> <operator>(</operator><name>MockRAMDirectory</name><operator>)</operator> <call><name><name>writer</name><operator>.</operator><name>getDirectory</name></name><argument_list>()</argument_list></call></expr>;
 
     <expr><call><name><name>writer</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">117</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">126</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestCrash</name> extends <name>LuceneTestCase</name> <block>{
 
   <expr><specifier>public</specifier> <name>void</name> <call><name>testCrashAfterCloseNoWait</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
     
    <expr><name>IndexWriter</name> <name>writer</name> <operator>=</operator> <call><name>initIndex</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <expr><name>IndexWriter</name> <name>writer</name> <operator>=</operator> <call><name>initIndex</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;
     <expr><name>MockRAMDirectory</name> <name>dir</name> <operator>=</operator> <operator>(</operator><name>MockRAMDirectory</name><operator>)</operator> <call><name><name>writer</name><operator>.</operator><name>getDirectory</name></name><argument_list>()</argument_list></call></expr>;
 
     <expr><call><name><name>writer</name><operator>.</operator><name>close</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">136</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">145</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestCrash</name> extends <name>LuceneTestCase</name> <block>{
 
   <expr><specifier>public</specifier> <name>void</name> <call><name>testCrashReaderDeletes</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
     
    <expr><name>IndexWriter</name> <name>writer</name> <operator>=</operator> <call><name>initIndex</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <expr><name>IndexWriter</name> <name>writer</name> <operator>=</operator> <call><name>initIndex</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;
     <expr><name>MockRAMDirectory</name> <name>dir</name> <operator>=</operator> <operator>(</operator><name>MockRAMDirectory</name><operator>)</operator> <call><name><name>writer</name><operator>.</operator><name>getDirectory</name></name><argument_list>()</argument_list></call></expr>;
 
     <expr><call><name><name>writer</name><operator>.</operator><name>close</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">157</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">166</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestCrash</name> extends <name>LuceneTestCase</name> <block>{
 
   <expr><specifier>public</specifier> <name>void</name> <call><name>testCrashReaderDeletesAfterClose</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
     
    <expr><name>IndexWriter</name> <name>writer</name> <operator>=</operator> <call><name>initIndex</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <expr><name>IndexWriter</name> <name>writer</name> <operator>=</operator> <call><name>initIndex</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;
     <expr><name>MockRAMDirectory</name> <name>dir</name> <operator>=</operator> <operator>(</operator><name>MockRAMDirectory</name><operator>)</operator> <call><name><name>writer</name><operator>.</operator><name>getDirectory</name></name><argument_list>()</argument_list></call></expr>;
 
     <expr><call><name><name>writer</name><operator>.</operator><name>close</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestDeletionPolicy</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestDeletionPolicy</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">2f43d52fdd3</literal><operator>..</operator><name>b418e59860d</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestDeletionPolicy</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestDeletionPolicy</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">305</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">305</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestDeletionPolicy</name> extends <name>LuceneTestCase</name> <block>{
       <expr><call><name><name>writer</name><operator>.</operator><name>optimize</name></name><argument_list>()</argument_list></call></expr>;
       <expr><call><name><name>writer</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;
 
      <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name><name>policy</name><operator>.</operator><name>numOnInit</name></name></expr></argument>)</argument_list></call></expr>;
      <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name><name>policy</name><operator>.</operator><name>numOnInit</name></name></expr></argument>)</argument_list></call></expr>;
 
       <comment type="line">// If we are not auto committing then there should</comment>
       <comment type="line">// be exactly 2 commits (one per close above):</comment>
@@ <expr><operator>-</operator><literal type="number">313</literal></expr>,<expr><literal type="number">8</literal> <operator>+</operator><literal type="number">313</literal></expr>,<expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestDeletionPolicy</name> extends <name>LuceneTestCase</name> <block>{
 
       <comment type="line">// Test listCommits</comment>
       <expr><name><name>Collection</name><argument_list type="generic">&lt;<argument><name>IndexCommit</name></argument>&gt;</argument_list></name> <name>commits</name> <operator>=</operator> <call><name><name>IndexReader</name><operator>.</operator><name>listCommits</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr>;
      <comment type="line">// 1 from opening writer + 2 from closing writer</comment>
      <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><call><name><name>commits</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
      <comment type="line">// 2 from closing writer</comment>
      <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><call><name><name>commits</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
       <comment type="line">// Make sure we can open a reader on each commit:</comment>
       <for>for <control>(<init><decl><type><specifier>final</specifier> <name>IndexCommit</name></type> <name>commit</name> <range>: <expr><name>commits</name></expr></range></decl></init>)</control> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">374</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">374</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestDeletionPolicy</name> extends <name>LuceneTestCase</name> <block>{
     <expr><call><name><name>writer</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;
 
     <expr><name><name>Collection</name><argument_list type="generic">&lt;<argument><name>IndexCommit</name></argument>&gt;</argument_list></name> <name>commits</name> <operator>=</operator> <call><name><name>IndexReader</name><operator>.</operator><name>listCommits</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><call><name><name>commits</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><call><name><name>commits</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <expr><name>IndexCommit</name> <name>lastCommit</name> <operator>=</operator> <literal type="null">null</literal></expr>;
     <for>for <control>(<init><decl><type><specifier>final</specifier> <name>IndexCommit</name></type> <name>commit</name> <range>: <expr><name>commits</name></expr></range></decl></init>)</control> <block>{<block_content>
       <if_stmt><if>if <condition>(<expr><name>lastCommit</name> <operator>==</operator> <literal type="null">null</literal> <operator>||</operator> <call><name><name>commit</name><operator>.</operator><name>getGeneration</name></name><argument_list>()</argument_list></call> <operator>&gt;</operator> <call><name><name>lastCommit</name><operator>.</operator><name>getGeneration</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">389</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">389</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestDeletionPolicy</name> extends <name>LuceneTestCase</name> <block>{
     <expr><call><name><name>writer</name><operator>.</operator><name>optimize</name></name><argument_list>()</argument_list></call></expr>;
     <call><name><name>writer</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt></block_content></block></if></if_stmt>
 
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><call><name><name>IndexReader</name><operator>.</operator><name>listCommits</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><call><name><name>IndexReader</name><operator>.</operator><name>listCommits</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <comment type="line">// Now open writer on the commit just before optimize:</comment>
     <expr_stmt><expr><name>writer</name> <operator>=</operator> <operator>new</operator> <call><name>IndexWriter</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>IndexWriterConfig</name><argument_list>(<argument><expr><name>TEST_VERSION_CURRENT</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>WhitespaceAnalyzer</name><argument_list>(<argument><expr><name>TEST_VERSION_CURRENT</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
@@ <operator>-</operator><literal type="number">412</literal></expr></argument>,<argument><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">412</literal></expr></argument>,<argument><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestDeletionPolicy</name> extends <name>LuceneTestCase</name> <block>{
     <expr><call><name><name>writer</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;
 
     <comment type="line">// Now 8 because we made another commit</comment>
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><call><name><name>IndexReader</name><operator>.</operator><name>listCommits</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><call><name><name>IndexReader</name><operator>.</operator><name>listCommits</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
     
     <expr><name>r</name> <operator>=</operator> <call><name><name>IndexReader</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;
     <comment type="line">// Not optimized because we rolled it back, and now only</comment>
@@ <expr><operator>-</operator><literal type="number">491</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">491</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestDeletionPolicy</name> extends <name>LuceneTestCase</name> <block>{
       <expr><call><name><name>writer</name><operator>.</operator><name>optimize</name></name><argument_list>()</argument_list></call></expr>;
       <expr><call><name><name>writer</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;
 
      <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name><name>policy</name><operator>.</operator><name>numOnInit</name></name></expr></argument>)</argument_list></call></expr>;
      <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name><name>policy</name><operator>.</operator><name>numOnInit</name></name></expr></argument>)</argument_list></call></expr>;
       <comment type="line">// If we are not auto committing then there should</comment>
       <comment type="line">// be exactly 2 commits (one per close above):</comment>
       <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name><name>policy</name><operator>.</operator><name>numOnCommit</name></name></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">537</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">537</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestDeletionPolicy</name> extends <name>LuceneTestCase</name> <block>{
       }</block>
 
       <call><name>assertTrue</name><argument_list>(<argument><expr><name><name>policy</name><operator>.</operator><name>numDelete</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;
      <expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>N</name><operator>+</operator><literal type="number">1</literal></expr></argument>, <argument><expr><name><name>policy</name><operator>.</operator><name>numOnInit</name></name></expr></argument>)</argument_list></call></expr>;
      <expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>N</name></expr></argument>, <argument><expr><name><name>policy</name><operator>.</operator><name>numOnInit</name></name></expr></argument>)</argument_list></call></expr>;
       <expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>N</name><operator>+</operator><literal type="number">1</literal></expr></argument>, <argument><expr><name><name>policy</name><operator>.</operator><name>numOnCommit</name></name></expr></argument>)</argument_list></call></expr>;
 
       <comment type="line">// Simplistic check: just verify only the past N segments_N's still</comment>
@@ <expr><operator>-</operator><literal type="number">625</literal></expr>,<expr><literal type="number">8</literal> <operator>+</operator><literal type="number">625</literal></expr>,<expr><literal type="number">8</literal> @@ <specifier>public</specifier> class <name>TestDeletionPolicy</name> extends <name>LuceneTestCase</name> <block>{
       <comment type="line">// this is a commit</comment>
       <expr><call><name><name>writer</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;
 
      <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">2</literal><operator>*</operator><operator>(</operator><name>N</name><operator>+</operator><literal type="number">2</literal><operator>)</operator></expr></argument>, <argument><expr><name><name>policy</name><operator>.</operator><name>numOnInit</name></name></expr></argument>)</argument_list></call></expr>;
      <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">2</literal><operator>*</operator><operator>(</operator><name>N</name><operator>+</operator><literal type="number">2</literal><operator>)</operator><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><name><name>policy</name><operator>.</operator><name>numOnCommit</name></name></expr></argument>)</argument_list></call></expr>;
      <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">2</literal><operator>*</operator><operator>(</operator><name>N</name><operator>+</operator><literal type="number">1</literal><operator>)</operator><operator>+</operator><literal type="number">1</literal></expr></argument>, <argument><expr><name><name>policy</name><operator>.</operator><name>numOnInit</name></name></expr></argument>)</argument_list></call></expr>;
      <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">2</literal><operator>*</operator><operator>(</operator><name>N</name><operator>+</operator><literal type="number">2</literal><operator>)</operator></expr></argument>, <argument><expr><name><name>policy</name><operator>.</operator><name>numOnCommit</name></name></expr></argument>)</argument_list></call></expr>;
 
       <expr><name>IndexSearcher</name> <name>searcher</name> <operator>=</operator> <operator>new</operator> <call><name>IndexSearcher</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;
       <expr><name><name>ScoreDoc</name><index>[]</index></name> <name>hits</name> <operator>=</operator> <call><name><name>searcher</name><operator>.</operator><name>search</name></name><argument_list>(<argument><expr><name>query</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="number">1000</literal></expr></argument>)</argument_list></call><operator>.</operator><name>scoreDocs</name></expr>;
@@ <expr><operator>-</operator><literal type="number">735</literal></expr>,<expr><literal type="number">8</literal> <operator>+</operator><literal type="number">735</literal></expr>,<expr><literal type="number">8</literal> @@ <specifier>public</specifier> class <name>TestDeletionPolicy</name> extends <name>LuceneTestCase</name> <block>{
         <expr><call><name><name>writer</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;
       }</block>
 
      <call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1</literal><operator>+</operator><literal type="number">3</literal><operator>*</operator><operator>(</operator><name>N</name><operator>+</operator><literal type="number">1</literal><operator>)</operator></expr></argument>, <argument><expr><name><name>policy</name><operator>.</operator><name>numOnInit</name></name></expr></argument>)</argument_list></call></expr>;
      <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">3</literal><operator>*</operator><operator>(</operator><name>N</name><operator>+</operator><literal type="number">1</literal><operator>)</operator></expr></argument>, <argument><expr><name><name>policy</name><operator>.</operator><name>numOnCommit</name></name></expr></argument>)</argument_list></call></expr>;
      <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">3</literal><operator>*</operator><operator>(</operator><name>N</name><operator>+</operator><literal type="number">1</literal><operator>)</operator></expr></argument>, <argument><expr><name><name>policy</name><operator>.</operator><name>numOnInit</name></name></expr></argument>)</argument_list></call></expr>;
      <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">3</literal><operator>*</operator><operator>(</operator><name>N</name><operator>+</operator><literal type="number">1</literal><operator>)</operator><operator>+</operator><literal type="number">1</literal></expr></argument>, <argument><expr><name><name>policy</name><operator>.</operator><name>numOnCommit</name></name></expr></argument>)</argument_list></call></expr>;
 
       <expr><name>IndexSearcher</name> <name>searcher</name> <operator>=</operator> <operator>new</operator> <call><name>IndexSearcher</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;
       <expr><name><name>ScoreDoc</name><index>[]</index></name> <name>hits</name> <operator>=</operator> <call><name><name>searcher</name><operator>.</operator><name>search</name></name><argument_list>(<argument><expr><name>query</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="number">1000</literal></expr></argument>)</argument_list></call><operator>.</operator><name>scoreDocs</name></expr>;
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexFileDeleter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexFileDeleter</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">7ead2dd998e</literal><operator>..</operator><name>f210435de5c</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexFileDeleter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexFileDeleter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">138</literal></expr>,<expr><literal type="number">11</literal> <operator>+</operator><literal type="number">138</literal></expr>,<expr><literal type="number">11</literal> @@ <specifier>public</specifier> class <name>TestIndexFileDeleter</name> extends <name>LuceneTestCase</name> <block>{
     <expr><call><name>copyFile</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><literal type="string">"_0.cfs"</literal></expr></argument>, <argument><expr><literal type="string">"deletable"</literal></expr></argument>)</argument_list></call></expr>;
 
     <comment type="line">// Create some old segments file:</comment>
    <expr><call><name>copyFile</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><literal type="string">"segments_3"</literal></expr></argument>, <argument><expr><literal type="string">"segments"</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>copyFile</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><literal type="string">"segments_3"</literal></expr></argument>, <argument><expr><literal type="string">"segments_2"</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>copyFile</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><literal type="string">"segments_2"</literal></expr></argument>, <argument><expr><literal type="string">"segments"</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>copyFile</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><literal type="string">"segments_2"</literal></expr></argument>, <argument><expr><literal type="string">"segments_1"</literal></expr></argument>)</argument_list></call></expr>;
 
     <comment type="line">// Create a bogus cfs file shadowing a non-cfs segment:</comment>
    <expr><call><name>copyFile</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><literal type="string">"_2.cfs"</literal></expr></argument>, <argument><expr><literal type="string">"_3.cfs"</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>copyFile</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><literal type="string">"_1.cfs"</literal></expr></argument>, <argument><expr><literal type="string">"_2.cfs"</literal></expr></argument>)</argument_list></call></expr>;
 
     <expr><name><name>String</name><index>[]</index></name> <name>filesPre</name> <operator>=</operator> <call><name><name>dir</name><operator>.</operator><name>listAll</name></name><argument_list>()</argument_list></call></expr>;
 
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexReader</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexReader</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>a2a55d11f2c</name><operator>..</operator><literal type="number">30d8cd201e9</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexReader</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexReader</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">466</literal></expr>,<expr><literal type="number">18</literal> <operator>+</operator><literal type="number">466</literal></expr>,<expr><literal type="number">17</literal> @@ <specifier>public</specifier> class <name>TestIndexReader</name> extends <name>LuceneTestCase</name>
     <specifier>public</specifier> <name>void</name> <call><name>testLockObtainFailed</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
         <expr><name>Directory</name> <name>dir</name> <operator>=</operator> <operator>new</operator> <call><name>RAMDirectory</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
 
        <expr><name>IndexWriter</name> <name>writer</name> <operator>=</operator> <literal type="null">null</literal></expr>;
        <expr><name>IndexReader</name> <name>reader</name> <operator>=</operator> <literal type="null">null</literal></expr>;
         <expr><name>Term</name> <name>searchTerm</name> <operator>=</operator> <operator>new</operator> <call><name>Term</name><argument_list>(<argument><expr><literal type="string">"content"</literal></expr></argument>, <argument><expr><literal type="string">"aaa"</literal></expr></argument>)</argument_list></call></expr>;
 
         <comment type="line">//  add 11 documents with term : aaa</comment>
        <expr><name>writer</name>  <operator>=</operator> <operator>new</operator> <call><name>IndexWriter</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>IndexWriterConfig</name><argument_list>(<argument><expr><name>TEST_VERSION_CURRENT</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>WhitespaceAnalyzer</name><argument_list>(<argument><expr><name>TEST_VERSION_CURRENT</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><name>IndexWriter</name> <name>writer</name> <operator>=</operator> <operator>new</operator> <call><name>IndexWriter</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>IndexWriterConfig</name><argument_list>(<argument><expr><name>TEST_VERSION_CURRENT</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>WhitespaceAnalyzer</name><argument_list>(<argument><expr><name>TEST_VERSION_CURRENT</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>writer</name><operator>.</operator><name>commit</name></name><argument_list>()</argument_list></call></expr>;
         <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">11</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
             <expr_stmt><expr><call><name>addDoc</name><argument_list>(<argument><expr><name>writer</name></expr></argument>, <argument><expr><call><name><name>searchTerm</name><operator>.</operator><name>text</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt/>}</block_content>
 
         <comment type="line">// Create reader:</comment>
        reader = IndexReader.open(dir</block><operator>,</operator> <expr_stmt><expr><literal type="boolean">false</literal></expr></expr_stmt></for></block></expr></block></expr></block></expr></block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>IndexReader</name></type> <name>reader</name> <init>= <expr><call><name><name>IndexReader</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
         <comment type="line">// Try to make changes</comment>
         <try>try <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1749</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">1748</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestIndexReader</name> extends <name>LuceneTestCase</name>
     <name>Directory</name> <name>dir</name> <operator>=</operator> <operator>new</operator> <call><name>MockRAMDirectory</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>IndexWriter</name></type> <name>writer</name> <init>= <expr><operator>new</operator> <call><name>IndexWriter</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>IndexWriterConfig</name><argument_list>(
         <argument><expr><name>TEST_VERSION_CURRENT</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>WhitespaceAnalyzer</name><argument_list>(<argument><expr><name>TEST_VERSION_CURRENT</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>commit</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>Document</name></type> <name>doc</name> <init>= <expr><operator>new</operator> <call><name>Document</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>addDocument</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>IndexReader</name></type> <name>r</name> <init>= <expr><call><name><name>IndexReader</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexReaderReopen</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexReaderReopen</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>f7a8855c1f4</name><operator>..</operator><name>e99cc6639a6</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexReaderReopen</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexReaderReopen</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">174</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">174</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestIndexReaderReopen</name> extends <name>LuceneTestCase</name> <block>{
     <expr><name>IndexWriter</name> <name>iwriter</name> <operator>=</operator> <operator>new</operator> <call><name>IndexWriter</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>IndexWriterConfig</name><argument_list>(
         <argument><expr><name>TEST_VERSION_CURRENT</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>KeywordAnalyzer</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>setOpenMode</name><argument_list>(
         <argument><expr><name><name>OpenMode</name><operator>.</operator><name>CREATE</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>setMergeScheduler</name><argument_list>(<argument><expr><operator>new</operator> <call><name>SerialMergeScheduler</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>iwriter</name><operator>.</operator><name>commit</name></name><argument_list>()</argument_list></call></expr>;
     <expr><name>IndexReader</name> <name>reader</name> <operator>=</operator> <call><name><name>IndexReader</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;
     <try>try <block>{<block_content>
       <decl_stmt><decl><type><name>int</name></type> <name>M</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexWriter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexWriter</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">443b90bdb9a</literal><operator>..</operator><literal type="number">8f04ac32758</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexWriter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexWriter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">70</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">70</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>IndexOutput</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>Lock</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>LockFactory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>MockRAMDirectory</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>NoLockFactory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>RAMDirectory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>SingleInstanceLockFactory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>UnicodeUtil</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">778</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">779</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestIndexWriter</name> extends <name>LuceneTestCase</name> <block>{
         <expr><call><name><name>writer</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;
 
         <expr><name>long</name> <name>gen</name> <operator>=</operator> <call><name><name>SegmentInfos</name><operator>.</operator><name>getCurrentSegmentGeneration</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"segment generation should be &gt; 1 but got "</literal> <operator>+</operator> <name>gen</name></expr></argument>, <argument><expr><name>gen</name> <operator>&gt;</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"segment generation should be &gt; 0 but got "</literal> <operator>+</operator> <name>gen</name></expr></argument>, <argument><expr><name>gen</name> <operator>&gt;</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;
 
         <comment type="line">// Make the next segments file, with last byte</comment>
         <comment type="line">// missing, to simulate a writer that crashed while</comment>
@@ <expr><operator>-</operator><literal type="number">838</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">839</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestIndexWriter</name> extends <name>LuceneTestCase</name> <block>{
         <expr><call><name><name>writer</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;
 
         <expr><name>long</name> <name>gen</name> <operator>=</operator> <call><name><name>SegmentInfos</name><operator>.</operator><name>getCurrentSegmentGeneration</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"segment generation should be &gt; 1 but got "</literal> <operator>+</operator> <name>gen</name></expr></argument>, <argument><expr><name>gen</name> <operator>&gt;</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"segment generation should be &gt; 0 but got "</literal> <operator>+</operator> <name>gen</name></expr></argument>, <argument><expr><name>gen</name> <operator>&gt;</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;
 
         <expr><name>String</name> <name>fileNameIn</name> <operator>=</operator> <call><name><name>SegmentInfos</name><operator>.</operator><name>getCurrentSegmentFileName</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr>;
         <expr><name>String</name> <name>fileNameOut</name> <operator>=</operator> <call><name><name>IndexFileNames</name><operator>.</operator><name>fileNameFromGeneration</name></name><argument_list>(<argument><expr><name><name>IndexFileNames</name><operator>.</operator><name>SEGMENTS</name></name></expr></argument>,
<argument>@@ <expr><operator>-</operator><literal type="number">903</literal></expr></argument>,<argument><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">904</literal></expr></argument>,<argument><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestIndexWriter</name> extends <name>LuceneTestCase</name> <block>{
         <expr><call><name><name>writer</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;
 
         <expr><name>long</name> <name>gen</name> <operator>=</operator> <call><name><name>SegmentInfos</name><operator>.</operator><name>getCurrentSegmentGeneration</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"segment generation should be &gt; 1 but got "</literal> <operator>+</operator> <name>gen</name></expr></argument>, <argument><expr><name>gen</name> <operator>&gt;</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"segment generation should be &gt; 0 but got "</literal> <operator>+</operator> <name>gen</name></expr></argument>, <argument><expr><name>gen</name> <operator>&gt;</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;
 
         <expr><name><name>String</name><index>[]</index></name> <name>files</name> <operator>=</operator> <call><name><name>dir</name><operator>.</operator><name>listAll</name></name><argument_list>()</argument_list></call></expr>;
         <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name><name>files</name><operator>.</operator><name>length</name></name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">2326</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">2327</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestIndexWriter</name> extends <name>LuceneTestCase</name> <block>{
   <expr><specifier>public</specifier> <name>void</name> <call><name>testImmediateDiskFull</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><name>MockRAMDirectory</name> <name>dir</name> <operator>=</operator> <operator>new</operator> <call><name>MockRAMDirectory</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
     <expr><name>IndexWriter</name> <name>writer</name> <operator>=</operator> <operator>new</operator> <call><name>IndexWriter</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>IndexWriterConfig</name><argument_list>(<argument><expr><name>TEST_VERSION_CURRENT</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>WhitespaceAnalyzer</name><argument_list>(<argument><expr><name>TEST_VERSION_CURRENT</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>setMaxBufferedDocs</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>dir</name><operator>.</operator><name>setMaxSizeInBytes</name></name><argument_list>(<argument><expr><call><name><name>dir</name><operator>.</operator><name>getRecomputedActualSizeInBytes</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>dir</name><operator>.</operator><name>setMaxSizeInBytes</name></name><argument_list>(<argument><expr><call><name><name>Math</name><operator>.</operator><name>max</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><call><name><name>dir</name><operator>.</operator><name>getRecomputedActualSizeInBytes</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <expr><name>final</name> <name>Document</name> <name>doc</name> <operator>=</operator> <operator>new</operator> <call><name>Document</name><argument_list>()</argument_list></call></expr>;
     <expr><call><name><name>doc</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Field</name><argument_list>(<argument><expr><literal type="string">"field"</literal></expr></argument>, <argument><expr><literal type="string">"aaa bbb ccc ddd eee fff ggg hhh iii jjj"</literal></expr></argument>, <argument><expr><name><name>Field</name><operator>.</operator><name>Store</name><operator>.</operator><name>YES</name></name></expr></argument>, <argument><expr><name><name>Field</name><operator>.</operator><name>Index</name><operator>.</operator><name>ANALYZED</name></name></expr></argument>, <argument><expr><name><name>Field</name><operator>.</operator><name>TermVector</name><operator>.</operator><name>WITH_POSITIONS_OFFSETS</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <try>try <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">2644</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">2645</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestIndexWriter</name> extends <name>LuceneTestCase</name> <block>{
     <expr><call><name><name>writer</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;
 
     <expr><name>long</name> <name>gen</name> <operator>=</operator> <call><name><name>SegmentInfos</name><operator>.</operator><name>getCurrentSegmentGeneration</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"segment generation should be &gt; 1 but got "</literal> <operator>+</operator> <name>gen</name></expr></argument>, <argument><expr><name>gen</name> <operator>&gt;</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"segment generation should be &gt; 0 but got "</literal> <operator>+</operator> <name>gen</name></expr></argument>, <argument><expr><name>gen</name> <operator>&gt;</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;
 
     <expr><name>final</name> <name>String</name> <name>segmentsFileName</name> <operator>=</operator> <call><name><name>SegmentInfos</name><operator>.</operator><name>getCurrentSegmentFileName</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr>;
     <expr><name>IndexInput</name> <name>in</name> <operator>=</operator> <call><name><name>dir</name><operator>.</operator><name>openInput</name></name><argument_list>(<argument><expr><name>segmentsFileName</name></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">2673</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">2674</literal></expr>,<expr><literal type="number">8</literal> @@ <specifier>public</specifier> class <name>TestIndexWriter</name> extends <name>LuceneTestCase</name> <block>{
         <expr><name>TEST_VERSION_CURRENT</name></expr>, <expr><operator>new</operator> <call><name>WhitespaceAnalyzer</name><argument_list>(<argument><expr><name>TEST_VERSION_CURRENT</name></expr></argument>)</argument_list></call></expr></block></expr></block></expr></expr_stmt></block_content></block></try></block></expr></expr_stmt></block_content></block></for></block></expr></argument>)</argument_list></call>
         <operator>.</operator><call><name>setMaxBufferedDocs</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>)</block></expr>;
     <expr><operator>(</operator><operator>(</operator><name>LogMergePolicy</name><operator>)</operator> <call><name><name>writer</name><operator>.</operator><name>getConfig</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getMergePolicy</name><argument_list>()</argument_list></call><operator>)</operator><operator>.</operator><call><name>setMergeFactor</name><argument_list>(<argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;

    <expr><call><name><name>writer</name><operator>.</operator><name>commit</name></name><argument_list>()</argument_list></call></expr>;
    
     <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">23</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
       <expr_stmt><expr><call><name>addDoc</name><argument_list>(<argument><expr><name>writer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
 
@@ <operator>-</operator><literal type="number">3534</literal><operator>,</operator><literal type="number">7</literal> <operator>+</operator><literal type="number">3536</literal><operator>,</operator><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestIndexWriter</name> extends <name>LuceneTestCase</name> <block>{
 
     <expr><name>IndexWriter</name> <name>writer</name> <operator>=</operator> <operator>new</operator> <call><name>IndexWriter</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>IndexWriterConfig</name><argument_list>(<argument><expr><name>TEST_VERSION_CURRENT</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>WhitespaceAnalyzer</name><argument_list>(<argument><expr><name>TEST_VERSION_CURRENT</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>setMaxBufferedDocs</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <expr><operator>(</operator><operator>(</operator><name>LogMergePolicy</name><operator>)</operator> <call><name><name>writer</name><operator>.</operator><name>getConfig</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getMergePolicy</name><argument_list>()</argument_list></call><operator>)</operator><operator>.</operator><call><name>setMergeFactor</name><argument_list>(<argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;

    <expr><call><name><name>writer</name><operator>.</operator><name>commit</name></name><argument_list>()</argument_list></call></expr>;
    
     <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">23</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
       <expr_stmt><expr><call><name>addDoc</name><argument_list>(<argument><expr><name>writer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
 
@@ <operator>-</operator><literal type="number">3585</literal><operator>,</operator><literal type="number">7</literal> <operator>+</operator><literal type="number">3588</literal><operator>,</operator><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestIndexWriter</name> extends <name>LuceneTestCase</name> <block>{
 
     <expr><name>IndexWriter</name> <name>writer</name> <operator>=</operator> <operator>new</operator> <call><name>IndexWriter</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>IndexWriterConfig</name><argument_list>(<argument><expr><name>TEST_VERSION_CURRENT</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>WhitespaceAnalyzer</name><argument_list>(<argument><expr><name>TEST_VERSION_CURRENT</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>setMaxBufferedDocs</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <expr><operator>(</operator><operator>(</operator><name>LogMergePolicy</name><operator>)</operator> <call><name><name>writer</name><operator>.</operator><name>getConfig</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getMergePolicy</name><argument_list>()</argument_list></call><operator>)</operator><operator>.</operator><call><name>setMergeFactor</name><argument_list>(<argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;

    <expr><call><name><name>writer</name><operator>.</operator><name>commit</name></name><argument_list>()</argument_list></call></expr>;
    
     <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">23</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
       <expr_stmt><expr><call><name>addDoc</name><argument_list>(<argument><expr><name>writer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
 
@@ <operator>-</operator><literal type="number">3670</literal><operator>,</operator><literal type="number">6</literal> <operator>+</operator><literal type="number">3674</literal><operator>,</operator><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestIndexWriter</name> extends <name>LuceneTestCase</name> <block>{
 
       <expr><name>dir2</name> <operator>=</operator> <operator>new</operator> <call><name>MockRAMDirectory</name><argument_list>()</argument_list></call></expr>;
       <expr><name>writer2</name> <operator>=</operator> <operator>new</operator> <call><name>IndexWriter</name><argument_list>(<argument><expr><name>dir2</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>IndexWriterConfig</name><argument_list>(<argument><expr><name>TEST_VERSION_CURRENT</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>WhitespaceAnalyzer</name><argument_list>(<argument><expr><name>TEST_VERSION_CURRENT</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
      <expr><call><name><name>writer2</name><operator>.</operator><name>commit</name></name><argument_list>()</argument_list></call></expr>;
       <expr><name>cms</name> <operator>=</operator> <operator>(</operator><name>ConcurrentMergeScheduler</name><operator>)</operator> <call><name><name>writer2</name><operator>.</operator><name>getConfig</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getMergeScheduler</name><argument_list>()</argument_list></call></expr>;
 
       <expr><name>readers</name> <operator>=</operator> <operator>new</operator> <name><name>IndexReader</name><index>[<expr><name>NUM_COPY</name></expr>]</index></name></expr>;
@@ <expr><operator>-</operator><literal type="number">4952</literal></expr>,<expr><literal type="number">4</literal> <operator>+</operator><literal type="number">4957</literal></expr>,<expr><literal type="number">62</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestIndexWriter</name> extends <name>LuceneTestCase</name> <block>{
     <expr><call><name><name>w</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;
     <expr><call><name><name>dir</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;
   }</block>
  
  <specifier>public</specifier> <name>void</name> <call><name>testNoCommits</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <comment type="line">// Tests that if we don't call commit(), the directory has 0 commits. This has</comment>
    <comment type="line">// changed since LUCENE-2386, where before IW would always commit on a fresh</comment>
    <comment type="line">// new index.</comment>
    <expr><name>Directory</name> <name>dir</name> <operator>=</operator> <operator>new</operator> <call><name>RAMDirectory</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <expr><name>IndexWriter</name> <name>writer</name> <operator>=</operator> <operator>new</operator> <call><name>IndexWriter</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>IndexWriterConfig</name><argument_list>(<argument><expr><name>TEST_VERSION_CURRENT</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>WhitespaceAnalyzer</name><argument_list>(<argument><expr><name>TEST_VERSION_CURRENT</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <try>try <block>{<block_content>
      <expr_stmt><expr><call><name><name>IndexReader</name><operator>.</operator><name>listCommits</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>fail</name><argument_list>(<argument><expr><literal type="string">"listCommits should have thrown an exception over empty index"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt/></block_content></block></try>}</block></block></block></block></expr></expr_stmt> <catch>catch <parameter_list>(<parameter><decl><type><name>IndexNotFoundException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <comment type="line">// that's expected !</comment>
    <expr_stmt/></block_content></block></catch></block_content></block></try>}</block>
    <comment type="line">// No changes still should generate a commit, because it's a new index.</comment>
    <call><name><name>writer</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"expected 1 commits!"</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><call><name><name>IndexReader</name><operator>.</operator><name>listCommits</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt/></block_content></block></try></block_content></block></for>}</block>

  <specifier>public</specifier> <name>void</name> <call><name>testEmptyFSDirWithNoLock</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <comment type="line">// Tests that if FSDir is opened w/ a NoLockFactory (or SingleInstanceLF),</comment>
    <comment type="line">// then IndexWriter ctor succeeds. Previously (LUCENE-2386) it failed </comment>
    <comment type="line">// when listAll() was called in IndexFileDeleter.</comment>
    <expr><name>FSDirectory</name> <name>dir</name> <operator>=</operator> <call><name><name>FSDirectory</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>TEMP_DIR</name></expr></argument>, <argument><expr><literal type="string">"emptyFSDirNoLock"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>NoLockFactory</name><operator>.</operator><name>getNoLockFactory</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <expr_stmt><expr><operator>new</operator> <call><name>IndexWriter</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>IndexWriterConfig</name><argument_list>(<argument><expr><name>TEST_VERSION_CURRENT</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>WhitespaceAnalyzer</name><argument_list>(<argument><expr><name>TEST_VERSION_CURRENT</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>close</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  <expr_stmt/></block_content></block></for>}</block>

  <specifier>public</specifier> <name>void</name> <call><name>testEmptyDirRollback</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <comment type="line">// Tests that if IW is created over an empty Directory, some documents are</comment>
    <comment type="line">// indexed, flushed (but not committed) and then IW rolls back, then no </comment>
    <comment type="line">// files are left in the Directory.</comment>
    <expr><name>Directory</name> <name>dir</name> <operator>=</operator> <operator>new</operator> <call><name>MockRAMDirectory</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <expr><name>IndexWriter</name> <name>writer</name> <operator>=</operator> <operator>new</operator> <call><name>IndexWriter</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>IndexWriterConfig</name><argument_list>(
        <argument><expr><name>TEST_VERSION_CURRENT</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>WhitespaceAnalyzer</name><argument_list>(<argument><expr><name>TEST_VERSION_CURRENT</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>setMaxBufferedDocs</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <comment type="line">// Creating over empty dir should not create any files.</comment>
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><call><name><name>dir</name><operator>.</operator><name>listAll</name></name><argument_list>()</argument_list></call><operator>.</operator><name>length</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>Document</name> <name>doc</name> <operator>=</operator> <operator>new</operator> <call><name>Document</name><argument_list>()</argument_list></call></expr>;
    <comment type="line">// create as many files as possible</comment>
    <expr><call><name><name>doc</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Field</name><argument_list>(<argument><expr><literal type="string">"c"</literal></expr></argument>, <argument><expr><literal type="string">"val"</literal></expr></argument>, <argument><expr><name><name>Store</name><operator>.</operator><name>YES</name></name></expr></argument>, <argument><expr><name><name>Index</name><operator>.</operator><name>ANALYZED</name></name></expr></argument>, <argument><expr><name><name>TermVector</name><operator>.</operator><name>WITH_POSITIONS_OFFSETS</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>writer</name><operator>.</operator><name>addDocument</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;
    <comment type="line">// Adding just one document does not call flush yet.</comment>
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"only the stored and term vector files should exist in the directory"</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><call><name><name>dir</name><operator>.</operator><name>listAll</name></name><argument_list>()</argument_list></call><operator>.</operator><name>length</name></expr></argument>)</argument_list></call></expr>;
    
    <expr><name>doc</name> <operator>=</operator> <operator>new</operator> <call><name>Document</name><argument_list>()</argument_list></call></expr>;
    <expr><call><name><name>doc</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Field</name><argument_list>(<argument><expr><literal type="string">"c"</literal></expr></argument>, <argument><expr><literal type="string">"val"</literal></expr></argument>, <argument><expr><name><name>Store</name><operator>.</operator><name>YES</name></name></expr></argument>, <argument><expr><name><name>Index</name><operator>.</operator><name>ANALYZED</name></name></expr></argument>, <argument><expr><name><name>TermVector</name><operator>.</operator><name>WITH_POSITIONS_OFFSETS</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>writer</name><operator>.</operator><name>addDocument</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;
    <comment type="line">// The second document should cause a flush.</comment>
    <expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"flush should have occurred and files created"</literal></expr></argument>, <argument><expr><call><name><name>dir</name><operator>.</operator><name>listAll</name></name><argument_list>()</argument_list></call><operator>.</operator><name>length</name> <operator>&gt;</operator> <literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;
   
    <comment type="line">// After rollback, IW should remove all files</comment>
    <expr><call><name><name>writer</name><operator>.</operator><name>rollback</name></name><argument_list>()</argument_list></call></expr>;
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"no files should exist in the directory after rollback"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><call><name><name>dir</name><operator>.</operator><name>listAll</name></name><argument_list>()</argument_list></call><operator>.</operator><name>length</name></expr></argument>)</argument_list></call></expr>;

    <comment type="line">// Since we rolled-back above, that close should be a no-op</comment>
    <expr><call><name><name>writer</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"expected a no-op close after IW.rollback()"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><call><name><name>dir</name><operator>.</operator><name>listAll</name></name><argument_list>()</argument_list></call><operator>.</operator><name>length</name></expr></argument>)</argument_list></call></expr>;
  }</block></expr>
  
 }</block>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexWriterDelete</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexWriterDelete</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>c5e3383f76d</name><operator>..</operator><literal type="number">7bb4416b754</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexWriterDelete</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexWriterDelete</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">749</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">749</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestIndexWriterDelete</name> extends <name>LuceneTestCase</name> <block>{
 
     <expr><name>MockRAMDirectory</name> <name>dir</name> <operator>=</operator> <operator>new</operator> <call><name>MockRAMDirectory</name><argument_list>()</argument_list></call></expr>;
     <expr><name>IndexWriter</name> <name>modifier</name> <operator>=</operator> <operator>new</operator> <call><name>IndexWriter</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>IndexWriterConfig</name><argument_list>(<argument><expr><name>TEST_VERSION_CURRENT</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>WhitespaceAnalyzer</name><argument_list>(<argument><expr><name>TEST_VERSION_CURRENT</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;

    <expr><call><name><name>modifier</name><operator>.</operator><name>commit</name></name><argument_list>()</argument_list></call></expr>;
     <expr><call><name><name>dir</name><operator>.</operator><name>failOn</name></name><argument_list>(<argument><expr><call><name><name>failure</name><operator>.</operator><name>reset</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
     <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>keywords</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexWriterExceptions</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexWriterExceptions</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>b6afdf85359</name><operator>..</operator><literal type="number">855b7b8b2b6</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexWriterExceptions</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexWriterExceptions</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">134</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">134</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestIndexWriterExceptions</name> extends <name>LuceneTestCase</name> <block>{
     <expr><name>MockIndexWriter</name> <name>writer</name>  <operator>=</operator> <operator>new</operator> <call><name>MockIndexWriter</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>IndexWriterConfig</name><argument_list>(<argument><expr><name>TEST_VERSION_CURRENT</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>WhitespaceAnalyzer</name><argument_list>(<argument><expr><name>TEST_VERSION_CURRENT</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>setRAMBufferSizeMB</name><argument_list>(<argument><expr><literal type="number">0.1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <expr><operator>(</operator><operator>(</operator><name>ConcurrentMergeScheduler</name><operator>)</operator> <call><name><name>writer</name><operator>.</operator><name>getConfig</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getMergeScheduler</name><argument_list>()</argument_list></call><operator>)</operator><operator>.</operator><call><name>setSuppressExceptions</name><argument_list>()</argument_list></call></expr>;
     <comment type="line">//writer.setMaxBufferedDocs(10);</comment>
    <expr><call><name><name>writer</name><operator>.</operator><name>commit</name></name><argument_list>()</argument_list></call></expr>;
 
     <if_stmt><if>if <condition>(<expr><name>VERBOSE</name></expr>)</condition><block type="pseudo"><block_content>
       <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>setInfoStream</name></name><argument_list>(<argument><expr><name><name>System</name><operator>.</operator><name>out</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
@@ <operator>-</operator><literal type="number">171</literal><operator>,</operator><literal type="number">6</literal> <operator>+</operator><literal type="number">172</literal><operator>,</operator><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestIndexWriterExceptions</name> extends <name>LuceneTestCase</name> <block>{
     <expr><name>MockIndexWriter</name> <name>writer</name>  <operator>=</operator> <operator>new</operator> <call><name>MockIndexWriter</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>IndexWriterConfig</name><argument_list>(<argument><expr><name>TEST_VERSION_CURRENT</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>WhitespaceAnalyzer</name><argument_list>(<argument><expr><name>TEST_VERSION_CURRENT</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>setRAMBufferSizeMB</name><argument_list>(<argument><expr><literal type="number">0.2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <expr><operator>(</operator><operator>(</operator><name>ConcurrentMergeScheduler</name><operator>)</operator> <call><name><name>writer</name><operator>.</operator><name>getConfig</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getMergeScheduler</name><argument_list>()</argument_list></call><operator>)</operator><operator>.</operator><call><name>setSuppressExceptions</name><argument_list>()</argument_list></call></expr>;
     <comment type="line">//writer.setMaxBufferedDocs(10);</comment>
    <expr><call><name><name>writer</name><operator>.</operator><name>commit</name></name><argument_list>()</argument_list></call></expr>;
 
     <if_stmt><if>if <condition>(<expr><name>VERBOSE</name></expr>)</condition><block type="pseudo"><block_content>
       <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>setInfoStream</name></name><argument_list>(<argument><expr><name><name>System</name><operator>.</operator><name>out</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexWriterReader</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexWriterReader</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">511fdbe57c6</literal><operator>..</operator><literal type="number">2a5640b30ff</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexWriterReader</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestIndexWriterReader</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">561</literal><operator>,</operator><literal type="number">6</literal> <operator>+</operator><literal type="number">561</literal><operator>,</operator><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestIndexWriterReader</name> extends <name>LuceneTestCase</name> <block>{
   <expr><specifier>public</specifier> <name>void</name> <call><name>testAfterCommit</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><name>Directory</name> <name>dir1</name> <operator>=</operator> <operator>new</operator> <call><name>MockRAMDirectory</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
     <expr><name>IndexWriter</name> <name>writer</name> <operator>=</operator> <operator>new</operator> <call><name>IndexWriter</name><argument_list>(<argument><expr><name>dir1</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>IndexWriterConfig</name><argument_list>(<argument><expr><name>TEST_VERSION_CURRENT</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>WhitespaceAnalyzer</name><argument_list>(<argument><expr><name>TEST_VERSION_CURRENT</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>writer</name><operator>.</operator><name>commit</name></name><argument_list>()</argument_list></call></expr>;
     <expr><call><name><name>writer</name><operator>.</operator><name>setInfoStream</name></name><argument_list>(<argument><expr><name>infoStream</name></expr></argument>)</argument_list></call></expr>;
 
     <comment type="line">// create the index</comment>
@@ <expr><operator>-</operator><literal type="number">828</literal></expr>,<expr><literal type="number">4</literal> <operator>+</operator><literal type="number">829</literal></expr>,<expr><literal type="number">15</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestIndexWriterReader</name> extends <name>LuceneTestCase</name> <block>{
     <expr><call><name><name>w</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;
     <expr><call><name><name>dir</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;
   }</block>
  
  <specifier>public</specifier> <name>void</name> <call><name>testEmptyIndex</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <comment type="line">// Ensures that getReader works on an empty index, which hasn't been committed yet.</comment>
    <expr><name>Directory</name> <name>dir</name> <operator>=</operator> <operator>new</operator> <call><name>MockRAMDirectory</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <expr><name>IndexWriter</name> <name>w</name> <operator>=</operator> <operator>new</operator> <call><name>IndexWriter</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>IndexWriterConfig</name><argument_list>(<argument><expr><name>TEST_VERSION_CURRENT</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>WhitespaceAnalyzer</name><argument_list>(<argument><expr><name>TEST_VERSION_CURRENT</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><name>IndexReader</name> <name>r</name> <operator>=</operator> <call><name><name>w</name><operator>.</operator><name>getReader</name></name><argument_list>()</argument_list></call></expr>;
    <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><call><name><name>r</name><operator>.</operator><name>numDocs</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>r</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;
    <expr><call><name><name>w</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;
  }</block></block></block></expr></expr_stmt></block_content></block></for>

 }</block>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestNoDeletionPolicy</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestNoDeletionPolicy</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>f780a06795a</name><operator>..</operator><literal type="number">3d18e96ce1c</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestNoDeletionPolicy</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestNoDeletionPolicy</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">82</literal></expr>,<expr><literal type="number">10</literal> <operator>+</operator><literal type="number">82</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestNoDeletionPolicy</name> extends <name>LuceneTestCaseJ4</name> <block>{
       <expr><call><name><name>doc</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Field</name><argument_list>(<argument><expr><literal type="string">"c"</literal></expr></argument>, <argument><expr><literal type="string">"a"</literal> <operator>+</operator> <name>i</name></expr></argument>, <argument><expr><name><name>Store</name><operator>.</operator><name>YES</name></name></expr></argument>, <argument><expr><name><name>Index</name><operator>.</operator><name>ANALYZED</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
       <expr><call><name><name>writer</name><operator>.</operator><name>addDocument</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;
       <expr><call><name><name>writer</name><operator>.</operator><name>commit</name></name><argument_list>()</argument_list></call></expr>;
      <comment type="line">// the reason to expect i + 2 commits is because when IndexWriter is</comment>
      <comment type="line">// created it creates a first commit. If this ever changes, then the</comment>
      <comment type="line">// expected should be i + 1 (and this comment removed).</comment>
      <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"wrong number of commits !"</literal></expr></argument>, <argument><expr><name>i</name> <operator>+</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><call><name><name>IndexReader</name><operator>.</operator><name>listCommits</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
      <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"wrong number of commits !"</literal></expr></argument>, <argument><expr><name>i</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>, <argument><expr><call><name><name>IndexReader</name><operator>.</operator><name>listCommits</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
     }</block>
     <call><name><name>writer</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;
   }</block>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestStressIndexing</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestStressIndexing</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">1bc66a190ee</literal><operator>..</operator><literal type="number">0b445839545</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestStressIndexing</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestStressIndexing</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">122</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">122</literal></expr>,<expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestStressIndexing</name> extends <name>MultiCodecTestCase</name> <block>{
         <expr><name>TEST_VERSION_CURRENT</name></expr>, <expr><operator>new</operator> <call><name>SimpleAnalyzer</name><argument_list>(<argument><expr><name>TEST_VERSION_CURRENT</name></expr></argument>)</argument_list></call></expr>)
         <operator>.</operator><call><name>setOpenMode</name><argument_list>(<argument><expr><name><name>OpenMode</name><operator>.</operator><name>CREATE</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>setMaxBufferedDocs</name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>setMergeScheduler</name><argument_list>(
             <argument><expr><name>mergeScheduler</name></expr></argument>)</argument_list></call>)</block></expr>;

    <expr><call><name><name>modifier</name><operator>.</operator><name>commit</name></name><argument_list>()</argument_list></call></expr>;
    
     <expr><name><name>TimedThread</name><index>[]</index></name> <name>threads</name> <operator>=</operator> <operator>new</operator> <name><name>TimedThread</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr>;
     <expr><name>int</name> <name>numThread</name> <operator>=</operator> <literal type="number">0</literal></expr>;
 
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestStressIndexing2</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestStressIndexing2</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>d38ba1fe55f</name><operator>..</operator><literal type="number">78600499d61</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestStressIndexing2</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>TestStressIndexing2</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">150</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">150</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestStressIndexing2</name> extends <name>MultiCodecTestCase</name> <block>{
     <expr><name>IndexWriter</name> <name>w</name> <operator>=</operator> <operator>new</operator> <call><name>MockIndexWriter</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>IndexWriterConfig</name><argument_list>(
         <argument><expr><name>TEST_VERSION_CURRENT</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>WhitespaceAnalyzer</name><argument_list>(<argument><expr><name>TEST_VERSION_CURRENT</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>setOpenMode</name><argument_list>(<argument><expr><name><name>OpenMode</name><operator>.</operator><name>CREATE</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>setRAMBufferSizeMB</name><argument_list>(
         <argument><expr><literal type="number">0.1</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>setMaxBufferedDocs</name><argument_list>(<argument><expr><name>maxBufferedDocs</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>w</name><operator>.</operator><name>commit</name></name><argument_list>()</argument_list></call></expr>;
     <expr><name>LogMergePolicy</name> <name>lmp</name> <operator>=</operator> <operator>(</operator><name>LogMergePolicy</name><operator>)</operator> <call><name><name>w</name><operator>.</operator><name>getConfig</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getMergePolicy</name><argument_list>()</argument_list></call></expr>;
     <expr><call><name><name>lmp</name><operator>.</operator><name>setUseCompoundFile</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>lmp</name><operator>.</operator><name>setUseCompoundDocStore</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestLockFactory</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestLockFactory</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>c07ece490b0</name><operator>..</operator><literal type="number">6db3e64be7e</literal> <literal type="number">100755</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestLockFactory</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestLockFactory</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">82</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">82</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestLockFactory</name> extends <name>LuceneTestCase</name> <block>{
                    <expr><call><name><name>NoLockFactory</name><operator>.</operator><name><name>class</name><operator>.</operator><name>isInstance</name></name></name><argument_list>(<argument><expr><call><name><name>dir</name><operator>.</operator><name>getLockFactory</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</block></expr>;
 
         <expr><name>IndexWriter</name> <name>writer</name> <operator>=</operator> <operator>new</operator> <call><name>IndexWriter</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>IndexWriterConfig</name><argument_list>(<argument><expr><name>TEST_VERSION_CURRENT</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>WhitespaceAnalyzer</name><argument_list>(<argument><expr><name>TEST_VERSION_CURRENT</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;

        <expr><call><name><name>writer</name><operator>.</operator><name>commit</name></name><argument_list>()</argument_list></call></expr>; <comment type="line">// required so the second open succeed </comment>
         <comment type="line">// Create a 2nd IndexWriter.  This is normally not allowed but it should run through since we're not</comment>
         <comment type="line">// using any locks:</comment>
         <expr><name>IndexWriter</name> <name>writer2</name> <operator>=</operator> <literal type="null">null</literal></expr>;
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestWindowsMMap</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestWindowsMMap</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">8ccc79aa47c</literal><operator>..</operator><literal type="number">8a9bd1559c0</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestWindowsMMap</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>store</name><operator>/</operator><name><name>TestWindowsMMap</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">66</literal></expr>,<expr><literal type="number">17</literal> <operator>+</operator><literal type="number">66</literal></expr>,<expr><literal type="number">22</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestWindowsMMap</name> extends <name>LuceneTestCase</name> <block>{
     <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>TEMP_DIR</name></expr></argument>,<argument><expr><literal type="string">"testLuceneMmap"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr>;
 
   <expr><specifier>public</specifier> <name>void</name> <call><name>testMmapIndex</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>FSDirectory</name> <name>storeDirectory</name></expr></block></expr></argument></throws></expr>;
    <expr><name>storeDirectory</name> <operator>=</operator> <operator>new</operator> <call><name>MMapDirectory</name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>storePathname</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;

    <comment type="line">// sometimes the directory is not cleaned by rmDir, because on Windows it</comment>
    <comment type="line">// may take some time until the files are finally dereferenced. So clean the</comment>
    <comment type="line">// directory up front, or otherwise new IndexWriter will fail.</comment>
    <expr><name>File</name> <name>dirPath</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>storePathname</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>rmDir</name><argument_list>(<argument><expr><name>dirPath</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>MMapDirectory</name> <name>dir</name> <operator>=</operator> <operator>new</operator> <call><name>MMapDirectory</name><argument_list>(<argument><expr><name>dirPath</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;
    
     <comment type="line">// plan to add a set of useful stopwords, consider changing some of the</comment>
     <comment type="line">// interior filters.</comment>
     <expr><name>StandardAnalyzer</name> <name>analyzer</name> <operator>=</operator> <operator>new</operator> <call><name>StandardAnalyzer</name><argument_list>(<argument><expr><name>TEST_VERSION_CURRENT</name></expr></argument>, <argument><expr><call><name><name>Collections</name><operator>.</operator><name>emptySet</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <comment type="line">// TODO: something about lock timeouts and leftover locks.</comment>
    <expr><name>IndexWriter</name> <name>writer</name> <operator>=</operator> <operator>new</operator> <call><name>IndexWriter</name><argument_list>(<argument><expr><name>storeDirectory</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>IndexWriterConfig</name><argument_list>(
    <argument><expr><name>IndexWriter</name> <name>writer</name> <operator>=</operator> <operator>new</operator> <call><name>IndexWriter</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>IndexWriterConfig</name><argument_list>(
         <argument><expr><name>TEST_VERSION_CURRENT</name></expr></argument>, <argument><expr><name>analyzer</name></expr></argument>)</argument_list></call>
         <operator>.</operator><call><name>setOpenMode</name><argument_list>(<argument><expr><name><name>OpenMode</name><operator>.</operator><name>CREATE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>;
    <argument><expr><name>IndexSearcher</name> <name>searcher</name> <operator>=</operator> <operator>new</operator> <call><name>IndexSearcher</name><argument_list>(<argument><expr><name>storeDirectory</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></argument>;
    <argument><expr><call><name><name>writer</name><operator>.</operator><name>commit</name></name><argument_list>()</argument_list></call></expr></argument>;
    <argument><expr><name>IndexSearcher</name> <name>searcher</name> <operator>=</operator> <operator>new</operator> <call><name>IndexSearcher</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></argument>;
     
     for<argument><expr><operator>(</operator><name>int</name> <name>dx</name> <operator>=</operator> <literal type="number">0</literal>; <name>dx</name> <operator>&lt;</operator> <literal type="number">1000</literal>; <name>dx</name> <operator>++</operator><operator>)</operator> <block>{
       <expr><name>String</name> <name>f</name> <operator>=</operator> <call><name>randomField</name><argument_list>()</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">87</literal></expr>,<expr><literal type="number">14</literal> <operator>+</operator><literal type="number">92</literal></expr>,<expr><literal type="number">16</literal> @@ <specifier>public</specifier> class <name>TestWindowsMMap</name> extends <name>LuceneTestCase</name> <block>{
     
     <expr><call><name><name>searcher</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;
     <expr><call><name><name>writer</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;
                <expr><call><name>rmDir</name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>storePathname</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>rmDir</name><argument_list>(<argument><expr><name>dirPath</name></expr></argument>)</argument_list></call></expr>;
   }</block>
 
        <specifier>private</specifier> <name>void</name> <call><name>rmDir</name><argument_list>(<argument><expr><name>File</name> <name>dir</name></expr></argument>)</argument_list></call> <block>{
          <expr><name><name>File</name><index>[]</index></name> <name>files</name> <operator>=</operator> <call><name><name>dir</name><operator>.</operator><name>listFiles</name></name><argument_list>()</argument_list></call></expr>;
          <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>files</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
            <expr_stmt><expr><name><name>files</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>delete</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
          <expr_stmt/>}</block_content>
          dir.delete(</block></for>)</block></expr>;
        }</block>
  <specifier>private</specifier> <name>void</name> <call><name>rmDir</name><argument_list>(<argument><expr><name>File</name> <name>dir</name></expr></argument>)</argument_list></call> <block>{
    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>dir</name><operator>.</operator><name>exists</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <return>return;</return>
    <expr_stmt/>}</block_content>
    for (File file : dir.listFiles(</block></if></if_stmt>)</block></expr></argument>)</argument_list></call> <block>{
      <expr><call><name><name>file</name><operator>.</operator><name>delete</name></name><argument_list>()</argument_list></call></expr>;
    }</block>
    <call><name><name>dir</name><operator>.</operator><name>delete</name></name><argument_list>()</argument_list></call></expr></argument>;
  }</argument_list></call></expr>
 }</block>
<operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></block></expr></block></expr></block></expr></expr_stmt></block_content></block></try></block></expr></expr_stmt></block_content></block></for></block_content></block></function></block_content></block></function></block_content></block></function></block></class>

</unit>
