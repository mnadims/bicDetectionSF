<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/lucene/9b255d6cc4.java"><expr_stmt><expr><name>From</name> <literal type="number">9b255d6cc4f105e97a559b8d402d802349fcd694</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Steven</name> <name><name>Rowe</name> <argument_list type="generic">&lt;<argument><name>sarowe</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Wed</name></expr><operator>,</operator> <expr><literal type="number">25</literal> <name>Mar</name> <literal type="number">2015</literal> <literal type="number">06</literal><operator>:</operator><literal type="number">25</literal><operator>:</operator><literal type="number">24</literal> <operator>+</operator><literal type="number">0000</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>SOLR</name><operator>-</operator><literal type="number">6141</literal><operator>:</operator> <name>fix</name> <name>TestBulkSchemaConcurrent</name></expr>;</expr_stmt> <decl_stmt><decl><type><name>fix</name> <name>field</name> <name>deletion</name>
 <name>to</name> <name>fail</name> <name>when</name> <name>a</name> <name>dynamic</name> <name>copy</name> <name>field</name> <name>directive</name> <name>has</name> <name>the</name> <name>field</name> <name>as</name> <name>its</name></type> <name>source</name></decl>;</decl_stmt>
 <expr_stmt><expr><name>don</name><literal type="char">'t attempt to decrement a SchemaField'</literal><name>s</name> <name>count</name> <name>in</name> <name>copyFieldTargetCounts</name></expr></expr_stmt> <if_stmt><if>if
 it's not present in the map.

git-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1669055 13f79535-47bb-0310-9956-ffa450edef68
--
 .../solr/schema/ManagedIndexSchema.java       | 22 ++++++++++++++-----
 .../solr/schema/TestBulkSchemaConcurrent.java |  6 ++---
 2 files changed, 20 insertions(+), 8 deletions(-)

diff --git a/solr/core/src/java/org/apache/solr/schema/ManagedIndexSchema.java b/solr/core/src/java/org/apache/solr/schema/ManagedIndexSchema.java
index f96a89fc0c2..0ddfb5969df 100644
-- a/solr/core/src/java/org/apache/solr/schema/ManagedIndexSchema.java
++ b/solr/core/src/java/org/apache/solr/schema/ManagedIndexSchema.java
@@ -449,9 +449,16 @@ public final class ManagedIndexSchema extends IndexSchema {
       for (String name : names) {
         SchemaField field = getFieldOrNull(name); 
         if (null != field) {
          if (copyFieldsMap.containsKey(name) || isCopyFieldTarget(field)) {
            throw new SolrException(ErrorCode.BAD_REQUEST, "Can't delete '" + name
                + "' because it's referred to by at least one copy field directive.");
          String message = "Can't delete field '" + name
              + "' because it's referred to by at least one copy field directive.";
          if (newSchema.copyFieldsMap.containsKey(name) || newSchema.isCopyFieldTarget(field)) {
            throw new SolrException(ErrorCode.BAD_REQUEST, message);
          }
          for (int i = 0 ; i &lt; newSchema.dynamicCopyFields.length ; ++i) {
            DynamicCopy dynamicCopy = newSchema.dynamicCopyFields[i];
            if (name.equals(dynamicCopy.getRegex())) {
              throw new SolrException(ErrorCode.BAD_REQUEST, message);
            }
           }
           newSchema.fields.remove(name);
           newSchema.fieldsWithDefaultValue.remove(field);
@@ -844,7 +851,10 @@ public final class ManagedIndexSchema extends IndexSchema {
           DynamicCopy dynamicCopy = dynamicCopyFields[i];
           if (source.equals(dynamicCopy.getRegex()) &amp;&amp; dest.equals(dynamicCopy.getDestFieldName())) {
             found = true;
            decrementCopyFieldTargetCount(dynamicCopy.getDestination().getPrototype());
            SchemaField destinationPrototype = dynamicCopy.getDestination().getPrototype();
            if (copyFieldTargetCounts.containsKey(destinationPrototype)) {
              decrementCopyFieldTargetCount(destinationPrototype);
            }
             if (dynamicCopyFields.length &gt; 1) {
               DynamicCopy[] temp = new DynamicCopy[dynamicCopyFields.length - 1];
               System.arraycopy(dynamicCopyFields, 0, temp, 0, i);
@@ -1126,7 +1136,9 @@ public final class ManagedIndexSchema extends IndexSchema {
         if (typeName.equals(destinationPrototype.getType().getTypeName())
             || (null != sourceDynamicBase &amp;&amp; typeName.equals(sourceDynamicBase.getPrototype().getType().getTypeName()))) {
           dynamicCopyFieldsToRebuild.add(dynamicCopy);
          newSchema.decrementCopyFieldTargetCount(destinationPrototype);
          if (newSchema.copyFieldTargetCounts.containsKey(destinationPrototype)) {
            newSchema.decrementCopyFieldTargetCount(destinationPrototype);
          }
           // don't add this dynamic copy field to newDynamicCopyFields - effectively removing it</if></if_stmt>
         } else <block>{<block_content>
           <expr_stmt><expr><call><name><name>newDynamicCopyFields</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>dynamicCopy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>TestBulkSchemaConcurrent</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>TestBulkSchemaConcurrent</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">3ad79af9009</literal><operator>..</operator><name>b099035fc6c</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>TestBulkSchemaConcurrent</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>TestBulkSchemaConcurrent</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">152</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">152</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestBulkSchemaConcurrent</name>  extends <name>AbstractFullDistribZkTestBase</name> <block>{
 
     <expr><name>payload</name> <operator>=</operator> <call><name><name>payload</name><operator>.</operator><name>replace</name></name><argument_list>(<argument><expr><literal type="string">"replaceFieldA"</literal></expr></argument>, <argument><expr><name>aField</name></expr></argument>)</argument_list></call></expr>;
     <expr><name>payload</name> <operator>=</operator> <call><name><name>payload</name><operator>.</operator><name>replace</name></name><argument_list>(<argument><expr><literal type="string">"replaceDynamicField"</literal></expr></argument>, <argument><expr><name>dynamicFldName</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>payload</name> <operator>=</operator> <call><name><name>payload</name><operator>.</operator><name>replace</name></name><argument_list>(<argument><expr><literal type="string">"replaceDynamicCopyFieldDest"</literal></expr></argument>,<argument><expr><name>dynamicCopyFldDest</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>payload</name> <operator>=</operator> <call><name><name>payload</name><operator>.</operator><name>replace</name></name><argument_list>(<argument><expr><literal type="string">"replaceDynamicCopyFieldDest"</literal></expr></argument>, <argument><expr><name>dynamicCopyFldDest</name></expr></argument>)</argument_list></call></expr>;
     <expr><name>payload</name> <operator>=</operator> <call><name><name>payload</name><operator>.</operator><name>replace</name></name><argument_list>(<argument><expr><literal type="string">"myNewFieldTypeName"</literal></expr></argument>, <argument><expr><name>newFieldTypeName</name></expr></argument>)</argument_list></call></expr>;
 
     <expr><name>RestTestHarness</name> <name>publisher</name> <operator>=</operator> <call><name><name>restTestHarnesses</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>r</name><operator>.</operator><name>nextInt</name></name><argument_list>(<argument><expr><call><name><name>restTestHarnesses</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">269</literal></expr>,<expr><literal type="number">12</literal> <operator>+</operator><literal type="number">269</literal></expr>,<expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestBulkSchemaConcurrent</name>  extends <name>AbstractFullDistribZkTestBase</name> <block>{
 
   <expr><specifier>private</specifier> <name>void</name> <call><name>invokeBulkDeleteCall</name><argument_list>(<argument><expr><name>int</name> <name>seed</name></expr></argument>, <argument><expr><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name> <name>errs</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><name>String</name> <name>payload</name> <operator>=</operator> <literal type="string">"{\n"</literal> <operator>+</operator>
        <literal type="string">"          'delete-field' : {'name':'replaceFieldA'},\n"</literal> <operator>+</operator>
        <literal type="string">"          'delete-dynamic-field' : {'name' :'replaceDynamicField'},\n"</literal> <operator>+</operator>
         <literal type="string">"          'delete-copy-field' : {\n"</literal> <operator>+</operator>
         <literal type="string">"                       'source' :'replaceFieldA',\n"</literal> <operator>+</operator>
         <literal type="string">"                       'dest':['replaceDynamicCopyFieldDest']\n"</literal> <operator>+</operator>
         <literal type="string">"                       },\n"</literal> <operator>+</operator>
        <literal type="string">"          'delete-field' : {'name':'replaceFieldA'},\n"</literal> <operator>+</operator>
        <literal type="string">"          'delete-dynamic-field' : {'name' :'replaceDynamicField'},\n"</literal> <operator>+</operator>
         <literal type="string">"          'delete-field-type' : {'name' :'myNewFieldTypeName'}\n"</literal> <operator>+</operator>
         <literal type="string">" }"</literal></expr></block></expr></argument></throws></expr>;
     <expr><name>String</name> <name>aField</name> <operator>=</operator> <literal type="string">"a"</literal> <operator>+</operator> <name>seed</name></expr>;
<expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></block></expr></block></expr></expr_stmt></block_content></block>

</unit>
