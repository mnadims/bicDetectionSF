<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/lucene/07be2c42ba.java"><expr_stmt><expr><name>From</name> <literal type="number">07be2c42ba24fea7c4e84836aa4c3f8d059f71d6</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Varun</name> <name><name>Thacker</name> <argument_list type="generic">&lt;<argument><name>varunthacker1989</name><annotation>@<name><name>gmail</name><operator>.</operator><name>com</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Thu</name></expr><operator>,</operator> <expr><literal type="number">23</literal> <name>Jun</name> <literal type="number">2016</literal> <literal type="number">23</literal><operator>:</operator><literal type="number">49</literal><operator>:</operator><literal type="number">14</literal> <operator>+</operator><literal type="number">0530</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>SOLR</name><operator>-</operator><literal type="number">7374</literal><operator>:</operator> <name>Core</name> <name>level</name> <name>backup</name><operator>/</operator><name>restore</name> <name>now</name> <name>supports</name> <name>specifying</name>
 <name>a</name> <name>directory</name> <name>implementation</name>

<operator>--</operator>
 <name>solr</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>                              <operator>|</operator>   <literal type="number">3</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name><name>OverseerCollectionMessageHandler</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>CoreContainer</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">9</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>HdfsDirectoryFactory</name><operator>.</operator><name>java</name></name>       <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>NodeConfig</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">20</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrXmlConfig</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">12</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>backup</name><operator>/</operator><name>repository</name><operator>/</operator><name><name>BackupRepository</name><operator>.</operator><name>java</name></name>   <operator>|</operator> <literal type="number">166</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator>
 <operator>...</operator><operator>/</operator><name>repository</name><operator>/</operator><name><name>BackupRepositoryFactory</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">89</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator>
 <operator>...</operator><operator>/</operator><name>repository</name><operator>/</operator><name><name>HdfsBackupRepository</name><operator>.</operator><name>java</name></name>      <operator>|</operator> <literal type="number">159</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator>
 <operator>...</operator><operator>/</operator><name>repository</name><operator>/</operator><name><name>LocalFileSystemRepository</name><operator>.</operator><name>java</name></name> <operator>|</operator> <literal type="number">136</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name>backup</name><operator>/</operator><name>repository</name><operator>/</operator></expr></expr_stmt><package>package-<name><name>info</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  23 ++
 .../<name>solr</name>/<name>handler</name>/<name><name>OldBackupDirectory</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  55 ++--
 .../<name>solr</name>/<name>handler</name>/<name><name>ReplicationHandler</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  61 ++++-
 .../<name>org</name>/<name>apache</name>/<name>solr</name>/<name>handler</name>/<name><name>RestoreCore</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  22 +-
 .../<name>org</name>/<name>apache</name>/<name>solr</name>/<name>handler</name>/<name><name>SnapShooter</name><operator>.</operator><name>java</name></name>  <operator>|</operator> 153 ++++++-----
 .../<name>handler</name>/<name>admin</name>/<name><name>CollectionsHandler</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   4 +-
 .../<name>handler</name>/<name>admin</name>/<name><name>CoreAdminOperation</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  42 ++-
 .../<name>apache</name>/<name>solr</name>/<name>store</name>/<name>hdfs</name>/<name><name>HdfsDirectory</name><operator>.</operator><name>java</name></name> <operator>|</operator>   5 +-
 <name>solr</name>/<name>core</name>/<name>src</name>/<name>test</name>-<name>files</name>/<name>solr</name>/<name>solr</name>-50-<name><name>all</name><operator>.</operator><name>xml</name></name> <operator>|</operator>   4 +
 .../<name>solr</name>/<name>cloud</name>/<name><name>BasicDistributedZk2Test</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  27 +-
 .../<name>core</name>/<name><name>TestBackupRepositoryFactory</name><operator>.</operator><name>java</name></name>     <operator>|</operator> 152 +++++++++++
 .../<name>org</name>/<name>apache</name>/<name>solr</name>/<name>core</name>/<name><name>TestSolrXml</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  13 +
 .../<name>solr</name>/<name>handler</name>/<name><name>BackupRestoreUtils</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  69 +++++
 .../<name>solr</name>/<name>handler</name>/<name><name>CheckBackupStatus</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  10 +-
 .../<name>handler</name>/<name><name>TestHdfsBackupRestoreCore</name><operator>.</operator><name>java</name></name>    <operator>|</operator> 251 ++++++++++++++++++
 .../<name>handler</name>/<name><name>TestReplicationHandlerBackup</name><operator>.</operator><name>java</name></name> <operator>|</operator>  39 ++-
 .../<name>apache</name>/<name>solr</name>/<name>handler</name>/<name><name>TestRestoreCore</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  52 ++--
 27 <name>files</name> <name>changed</name><operator>,</operator> 1399 <name>insertions</name>(+</package>)<operator>,</operator> <expr_stmt><expr><literal type="number">183</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>backup</name><operator>/</operator><name>repository</name><operator>/</operator><name><name>BackupRepository</name><operator>.</operator><name>java</name></name>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>backup</name><operator>/</operator><name>repository</name><operator>/</operator><name><name>BackupRepositoryFactory</name><operator>.</operator><name>java</name></name>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>backup</name><operator>/</operator><name>repository</name><operator>/</operator><name><name>HdfsBackupRepository</name><operator>.</operator><name>java</name></name>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>backup</name><operator>/</operator><name>repository</name><operator>/</operator><name><name>LocalFileSystemRepository</name><operator>.</operator><name>java</name></name>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>backup</name><operator>/</operator><name>repository</name><operator>/</operator></expr></expr_stmt><package>package-<name><name>info</name><operator>.</operator><name>java</name></name>
 <name>create</name> <name>mode</name> 100644 <name>solr</name>/<name>core</name>/<name>src</name>/<name>test</name>/<name>org</name>/<name>apache</name>/<name>solr</name>/<name>core</name>/<name><name>TestBackupRepositoryFactory</name><operator>.</operator><name>java</name></name>
 <name>create</name> <name>mode</name> 100644 <name>solr</name>/<name>core</name>/<name>src</name>/<name>test</name>/<name>org</name>/<name>apache</name>/<name>solr</name>/<name>handler</name>/<name><name>BackupRestoreUtils</name><operator>.</operator><name>java</name></name>
 <name>create</name> <name>mode</name> 100644 <name>solr</name>/<name>core</name>/<name>src</name>/<name>test</name>/<name>org</name>/<name>apache</name>/<name>solr</name>/<name>handler</name>/<name><name>TestHdfsBackupRestoreCore</name><operator>.</operator><name>java</name></name>

<name>diff</name> --<name>git</name> <name>a</name>/<name>solr</name>/<name><name>CHANGES</name><operator>.</operator><name>txt</name></name> <name>b</name>/<name>solr</name>/<name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
<name>index</name> 683b98baf7d..<name>c8b6914df96</name> 100644
-- <name>a</name>/<name>solr</name>/<name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
++ <name>b</name>/<name>solr</name>/<name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
@@ -66<operator>,</operator>6 +66<operator>,</operator>9 @@ <name>New</name> <name>Features</name>
 
 * <name>SOLR</name>-8048: <name>bin</name>/<name>solr</name> <name>script</name> <name>should</name> <name>support</name> <name>basic</name> <name>auth</name> <name>credentials</name> <name>provided</name> <name>in</name> <name><name>solr</name><operator>.</operator><name>in</name><operator>.</operator><name>sh</name></name> (<name>noble</name></package>)
 
<expr_stmt><expr><operator>*</operator> <name>SOLR</name><operator>-</operator><literal type="number">7374</literal><operator>:</operator> <name>Core</name> <name>level</name> <name>Backup</name><operator>/</operator><name>Restore</name> <name>now</name> <name>supports</name> <name>specifying</name> <name>the</name> <name>directory</name> <name>implementation</name> <name>to</name> <name>use</name>
  <name>via</name> <name>the</name> <literal type="string">"repository"</literal> <name><name>parameter</name><operator>.</operator></name> (<name>Hrishikesh</name> <name>Gadre</name></expr><operator>,</operator> <expr><name>Varun</name> <name>Thacker</name></expr><operator>,</operator> <expr><name>Mark</name> <name>Miller</name></expr></expr_stmt>)

 <expr_stmt><expr><name>Bug</name> <name>Fixes</name>
 <operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator>
 
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>OverseerCollectionMessageHandler</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>OverseerCollectionMessageHandler</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">2cd09d1c9a7</literal><operator>..</operator><name>d7c7ad27fad</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>OverseerCollectionMessageHandler</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>OverseerCollectionMessageHandler</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">2195</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">2195</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>OverseerCollectionMessageHandler</name> implements <name>OverseerMessageHandler</name>
   <specifier>private</specifier> <name>void</name> <call><name>processBackupAction</name><argument_list>(<argument><expr><name>ZkNodeProps</name> <name>message</name></expr></argument>, <argument><expr><name>NamedList</name> <name>results</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name></expr></argument>, <argument><expr><name>KeeperException</name></expr></argument>, <argument><expr><name>InterruptedException</name> <block>{
     <expr><name>String</name> <name>collectionName</name> <operator>=</operator>  <call><name><name>message</name><operator>.</operator><name>getStr</name></name><argument_list>(<argument><expr><name>COLLECTION_PROP</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>String</name></type> <name>backupName</name> <init>=  <expr><call><name><name>message</name><operator>.</operator><name>getStr</name></name><argument_list>(<argument><expr><name>NAME</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>location</name> <init>= <expr><call><name><name>message</name><operator>.</operator><name>getStr</name></name><argument_list>(<argument><expr><literal type="string">"location"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>location</name> <init>= <expr><call><name><name>message</name><operator>.</operator><name>getStr</name></name><argument_list>(<argument><expr><name><name>ZkStateReader</name><operator>.</operator><name>BACKUP_LOCATION</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>ShardHandler</name></type> <name>shardHandler</name> <init>= <expr><call><name><name>shardHandlerFactory</name><operator>.</operator><name>getShardHandler</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>String</name></type> <name>asyncId</name> <init>= <expr><call><name><name>message</name><operator>.</operator><name>getStr</name></name><argument_list>(<argument><expr><name>ASYNC</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>requestMap</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">2267</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">2267</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>OverseerCollectionMessageHandler</name> implements <name>OverseerMessageHandler</name>
     <comment type="line">// TODO maybe we can inherit createCollection's options/code</comment>
     <name>String</name> <name>restoreCollectionName</name> <operator>=</operator>  <call><name><name>message</name><operator>.</operator><name>getStr</name></name><argument_list>(<argument><expr><name>COLLECTION_PROP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>String</name></type> <name>backupName</name> <init>=  <expr><call><name><name>message</name><operator>.</operator><name>getStr</name></name><argument_list>(<argument><expr><name>NAME</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="line">// of backup</comment>
    <decl_stmt><decl><type><name>String</name></type> <name>location</name> <init>= <expr><call><name><name>message</name><operator>.</operator><name>getStr</name></name><argument_list>(<argument><expr><literal type="string">"location"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>location</name> <init>= <expr><call><name><name>message</name><operator>.</operator><name>getStr</name></name><argument_list>(<argument><expr><name><name>ZkStateReader</name><operator>.</operator><name>BACKUP_LOCATION</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>ShardHandler</name></type> <name>shardHandler</name> <init>= <expr><call><name><name>shardHandlerFactory</name><operator>.</operator><name>getShardHandler</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>String</name></type> <name>asyncId</name> <init>= <expr><call><name><name>message</name><operator>.</operator><name>getStr</name></name><argument_list>(<argument><expr><name>ASYNC</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>requestMap</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>CoreContainer</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>CoreContainer</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>e5e16cba28f</name><operator>..</operator><name>bfab1b89e6a</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>CoreContainer</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>CoreContainer</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">59</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">59</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>cloud</name><operator>.</operator><name>ZkStateReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>ExecutorUtil</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>IOUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>Utils</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>backup</name><operator>.</operator><name>repository</name><operator>.</operator><name>BackupRepositoryFactory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>handler</name><operator>.</operator><name>RequestHandlerBase</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>handler</name><operator>.</operator><name>admin</name><operator>.</operator><name>CollectionsHandler</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>handler</name><operator>.</operator><name>admin</name><operator>.</operator><name>ConfigSetsHandler</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">152</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">153</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>CoreContainer</name> <block>{
 
   <expr><specifier>private</specifier> <name><name>SecurityPluginHolder</name><argument_list type="generic">&lt;<argument><name>AuthenticationPlugin</name></argument>&gt;</argument_list></name> <name>authenticationPlugin</name></expr>;
 
  <expr><specifier>private</specifier> <name>BackupRepositoryFactory</name> <name>backupRepoFactory</name></expr>;

  <expr><specifier>public</specifier> <name>BackupRepositoryFactory</name> <call><name>getBackupRepoFactory</name><argument_list>()</argument_list></call> <block>{
    <return>return <expr><name>backupRepoFactory</name></expr>;</return></block></expr>
  }</block>

   <specifier>public</specifier> <name>ExecutorService</name> <call><name>getCoreZkRegisterExecutorService</name><argument_list>()</argument_list></call> <block>{
     <return>return <expr><call><name><name>zkSys</name><operator>.</operator><name>getCoreZkRegisterExecutorService</name></name><argument_list>()</argument_list></call></expr>;</return>
   }</block></expr></expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">441</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">448</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>CoreContainer</name> <block>{
     <expr><call><name>initializeAuthorizationPlugin</name><argument_list>(<argument><expr><operator>(</operator><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name><operator>)</operator> <call><name><name>securityConfig</name><operator>.</operator><name>data</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"authorization"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>initializeAuthenticationPlugin</name><argument_list>(<argument><expr><operator>(</operator><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name><operator>)</operator> <call><name><name>securityConfig</name><operator>.</operator><name>data</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"authentication"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
    <expr><name><name>this</name><operator>.</operator><name>backupRepoFactory</name></name> <operator>=</operator> <operator>new</operator> <call><name>BackupRepositoryFactory</name><argument_list>(<argument><expr><call><name><name>cfg</name><operator>.</operator><name>getBackupRepositoryPlugins</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;

     <expr><call><name><name>containerHandlers</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>ZK_PATH</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>ZookeeperInfoHandler</name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <expr><name>securityConfHandler</name> <operator>=</operator> <operator>new</operator> <call><name>SecurityConfHandler</name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;
     <expr><name>collectionsHandler</name> <operator>=</operator> <call><name>createHandler</name><argument_list>(<argument><expr><call><name><name>cfg</name><operator>.</operator><name>getCollectionsHandlerClass</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>CollectionsHandler</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>HdfsDirectoryFactory</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>HdfsDirectoryFactory</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>c911ac5958f</name><operator>..</operator><name>b003287aa41</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>HdfsDirectoryFactory</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>HdfsDirectoryFactory</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">331</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">331</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>HdfsDirectoryFactory</name> extends <name>CachingDirectoryFactory</name> implements <name>Sol</name></expr>
     }</block></expr></expr_stmt>
   }
   
  private <function><type><name>Configuration</name></type> <name>getConf</name><parameter_list>()</parameter_list> <block>{<block_content>
  <function><type><specifier>public</specifier> <name>Configuration</name></type> <name>getConf</name><parameter_list>()</parameter_list> <block>{<block_content>
     <decl_stmt><decl><type><name>Configuration</name></type> <name>conf</name> <init>= <expr><operator>new</operator> <call><name>Configuration</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><name>confDir</name> <operator>=</operator> <call><name>getConfig</name><argument_list>(<argument><expr><name>CONFIG_DIRECTORY</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>HdfsUtil</name><operator>.</operator><name>addHdfsResources</name></name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name>confDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>NodeConfig</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>NodeConfig</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">0783355cfe4</literal><operator>..</operator><name>e72fbc92cc9</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>NodeConfig</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>NodeConfig</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">58</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">58</literal></expr><operator>,</operator><expr><literal type="number">15</literal> @@ <specifier>public</specifier> <name>class</name> <name>NodeConfig</name> <block>{
 
   <expr><specifier>private</specifier> <name>final</name> <name>String</name> <name>managementPath</name></expr>;
 
  <expr><specifier>private</specifier> <name>final</name> <name><name>PluginInfo</name><index>[]</index></name> <name>backupRepositoryPlugins</name></expr>;

   <expr><specifier>private</specifier> <call><name>NodeConfig</name><argument_list>(<argument><expr><name>String</name> <name>nodeName</name></expr></argument>, <argument><expr><name>Path</name> <name>coreRootDirectory</name></expr></argument>, <argument><expr><name>Path</name> <name>configSetBaseDirectory</name></expr></argument>, <argument><expr><name>String</name> <name>sharedLibDirectory</name></expr></argument>,
                      <argument><expr><name>PluginInfo</name> <name>shardHandlerFactoryConfig</name></expr></argument>, <argument><expr><name>UpdateShardHandlerConfig</name> <name>updateShardHandlerConfig</name></expr></argument>,
                      <argument><expr><name>String</name> <name>coreAdminHandlerClass</name></expr></argument>, <argument><expr><name>String</name> <name>collectionsAdminHandlerClass</name></expr></argument>,
                      <argument><expr><name>String</name> <name>infoHandlerClass</name></expr></argument>, <argument><expr><name>String</name> <name>configSetsHandlerClass</name></expr></argument>,
                      <argument><expr><name>LogWatcherConfig</name> <name>logWatcherConfig</name></expr></argument>, <argument><expr><name>CloudConfig</name> <name>cloudConfig</name></expr></argument>, <argument><expr><name>int</name> <name>coreLoadThreads</name></expr></argument>,
                     <argument><expr><name>int</name> <name>transientCacheSize</name></expr></argument>, <argument><expr><name>boolean</name> <name>useSchemaCache</name></expr></argument>, <argument><expr><name>String</name> <name>managementPath</name></expr></argument>,
                     <argument><expr><name>SolrResourceLoader</name> <name>loader</name></expr></argument>, <argument><expr><name>Properties</name> <name>solrProperties</name></expr></argument>)</argument_list></call> <block>{
                     <expr><name>int</name> <name>transientCacheSize</name></expr>, <expr><name>boolean</name> <name>useSchemaCache</name></expr>, <expr><name>String</name> <name>managementPath</name></expr>, <expr><name>SolrResourceLoader</name> <name>loader</name></expr>,
                     <expr><name>Properties</name> <name>solrProperties</name></expr>, <expr><name><name>PluginInfo</name><index>[]</index></name> <name>backupRepositoryPlugins</name></expr>) <block>{
     <expr><name><name>this</name><operator>.</operator><name>nodeName</name></name> <operator>=</operator> <name>nodeName</name></expr>;
     <expr><name><name>this</name><operator>.</operator><name>coreRootDirectory</name></name> <operator>=</operator> <name>coreRootDirectory</name></expr>;
     <expr><name><name>this</name><operator>.</operator><name>configSetBaseDirectory</name></name> <operator>=</operator> <name>configSetBaseDirectory</name></expr>;
@@ <expr><operator>-</operator><literal type="number">83</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">85</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>NodeConfig</name> <block>{
     <expr><name><name>this</name><operator>.</operator><name>managementPath</name></name> <operator>=</operator> <name>managementPath</name></expr>;
     <expr><name><name>this</name><operator>.</operator><name>loader</name></name> <operator>=</operator> <name>loader</name></expr>;
     <expr><name><name>this</name><operator>.</operator><name>solrProperties</name></name> <operator>=</operator> <name>solrProperties</name></expr>;
    <expr><name><name>this</name><operator>.</operator><name>backupRepositoryPlugins</name></name> <operator>=</operator> <name>backupRepositoryPlugins</name></expr>;
 
     <if_stmt><if>if <condition>(<expr><name><name>this</name><operator>.</operator><name>cloudConfig</name></name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <name><name>this</name><operator>.</operator><name>coreLoadThreads</name></name> <operator>&lt;</operator> <literal type="number">2</literal></expr>)</condition> <block>{<block_content>
       <throw>throw <expr><operator>new</operator> <call><name>SolrException</name><argument_list>(<argument><expr><name><name>SolrException</name><operator>.</operator><name>ErrorCode</name><operator>.</operator><name>SERVER_ERROR</name></name></expr></argument>,
<argument>@@ <expr><operator>-</operator><literal type="number">165</literal></expr></argument>,<argument><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">168</literal></expr></argument>,<argument><expr><literal type="number">10</literal> @@ <specifier>public</specifier> class <name>NodeConfig</name> <block>{
     <return>return <expr><name>loader</name></expr>;</return>
   }</block>
 
  <specifier>public</specifier> <name><name>PluginInfo</name><index>[]</index></name> <call><name>getBackupRepositoryPlugins</name><argument_list>()</argument_list></call> <block>{
    <return>return <expr><name>backupRepositoryPlugins</name></expr>;</return>
  }</block>

   <specifier>public</specifier> <specifier>static</specifier> class <name>NodeConfigBuilder</name> <block>{
 
     <expr><specifier>private</specifier> <name>Path</name> <name>coreRootDirectory</name></expr>;
@@ <operator>-</operator><literal type="number">183</literal><operator>,</operator><literal type="number">6</literal> <operator>+</operator><literal type="number">190</literal><operator>,</operator><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>NodeConfig</name> <block>{
     <expr><specifier>private</specifier> <name>boolean</name> <name>useSchemaCache</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;
     <specifier>private</specifier> <name>String</name> <name>managementPath</name></block></block></expr></argument>;</argument_list></call></expr></throw>
     <decl_stmt><decl><type><specifier>private</specifier> <name>Properties</name></type> <name>solrProperties</name> <init>= <expr><operator>new</operator> <call><name>Properties</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <name><name>PluginInfo</name><index>[]</index></name></type> <name>backupRepositoryPlugins</name></decl>;</decl_stmt>
 
     <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>SolrResourceLoader</name></type> <name>loader</name></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>String</name></type> <name>nodeName</name></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">283</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">291</literal></expr><operator>,</operator><expr><literal type="number">16</literal> @@ <specifier>public</specifier> <name>class</name> <name>NodeConfig</name> <block>{
       <return>return <expr><name>this</name></expr>;</return></block></expr></expr_stmt></block_content></block></if></if_stmt>
     }</block>
 
    <specifier>public</specifier> <name>NodeConfigBuilder</name> <call><name>setBackupRepositoryPlugins</name><argument_list>(<argument><expr><name><name>PluginInfo</name><index>[]</index></name> <name>backupRepositoryPlugins</name></expr></argument>)</argument_list></call> <block>{
      <expr><name><name>this</name><operator>.</operator><name>backupRepositoryPlugins</name></name> <operator>=</operator> <name>backupRepositoryPlugins</name></expr>;
      <return>return <expr><name>this</name></expr>;</return></block></expr>
    }</block></block>

     <specifier>public</specifier> <name>NodeConfig</name> <call><name>build</name><argument_list>()</argument_list></call> <block>{
       <return>return <expr><operator>new</operator> <call><name>NodeConfig</name><argument_list>(<argument><expr><name>nodeName</name></expr></argument>, <argument><expr><name>coreRootDirectory</name></expr></argument>, <argument><expr><name>configSetBaseDirectory</name></expr></argument>, <argument><expr><name>sharedLibDirectory</name></expr></argument>, <argument><expr><name>shardHandlerFactoryConfig</name></expr></argument>,
                             <argument><expr><name>updateShardHandlerConfig</name></expr></argument>, <argument><expr><name>coreAdminHandlerClass</name></expr></argument>, <argument><expr><name>collectionsAdminHandlerClass</name></expr></argument>, <argument><expr><name>infoHandlerClass</name></expr></argument>, <argument><expr><name>configSetsHandlerClass</name></expr></argument>,
                            <argument><expr><name>logWatcherConfig</name></expr></argument>, <argument><expr><name>cloudConfig</name></expr></argument>, <argument><expr><name>coreLoadThreads</name></expr></argument>, <argument><expr><name>transientCacheSize</name></expr></argument>, <argument><expr><name>useSchemaCache</name></expr></argument>, <argument><expr><name>managementPath</name></expr></argument>, <argument><expr><name>loader</name></expr></argument>, <argument><expr><name>solrProperties</name></expr></argument>)</argument_list></call></expr>;</return>
                            <name>logWatcherConfig</name><operator>,</operator> <name>cloudConfig</name><operator>,</operator> <name>coreLoadThreads</name><operator>,</operator> <name>transientCacheSize</name><operator>,</operator> <name>useSchemaCache</name><operator>,</operator> <name>managementPath</name><operator>,</operator> <name>loader</name><operator>,</operator> <name>solrProperties</name><operator>,</operator>
                            <name>backupRepositoryPlugins</name>)</block></expr>;
     }</block></expr></expr_stmt>
   </block_content>}</block></function>
 </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrXmlConfig</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrXmlConfig</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>fedaf56d31f</name><operator>..</operator><literal type="number">65b248d6259</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrXmlConfig</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrXmlConfig</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">95</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">95</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrXmlConfig</name> <block>{
     <expr><call><name><name>configBuilder</name><operator>.</operator><name>setSolrProperties</name></name><argument_list>(<argument><expr><call><name>loadProperties</name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <if_stmt><if>if <condition>(<expr><name>cloudConfig</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content>
       <expr_stmt><expr><call><name><name>configBuilder</name><operator>.</operator><name>setCloudConfig</name></name><argument_list>(<argument><expr><name>cloudConfig</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <call><name><name>configBuilder</name><operator>.</operator><name>setBackupRepositoryPlugins</name></name><argument_list>(<argument><expr><operator>(</operator><call><name>getBackupRepositoryPluginInfos</name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <return>return <expr><call><name>fillSolrSection</name><argument_list>(<argument><expr><name>configBuilder</name></expr></argument>, <argument><expr><name>entries</name></expr></argument>)</argument_list></call></expr>;</return>
   }
 
@<annotation>@</annotation> -<expr_stmt><expr><literal type="number">154</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">155</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrXmlConfig</name> <block>{
     <expr><call><name>assertSingleInstance</name><argument_list>(<argument><expr><literal type="string">"solrcloud"</literal></expr></argument>, <argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>assertSingleInstance</name><argument_list>(<argument><expr><literal type="string">"logging"</literal></expr></argument>, <argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>assertSingleInstance</name><argument_list>(<argument><expr><literal type="string">"logging/watcher"</literal></expr></argument>, <argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertSingleInstance</name><argument_list>(<argument><expr><literal type="string">"backup"</literal></expr></argument>, <argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;
   }</block>
 
   <specifier>private</specifier> <specifier>static</specifier> <name>void</name> <call><name>assertSingleInstance</name><argument_list>(<argument><expr><name>String</name> <name>section</name></expr></argument>, <argument><expr><name>Config</name> <name>config</name></expr></argument>)</argument_list></call> <block>{
@@ <expr><operator>-</operator><literal type="number">424</literal></expr>,<expr><literal type="number">5</literal> <operator>+</operator><literal type="number">426</literal></expr>,<expr><literal type="number">15</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrXmlConfig</name> <block>{
     <return>return <expr><operator>(</operator><name>node</name> <operator>==</operator> <literal type="null">null</literal><operator>)</operator> <operator>?</operator> <literal type="null">null</literal> <operator>:</operator> <operator>new</operator> <call><name>PluginInfo</name><argument_list>(<argument><expr><name>node</name></expr></argument>, <argument><expr><literal type="string">"shardHandlerFactory"</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</return></block></expr>
   }</block>
 
  <specifier>private</specifier> <specifier>static</specifier> <name><name>PluginInfo</name><index>[]</index></name> <call><name>getBackupRepositoryPluginInfos</name><argument_list>(<argument><expr><name>Config</name> <name>config</name></expr></argument>)</argument_list></call> <block>{
    <expr><name>NodeList</name> <name>nodes</name> <operator>=</operator> <operator>(</operator><name>NodeList</name><operator>)</operator> <call><name><name>config</name><operator>.</operator><name>evaluate</name></name><argument_list>(<argument><expr><literal type="string">"solr/backup/repository"</literal></expr></argument>, <argument><expr><name><name>XPathConstants</name><operator>.</operator><name>NODESET</name></name></expr></argument>)</argument_list></call></expr>;
    <if_stmt><if>if <condition>(<expr><name>nodes</name> <operator>==</operator> <literal type="null">null</literal> <operator>||</operator> <call><name><name>nodes</name><operator>.</operator><name>getLength</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
      <return>return <expr><operator>new</operator> <name><name>PluginInfo</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</return></block_content></block></if></if_stmt>
    <name><name>PluginInfo</name><index>[]</index></name> <name>configs</name> <operator>=</operator> <operator>new</operator> <name><name>PluginInfo</name><index>[<expr><call><name><name>nodes</name><operator>.</operator><name>getLength</name></name><argument_list>()</argument_list></call></expr>]</index></name></block></expr>;</expr_stmt>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name><name>nodes</name><operator>.</operator><name>getLength</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
      <expr_stmt><expr><name><name>configs</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>new</operator> <call><name>PluginInfo</name><argument_list>(<argument><expr><call><name><name>nodes</name><operator>.</operator><name>item</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"BackupRepositoryFactory"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <return>return <expr><name>configs</name></expr>;</return>
  }
 }
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>backup</name><operator>/</operator><name>repository</name><operator>/</operator><name><name>BackupRepository</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>backup</name><operator>/</operator><name>repository</name><operator>/</operator><name><name>BackupRepository</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">00000000000..f209b874a5f</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>backup</name><operator>/</operator><name>repository</name><operator>/</operator><name><name>BackupRepository</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">166</literal> @@</expr></expr_stmt>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>backup</name><operator>.</operator><name>repository</name></name>;</package>

<comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>Closeable</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>OutputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>URI</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>Directory</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>IOContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>IndexInput</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>plugin</name><operator>.</operator><name>NamedListInitializedPlugin</name></name>;</import>

<comment type="block" format="javadoc">/**
 * This interface defines the functionality required to backup/restore Solr indexes to an arbitrary storage system.
 */</comment>
<interface><specifier>public</specifier> interface <name>BackupRepository</name> <super_list><extends>extends <super><name>NamedListInitializedPlugin</name></super>, <super><name>Closeable</name></super></extends></super_list> <block>{
  <comment type="block" format="javadoc">/**
   * A parameter to specify the name of the backup repository to be used.
   */</comment>
  <decl_stmt><decl><type><name>String</name></type> <name>REPOSITORY_PROPERTY_NAME</name> <init>= <expr><literal type="string">"repository"</literal></expr></init></decl>;</decl_stmt>


  <comment type="block" format="javadoc">/**
   * This enumeration defines the type of a given path.
   */</comment>
  <enum>enum <name>PathType</name> <block>{
    <decl><name>DIRECTORY</name></decl>, <decl><name>FILE</name></decl>
  }</block></enum>

  <comment type="block" format="javadoc">/**
   * This method returns the value of the specified configuration property.
   */</comment>
  <function_decl><type><parameter_list type="generic">&lt;<parameter><name>T</name></parameter>&gt;</parameter_list> <name>T</name></type> <name>getConfigProperty</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>name</name></decl></parameter>)</parameter_list>;</function_decl>

  <comment type="block" format="javadoc">/**
   * This method creates a URI using the specified path components (as method arguments).
   *
   * @param pathComponents
   *          The directory (or file-name) to be included in the URI.
   * @return A URI containing absolute path
   */</comment>
  <function_decl><type><name>URI</name></type> <name>createURI</name><parameter_list>(<parameter><decl><type><name>String</name><modifier>...</modifier></type> <name>pathComponents</name></decl></parameter>)</parameter_list>;</function_decl>

  <comment type="block" format="javadoc">/**
   * This method checks if the specified path exists in this repository.
   *
   * @param path
   *          The path whose existence needs to be checked.
   * @return if the specified path exists in this repository.
   * @throws IOException
   *           in case of errors
   */</comment>
  <function_decl><type><name>boolean</name></type> <name>exists</name><parameter_list>(<parameter><decl><type><name>URI</name></type> <name>path</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws>;</function_decl>

  <comment type="block" format="javadoc">/**
   * This method returns the type of a specified path
   *
   * @param path
   *          The path whose type needs to be checked.
   * @return the {@linkplain PathType} for the specified path
   * @throws IOException
   *           in case of errors
   */</comment>
  <function_decl><type><name>PathType</name></type> <name>getPathType</name><parameter_list>(<parameter><decl><type><name>URI</name></type> <name>path</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws>;</function_decl>

  <comment type="block" format="javadoc">/**
   * This method returns all the entries (files and directories) in the specified directory.
   *
   * @param path
   *          The directory path
   * @return an array of strings, one for each entry in the directory
   * @throws IOException
   *           in case of errors
   */</comment>
  <function_decl><type><name><name>String</name><index>[]</index></name></type> <name>listAll</name><parameter_list>(<parameter><decl><type><name>URI</name></type> <name>path</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws>;</function_decl>

  <comment type="block" format="javadoc">/**
   * This method returns a Lucene input stream reading an existing file.
   *
   * @param dirPath
   *          The parent directory of the file to be read
   * @param fileName
   *          The name of the file to be read
   * @param ctx
   *          the Lucene IO context
   * @return Lucene {@linkplain IndexInput} reference
   * @throws IOException
   *           in case of errors
   */</comment>
  <function_decl><type><name>IndexInput</name></type> <name>openInput</name><parameter_list>(<parameter><decl><type><name>URI</name></type> <name>dirPath</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>fileName</name></decl></parameter>, <parameter><decl><type><name>IOContext</name></type> <name>ctx</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws>;</function_decl>

  <comment type="block" format="javadoc">/**
   * This method returns a {@linkplain OutputStream} instance for the specified &lt;code&gt;path&lt;/code&gt;
   *
   * @param path
   *          The path for which {@linkplain OutputStream} needs to be created
   * @return {@linkplain OutputStream} instance for the specified &lt;code&gt;path&lt;/code&gt;
   * @throws IOException
   *           in case of errors
   */</comment>
  <function_decl><type><name>OutputStream</name></type> <name>createOutput</name><parameter_list>(<parameter><decl><type><name>URI</name></type> <name>path</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws>;</function_decl>

  <comment type="block" format="javadoc">/**
   * This method creates a directory at the specified path.
   *
   * @param path
   *          The path where the directory needs to be created.
   * @throws IOException
   *           in case of errors
   */</comment>
  <function_decl><type><name>void</name></type> <name>createDirectory</name><parameter_list>(<parameter><decl><type><name>URI</name></type> <name>path</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws>;</function_decl>

  <comment type="block" format="javadoc">/**
   * This method deletes a directory at the specified path.
   *
   * @param path
   *          The path referring to the directory to be deleted.
   * @throws IOException
   *           in case of errors
   */</comment>
  <function_decl><type><name>void</name></type> <name>deleteDirectory</name><parameter_list>(<parameter><decl><type><name>URI</name></type> <name>path</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws>;</function_decl>

  <comment type="block" format="javadoc">/**
   * Copy a file from specified &lt;code&gt;sourceDir&lt;/code&gt; to the destination repository (i.e. backup).
   *
   * @param sourceDir
   *          The source directory hosting the file to be copied.
   * @param fileName
   *          The name of the file to by copied
   * @param dest
   *          The destination backup location.
   * @throws IOException
   *           in case of errors
   */</comment>
  <function_decl><type><name>void</name></type> <name>copyFileFrom</name><parameter_list>(<parameter><decl><type><name>Directory</name></type> <name>sourceDir</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>fileName</name></decl></parameter>, <parameter><decl><type><name>URI</name></type> <name>dest</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws>;</function_decl>

  <comment type="block" format="javadoc">/**
   * Copy a file from specified &lt;code&gt;sourceRepo&lt;/code&gt; to the destination directory (i.e. restore).
   *
   * @param sourceRepo
   *          The source URI hosting the file to be copied.
   * @param fileName
   *          The name of the file to by copied
   * @param dest
   *          The destination where the file should be copied.
   * @throws IOException
   *           in case of errors.
   */</comment>
  <function_decl><type><name>void</name></type> <name>copyFileTo</name><parameter_list>(<parameter><decl><type><name>URI</name></type> <name>sourceRepo</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>fileName</name></decl></parameter>, <parameter><decl><type><name>Directory</name></type> <name>dest</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws>;</function_decl>
}</block></interface>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>backup</name><operator>/</operator><name>repository</name><operator>/</operator><name><name>BackupRepositoryFactory</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>backup</name><operator>/</operator><name>repository</name><operator>/</operator><name><name>BackupRepositoryFactory</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">00000000000..d03587489e2</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>backup</name><operator>/</operator><name>repository</name><operator>/</operator><name><name>BackupRepositoryFactory</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">89</literal> @@</expr></expr_stmt>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>backup</name><operator>.</operator><name>repository</name></name>;</package>

<comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>invoke</name><operator>.</operator><name>MethodHandles</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>SolrException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>SolrException</name><operator>.</operator><name>ErrorCode</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>NamedList</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>PluginInfo</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrResourceLoader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>base</name><operator>.</operator><name>Preconditions</name></name>;</import>

<class><specifier>public</specifier> class <name>BackupRepositoryFactory</name> <block>{
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>Logger</name></type> <name>LOG</name> <init>= <expr><call><name><name>LoggerFactory</name><operator>.</operator><name>getLogger</name></name><argument_list>(<argument><expr><call><name><name>MethodHandles</name><operator>.</operator><name>lookup</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>lookupClass</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>PluginInfo</name></argument>&gt;</argument_list></name></type> <name>backupRepoPluginByName</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>PluginInfo</name></type> <name>defaultBackupRepoPlugin</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>

  <constructor><specifier>public</specifier> <name>BackupRepositoryFactory</name><parameter_list>(<parameter><decl><type><name><name>PluginInfo</name><index>[]</index></name></type> <name>backupRepoPlugins</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name>backupRepoPlugins</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>backupRepoPlugins</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
        <decl_stmt><decl><type><name>String</name></type> <name>name</name> <init>= <expr><name><name>backupRepoPlugins</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>name</name></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>boolean</name></type> <name>isDefault</name> <init>= <expr><name><name>backupRepoPlugins</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>isDefault</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt><if>if <condition>(<expr><call><name><name>backupRepoPluginByName</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
          <throw>throw <expr><operator>new</operator> <call><name>SolrException</name><argument_list>(<argument><expr><name><name>ErrorCode</name><operator>.</operator><name>SERVER_ERROR</name></name></expr></argument>, <argument><expr><literal type="string">"Duplicate backup repository with name "</literal> <operator>+</operator> <name>name</name></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></if></if_stmt>
        <if_stmt><if>if <condition>(<expr><name>isDefault</name></expr>)</condition> <block>{<block_content>
          <if_stmt><if>if <condition>(<expr><name><name>this</name><operator>.</operator><name>defaultBackupRepoPlugin</name></name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <throw>throw <expr><operator>new</operator> <call><name>SolrException</name><argument_list>(<argument><expr><name><name>ErrorCode</name><operator>.</operator><name>SERVER_ERROR</name></name></expr></argument>, <argument><expr><literal type="string">"More than one backup repository is configured as default"</literal></expr></argument>)</argument_list></call></expr>;</throw>
          </block_content>}</block></if></if_stmt>
          <expr_stmt><expr><name><name>this</name><operator>.</operator><name>defaultBackupRepoPlugin</name></name> <operator>=</operator> <name><name>backupRepoPlugins</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <expr_stmt><expr><call><name><name>backupRepoPluginByName</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><name><name>backupRepoPlugins</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Added backup repository with configuration params {}"</literal></expr></argument>, <argument><expr><name><name>backupRepoPlugins</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></for>
      <if_stmt><if>if <condition>(<expr><name><name>backupRepoPlugins</name><operator>.</operator><name>length</name></name> <operator>==</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>defaultBackupRepoPlugin</name></name> <operator>=</operator> <name><name>backupRepoPlugins</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>

      <if_stmt><if>if <condition>(<expr><name><name>this</name><operator>.</operator><name>defaultBackupRepoPlugin</name></name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Default configuration for backup repository is with configuration params {}"</literal></expr></argument>,
            <argument><expr><name>defaultBackupRepoPlugin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block></if></if_stmt>
  </block_content>}</block></constructor>

  <function><type><specifier>public</specifier> <name>BackupRepository</name></type> <name>newInstance</name><parameter_list>(<parameter><decl><type><name>SolrResourceLoader</name></type> <name>loader</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>name</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name><name>Preconditions</name><operator>.</operator><name>checkNotNull</name></name><argument_list>(<argument><expr><name>loader</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>Preconditions</name><operator>.</operator><name>checkNotNull</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>PluginInfo</name></type> <name>repo</name> <init>= <expr><call><name><name>Preconditions</name><operator>.</operator><name>checkNotNull</name></name><argument_list>(<argument><expr><call><name><name>backupRepoPluginByName</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr></argument>,
        <argument><expr><literal type="string">"Could not find a backup repository with name "</literal> <operator>+</operator> <name>name</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>BackupRepository</name></type> <name>result</name> <init>= <expr><call><name><name>loader</name><operator>.</operator><name>newInstance</name></name><argument_list>(<argument><expr><name><name>repo</name><operator>.</operator><name>className</name></name></expr></argument>, <argument><expr><name><name>BackupRepository</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>result</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name><name>repo</name><operator>.</operator><name>initArgs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name>result</name></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>BackupRepository</name></type> <name>newInstance</name><parameter_list>(<parameter><decl><type><name>SolrResourceLoader</name></type> <name>loader</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name>defaultBackupRepoPlugin</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <return>return <expr><call><name>newInstance</name><argument_list>(<argument><expr><name>loader</name></expr></argument>, <argument><expr><name><name>defaultBackupRepoPlugin</name><operator>.</operator><name>name</name></name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></if></if_stmt>

    <decl_stmt><decl><type><name>LocalFileSystemRepository</name></type> <name>repo</name> <init>= <expr><operator>new</operator> <call><name>LocalFileSystemRepository</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>repo</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name><name>NamedList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name>repo</name></expr>;</return>
  </block_content>}</block></function>
}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>backup</name><operator>/</operator><name>repository</name><operator>/</operator><name><name>HdfsBackupRepository</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>backup</name><operator>/</operator><name>repository</name><operator>/</operator><name><name>HdfsBackupRepository</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">00000000000..596c2713e37</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>backup</name><operator>/</operator><name>repository</name><operator>/</operator><name><name>HdfsBackupRepository</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">159</literal> @@</expr></expr_stmt>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>backup</name><operator>.</operator><name>repository</name></name>;</package>

<comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>OutputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>URI</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>conf</name><operator>.</operator><name>Configuration</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>fs</name><operator>.</operator><name>FileStatus</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>fs</name><operator>.</operator><name>FileSystem</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>fs</name><operator>.</operator><name>Path</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>Directory</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>IOContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>IndexInput</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>NoLockFactory</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>SolrException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>SolrException</name><operator>.</operator><name>ErrorCode</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>NamedList</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>DirectoryFactory</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>HdfsDirectoryFactory</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>store</name><operator>.</operator><name>hdfs</name><operator>.</operator><name>HdfsDirectory</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>store</name><operator>.</operator><name>hdfs</name><operator>.</operator><name>HdfsDirectory</name><operator>.</operator><name>HdfsIndexInput</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>base</name><operator>.</operator><name>Preconditions</name></name>;</import>

<class><specifier>public</specifier> class <name>HdfsBackupRepository</name> <super_list><implements>implements <super><name>BackupRepository</name></super></implements></super_list> <block>{
  <decl_stmt><decl><type><specifier>private</specifier> <name>HdfsDirectoryFactory</name></type> <name>factory</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>Configuration</name></type> <name>hdfsConfig</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>FileSystem</name></type> <name>fileSystem</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>Path</name></type> <name>baseHdfsPath</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>NamedList</name></type> <name>config</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>

  <function><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"rawtypes"</literal></expr></argument>)</argument_list></annotation>
  <annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>init</name><parameter_list>(<parameter><decl><type><name>NamedList</name></type> <name>args</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>config</name></name> <operator>=</operator> <name>args</name></expr>;</expr_stmt>

    <comment type="line">// We don't really need this factory instance. But we want to initialize it here to</comment>
    <comment type="line">// make sure that all HDFS related initialization is at one place (and not duplicated here).</comment>
    <expr_stmt><expr><name>factory</name> <operator>=</operator> <operator>new</operator> <call><name>HdfsDirectoryFactory</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>factory</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>hdfsConfig</name></name> <operator>=</operator> <call><name><name>factory</name><operator>.</operator><name>getConf</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>String</name></type> <name>hdfsSolrHome</name> <init>= <expr><operator>(</operator><name>String</name><operator>)</operator> <call><name><name>Preconditions</name><operator>.</operator><name>checkNotNull</name></name><argument_list>(<argument><expr><call><name><name>args</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>HdfsDirectoryFactory</name><operator>.</operator><name>HDFS_HOME</name></name></expr></argument>)</argument_list></call></expr></argument>,
        <argument><expr><literal type="string">"Please specify "</literal> <operator>+</operator> <name><name>HdfsDirectoryFactory</name><operator>.</operator><name>HDFS_HOME</name></name> <operator>+</operator> <literal type="string">" property."</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>path</name> <init>= <expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><name>hdfsSolrHome</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <while>while <condition>(<expr><name>path</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content> <comment type="line">// Compute the path of root file-system (without requiring an additional system property).</comment>
      <expr_stmt><expr><name>baseHdfsPath</name> <operator>=</operator> <name>path</name></expr>;</expr_stmt>
      <expr_stmt><expr><name>path</name> <operator>=</operator> <call><name><name>path</name><operator>.</operator><name>getParent</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>

    <try>try <block>{<block_content>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>fileSystem</name></name> <operator>=</operator> <call><name><name>FileSystem</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>baseHdfsPath</name><operator>.</operator><name>toUri</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>hdfsConfig</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>SolrException</name><argument_list>(<argument><expr><name><name>ErrorCode</name><operator>.</operator><name>SERVER_ERROR</name></name></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></catch></try>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>void</name></type> <name>close</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name><name>this</name><operator>.</operator><name>fileSystem</name></name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>fileSystem</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><name><name>this</name><operator>.</operator><name>factory</name></name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>factory</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"unchecked"</literal></expr></argument>)</argument_list></annotation>
  <annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <parameter_list type="generic">&lt;<parameter><name>T</name></parameter>&gt;</parameter_list> <name>T</name></type> <name>getConfigProperty</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>name</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <return>return <expr><operator>(</operator><name>T</name><operator>)</operator> <call><name><name>this</name><operator>.</operator><name>config</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>URI</name></type> <name>createURI</name><parameter_list>(<parameter><decl><type><name>String</name><modifier>...</modifier></type> <name>pathComponents</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>Path</name></type> <name>result</name> <init>= <expr><name>baseHdfsPath</name></expr></init></decl>;</decl_stmt>
    <for>for <control>(<init><decl><type><name>String</name></type> <name>p</name> <range>: <expr><name>pathComponents</name></expr></range></decl></init>)</control> <block>{<block_content>
      <expr_stmt><expr><name>result</name> <operator>=</operator> <operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><name>result</name></expr></argument>, <argument><expr><name>p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <return>return <expr><call><name><name>result</name><operator>.</operator><name>toUri</name></name><argument_list>()</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>boolean</name></type> <name>exists</name><parameter_list>(<parameter><decl><type><name>URI</name></type> <name>path</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <return>return <expr><call><name><name>this</name><operator>.</operator><name>fileSystem</name><operator>.</operator><name>exists</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>PathType</name></type> <name>getPathType</name><parameter_list>(<parameter><decl><type><name>URI</name></type> <name>path</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <return>return <expr><ternary><condition><expr><call><name><name>this</name><operator>.</operator><name>fileSystem</name><operator>.</operator><name>isDirectory</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr> ?</condition><then> <expr><name><name>PathType</name><operator>.</operator><name>DIRECTORY</name></name></expr> </then><else>: <expr><name><name>PathType</name><operator>.</operator><name>FILE</name></name></expr></else></ternary></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name><name>String</name><index>[]</index></name></type> <name>listAll</name><parameter_list>(<parameter><decl><type><name>URI</name></type> <name>path</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name><name>FileStatus</name><index>[]</index></name></type> <name>status</name> <init>= <expr><call><name><name>this</name><operator>.</operator><name>fileSystem</name><operator>.</operator><name>listStatus</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>result</name> <init>= <expr><operator>new</operator> <name><name>String</name><index>[<expr><name><name>status</name><operator>.</operator><name>length</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>status</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
      <expr_stmt><expr><name><name>result</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>status</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>getPath</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getName</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <return>return <expr><name>result</name></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>IndexInput</name></type> <name>openInput</name><parameter_list>(<parameter><decl><type><name>URI</name></type> <name>dirPath</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>fileName</name></decl></parameter>, <parameter><decl><type><name>IOContext</name></type> <name>ctx</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>Path</name></type> <name>p</name> <init>= <expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><name>dirPath</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>fileName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <return>return <expr><operator>new</operator> <call><name>HdfsIndexInput</name><argument_list>(<argument><expr><name>fileName</name></expr></argument>, <argument><expr><name><name>this</name><operator>.</operator><name>fileSystem</name></name></expr></argument>, <argument><expr><name>p</name></expr></argument>, <argument><expr><name><name>HdfsDirectory</name><operator>.</operator><name>DEFAULT_BUFFER_SIZE</name></name></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>OutputStream</name></type> <name>createOutput</name><parameter_list>(<parameter><decl><type><name>URI</name></type> <name>path</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <return>return <expr><call><name><name>this</name><operator>.</operator><name>fileSystem</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>createDirectory</name><parameter_list>(<parameter><decl><type><name>URI</name></type> <name>path</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>this</name><operator>.</operator><name>fileSystem</name><operator>.</operator><name>mkdirs</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>IOException</name><argument_list>(<argument><expr><literal type="string">"Unable to create a directory at following location "</literal> <operator>+</operator> <name>path</name></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></if></if_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>deleteDirectory</name><parameter_list>(<parameter><decl><type><name>URI</name></type> <name>path</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>this</name><operator>.</operator><name>fileSystem</name><operator>.</operator><name>delete</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>IOException</name><argument_list>(<argument><expr><literal type="string">"Unable to delete a directory at following location "</literal> <operator>+</operator> <name>path</name></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></if></if_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>copyFileFrom</name><parameter_list>(<parameter><decl><type><name>Directory</name></type> <name>sourceDir</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>fileName</name></decl></parameter>, <parameter><decl><type><name>URI</name></type> <name>dest</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <try>try <init>(<decl><type><name>HdfsDirectory</name></type> <name>dir</name> <init>= <expr><operator>new</operator> <call><name>HdfsDirectory</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><name>dest</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>NoLockFactory</name><operator>.</operator><name>INSTANCE</name></name></expr></argument>,
        <argument><expr><name>hdfsConfig</name></expr></argument>, <argument><expr><name><name>HdfsDirectory</name><operator>.</operator><name>DEFAULT_BUFFER_SIZE</name></name></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
      <expr_stmt><expr><call><name><name>dir</name><operator>.</operator><name>copyFrom</name></name><argument_list>(<argument><expr><name>sourceDir</name></expr></argument>, <argument><expr><name>fileName</name></expr></argument>, <argument><expr><name>fileName</name></expr></argument>, <argument><expr><name><name>DirectoryFactory</name><operator>.</operator><name>IOCONTEXT_NO_CACHE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></try>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>copyFileTo</name><parameter_list>(<parameter><decl><type><name>URI</name></type> <name>sourceRepo</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>fileName</name></decl></parameter>, <parameter><decl><type><name>Directory</name></type> <name>dest</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <try>try <init>(<decl><type><name>HdfsDirectory</name></type> <name>dir</name> <init>= <expr><operator>new</operator> <call><name>HdfsDirectory</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><name>sourceRepo</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>NoLockFactory</name><operator>.</operator><name>INSTANCE</name></name></expr></argument>,
        <argument><expr><name>hdfsConfig</name></expr></argument>, <argument><expr><name><name>HdfsDirectory</name><operator>.</operator><name>DEFAULT_BUFFER_SIZE</name></name></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
      <expr_stmt><expr><call><name><name>dest</name><operator>.</operator><name>copyFrom</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><name>fileName</name></expr></argument>, <argument><expr><name>fileName</name></expr></argument>, <argument><expr><name><name>DirectoryFactory</name><operator>.</operator><name>IOCONTEXT_NO_CACHE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></try>
  </block_content>}</block></function>
}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>backup</name><operator>/</operator><name>repository</name><operator>/</operator><name><name>LocalFileSystemRepository</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>backup</name><operator>/</operator><name>repository</name><operator>/</operator><name><name>LocalFileSystemRepository</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">00000000000..bb75a9e2680</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>backup</name><operator>/</operator><name>repository</name><operator>/</operator><name><name>LocalFileSystemRepository</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">136</literal> @@</expr></expr_stmt>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>backup</name><operator>.</operator><name>repository</name></name>;</package>

<comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>OutputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>URI</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>FileVisitResult</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Paths</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>SimpleFileVisitor</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>attribute</name><operator>.</operator><name>BasicFileAttributes</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>Directory</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>FSDirectory</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>IOContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>IndexInput</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>NoLockFactory</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>SimpleFSDirectory</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>NamedList</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>DirectoryFactory</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>base</name><operator>.</operator><name>Preconditions</name></name>;</import>

<comment type="block" format="javadoc">/**
 * A concrete implementation of {@linkplain BackupRepository} interface supporting backup/restore of Solr indexes to a
 * local file-system. (Note - This can even be used for a shared file-system if it is exposed via a local file-system
 * interface e.g. NFS).
 */</comment>
<class><specifier>public</specifier> class <name>LocalFileSystemRepository</name> <super_list><implements>implements <super><name>BackupRepository</name></super></implements></super_list> <block>{
  <decl_stmt><decl><type><specifier>private</specifier> <name>NamedList</name></type> <name>config</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>init</name><parameter_list>(<parameter><decl><type><name>NamedList</name></type> <name>args</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>config</name></name> <operator>=</operator> <name>args</name></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"unchecked"</literal></expr></argument>)</argument_list></annotation>
  <annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <parameter_list type="generic">&lt;<parameter><name>T</name></parameter>&gt;</parameter_list> <name>T</name></type> <name>getConfigProperty</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>name</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <return>return <expr><operator>(</operator><name>T</name><operator>)</operator> <call><name><name>this</name><operator>.</operator><name>config</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>URI</name></type> <name>createURI</name><parameter_list>(<parameter><decl><type><name>String</name><modifier>...</modifier></type> <name>pathComponents</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name><name>Preconditions</name><operator>.</operator><name>checkArgument</name></name><argument_list>(<argument><expr><name><name>pathComponents</name><operator>.</operator><name>length</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>result</name> <init>= <expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>pathComponents</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>pathComponents</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
      <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name><name>result</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><name><name>pathComponents</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <return>return <expr><call><name><name>result</name><operator>.</operator><name>toUri</name></name><argument_list>()</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>createDirectory</name><parameter_list>(<parameter><decl><type><name>URI</name></type> <name>path</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>createDirectory</name></name><argument_list>(<argument><expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>deleteDirectory</name><parameter_list>(<parameter><decl><type><name>URI</name></type> <name>path</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>walkFileTree</name></name><argument_list>(<argument><expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <class><super><name><name>SimpleFileVisitor</name><argument_list type="generic">&lt;<argument><name>Path</name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{
      <function><annotation>@<name>Override</name></annotation>
      <type><specifier>public</specifier> <name>FileVisitResult</name></type> <name>visitFile</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>file</name></decl></parameter>, <parameter><decl><type><name>BasicFileAttributes</name></type> <name>attrs</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>delete</name></name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return>return <expr><name><name>FileVisitResult</name><operator>.</operator><name>CONTINUE</name></name></expr>;</return>
      </block_content>}</block></function>

      <function><annotation>@<name>Override</name></annotation>
      <type><specifier>public</specifier> <name>FileVisitResult</name></type> <name>postVisitDirectory</name><parameter_list>(<parameter><decl><type><name>Path</name></type> <name>dir</name></decl></parameter>, <parameter><decl><type><name>IOException</name></type> <name>exc</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <expr_stmt><expr><call><name><name>Files</name><operator>.</operator><name>delete</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return>return <expr><name><name>FileVisitResult</name><operator>.</operator><name>CONTINUE</name></name></expr>;</return>
      </block_content>}</block></function>
    }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>boolean</name></type> <name>exists</name><parameter_list>(<parameter><decl><type><name>URI</name></type> <name>path</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <return>return <expr><call><name><name>Files</name><operator>.</operator><name>exists</name></name><argument_list>(<argument><expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>IndexInput</name></type> <name>openInput</name><parameter_list>(<parameter><decl><type><name>URI</name></type> <name>dirPath</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>fileName</name></decl></parameter>, <parameter><decl><type><name>IOContext</name></type> <name>ctx</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <try>try <init>(<decl><type><name>FSDirectory</name></type> <name>dir</name> <init>= <expr><operator>new</operator> <call><name>SimpleFSDirectory</name><argument_list>(<argument><expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>dirPath</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>NoLockFactory</name><operator>.</operator><name>INSTANCE</name></name></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
      <return>return <expr><call><name><name>dir</name><operator>.</operator><name>openInput</name></name><argument_list>(<argument><expr><name>fileName</name></expr></argument>, <argument><expr><name>ctx</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></try>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>OutputStream</name></type> <name>createOutput</name><parameter_list>(<parameter><decl><type><name>URI</name></type> <name>path</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <return>return <expr><call><name><name>Files</name><operator>.</operator><name>newOutputStream</name></name><argument_list>(<argument><expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name><name>String</name><index>[]</index></name></type> <name>listAll</name><parameter_list>(<parameter><decl><type><name>URI</name></type> <name>dirPath</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <try>try <init>(<decl><type><name>FSDirectory</name></type> <name>dir</name> <init>= <expr><operator>new</operator> <call><name>SimpleFSDirectory</name><argument_list>(<argument><expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>dirPath</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>NoLockFactory</name><operator>.</operator><name>INSTANCE</name></name></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
      <return>return <expr><call><name><name>dir</name><operator>.</operator><name>listAll</name></name><argument_list>()</argument_list></call></expr>;</return>
    </block_content>}</block></try>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>PathType</name></type> <name>getPathType</name><parameter_list>(<parameter><decl><type><name>URI</name></type> <name>path</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <return>return <expr><ternary><condition><expr><call><name><name>Files</name><operator>.</operator><name>isDirectory</name></name><argument_list>(<argument><expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr> ?</condition><then> <expr><name><name>PathType</name><operator>.</operator><name>DIRECTORY</name></name></expr> </then><else>: <expr><name><name>PathType</name><operator>.</operator><name>FILE</name></name></expr></else></ternary></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>copyFileFrom</name><parameter_list>(<parameter><decl><type><name>Directory</name></type> <name>sourceDir</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>fileName</name></decl></parameter>, <parameter><decl><type><name>URI</name></type> <name>dest</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <try>try <init>(<decl><type><name>FSDirectory</name></type> <name>dir</name> <init>= <expr><operator>new</operator> <call><name>SimpleFSDirectory</name><argument_list>(<argument><expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>dest</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>NoLockFactory</name><operator>.</operator><name>INSTANCE</name></name></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
      <expr_stmt><expr><call><name><name>dir</name><operator>.</operator><name>copyFrom</name></name><argument_list>(<argument><expr><name>sourceDir</name></expr></argument>, <argument><expr><name>fileName</name></expr></argument>, <argument><expr><name>fileName</name></expr></argument>, <argument><expr><name><name>DirectoryFactory</name><operator>.</operator><name>IOCONTEXT_NO_CACHE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></try>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>copyFileTo</name><parameter_list>(<parameter><decl><type><name>URI</name></type> <name>sourceDir</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>fileName</name></decl></parameter>, <parameter><decl><type><name>Directory</name></type> <name>dest</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <try>try <init>(<decl><type><name>FSDirectory</name></type> <name>dir</name> <init>= <expr><operator>new</operator> <call><name>SimpleFSDirectory</name><argument_list>(<argument><expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>sourceDir</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>NoLockFactory</name><operator>.</operator><name>INSTANCE</name></name></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
      <expr_stmt><expr><call><name><name>dest</name><operator>.</operator><name>copyFrom</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><name>fileName</name></expr></argument>, <argument><expr><name>fileName</name></expr></argument>, <argument><expr><name><name>DirectoryFactory</name><operator>.</operator><name>IOCONTEXT_NO_CACHE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></try>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>close</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content/>}</block></function>
}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>backup</name><operator>/</operator><name>repository</name><operator>/</operator></expr></expr_stmt><package>package-<name><name>info</name><operator>.</operator><name>java</name></name> <name>b</name>/<name>solr</name>/<name>core</name>/<name>src</name>/<name>java</name>/<name>org</name>/<name>apache</name>/<name>solr</name>/<name>core</name>/<name>backup</name>/<name>repository</name>/package-<name><name>info</name><operator>.</operator><name>java</name></name>
new <name>file</name> <name>mode</name> 100644
<name>index</name> 00000000000..fb3cfd563b9
-- /<name>dev</name>/null
++ <name>b</name>/<name>solr</name>/<name>core</name>/<name>src</name>/<name>java</name>/<name>org</name>/<name>apache</name>/<name>solr</name>/<name>core</name>/<name>backup</name>/<name>repository</name>/package-<name><name>info</name><operator>.</operator><name>java</name></name>
@@ -0<operator>,</operator>0 +1<operator>,</operator>23 @@
<comment type="block">/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the "License"); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/</comment>


<comment type="block" format="javadoc">/**
* {@link org.apache.solr.core.backup.repository.BackupRepository} Providing backup/restore
* repository interfaces to plug different storage systems
*/</comment>
package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>backup</name><operator>.</operator><name>repository</name></name>;</package>
<expr_stmt><expr><operator>\</operator> <name>No</name> <name>newline</name> <name>at</name> <name>end</name> <name>of</name> <name>file</name>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>OldBackupDirectory</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>OldBackupDirectory</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">7fd0fec8b8d</literal><operator>..</operator><literal type="number">2b19116c926</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>OldBackupDirectory</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>OldBackupDirectory</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">34</literal> <operator>+</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">55</literal> @@
  <operator>*</operator><operator>/</operator></expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>handler</name></name>;</package>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>URI</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>text</name><operator>.</operator><name>ParseException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>text</name><operator>.</operator><name>SimpleDateFormat</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Date</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Locale</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Optional</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>regex</name><operator>.</operator><name>Matcher</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>regex</name><operator>.</operator><name>Pattern</name></name>;</import>
 
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>base</name><operator>.</operator><name>Preconditions</name></name>;</import>

 <class>class <name>OldBackupDirectory</name> <super_list><implements>implements <super><name><name>Comparable</name><argument_list type="generic">&lt;<argument><name>OldBackupDirectory</name></argument>&gt;</argument_list></name></super></implements></super_list> <block>{
  <decl_stmt><decl><type><name>File</name></type> <name>dir</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>Date</name></type> <name>timestamp</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier>  <specifier>final</specifier> <name>Pattern</name></type> <name>dirNamePattern</name> <init>= <expr><call><name><name>Pattern</name><operator>.</operator><name>compile</name></name><argument_list>(<argument><expr><literal type="string">"^snapshot[.](.*)$"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <constructor><name>OldBackupDirectory</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>dir</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <if_stmt><if>if<condition>(<expr><call><name><name>dir</name><operator>.</operator><name>isDirectory</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>Matcher</name></type> <name>m</name> <init>= <expr><call><name><name>dirNamePattern</name><operator>.</operator><name>matcher</name></name><argument_list>(<argument><expr><call><name><name>dir</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if<condition>(<expr><call><name><name>m</name><operator>.</operator><name>find</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
        <try>try <block>{<block_content>
          <expr_stmt><expr><name><name>this</name><operator>.</operator><name>dir</name></name> <operator>=</operator> <name>dir</name></expr>;</expr_stmt>
          <expr_stmt><expr><name><name>this</name><operator>.</operator><name>timestamp</name></name> <operator>=</operator> <operator>new</operator> <call><name>SimpleDateFormat</name><argument_list>(<argument><expr><name><name>SnapShooter</name><operator>.</operator><name>DATE_FMT</name></name></expr></argument>, <argument><expr><name><name>Locale</name><operator>.</operator><name>ROOT</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>parse</name><argument_list>(<argument><expr><call><name><name>m</name><operator>.</operator><name>group</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block> <catch>catch<parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
          <expr_stmt><expr><name><name>this</name><operator>.</operator><name>dir</name></name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
          <expr_stmt><expr><name><name>this</name><operator>.</operator><name>timestamp</name></name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
        </block_content>}</block></catch></try>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>Pattern</name></type> <name>dirNamePattern</name> <init>= <expr><call><name><name>Pattern</name><operator>.</operator><name>compile</name></name><argument_list>(<argument><expr><literal type="string">"^snapshot[.](.*)$"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><type><specifier>private</specifier> <name>URI</name></type> <name>basePath</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>dirName</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name><name>Optional</name><argument_list type="generic">&lt;<argument><name>Date</name></argument>&gt;</argument_list></name></type> <name>timestamp</name></decl>;</decl_stmt>

  <constructor><specifier>public</specifier> <name>OldBackupDirectory</name><parameter_list>(<parameter><decl><type><name>URI</name></type> <name>basePath</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>dirName</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>dirName</name></name> <operator>=</operator> <call><name><name>Preconditions</name><operator>.</operator><name>checkNotNull</name></name><argument_list>(<argument><expr><name>dirName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>basePath</name></name> <operator>=</operator> <call><name><name>Preconditions</name><operator>.</operator><name>checkNotNull</name></name><argument_list>(<argument><expr><name>basePath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Matcher</name></type> <name>m</name> <init>= <expr><call><name><name>dirNamePattern</name><operator>.</operator><name>matcher</name></name><argument_list>(<argument><expr><name>dirName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><call><name><name>m</name><operator>.</operator><name>find</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <try>try <block>{<block_content>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>timestamp</name></name> <operator>=</operator> <call><name><name>Optional</name><operator>.</operator><name>of</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>SimpleDateFormat</name><argument_list>(<argument><expr><name><name>SnapShooter</name><operator>.</operator><name>DATE_FMT</name></name></expr></argument>, <argument><expr><name><name>Locale</name><operator>.</operator><name>ROOT</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>parse</name><argument_list>(<argument><expr><call><name><name>m</name><operator>.</operator><name>group</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>ParseException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>timestamp</name></name> <operator>=</operator> <call><name><name>Optional</name><operator>.</operator><name>empty</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></catch></try>
     </block_content>}</block></if></if_stmt>
   </block_content>}</block></constructor>

  <function><type><specifier>public</specifier> <name>URI</name></type> <name>getPath</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><call><name><name>this</name><operator>.</operator><name>basePath</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><name>dirName</name></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>String</name></type> <name>getDirName</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>dirName</name></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name><name>Optional</name><argument_list type="generic">&lt;<argument><name>Date</name></argument>&gt;</argument_list></name></type> <name>getTimestamp</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>timestamp</name></expr>;</return>
  </block_content>}</block></function>

   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>public</specifier> <name>int</name></type> <name>compareTo</name><parameter_list>(<parameter><decl><type><name>OldBackupDirectory</name></type> <name>that</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <return>return <expr><call><name><name>that</name><operator>.</operator><name>timestamp</name><operator>.</operator><name>compareTo</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>timestamp</name></name></expr></argument>)</argument_list></call></expr>;</return>
    <if_stmt><if>if<condition>(<expr><call><name><name>this</name><operator>.</operator><name>timestamp</name><operator>.</operator><name>isPresent</name></name><argument_list>()</argument_list></call> <operator>&amp;&amp;</operator> <call><name><name>that</name><operator>.</operator><name>timestamp</name><operator>.</operator><name>isPresent</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <return>return <expr><call><name><name>that</name><operator>.</operator><name>timestamp</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>compareTo</name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>timestamp</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <comment type="line">// Use absolute value of path in case the time-stamp is missing on either side.</comment>
    <return>return <expr><call><name><name>that</name><operator>.</operator><name>getPath</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>compareTo</name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>getPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
 </block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>ReplicationHandler</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>ReplicationHandler</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">9de4a781183</literal><operator>..</operator><literal type="number">0e6960c68a8</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>ReplicationHandler</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>ReplicationHandler</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">24</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">24</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStreamReader</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>OutputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>invoke</name><operator>.</operator><name>MethodHandles</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>URI</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>ByteBuffer</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>channels</name><operator>.</operator><name>FileChannel</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>StandardCharsets</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">66</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">67</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>IndexInput</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>RateLimiter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>SolrException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>SolrException</name><operator>.</operator><name>ErrorCode</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>cloud</name><operator>.</operator><name>ZkStateReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>params</name><operator>.</operator><name>CommonParams</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>params</name><operator>.</operator><name>ModifiableSolrParams</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>params</name><operator>.</operator><name>SolrParams</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">76</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">78</literal></expr><operator>,</operator><expr><literal type="number">15</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>SimpleOrderedMap</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>StrUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>SuppressForbidden</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>CloseHook</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>CoreContainer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>DirectoryFactory</name><operator>.</operator><name>DirContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>IndexDeletionPolicyWrapper</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrCore</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrDeletionPolicy</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrEventListener</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrResourceLoader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>backup</name><operator>.</operator><name>repository</name><operator>.</operator><name>BackupRepository</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>backup</name><operator>.</operator><name>repository</name><operator>.</operator><name>LocalFileSystemRepository</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>request</name><operator>.</operator><name>SolrQueryRequest</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>response</name><operator>.</operator><name>SolrQueryResponse</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>SolrIndexSearcher</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">407</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">413</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ReplicationHandler</name> extends <name>RequestHandlerBase</name> implements <name>SolrCoreAw</name></expr></expr_stmt>
     <return>return <expr><call><name><name>indexFetchLock</name><operator>.</operator><name>isLocked</name></name><argument_list>()</argument_list></call></expr>;</return>
   </block_content>}</block></if></if_stmt>
 
  <function><type><specifier>private</specifier> <name>void</name></type> <name>restore</name><parameter_list>(<parameter><decl><type><name>SolrParams</name></type> <name>params</name></decl></parameter>, <parameter><decl><type><name>SolrQueryResponse</name></type> <name>rsp</name></decl></parameter>, <parameter><decl><type><name>SolrQueryRequest</name></type> <name>req</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <function><type><specifier>private</specifier> <name>void</name></type> <name>restore</name><parameter_list>(<parameter><decl><type><name>SolrParams</name></type> <name>params</name></decl></parameter>, <parameter><decl><type><name>SolrQueryResponse</name></type> <name>rsp</name></decl></parameter>, <parameter><decl><type><name>SolrQueryRequest</name></type> <name>req</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
     <if_stmt><if>if <condition>(<expr><name>restoreFuture</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <operator>!</operator><call><name><name>restoreFuture</name><operator>.</operator><name>isDone</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
       <throw>throw <expr><operator>new</operator> <call><name>SolrException</name><argument_list>(<argument><expr><name><name>ErrorCode</name><operator>.</operator><name>BAD_REQUEST</name></name></expr></argument>, <argument><expr><literal type="string">"Restore in progress. Cannot run multiple restore operations"</literal> <operator>+</operator>
           <literal type="string">"for the same core"</literal></expr></argument>)</argument_list></call></expr>;</throw>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">415</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">421</literal></expr><operator>,</operator><expr><literal type="number">22</literal> @@ <specifier>public</specifier> <name>class</name> <name>ReplicationHandler</name> extends <name>RequestHandlerBase</name> implements <name>SolrCoreAw</name>
     <name>String</name> <name>name</name> <operator>=</operator> <call><name><name>params</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>NAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>String</name></type> <name>location</name> <init>= <expr><call><name><name>params</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>LOCATION</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
    <decl_stmt><decl><type><name>String</name></type> <name>repoName</name> <init>= <expr><call><name><name>params</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>BackupRepository</name><operator>.</operator><name>REPOSITORY_PROPERTY_NAME</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>CoreContainer</name></type> <name>cc</name> <init>= <expr><call><name><name>core</name><operator>.</operator><name>getCoreDescriptor</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCoreContainer</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>SolrResourceLoader</name></type> <name>rl</name> <init>= <expr><call><name><name>cc</name><operator>.</operator><name>getResourceLoader</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>BackupRepository</name></type> <name>repo</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if<condition>(<expr><name>repoName</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>repo</name> <operator>=</operator> <call><name><name>cc</name><operator>.</operator><name>getBackupRepoFactory</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>newInstance</name><argument_list>(<argument><expr><name>rl</name></expr></argument>, <argument><expr><name>repoName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <if_stmt><if>if <condition>(<expr><name>location</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>location</name> <operator>=</operator> <call><name><name>repo</name><operator>.</operator><name>getConfigProperty</name></name><argument_list>(<argument><expr><name><name>ZkStateReader</name><operator>.</operator><name>BACKUP_LOCATION</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt><if>if<condition>(<expr><name>location</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
          <throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><literal type="string">"location is required"</literal></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></if></if_stmt>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block></if> <else>else <block>{<block_content>
      <expr_stmt><expr><name>repo</name> <operator>=</operator> <operator>new</operator> <call><name>LocalFileSystemRepository</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>

     <comment type="line">//If location is not provided then assume that the restore index is present inside the data directory.</comment>
     <if_stmt><if>if <condition>(<expr><name>location</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><name>location</name> <operator>=</operator> <call><name><name>core</name><operator>.</operator><name>getDataDir</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">423</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">445</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>ReplicationHandler</name> extends <name>RequestHandlerBase</name> implements <name>SolrCoreAw</name></expr></expr_stmt>
     <comment type="line">//If name is not provided then look for the last unnamed( the ones with the snapshot.timestamp format)</comment>
     <comment type="line">//snapshot folder since we allow snapshots to be taken without providing a name. Pick the latest timestamp.</comment>
     <if_stmt><if>if <condition>(<expr><name>name</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name><name>File</name><index>[]</index></name></type> <name>files</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>location</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>listFiles</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>URI</name></type> <name>basePath</name> <init>= <expr><call><name><name>repo</name><operator>.</operator><name>createURI</name></name><argument_list>(<argument><expr><name>location</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>filePaths</name> <init>= <expr><call><name><name>repo</name><operator>.</operator><name>listAll</name></name><argument_list>(<argument><expr><name>basePath</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>OldBackupDirectory</name></argument>&gt;</argument_list></name></type> <name>dirs</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <for>for <control>(<init><decl><type><name>File</name></type> <name>f</name> <range>: <expr><name>files</name></expr></range></decl></init>)</control> <block>{<block_content>
        <decl_stmt><decl><type><name>OldBackupDirectory</name></type> <name>obd</name> <init>= <expr><operator>new</operator> <call><name>OldBackupDirectory</name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><name><name>obd</name><operator>.</operator><name>dir</name></name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <for>for <control>(<init><decl><type><name>String</name></type> <name>f</name> <range>: <expr><name>filePaths</name></expr></range></decl></init>)</control> <block>{<block_content>
        <decl_stmt><decl><type><name>OldBackupDirectory</name></type> <name>obd</name> <init>= <expr><operator>new</operator> <call><name>OldBackupDirectory</name><argument_list>(<argument><expr><name>basePath</name></expr></argument>, <argument><expr><name>f</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><call><name><name>obd</name><operator>.</operator><name>getTimestamp</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>isPresent</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
           <expr_stmt><expr><call><name><name>dirs</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>obd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></if></if_stmt>
       </block_content>}</block></for>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">435</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">458</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>ReplicationHandler</name> extends <name>RequestHandlerBase</name> implements <name>SolrCoreAw</name></expr></expr_stmt>
       <if_stmt><if>if <condition>(<expr><call><name><name>dirs</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
         <throw>throw <expr><operator>new</operator> <call><name>SolrException</name><argument_list>(<argument><expr><name><name>ErrorCode</name><operator>.</operator><name>BAD_REQUEST</name></name></expr></argument>, <argument><expr><literal type="string">"No backup name specified and none found in "</literal> <operator>+</operator> <call><name><name>core</name><operator>.</operator><name>getDataDir</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
       </block_content>}</block></if></if_stmt>
      <expr_stmt><expr><name>name</name> <operator>=</operator> <call><name><name>dirs</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name><name>dir</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>name</name> <operator>=</operator> <call><name><name>dirs</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getDirName</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></if> <else>else <block>{<block_content>
       <comment type="line">//"snapshot." is prefixed by snapshooter</comment>
       <expr_stmt><expr><name>name</name> <operator>=</operator> <literal type="string">"snapshot."</literal> <operator>+</operator> <name>name</name></expr>;</expr_stmt>
     </block_content>}</block></else></if_stmt>
 
    <decl_stmt><decl><type><name>RestoreCore</name></type> <name>restoreCore</name> <init>= <expr><operator>new</operator> <call><name>RestoreCore</name><argument_list>(<argument><expr><name>core</name></expr></argument>, <argument><expr><name>location</name></expr></argument>, <argument><expr><name>name</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>RestoreCore</name></type> <name>restoreCore</name> <init>= <expr><operator>new</operator> <call><name>RestoreCore</name><argument_list>(<argument><expr><name>repo</name></expr></argument>, <argument><expr><name>core</name></expr></argument>, <argument><expr><name>location</name></expr></argument>, <argument><expr><name>name</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <try>try <block>{<block_content>
       <expr_stmt><expr><call><name><name>MDC</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"RestoreCore.core"</literal></expr></argument>, <argument><expr><call><name><name>core</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>MDC</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"RestoreCore.backupLocation"</literal></expr></argument>, <argument><expr><name>location</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">504</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">527</literal></expr><operator>,</operator><expr><literal type="number">30</literal> @@ <specifier>public</specifier> <name>class</name> <name>ReplicationHandler</name> extends <name>RequestHandlerBase</name> implements <name>SolrCoreAw</name>
         <name>indexCommit</name> <operator>=</operator> <call><name><name>req</name><operator>.</operator><name>getSearcher</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getIndexReader</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getIndexCommit</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></try>
 
      <decl_stmt><decl><type><name>String</name></type> <name>location</name> <init>= <expr><call><name><name>params</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>ZkStateReader</name><operator>.</operator><name>BACKUP_LOCATION</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>String</name></type> <name>repoName</name> <init>= <expr><call><name><name>params</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>BackupRepository</name><operator>.</operator><name>REPOSITORY_PROPERTY_NAME</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>CoreContainer</name></type> <name>cc</name> <init>= <expr><call><name><name>core</name><operator>.</operator><name>getCoreDescriptor</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCoreContainer</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>SolrResourceLoader</name></type> <name>rl</name> <init>= <expr><call><name><name>cc</name><operator>.</operator><name>getResourceLoader</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>BackupRepository</name></type> <name>repo</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if<condition>(<expr><name>repoName</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>repo</name> <operator>=</operator> <call><name><name>cc</name><operator>.</operator><name>getBackupRepoFactory</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>newInstance</name><argument_list>(<argument><expr><name>rl</name></expr></argument>, <argument><expr><name>repoName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt><if>if <condition>(<expr><name>location</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><name>location</name> <operator>=</operator> <call><name><name>repo</name><operator>.</operator><name>getConfigProperty</name></name><argument_list>(<argument><expr><name><name>ZkStateReader</name><operator>.</operator><name>BACKUP_LOCATION</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <if_stmt><if>if<condition>(<expr><name>location</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><literal type="string">"location is required"</literal></expr></argument>)</argument_list></call></expr>;</throw>
          </block_content>}</block></if></if_stmt>
        </block_content>}</block></if></if_stmt>
      </block_content>}</block></if> <else>else <block>{<block_content>
        <expr_stmt><expr><name>repo</name> <operator>=</operator> <operator>new</operator> <call><name>LocalFileSystemRepository</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <if_stmt><if>if <condition>(<expr><name>location</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><name>location</name> <operator>=</operator> <call><name><name>core</name><operator>.</operator><name>getDataDir</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if> <else>else <block>{<block_content>
          <expr_stmt><expr><name>location</name> <operator>=</operator> <call><name><name>core</name><operator>.</operator><name>getCoreDescriptor</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getInstanceDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>resolve</name><argument_list>(<argument><expr><name>location</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>normalize</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
      </block_content>}</block></else></if_stmt>

       <comment type="line">// small race here before the commit point is saved</comment>
      <decl_stmt><decl><type><name>SnapShooter</name></type> <name>snapShooter</name> <init>= <expr><operator>new</operator> <call><name>SnapShooter</name><argument_list>(<argument><expr><name>core</name></expr></argument>, <argument><expr><call><name><name>params</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"location"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>params</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>NAME</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>SnapShooter</name></type> <name>snapShooter</name> <init>= <expr><operator>new</operator> <call><name>SnapShooter</name><argument_list>(<argument><expr><name>repo</name></expr></argument>, <argument><expr><name>core</name></expr></argument>, <argument><expr><name>location</name></expr></argument>, <argument><expr><call><name><name>params</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>NAME</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>snapShooter</name><operator>.</operator><name>validateCreateSnapshot</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>snapShooter</name><operator>.</operator><name>createSnapAsync</name></name><argument_list>(<argument><expr><name>indexCommit</name></expr></argument>, <argument><expr><name>numberToKeep</name></expr></argument>, <argument><expr><lambda><parameter_list>(<parameter><decl><name>nl</name></decl></parameter>)</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><name>snapShootDetails</name> <operator>=</operator> <name>nl</name></expr></block_content></block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>RestoreCore</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>RestoreCore</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">34109c63e76</literal><operator>..</operator><name>d3c98fac432</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>RestoreCore</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>RestoreCore</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>handler</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>invoke</name><operator>.</operator><name>MethodHandles</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Paths</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>URI</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>text</name><operator>.</operator><name>SimpleDateFormat</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Date</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Locale</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">27</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">26</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>Future</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>codecs</name><operator>.</operator><name>CodecUtil</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>Directory</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>FSDirectory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>IOContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>IndexInput</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>SolrException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>DirectoryFactory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrCore</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>backup</name><operator>.</operator><name>repository</name><operator>.</operator><name>BackupRepository</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">43</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">42</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>RestoreCore</name> implements <name><name>Callable</name><argument_list type="generic">&lt;<argument><name>Boolean</name></argument>&gt;</argument_list></name> <block>{
   <expr><specifier>private</specifier> <name>final</name> <name>String</name> <name>backupName</name></expr>;
   <specifier>private</specifier> <name>final</name> <name>String</name> <name>backupLocation</name></block></expr>;</expr_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>SolrCore</name></type> <name>core</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>BackupRepository</name></type> <name>backupRepo</name></decl>;</decl_stmt>
 
  <constructor><specifier>public</specifier> <name>RestoreCore</name><parameter_list>(<parameter><decl><type><name>SolrCore</name></type> <name>core</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>location</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>name</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <constructor><specifier>public</specifier> <name>RestoreCore</name><parameter_list>(<parameter><decl><type><name>BackupRepository</name></type> <name>backupRepo</name></decl></parameter>, <parameter><decl><type><name>SolrCore</name></type> <name>core</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>location</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>name</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>backupRepo</name></name> <operator>=</operator> <name>backupRepo</name></expr>;</expr_stmt>
     <expr_stmt><expr><name><name>this</name><operator>.</operator><name>core</name></name> <operator>=</operator> <name>core</name></expr>;</expr_stmt>
     <expr_stmt><expr><name><name>this</name><operator>.</operator><name>backupLocation</name></name> <operator>=</operator> <name>location</name></expr>;</expr_stmt>
     <expr_stmt><expr><name><name>this</name><operator>.</operator><name>backupName</name></name> <operator>=</operator> <name>name</name></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">57</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">58</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ <specifier>public</specifier> <name>class</name> <name>RestoreCore</name> implements <name><name>Callable</name><argument_list type="generic">&lt;<argument><name>Boolean</name></argument>&gt;</argument_list></name> <block>{
 
   <expr><specifier>public</specifier> <name>boolean</name> <call><name>doRestore</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
 
    <expr><name>Path</name> <name>backupPath</name> <operator>=</operator> <call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>backupLocation</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>resolve</name><argument_list>(<argument><expr><name>backupName</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>URI</name> <name>backupPath</name> <operator>=</operator> <call><name><name>backupRepo</name><operator>.</operator><name>createURI</name></name><argument_list>(<argument><expr><name>backupLocation</name></expr></argument>, <argument><expr><name>backupName</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>SimpleDateFormat</name></type> <name>dateFormat</name> <init>= <expr><operator>new</operator> <call><name>SimpleDateFormat</name><argument_list>(<argument><expr><name><name>SnapShooter</name><operator>.</operator><name>DATE_FMT</name></name></expr></argument>, <argument><expr><name><name>Locale</name><operator>.</operator><name>ROOT</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>String</name></type> <name>restoreIndexName</name> <init>= <expr><literal type="string">"restore."</literal> <operator>+</operator> <call><name><name>dateFormat</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Date</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>String</name></type> <name>restoreIndexPath</name> <init>= <expr><call><name><name>core</name><operator>.</operator><name>getDataDir</name></name><argument_list>()</argument_list></call> <operator>+</operator> <name>restoreIndexName</name></expr></init></decl>;</decl_stmt>
 
     <decl_stmt><decl><type><name>Directory</name></type> <name>restoreIndexDir</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>Directory</name></type> <name>indexDir</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
    <try>try <init>(<decl><type><name>Directory</name></type> <name>backupDir</name> <init>= <expr><call><name><name>FSDirectory</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><name>backupPath</name></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
    <try>try <block>{<block_content>
 
       <expr_stmt><expr><name>restoreIndexDir</name> <operator>=</operator> <call><name><name>core</name><operator>.</operator><name>getDirectoryFactory</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name>restoreIndexPath</name></expr></argument>,
           <argument><expr><name><name>DirectoryFactory</name><operator>.</operator><name>DirContext</name><operator>.</operator><name>DEFAULT</name></name></expr></argument>, <argument><expr><call><name><name>core</name><operator>.</operator><name>getSolrConfig</name></name><argument_list>()</argument_list></call><operator>.</operator><name><name>indexConfig</name><operator>.</operator><name>lockType</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">74</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">75</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>RestoreCore</name> implements <name><name>Callable</name><argument_list type="generic">&lt;<argument><name>Boolean</name></argument>&gt;</argument_list></name> <block>{
           <expr><name><name>DirectoryFactory</name><operator>.</operator><name>DirContext</name><operator>.</operator><name>DEFAULT</name></name></expr>, <expr><call><name><name>core</name><operator>.</operator><name>getSolrConfig</name></name><argument_list>()</argument_list></call><operator>.</operator><name><name>indexConfig</name><operator>.</operator><name>lockType</name></name></expr>)</block></expr>;</expr_stmt>
 
       <comment type="line">//Move all files from backupDir to restoreIndexDir</comment>
      <for>for <control>(<init><decl><type><name>String</name></type> <name>filename</name> <range>: <expr><call><name><name>backupDir</name><operator>.</operator><name>listAll</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
      <for>for <control>(<init><decl><type><name>String</name></type> <name>filename</name> <range>: <expr><call><name><name>backupRepo</name><operator>.</operator><name>listAll</name></name><argument_list>(<argument><expr><name>backupPath</name></expr></argument>)</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
         <expr_stmt><expr><call><name>checkInterrupted</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Copying file {} to restore directory "</literal></expr></argument>, <argument><expr><name>filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <try>try <init>(<decl><type><name>IndexInput</name></type> <name>indexInput</name> <init>= <expr><call><name><name>backupDir</name><operator>.</operator><name>openInput</name></name><argument_list>(<argument><expr><name>filename</name></expr></argument>, <argument><expr><name><name>IOContext</name><operator>.</operator><name>READONCE</name></name></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
        <try>try <init>(<decl><type><name>IndexInput</name></type> <name>indexInput</name> <init>= <expr><call><name><name>backupRepo</name><operator>.</operator><name>openInput</name></name><argument_list>(<argument><expr><name>backupPath</name></expr></argument>, <argument><expr><name>filename</name></expr></argument>, <argument><expr><name><name>IOContext</name><operator>.</operator><name>READONCE</name></name></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
           <decl_stmt><decl><type><name>Long</name></type> <name>checksum</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
           <try>try <block>{<block_content>
             <expr_stmt><expr><name>checksum</name> <operator>=</operator> <call><name><name>CodecUtil</name><operator>.</operator><name>retrieveChecksum</name></name><argument_list>(<argument><expr><name>indexInput</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">88</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">89</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>RestoreCore</name> implements <name><name>Callable</name><argument_list type="generic">&lt;<argument><name>Boolean</name></argument>&gt;</argument_list></name> <block>{
           <expr><name><name>IndexFetcher</name><operator>.</operator><name>CompareResult</name></name> <name>compareResult</name> <operator>=</operator> <call><name><name>IndexFetcher</name><operator>.</operator><name>compareFile</name></name><argument_list>(<argument><expr><name>indexDir</name></expr></argument>, <argument><expr><name>filename</name></expr></argument>, <argument><expr><name>length</name></expr></argument>, <argument><expr><name>checksum</name></expr></argument>)</argument_list></call></expr>;</block></expr></expr_stmt>
           <if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>compareResult</name><operator>.</operator><name>equal</name></name> <operator>||</operator>
               <operator>(</operator><call><name><name>IndexFetcher</name><operator>.</operator><name>filesToAlwaysDownloadIfNoChecksums</name></name><argument_list>(<argument><expr><name>filename</name></expr></argument>, <argument><expr><name>length</name></expr></argument>, <argument><expr><name>compareResult</name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>restoreIndexDir</name><operator>.</operator><name>copyFrom</name></name><argument_list>(<argument><expr><name>backupDir</name></expr></argument>, <argument><expr><name>filename</name></expr></argument>, <argument><expr><name>filename</name></expr></argument>, <argument><expr><name><name>IOContext</name><operator>.</operator><name>READONCE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>backupRepo</name><operator>.</operator><name>copyFileTo</name></name><argument_list>(<argument><expr><name>backupPath</name></expr></argument>, <argument><expr><name>filename</name></expr></argument>, <argument><expr><name>restoreIndexDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           </block_content>}</block></if> <else>else <block>{<block_content>
             <comment type="line">//prefer local copy</comment>
             <expr_stmt><expr><call><name><name>restoreIndexDir</name><operator>.</operator><name>copyFrom</name></name><argument_list>(<argument><expr><name>indexDir</name></expr></argument>, <argument><expr><name>filename</name></expr></argument>, <argument><expr><name>filename</name></expr></argument>, <argument><expr><name><name>IOContext</name><operator>.</operator><name>READONCE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           </block_content>}</block></else></if_stmt>
         </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
          <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"Exception while restoring the backup index "</literal></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           <throw>throw <expr><operator>new</operator> <call><name>SolrException</name><argument_list>(<argument><expr><name><name>SolrException</name><operator>.</operator><name>ErrorCode</name><operator>.</operator><name>UNKNOWN</name></name></expr></argument>, <argument><expr><literal type="string">"Exception while restoring the backup index"</literal></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
         </block_content>}</block></catch></try>
       </block_content>}</block></try>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">108</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">110</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>RestoreCore</name> implements <name><name>Callable</name><argument_list type="generic">&lt;<argument><name>Boolean</name></argument>&gt;</argument_list></name> <block>{
         <expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Successfully restored to the backup index"</literal></expr></argument>)</argument_list></call></expr>;
       }</block></expr></expr_stmt> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <comment type="line">//Rollback to the old index directory. Delete the restore index directory and mark the restore as failed.</comment>
        <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"Could not switch to restored index. Rolling back to the current index"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"Could not switch to restored index. Rolling back to the current index"</literal></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <decl_stmt><decl><type><name>Directory</name></type> <name>dir</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
         <try>try <block>{<block_content>
           <expr_stmt><expr><name>dir</name> <operator>=</operator> <call><name><name>core</name><operator>.</operator><name>getDirectoryFactory</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><call><name><name>core</name><operator>.</operator><name>getDataDir</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>DirectoryFactory</name><operator>.</operator><name>DirContext</name><operator>.</operator><name>META_DATA</name></name></expr></argument>,
<argument><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>SnapShooter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>SnapShooter</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">2365fca17b9</literal><operator>..</operator><name>cc3f69efc0b</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>SnapShooter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>SnapShooter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">16</literal></expr></argument>,<argument><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">16</literal></expr></argument>,<argument><expr><literal type="number">9</literal> @@
  <operator>*</operator><operator>/</operator></expr></argument></argument_list></call></expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>handler</name></name>;</package>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>invoke</name><operator>.</operator><name>MethodHandles</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Paths</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>URI</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>text</name><operator>.</operator><name>SimpleDateFormat</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collection</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">32</literal></expr><operator>,</operator><expr><literal type="number">20</literal> <operator>+</operator><literal type="number">30</literal></expr><operator>,</operator><expr><literal type="number">21</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>function</name><operator>.</operator><name>Consumer</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexCommit</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>Directory</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>FSDirectory</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>NoLockFactory</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>SimpleFSDirectory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>SolrException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>NamedList</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>DirectoryFactory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>DirectoryFactory</name><operator>.</operator><name>DirContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>IndexDeletionPolicyWrapper</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrCore</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>backup</name><operator>.</operator><name>repository</name><operator>.</operator><name>BackupRepository</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>backup</name><operator>.</operator><name>repository</name><operator>.</operator><name>BackupRepository</name><operator>.</operator><name>PathType</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>backup</name><operator>.</operator><name>repository</name><operator>.</operator><name>LocalFileSystemRepository</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>SolrIndexSearcher</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>RefCounted</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>
 
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>base</name><operator>.</operator><name>Preconditions</name></name>;</import>

 <comment type="block" format="javadoc">/**
  * &lt;p&gt; Provides functionality equivalent to the snapshooter script &lt;/p&gt;
  * This is no longer used in standard replication.
@@ -55,48 +54,76 @@ import org.slf4j.LoggerFactory;
  */</comment>
 <class><specifier>public</specifier> class <name>SnapShooter</name> <block>{
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>Logger</name></type> <name>LOG</name> <init>= <expr><call><name><name>LoggerFactory</name><operator>.</operator><name>getLogger</name></name><argument_list>(<argument><expr><call><name><name>MethodHandles</name><operator>.</operator><name>lookup</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>lookupClass</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>snapDir</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <name>SolrCore</name></type> <name>solrCore</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>snapshotName</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>directoryName</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>File</name></type> <name>snapShotDir</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
  <comment type="line">//TODO update to NIO Path API</comment>
  <decl_stmt><decl><type><specifier>private</specifier> <name>URI</name></type> <name>baseSnapDirPath</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>URI</name></type> <name>snapshotDirPath</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>BackupRepository</name></type> <name>backupRepo</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
 
  <constructor><annotation>@<name>Deprecated</name></annotation>
   <specifier>public</specifier> <name>SnapShooter</name><parameter_list>(<parameter><decl><type><name>SolrCore</name></type> <name>core</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>location</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>snapshotName</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name>solrCore</name> <operator>=</operator> <name>core</name></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>snapDirStr</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
    <comment type="line">// Note - This logic is only applicable to the usecase where a shared file-system is exposed via</comment>
    <comment type="line">// local file-system interface (primarily for backwards compatibility). For other use-cases, users</comment>
    <comment type="line">// will be required to specify "location" where the backup should be stored.</comment>
     <if_stmt><if>if <condition>(<expr><name>location</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>snapDir</name> <operator>=</operator> <call><name><name>core</name><operator>.</operator><name>getDataDir</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if>
    <else>else  <block>{<block_content>
      <expr_stmt><expr><name>snapDir</name> <operator>=</operator> <call><name><name>core</name><operator>.</operator><name>getCoreDescriptor</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getInstanceDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>resolve</name><argument_list>(<argument><expr><name>location</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>normalize</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>snapDirStr</name> <operator>=</operator> <call><name><name>core</name><operator>.</operator><name>getDataDir</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt> <if_stmt><else>else <block>{<block_content>
      <expr_stmt><expr><name>snapDirStr</name> <operator>=</operator> <call><name><name>core</name><operator>.</operator><name>getCoreDescriptor</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getInstanceDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>resolve</name><argument_list>(<argument><expr><name>location</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>normalize</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></else></if_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>snapshotName</name></name> <operator>=</operator> <name>snapshotName</name></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>initialize</name><argument_list>(<argument><expr><operator>new</operator> <call><name>LocalFileSystemRepository</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>core</name></expr></argument>, <argument><expr><name>snapDirStr</name></expr></argument>, <argument><expr><name>snapshotName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></constructor>

  <constructor><specifier>public</specifier> <name>SnapShooter</name><parameter_list>(<parameter><decl><type><name>BackupRepository</name></type> <name>backupRepo</name></decl></parameter>, <parameter><decl><type><name>SolrCore</name></type> <name>core</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>location</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>snapshotName</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>initialize</name><argument_list>(<argument><expr><name>backupRepo</name></expr></argument>, <argument><expr><name>core</name></expr></argument>, <argument><expr><name>location</name></expr></argument>, <argument><expr><name>snapshotName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></constructor>
 
    <if_stmt><if>if<condition>(<expr><name>snapshotName</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
  <function><type><specifier>private</specifier> <name>void</name></type> <name>initialize</name><parameter_list>(<parameter><decl><type><name>BackupRepository</name></type> <name>backupRepo</name></decl></parameter>, <parameter><decl><type><name>SolrCore</name></type> <name>core</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>location</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>snapshotName</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>solrCore</name></name> <operator>=</operator> <call><name><name>Preconditions</name><operator>.</operator><name>checkNotNull</name></name><argument_list>(<argument><expr><name>core</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>backupRepo</name></name> <operator>=</operator> <call><name><name>Preconditions</name><operator>.</operator><name>checkNotNull</name></name><argument_list>(<argument><expr><name>backupRepo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>baseSnapDirPath</name></name> <operator>=</operator> <call><name><name>backupRepo</name><operator>.</operator><name>createURI</name></name><argument_list>(<argument><expr><call><name><name>Preconditions</name><operator>.</operator><name>checkNotNull</name></name><argument_list>(<argument><expr><name>location</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>normalize</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>snapshotName</name></name> <operator>=</operator> <name>snapshotName</name></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>snapshotName</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><name>directoryName</name> <operator>=</operator> <literal type="string">"snapshot."</literal> <operator>+</operator> <name>snapshotName</name></expr>;</expr_stmt>
     </block_content>}</block></if> <else>else <block>{<block_content>
       <decl_stmt><decl><type><name>SimpleDateFormat</name></type> <name>fmt</name> <init>= <expr><operator>new</operator> <call><name>SimpleDateFormat</name><argument_list>(<argument><expr><name>DATE_FMT</name></expr></argument>, <argument><expr><name><name>Locale</name><operator>.</operator><name>ROOT</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><name>directoryName</name> <operator>=</operator> <literal type="string">"snapshot."</literal> <operator>+</operator> <call><name><name>fmt</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Date</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></else></if_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>snapshotDirPath</name></name> <operator>=</operator> <call><name><name>backupRepo</name><operator>.</operator><name>createURI</name></name><argument_list>(<argument><expr><name>location</name></expr></argument>, <argument><expr><name>directoryName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
 
  <comment type="block" format="javadoc">/** Gets the parent directory of the snapshots.  This is the {@code location} given in the constructor after
   * being resolved against the core instance dir. */</comment>
  <function><type><specifier>public</specifier> <name>Path</name></type> <name>getLocation</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>snapDir</name></expr></argument>)</argument_list></call></expr>;</return>
  <function><type><specifier>public</specifier> <name>BackupRepository</name></type> <name>getBackupRepository</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>backupRepo</name></expr>;</return>
  </block_content>}</block></function>

  <comment type="block" format="javadoc">/**
   * Gets the parent directory of the snapshots. This is the {@code location}
   * given in the constructor.
   */</comment>
  <function><type><specifier>public</specifier> <name>URI</name></type> <name>getLocation</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name><name>this</name><operator>.</operator><name>baseSnapDirPath</name></name></expr>;</return>
   </block_content>}</block></function>
 
   <function><type><specifier>public</specifier> <name>void</name></type> <name>validateDeleteSnapshot</name><parameter_list>()</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name><name>Preconditions</name><operator>.</operator><name>checkNotNull</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>snapshotName</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

     <decl_stmt><decl><type><name>boolean</name></type> <name>dirFound</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>File</name><index>[]</index></name></type> <name>files</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>snapDir</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>listFiles</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <for>for<control>(<init><decl><type><name>File</name></type> <name>f</name> <range>: <expr><name>files</name></expr></range></decl></init>)</control> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><call><name><name>f</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><literal type="string">"snapshot."</literal> <operator>+</operator> <name>snapshotName</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>dirFound</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
        <break>break;</break>
    <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>paths</name></decl>;</decl_stmt>
    <try>try <block>{<block_content>
      <expr_stmt><expr><name>paths</name> <operator>=</operator> <call><name><name>backupRepo</name><operator>.</operator><name>listAll</name></name><argument_list>(<argument><expr><name>baseSnapDirPath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <for>for <control>(<init><decl><type><name>String</name></type> <name>path</name> <range>: <expr><name>paths</name></expr></range></decl></init>)</control> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><call><name><name>path</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>directoryName</name></name></expr></argument>)</argument_list></call>
            <operator>&amp;&amp;</operator> <call><name><name>backupRepo</name><operator>.</operator><name>getPathType</name></name><argument_list>(<argument><expr><call><name><name>baseSnapDirPath</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator>==</operator> <name><name>PathType</name><operator>.</operator><name>DIRECTORY</name></name></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><name>dirFound</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
          <break>break;</break>
        </block_content>}</block></if></if_stmt>
       </block_content>}</block></for>
    </block_content>}</block></try>
    <if_stmt><if>if<condition>(<expr><name>dirFound</name> <operator>==</operator> <literal type="boolean">false</literal></expr>)</condition> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>SolrException</name><argument_list>(<argument><expr><name><name>SolrException</name><operator>.</operator><name>ErrorCode</name><operator>.</operator><name>BAD_REQUEST</name></name></expr></argument>, <argument><expr><literal type="string">"Snapshot cannot be found in directory: "</literal> <operator>+</operator> <name>snapDir</name></expr></argument>)</argument_list></call></expr>;</throw>
      <if_stmt><if>if<condition>(<expr><name>dirFound</name> <operator>==</operator> <literal type="boolean">false</literal></expr>)</condition> <block>{<block_content>
        <throw>throw <expr><operator>new</operator> <call><name>SolrException</name><argument_list>(<argument><expr><name><name>SolrException</name><operator>.</operator><name>ErrorCode</name><operator>.</operator><name>BAD_REQUEST</name></name></expr></argument>, <argument><expr><literal type="string">"Snapshot "</literal> <operator>+</operator> <name>snapshotName</name> <operator>+</operator> <literal type="string">" cannot be found in directory: "</literal> <operator>+</operator> <name>baseSnapDirPath</name></expr></argument>)</argument_list></call></expr>;</throw>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block></if></if_stmt> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>SolrException</name><argument_list>(<argument><expr><name><name>SolrException</name><operator>.</operator><name>ErrorCode</name><operator>.</operator><name>SERVER_ERROR</name></name></expr></argument>, <argument><expr><literal type="string">"Unable to find snapshot "</literal> <operator>+</operator> <name>snapshotName</name> <operator>+</operator> <literal type="string">" in directory: "</literal> <operator>+</operator> <name>baseSnapDirPath</name></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
     </block_content>}</block></catch>
   </block_content>}</block></if></if_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">110</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">137</literal></expr><operator>,</operator><expr><literal type="number">16</literal> @@ <specifier>public</specifier> <name>class</name> <name>SnapShooter</name> <block>{
   }</block>
 
   <specifier>public</specifier> <name>void</name> <call><name>validateCreateSnapshot</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><name>snapShotDir</name> <operator>=</operator> <operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>snapDir</name></expr></argument>, <argument><expr><name>directoryName</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><call><name><name>snapShotDir</name><operator>.</operator><name>exists</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
    <comment type="line">// Note - Removed the current behavior of creating the directory hierarchy.</comment>
    <comment type="line">// Do we really need to provide this support?</comment>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>backupRepo</name><operator>.</operator><name>exists</name></name><argument_list>(<argument><expr><name>baseSnapDirPath</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
       <throw>throw <expr><operator>new</operator> <call><name>SolrException</name><argument_list>(<argument><expr><name><name>SolrException</name><operator>.</operator><name>ErrorCode</name><operator>.</operator><name>BAD_REQUEST</name></name></expr></argument>,
          <argument><expr><literal type="string">"Snapshot directory already exists: "</literal> <operator>+</operator> <call><name><name>snapShotDir</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
          <expr_stmt><expr><literal type="string">" Directory does not exist: "</literal> <operator>+</operator> <name>snapshotDirPath</name></expr></expr_stmt>)</block_content></block><empty_stmt>;</empty_stmt></if></if_stmt>
     </block_content>}</block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>snapShotDir</name><operator>.</operator><name>mkdirs</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content> <comment type="line">// note: TODO reconsider mkdirs vs mkdir</comment>

    <if_stmt><if>if <condition>(<expr><call><name><name>backupRepo</name><operator>.</operator><name>exists</name></name><argument_list>(<argument><expr><name>snapshotDirPath</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
       <throw>throw <expr><operator>new</operator> <call><name>SolrException</name><argument_list>(<argument><expr><name><name>SolrException</name><operator>.</operator><name>ErrorCode</name><operator>.</operator><name>BAD_REQUEST</name></name></expr></argument>,
          <argument><expr><literal type="string">"Unable to create snapshot directory: "</literal> <operator>+</operator> <call><name><name>snapShotDir</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
          <expr_stmt><expr><literal type="string">"Snapshot directory already exists: "</literal> <operator>+</operator> <name>snapshotDirPath</name></expr></expr_stmt>)</block_content></block><empty_stmt>;</empty_stmt></if></if_stmt>
     </block_content>}</block></if></if_stmt>
   </block_content>}</block></for>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">155</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">184</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>SnapShooter</name> <block>{
           <expr><call><name><name>solrCore</name><operator>.</operator><name>getDeletionPolicy</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>releaseCommitPoint</name><argument_list>(<argument><expr><call><name><name>indexCommit</name><operator>.</operator><name>getGeneration</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         }</block></expr></expr_stmt>
         <if_stmt><if>if <condition>(<expr><name>snapshotName</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name>deleteOldBackups</name><argument_list>(<argument><expr><name>numberToKeep</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <try>try <block>{<block_content>
            <expr_stmt><expr><call><name>deleteOldBackups</name><argument_list>(<argument><expr><name>numberToKeep</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"Unable to delete old snapshots "</literal></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          </block_content>}</block></catch></try>
         </block_content>}</block></if></if_stmt>
       </block_content>}</block></function>
     </block_content>}</block></function><expr_stmt><expr><operator>.</operator><call><name>start</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">163</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">196</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SnapShooter</name> <block>{
 
   <comment type="line">// note: remember to reserve the indexCommit first so it won't get deleted concurrently</comment>
   <expr><specifier>protected</specifier> <name>NamedList</name> <call><name>createSnapshot</name><argument_list>(<argument><expr><name>final</name> <name>IndexCommit</name> <name>indexCommit</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><call><name><name>LOG</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Creating backup snapshot "</literal> <operator>+</operator> <operator>(</operator><name>snapshotName</name> <operator>==</operator> <literal type="null">null</literal> <operator>?</operator> <literal type="string">"&lt;not named&gt;"</literal></expr></argument></argument_list></call></expr></block></expr></argument></throws> <operator>:</operator> <name>snapshotName</name></expr>) <operator>+</operator> <literal type="string">" at "</literal> <operator>+</operator> <name>snapDir</name>)</block></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Creating backup snapshot "</literal> <operator>+</operator> <operator>(</operator><ternary><condition><expr><name>snapshotName</name> <operator>==</operator> <literal type="null">null</literal></expr> ?</condition><then> <expr><literal type="string">"&lt;not named&gt;"</literal></expr> </then><else>: <expr><name>snapshotName</name></expr></else></ternary><operator>)</operator> <operator>+</operator> <literal type="string">" at "</literal> <operator>+</operator> <name>baseSnapDirPath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>boolean</name></type> <name>success</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
     <try>try <block>{<block_content>
       <decl_stmt><decl><type><name><name>NamedList</name><argument_list type="generic">&lt;<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>details</name> <init>= <expr><operator>new</operator> <call><name><name>NamedList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">172</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">205</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>SnapShooter</name> <block>{
       <expr><name><name>Collection</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name> <name>files</name> <operator>=</operator> <call><name><name>indexCommit</name><operator>.</operator><name>getFileNames</name></name><argument_list>()</argument_list></call></expr>;
       <name>Directory</name> <name>dir</name> <operator>=</operator> <call><name><name>solrCore</name><operator>.</operator><name>getDirectoryFactory</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><call><name><name>solrCore</name><operator>.</operator><name>getIndexDir</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>DirContext</name><operator>.</operator><name>DEFAULT</name></name></expr></argument>, <argument><expr><call><name><name>solrCore</name><operator>.</operator><name>getSolrConfig</name></name><argument_list>()</argument_list></call><operator>.</operator><name><name>indexConfig</name><operator>.</operator><name>lockType</name></name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
       <try>try <block>{<block_content>
        <expr_stmt><expr><call><name>copyFiles</name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><name>files</name></expr></argument>, <argument><expr><name>snapShotDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <for>for<control>(<init><decl><type><name>String</name></type> <name>fileName</name> <range>: <expr><name>files</name></expr></range></decl></init>)</control> <block>{<block_content>
          <expr_stmt><expr><call><name><name>backupRepo</name><operator>.</operator><name>copyFileFrom</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><name>fileName</name></expr></argument>, <argument><expr><name>snapshotDirPath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
       </block_content>}</block> <finally>finally <block>{<block_content>
         <expr_stmt><expr><call><name><name>solrCore</name><operator>.</operator><name>getDirectoryFactory</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>release</name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></finally></try>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">182</literal></expr><operator>,</operator><expr><literal type="number">34</literal> <operator>+</operator><literal type="number">217</literal></expr><operator>,</operator><expr><literal type="number">35</literal> @@ <specifier>public</specifier> <name>class</name> <name>SnapShooter</name> <block>{
       <expr><call><name><name>details</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"snapshotCompletedAt"</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>Date</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;<comment type="line">//bad; should be Instant.now().toString()</comment>
       <call><name><name>details</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"snapshotName"</literal></expr></argument>, <argument><expr><name>snapshotName</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Done creating backup snapshot: "</literal> <operator>+</operator> <operator>(</operator><ternary><condition><expr><name>snapshotName</name> <operator>==</operator> <literal type="null">null</literal></expr> ?</condition><then> <expr><literal type="string">"&lt;not named&gt;"</literal></expr> </then><else>: <expr><name>snapshotName</name></expr></else></ternary><operator>)</operator> <operator>+</operator>
          <literal type="string">" at "</literal> <operator>+</operator> <name>snapDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><literal type="string">" at "</literal> <operator>+</operator> <name>baseSnapDirPath</name></expr></expr_stmt>)</block_content></block><empty_stmt>;</empty_stmt></try>
       <expr_stmt><expr><name>success</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
       <return>return <expr><name>details</name></expr>;</return>
     </block_content>}</block></if></if_stmt> <finally>finally <block>{<block_content>
       <if_stmt><if>if <condition>(<expr><operator>!</operator><name>success</name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>IndexFetcher</name><operator>.</operator><name>delTree</name></name><argument_list>(<argument><expr><name>snapShotDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>backupRepo</name><operator>.</operator><name>deleteDirectory</name></name><argument_list>(<argument><expr><name>snapshotDirPath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></if></if_stmt>
     </block_content>}</block></finally>
   }</block></class>
 
  <function><type><specifier>private</specifier> <name>void</name></type> <name>deleteOldBackups</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>numberToKeep</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name><name>File</name><index>[]</index></name></type> <name>files</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>snapDir</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>listFiles</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
  <function><type><specifier>private</specifier> <name>void</name></type> <name>deleteOldBackups</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>numberToKeep</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>paths</name> <init>= <expr><call><name><name>backupRepo</name><operator>.</operator><name>listAll</name></name><argument_list>(<argument><expr><name>baseSnapDirPath</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>OldBackupDirectory</name></argument>&gt;</argument_list></name></type> <name>dirs</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <for>for <control>(<init><decl><type><name>File</name></type> <name>f</name> <range>: <expr><name>files</name></expr></range></decl></init>)</control> <block>{<block_content>
      <decl_stmt><decl><type><name>OldBackupDirectory</name></type> <name>obd</name> <init>= <expr><operator>new</operator> <call><name>OldBackupDirectory</name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if<condition>(<expr><name><name>obd</name><operator>.</operator><name>dir</name></name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>dirs</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>obd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for>for <control>(<init><decl><type><name>String</name></type> <name>f</name> <range>: <expr><name>paths</name></expr></range></decl></init>)</control> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><call><name><name>backupRepo</name><operator>.</operator><name>getPathType</name></name><argument_list>(<argument><expr><call><name><name>baseSnapDirPath</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator>==</operator> <name><name>PathType</name><operator>.</operator><name>DIRECTORY</name></name></expr>)</condition> <block>{<block_content>
        <decl_stmt><decl><type><name>OldBackupDirectory</name></type> <name>obd</name> <init>= <expr><operator>new</operator> <call><name>OldBackupDirectory</name><argument_list>(<argument><expr><name>baseSnapDirPath</name></expr></argument>, <argument><expr><name>f</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><call><name><name>obd</name><operator>.</operator><name>getTimestamp</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>isPresent</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name><name>dirs</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>obd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
       </block_content>}</block></if></if_stmt>
     </block_content>}</block></for>
     <if_stmt><if>if <condition>(<expr><name>numberToKeep</name> <operator>&gt;</operator> <call><name><name>dirs</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>-</operator><literal type="number">1</literal></expr>)</condition> <block>{<block_content>
       <return>return;</return>
     </block_content>}</block></if></if_stmt>

     <expr_stmt><expr><call><name><name>Collections</name><operator>.</operator><name>sort</name></name><argument_list>(<argument><expr><name>dirs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
     <for>for <control>(<init><decl><type><name>OldBackupDirectory</name></type> <name>dir</name> <range>: <expr><name>dirs</name></expr></range></decl></init>)</control> <block>{<block_content>
       <if_stmt><if>if <condition>(<expr><name>i</name><operator>++</operator> <operator>&gt;</operator> <name>numberToKeep</name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>IndexFetcher</name><operator>.</operator><name>delTree</name></name><argument_list>(<argument><expr><name><name>dir</name><operator>.</operator><name>dir</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>backupRepo</name><operator>.</operator><name>deleteDirectory</name></name><argument_list>(<argument><expr><call><name><name>dir</name><operator>.</operator><name>getPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></if></if_stmt>
     </block_content>}</block></for>
   </block_content>}</block></if></if_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">218</literal></expr><operator>,</operator><expr><literal type="number">29</literal> <operator>+</operator><literal type="number">254</literal></expr><operator>,</operator><expr><literal type="number">22</literal> @@ <specifier>public</specifier> <name>class</name> <name>SnapShooter</name> <block>{
     <expr><call><name><name>LOG</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Deleting snapshot: "</literal> <operator>+</operator> <name>snapshotName</name></expr></argument>)</argument_list></call></expr>;
 
     <name><name>NamedList</name><argument_list type="generic">&lt;<argument><name>Object</name></argument>&gt;</argument_list></name> <name>details</name> <operator>=</operator> <operator>new</operator> <call><name><name>NamedList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>boolean</name></type> <name>isSuccess</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>File</name></type> <name>f</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>snapDir</name></expr></argument>, <argument><expr><literal type="string">"snapshot."</literal> <operator>+</operator> <name>snapshotName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>isSuccess</name> <operator>=</operator> <call><name><name>IndexFetcher</name><operator>.</operator><name>delTree</name></name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
    <if_stmt><if>if<condition>(<expr><name>isSuccess</name></expr>)</condition> <block>{<block_content>
    <try>try <block>{<block_content>
      <decl_stmt><decl><type><name>URI</name></type> <name>path</name> <init>= <expr><call><name><name>baseSnapDirPath</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><literal type="string">"snapshot."</literal> <operator>+</operator> <name>snapshotName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>backupRepo</name><operator>.</operator><name>deleteDirectory</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

       <expr_stmt><expr><call><name><name>details</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"status"</literal></expr></argument>, <argument><expr><literal type="string">"success"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>details</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"snapshotDeletedAt"</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>Date</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></try> <if_stmt><else>else <block>{<block_content>

    </block_content>}</block></else></if_stmt> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
       <expr_stmt><expr><call><name><name>details</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"status"</literal></expr></argument>, <argument><expr><literal type="string">"Unable to delete snapshot: "</literal> <operator>+</operator> <name>snapshotName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"Unable to delete snapshot: "</literal> <operator>+</operator> <name>snapshotName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"Unable to delete snapshot: "</literal> <operator>+</operator> <name>snapshotName</name></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></catch>

     <expr_stmt><expr><name><name>replicationHandler</name><operator>.</operator><name>snapShootDetails</name></name> <operator>=</operator> <name>details</name></expr>;</expr_stmt>
   </block_content>}</block></if></if_stmt>
 
   <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>DATE_FMT</name> <init>= <expr><literal type="string">"yyyyMMddHHmmssSSS"</literal></expr></init></decl>;</decl_stmt>
 

  <function><type><specifier>private</specifier> <specifier>static</specifier> <name>void</name></type> <name>copyFiles</name><parameter_list>(<parameter><decl><type><name>Directory</name></type> <name>sourceDir</name></decl></parameter>, <parameter><decl><type><name><name>Collection</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>files</name></decl></parameter>, <parameter><decl><type><name>File</name></type> <name>destDir</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <try>try <init>(<decl><type><name>FSDirectory</name></type> <name>dir</name> <init>= <expr><operator>new</operator> <call><name>SimpleFSDirectory</name><argument_list>(<argument><expr><call><name><name>destDir</name><operator>.</operator><name>toPath</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>NoLockFactory</name><operator>.</operator><name>INSTANCE</name></name></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
      <for>for <control>(<init><decl><type><name>String</name></type> <name>indexFile</name> <range>: <expr><name>files</name></expr></range></decl></init>)</control> <block>{<block_content>
        <expr_stmt><expr><call><name><name>dir</name><operator>.</operator><name>copyFrom</name></name><argument_list>(<argument><expr><name>sourceDir</name></expr></argument>, <argument><expr><name>indexFile</name></expr></argument>, <argument><expr><name>indexFile</name></expr></argument>, <argument><expr><name><name>DirectoryFactory</name><operator>.</operator><name>IOCONTEXT_NO_CACHE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></for>
    </block_content>}</block></try>
  </block_content>}</block></function>

 </block_content>}</block></for>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>CollectionsHandler</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>CollectionsHandler</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">6d501a1cb5a</literal><operator>..</operator><literal type="number">6acd86a3acb</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>CollectionsHandler</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>CollectionsHandler</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">798</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">798</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>CollectionsHandler</name> extends <name>RequestHandlerBase</name> implements <name>Permission</name>
           <throw>throw <argument_list>new <argument><expr><call><name>SolrException</name><argument_list>(<argument><expr><name><name>ErrorCode</name><operator>.</operator><name>BAD_REQUEST</name></name></expr></argument>, <argument><expr><literal type="string">"Collection '"</literal> <operator>+</operator> <name>collectionName</name> <operator>+</operator> <literal type="string">"' does not exist, no action taken."</literal></expr></argument>)</argument_list></call></expr></argument></argument_list></throw></expr>;</expr_stmt>
         </block_content>}</block></function>
 
        <decl_stmt><decl><type><name>String</name></type> <name>location</name> <init>= <expr><call><name><name>req</name><operator>.</operator><name>getParams</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"location"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>location</name> <init>= <expr><call><name><name>req</name><operator>.</operator><name>getParams</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>ZkStateReader</name><operator>.</operator><name>BACKUP_LOCATION</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <if_stmt><if>if <condition>(<expr><name>location</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
           <expr_stmt><expr><name>location</name> <operator>=</operator> <call><name><name>h</name><operator>.</operator><name>coreContainer</name><operator>.</operator><name>getZkController</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getZkStateReader</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClusterProperty</name><argument_list>(<argument><expr><literal type="string">"location"</literal></expr></argument>, <argument><expr><operator>(</operator><name>String</name><operator>)</operator> <literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></if></if_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">822</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">822</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>CollectionsHandler</name> extends <name>RequestHandlerBase</name> implements <name>Permission</name>
           <throw>throw <argument_list>new <argument><expr><call><name>SolrException</name><argument_list>(<argument><expr><name><name>ErrorCode</name><operator>.</operator><name>BAD_REQUEST</name></name></expr></argument>, <argument><expr><literal type="string">"Collection '"</literal> <operator>+</operator> <name>collectionName</name> <operator>+</operator> <literal type="string">"' exists, no action taken."</literal></expr></argument>)</argument_list></call></expr></argument></argument_list></throw></expr>;</expr_stmt>
         </block_content>}</block></function>
 
        <decl_stmt><decl><type><name>String</name></type> <name>location</name> <init>= <expr><call><name><name>req</name><operator>.</operator><name>getParams</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"location"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>location</name> <init>= <expr><call><name><name>req</name><operator>.</operator><name>getParams</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>ZkStateReader</name><operator>.</operator><name>BACKUP_LOCATION</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <if_stmt><if>if <condition>(<expr><name>location</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
           <expr_stmt><expr><name>location</name> <operator>=</operator> <call><name><name>h</name><operator>.</operator><name>coreContainer</name><operator>.</operator><name>getZkController</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getZkStateReader</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClusterProperty</name><argument_list>(<argument><expr><literal type="string">"location"</literal></expr></argument>, <argument><expr><operator>(</operator><name>String</name><operator>)</operator> <literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>CoreAdminOperation</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>CoreAdminOperation</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">3fdf3efde32</literal><operator>..</operator><literal type="number">3c52beace86</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>CoreAdminOperation</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>CoreAdminOperation</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>handler</name><operator>.</operator><name>admin</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>invoke</name><operator>.</operator><name>MethodHandles</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">60</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">59</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>CoreDescriptor</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>DirectoryFactory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrCore</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrResourceLoader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>backup</name><operator>.</operator><name>repository</name><operator>.</operator><name>BackupRepository</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>handler</name><operator>.</operator><name>RestoreCore</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>handler</name><operator>.</operator><name>SnapShooter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>request</name><operator>.</operator><name>LocalSolrQueryRequest</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">858</literal></expr><operator>,</operator><expr><literal type="number">20</literal> <operator>+</operator><literal type="number">858</literal></expr><operator>,</operator><expr><literal type="number">32</literal> @@ enum <name>CoreAdminOperation</name> <block>{
         <throw>throw <argument_list>new <argument><expr><call><name>IllegalArgumentException</name><argument_list>(<argument><expr><name><name>CoreAdminParams</name><operator>.</operator><name>NAME</name></name> <operator>+</operator> <literal type="string">" is required"</literal></expr></argument>)</argument_list></call></expr></argument></argument_list></throw>;
       }</block></expr></expr_stmt>
 
      <decl_stmt><decl><type><name>String</name></type> <name>location</name> <init>= <expr><call><name><name>params</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"location"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>SolrResourceLoader</name></type> <name>loader</name> <init>= <expr><call><name><name>callInfo</name><operator>.</operator><name>handler</name><operator>.</operator><name>coreContainer</name><operator>.</operator><name>getResourceLoader</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>BackupRepository</name></type> <name>repository</name></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>String</name></type> <name>repoName</name> <init>= <expr><call><name><name>params</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>BackupRepository</name><operator>.</operator><name>REPOSITORY_PROPERTY_NAME</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if<condition>(<expr><name>repoName</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>repository</name> <operator>=</operator> <call><name><name>callInfo</name><operator>.</operator><name>handler</name><operator>.</operator><name>coreContainer</name><operator>.</operator><name>getBackupRepoFactory</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>newInstance</name><argument_list>(<argument><expr><name>loader</name></expr></argument>, <argument><expr><name>repoName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if> <else>else <block>{<block_content> <comment type="line">// Fetch the default.</comment>
        <expr_stmt><expr><name>repository</name> <operator>=</operator> <call><name><name>callInfo</name><operator>.</operator><name>handler</name><operator>.</operator><name>coreContainer</name><operator>.</operator><name>getBackupRepoFactory</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>newInstance</name><argument_list>(<argument><expr><name>loader</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></else></if_stmt>

      <decl_stmt><decl><type><name>String</name></type> <name>location</name> <init>= <expr><call><name><name>params</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>ZkStateReader</name><operator>.</operator><name>BACKUP_LOCATION</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <if_stmt><if>if <condition>(<expr><name>location</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><literal type="string">"location is required"</literal></expr></argument>)</argument_list></call></expr>;</throw>
        <expr_stmt><expr><name>location</name> <operator>=</operator> <call><name><name>repository</name><operator>.</operator><name>getConfigProperty</name></name><argument_list>(<argument><expr><name><name>ZkStateReader</name><operator>.</operator><name>BACKUP_LOCATION</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt><if>if <condition>(<expr><name>location</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
          <throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><literal type="string">"location is required"</literal></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></if></if_stmt>
       </block_content>}</block></if></if_stmt>
 
       <try>try <init>(<decl><type><name>SolrCore</name></type> <name>core</name> <init>= <expr><call><name><name>callInfo</name><operator>.</operator><name>handler</name><operator>.</operator><name>coreContainer</name><operator>.</operator><name>getCore</name></name><argument_list>(<argument><expr><name>cname</name></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
        <decl_stmt><decl><type><name>SnapShooter</name></type> <name>snapShooter</name> <init>= <expr><operator>new</operator> <call><name>SnapShooter</name><argument_list>(<argument><expr><name>core</name></expr></argument>, <argument><expr><name>location</name></expr></argument>, <argument><expr><name>name</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>SnapShooter</name></type> <name>snapShooter</name> <init>= <expr><operator>new</operator> <call><name>SnapShooter</name><argument_list>(<argument><expr><name>repository</name></expr></argument>, <argument><expr><name>core</name></expr></argument>, <argument><expr><name>location</name></expr></argument>, <argument><expr><name>name</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <comment type="line">// validateCreateSnapshot will create parent dirs instead of throw; that choice is dubious.</comment>
         <comment type="line">//  But we want to throw. One reason is that</comment>
         <comment type="line">//  this dir really should, in fact must, already exist here if triggered via a collection backup on a shared</comment>
         <comment type="line">//  file system. Otherwise, perhaps the FS location isn't shared -- we want an error.</comment>
        <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>Files</name><operator>.</operator><name>exists</name></name><argument_list>(<argument><expr><call><name><name>snapShooter</name><operator>.</operator><name>getLocation</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>snapShooter</name><operator>.</operator><name>getBackupRepository</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>exists</name><argument_list>(<argument><expr><call><name><name>snapShooter</name><operator>.</operator><name>getLocation</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
           <throw>throw <expr><operator>new</operator> <call><name>SolrException</name><argument_list>(<argument><expr><name><name>SolrException</name><operator>.</operator><name>ErrorCode</name><operator>.</operator><name>BAD_REQUEST</name></name></expr></argument>,
              <argument><expr><literal type="string">"Directory to contain snapshots doesn't exist: "</literal> <operator>+</operator> <call><name><name>snapShooter</name><operator>.</operator><name>getLocation</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toAbsolutePath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
              <expr_stmt><expr><literal type="string">"Directory to contain snapshots doesn't exist: "</literal> <operator>+</operator> <call><name><name>snapShooter</name><operator>.</operator><name>getLocation</name></name><argument_list>()</argument_list></call></expr></expr_stmt>)</block_content></block><empty_stmt>;</empty_stmt></if></if_stmt>
         </block_content>}</block></if></if_stmt>
         <expr_stmt><expr><call><name><name>snapShooter</name><operator>.</operator><name>validateCreateSnapshot</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><call><name><name>snapShooter</name><operator>.</operator><name>createSnapshot</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">900</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">912</literal></expr><operator>,</operator><expr><literal type="number">25</literal> @@ enum <name>CoreAdminOperation</name> <block>{
         <throw>throw <argument_list>new <argument><expr><call><name>IllegalArgumentException</name><argument_list>(<argument><expr><name><name>CoreAdminParams</name><operator>.</operator><name>NAME</name></name> <operator>+</operator> <literal type="string">" is required"</literal></expr></argument>)</argument_list></call></expr></argument></argument_list></throw>;
       }</block></expr></expr_stmt>
 
      <decl_stmt><decl><type><name>String</name></type> <name>location</name> <init>= <expr><call><name><name>params</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"location"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>SolrResourceLoader</name></type> <name>loader</name> <init>= <expr><call><name><name>callInfo</name><operator>.</operator><name>handler</name><operator>.</operator><name>coreContainer</name><operator>.</operator><name>getResourceLoader</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>BackupRepository</name></type> <name>repository</name></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>String</name></type> <name>repoName</name> <init>= <expr><call><name><name>params</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>BackupRepository</name><operator>.</operator><name>REPOSITORY_PROPERTY_NAME</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if<condition>(<expr><name>repoName</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>repository</name> <operator>=</operator> <call><name><name>callInfo</name><operator>.</operator><name>handler</name><operator>.</operator><name>coreContainer</name><operator>.</operator><name>getBackupRepoFactory</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>newInstance</name><argument_list>(<argument><expr><name>loader</name></expr></argument>, <argument><expr><name>repoName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if> <else>else <block>{<block_content> <comment type="line">// Fetch the default.</comment>
        <expr_stmt><expr><name>repository</name> <operator>=</operator> <call><name><name>callInfo</name><operator>.</operator><name>handler</name><operator>.</operator><name>coreContainer</name><operator>.</operator><name>getBackupRepoFactory</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>newInstance</name><argument_list>(<argument><expr><name>loader</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></else></if_stmt>

      <decl_stmt><decl><type><name>String</name></type> <name>location</name> <init>= <expr><call><name><name>params</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>ZkStateReader</name><operator>.</operator><name>BACKUP_LOCATION</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <if_stmt><if>if <condition>(<expr><name>location</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><literal type="string">"location is required"</literal></expr></argument>)</argument_list></call></expr>;</throw>
        <expr_stmt><expr><name>location</name> <operator>=</operator> <call><name><name>repository</name><operator>.</operator><name>getConfigProperty</name></name><argument_list>(<argument><expr><name><name>ZkStateReader</name><operator>.</operator><name>BACKUP_LOCATION</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt><if>if <condition>(<expr><name>location</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
          <throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><literal type="string">"location is required"</literal></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></if></if_stmt>
       </block_content>}</block></if></if_stmt>
 
       <try>try <init>(<decl><type><name>SolrCore</name></type> <name>core</name> <init>= <expr><call><name><name>callInfo</name><operator>.</operator><name>handler</name><operator>.</operator><name>coreContainer</name><operator>.</operator><name>getCore</name></name><argument_list>(<argument><expr><name>cname</name></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
        <decl_stmt><decl><type><name>RestoreCore</name></type> <name>restoreCore</name> <init>= <expr><operator>new</operator> <call><name>RestoreCore</name><argument_list>(<argument><expr><name>core</name></expr></argument>, <argument><expr><name>location</name></expr></argument>, <argument><expr><name>name</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>RestoreCore</name></type> <name>restoreCore</name> <init>= <expr><operator>new</operator> <call><name>RestoreCore</name><argument_list>(<argument><expr><name>repository</name></expr></argument>, <argument><expr><name>core</name></expr></argument>, <argument><expr><name>location</name></expr></argument>, <argument><expr><name>name</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <decl_stmt><decl><type><name>boolean</name></type> <name>success</name> <init>= <expr><call><name><name>restoreCore</name><operator>.</operator><name>doRestore</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
         <if_stmt><if>if <condition>(<expr><operator>!</operator><name>success</name></expr>)</condition> <block>{<block_content>
           <throw>throw <expr><operator>new</operator> <call><name>SolrException</name><argument_list>(<argument><expr><name><name>SolrException</name><operator>.</operator><name>ErrorCode</name><operator>.</operator><name>SERVER_ERROR</name></name></expr></argument>, <argument><expr><literal type="string">"Failed to restore core="</literal> <operator>+</operator> <call><name><name>core</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>store</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsDirectory</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>store</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsDirectory</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">9a8b36ca933</literal><operator>..</operator><literal type="number">0a2569210bb</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>store</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsDirectory</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>store</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsDirectory</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">42</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">42</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>
 
 <class><specifier>public</specifier> class <name>HdfsDirectory</name> <super_list><extends>extends <super><name>BaseDirectory</name></super></extends></super_list> <block>{
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>Logger</name></type> <name>LOG</name> <init>= <expr><call><name><name>LoggerFactory</name><operator>.</operator><name>getLogger</name></name><argument_list>(<argument><expr><call><name><name>MethodHandles</name><operator>.</operator><name>lookup</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>lookupClass</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>int</name></type> <name>DEFAULT_BUFFER_SIZE</name> <init>= <expr><literal type="number">4096</literal></expr></init></decl>;</decl_stmt>
   
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>LF_EXT</name> <init>= <expr><literal type="string">".lf"</literal></expr></init></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>protected</specifier> <specifier>final</specifier> <name>Path</name></type> <name>hdfsDirPath</name></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">53</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">54</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>HdfsDirectory</name> extends <name>BaseDirectory</name> <block>{
   <expr><specifier>private</specifier> <name>final</name> <name>int</name> <name>bufferSize</name></expr>;
   
   <specifier>public</specifier> <call><name>HdfsDirectory</name><argument_list>(<argument><expr><name>Path</name> <name>hdfsDirPath</name></expr></argument>, <argument><expr><name>Configuration</name> <name>configuration</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><call><name>this</name><argument_list>(<argument><expr><name>hdfsDirPath</name></expr></argument>, <argument><expr><name><name>HdfsLockFactory</name><operator>.</operator><name>INSTANCE</name></name></expr></argument>, <argument><expr><name>configuration</name></expr></argument>, <argument><expr><literal type="number">4096</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></block></expr>;</expr_stmt>
    <constructor_decl><name>this</name><parameter_list>(<parameter><decl><type><name>hdfsDirPath</name></type></decl></parameter>, <parameter><decl><type><name><name>HdfsLockFactory</name><operator>.</operator><name>INSTANCE</name></name></type></decl></parameter>, <parameter><decl><type><name>configuration</name></type></decl></parameter>, <parameter><decl><type><name>DEFAULT_BUFFER_SIZE</name></type></decl></parameter>)</parameter_list>;</constructor_decl>
   }</block></class>
   
   <expr_stmt><expr><specifier>public</specifier> <call><name>HdfsDirectory</name><argument_list>(<argument><expr><name>Path</name> <name>hdfsDirPath</name></expr></argument>, <argument><expr><name>LockFactory</name> <name>lockFactory</name></expr></argument>, <argument><expr><name>Configuration</name> <name>configuration</name></expr></argument>, <argument><expr><name>int</name> <name>bufferSize</name></expr></argument>)</argument_list></call>
@@ <operator>-</operator><literal type="number">190</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">191</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>HdfsDirectory</name> extends <name>BaseDirectory</name> <block>{
     <return>return <expr><name>configuration</name></expr>;</return>
   }</block></expr></expr_stmt>
   
  <class><specifier>static</specifier> class <name>HdfsIndexInput</name> <super_list><extends>extends <super><name>CustomBufferedIndexInput</name></super></extends></super_list> <block>{
  <class><specifier>public</specifier> <specifier>static</specifier> class <name>HdfsIndexInput</name> <super_list><extends>extends <super><name>CustomBufferedIndexInput</name></super></extends></super_list> <block>{
     <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>Logger</name></type> <name>LOG</name> <init>= <expr><call><name><name>LoggerFactory</name><operator>.</operator><name>getLogger</name></name><argument_list>(<argument><expr><call><name><name>MethodHandles</name><operator>.</operator><name>lookup</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>lookupClass</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     
     <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>Path</name></type> <name>path</name></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>-</operator><name>files</name><operator>/</operator><name>solr</name><operator>/</operator><name>solr</name><operator>-</operator><literal type="number">50</literal><operator>-</operator><name><name>all</name><operator>.</operator><name>xml</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>-</operator><name>files</name><operator>/</operator><name>solr</name><operator>/</operator><name>solr</name><operator>-</operator><literal type="number">50</literal><operator>-</operator><name><name>all</name><operator>.</operator><name>xml</name></name>
<name>index</name> <name>a0f316548a3</name><operator>..</operator><name>e2ce9241f4e</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>-</operator><name>files</name><operator>/</operator><name>solr</name><operator>/</operator><name>solr</name><operator>-</operator><literal type="number">50</literal><operator>-</operator><name><name>all</name><operator>.</operator><name>xml</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>-</operator><name>files</name><operator>/</operator><name>solr</name><operator>/</operator><name>solr</name><operator>-</operator><literal type="number">50</literal><operator>-</operator><name><name>all</name><operator>.</operator><name>xml</name></name>
@@ <operator>-</operator><literal type="number">56</literal></expr><operator>,</operator><expr><literal type="number">4</literal> <operator>+</operator><literal type="number">56</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@
     <operator>&lt;</operator><name>int</name> <name>name</name><operator>=</operator><literal type="string">"connTimeout"</literal><operator>&gt;</operator><name>$</name><block>{<expr><name>connTimeout</name><operator>:</operator><literal type="number">110</literal></expr>}</block><operator>&lt;</operator><operator>/</operator><name>int</name><operator>&gt;</operator>
   <operator>&lt;</operator><operator>/</operator><name>shardHandlerFactory</name><operator>&gt;</operator>
 
  <operator>&lt;</operator><name>backup</name><operator>&gt;</operator>
    <operator>&lt;</operator><name>repository</name> <name>name</name><operator>=</operator><literal type="string">"local"</literal> <name>class</name><operator>=</operator><literal type="string">"a.b.C"</literal> default<operator>=</operator><literal type="string">"true"</literal><operator>/</operator><operator>&gt;</operator>
  <operator>&lt;</operator><operator>/</operator><name>backup</name><operator>&gt;</operator>

 <operator>&lt;</operator><operator>/</operator><name>solr</name><operator>&gt;</operator>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>BasicDistributedZk2Test</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>BasicDistributedZk2Test</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">47d8212e045</literal><operator>..</operator><literal type="number">582c8b402ea</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>BasicDistributedZk2Test</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>BasicDistributedZk2Test</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">399</literal></expr><operator>,</operator><expr><literal type="number">22</literal> <operator>+</operator><literal type="number">399</literal></expr><operator>,</operator><expr><literal type="number">25</literal> @@ <specifier>public</specifier> <name>class</name> <name>BasicDistributedZk2Test</name> extends <name>AbstractFullDistribZkTestBase</name> <block>{
     <expr><call><name>checkShardConsistency</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;
     
     <comment type="line">// try a backup command</comment>
    <name>final</name> <name>HttpSolrClient</name> <name>client</name> <operator>=</operator> <operator>(</operator><name>HttpSolrClient</name><operator>)</operator> <call><name><name>shardToJetty</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>SHARD2</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>.</operator><name><name>client</name><operator>.</operator><name>solrClient</name></name></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>ModifiableSolrParams</name></type> <name>params</name> <init>= <expr><operator>new</operator> <call><name>ModifiableSolrParams</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>params</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"qt"</literal></expr></argument>, <argument><expr><name><name>ReplicationHandler</name><operator>.</operator><name>PATH</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>params</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"command"</literal></expr></argument>, <argument><expr><literal type="string">"backup"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Path</name></type> <name>location</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>location</name> <operator>=</operator> <call><name><name>FilterPath</name><operator>.</operator><name>unwrap</name></name><argument_list>(<argument><expr><name>location</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toRealPath</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>params</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"location"</literal></expr></argument>, <argument><expr><call><name><name>location</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <try>try<init>(<decl><type><specifier>final</specifier> <name>HttpSolrClient</name></type> <name>client</name> <init>= <expr><call><name>getHttpSolrClient</name><argument_list>(<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <call><name><name>shardToJetty</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>SHARD2</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name><name>info</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"base_url"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
      <decl_stmt><decl><type><name>ModifiableSolrParams</name></type> <name>params</name> <init>= <expr><operator>new</operator> <call><name>ModifiableSolrParams</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>params</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"qt"</literal></expr></argument>, <argument><expr><name><name>ReplicationHandler</name><operator>.</operator><name>PATH</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>params</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"command"</literal></expr></argument>, <argument><expr><literal type="string">"backup"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>Path</name></type> <name>location</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><name>location</name> <operator>=</operator> <call><name><name>FilterPath</name><operator>.</operator><name>unwrap</name></name><argument_list>(<argument><expr><name>location</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toRealPath</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>params</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"location"</literal></expr></argument>, <argument><expr><call><name><name>location</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <decl_stmt><decl><type><name>QueryRequest</name></type> <name>request</name> <init>= <expr><operator>new</operator> <call><name>QueryRequest</name><argument_list>(<argument><expr><name>params</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>client</name><operator>.</operator><name>request</name></name><argument_list>(<argument><expr><name>request</name></expr></argument>, <argument><expr><name>DEFAULT_TEST_COLLECTION_NAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt><expr><call><name>checkForBackupSuccess</name><argument_list>(<argument><expr><name>client</name></expr></argument>, <argument><expr><name>location</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>client</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></try>
 
    <decl_stmt><decl><type><name>QueryRequest</name></type> <name>request</name> <init>= <expr><operator>new</operator> <call><name>QueryRequest</name><argument_list>(<argument><expr><name>params</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <constructor_decl><name><name>client</name><operator>.</operator><name>request</name></name><parameter_list>(<parameter><decl><type><name>request</name></type></decl></parameter>)</parameter_list>;</constructor_decl>
    
    <constructor_decl><name>checkForBackupSuccess</name><parameter_list>(<parameter><decl><type><name>client</name></type></decl></parameter>, <parameter><decl><type><name>location</name></type></decl></parameter>)</parameter_list>;</constructor_decl>
   }</block></class>
 
   <function><type><specifier>private</specifier> <name>void</name></type> <name>checkForBackupSuccess</name><parameter_list>(<parameter><decl><type><name>HttpSolrClient</name></type> <name>client</name></decl></parameter>, <parameter><decl><type><name>Path</name></type> <name>location</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>InterruptedException</name></expr></argument>, <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>CheckBackupStatus</name></type> <name>checkBackupStatus</name> <init>= <expr><operator>new</operator> <call><name>CheckBackupStatus</name><argument_list>(<argument><expr><name>client</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>CheckBackupStatus</name></type> <name>checkBackupStatus</name> <init>= <expr><operator>new</operator> <call><name>CheckBackupStatus</name><argument_list>(<argument><expr><name>client</name></expr></argument>, <argument><expr><name>DEFAULT_TEST_COLLECTION_NAME</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <while>while <condition>(<expr><operator>!</operator><name><name>checkBackupStatus</name><operator>.</operator><name>success</name></name></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><call><name><name>checkBackupStatus</name><operator>.</operator><name>fetchStatus</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>Thread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><literal type="number">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestBackupRepositoryFactory</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestBackupRepositoryFactory</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">00000000000..81d3c40cf67</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestBackupRepositoryFactory</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">152</literal> @@</expr></expr_stmt>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name></name>;</package>

<comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>SolrTestCaseJ4</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>SolrException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>cloud</name><operator>.</operator><name>ZkStateReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>params</name><operator>.</operator><name>CoreAdminParams</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>backup</name><operator>.</operator><name>repository</name><operator>.</operator><name>BackupRepository</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>backup</name><operator>.</operator><name>repository</name><operator>.</operator><name>BackupRepositoryFactory</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>backup</name><operator>.</operator><name>repository</name><operator>.</operator><name>LocalFileSystemRepository</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>schema</name><operator>.</operator><name>FieldType</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>AfterClass</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>BeforeClass</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Rule</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>rules</name><operator>.</operator><name>ExpectedException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>rules</name><operator>.</operator><name>RuleChain</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>rules</name><operator>.</operator><name>TestRule</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>carrotsearch</name><operator>.</operator><name>randomizedtesting</name><operator>.</operator><name>rules</name><operator>.</operator><name>SystemPropertiesRestoreRule</name></name>;</import>

<class><specifier>public</specifier> class <name>TestBackupRepositoryFactory</name> <super_list><extends>extends <super><name>SolrTestCaseJ4</name></super></extends></super_list> <block>{
  <decl_stmt><decl><annotation>@<name>Rule</name></annotation>
  <type><specifier>public</specifier> <name>TestRule</name></type> <name>solrTestRules</name> <init>= <expr><call><name><name>RuleChain</name><operator>.</operator><name>outerRule</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>SystemPropertiesRestoreRule</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><annotation>@<name>Rule</name></annotation>
  <type><specifier>public</specifier> <name>ExpectedException</name></type> <name>expectedException</name> <init>= <expr><call><name><name>ExpectedException</name><operator>.</operator><name>none</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

  <comment type="line">// tmp dir, cleaned up automatically.</comment>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>File</name></type> <name>solrHome</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>SolrResourceLoader</name></type> <name>loader</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>

  <function><annotation>@<name>BeforeClass</name></annotation>
  <type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>setupLoader</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><name>solrHome</name> <operator>=</operator> <call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>loader</name> <operator>=</operator> <operator>new</operator> <call><name>SolrResourceLoader</name><argument_list>(<argument><expr><call><name><name>solrHome</name><operator>.</operator><name>toPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>AfterClass</name></annotation>
  <type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>cleanupLoader</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><name>solrHome</name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name>loader</name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testMultipleDefaultRepositories</name><parameter_list>()</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name><name>PluginInfo</name><index>[]</index></name></type> <name>plugins</name> <init>= <expr><operator>new</operator> <name><name>PluginInfo</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <block>{<block_content>
      <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>attrs</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>attrs</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name><name>CoreAdminParams</name><operator>.</operator><name>NAME</name></name></expr></argument>, <argument><expr><literal type="string">"repo1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>attrs</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name><name>FieldType</name><operator>.</operator><name>CLASS_NAME</name></name></expr></argument>, <argument><expr><literal type="string">"a.b.C"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>attrs</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"default"</literal></expr></argument> , <argument><expr><literal type="string">"true"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>plugins</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <operator>new</operator> <call><name>PluginInfo</name><argument_list>(<argument><expr><literal type="string">"repository"</literal></expr></argument>, <argument><expr><name>attrs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block>

    <block>{<block_content>
      <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>attrs</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>attrs</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name><name>CoreAdminParams</name><operator>.</operator><name>NAME</name></name></expr></argument>, <argument><expr><literal type="string">"repo2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>attrs</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name><name>FieldType</name><operator>.</operator><name>CLASS_NAME</name></name></expr></argument>, <argument><expr><literal type="string">"p.q.R"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>attrs</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"default"</literal></expr></argument> , <argument><expr><literal type="string">"true"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>plugins</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <operator>new</operator> <call><name>PluginInfo</name><argument_list>(<argument><expr><literal type="string">"repository"</literal></expr></argument>, <argument><expr><name>attrs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block>

    <expr_stmt><expr><call><name><name>expectedException</name><operator>.</operator><name>expect</name></name><argument_list>(<argument><expr><name><name>SolrException</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>expectedException</name><operator>.</operator><name>expectMessage</name></name><argument_list>(<argument><expr><literal type="string">"More than one backup repository is configured as default"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><operator>new</operator> <call><name>BackupRepositoryFactory</name><argument_list>(<argument><expr><name>plugins</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testMultipleRepositoriesWithSameName</name><parameter_list>()</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name><name>PluginInfo</name><index>[]</index></name></type> <name>plugins</name> <init>= <expr><operator>new</operator> <name><name>PluginInfo</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <block>{<block_content>
      <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>attrs</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>attrs</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name><name>CoreAdminParams</name><operator>.</operator><name>NAME</name></name></expr></argument>, <argument><expr><literal type="string">"repo1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>attrs</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name><name>FieldType</name><operator>.</operator><name>CLASS_NAME</name></name></expr></argument>, <argument><expr><literal type="string">"a.b.C"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>attrs</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"default"</literal></expr></argument> , <argument><expr><literal type="string">"true"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>plugins</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <operator>new</operator> <call><name>PluginInfo</name><argument_list>(<argument><expr><literal type="string">"repository"</literal></expr></argument>, <argument><expr><name>attrs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block>

    <block>{<block_content>
      <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>attrs</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>attrs</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name><name>CoreAdminParams</name><operator>.</operator><name>NAME</name></name></expr></argument>, <argument><expr><literal type="string">"repo1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>attrs</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name><name>FieldType</name><operator>.</operator><name>CLASS_NAME</name></name></expr></argument>, <argument><expr><literal type="string">"p.q.R"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>plugins</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <operator>new</operator> <call><name>PluginInfo</name><argument_list>(<argument><expr><literal type="string">"repository"</literal></expr></argument>, <argument><expr><name>attrs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block>

    <expr_stmt><expr><call><name><name>expectedException</name><operator>.</operator><name>expect</name></name><argument_list>(<argument><expr><name><name>SolrException</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>expectedException</name><operator>.</operator><name>expectMessage</name></name><argument_list>(<argument><expr><literal type="string">"Duplicate backup repository with name repo1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><operator>new</operator> <call><name>BackupRepositoryFactory</name><argument_list>(<argument><expr><name>plugins</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testNonExistantBackupRepository</name><parameter_list>()</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name><name>PluginInfo</name><index>[]</index></name></type> <name>plugins</name> <init>= <expr><operator>new</operator> <name><name>PluginInfo</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>BackupRepositoryFactory</name></type> <name>f</name> <init>= <expr><operator>new</operator> <call><name>BackupRepositoryFactory</name><argument_list>(<argument><expr><name>plugins</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name><name>expectedException</name><operator>.</operator><name>expect</name></name><argument_list>(<argument><expr><name><name>NullPointerException</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>expectedException</name><operator>.</operator><name>expectMessage</name></name><argument_list>(<argument><expr><literal type="string">"Could not find a backup repository with name repo1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>f</name><operator>.</operator><name>newInstance</name></name><argument_list>(<argument><expr><name>loader</name></expr></argument>, <argument><expr><literal type="string">"repo1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testRepositoryConfig</name><parameter_list>()</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name><name>PluginInfo</name><index>[]</index></name></type> <name>plugins</name> <init>= <expr><operator>new</operator> <name><name>PluginInfo</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <block>{<block_content>
      <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>attrs</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>attrs</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name><name>CoreAdminParams</name><operator>.</operator><name>NAME</name></name></expr></argument>, <argument><expr><literal type="string">"repo1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>attrs</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name><name>FieldType</name><operator>.</operator><name>CLASS_NAME</name></name></expr></argument>, <argument><expr><call><name><name>LocalFileSystemRepository</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>attrs</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"default"</literal></expr></argument> , <argument><expr><literal type="string">"true"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>attrs</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name><name>ZkStateReader</name><operator>.</operator><name>BACKUP_LOCATION</name></name></expr></argument>, <argument><expr><literal type="string">"/tmp"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>plugins</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <operator>new</operator> <call><name>PluginInfo</name><argument_list>(<argument><expr><literal type="string">"repository"</literal></expr></argument>, <argument><expr><name>attrs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block>

    <decl_stmt><decl><type><name>BackupRepositoryFactory</name></type> <name>f</name> <init>= <expr><operator>new</operator> <call><name>BackupRepositoryFactory</name><argument_list>(<argument><expr><name>plugins</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <block>{<block_content>
      <decl_stmt><decl><type><name>BackupRepository</name></type> <name>repo</name> <init>= <expr><call><name><name>f</name><operator>.</operator><name>newInstance</name></name><argument_list>(<argument><expr><name>loader</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

      <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><name>repo</name> <operator>instanceof</operator> <name>LocalFileSystemRepository</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"/tmp"</literal></expr></argument>, <argument><expr><call><name><name>repo</name><operator>.</operator><name>getConfigProperty</name></name><argument_list>(<argument><expr><name><name>ZkStateReader</name><operator>.</operator><name>BACKUP_LOCATION</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block>

    <block>{<block_content>
      <decl_stmt><decl><type><name>BackupRepository</name></type> <name>repo</name> <init>= <expr><call><name><name>f</name><operator>.</operator><name>newInstance</name></name><argument_list>(<argument><expr><name>loader</name></expr></argument>, <argument><expr><literal type="string">"repo1"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

      <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><name>repo</name> <operator>instanceof</operator> <name>LocalFileSystemRepository</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"/tmp"</literal></expr></argument>, <argument><expr><call><name><name>repo</name><operator>.</operator><name>getConfigProperty</name></name><argument_list>(<argument><expr><name><name>ZkStateReader</name><operator>.</operator><name>BACKUP_LOCATION</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block>
  </block_content>}</block></function>
}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestSolrXml</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestSolrXml</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">1cfeb3fe339</literal><operator>..</operator><literal type="number">4343efec7c6</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestSolrXml</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestSolrXml</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">67</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">67</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSolrXml</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><name>NodeConfig</name> <name>cfg</name> <operator>=</operator> <call><name><name>SolrXmlConfig</name><operator>.</operator><name>fromSolrHome</name></name><argument_list>(<argument><expr><name>loader</name></expr></argument>, <argument><expr><call><name><name>solrHome</name><operator>.</operator><name>toPath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <name>CloudConfig</name> <name>ccfg</name> <operator>=</operator> <call><name><name>cfg</name><operator>.</operator><name>getCloudConfig</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>UpdateShardHandlerConfig</name></type> <name>ucfg</name> <init>= <expr><call><name><name>cfg</name><operator>.</operator><name>getUpdateShardHandlerConfig</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>PluginInfo</name><index>[]</index></name></type> <name>backupRepoConfigs</name> <init>= <expr><call><name><name>cfg</name><operator>.</operator><name>getBackupRepositoryPlugins</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"core admin handler class"</literal></expr></argument>, <argument><expr><literal type="string">"testAdminHandler"</literal></expr></argument>, <argument><expr><call><name><name>cfg</name><operator>.</operator><name>getCoreAdminHandlerClass</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"collection handler class"</literal></expr></argument>, <argument><expr><literal type="string">"testCollectionsHandler"</literal></expr></argument>, <argument><expr><call><name><name>cfg</name><operator>.</operator><name>getCollectionsHandlerClass</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">98</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">99</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSolrXml</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"zk host"</literal></expr></argument>, <argument><expr><literal type="string">"testZkHost"</literal></expr></argument>, <argument><expr><call><name><name>ccfg</name><operator>.</operator><name>getZkHost</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"zk ACL provider"</literal></expr></argument>, <argument><expr><literal type="string">"DefaultZkACLProvider"</literal></expr></argument>, <argument><expr><call><name><name>ccfg</name><operator>.</operator><name>getZkACLProviderClass</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"zk credentials provider"</literal></expr></argument>, <argument><expr><literal type="string">"DefaultZkCredentialsProvider"</literal></expr></argument>, <argument><expr><call><name><name>ccfg</name><operator>.</operator><name>getZkCredentialsProviderClass</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name><name>backupRepoConfigs</name><operator>.</operator><name>length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"local"</literal></expr></argument>, <argument><expr><name><name>backupRepoConfigs</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"a.b.C"</literal></expr></argument>, <argument><expr><name><name>backupRepoConfigs</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>className</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"true"</literal></expr></argument>, <argument><expr><name><name>backupRepoConfigs</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><call><name><name>attributes</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"default"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name><name>backupRepoConfigs</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><call><name><name>initArgs</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></while>
 
   <comment type="line">// Test  a few property substitutions that happen to be in solr-50-all.xml.</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">321</literal></expr><operator>,</operator><expr><literal type="number">4</literal> <operator>+</operator><literal type="number">327</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSolrXml</name> extends <name>SolrTestCaseJ4</name> <block>{
 
     <expr><call><name><name>SolrXmlConfig</name><operator>.</operator><name>fromString</name></name><argument_list>(<argument><expr><name>loader</name></expr></argument>, <argument><expr><literal type="string">"&lt;solr&gt;&lt;solrcloud&gt;&lt;str name=\"host\"&gt;host&lt;/str&gt;&lt;int name=\"hostPort\"&gt;8983&lt;/int&gt;&lt;/solrcloud&gt;&lt;/solr&gt;"</literal></expr></argument>)</argument_list></call></expr>;
   }</block></expr></expr_stmt>

  <function><type><specifier>public</specifier> <name>void</name></type> <name>testMultiBackupSectionError</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>String</name></type> <name>solrXml</name> <init>= <expr><literal type="string">"&lt;solr&gt;&lt;backup&gt;&lt;/backup&gt;&lt;backup&gt;&lt;/backup&gt;&lt;/solr&gt;"</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>expectedException</name><operator>.</operator><name>expect</name></name><argument_list>(<argument><expr><name><name>SolrException</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>expectedException</name><operator>.</operator><name>expectMessage</name></name><argument_list>(<argument><expr><literal type="string">"Multiple instances of backup section found in solr.xml"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>SolrXmlConfig</name><operator>.</operator><name>fromString</name></name><argument_list>(<argument><expr><name>loader</name></expr></argument>, <argument><expr><name>solrXml</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// return not used, only for validation</comment>
  </block_content>}</block></function>
 </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>BackupRestoreUtils</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>BackupRestoreUtils</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">00000000000..bbc80beb692</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>BackupRestoreUtils</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">69</literal> @@</expr></expr_stmt>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>handler</name></name>;</package>

<comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>invoke</name><operator>.</operator><name>MethodHandles</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Random</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>LuceneTestCase</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>client</name><operator>.</operator><name>solrj</name><operator>.</operator><name>SolrClient</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>client</name><operator>.</operator><name>solrj</name><operator>.</operator><name>SolrServerException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>client</name><operator>.</operator><name>solrj</name><operator>.</operator><name>response</name><operator>.</operator><name>QueryResponse</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>SolrInputDocument</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>params</name><operator>.</operator><name>ModifiableSolrParams</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>

<class><specifier>public</specifier> class <name>BackupRestoreUtils</name> <super_list><extends>extends <super><name>LuceneTestCase</name></super></extends></super_list> <block>{

  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>Logger</name></type> <name>log</name> <init>= <expr><call><name><name>LoggerFactory</name><operator>.</operator><name>getLogger</name></name><argument_list>(<argument><expr><call><name><name>MethodHandles</name><operator>.</operator><name>lookup</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>lookupClass</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <function><type><specifier>public</specifier> <specifier>static</specifier> <name>int</name></type> <name>indexDocs</name><parameter_list>(<parameter><decl><type><name>SolrClient</name></type> <name>masterClient</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>collectionName</name></decl></parameter>, <parameter><decl><type><name>long</name></type> <name>docsSeed</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument>, <argument><expr><name>SolrServerException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>masterClient</name><operator>.</operator><name>deleteByQuery</name></name><argument_list>(<argument><expr><name>collectionName</name></expr></argument>, <argument><expr><literal type="string">"*:*"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>Random</name></type> <name>random</name> <init>= <expr><operator>new</operator> <call><name>Random</name><argument_list>(<argument><expr><name>docsSeed</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt><comment type="line">// use a constant seed for the whole test run so that we can easily re-index.</comment>
    <decl_stmt><decl><type><name>int</name></type> <name>nDocs</name> <init>= <expr><call><name><name>random</name><operator>.</operator><name>nextInt</name></name><argument_list>(<argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Indexing {} test docs"</literal></expr></argument>, <argument><expr><name>nDocs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>nDocs</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
      <return>return <expr><literal type="number">0</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>

    <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>SolrInputDocument</name></argument>&gt;</argument_list></name></type> <name>docs</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>(<argument><expr><name>nDocs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>nDocs</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
      <decl_stmt><decl><type><name>SolrInputDocument</name></type> <name>doc</name> <init>= <expr><operator>new</operator> <call><name>SolrInputDocument</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>doc</name><operator>.</operator><name>addField</name></name><argument_list>(<argument><expr><literal type="string">"id"</literal></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>doc</name><operator>.</operator><name>addField</name></name><argument_list>(<argument><expr><literal type="string">"name"</literal></expr></argument>, <argument><expr><literal type="string">"name = "</literal> <operator>+</operator> <name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>docs</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt><expr><call><name><name>masterClient</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>collectionName</name></expr></argument>, <argument><expr><name>docs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>masterClient</name><operator>.</operator><name>commit</name></name><argument_list>(<argument><expr><name>collectionName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name>nDocs</name></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>verifyDocs</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>nDocs</name></decl></parameter>, <parameter><decl><type><name>SolrClient</name></type> <name>masterClient</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>collectionName</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>SolrServerException</name></expr></argument>, <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>ModifiableSolrParams</name></type> <name>queryParams</name> <init>= <expr><operator>new</operator> <call><name>ModifiableSolrParams</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>queryParams</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"q"</literal></expr></argument>, <argument><expr><literal type="string">"*:*"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>QueryResponse</name></type> <name>response</name> <init>= <expr><call><name><name>masterClient</name><operator>.</operator><name>query</name></name><argument_list>(<argument><expr><name>collectionName</name></expr></argument>, <argument><expr><name>queryParams</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><call><name><name>response</name><operator>.</operator><name>getStatus</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>nDocs</name></expr></argument>, <argument><expr><call><name><name>response</name><operator>.</operator><name>getResults</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getNumFound</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>
}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>CheckBackupStatus</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>CheckBackupStatus</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">706a2fe554a</literal><operator>..</operator><name>f84d89f1eff</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>CheckBackupStatus</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>CheckBackupStatus</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">33</literal></expr><operator>,</operator><expr><literal type="number">18</literal> <operator>+</operator><literal type="number">33</literal></expr><operator>,</operator><expr><literal type="number">20</literal> @@ <specifier>public</specifier> <name>class</name> <name>CheckBackupStatus</name> extends <name>SolrTestCaseJ4</name> <block>{
   <expr><name>final</name> <name>Pattern</name> <name>p</name> <operator>=</operator> <call><name><name>Pattern</name><operator>.</operator><name>compile</name></name><argument_list>(<argument><expr><literal type="string">"&lt;str name=\"snapshotCompletedAt\"&gt;(.*?)&lt;/str&gt;"</literal></expr></argument>)</argument_list></call></expr>;
   <name>final</name> <name>Pattern</name> <name>pException</name> <operator>=</operator> <call><name><name>Pattern</name><operator>.</operator><name>compile</name></name><argument_list>(<argument><expr><literal type="string">"&lt;str name=\"snapShootException\"&gt;(.*?)&lt;/str&gt;"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
   <decl_stmt><decl><type><specifier>final</specifier> <name>HttpSolrClient</name></type> <name>client</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>coreName</name></decl>;</decl_stmt>
 
  <constructor><specifier>public</specifier> <name>CheckBackupStatus</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>HttpSolrClient</name></type> <name>client</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>lastBackupTimestamp</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <constructor><specifier>public</specifier> <name>CheckBackupStatus</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>HttpSolrClient</name></type> <name>client</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>coreName</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>lastBackupTimestamp</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <expr_stmt><expr><name><name>this</name><operator>.</operator><name>client</name></name> <operator>=</operator> <name>client</name></expr>;</expr_stmt>
     <expr_stmt><expr><name><name>this</name><operator>.</operator><name>lastBackupTimestamp</name></name> <operator>=</operator> <name>lastBackupTimestamp</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>coreName</name></name> <operator>=</operator> <name>coreName</name></expr>;</expr_stmt>
   </block_content>}</block></constructor>
 
  <constructor><specifier>public</specifier> <name>CheckBackupStatus</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>HttpSolrClient</name></type> <name>client</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>this</name><argument_list>(<argument><expr><name>client</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <constructor><specifier>public</specifier> <name>CheckBackupStatus</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>HttpSolrClient</name></type> <name>client</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>coreName</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>this</name><argument_list>(<argument><expr><name>client</name></expr></argument>, <argument><expr><name>coreName</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></constructor>
 
   <function><type><specifier>public</specifier> <name>void</name></type> <name>fetchStatus</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>String</name></type> <name>masterUrl</name> <init>= <expr><call><name><name>client</name><operator>.</operator><name>getBaseURL</name></name><argument_list>()</argument_list></call> <operator>+</operator> <name><name>ReplicationHandler</name><operator>.</operator><name>PATH</name></name> <operator>+</operator> <literal type="string">"?command="</literal> <operator>+</operator> <name><name>ReplicationHandler</name><operator>.</operator><name>CMD_DETAILS</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>masterUrl</name> <init>= <expr><call><name><name>client</name><operator>.</operator><name>getBaseURL</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"/"</literal>  <operator>+</operator> <name>coreName</name> <operator>+</operator> <name><name>ReplicationHandler</name><operator>.</operator><name>PATH</name></name> <operator>+</operator> <literal type="string">"?command="</literal> <operator>+</operator> <name><name>ReplicationHandler</name><operator>.</operator><name>CMD_DETAILS</name></name></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><name>response</name> <operator>=</operator> <call><name><name>client</name><operator>.</operator><name>getHttpClient</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>execute</name><argument_list>(<argument><expr><operator>new</operator> <call><name>HttpGet</name><argument_list>(<argument><expr><name>masterUrl</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <call><name>BasicResponseHandler</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <if_stmt><if>if<condition>(<expr><call><name><name>pException</name><operator>.</operator><name>matcher</name></name><argument_list>(<argument><expr><name>response</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>find</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><call><name>fail</name><argument_list>(<argument><expr><literal type="string">"Failed to create backup"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>TestHdfsBackupRestoreCore</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>TestHdfsBackupRestoreCore</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">00000000000..887ebfe79c8</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>TestHdfsBackupRestoreCore</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">251</literal> @@</expr></expr_stmt>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>handler</name></name>;</package>

<comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>invoke</name><operator>.</operator><name>MethodHandles</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>URI</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>URISyntaxException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>URL</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>carrotsearch</name><operator>.</operator><name>randomizedtesting</name><operator>.</operator><name>annotations</name><operator>.</operator><name>ThreadLeakFilters</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>io</name><operator>.</operator><name>IOUtils</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>conf</name><operator>.</operator><name>Configuration</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>fs</name><operator>.</operator><name>FileSystem</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>hdfs</name><operator>.</operator><name>DistributedFileSystem</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>hdfs</name><operator>.</operator><name>MiniDFSCluster</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>hdfs</name><operator>.</operator><name>protocol</name><operator>.</operator><name>HdfsConstants</name><operator>.</operator><name>SafeModeAction</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>TestUtil</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>SolrTestCaseJ4</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>client</name><operator>.</operator><name>solrj</name><operator>.</operator><name>SolrClient</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>client</name><operator>.</operator><name>solrj</name><operator>.</operator><name>impl</name><operator>.</operator><name>CloudSolrClient</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>client</name><operator>.</operator><name>solrj</name><operator>.</operator><name>impl</name><operator>.</operator><name>HttpSolrClient</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>client</name><operator>.</operator><name>solrj</name><operator>.</operator><name>request</name><operator>.</operator><name>CollectionAdminRequest</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>cloud</name><operator>.</operator><name>SolrCloudTestCase</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>cloud</name><operator>.</operator><name>hdfs</name><operator>.</operator><name>HdfsTestUtil</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>SolrInputDocument</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>cloud</name><operator>.</operator><name>DocCollection</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>cloud</name><operator>.</operator><name>Replica</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>cloud</name><operator>.</operator><name>Slice</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>cloud</name><operator>.</operator><name>ZkStateReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>params</name><operator>.</operator><name>CoreAdminParams</name><operator>.</operator><name>CoreAdminAction</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>BadHdfsThreadsFilter</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>AfterClass</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>BeforeClass</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>

<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>cloud</name><operator>.</operator><name>ZkStateReader</name><operator>.</operator><name>BASE_URL_PROP</name></name>;</import>

<class><annotation>@<name>ThreadLeakFilters</name><argument_list>(<argument><expr><name>defaultFilters</name> <operator>=</operator> <literal type="boolean">true</literal></expr></argument>, <argument><expr><name>filters</name> <operator>=</operator> <block>{
    <expr><name><name>BadHdfsThreadsFilter</name><operator>.</operator><name>class</name></name></expr> <comment type="line">// hdfs currently leaks thread(s)</comment>
}</block></expr></argument>)</argument_list></annotation>
<annotation>@<name><name>SolrTestCaseJ4</name><operator>.</operator><name>SuppressSSL</name></name></annotation>     <comment type="line">// Currently unknown why SSL does not work with this test</comment>
<specifier>public</specifier> class <name>TestHdfsBackupRestoreCore</name> <super_list><extends>extends <super><name>SolrCloudTestCase</name></super></extends></super_list> <block>{
  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>HDFS_REPO_SOLR_XML</name> <init>= <expr><literal type="string">"&lt;solr&gt;\n"</literal> <operator>+</operator>
      <literal type="string">"\n"</literal> <operator>+</operator>
      <literal type="string">"  &lt;str name=\"shareSchema\"&gt;${shareSchema:false}&lt;/str&gt;\n"</literal> <operator>+</operator>
      <literal type="string">"  &lt;str name=\"configSetBaseDir\"&gt;${configSetBaseDir:configsets}&lt;/str&gt;\n"</literal> <operator>+</operator>
      <literal type="string">"  &lt;str name=\"coreRootDirectory\"&gt;${coreRootDirectory:.}&lt;/str&gt;\n"</literal> <operator>+</operator>
      <literal type="string">"\n"</literal> <operator>+</operator>
      <literal type="string">"  &lt;shardHandlerFactory name=\"shardHandlerFactory\" class=\"HttpShardHandlerFactory\"&gt;\n"</literal> <operator>+</operator>
      <literal type="string">"    &lt;str name=\"urlScheme\"&gt;${urlScheme:}&lt;/str&gt;\n"</literal> <operator>+</operator>
      <literal type="string">"    &lt;int name=\"socketTimeout\"&gt;${socketTimeout:90000}&lt;/int&gt;\n"</literal> <operator>+</operator>
      <literal type="string">"    &lt;int name=\"connTimeout\"&gt;${connTimeout:15000}&lt;/int&gt;\n"</literal> <operator>+</operator>
      <literal type="string">"  &lt;/shardHandlerFactory&gt;\n"</literal> <operator>+</operator>
      <literal type="string">"\n"</literal> <operator>+</operator>
      <literal type="string">"  &lt;solrcloud&gt;\n"</literal> <operator>+</operator>
      <literal type="string">"    &lt;str name=\"host\"&gt;127.0.0.1&lt;/str&gt;\n"</literal> <operator>+</operator>
      <literal type="string">"    &lt;int name=\"hostPort\"&gt;${hostPort:8983}&lt;/int&gt;\n"</literal> <operator>+</operator>
      <literal type="string">"    &lt;str name=\"hostContext\"&gt;${hostContext:solr}&lt;/str&gt;\n"</literal> <operator>+</operator>
      <literal type="string">"    &lt;int name=\"zkClientTimeout\"&gt;${solr.zkclienttimeout:30000}&lt;/int&gt;\n"</literal> <operator>+</operator>
      <literal type="string">"    &lt;bool name=\"genericCoreNodeNames\"&gt;${genericCoreNodeNames:true}&lt;/bool&gt;\n"</literal> <operator>+</operator>
      <literal type="string">"    &lt;int name=\"leaderVoteWait\"&gt;10000&lt;/int&gt;\n"</literal> <operator>+</operator>
      <literal type="string">"    &lt;int name=\"distribUpdateConnTimeout\"&gt;${distribUpdateConnTimeout:45000}&lt;/int&gt;\n"</literal> <operator>+</operator>
      <literal type="string">"    &lt;int name=\"distribUpdateSoTimeout\"&gt;${distribUpdateSoTimeout:340000}&lt;/int&gt;\n"</literal> <operator>+</operator>
      <literal type="string">"  &lt;/solrcloud&gt;\n"</literal> <operator>+</operator>
      <literal type="string">"  \n"</literal> <operator>+</operator>
      <literal type="string">"  &lt;backup&gt;\n"</literal> <operator>+</operator>
      <literal type="string">"    &lt;repository  name=\"hdfs\" class=\"org.apache.solr.core.backup.repository.HdfsBackupRepository\"&gt; \n"</literal> <operator>+</operator>
      <literal type="string">"      &lt;str name=\"location\"&gt;${solr.hdfs.default.backup.path}&lt;/str&gt;\n"</literal> <operator>+</operator>
      <literal type="string">"      &lt;str name=\"solr.hdfs.home\"&gt;${solr.hdfs.home:}&lt;/str&gt;\n"</literal> <operator>+</operator>
      <literal type="string">"      &lt;str name=\"solr.hdfs.confdir\"&gt;${solr.hdfs.confdir:}&lt;/str&gt;\n"</literal> <operator>+</operator>
      <literal type="string">"    &lt;/repository&gt;\n"</literal> <operator>+</operator>
      <literal type="string">"  &lt;/backup&gt;\n"</literal> <operator>+</operator>
      <literal type="string">"  \n"</literal> <operator>+</operator>
      <literal type="string">"&lt;/solr&gt;\n"</literal></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>Logger</name></type> <name>log</name> <init>= <expr><call><name><name>LoggerFactory</name><operator>.</operator><name>getLogger</name></name><argument_list>(<argument><expr><call><name><name>MethodHandles</name><operator>.</operator><name>lookup</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>lookupClass</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>MiniDFSCluster</name></type> <name>dfsCluster</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>String</name></type> <name>hdfsUri</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>FileSystem</name></type> <name>fs</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>long</name></type> <name>docsSeed</name></decl>;</decl_stmt> <comment type="line">// see indexDocs()</comment>

  <function><annotation>@<name>BeforeClass</name></annotation>
  <type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>setupClass</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><name>dfsCluster</name> <operator>=</operator> <call><name><name>HdfsTestUtil</name><operator>.</operator><name>setupClass</name></name><argument_list>(<argument><expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>hdfsUri</name> <operator>=</operator> <call><name><name>HdfsTestUtil</name><operator>.</operator><name>getURI</name></name><argument_list>(<argument><expr><name>dfsCluster</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <try>try <block>{<block_content>
      <decl_stmt><decl><type><name>URI</name></type> <name>uri</name> <init>= <expr><operator>new</operator> <call><name>URI</name><argument_list>(<argument><expr><name>hdfsUri</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>Configuration</name></type> <name>conf</name> <init>= <expr><call><name><name>HdfsTestUtil</name><operator>.</operator><name>getClientConfiguration</name></name><argument_list>(<argument><expr><name>dfsCluster</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>conf</name><operator>.</operator><name>setBoolean</name></name><argument_list>(<argument><expr><literal type="string">"fs.hdfs.impl.disable.cache"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>fs</name> <operator>=</operator> <call><name><name>FileSystem</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>uri</name></expr></argument>, <argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <if_stmt><if>if <condition>(<expr><name>fs</name> <operator>instanceof</operator> <name>DistributedFileSystem</name></expr>)</condition> <block>{<block_content>
        <comment type="line">// Make sure dfs is not in safe mode</comment>
        <while>while <condition>(<expr><operator>(</operator><operator>(</operator><name>DistributedFileSystem</name><operator>)</operator> <name>fs</name><operator>)</operator><operator>.</operator><call><name>setSafeMode</name><argument_list>(<argument><expr><name><name>SafeModeAction</name><operator>.</operator><name>SAFEMODE_GET</name></name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"The NameNode is in SafeMode - Solr will wait 5 seconds and try again."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <try>try <block>{<block_content>
            <expr_stmt><expr><call><name><name>Thread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><literal type="number">5000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>InterruptedException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <expr_stmt><expr><call><name><name>Thread</name><operator>.</operator><name>interrupted</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <comment type="line">// continue</comment>
          </block_content>}</block></catch></try>
        </block_content>}</block></while>
      </block_content>}</block></if></if_stmt>

      <expr_stmt><expr><call><name><name>fs</name><operator>.</operator><name>mkdirs</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>fs</name><operator>.</operator><name>Path</name></name><argument_list>(<argument><expr><literal type="string">"/backup"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> | <type><name>URISyntaxException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></catch></try>

    <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"solr.hdfs.default.backup.path"</literal></expr></argument>, <argument><expr><literal type="string">"/backup"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"solr.hdfs.home"</literal></expr></argument>, <argument><expr><name>hdfsUri</name> <operator>+</operator> <literal type="string">"/solr"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>useFactory</name><argument_list>(<argument><expr><literal type="string">"solr.StandardDirectoryFactory"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>configureCluster</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call><comment type="line">// nodes</comment>
    <operator>.</operator><call><name>addConfig</name><argument_list>(<argument><expr><literal type="string">"conf1"</literal></expr></argument>, <argument><expr><call><name>TEST_PATH</name><argument_list>()</argument_list></call><operator>.</operator><call><name>resolve</name><argument_list>(<argument><expr><literal type="string">"configsets"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>resolve</name><argument_list>(<argument><expr><literal type="string">"cloud-minimal"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>resolve</name><argument_list>(<argument><expr><literal type="string">"conf"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
    <operator>.</operator><call><name>withSolrXml</name><argument_list>(<argument><expr><name>HDFS_REPO_SOLR_XML</name></expr></argument>)</argument_list></call>
    <operator>.</operator><call><name>configure</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name>docsSeed</name> <operator>=</operator> <call><name>random</name><argument_list>()</argument_list></call><operator>.</operator><call><name>nextLong</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>AfterClass</name></annotation>
  <type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>teardownClass</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>clearProperty</name></name><argument_list>(<argument><expr><literal type="string">"solr.hdfs.home"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>clearProperty</name></name><argument_list>(<argument><expr><literal type="string">"solr.hdfs.default.backup.path"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>clearProperty</name></name><argument_list>(<argument><expr><literal type="string">"test.build.data"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>clearProperty</name></name><argument_list>(<argument><expr><literal type="string">"test.cache.data"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>IOUtils</name><operator>.</operator><name>closeQuietly</name></name><argument_list>(<argument><expr><name>fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>fs</name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>HdfsTestUtil</name><operator>.</operator><name>teardownClass</name></name><argument_list>(<argument><expr><name>dfsCluster</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>dfsCluster</name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>test</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>CloudSolrClient</name></type> <name>solrClient</name> <init>= <expr><call><name><name>cluster</name><operator>.</operator><name>getSolrClient</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>collectionName</name> <init>= <expr><literal type="string">"HdfsBackupRestore"</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>CollectionAdminRequest</name><operator>.</operator><name>Create</name></name></type> <name>create</name> <init>=
        <expr><call><name><name>CollectionAdminRequest</name><operator>.</operator><name>createCollection</name></name><argument_list>(<argument><expr><name>collectionName</name></expr></argument>, <argument><expr><literal type="string">"conf1"</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>create</name><operator>.</operator><name>process</name></name><argument_list>(<argument><expr><name>solrClient</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>int</name></type> <name>nDocs</name> <init>= <expr><call><name><name>BackupRestoreUtils</name><operator>.</operator><name>indexDocs</name></name><argument_list>(<argument><expr><name>solrClient</name></expr></argument>, <argument><expr><name>collectionName</name></expr></argument>, <argument><expr><name>docsSeed</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>DocCollection</name></type> <name>collectionState</name> <init>= <expr><call><name><name>solrClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClusterState</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCollection</name><argument_list>(<argument><expr><name>collectionName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><call><name><name>collectionState</name><operator>.</operator><name>getActiveSlices</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Slice</name></type> <name>shard</name> <init>= <expr><call><name><name>collectionState</name><operator>.</operator><name>getActiveSlices</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>iterator</name><argument_list>()</argument_list></call><operator>.</operator><call><name>next</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><call><name><name>shard</name><operator>.</operator><name>getReplicas</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Replica</name></type> <name>replica</name> <init>= <expr><call><name><name>shard</name><operator>.</operator><name>getReplicas</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>iterator</name><argument_list>()</argument_list></call><operator>.</operator><call><name>next</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>String</name></type> <name>replicaBaseUrl</name> <init>= <expr><call><name><name>replica</name><operator>.</operator><name>getStr</name></name><argument_list>(<argument><expr><name>BASE_URL_PROP</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>coreName</name> <init>= <expr><call><name><name>replica</name><operator>.</operator><name>getStr</name></name><argument_list>(<argument><expr><name><name>ZkStateReader</name><operator>.</operator><name>CORE_NAME_PROP</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>backupName</name> <init>= <expr><call><name><name>TestUtil</name><operator>.</operator><name>randomSimpleString</name></name><argument_list>(<argument><expr><call><name>random</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>boolean</name></type> <name>testViaReplicationHandler</name> <init>= <expr><call><name>random</name><argument_list>()</argument_list></call><operator>.</operator><call><name>nextBoolean</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>baseUrl</name> <init>= <expr><call><name><name>cluster</name><operator>.</operator><name>getJettySolrRunners</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getBaseUrl</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <try>try <init>(<decl><type><name>SolrClient</name></type> <name>masterClient</name> <init>= <expr><call><name>getHttpSolrClient</name><argument_list>(<argument><expr><name>replicaBaseUrl</name></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
      <comment type="line">// Create a backup.</comment>
      <if_stmt><if>if <condition>(<expr><name>testViaReplicationHandler</name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Running Backup/restore via replication handler"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>runReplicationHandlerCommand</name><argument_list>(<argument><expr><name>baseUrl</name></expr></argument>, <argument><expr><name>coreName</name></expr></argument>, <argument><expr><name><name>ReplicationHandler</name><operator>.</operator><name>CMD_BACKUP</name></name></expr></argument>, <argument><expr><literal type="string">"hdfs"</literal></expr></argument>, <argument><expr><name>backupName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>CheckBackupStatus</name></type> <name>checkBackupStatus</name> <init>= <expr><operator>new</operator> <call><name>CheckBackupStatus</name><argument_list>(<argument><expr><operator>(</operator><name>HttpSolrClient</name><operator>)</operator> <name>masterClient</name></expr></argument>, <argument><expr><name>coreName</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <while>while <condition>(<expr><operator>!</operator><name><name>checkBackupStatus</name><operator>.</operator><name>success</name></name></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name><name>checkBackupStatus</name><operator>.</operator><name>fetchStatus</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>Thread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><literal type="number">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></while>
      </block_content>}</block></if> <else>else <block>{<block_content>
        <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Running Backup/restore via core admin api"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>runCoreAdminCommand</name><argument_list>(<argument><expr><name>replicaBaseUrl</name></expr></argument>, <argument><expr><name>coreName</name></expr></argument>, <argument><expr><call><name><name>CoreAdminAction</name><operator>.</operator><name>BACKUPCORE</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"hdfs"</literal></expr></argument>, <argument><expr><name>backupName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></else></if_stmt>

      <decl_stmt><decl><type><name>int</name></type> <name>numRestoreTests</name> <init>= <expr><ternary><condition><expr><name>nDocs</name> <operator>&gt;</operator> <literal type="number">0</literal></expr> ?</condition><then> <expr><call><name><name>TestUtil</name><operator>.</operator><name>nextInt</name></name><argument_list>(<argument><expr><call><name>random</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr> </then><else>: <expr><literal type="number">1</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>
      <for>for <control>(<init><decl><type><name>int</name></type> <name>attempts</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>attempts</name><operator>&lt;</operator><name>numRestoreTests</name></expr>;</condition> <incr><expr><name>attempts</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
        <comment type="line">//Modify existing index before we call restore.</comment>
        <if_stmt><if>if <condition>(<expr><name>nDocs</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
          <comment type="line">//Delete a few docs</comment>
          <decl_stmt><decl><type><name>int</name></type> <name>numDeletes</name> <init>= <expr><call><name><name>TestUtil</name><operator>.</operator><name>nextInt</name></name><argument_list>(<argument><expr><call><name>random</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>nDocs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name>numDeletes</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
            <expr_stmt><expr><call><name><name>masterClient</name><operator>.</operator><name>deleteByQuery</name></name><argument_list>(<argument><expr><name>collectionName</name></expr></argument>, <argument><expr><literal type="string">"id:"</literal> <operator>+</operator> <name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          </block_content>}</block></for>
          <expr_stmt><expr><call><name><name>masterClient</name><operator>.</operator><name>commit</name></name><argument_list>(<argument><expr><name>collectionName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

          <comment type="line">//Add a few more</comment>
          <decl_stmt><decl><type><name>int</name></type> <name>moreAdds</name> <init>= <expr><call><name><name>TestUtil</name><operator>.</operator><name>nextInt</name></name><argument_list>(<argument><expr><call><name>random</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name>moreAdds</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
            <decl_stmt><decl><type><name>SolrInputDocument</name></type> <name>doc</name> <init>= <expr><operator>new</operator> <call><name>SolrInputDocument</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>doc</name><operator>.</operator><name>addField</name></name><argument_list>(<argument><expr><literal type="string">"id"</literal></expr></argument>, <argument><expr><name>i</name> <operator>+</operator> <name>nDocs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>doc</name><operator>.</operator><name>addField</name></name><argument_list>(<argument><expr><literal type="string">"name"</literal></expr></argument>, <argument><expr><literal type="string">"name = "</literal> <operator>+</operator> <operator>(</operator><name>i</name> <operator>+</operator> <name>nDocs</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>masterClient</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>collectionName</name></expr></argument>, <argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          </block_content>}</block></for>
          <comment type="line">//Purposely not calling commit once in a while. There can be some docs which are not committed</comment>
          <if_stmt><if>if <condition>(<expr><call><name>usually</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>masterClient</name><operator>.</operator><name>commit</name></name><argument_list>(<argument><expr><name>collectionName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          </block_content>}</block></if></if_stmt>
        </block_content>}</block></if></if_stmt>
        <comment type="line">// Snapshooter prefixes "snapshot." to the backup name.</comment>
        <if_stmt><if>if <condition>(<expr><name>testViaReplicationHandler</name></expr>)</condition> <block>{<block_content>
          <comment type="line">// Snapshooter prefixes "snapshot." to the backup name.</comment>
          <expr_stmt><expr><call><name>runReplicationHandlerCommand</name><argument_list>(<argument><expr><name>baseUrl</name></expr></argument>, <argument><expr><name>coreName</name></expr></argument>, <argument><expr><name><name>ReplicationHandler</name><operator>.</operator><name>CMD_RESTORE</name></name></expr></argument>, <argument><expr><literal type="string">"hdfs"</literal></expr></argument>, <argument><expr><name>backupName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <while>while <condition>(<expr><operator>!</operator><call><name><name>TestRestoreCore</name><operator>.</operator><name>fetchRestoreStatus</name></name><argument_list>(<argument><expr><name>baseUrl</name></expr></argument>, <argument><expr><name>coreName</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>Thread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><literal type="number">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          </block_content>}</block></while>
        </block_content>}</block></if> <else>else <block>{<block_content>
          <expr_stmt><expr><call><name>runCoreAdminCommand</name><argument_list>(<argument><expr><name>replicaBaseUrl</name></expr></argument>, <argument><expr><name>coreName</name></expr></argument>, <argument><expr><call><name><name>CoreAdminAction</name><operator>.</operator><name>RESTORECORE</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"hdfs"</literal></expr></argument>, <argument><expr><literal type="string">"snapshot."</literal> <operator>+</operator> <name>backupName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
        <comment type="line">//See if restore was successful by checking if all the docs are present again</comment>
        <expr_stmt><expr><call><name><name>BackupRestoreUtils</name><operator>.</operator><name>verifyDocs</name></name><argument_list>(<argument><expr><name>nDocs</name></expr></argument>, <argument><expr><name>masterClient</name></expr></argument>, <argument><expr><name>coreName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></for>
    </block_content>}</block></try>
  </block_content>}</block></function>

  <function><type><specifier>static</specifier> <name>void</name></type> <name>runCoreAdminCommand</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>baseUrl</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>coreName</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>action</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>repoName</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>backupName</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>String</name></type> <name>masterUrl</name> <init>= <expr><name>baseUrl</name> <operator>+</operator> <literal type="string">"/admin/cores?action="</literal> <operator>+</operator> <name>action</name> <operator>+</operator> <literal type="string">"&amp;core="</literal><operator>+</operator><name>coreName</name><operator>+</operator><literal type="string">"&amp;repository="</literal><operator>+</operator><name>repoName</name><operator>+</operator><literal type="string">"&amp;name="</literal><operator>+</operator><name>backupName</name></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>executeHttpRequest</name><argument_list>(<argument><expr><name>masterUrl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><type><specifier>static</specifier> <name>void</name></type> <name>runReplicationHandlerCommand</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>baseUrl</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>coreName</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>action</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>repoName</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>backupName</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>String</name></type> <name>masterUrl</name> <init>= <expr><name>baseUrl</name> <operator>+</operator> <literal type="string">"/"</literal> <operator>+</operator> <name>coreName</name> <operator>+</operator> <name><name>ReplicationHandler</name><operator>.</operator><name>PATH</name></name> <operator>+</operator> <literal type="string">"?command="</literal> <operator>+</operator> <name>action</name> <operator>+</operator> <literal type="string">"&amp;repository="</literal><operator>+</operator><name>repoName</name><operator>+</operator><literal type="string">"&amp;name="</literal><operator>+</operator><name>backupName</name></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>executeHttpRequest</name><argument_list>(<argument><expr><name>masterUrl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><type><specifier>static</specifier> <name>void</name></type> <name>executeHttpRequest</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>requestUrl</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>InputStream</name></type> <name>stream</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
    <try>try <block>{<block_content>
      <decl_stmt><decl><type><name>URL</name></type> <name>url</name> <init>= <expr><operator>new</operator> <call><name>URL</name><argument_list>(<argument><expr><name>requestUrl</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><name>stream</name> <operator>=</operator> <call><name><name>url</name><operator>.</operator><name>openStream</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>stream</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> <finally>finally <block>{<block_content>
      <expr_stmt><expr><call><name><name>IOUtils</name><operator>.</operator><name>closeQuietly</name></name><argument_list>(<argument><expr><name>stream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></finally></try>
  </block_content>}</block></function>
}</block></class>
<expr_stmt><expr><operator>\</operator> <name>No</name> <name>newline</name> <name>at</name> <name>end</name> <name>of</name> <name>file</name>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>TestReplicationHandlerBackup</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>TestReplicationHandlerBackup</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>bfad7825ea4</name><operator>..</operator><literal type="number">1ea16a0a817</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>TestReplicationHandlerBackup</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>TestReplicationHandlerBackup</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>handler</name></name>;</package>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>invoke</name><operator>.</operator><name>MethodHandles</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>URL</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>DirectoryStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">41</literal></expr><operator>,</operator><expr><literal type="number">15</literal> <operator>+</operator><literal type="number">42</literal></expr><operator>,</operator><expr><literal type="number">15</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>TestUtil</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>SolrJettyTestBase</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>SolrTestCaseJ4</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>client</name><operator>.</operator><name>solrj</name><operator>.</operator><name>SolrClient</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>client</name><operator>.</operator><name>solrj</name><operator>.</operator><name>SolrServerException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>client</name><operator>.</operator><name>solrj</name><operator>.</operator><name>embedded</name><operator>.</operator><name>JettyConfig</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>client</name><operator>.</operator><name>solrj</name><operator>.</operator><name>embedded</name><operator>.</operator><name>JettySolrRunner</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>client</name><operator>.</operator><name>solrj</name><operator>.</operator><name>impl</name><operator>.</operator><name>HttpSolrClient</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>SolrInputDocument</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>FileUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>After</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Before</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>
 
 <class><annotation>@<name><name>SolrTestCaseJ4</name><operator>.</operator><name>SuppressSSL</name></name></annotation>     <comment type="line">// Currently unknown why SSL does not work with this test</comment>
 <specifier>public</specifier> class <name>TestReplicationHandlerBackup</name> <super_list><extends>extends <super><name>SolrJettyTestBase</name></super></extends></super_list> <block>{
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">65</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">66</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestReplicationHandlerBackup</name> extends <name>SolrJettyTestBase</name> <block>{
 
   <expr><name>boolean</name> <name>addNumberToKeepInRequest</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;
   <name>String</name> <name>backupKeepParamName</name> <operator>=</operator> <name><name>ReplicationHandler</name><operator>.</operator><name>NUMBER_BACKUPS_TO_KEEP_REQUEST_PARAM</name></name></block></expr>;</expr_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>long</name></type> <name>docsSeed</name></decl>;</decl_stmt> <comment type="line">// see indexDocs()</comment>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>Logger</name></type> <name>log</name> <init>= <expr><call><name><name>LoggerFactory</name><operator>.</operator><name>getLogger</name></name><argument_list>(<argument><expr><call><name><name>MethodHandles</name><operator>.</operator><name>lookup</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>lookupClass</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
   <function><type><specifier>private</specifier> <specifier>static</specifier> <name>JettySolrRunner</name></type> <name>createJetty</name><parameter_list>(<parameter><decl><type><name><name>TestReplicationHandler</name><operator>.</operator><name>SolrInstance</name></name></type> <name>instance</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
     <expr_stmt><expr><call><name><name>FileUtils</name><operator>.</operator><name>copyFile</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name><name>SolrTestCaseJ4</name><operator>.</operator><name>TEST_HOME</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"solr.xml"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name><name>instance</name><operator>.</operator><name>getHomeDir</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"solr.xml"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">79</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">82</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestReplicationHandlerBackup</name> extends <name>SolrJettyTestBase</name> <block>{
   <expr><specifier>private</specifier> <specifier>static</specifier> <name>SolrClient</name> <call><name>createNewSolrClient</name><argument_list>(<argument><expr><name>int</name> <name>port</name></expr></argument>)</argument_list></call> <block>{
     <try>try <block>{<block_content>
       <comment type="line">// setup the client...</comment>
      <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>baseUrl</name> <init>= <expr><call><name>buildUrl</name><argument_list>(<argument><expr><name>port</name></expr></argument>, <argument><expr><name>context</name></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="string">"/"</literal> <operator>+</operator> <name>DEFAULT_TEST_CORENAME</name></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>baseUrl</name> <init>= <expr><call><name>buildUrl</name><argument_list>(<argument><expr><name>port</name></expr></argument>, <argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>HttpSolrClient</name></type> <name>client</name> <init>= <expr><call><name>getHttpSolrClient</name><argument_list>(<argument><expr><name>baseUrl</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>client</name><operator>.</operator><name>setConnectionTimeout</name></name><argument_list>(<argument><expr><literal type="number">15000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>client</name><operator>.</operator><name>setSoTimeout</name></name><argument_list>(<argument><expr><literal type="number">60000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">107</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">110</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestReplicationHandlerBackup</name> extends <name>SolrJettyTestBase</name> <block>{
 
     <expr><name>masterJetty</name> <operator>=</operator> <call><name>createJetty</name><argument_list>(<argument><expr><name>master</name></expr></argument>)</argument_list></call></expr>;
     <name>masterClient</name> <operator>=</operator> <call><name>createNewSolrClient</name><argument_list>(<argument><expr><call><name><name>masterJetty</name><operator>.</operator><name>getLocalPort</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><name>docsSeed</name> <operator>=</operator> <call><name>random</name><argument_list>()</argument_list></call><operator>.</operator><call><name>nextLong</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
   <expr_stmt/></block_content></block></try></block></expr>}</block>
 
   @<name>Override</name>
@@ <operator>-</operator><literal type="number">123</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">127</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestReplicationHandlerBackup</name> extends <name>SolrJettyTestBase</name> <block>{
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testBackupOnCommit</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <comment type="line">//Index</comment>
    <expr><name>int</name> <name>nDocs</name> <operator>=</operator> <call><name>indexDocs</name><argument_list>(<argument><expr><name>masterClient</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>int</name> <name>nDocs</name> <operator>=</operator> <call><name><name>BackupRestoreUtils</name><operator>.</operator><name>indexDocs</name></name><argument_list>(<argument><expr><name>masterClient</name></expr></argument>, <argument><expr><name>DEFAULT_TEST_COLLECTION_NAME</name></expr></argument>, <argument><expr><name>docsSeed</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
 
     <comment type="line">//Confirm if completed</comment>
    <decl_stmt><decl><type><name>CheckBackupStatus</name></type> <name>checkBackupStatus</name> <init>= <expr><operator>new</operator> <call><name>CheckBackupStatus</name><argument_list>(<argument><expr><operator>(</operator><name>HttpSolrClient</name><operator>)</operator> <name>masterClient</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>CheckBackupStatus</name></type> <name>checkBackupStatus</name> <init>= <expr><operator>new</operator> <call><name>CheckBackupStatus</name><argument_list>(<argument><expr><operator>(</operator><name>HttpSolrClient</name><operator>)</operator> <name>masterClient</name></expr></argument>, <argument><expr><name>DEFAULT_TEST_CORENAME</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <while>while <condition>(<expr><operator>!</operator><name><name>checkBackupStatus</name><operator>.</operator><name>success</name></name></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><call><name><name>checkBackupStatus</name><operator>.</operator><name>fetchStatus</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>Thread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><literal type="number">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">148</literal></expr><operator>,</operator><expr><literal type="number">25</literal> <operator>+</operator><literal type="number">152</literal></expr><operator>,</operator><expr><literal type="number">18</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestReplicationHandlerBackup</name> extends <name>SolrJettyTestBase</name> <block>{
     }</block></expr></expr_stmt>
   </block_content>}</block></while>
 
  <function><type><specifier>protected</specifier> <specifier>static</specifier> <name>int</name></type> <name>indexDocs</name><parameter_list>(<parameter><decl><type><name>SolrClient</name></type> <name>masterClient</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument>, <argument><expr><name>SolrServerException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>int</name></type> <name>nDocs</name> <init>= <expr><call><name><name>TestUtil</name><operator>.</operator><name>nextInt</name></name><argument_list>(<argument><expr><call><name>random</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>masterClient</name><operator>.</operator><name>deleteByQuery</name></name><argument_list>(<argument><expr><literal type="string">"*:*"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>nDocs</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
      <decl_stmt><decl><type><name>SolrInputDocument</name></type> <name>doc</name> <init>= <expr><operator>new</operator> <call><name>SolrInputDocument</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>doc</name><operator>.</operator><name>addField</name></name><argument_list>(<argument><expr><literal type="string">"id"</literal></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>doc</name><operator>.</operator><name>addField</name></name><argument_list>(<argument><expr><literal type="string">"name"</literal></expr></argument>, <argument><expr><literal type="string">"name = "</literal> <operator>+</operator> <name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>masterClient</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>

    <expr_stmt><expr><call><name><name>masterClient</name><operator>.</operator><name>commit</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name>nDocs</name></expr>;</return>
  </block_content>}</block></function>

 
   <function><annotation>@<name>Test</name></annotation>
   <type><specifier>public</specifier> <name>void</name></type> <name>doTestBackup</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
 
    <decl_stmt><decl><type><name>int</name></type> <name>nDocs</name> <init>= <expr><call><name>indexDocs</name><argument_list>(<argument><expr><name>masterClient</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>nDocs</name> <init>= <expr><call><name><name>BackupRestoreUtils</name><operator>.</operator><name>indexDocs</name></name><argument_list>(<argument><expr><name>masterClient</name></expr></argument>, <argument><expr><name>DEFAULT_TEST_COLLECTION_NAME</name></expr></argument>, <argument><expr><name>docsSeed</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <comment type="line">//Confirm if completed</comment>
    <decl_stmt><decl><type><name>CheckBackupStatus</name></type> <name>checkBackupStatus</name> <init>= <expr><operator>new</operator> <call><name>CheckBackupStatus</name><argument_list>(<argument><expr><operator>(</operator><name>HttpSolrClient</name><operator>)</operator> <name>masterClient</name></expr></argument>, <argument><expr><name>DEFAULT_TEST_CORENAME</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <while>while <condition>(<expr><operator>!</operator><name><name>checkBackupStatus</name><operator>.</operator><name>success</name></name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>checkBackupStatus</name><operator>.</operator><name>fetchStatus</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>Thread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><literal type="number">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
 
     <decl_stmt><decl><type><name><name>Path</name><index>[]</index></name></type> <name>snapDir</name> <init>= <expr><operator>new</operator> <name><name>Path</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></expr></init></decl>;</decl_stmt> <comment type="line">//One extra for the backup on commit</comment>
     <comment type="line">//First snapshot location</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">194</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">191</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestReplicationHandlerBackup</name> extends <name>SolrJettyTestBase</name> <block>{
         <expr><name><name>backupNames</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name>backupName</name></expr>;
       }</block></expr></expr_stmt>
 
      <decl_stmt><decl><type><name>CheckBackupStatus</name></type> <name>checkBackupStatus</name> <init>= <expr><operator>new</operator> <call><name>CheckBackupStatus</name><argument_list>(<argument><expr><operator>(</operator><name>HttpSolrClient</name><operator>)</operator> <name>masterClient</name></expr></argument>, <argument><expr><name>firstBackupTimestamp</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><name>checkBackupStatus</name> <operator>=</operator> <operator>new</operator> <call><name>CheckBackupStatus</name><argument_list>(<argument><expr><operator>(</operator><name>HttpSolrClient</name><operator>)</operator> <name>masterClient</name></expr></argument>, <argument><expr><name>DEFAULT_TEST_CORENAME</name></expr></argument>, <argument><expr><name>firstBackupTimestamp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <while>while <condition>(<expr><operator>!</operator><name><name>checkBackupStatus</name><operator>.</operator><name>success</name></name></expr>)</condition> <block>{<block_content>
         <expr_stmt><expr><call><name><name>checkBackupStatus</name><operator>.</operator><name>fetchStatus</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><call><name><name>Thread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><literal type="number">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>TestRestoreCore</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>TestRestoreCore</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">2ee77b71fa6</literal><operator>..</operator><name>eaf773a4326</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>TestRestoreCore</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>TestRestoreCore</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">35</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">35</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>TestUtil</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>SolrJettyTestBase</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>SolrTestCaseJ4</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>client</name><operator>.</operator><name>solrj</name><operator>.</operator><name>SolrClient</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>client</name><operator>.</operator><name>solrj</name><operator>.</operator><name>SolrServerException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>client</name><operator>.</operator><name>solrj</name><operator>.</operator><name>embedded</name><operator>.</operator><name>JettyConfig</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>client</name><operator>.</operator><name>solrj</name><operator>.</operator><name>embedded</name><operator>.</operator><name>JettySolrRunner</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>client</name><operator>.</operator><name>solrj</name><operator>.</operator><name>impl</name><operator>.</operator><name>HttpSolrClient</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>client</name><operator>.</operator><name>solrj</name><operator>.</operator><name>response</name><operator>.</operator><name>QueryResponse</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>SolrInputDocument</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>params</name><operator>.</operator><name>ModifiableSolrParams</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>FileUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>After</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Before</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">54</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">51</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestRestoreCore</name> extends <name>SolrJettyTestBase</name> <block>{
   <expr><name><name>TestReplicationHandler</name><operator>.</operator><name>SolrInstance</name></name> <name>master</name> <operator>=</operator> <literal type="null">null</literal></expr>;
   <name>SolrClient</name> <name>masterClient</name></block></expr>;</expr_stmt>
 
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>CONF_DIR</name> <init>= <expr><literal type="string">"solr"</literal> <operator>+</operator> <name><name>File</name><operator>.</operator><name>separator</name></name> <operator>+</operator> <literal type="string">"collection1"</literal> <operator>+</operator> <name><name>File</name><operator>.</operator><name>separator</name></name> <operator>+</operator> <literal type="string">"conf"</literal>
  <specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>CONF_DIR</name> <operator>=</operator> <literal type="string">"solr"</literal> <operator>+</operator> <name><name>File</name><operator>.</operator><name>separator</name></name> <operator>+</operator> <name>DEFAULT_TEST_CORENAME</name> <operator>+</operator> <name><name>File</name><operator>.</operator><name>separator</name></name> <operator>+</operator> <literal type="string">"conf"</literal>
       <operator>+</operator> <name><name>File</name><operator>.</operator><name>separator</name></name></expr></init></decl>;</decl_stmt>
 
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>String</name></type> <name>context</name> <init>= <expr><literal type="string">"/solr"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>long</name></type> <name>docsSeed</name></decl>;</decl_stmt> <comment type="line">// see indexDocs()</comment>
 
   <function><type><specifier>private</specifier> <specifier>static</specifier> <name>JettySolrRunner</name></type> <name>createJetty</name><parameter_list>(<parameter><decl><type><name><name>TestReplicationHandler</name><operator>.</operator><name>SolrInstance</name></name></type> <name>instance</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
     <expr_stmt><expr><call><name><name>FileUtils</name><operator>.</operator><name>copyFile</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name><name>SolrTestCaseJ4</name><operator>.</operator><name>TEST_HOME</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"solr.xml"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><call><name><name>instance</name><operator>.</operator><name>getHomeDir</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"solr.xml"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">72</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">70</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestRestoreCore</name> extends <name>SolrJettyTestBase</name> <block>{
   <expr><specifier>private</specifier> <specifier>static</specifier> <name>SolrClient</name> <call><name>createNewSolrClient</name><argument_list>(<argument><expr><name>int</name> <name>port</name></expr></argument>)</argument_list></call> <block>{
     <try>try <block>{<block_content>
       <comment type="line">// setup the client...</comment>
      <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>baseUrl</name> <init>= <expr><call><name>buildUrl</name><argument_list>(<argument><expr><name>port</name></expr></argument>, <argument><expr><name>context</name></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="string">"/"</literal> <operator>+</operator> <name>DEFAULT_TEST_CORENAME</name></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>baseUrl</name> <init>= <expr><call><name>buildUrl</name><argument_list>(<argument><expr><name>port</name></expr></argument>, <argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>HttpSolrClient</name></type> <name>client</name> <init>= <expr><call><name>getHttpSolrClient</name><argument_list>(<argument><expr><name>baseUrl</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>client</name><operator>.</operator><name>setConnectionTimeout</name></name><argument_list>(<argument><expr><literal type="number">15000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>client</name><operator>.</operator><name>setSoTimeout</name></name><argument_list>(<argument><expr><literal type="number">60000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">95</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">93</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestRestoreCore</name> extends <name>SolrJettyTestBase</name> <block>{
 
     <expr><name>masterJetty</name> <operator>=</operator> <call><name>createJetty</name><argument_list>(<argument><expr><name>master</name></expr></argument>)</argument_list></call></expr>;
     <name>masterClient</name> <operator>=</operator> <call><name>createNewSolrClient</name><argument_list>(<argument><expr><call><name><name>masterJetty</name><operator>.</operator><name>getLocalPort</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><name>docsSeed</name> <operator>=</operator> <call><name>random</name><argument_list>()</argument_list></call><operator>.</operator><call><name>nextLong</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
   <expr_stmt/></block_content></block></try></block></expr>}</block>
 
   @<name>Override</name>
@@ <operator>-</operator><literal type="number">111</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">110</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestRestoreCore</name> extends <name>SolrJettyTestBase</name> <block>{
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testSimpleRestore</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
 
    <expr><name>int</name> <name>nDocs</name> <operator>=</operator> <call><name>usually</name><argument_list>()</argument_list></call> <operator>?</operator> <call><name><name>TestReplicationHandlerBackup</name><operator>.</operator><name>indexDocs</name></name><argument_list>(<argument><expr><name>masterClient</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <operator>:</operator> <literal type="number">0</literal></expr>;
    <name>int</name> <name>nDocs</name> <operator>=</operator> <ternary><condition><expr><call><name>usually</name><argument_list>()</argument_list></call></expr> ?</condition><then> <expr><call><name><name>BackupRestoreUtils</name><operator>.</operator><name>indexDocs</name></name><argument_list>(<argument><expr><name>masterClient</name></expr></argument>, <argument><expr><literal type="string">"collection1"</literal></expr></argument>, <argument><expr><name>docsSeed</name></expr></argument>)</argument_list></call></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary></block></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><name>String</name></type> <name>snapshotName</name></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>String</name></type> <name>location</name></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>String</name></type> <name>params</name> <init>= <expr><literal type="string">""</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>baseUrl</name> <init>= <expr><call><name><name>masterJetty</name><operator>.</operator><name>getBaseUrl</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <comment type="line">//Use the default backup location or an externally provided location.</comment>
     <if_stmt><if>if <condition>(<expr><call><name>random</name><argument_list>()</argument_list></call><operator>.</operator><call><name>nextBoolean</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">131</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">131</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestRestoreCore</name> extends <name>SolrJettyTestBase</name> <block>{
 
     <expr><call><name><name>TestReplicationHandlerBackup</name><operator>.</operator><name>runBackupCommand</name></name><argument_list>(<argument><expr><name>masterJetty</name></expr></argument>, <argument><expr><name><name>ReplicationHandler</name><operator>.</operator><name>CMD_BACKUP</name></name></expr></argument>, <argument><expr><name>params</name></expr></argument>)</argument_list></call></expr>;
 
    <name>CheckBackupStatus</name> <name>checkBackupStatus</name> <operator>=</operator> <operator>new</operator> <call><name>CheckBackupStatus</name><argument_list>(<argument><expr><operator>(</operator><name>HttpSolrClient</name><operator>)</operator> <name>masterClient</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>CheckBackupStatus</name></type> <name>checkBackupStatus</name> <init>= <expr><operator>new</operator> <call><name>CheckBackupStatus</name><argument_list>(<argument><expr><operator>(</operator><name>HttpSolrClient</name><operator>)</operator> <name>masterClient</name></expr></argument>, <argument><expr><name>DEFAULT_TEST_CORENAME</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <while>while <condition>(<expr><operator>!</operator><name><name>checkBackupStatus</name><operator>.</operator><name>success</name></name></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><call><name><name>checkBackupStatus</name><operator>.</operator><name>fetchStatus</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>Thread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><literal type="number">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">148</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">148</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestRestoreCore</name> extends <name>SolrJettyTestBase</name> <block>{
         <comment type="line">//Delete a few docs</comment>
         <expr><name>int</name> <name>numDeletes</name> <operator>=</operator> <call><name><name>TestUtil</name><operator>.</operator><name>nextInt</name></name><argument_list>(<argument><expr><call><name>random</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>nDocs</name></expr></argument>)</argument_list></call></expr>;</block></expr></expr_stmt>
         <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name>numDeletes</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
          <expr_stmt><expr><call><name><name>masterClient</name><operator>.</operator><name>deleteByQuery</name></name><argument_list>(<argument><expr><literal type="string">"id:"</literal> <operator>+</operator> <name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>masterClient</name><operator>.</operator><name>deleteByQuery</name></name><argument_list>(<argument><expr><name>DEFAULT_TEST_CORENAME</name></expr></argument>, <argument><expr><literal type="string">"id:"</literal> <operator>+</operator> <name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></for>
        <expr_stmt><expr><call><name><name>masterClient</name><operator>.</operator><name>commit</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>masterClient</name><operator>.</operator><name>commit</name></name><argument_list>(<argument><expr><name>DEFAULT_TEST_CORENAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
         <comment type="line">//Add a few more</comment>
         <decl_stmt><decl><type><name>int</name></type> <name>moreAdds</name> <init>= <expr><call><name><name>TestUtil</name><operator>.</operator><name>nextInt</name></name><argument_list>(<argument><expr><call><name>random</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">158</literal></expr><operator>,</operator><expr><literal type="number">37</literal> <operator>+</operator><literal type="number">158</literal></expr><operator>,</operator><expr><literal type="number">38</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestRestoreCore</name> extends <name>SolrJettyTestBase</name> <block>{
           <expr><name>SolrInputDocument</name> <name>doc</name> <operator>=</operator> <operator>new</operator> <call><name>SolrInputDocument</name><argument_list>()</argument_list></call></expr>;
           <call><name><name>doc</name><operator>.</operator><name>addField</name></name><argument_list>(<argument><expr><literal type="string">"id"</literal></expr></argument>, <argument><expr><name>i</name> <operator>+</operator> <name>nDocs</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
           <expr_stmt><expr><call><name><name>doc</name><operator>.</operator><name>addField</name></name><argument_list>(<argument><expr><literal type="string">"name"</literal></expr></argument>, <argument><expr><literal type="string">"name = "</literal> <operator>+</operator> <operator>(</operator><name>i</name> <operator>+</operator> <name>nDocs</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>masterClient</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>masterClient</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>DEFAULT_TEST_CORENAME</name></expr></argument>, <argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></while>
         <comment type="line">//Purposely not calling commit once in a while. There can be some docs which are not committed</comment>
         <if_stmt><if>if <condition>(<expr><call><name>usually</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name><name>masterClient</name><operator>.</operator><name>commit</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>masterClient</name><operator>.</operator><name>commit</name></name><argument_list>(<argument><expr><name>DEFAULT_TEST_CORENAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></if></if_stmt>
       </block_content>}</block></if></if_stmt>
 
       <expr_stmt><expr><call><name><name>TestReplicationHandlerBackup</name><operator>.</operator><name>runBackupCommand</name></name><argument_list>(<argument><expr><name>masterJetty</name></expr></argument>, <argument><expr><name><name>ReplicationHandler</name><operator>.</operator><name>CMD_RESTORE</name></name></expr></argument>, <argument><expr><name>params</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
      <while>while <condition>(<expr><operator>!</operator><call><name>fetchRestoreStatus</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <while>while <condition>(<expr><operator>!</operator><call><name>fetchRestoreStatus</name><argument_list>(<argument><expr><name>baseUrl</name></expr></argument>, <argument><expr><name>DEFAULT_TEST_CORENAME</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
         <expr_stmt><expr><call><name><name>Thread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><literal type="number">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></while>
 
       <comment type="line">//See if restore was successful by checking if all the docs are present again</comment>
      <expr_stmt><expr><call><name>verifyDocs</name><argument_list>(<argument><expr><name>nDocs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>BackupRestoreUtils</name><operator>.</operator><name>verifyDocs</name></name><argument_list>(<argument><expr><name>nDocs</name></expr></argument>, <argument><expr><name>masterClient</name></expr></argument>, <argument><expr><name>DEFAULT_TEST_CORENAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></while>
 
   </block_content>}</block></function>
 
   <function><annotation>@<name>Test</name></annotation>
   <type><specifier>public</specifier> <name>void</name></type> <name>testFailedRestore</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>int</name></type> <name>nDocs</name> <init>= <expr><call><name><name>TestReplicationHandlerBackup</name><operator>.</operator><name>indexDocs</name></name><argument_list>(<argument><expr><name>masterClient</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>nDocs</name> <init>= <expr><call><name><name>BackupRestoreUtils</name><operator>.</operator><name>indexDocs</name></name><argument_list>(<argument><expr><name>masterClient</name></expr></argument>, <argument><expr><literal type="string">"collection1"</literal></expr></argument>, <argument><expr><name>docsSeed</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <decl_stmt><decl><type><name>String</name></type> <name>location</name> <init>= <expr><call><name>createTempDir</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>String</name></type> <name>snapshotName</name> <init>= <expr><call><name><name>TestUtil</name><operator>.</operator><name>randomSimpleString</name></name><argument_list>(<argument><expr><call><name>random</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>String</name></type> <name>params</name> <init>= <expr><literal type="string">"&amp;name="</literal> <operator>+</operator> <name>snapshotName</name> <operator>+</operator> <literal type="string">"&amp;location="</literal> <operator>+</operator> <call><name><name>URLEncoder</name><operator>.</operator><name>encode</name></name><argument_list>(<argument><expr><name>location</name></expr></argument>, <argument><expr><literal type="string">"UTF-8"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>baseUrl</name> <init>= <expr><call><name><name>masterJetty</name><operator>.</operator><name>getBaseUrl</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <expr_stmt><expr><call><name><name>TestReplicationHandlerBackup</name><operator>.</operator><name>runBackupCommand</name></name><argument_list>(<argument><expr><name>masterJetty</name></expr></argument>, <argument><expr><name><name>ReplicationHandler</name><operator>.</operator><name>CMD_BACKUP</name></name></expr></argument>, <argument><expr><name>params</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
    <decl_stmt><decl><type><name>CheckBackupStatus</name></type> <name>checkBackupStatus</name> <init>= <expr><operator>new</operator> <call><name>CheckBackupStatus</name><argument_list>(<argument><expr><operator>(</operator><name>HttpSolrClient</name><operator>)</operator> <name>masterClient</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>CheckBackupStatus</name></type> <name>checkBackupStatus</name> <init>= <expr><operator>new</operator> <call><name>CheckBackupStatus</name><argument_list>(<argument><expr><operator>(</operator><name>HttpSolrClient</name><operator>)</operator> <name>masterClient</name></expr></argument>, <argument><expr><name>DEFAULT_TEST_CORENAME</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <while>while <condition>(<expr><operator>!</operator><name><name>checkBackupStatus</name><operator>.</operator><name>success</name></name></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><call><name><name>checkBackupStatus</name><operator>.</operator><name>fetchStatus</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>Thread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><literal type="number">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">205</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">206</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestRestoreCore</name> extends <name>SolrJettyTestBase</name> <block>{
     <expr><call><name><name>TestReplicationHandlerBackup</name><operator>.</operator><name>runBackupCommand</name></name><argument_list>(<argument><expr><name>masterJetty</name></expr></argument>, <argument><expr><name><name>ReplicationHandler</name><operator>.</operator><name>CMD_RESTORE</name></name></expr></argument>, <argument><expr><name>params</name></expr></argument>)</argument_list></call></expr>;</block></expr></expr_stmt>
 
     <try>try <block>{<block_content>
      <while>while <condition>(<expr><operator>!</operator><call><name>fetchRestoreStatus</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <while>while <condition>(<expr><operator>!</operator><call><name>fetchRestoreStatus</name><argument_list>(<argument><expr><name>baseUrl</name></expr></argument>, <argument><expr><name>DEFAULT_TEST_CORENAME</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
         <expr_stmt><expr><call><name><name>Thread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><literal type="number">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></while>
       <expr_stmt><expr><call><name>fail</name><argument_list>(<argument><expr><literal type="string">"Should have thrown an error because restore could not have been successful"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">213</literal></expr><operator>,</operator><expr><literal type="number">25</literal> <operator>+</operator><literal type="number">214</literal></expr><operator>,</operator><expr><literal type="number">16</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestRestoreCore</name> extends <name>SolrJettyTestBase</name> <block>{
       <comment type="line">//supposed to happen</comment>
     }</block>
 
    <call><name>verifyDocs</name><argument_list>(<argument><expr><name>nDocs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>BackupRestoreUtils</name><operator>.</operator><name>verifyDocs</name></name><argument_list>(<argument><expr><name>nDocs</name></expr></argument>, <argument><expr><name>masterClient</name></expr></argument>, <argument><expr><name>DEFAULT_TEST_CORENAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <comment type="line">//make sure we can write to the index again</comment>
    <expr_stmt><expr><name>nDocs</name> <operator>=</operator> <call><name><name>TestReplicationHandlerBackup</name><operator>.</operator><name>indexDocs</name></name><argument_list>(<argument><expr><name>masterClient</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>verifyDocs</name><argument_list>(<argument><expr><name>nDocs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>nDocs</name> <operator>=</operator> <call><name><name>BackupRestoreUtils</name><operator>.</operator><name>indexDocs</name></name><argument_list>(<argument><expr><name>masterClient</name></expr></argument>, <argument><expr><literal type="string">"collection1"</literal></expr></argument>, <argument><expr><name>docsSeed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>BackupRestoreUtils</name><operator>.</operator><name>verifyDocs</name></name><argument_list>(<argument><expr><name>nDocs</name></expr></argument>, <argument><expr><name>masterClient</name></expr></argument>, <argument><expr><name>DEFAULT_TEST_CORENAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
   </block_content>}</block></while>
 
  <function><type><specifier>private</specifier> <name>void</name></type> <name>verifyDocs</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>nDocs</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>SolrServerException</name></expr></argument>, <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>ModifiableSolrParams</name></type> <name>queryParams</name> <init>= <expr><operator>new</operator> <call><name>ModifiableSolrParams</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>queryParams</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"q"</literal></expr></argument>, <argument><expr><literal type="string">"*:*"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>QueryResponse</name></type> <name>response</name> <init>= <expr><call><name><name>masterClient</name><operator>.</operator><name>query</name></name><argument_list>(<argument><expr><name>queryParams</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><call><name><name>response</name><operator>.</operator><name>getStatus</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>nDocs</name></expr></argument>, <argument><expr><call><name><name>response</name><operator>.</operator><name>getResults</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getNumFound</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><type><specifier>private</specifier> <name>boolean</name></type> <name>fetchRestoreStatus</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>String</name></type> <name>masterUrl</name> <init>= <expr><call><name>buildUrl</name><argument_list>(<argument><expr><call><name><name>masterJetty</name><operator>.</operator><name>getLocalPort</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>context</name></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="string">"/"</literal> <operator>+</operator> <name>DEFAULT_TEST_CORENAME</name> <operator>+</operator>
  <specifier>public</specifier> <specifier>static</specifier> <name>boolean</name> <call><name>fetchRestoreStatus</name> <argument_list>(<argument><expr><name>String</name> <name>baseUrl</name></expr></argument>, <argument><expr><name>String</name> <name>coreName</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><name>String</name> <name>masterUrl</name> <operator>=</operator> <name>baseUrl</name> <operator>+</operator> <literal type="string">"/"</literal> <operator>+</operator> <name>coreName</name> <operator>+</operator>
         <name><name>ReplicationHandler</name><operator>.</operator><name>PATH</name></name> <operator>+</operator> <literal type="string">"?command="</literal> <operator>+</operator> <name><name>ReplicationHandler</name><operator>.</operator><name>CMD_RESTORE_STATUS</name></name></expr></block></expr></argument></throws></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>final</specifier> <name>Pattern</name></type> <name>pException</name> <init>= <expr><call><name><name>Pattern</name><operator>.</operator><name>compile</name></name><argument_list>(<argument><expr><literal type="string">"&lt;str name=\"exception\"&gt;(.*?)&lt;/str&gt;"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
<expr_stmt><expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></expr_stmt></block_content></block></function></block_content></block></try></block_content></block></while></block_content></block></function></block_content></block></while></block_content></block></function></block_content></block></function></block></class></block_content></block></if></if_stmt></block_content></block></function></block_content></block></constructor></block_content></block></constructor></block></class></block_content></block></if></if_stmt></block_content></block></try></block_content></block></try></block_content></block></try></block_content></block></catch></block_content></block></try></block_content></block></for></block_content></block></for></block_content></block></try></block_content></block></try></block_content></block></constructor></block_content></block></constructor></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></block_content></block></function></block_content></block></constructor></block></class>

</unit>
