<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/lucene/f50e4dbf51.java"><expr_stmt><expr><name>From</name> <name>f50e4dbf5184d0ccddb86f72b7163c0ba7b7e5ad</name> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Yonik</name> <name><name>Seeley</name> <argument_list type="generic">&lt;<argument><name>yonik</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Tue</name></expr><operator>,</operator> <expr><literal type="number">21</literal> <name>Feb</name> <literal type="number">2012</literal> <literal type="number">20</literal><operator>:</operator><literal type="number">52</literal><operator>:</operator><literal type="number">54</literal> <operator>+</operator><literal type="number">0000</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>SOLR</name><operator>-</operator><literal type="number">3150</literal><operator>:</operator> <name>NPE</name> <name>when</name> <name>facetting</name> <name>using</name> <name><name>facet</name><operator>.</operator><name>prefix</name></name> <name>on</name> <name>an</name> <name>empty</name>
 <name>field</name>

<name>git</name><operator>-</operator><name>svn</name><operator>-</operator><name>id</name><operator>:</operator> <name>https</name><operator>:</operator><comment type="line">//svn.apache.org/repos/asf/lucene/dev/trunk@1292007 13f79535-47bb-0310-9956-ffa450edef68</comment>
<operator>--</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>request</name><operator>/</operator><name><name>UnInvertedField</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>request</name><operator>/</operator><name><name>SimpleFacetsTest</name><operator>.</operator><name>java</name></name> <operator>|</operator> <literal type="number">70</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>-</operator>
 <literal type="number">2</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">70</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">2</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>request</name><operator>/</operator><name><name>UnInvertedField</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>request</name><operator>/</operator><name><name>UnInvertedField</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>af126949bf5</name><operator>..</operator><name>eeba3ded5a2</name> <literal type="number">100755</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>request</name><operator>/</operator><name><name>UnInvertedField</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>request</name><operator>/</operator><name><name>UnInvertedField</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">227</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">227</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>UnInvertedField</name> extends <name>DocTermOrds</name> <block>{
       <expr><name>int</name> <name>endTerm</name> <operator>=</operator> <name>numTermsInField</name></expr>;  <comment type="line">// one past the end</comment>
 
       <expr><name>TermsEnum</name> <name>te</name> <operator>=</operator> <call><name>getOrdTermsEnum</name><argument_list>(<argument><expr><call><name><name>searcher</name><operator>.</operator><name>getAtomicReader</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
      <if_stmt><if>if <condition>(<expr><name>prefix</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>prefix</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><name>te</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <name>prefix</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>prefix</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
         <decl_stmt><decl><type><specifier>final</specifier> <name>BytesRef</name></type> <name>prefixBr</name> <init>= <expr><operator>new</operator> <call><name>BytesRef</name><argument_list>(<argument><expr><name>prefix</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <if_stmt><if>if <condition>(<expr><call><name><name>te</name><operator>.</operator><name>seekCeil</name></name><argument_list>(<argument><expr><name>prefixBr</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call> <operator>==</operator> <name><name>TermsEnum</name><operator>.</operator><name>SeekStatus</name><operator>.</operator><name>END</name></name></expr>)</condition> <block>{<block_content>
           <expr_stmt><expr><name>startTerm</name> <operator>=</operator> <name>numTermsInField</name></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>request</name><operator>/</operator><name><name>SimpleFacetsTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>request</name><operator>/</operator><name><name>SimpleFacetsTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">47f31f6f591</literal><operator>..</operator><name>bc2747c5542</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>request</name><operator>/</operator><name><name>SimpleFacetsTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>request</name><operator>/</operator><name><name>SimpleFacetsTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">17</literal> @@</expr></expr_stmt>
 
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>request</name></name>;</package>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>noggit</name><operator>.</operator><name>ObjectBuilder</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>SolrTestCaseJ4</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>params</name><operator>.</operator><name>ModifiableSolrParams</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>schema</name><operator>.</operator><name>SchemaField</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>BeforeClass</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 
 
 <class><specifier>public</specifier> class <name>SimpleFacetsTest</name> <super_list><extends>extends <super><name>SolrTestCaseJ4</name></super></extends></super_list> <block>{
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">53</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">58</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>SimpleFacetsTest</name> extends <name>SolrTestCaseJ4</name> <block>{
   }</block>
 
 
  <specifier>static</specifier> <name>void</name> <call><name>createIndex</name><argument_list>()</argument_list></call> <block>{
  <expr><specifier>static</specifier> <name>void</name> <call><name>createIndex</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><call><name>doEmptyFacetCounts</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;   <comment type="line">// try on empty index</comment>

     <call><name>indexSimpleFacetCounts</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <constructor_decl><name>indexDateFacets</name><parameter_list>()</parameter_list>;</constructor_decl>
     <constructor_decl><name>indexFacetSingleValued</name><parameter_list>()</parameter_list>;</constructor_decl>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">95</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">102</literal></expr><operator>,</operator><expr><literal type="number">67</literal> @@ <specifier>public</specifier> <name>class</name> <name>SimpleFacetsTest</name> extends <name>SolrTestCaseJ4</name> <block>{
             <expr><literal type="string">"zerolen_s"</literal></expr>,<expr><literal type="string">""</literal></expr>)</block></expr>;</expr_stmt>   
   <expr_stmt/></block></class></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt>}</block>
 
  @<name>Test</name>
  <specifier>public</specifier> <name>void</name> <call><name>testEmptyFacetCounts</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><call><name>doEmptyFacetCounts</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
  }

  <comment type="line">// static so we can try both with and without an empty index</comment>
  static <function><type><name>void</name></type> <name>doEmptyFacetCounts</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name>doEmptyFacetCounts</name><argument_list>(<argument><expr><literal type="string">"empty_t"</literal></expr></argument>, <argument><expr><operator>new</operator> <name><name>String</name><index>[]</index></name><block>{<expr><literal type="null">null</literal></expr>, <expr><literal type="string">"myprefix"</literal></expr>,<expr><literal type="string">""</literal></expr>}</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>doEmptyFacetCounts</name><argument_list>(<argument><expr><literal type="string">"empty_i"</literal></expr></argument>, <argument><expr><operator>new</operator> <name><name>String</name><index>[]</index></name><block>{<expr><literal type="null">null</literal></expr>}</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>doEmptyFacetCounts</name><argument_list>(<argument><expr><literal type="string">"empty_f"</literal></expr></argument>, <argument><expr><operator>new</operator> <name><name>String</name><index>[]</index></name><block>{<expr><literal type="null">null</literal></expr>}</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>doEmptyFacetCounts</name><argument_list>(<argument><expr><literal type="string">"empty_s"</literal></expr></argument>, <argument><expr><operator>new</operator> <name><name>String</name><index>[]</index></name><block>{<expr><literal type="null">null</literal></expr>, <expr><literal type="string">"myprefix"</literal></expr>,<expr><literal type="string">""</literal></expr>}</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>doEmptyFacetCounts</name><argument_list>(<argument><expr><literal type="string">"empty_d"</literal></expr></argument>, <argument><expr><operator>new</operator> <name><name>String</name><index>[]</index></name><block>{<expr><literal type="null">null</literal></expr>}</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>
  
  <function><type><specifier>static</specifier> <name>void</name></type> <name>doEmptyFacetCounts</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>field</name></decl></parameter>, <parameter><decl><type><name><name>String</name><index>[]</index></name></type> <name>prefixes</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>SchemaField</name></type> <name>sf</name> <init>= <expr><call><name><name>h</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getSchema</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getField</name><argument_list>(<argument><expr><name>field</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>String</name></type> <name>response</name> <init>= <expr><call><name>JQ</name><argument_list>(<argument><expr><call><name>req</name><argument_list>(<argument><expr><literal type="string">"q"</literal></expr></argument>, <argument><expr><literal type="string">"*:*"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Map</name></type> <name>rsp</name> <init>= <expr><operator>(</operator><name>Map</name><operator>)</operator> <call><name><name>ObjectBuilder</name><operator>.</operator><name>fromJSON</name></name><argument_list>(<argument><expr><name>response</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Long</name></type> <name>numFound</name>  <init>= <expr><operator>(</operator><name>Long</name><operator>)</operator><operator>(</operator><operator>(</operator><operator>(</operator><name>Map</name><operator>)</operator><call><name><name>rsp</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"response"</literal></expr></argument>)</argument_list></call><operator>)</operator><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"numFound"</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>ModifiableSolrParams</name></type> <name>params</name> <init>= <expr><call><name>params</name><argument_list>(<argument><expr><literal type="string">"q"</literal></expr></argument>,<argument><expr><literal type="string">"*:*"</literal></expr></argument>, <argument><expr><literal type="string">"rows"</literal></expr></argument>,<argument><expr><literal type="string">"0"</literal></expr></argument>, <argument><expr><literal type="string">"facet"</literal></expr></argument>,<argument><expr><literal type="string">"true"</literal></expr></argument>, <argument><expr><literal type="string">"facet.field"</literal></expr></argument>,<argument><expr><literal type="string">"{!key=myalias}"</literal><operator>+</operator><name>field</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    
    <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>methods</name> <init>= <expr><block>{<expr><literal type="null">null</literal></expr>, <expr><literal type="string">"fc"</literal></expr>,<expr><literal type="string">"enum"</literal></expr>,<expr><literal type="string">"fcs"</literal></expr>}</block></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><call><name><name>sf</name><operator>.</operator><name>multiValued</name></name><argument_list>()</argument_list></call> <operator>||</operator> <call><name><name>sf</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>multiValuedFieldCache</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>methods</name> <operator>=</operator> <operator>new</operator> <name><name>String</name><index>[]</index></name><block>{<expr><literal type="null">null</literal></expr>, <expr><literal type="string">"fc"</literal></expr>,<expr><literal type="string">"enum"</literal></expr>}</block></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <expr_stmt><expr><name>prefixes</name> <operator>=</operator> <ternary><condition><expr><name>prefixes</name><operator>==</operator><literal type="null">null</literal></expr> ?</condition><then> <expr><operator>new</operator> <name><name>String</name><index>[]</index></name><block>{<expr><literal type="null">null</literal></expr>}</block></expr> </then><else>: <expr><name>prefixes</name></expr></else></ternary></expr>;</expr_stmt>


    <for>for <control>(<init><decl><type><name>String</name></type> <name>method</name> <range>: <expr><name>methods</name></expr></range></decl></init>)</control> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><name>method</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>params</name><operator>.</operator><name>remove</name></name><argument_list>(<argument><expr><literal type="string">"facet.method"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if> <else>else <block>{<block_content>
        <expr_stmt><expr><call><name><name>params</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"facet.method"</literal></expr></argument>, <argument><expr><name>method</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></else></if_stmt>
      <for>for <control>(<init><decl><type><name>String</name></type> <name>prefix</name> <range>: <expr><name>prefixes</name></expr></range></decl></init>)</control> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name>prefix</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name><name>params</name><operator>.</operator><name>remove</name></name><argument_list>(<argument><expr><literal type="string">"facet.prefix"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if> <else>else <block>{<block_content>
          <expr_stmt><expr><call><name><name>params</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"facet.prefix"</literal></expr></argument>, <argument><expr><name>prefix</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>

        <for>for <control>(<init><decl><type><name>String</name></type> <name>missing</name> <range>: <expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{<expr><literal type="null">null</literal></expr>, <expr><literal type="string">"true"</literal></expr>}</block></expr></range></decl></init>)</control> <block>{<block_content>
          <if_stmt><if>if <condition>(<expr><name>missing</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>params</name><operator>.</operator><name>remove</name></name><argument_list>(<argument><expr><literal type="string">"facet.missing"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          </block_content>}</block></if> <else>else <block>{<block_content>
            <expr_stmt><expr><call><name><name>params</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"facet.missing"</literal></expr></argument>, <argument><expr><name>missing</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          </block_content>}</block></else></if_stmt>
          
          <decl_stmt><decl><type><name>String</name></type> <name>expected</name> <init>= <expr><ternary><condition><expr><name>missing</name><operator>==</operator><literal type="null">null</literal></expr> ?</condition><then> <expr><literal type="string">"[]"</literal></expr> </then><else>: <expr><literal type="string">"[null,"</literal> <operator>+</operator> <name>numFound</name> <operator>+</operator> <literal type="string">"]"</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>
          
          <expr_stmt><expr><call><name>assertJQ</name><argument_list>(<argument><expr><call><name>req</name><argument_list>(<argument><expr><name>params</name></expr></argument>)</argument_list></call></expr></argument>,
              <argument><expr><literal type="string">"/facet_counts/facet_fields/myalias=="</literal> <operator>+</operator> <name>expected</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
      </block_content>}</block></for>
    </block_content>}</block></for>
  </block_content>}</block></function>


   <function><annotation>@<name>Test</name></annotation>
   <type><specifier>public</specifier> <name>void</name></type> <name>testSimpleFacetCounts</name><parameter_list>()</parameter_list> <block>{<block_content>
  
<expr_stmt><expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></expr_stmt></block_content></block></function>

</unit>
