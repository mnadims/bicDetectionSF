<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/lucene/8f54a18e1a.java"><expr_stmt><expr><name>From</name> <literal type="number">8f54a18e1a3af5d339e66e370c422033cf21915f</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Adrien</name> <name><name>Grand</name> <argument_list type="generic">&lt;<argument><name>jpountz</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Wed</name></expr><operator>,</operator> <expr><literal type="number">12</literal> <name>Dec</name> <literal type="number">2012</literal> <literal type="number">18</literal><operator>:</operator><literal type="number">40</literal><operator>:</operator><literal type="number">58</literal> <operator>+</operator><literal type="number">0000</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>LUCENE</name><operator>-</operator><literal type="number">4613</literal><operator>:</operator> <name>CompressingStoredFieldsFormat</name><operator>:</operator> <call><name><name>fix</name> <operator>.</operator><name>abort</name></name><argument_list>()</argument_list></call> <name>when</name>
 <name>the</name> <name>segment</name> <name>suffix</name> <name>is</name> <name>not</name> <name><name>empty</name><operator>.</operator>

<name>git</name></name><operator>-</operator><name>svn</name><operator>-</operator><name>id</name><operator>:</operator> <name>https</name><operator>:</operator><comment type="line">//svn.apache.org/repos/asf/lucene/dev/trunk@1420907 13f79535-47bb-0310-9956-ffa450edef68</comment>
<operator>--</operator>
 <operator>...</operator><operator>/</operator><name><name>CompressingStoredFieldsFormat</name><operator>.</operator><name>java</name></name>        <operator>|</operator> <literal type="number">24</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name><name>CompressingStoredFieldsWriter</name><operator>.</operator><name>java</name></name>        <operator>|</operator>  <literal type="number">6</literal> <operator>++</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>TestCompressingStoredFieldsFormat</name><operator>.</operator><name>java</name></name>    <operator>|</operator> <literal type="number">37</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator>
 <operator>...</operator><operator>/</operator><name>codecs</name><operator>/</operator><name>compressing</name><operator>/</operator><name><name>CompressingCodec</name><operator>.</operator><name>java</name></name>  <operator>|</operator> <literal type="number">37</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>compressing</name><operator>/</operator><name><name>DummyCompressingCodec</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">8</literal> <operator>++</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>compressing</name><operator>/</operator><name><name>FastCompressingCodec</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">8</literal> <operator>++</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name><name>FastDecompressionCompressingCodec</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">8</literal> <operator>++</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name><name>HighCompressionCompressingCodec</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">8</literal> <operator>++</operator><operator>--</operator>
 <literal type="number">8</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">111</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">25</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>codecs</name><operator>/</operator><name>compressing</name><operator>/</operator><name><name>CompressingStoredFieldsFormat</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>codecs</name><operator>/</operator><name>compressing</name><operator>/</operator><name><name>CompressingStoredFieldsFormat</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">8e0237a4de4</literal><operator>..</operator><name>d8cf4692cbf</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>codecs</name><operator>/</operator><name>compressing</name><operator>/</operator><name><name>CompressingStoredFieldsFormat</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>codecs</name><operator>/</operator><name>compressing</name><operator>/</operator><name><name>CompressingStoredFieldsFormat</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">48</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">48</literal></expr><operator>,</operator><expr><literal type="number">20</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>IOContext</name></name>;</import>
 <class><specifier>public</specifier> class <name>CompressingStoredFieldsFormat</name> <super_list><extends>extends <super><name>StoredFieldsFormat</name></super></extends></super_list> <block>{
 
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>String</name></type> <name>formatName</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>String</name></type> <name>segmentSuffix</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>CompressionMode</name></type> <name>compressionMode</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>int</name></type> <name>chunkSize</name></decl>;</decl_stmt>
 
  <comment type="block" format="javadoc">/**
   * Create a new {@link CompressingStoredFieldsFormat} with an empty segment 
   * suffix.
   * 
   * @see CompressingStoredFieldsFormat#CompressingStoredFieldsFormat(String, String, CompressionMode, int)
   */</comment>
  <constructor><specifier>public</specifier> <name>CompressingStoredFieldsFormat</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>formatName</name></decl></parameter>, <parameter><decl><type><name>CompressionMode</name></type> <name>compressionMode</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>chunkSize</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>this</name><argument_list>(<argument><expr><name>formatName</name></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><name>compressionMode</name></expr></argument>, <argument><expr><name>chunkSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></constructor>
  
   <comment type="block" format="javadoc">/**
    * Create a new {@link CompressingStoredFieldsFormat}.
    * &lt;p&gt;
@@ -58,6 +69,9 @@ public class CompressingStoredFieldsFormat extends StoredFieldsFormat {
    * in the file formats to perform
    * {@link CodecUtil#checkHeader(org.apache.lucene.store.DataInput, String, int, int) codec header checks}.
    * &lt;p&gt;
   * &lt;code&gt;segmentSuffix&lt;/code&gt; is the segment suffix. This suffix is added to 
   * the result file name only if it's not the empty string.
   * &lt;p&gt;
    * The &lt;code&gt;compressionMode&lt;/code&gt; parameter allows you to choose between
    * compression algorithms that have various compression and decompression
    * speeds so that you can pick the one that best fits your indexing and
@@ -81,25 +95,29 @@ public class CompressingStoredFieldsFormat extends StoredFieldsFormat {
    * @param chunkSize the minimum number of bytes of a single chunk of stored documents
    * @see CompressionMode
    */</comment>
  <constructor><specifier>public</specifier> <name>CompressingStoredFieldsFormat</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>formatName</name></decl></parameter>, <parameter><decl><type><name>CompressionMode</name></type> <name>compressionMode</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>chunkSize</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <constructor><specifier>public</specifier> <name>CompressingStoredFieldsFormat</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>formatName</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>segmentSuffix</name></decl></parameter>, 
                                       <parameter><decl><type><name>CompressionMode</name></type> <name>compressionMode</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>chunkSize</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <expr_stmt><expr><name><name>this</name><operator>.</operator><name>formatName</name></name> <operator>=</operator> <name>formatName</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>segmentSuffix</name></name> <operator>=</operator> <name>segmentSuffix</name></expr>;</expr_stmt>
     <expr_stmt><expr><name><name>this</name><operator>.</operator><name>compressionMode</name></name> <operator>=</operator> <name>compressionMode</name></expr>;</expr_stmt>
     <if_stmt><if>if <condition>(<expr><name>chunkSize</name> <operator>&lt;</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>
       <throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><literal type="string">"chunkSize must be &gt;= 1"</literal></expr></argument>)</argument_list></call></expr>;</throw>
     </block_content>}</block></if></if_stmt>
     <expr_stmt><expr><name><name>this</name><operator>.</operator><name>chunkSize</name></name> <operator>=</operator> <name>chunkSize</name></expr>;</expr_stmt>
    
   </block_content>}</block></constructor>
 
   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>public</specifier> <name>StoredFieldsReader</name></type> <name>fieldsReader</name><parameter_list>(<parameter><decl><type><name>Directory</name></type> <name>directory</name></decl></parameter>, <parameter><decl><type><name>SegmentInfo</name></type> <name>si</name></decl></parameter>,
       <parameter><decl><type><name>FieldInfos</name></type> <name>fn</name></decl></parameter>, <parameter><decl><type><name>IOContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <return>return <expr><operator>new</operator> <call><name>CompressingStoredFieldsReader</name><argument_list>(<argument><expr><name>directory</name></expr></argument>, <argument><expr><name>si</name></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><name>fn</name></expr></argument>, <argument><expr><name>context</name></expr></argument>, <argument><expr><name>formatName</name></expr></argument>, <argument><expr><name>compressionMode</name></expr></argument>)</argument_list></call></expr>;</return>
    <return>return <expr><operator>new</operator> <call><name>CompressingStoredFieldsReader</name><argument_list>(<argument><expr><name>directory</name></expr></argument>, <argument><expr><name>si</name></expr></argument>, <argument><expr><name>segmentSuffix</name></expr></argument>, <argument><expr><name>fn</name></expr></argument>, 
        <argument><expr><name>context</name></expr></argument>, <argument><expr><name>formatName</name></expr></argument>, <argument><expr><name>compressionMode</name></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
 
   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>public</specifier> <name>StoredFieldsWriter</name></type> <name>fieldsWriter</name><parameter_list>(<parameter><decl><type><name>Directory</name></type> <name>directory</name></decl></parameter>, <parameter><decl><type><name>SegmentInfo</name></type> <name>si</name></decl></parameter>,
       <parameter><decl><type><name>IOContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <return>return <expr><operator>new</operator> <call><name>CompressingStoredFieldsWriter</name><argument_list>(<argument><expr><name>directory</name></expr></argument>, <argument><expr><name>si</name></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><name>context</name></expr></argument>,
    return <argument><expr><operator>new</operator> <call><name>CompressingStoredFieldsWriter</name><argument_list>(<argument><expr><name>directory</name></expr></argument>, <argument><expr><name>si</name></expr></argument>, <argument><expr><name>segmentSuffix</name></expr></argument>, <argument><expr><name>context</name></expr></argument>,
         <argument><expr><name>formatName</name></expr></argument>, <argument><expr><name>compressionMode</name></expr></argument>, <argument><expr><name>chunkSize</name></expr></argument>)</argument_list></call></expr></argument>;</argument_list></call></expr></return>
   </block_content>}</block></function>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>codecs</name><operator>/</operator><name>compressing</name><operator>/</operator><name><name>CompressingStoredFieldsWriter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>codecs</name><operator>/</operator><name>compressing</name><operator>/</operator><name><name>CompressingStoredFieldsWriter</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">92233d71b23</literal><operator>..</operator><name>d1bf861e9ea</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>codecs</name><operator>/</operator><name>compressing</name><operator>/</operator><name><name>CompressingStoredFieldsWriter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>codecs</name><operator>/</operator><name>compressing</name><operator>/</operator><name><name>CompressingStoredFieldsWriter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">70</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">70</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>CompressingStoredFieldsWriter</name> extends <name>StoredFieldsWriter</name> <block>{
 
   <expr><specifier>private</specifier> <name>final</name> <name>Directory</name> <name>directory</name></expr>;
   <expr><specifier>private</specifier> <name>final</name> <name>String</name> <name>segment</name></expr>;
  <expr><specifier>private</specifier> <name>final</name> <name>String</name> <name>segmentSuffix</name></expr>;
   <expr><specifier>private</specifier> <name>CompressingStoredFieldsIndexWriter</name> <name>indexWriter</name></expr>;
   <expr><specifier>private</specifier> <name>IndexOutput</name> <name>fieldsStream</name></expr>;
 
@@ <expr><operator>-</operator><literal type="number">89</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">90</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>CompressingStoredFieldsWriter</name> extends <name>StoredFieldsWriter</name> <block>{
     <assert>assert <expr><name>directory</name> <operator>!=</operator> <literal type="null">null</literal></expr>;</assert>
     <name><name>this</name><operator>.</operator><name>directory</name></name> <operator>=</operator> <name>directory</name></block></expr>;
     <expr><name><name>this</name><operator>.</operator><name>segment</name></name> <operator>=</operator> <name><name>si</name><operator>.</operator><name>name</name></name></expr>;
    <expr><name><name>this</name><operator>.</operator><name>segmentSuffix</name></name> <operator>=</operator> <name>segmentSuffix</name></expr>;
     <expr><name><name>this</name><operator>.</operator><name>compressionMode</name></name> <operator>=</operator> <name>compressionMode</name></expr>;
     <expr><name><name>this</name><operator>.</operator><name>compressor</name></name> <operator>=</operator> <call><name><name>compressionMode</name><operator>.</operator><name>newCompressor</name></name><argument_list>()</argument_list></call></expr>;
     <expr><name><name>this</name><operator>.</operator><name>chunkSize</name></name> <operator>=</operator> <name>chunkSize</name></expr>;
@@ <expr><operator>-</operator><literal type="number">287</literal></expr>,<expr><literal type="number">8</literal> <operator>+</operator><literal type="number">289</literal></expr>,<expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>CompressingStoredFieldsWriter</name> extends <name>StoredFieldsWriter</name> <block>{
   <expr><specifier>public</specifier> <name>void</name> <call><name>abort</name><argument_list>()</argument_list></call> <block>{
     <expr><call><name><name>IOUtils</name><operator>.</operator><name>closeWhileHandlingException</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name><name>IOUtils</name><operator>.</operator><name>deleteFilesIgnoringExceptions</name></name><argument_list>(<argument><expr><name>directory</name></expr></argument>,
        <argument><expr><call><name><name>IndexFileNames</name><operator>.</operator><name>segmentFileName</name></name><argument_list>(<argument><expr><name>segment</name></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><name>FIELDS_EXTENSION</name></expr></argument>)</argument_list></call></expr></argument>,
        <argument><expr><call><name><name>IndexFileNames</name><operator>.</operator><name>segmentFileName</name></name><argument_list>(<argument><expr><name>segment</name></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><name>FIELDS_INDEX_EXTENSION</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>IndexFileNames</name><operator>.</operator><name>segmentFileName</name></name><argument_list>(<argument><expr><name>segment</name></expr></argument>, <argument><expr><name>segmentSuffix</name></expr></argument>, <argument><expr><name>FIELDS_EXTENSION</name></expr></argument>)</argument_list></call></expr>,
        <expr><call><name><name>IndexFileNames</name><operator>.</operator><name>segmentFileName</name></name><argument_list>(<argument><expr><name>segment</name></expr></argument>, <argument><expr><name>segmentSuffix</name></expr></argument>, <argument><expr><name>FIELDS_INDEX_EXTENSION</name></expr></argument>)</argument_list></call></expr>)</block></expr>;
   }</block>
 
   @<name>Override</name>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>codecs</name><operator>/</operator><name>compressing</name><operator>/</operator><name><name>TestCompressingStoredFieldsFormat</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>codecs</name><operator>/</operator><name>compressing</name><operator>/</operator><name><name>TestCompressingStoredFieldsFormat</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>fe7a8b854b4</name><operator>..</operator><literal type="number">0ed7cbea59c</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>codecs</name><operator>/</operator><name>compressing</name><operator>/</operator><name><name>TestCompressingStoredFieldsFormat</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>codecs</name><operator>/</operator><name>compressing</name><operator>/</operator><name><name>TestCompressingStoredFieldsFormat</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">54</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">54</literal></expr>,<expr><literal type="number">7</literal> @@</expr> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>BytesRef</name></name>;</import></block></expr></expr_stmt>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>IOUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>LuceneTestCase</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>_TestUtil</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>
 
 <import>import <name><name>com</name><operator>.</operator><name>carrotsearch</name><operator>.</operator><name>randomizedtesting</name><operator>.</operator><name>generators</name><operator>.</operator><name>RandomInts</name></name>;</import>
 <import>import <name><name>com</name><operator>.</operator><name>carrotsearch</name><operator>.</operator><name>randomizedtesting</name><operator>.</operator><name>generators</name><operator>.</operator><name>RandomPicks</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">362</literal></expr><operator>,</operator><expr><literal type="number">5</literal> <operator>+</operator><literal type="number">363</literal></expr><operator>,</operator><expr><literal type="number">41</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestCompressingStoredFieldsFormat</name> extends <name>LuceneTestCase</name> <block>{
     }</block>
     <call><name><name>rd</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></constructor>
  
  <function><annotation>@<name>Test</name><argument_list>(<argument><expr><name>expected</name><operator>=</operator><name><name>IllegalArgumentException</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testDeletePartiallyWrittenFilesIfAbort</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><specifier>final</specifier> <name>Document</name></type> <name>validDoc</name> <init>= <expr><operator>new</operator> <call><name>Document</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>validDoc</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>IntField</name><argument_list>(<argument><expr><literal type="string">"id"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name><name>Store</name><operator>.</operator><name>YES</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>iw</name><operator>.</operator><name>addDocument</name></name><argument_list>(<argument><expr><name>validDoc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>iw</name><operator>.</operator><name>commit</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    
    <comment type="line">// make sure that #writeField will fail to trigger an abort</comment>
    <decl_stmt><decl><type><specifier>final</specifier> <name>Document</name></type> <name>invalidDoc</name> <init>= <expr><operator>new</operator> <call><name>Document</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>FieldType</name></type> <name>fieldType</name> <init>= <expr><operator>new</operator> <call><name>FieldType</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>fieldType</name><operator>.</operator><name>setStored</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>invalidDoc</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>Field</name></super><argument_list>(<argument><expr><literal type="string">"invalid"</literal></expr></argument>, <argument><expr><name>fieldType</name></expr></argument>)</argument_list> <block>{
      
      <function><annotation>@<name>Override</name></annotation>
      <type><specifier>public</specifier> <name>String</name></type> <name>stringValue</name><parameter_list>()</parameter_list> <block>{<block_content>
        <return>return <expr><literal type="null">null</literal></expr>;</return>
      </block_content>}</block></function>
      
    }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    
    <try>try <block>{<block_content>
      <expr_stmt><expr><call><name><name>iw</name><operator>.</operator><name>addDocument</name></name><argument_list>(<argument><expr><name>invalidDoc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>iw</name><operator>.</operator><name>commit</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block>
    <finally>finally <block>{<block_content>
      <decl_stmt><decl><type><name>int</name></type> <name>counter</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
      <for>for <control>(<init><decl><type><name>String</name></type> <name>fileName</name> <range>: <expr><call><name><name>dir</name><operator>.</operator><name>listAll</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><call><name><name>fileName</name><operator>.</operator><name>endsWith</name></name><argument_list>(<argument><expr><literal type="string">".fdt"</literal></expr></argument>)</argument_list></call> <operator>||</operator> <call><name><name>fileName</name><operator>.</operator><name>endsWith</name></name><argument_list>(<argument><expr><literal type="string">".fdx"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><name>counter</name><operator>++</operator></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
      </block_content>}</block></for>
      <comment type="line">// Only one .fdt and one .fdx files must have been found</comment>
      <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name>counter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></finally></try>
  </block_content>}</block></function>
 
 }</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>codecs</name><operator>/</operator><name>compressing</name><operator>/</operator><name><name>CompressingCodec</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>codecs</name><operator>/</operator><name>compressing</name><operator>/</operator><name><name>CompressingCodec</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>e9eb48a400b</name><operator>..</operator><literal type="number">6a67dc34e56</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>codecs</name><operator>/</operator><name>compressing</name><operator>/</operator><name><name>CompressingCodec</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>codecs</name><operator>/</operator><name>compressing</name><operator>/</operator><name><name>CompressingCodec</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">34</literal></expr><operator>,</operator><expr><literal type="number">30</literal> <operator>+</operator><literal type="number">34</literal></expr><operator>,</operator><expr><literal type="number">51</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>CompressingCodec</name> extends <name>FilterCodec</name> <block>{
   <comment type="block" format="javadoc">/**
    * Create a random instance.
    */</comment>
  <expr><specifier>public</specifier> <specifier>static</specifier> <name>CompressingCodec</name> <call><name>randomInstance</name><argument_list>(<argument><expr><name>Random</name> <name>random</name></expr></argument>, <argument><expr><name>int</name> <name>chunkSize</name></expr></argument>)</argument_list></call> <block>{
  <expr><specifier>public</specifier> <specifier>static</specifier> <name>CompressingCodec</name> <call><name>randomInstance</name><argument_list>(<argument><expr><name>Random</name> <name>random</name></expr></argument>, <argument><expr><name>int</name> <name>chunkSize</name></expr></argument>, <argument><expr><name>boolean</name> <name>withSegmentSuffix</name></expr></argument>)</argument_list></call> <block>{
     <switch>switch <condition>(<expr><call><name><name>random</name><operator>.</operator><name>nextInt</name></name><argument_list>(<argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
     <case>case <expr><literal type="number">0</literal></expr>:</case>
      <return>return <expr><operator>new</operator> <call><name>FastCompressingCodec</name><argument_list>(<argument><expr><name>chunkSize</name></expr></argument>)</argument_list></call></expr>;</return>
      <return>return <expr><operator>new</operator> <call><name>FastCompressingCodec</name><argument_list>(<argument><expr><name>chunkSize</name></expr></argument>, <argument><expr><name>withSegmentSuffix</name></expr></argument>)</argument_list></call></expr>;</return>
     <case>case <expr><literal type="number">1</literal></expr>:</case>
      <return>return <expr><operator>new</operator> <call><name>FastDecompressionCompressingCodec</name><argument_list>(<argument><expr><name>chunkSize</name></expr></argument>)</argument_list></call></expr>;</return>
      <return>return <expr><operator>new</operator> <call><name>FastDecompressionCompressingCodec</name><argument_list>(<argument><expr><name>chunkSize</name></expr></argument>, <argument><expr><name>withSegmentSuffix</name></expr></argument>)</argument_list></call></expr>;</return>
     <case>case <expr><literal type="number">2</literal></expr>:</case>
      <return>return <expr><operator>new</operator> <call><name>HighCompressionCompressingCodec</name><argument_list>(<argument><expr><name>chunkSize</name></expr></argument>)</argument_list></call></expr>;</return>
      <return>return <expr><operator>new</operator> <call><name>HighCompressionCompressingCodec</name><argument_list>(<argument><expr><name>chunkSize</name></expr></argument>, <argument><expr><name>withSegmentSuffix</name></expr></argument>)</argument_list></call></expr>;</return>
     <case>case <expr><literal type="number">3</literal></expr>:</case>
      <return>return <expr><operator>new</operator> <call><name>DummyCompressingCodec</name><argument_list>(<argument><expr><name>chunkSize</name></expr></argument>)</argument_list></call></expr>;</return>
      <return>return <expr><operator>new</operator> <call><name>DummyCompressingCodec</name><argument_list>(<argument><expr><name>chunkSize</name></expr></argument>, <argument><expr><name>withSegmentSuffix</name></expr></argument>)</argument_list></call></expr>;</return>
     <default>default:</default>
       <throw>throw <expr><operator>new</operator> <call><name>AssertionError</name><argument_list>()</argument_list></call></expr>;</throw>
     <expr_stmt/></block_content></block></switch>}</block></expr>
   }</block>
 
  <comment type="block" format="javadoc">/**
   * Creates a random {@link CompressingCodec} that is using an empty segment 
   * suffix
   */</comment>
   <specifier>public</specifier> <specifier>static</specifier> <name>CompressingCodec</name> <call><name>randomInstance</name><argument_list>(<argument><expr><name>Random</name> <name>random</name></expr></argument>)</argument_list></call> <block>{
    <return>return <expr><call><name>randomInstance</name><argument_list>(<argument><expr><name>random</name></expr></argument>, <argument><expr><call><name><name>RandomInts</name><operator>.</operator><name>randomIntBetween</name></name><argument_list>(<argument><expr><name>random</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">500</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return></block></expr>
    <return>return <expr><call><name>randomInstance</name><argument_list>(<argument><expr><name>random</name></expr></argument>, <argument><expr><call><name><name>RandomInts</name><operator>.</operator><name>randomIntBetween</name></name><argument_list>(<argument><expr><name>random</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">500</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</return>
  }</block></expr></expr_stmt>
  
  <comment type="block" format="javadoc">/**
   * Creates a random {@link CompressingCodec} that is using a segment suffix
   */</comment>
  <function><type><specifier>public</specifier> <specifier>static</specifier> <name>CompressingCodec</name></type> <name>randomInstance</name><parameter_list>(<parameter><decl><type><name>Random</name></type> <name>random</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>withSegmentSuffix</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <return>return <expr><call><name>randomInstance</name><argument_list>(<argument><expr><name>random</name></expr></argument>, <argument><expr><call><name><name>RandomInts</name><operator>.</operator><name>randomIntBetween</name></name><argument_list>(<argument><expr><name>random</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">500</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>withSegmentSuffix</name></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
 
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>CompressingStoredFieldsFormat</name></type> <name>storedFieldsFormat</name></decl>;</decl_stmt>
 
  <constructor><specifier>public</specifier> <name>CompressingCodec</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>name</name></decl></parameter>, <parameter><decl><type><name>CompressionMode</name></type> <name>compressionMode</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>chunkSize</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <comment type="block" format="javadoc">/**
   * Creates a compressing codec with a given segment suffix
   */</comment>
  <constructor><specifier>public</specifier> <name>CompressingCodec</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>name</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>segmentSuffix</name></decl></parameter>, <parameter><decl><type><name>CompressionMode</name></type> <name>compressionMode</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>chunkSize</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>Lucene41Codec</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>storedFieldsFormat</name></name> <operator>=</operator> <operator>new</operator> <call><name>CompressingStoredFieldsFormat</name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><name>compressionMode</name></expr></argument>, <argument><expr><name>chunkSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>storedFieldsFormat</name></name> <operator>=</operator> <operator>new</operator> <call><name>CompressingStoredFieldsFormat</name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><name>segmentSuffix</name></expr></argument>, <argument><expr><name>compressionMode</name></expr></argument>, <argument><expr><name>chunkSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></constructor>
  
  <comment type="block" format="javadoc">/**
   * Creates a compressing codec with an empty segment suffix
   */</comment>
  <constructor><specifier>public</specifier> <name>CompressingCodec</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>name</name></decl></parameter>, <parameter><decl><type><name>CompressionMode</name></type> <name>compressionMode</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>chunkSize</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>this</name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><name>compressionMode</name></expr></argument>, <argument><expr><name>chunkSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></constructor>
 
   <annotation>@<name>Override</name></annotation>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>codecs</name><operator>/</operator><name>compressing</name><operator>/</operator><name><name>DummyCompressingCodec</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>codecs</name><operator>/</operator><name>compressing</name><operator>/</operator><name><name>DummyCompressingCodec</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">9def78ff143</literal><operator>..</operator><name>a989bd87365</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>codecs</name><operator>/</operator><name>compressing</name><operator>/</operator><name><name>DummyCompressingCodec</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>codecs</name><operator>/</operator><name>compressing</name><operator>/</operator><name><name>DummyCompressingCodec</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">82</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">82</literal></expr><operator>,</operator><expr><literal type="number">15</literal> @@ <specifier>public</specifier> <name>class</name> <name>DummyCompressingCodec</name> extends <name>CompressingCodec</name> <block>{
   }</block></expr>;</expr_stmt>
 
   <comment type="block" format="javadoc">/** Constructor that allows to configure the chunk size. */</comment>
  <constructor><specifier>public</specifier> <name>DummyCompressingCodec</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>chunkSize</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><literal type="string">"DummyCompressingStoredFields"</literal></expr></argument>, <argument><expr><name>DUMMY</name></expr></argument>, <argument><expr><name>chunkSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <constructor><specifier>public</specifier> <name>DummyCompressingCodec</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>chunkSize</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>withSegmentSuffix</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><literal type="string">"DummyCompressingStoredFields"</literal></expr></argument>,
          <argument><expr><ternary><condition><expr><name>withSegmentSuffix</name></expr> ?</condition><then> <expr><literal type="string">"DummyCompressingStoredFields"</literal></expr> </then><else>: <expr><literal type="string">""</literal></expr></else></ternary></expr></argument>,
          <argument><expr><name>DUMMY</name></expr></argument>, <argument><expr><name>chunkSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></constructor>
 
   <comment type="block" format="javadoc">/** Default constructor. */</comment>
   <constructor><specifier>public</specifier> <name>DummyCompressingCodec</name><parameter_list>()</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>this</name><argument_list>(<argument><expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>this</name><argument_list>(<argument><expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">14</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></constructor>
 
 </block_content>}</block></constructor>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>codecs</name><operator>/</operator><name>compressing</name><operator>/</operator><name><name>FastCompressingCodec</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>codecs</name><operator>/</operator><name>compressing</name><operator>/</operator><name><name>FastCompressingCodec</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">91bf277911e</literal><operator>..</operator><literal type="number">252ba5d0fa3</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>codecs</name><operator>/</operator><name>compressing</name><operator>/</operator><name><name>FastCompressingCodec</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>codecs</name><operator>/</operator><name>compressing</name><operator>/</operator><name><name>FastCompressingCodec</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">15</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>codecs</name><operator>.</operator><name>compressing</name></name>;</package>
 <class><specifier>public</specifier> class <name>FastCompressingCodec</name> <super_list><extends>extends <super><name>CompressingCodec</name></super></extends></super_list> <block>{
 
   <comment type="block" format="javadoc">/** Constructor that allows to configure the chunk size. */</comment>
  <constructor><specifier>public</specifier> <name>FastCompressingCodec</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>chunkSize</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><literal type="string">"FastCompressingStoredFields"</literal></expr></argument>, <argument><expr><name><name>CompressionMode</name><operator>.</operator><name>FAST</name></name></expr></argument>, <argument><expr><name>chunkSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <constructor><specifier>public</specifier> <name>FastCompressingCodec</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>chunkSize</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>withSegmentSuffix</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><literal type="string">"FastCompressingStoredFields"</literal></expr></argument>, 
          <argument><expr><ternary><condition><expr><name>withSegmentSuffix</name></expr> ?</condition><then> <expr><literal type="string">"FastCompressingStoredFields"</literal></expr> </then><else>: <expr><literal type="string">""</literal></expr></else></ternary></expr></argument>,
          <argument><expr><name><name>CompressionMode</name><operator>.</operator><name>FAST</name></name></expr></argument>, <argument><expr><name>chunkSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></constructor>
 
   <comment type="block" format="javadoc">/** Default constructor. */</comment>
   <constructor><specifier>public</specifier> <name>FastCompressingCodec</name><parameter_list>()</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>this</name><argument_list>(<argument><expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>this</name><argument_list>(<argument><expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">14</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></constructor>
 
 </block_content>}</block></constructor>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>codecs</name><operator>/</operator><name>compressing</name><operator>/</operator><name><name>FastDecompressionCompressingCodec</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>codecs</name><operator>/</operator><name>compressing</name><operator>/</operator><name><name>FastDecompressionCompressingCodec</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">25dc868e3e2</literal><operator>..</operator><literal type="number">568a649289e</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>codecs</name><operator>/</operator><name>compressing</name><operator>/</operator><name><name>FastDecompressionCompressingCodec</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>codecs</name><operator>/</operator><name>compressing</name><operator>/</operator><name><name>FastDecompressionCompressingCodec</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">15</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>codecs</name><operator>.</operator><name>compressing</name></name>;</package>
 <class><specifier>public</specifier> class <name>FastDecompressionCompressingCodec</name> <super_list><extends>extends <super><name>CompressingCodec</name></super></extends></super_list> <block>{
 
   <comment type="block" format="javadoc">/** Constructor that allows to configure the chunk size. */</comment>
  <constructor><specifier>public</specifier> <name>FastDecompressionCompressingCodec</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>chunkSize</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><literal type="string">"FastDecompressionCompressingStoredFields"</literal></expr></argument>, <argument><expr><name><name>CompressionMode</name><operator>.</operator><name>FAST_DECOMPRESSION</name></name></expr></argument>, <argument><expr><name>chunkSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <constructor><specifier>public</specifier> <name>FastDecompressionCompressingCodec</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>chunkSize</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>withSegmentSuffix</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><literal type="string">"FastDecompressionCompressingStoredFields"</literal></expr></argument>,
          <argument><expr><ternary><condition><expr><name>withSegmentSuffix</name></expr> ?</condition><then> <expr><literal type="string">"FastDecompressionCompressingStoredFields"</literal></expr> </then><else>: <expr><literal type="string">""</literal></expr></else></ternary></expr></argument>,
          <argument><expr><name><name>CompressionMode</name><operator>.</operator><name>FAST_DECOMPRESSION</name></name></expr></argument>, <argument><expr><name>chunkSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></constructor>
 
   <comment type="block" format="javadoc">/** Default constructor. */</comment>
   <constructor><specifier>public</specifier> <name>FastDecompressionCompressingCodec</name><parameter_list>()</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>this</name><argument_list>(<argument><expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>this</name><argument_list>(<argument><expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">14</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></constructor>
 
 </block_content>}</block></constructor>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>codecs</name><operator>/</operator><name>compressing</name><operator>/</operator><name><name>HighCompressionCompressingCodec</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>codecs</name><operator>/</operator><name>compressing</name><operator>/</operator><name><name>HighCompressionCompressingCodec</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>abb518e0eef</name><operator>..</operator><name>fb235f95218</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>codecs</name><operator>/</operator><name>compressing</name><operator>/</operator><name><name>HighCompressionCompressingCodec</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>codecs</name><operator>/</operator><name>compressing</name><operator>/</operator><name><name>HighCompressionCompressingCodec</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">15</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>codecs</name><operator>.</operator><name>compressing</name></name>;</package>
 <class><specifier>public</specifier> class <name>HighCompressionCompressingCodec</name> <super_list><extends>extends <super><name>CompressingCodec</name></super></extends></super_list> <block>{
 
   <comment type="block" format="javadoc">/** Constructor that allows to configure the chunk size. */</comment>
  <constructor><specifier>public</specifier> <name>HighCompressionCompressingCodec</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>chunkSize</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><literal type="string">"HighCompressionCompressingStoredFields"</literal></expr></argument>, <argument><expr><name><name>CompressionMode</name><operator>.</operator><name>HIGH_COMPRESSION</name></name></expr></argument>, <argument><expr><name>chunkSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <constructor><specifier>public</specifier> <name>HighCompressionCompressingCodec</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>chunkSize</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>withSegmentSuffix</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><literal type="string">"HighCompressionCompressingStoredFields"</literal></expr></argument>,
          <argument><expr><ternary><condition><expr><name>withSegmentSuffix</name></expr> ?</condition><then> <expr><literal type="string">"HighCompressionCompressingStoredFields"</literal></expr> </then><else>: <expr><literal type="string">""</literal></expr></else></ternary></expr></argument>,
          <argument><expr><name><name>CompressionMode</name><operator>.</operator><name>HIGH_COMPRESSION</name></name></expr></argument>, <argument><expr><name>chunkSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></constructor>
 
   <comment type="block" format="javadoc">/** Default constructor. */</comment>
   <constructor><specifier>public</specifier> <name>HighCompressionCompressingCodec</name><parameter_list>()</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>this</name><argument_list>(<argument><expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>this</name><argument_list>(<argument><expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">14</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></constructor>
 
 </block_content>}</block></constructor>
<expr_stmt><expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></expr_stmt></block></class></block></class></block></class></block_content></block></constructor>

</unit>
