<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/lucene/1904003fac.java"><expr_stmt><expr><name>From</name> <literal type="number">1904003fac4e9810737490d3b921294b13095fc3</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Michael</name> <name><name>McCandless</name> <argument_list type="generic">&lt;<argument><name>mikemccand</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Fri</name></expr><operator>,</operator> <expr><literal type="number">30</literal> <name>Jul</name> <literal type="number">2010</literal> <literal type="number">18</literal><operator>:</operator><literal type="number">27</literal><operator>:</operator><literal type="number">40</literal> <operator>+</operator><literal type="number">0000</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>LUCENE</name><operator>-</operator><literal type="number">2580</literal><operator>:</operator> <name>fix</name> <name>AIOOBE</name> <name>in</name> <name>MultiPhraseQuery</name>

<name>git</name><operator>-</operator><name>svn</name><operator>-</operator><name>id</name><operator>:</operator> <name>https</name><operator>:</operator><comment type="line">//svn.apache.org/repos/asf/lucene/dev/trunk@980911 13f79535-47bb-0310-9956-ffa450edef68</comment>
<operator>--</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>MultiPhraseQuery</name><operator>.</operator><name>java</name></name>     <operator>|</operator> <literal type="number">10</literal> <operator>++</operator><operator>++</operator><operator>+</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <literal type="number">1</literal> <name>file</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">5</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">5</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>MultiPhraseQuery</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>MultiPhraseQuery</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>b25c3b61b42</name><operator>..</operator><name>f3be46b70f2</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>MultiPhraseQuery</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>MultiPhraseQuery</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">175</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">175</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>MultiPhraseQuery</name> extends <name>Query</name> <block>{
       
       <expr><name><name>PhraseQuery</name><operator>.</operator><name>PostingsAndFreq</name><index>[]</index></name> <name>postingsFreqs</name> <operator>=</operator> <operator>new</operator> <name><name>PhraseQuery</name><operator>.</operator><name>PostingsAndFreq</name><index>[<expr><call><name><name>termArrays</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>]</index></name></expr>;
 
      <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name><name>postingsFreqs</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
        <decl_stmt><decl><type><name><name>Term</name><index>[]</index></name></type> <name>terms</name> <init>= <expr><call><name><name>termArrays</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <for>for <control>(<init><decl><type><name>int</name></type> <name>pos</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>pos</name><operator>&lt;</operator><name><name>postingsFreqs</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>pos</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
        <decl_stmt><decl><type><name><name>Term</name><index>[]</index></name></type> <name>terms</name> <init>= <expr><call><name><name>termArrays</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>pos</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
         <decl_stmt><decl><type><specifier>final</specifier> <name>DocsAndPositionsEnum</name></type> <name>postingsEnum</name></decl>;</decl_stmt>
         <decl_stmt><decl><type><name>int</name></type> <name>docFreq</name></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">187</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">187</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>MultiPhraseQuery</name> extends <name>Query</name> <block>{
           <comment type="line">// coarse -- this overcounts since a given doc can</comment>
           <comment type="line">// have more than one terms:</comment>
           <expr><name>docFreq</name> <operator>=</operator> <literal type="number">0</literal></expr>;
          <for>for<control>(<init><decl><type><name>int</name></type> <name>j</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>j</name><operator>&lt;</operator><name><name>terms</name><operator>.</operator><name>length</name></name></expr>;</condition><incr><expr><name>j</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
            <expr_stmt><expr><name>docFreq</name> <operator>+=</operator> <call><name><name>reader</name><operator>.</operator><name>docFreq</name></name><argument_list>(<argument><expr><name><name>terms</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <for>for<control>(<init><decl><type><name>int</name></type> <name>termIdx</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>termIdx</name><operator>&lt;</operator><name><name>terms</name><operator>.</operator><name>length</name></name></expr>;</condition><incr><expr><name>termIdx</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
            <expr_stmt><expr><name>docFreq</name> <operator>+=</operator> <call><name><name>reader</name><operator>.</operator><name>docFreq</name></name><argument_list>(<argument><expr><name><name>terms</name><index>[<expr><name>termIdx</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           <expr_stmt/></block_content></block></for></block_content></block></for>}</block></expr></expr_stmt></block_content></block></for></block_content></block></for>
         }</block></expr></expr_stmt> <if_stmt><else>else <block>{<block_content>
           <decl_stmt><decl><type><specifier>final</specifier> <name>BytesRef</name></type> <name>text</name> <init>= <expr><operator>new</operator> <call><name>BytesRef</name><argument_list>(<argument><expr><name><name>terms</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><call><name>text</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">209</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">209</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>MultiPhraseQuery</name> extends <name>Query</name> <block>{
           <expr><name>docFreq</name> <operator>=</operator> <call><name><name>reader</name><operator>.</operator><name>docFreq</name></name><argument_list>(<argument><expr><name><name>terms</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><call><name>field</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>text</name></expr></argument>)</argument_list></call></expr>;
         }</block></expr></expr_stmt>
 
        <expr_stmt><expr><name><name>postingsFreqs</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>new</operator> <call><name><name>PhraseQuery</name><operator>.</operator><name>PostingsAndFreq</name></name><argument_list>(<argument><expr><name>postingsEnum</name></expr></argument>, <argument><expr><name>docFreq</name></expr></argument>, <argument><expr><call><name><name>positions</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>intValue</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>postingsFreqs</name><index>[<expr><name>pos</name></expr>]</index></name> <operator>=</operator> <operator>new</operator> <call><name><name>PhraseQuery</name><operator>.</operator><name>PostingsAndFreq</name></name><argument_list>(<argument><expr><name>postingsEnum</name></expr></argument>, <argument><expr><name>docFreq</name></expr></argument>, <argument><expr><call><name><name>positions</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>pos</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>intValue</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></else></if_stmt>
 
       <comment type="line">// sort by increasing docFreq order</comment>
<expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr>

</unit>
