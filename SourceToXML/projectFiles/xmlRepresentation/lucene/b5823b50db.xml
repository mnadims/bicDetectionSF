<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/lucene/b5823b50db.java"><expr_stmt><expr><name>From</name> <name>b5823b50db14d93b546fa898e33ad3dfea58df17</name> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Erick</name> <name><name>Erickson</name> <argument_list type="generic">&lt;<argument><name>erick</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Mon</name></expr><operator>,</operator> <expr><literal type="number">8</literal> <name>Feb</name> <literal type="number">2016</literal> <literal type="number">19</literal><operator>:</operator><literal type="number">38</literal><operator>:</operator><literal type="number">19</literal> <operator>-</operator><literal type="number">0800</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>SOLR</name><operator>-</operator><literal type="number">8658</literal><operator>:</operator> <name>Fix</name> <name>test</name> <name>failure</name> <name>introduced</name> <name>in</name> <name>SOLR</name><operator>-</operator><literal type="number">8651</literal>

<operator>--</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>BasicDistributedZkTest</name><operator>.</operator><name>java</name></name>    <operator>|</operator> <literal type="number">48</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>--</operator><operator>-</operator>
 <literal type="number">1</literal> <name>file</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">42</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">6</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>BasicDistributedZkTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>BasicDistributedZkTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>f479e27bf27</name><operator>..</operator><literal type="number">678c31c6798</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>BasicDistributedZkTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>BasicDistributedZkTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">39</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">39</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>SolrDocument</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>SolrException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>SolrInputDocument</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>cloud</name><operator>.</operator><name>ClusterState</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>cloud</name><operator>.</operator><name>DocCollection</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>cloud</name><operator>.</operator><name>Replica</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>cloud</name><operator>.</operator><name>Slice</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>cloud</name><operator>.</operator><name>ZkCoreNodeProps</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>cloud</name><operator>.</operator><name>ZkNodeProps</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">370</literal></expr><operator>,</operator><expr><literal type="number">22</literal> <operator>+</operator><literal type="number">372</literal></expr><operator>,</operator><expr><literal type="number">56</literal> @@ <specifier>public</specifier> <name>class</name> <name>BasicDistributedZkTest</name> extends <name>AbstractFullDistribZkTestBase</name> <block>{
     }</block></expr></expr_stmt>
   }
 
  <comment type="line">// Insure that total docs found is the expected number.</comment>
   private <function><type><name>void</name></type> <name>waitForDocCount</name><parameter_list>(<parameter><decl><type><name>long</name></type> <name>expectedNumFound</name></decl></parameter>, <parameter><decl><type><name>long</name></type> <name>waitMillis</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>failureMessage</name></decl></parameter>)</parameter_list>
      <throws>throws <argument><expr><name>SolrServerException</name></expr></argument>, <argument><expr><name>IOException</name></expr></argument>, <argument><expr><name>InterruptedException</name></expr></argument></throws> <block>{<block_content>
      <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><name>RTimer</name> <name>timer</name> <operator>=</operator> <operator>new</operator> <call><name>RTimer</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws><empty_stmt>;</empty_stmt>
     <decl_stmt><decl><type><name>long</name></type> <name>timeout</name> <init>= <expr><operator>(</operator><name>long</name><operator>)</operator><call><name><name>timer</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call> <operator>+</operator> <name>waitMillis</name></expr></init></decl>;</decl_stmt>
    <while>while <condition>(<expr><call><name><name>cloudClient</name><operator>.</operator><name>query</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>SolrQuery</name><argument_list>(<argument><expr><literal type="string">"*:*"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getResults</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getNumFound</name><argument_list>()</argument_list></call> <operator>!=</operator> <name>expectedNumFound</name></expr>)</condition> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><name>timeout</name> <operator>&lt;=</operator> <operator>(</operator><name>long</name><operator>)</operator><call><name><name>timer</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name>fail</name><argument_list>(<argument><expr><name>failureMessage</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    
    <decl_stmt><decl><type><name>ClusterState</name></type> <name>clusterState</name> <init>= <expr><call><name>getCommonCloudSolrClient</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getZkStateReader</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClusterState</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>DocCollection</name></type> <name>dColl</name> <init>= <expr><call><name><name>clusterState</name><operator>.</operator><name>getCollection</name></name><argument_list>(<argument><expr><name>DEFAULT_COLLECTION</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>long</name></type> <name>docTotal</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt> <comment type="line">// Could use this for 0 hits too!</comment>
    
    <while>while <condition>(<expr><name>docTotal</name> <operator>!=</operator> <name>expectedNumFound</name> <operator>&amp;&amp;</operator> <name>timeout</name> <operator>&gt;</operator> <operator>(</operator><name>long</name><operator>)</operator> <call><name><name>timer</name><operator>.</operator><name>getTime</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>docTotal</name> <operator>=</operator> <call><name>checkSlicesSameCounts</name><argument_list>(<argument><expr><name>dColl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <if_stmt><if>if <condition>(<expr><name>docTotal</name> <operator>!=</operator> <name>expectedNumFound</name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>Thread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></if></if_stmt>
      <expr_stmt><expr><call><name><name>Thread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></while>
    <comment type="line">// We could fail here if we broke out of the above because we exceeded the time allowed.</comment>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>failureMessage</name></expr></argument>, <argument><expr><name>expectedNumFound</name></expr></argument>, <argument><expr><name>docTotal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
    <comment type="line">// This should be redundant, but it caught a test error after all.</comment>
     <for>for <control>(<init><decl><type><name>SolrClient</name></type> <name>client</name> <range>: <expr><name>clients</name></expr></range></decl></init>)</control> <block>{<block_content>
       <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>failureMessage</name></expr></argument>, <argument><expr><name>expectedNumFound</name></expr></argument>, <argument><expr><call><name><name>client</name><operator>.</operator><name>query</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>SolrQuery</name><argument_list>(<argument><expr><literal type="string">"*:*"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getResults</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getNumFound</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></for>
   </block_content>}</block></if></if_stmt>
  

  <comment type="line">// Insure that counts are the same for all replicas in each shard</comment>
  <comment type="line">// Return the total doc count for the query.</comment>
  <function><type><specifier>private</specifier> <name>long</name></type> <name>checkSlicesSameCounts</name><parameter_list>(<parameter><decl><type><name>DocCollection</name></type> <name>dColl</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>SolrServerException</name></expr></argument>, <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>long</name></type> <name>docTotal</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt> <comment type="line">// total number of documents found counting only one replica per slice.</comment>
    <for>for <control>(<init><decl><type><name>Slice</name></type> <name>slice</name> <range>: <expr><call><name><name>dColl</name><operator>.</operator><name>getActiveSlices</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
      <decl_stmt><decl><type><name>long</name></type> <name>sliceDocCount</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
      <for>for <control>(<init><decl><type><name>Replica</name></type> <name>rep</name> <range>: <expr><call><name><name>slice</name><operator>.</operator><name>getReplicas</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
        <decl_stmt><decl><type><name>HttpSolrClient</name></type> <name>one</name> <init>= <expr><operator>new</operator> <call><name>HttpSolrClient</name><argument_list>(<argument><expr><call><name><name>rep</name><operator>.</operator><name>getCoreUrl</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>SolrQuery</name></type> <name>query</name> <init>= <expr><operator>new</operator> <call><name>SolrQuery</name><argument_list>(<argument><expr><literal type="string">"*:*"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setDistrib</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>QueryResponse</name></type> <name>resp</name> <init>= <expr><call><name><name>one</name><operator>.</operator><name>query</name></name><argument_list>(<argument><expr><name>query</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>long</name></type> <name>hits</name> <init>= <expr><call><name><name>resp</name><operator>.</operator><name>getResults</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getNumFound</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><name>sliceDocCount</name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><name>sliceDocCount</name> <operator>=</operator> <name>hits</name></expr>;</expr_stmt>
          <expr_stmt><expr><name>docTotal</name> <operator>+=</operator> <name>hits</name></expr>;</expr_stmt> 
        </block_content>}</block></if> <else>else <block>{<block_content>
          <if_stmt><if>if <condition>(<expr><name>hits</name> <operator>!=</operator> <name>sliceDocCount</name></expr>)</condition> <block>{<block_content>
            <return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
          </block_content>}</block></if></if_stmt>
        </block_content>}</block></else></if_stmt>
      </block_content>}</block></for>
    </block_content>}</block></for>
    <return>return <expr><name>docTotal</name></expr>;</return>
  </block_content>}</block></function>

   <function><type><specifier>private</specifier> <name>void</name></type> <name>testShardParamVariations</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
     <decl_stmt><decl><type><name>SolrQuery</name></type> <name>query</name> <init>= <expr><operator>new</operator> <call><name>SolrQuery</name><argument_list>(<argument><expr><literal type="string">"*:*"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Long</name></argument>&gt;</argument_list></name></type> <name>shardCounts</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></expr_stmt></block_content></block></function></block_content></block></while></block_content></block></function>

</unit>
