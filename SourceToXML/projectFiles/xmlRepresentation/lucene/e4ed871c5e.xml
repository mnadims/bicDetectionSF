<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/lucene/e4ed871c5e.java"><expr_stmt><expr><name>From</name> <name>e4ed871c5e6f2b5882ef8a8327f7256508f1e568</name> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Shalin</name> <name>Shekhar</name> <name><name>Mangar</name> <argument_list type="generic">&lt;<argument><name>shalin</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Fri</name></expr><operator>,</operator> <expr><literal type="number">7</literal> <name>Feb</name> <literal type="number">2014</literal> <literal type="number">08</literal><operator>:</operator><literal type="number">13</literal><operator>:</operator><literal type="number">47</literal> <operator>+</operator><literal type="number">0000</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>SOLR</name><operator>-</operator><literal type="number">5659</literal><operator>:</operator> <name>Add</name> <name>test</name></expr></expr_stmt> <for>for compositeId ending with a separator
 char

git-svn-id: https:<comment type="line">//svn.apache.org/repos/asf/lucene/dev/trunk@1565572 13f79535-47bb-0310-9956-ffa450edef68</comment>
--
 solr/CHANGES.txt                              <operator>|</operator>  3 ++
 .../apache/solr/cloud/ShardRoutingTest.java   <operator>|</operator> 30 +++++++++++++++++++
 .../solr/common/cloud/CompositeIdRouter.java  <operator>|</operator> 13 +++++---
 3 files changed<operator>,</operator> <expr_stmt><expr><literal type="number">42</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">4</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
<name>index</name> <literal type="number">69c11bbaa5b</literal><operator>..</operator><name>c424074cb64</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
@@ <operator>-</operator><literal type="number">377</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">377</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <name>Other</name> <name>Changes</name>
 <operator>*</operator> <name>SOLR</name><operator>-</operator><literal type="number">5702</literal><operator>:</operator> <name>Log</name> <name>config</name> <name>name</name> <name>found</name></expr></expr_stmt></for> <for>for collection at info level.
   <control>(<init><expr><name>Christine</name> <name>Poerschke</name> <name>via</name> <name>Mark</name> <name>Miller</name></expr></init>)</control><block type="pseudo"><block_content>
 
<expr_stmt><expr><operator>*</operator> <name>SOLR</name><operator>-</operator><literal type="number">5659</literal><operator>:</operator> <name>Add</name> <name>test</name></expr></expr_stmt></block_content></block></for> <for>for compositeId ending with an '!'.
  <control>(<init><decl><type><name>Markus</name></type> <name>Jelsma</name></decl>, <decl><type ref="prev"/><name>Anshum</name> <name>Gupta</name> <name>via</name> <name>shalin</name></decl></init>)</control><block type="pseudo"><block_content>

 <expr_stmt><expr><operator>==</operator><operator>==</operator><operator>==</operator><operator>==</operator><operator>==</operator><operator>==</operator><operator>==</operator><operator>==</operator><operator>==</operator>  <literal type="number">4.6.1</literal>  <operator>==</operator><operator>==</operator><operator>==</operator><operator>==</operator><operator>==</operator><operator>==</operator><operator>==</operator><operator>==</operator><operator>==</operator>
 
 <name>Versions</name> <name>of</name> <name>Major</name> <name>Components</name>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ShardRoutingTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ShardRoutingTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">4275aad7f00</literal><operator>..</operator><name>f432ccd1207</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ShardRoutingTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ShardRoutingTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">215</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">215</literal></expr><operator>,</operator><expr><literal type="number">36</literal> @@ <specifier>public</specifier> <name>class</name> <name>ShardRoutingTest</name> extends <name>AbstractFullDistribZkTestBase</name> <block>{
     <expr><call><name>doAddDoc</name><argument_list>(<argument><expr><literal type="string">"f1!f2!doc5"</literal></expr></argument>)</argument_list></call></expr>;
 
     <expr><call><name>commit</name><argument_list>()</argument_list></call></expr>;

    <expr><call><name>doDBQ</name><argument_list>(<argument><expr><literal type="string">"*:*"</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>commit</name><argument_list>()</argument_list></call></expr>;

    <expr><call><name>doAddDoc</name><argument_list>(<argument><expr><literal type="string">"b!"</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>doAddDoc</name><argument_list>(<argument><expr><literal type="string">"c!doc1"</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>commit</name><argument_list>()</argument_list></call></expr>;
    <expr><call><name>doQuery</name><argument_list>(<argument><expr><literal type="string">"b!,c!doc1"</literal></expr></argument>, <argument><expr><literal type="string">"q"</literal></expr></argument>,<argument><expr><literal type="string">"*:*"</literal></expr></argument>)</argument_list></call></expr>;
    <expr><name>UpdateRequest</name> <name>req</name> <operator>=</operator> <operator>new</operator> <call><name>UpdateRequest</name><argument_list>()</argument_list></call></expr>;
    <expr><call><name><name>req</name><operator>.</operator><name>deleteById</name></name><argument_list>(<argument><expr><literal type="string">"b!"</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>req</name><operator>.</operator><name>process</name></name><argument_list>(<argument><expr><name>cloudClient</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>commit</name><argument_list>()</argument_list></call></expr>;
    <expr><call><name>doQuery</name><argument_list>(<argument><expr><literal type="string">"c!doc1"</literal></expr></argument>, <argument><expr><literal type="string">"q"</literal></expr></argument>,<argument><expr><literal type="string">"*:*"</literal></expr></argument>)</argument_list></call></expr>;

    <expr><call><name>doDBQ</name><argument_list>(<argument><expr><literal type="string">"id:b!"</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>commit</name><argument_list>()</argument_list></call></expr>;
    <expr><call><name>doQuery</name><argument_list>(<argument><expr><literal type="string">"c!doc1"</literal></expr></argument>, <argument><expr><literal type="string">"q"</literal></expr></argument>,<argument><expr><literal type="string">"*:*"</literal></expr></argument>)</argument_list></call></expr>;

    <expr><call><name>doDBQ</name><argument_list>(<argument><expr><literal type="string">"*:*"</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>commit</name><argument_list>()</argument_list></call></expr>;

    <expr><call><name>doAddDoc</name><argument_list>(<argument><expr><literal type="string">"a!b!"</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>doAddDoc</name><argument_list>(<argument><expr><literal type="string">"b!doc1"</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>doAddDoc</name><argument_list>(<argument><expr><literal type="string">"c!doc2"</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>doAddDoc</name><argument_list>(<argument><expr><literal type="string">"d!doc3"</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>doAddDoc</name><argument_list>(<argument><expr><literal type="string">"e!doc4"</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>doAddDoc</name><argument_list>(<argument><expr><literal type="string">"f1!f2!doc5"</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>doAddDoc</name><argument_list>(<argument><expr><literal type="string">"f1!f2!doc5/5"</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>commit</name><argument_list>()</argument_list></call></expr>;
    <expr><call><name>doQuery</name><argument_list>(<argument><expr><literal type="string">"a!b!,b!doc1,c!doc2,d!doc3,e!doc4,f1!f2!doc5,f1!f2!doc5/5"</literal></expr></argument>, <argument><expr><literal type="string">"q"</literal></expr></argument>,<argument><expr><literal type="string">"*:*"</literal></expr></argument>)</argument_list></call></expr>;
   }</block>
 
 
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>solrj</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>common</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>CompositeIdRouter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>solrj</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>common</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>CompositeIdRouter</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">766b115d605</literal><operator>..</operator><name>e649ad112a7</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>solrj</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>common</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>CompositeIdRouter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>solrj</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>common</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>CompositeIdRouter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">191</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">191</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>CompositeIdRouter</name> extends <name>HashBasedRouter</name> <block>{
       <expr><name><name>String</name><index>[]</index></name> <name>parts</name> <operator>=</operator> <call><name><name>key</name><operator>.</operator><name>split</name></name><argument_list>(<argument><expr><name>SEPARATOR</name></expr></argument>)</argument_list></call></expr>;
       <expr><name><name>this</name><operator>.</operator><name>key</name></name> <operator>=</operator> <name>key</name></expr>;
       <expr><name>pieces</name> <operator>=</operator> <name><name>parts</name><operator>.</operator><name>length</name></name></expr>;
      <expr><name>hashes</name> <operator>=</operator> <operator>new</operator> <name><name>int</name><index>[<expr><name>pieces</name></expr>]</index></name></expr>;
       <expr><name>numBits</name> <operator>=</operator> <operator>new</operator> <name><name>int</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;
      <if_stmt><if>if <condition>(<expr><call><name><name>key</name><operator>.</operator><name>endsWith</name></name><argument_list>(<argument><expr><literal type="string">"!"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
      <if_stmt><if>if <condition>(<expr><call><name><name>key</name><operator>.</operator><name>endsWith</name></name><argument_list>(<argument><expr><literal type="string">"!"</literal></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <name>pieces</name> <operator>&lt;</operator> <literal type="number">3</literal></expr>)</condition><block type="pseudo"><block_content>
         <expr_stmt><expr><name>pieces</name><operator>++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt>
      <name>hashes</name> <operator>=</operator> <operator>new</operator> <name><name>int</name><index>[<expr><name>pieces</name></expr>]</index></name></block></expr>;</expr_stmt></block_content></block></for>

       <if_stmt><if>if <condition>(<expr><name>pieces</name> <operator>==</operator> <literal type="number">3</literal></expr>)</condition> <block>{<block_content>
         <expr_stmt><expr><name><name>numBits</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <literal type="number">8</literal></expr>;</expr_stmt>
         <expr_stmt><expr><name><name>numBits</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <literal type="number">8</literal></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">204</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">205</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>CompositeIdRouter</name> extends <name>HashBasedRouter</name> <block>{
         <expr><name>triLevel</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;
       }</block></expr></expr_stmt>
 
      <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>parts</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
      <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>pieces</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
         <if_stmt><if>if <condition>(<expr><name>i</name> <operator>&lt;</operator> <name>pieces</name> <operator>-</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>
           <decl_stmt><decl><type><name>int</name></type> <name>commaIdx</name> <init>= <expr><name><name>parts</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>indexOf</name><argument_list>(<argument><expr><name>bitsSeparator</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">213</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">214</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>CompositeIdRouter</name> extends <name>HashBasedRouter</name> <block>{
             <expr><name><name>parts</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>parts</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>substring</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>commaIdx</name></expr></argument>)</argument_list></call></expr>;
           }</block></expr></expr_stmt>
         </block_content>}</block></if></if_stmt>
        <expr_stmt><expr><name><name>hashes</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name><name>Hash</name><operator>.</operator><name>murmurhash3_x86_32</name></name><argument_list>(<argument><expr><name><name>parts</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name><name>parts</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>length</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <comment type="line">//Last component of an ID that ends with a '!'</comment>
        <if_stmt><if>if<condition>(<expr><name>i</name> <operator>&gt;=</operator> <name><name>parts</name><operator>.</operator><name>length</name></name></expr>)</condition><block type="pseudo"><block_content>
          <expr_stmt><expr><name><name>hashes</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name><name>Hash</name><operator>.</operator><name>murmurhash3_x86_32</name></name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">""</literal><operator>.</operator><call><name>length</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
        <else>else<block type="pseudo"><block_content>
          <expr_stmt><expr><name><name>hashes</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name><name>Hash</name><operator>.</operator><name>murmurhash3_x86_32</name></name><argument_list>(<argument><expr><name><name>parts</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name><name>parts</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>length</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
       </block_content>}</block></for>
       <expr_stmt><expr><name>masks</name> <operator>=</operator> <call><name>getMasks</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></for>
<expr_stmt><expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></expr_stmt></block_content></block></if></if_stmt>

</unit>
