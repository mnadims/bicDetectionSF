<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/lucene/50baab7c4b.java"><expr_stmt><expr><name>From</name> <literal type="number">50baab7c4bdcde50ae6da4c1e061f650dbf2b7a8</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>James</name> <name><name>Dyer</name> <argument_list type="generic">&lt;<argument><name>jdyer</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Fri</name></expr><operator>,</operator> <expr><literal type="number">25</literal> <name>May</name> <literal type="number">2012</literal> <literal type="number">15</literal><operator>:</operator><literal type="number">16</literal><operator>:</operator><literal type="number">30</literal> <operator>+</operator><literal type="number">0000</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>SOLR</name><operator>-</operator><literal type="number">2058</literal><operator>:</operator>  <name>Add</name> <name>optional</name> <literal type="string">"phrase slop"</literal> <name>syntax</name> <name>to</name> <name>edismax</name>
 <name>pf</name><operator>/</operator><name>pf2</name><operator>/</operator><name>pf3</name>

<name>git</name><operator>-</operator><name>svn</name><operator>-</operator><name>id</name><operator>:</operator> <name>https</name><operator>:</operator><comment type="line">//svn.apache.org/repos/asf/lucene/dev/trunk@1342681 13f79535-47bb-0310-9956-ffa450edef68</comment>
<operator>--</operator>
 <name>solr</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>                              <operator>|</operator>  <literal type="number">5</literal> <operator>++</operator>
 <operator>...</operator><operator>/</operator><name>search</name><operator>/</operator><name><name>ExtendedDismaxQParserPlugin</name><operator>.</operator><name>java</name></name>   <operator>|</operator> <literal type="number">39</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>FieldParams</name><operator>.</operator><name>java</name></name>   <operator>|</operator> <literal type="number">46</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>util</name><operator>/</operator><name><name>SolrPluginUtils</name><operator>.</operator><name>java</name></name> <operator>|</operator> <literal type="number">51</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestExtendedDismaxParser</name><operator>.</operator><name>java</name></name> <operator>|</operator> <literal type="number">24</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator>
 <literal type="number">5</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">144</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">21</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>FieldParams</name><operator>.</operator><name>java</name></name>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
<name>index</name> <literal type="number">71b8cc7ed99</literal><operator>..</operator><literal type="number">6e9e54f3c21</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
@@ <operator>-</operator><literal type="number">310</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">310</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <name>New</name> <name>Features</name>
   <name>that</name> <name>the</name> <name>suggestions</name> <name>need</name> <name>not</name> <name>consist</name> <name>entirely</name> <name>of</name> <name>terms</name> <name>with</name> <name>a</name> <name>greater</name> <name>document</name>
   <name>frequency</name> <name>than</name> <name>the</name> <name>queried</name> <name><name>terms</name><operator>.</operator></name> (<name>James</name> <name>Dyer</name></expr></expr_stmt>)
 
<expr_stmt><expr><operator>*</operator> <name>SOLR</name><operator>-</operator><literal type="number">2058</literal><operator>:</operator> <name>Edismax</name> <name>query</name> <name>parser</name> <name>to</name> <name>allow</name> <literal type="string">"phrase slop"</literal> <name>to</name> <name>be</name> <name>specified</name> <name>per</name><operator>-</operator><name>field</name>
  <name>on</name> <name>the</name> <name>pf</name><operator>/</operator><name>pf2</name><operator>/</operator><name>pf3</name> <name>parameters</name> <name>using</name> <name>optional</name> <literal type="string">"FieldName~slop^boost"</literal> <name><name>syntax</name><operator>.</operator>  <name>The</name></name>
  <name>prior</name> <literal type="string">"FieldName^boost"</literal> <name>syntax</name> <name>is</name> <name>still</name> <name><name>accepted</name><operator>.</operator>  <name>In</name></name> <name>such</name> <name>cases</name> <name>the</name> <name>value</name> <name>on</name> <name>the</name>
  <literal type="string">"ps"</literal> <name>parameter</name> <name>serves</name> <name>as</name> <name>the</name> default <name><name>slop</name><operator>.</operator></name>  (<name>Ron</name> <name>Mayer</name> <name>via</name> <name>James</name> <name>Dyer</name></expr></expr_stmt>)

 
 <expr_stmt><expr><name>Optimizations</name>
 <operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>ExtendedDismaxQParserPlugin</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>ExtendedDismaxQParserPlugin</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">40f17021788</literal><operator>..</operator><literal type="number">13bda85dc18</literal> <literal type="number">100755</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>ExtendedDismaxQParserPlugin</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>ExtendedDismaxQParserPlugin</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">139</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">139</literal></expr><operator>,</operator><expr><literal type="number">15</literal> @@ <name>class</name> <name>ExtendedDismaxQParser</name> extends <name>QParser</name> <block>{
     }</block>
     
     <comment type="line">// Boosted phrase of the full query string</comment>
    <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Float</name></argument>&gt;</argument_list></name> <name>phraseFields</name> <operator>=</operator> 
      <call><name><name>SolrPluginUtils</name><operator>.</operator><name>parseFieldBoosts</name></name><argument_list>(<argument><expr><call><name><name>solrParams</name><operator>.</operator><name>getParams</name></name><argument_list>(<argument><expr><name><name>DisMaxParams</name><operator>.</operator><name>PF</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>FieldParams</name></argument>&gt;</argument_list></name></type> <name>phraseFields</name> <init>= 
      <expr><call><name><name>U</name><operator>.</operator><name>parseFieldBoostsAndSlop</name></name><argument_list>(<argument><expr><call><name><name>solrParams</name><operator>.</operator><name>getParams</name></name><argument_list>(<argument><expr><name><name>DMP</name><operator>.</operator><name>PF</name></name></expr></argument>)</argument_list></call></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <comment type="line">// Boosted Bi-Term Shingles from the query string</comment>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Float</name></argument>&gt;</argument_list></name></type> <name>phraseFields2</name> <init>= 
      <expr><call><name><name>SolrPluginUtils</name><operator>.</operator><name>parseFieldBoosts</name></name><argument_list>(<argument><expr><call><name><name>solrParams</name><operator>.</operator><name>getParams</name></name><argument_list>(<argument><expr><literal type="string">"pf2"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>FieldParams</name></argument>&gt;</argument_list></name></type> <name>phraseFields2</name> <init>= 
      <expr><call><name><name>U</name><operator>.</operator><name>parseFieldBoostsAndSlop</name></name><argument_list>(<argument><expr><call><name><name>solrParams</name><operator>.</operator><name>getParams</name></name><argument_list>(<argument><expr><literal type="string">"pf2"</literal></expr></argument>)</argument_list></call></expr></argument>,<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <comment type="line">// Boosted Tri-Term Shingles from the query string</comment>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Float</name></argument>&gt;</argument_list></name></type> <name>phraseFields3</name> <init>= 
      <expr><call><name><name>SolrPluginUtils</name><operator>.</operator><name>parseFieldBoosts</name></name><argument_list>(<argument><expr><call><name><name>solrParams</name><operator>.</operator><name>getParams</name></name><argument_list>(<argument><expr><literal type="string">"pf3"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>FieldParams</name></argument>&gt;</argument_list></name></type> <name>phraseFields3</name> <init>= 
      <expr><call><name><name>U</name><operator>.</operator><name>parseFieldBoostsAndSlop</name></name><argument_list>(<argument><expr><call><name><name>solrParams</name><operator>.</operator><name>getParams</name></name><argument_list>(<argument><expr><literal type="string">"pf3"</literal></expr></argument>)</argument_list></call></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

 
     <decl_stmt><decl><type><name>float</name></type> <name>tiebreaker</name> <init>= <expr><call><name><name>solrParams</name><operator>.</operator><name>getFloat</name></name><argument_list>(<argument><expr><name><name>DisMaxParams</name><operator>.</operator><name>TIE</name></name></expr></argument>, <argument><expr><literal type="number">0.0f</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">313</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">314</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <name>class</name> <name>ExtendedDismaxQParser</name> extends <name>QParser</name> <block>{
       <expr><call><name><name>query</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>parsedUserQuery</name></expr></argument>, <argument><expr><name><name>BooleanClause</name><operator>.</operator><name>Occur</name><operator>.</operator><name>MUST</name></name></expr></argument>)</argument_list></call></expr>;
 
       <comment type="line">// sloppy phrase queries for proximity</comment>
      <if_stmt><if>if <condition>(<expr><call><name><name>phraseFields</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal> <operator>||</operator> 
          <call><name><name>phraseFields2</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal> <operator>||</operator>
          <call><name><name>phraseFields3</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
        
      <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>FieldParams</name></argument>&gt;</argument_list></name></type> <name>allPhraseFields</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>FieldParams</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>allPhraseFields</name><operator>.</operator><name>addAll</name></name><argument_list>(<argument><expr><name>phraseFields</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>allPhraseFields</name><operator>.</operator><name>addAll</name></name><argument_list>(<argument><expr><name>phraseFields2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>allPhraseFields</name><operator>.</operator><name>addAll</name></name><argument_list>(<argument><expr><name>phraseFields3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <if_stmt><if>if <condition>(<expr><call><name><name>allPhraseFields</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
         <comment type="line">// find non-field clauses</comment>
         <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>Clause</name></argument>&gt;</argument_list></name></type> <name>normalClauses</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>Clause</name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><call><name><name>clauses</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <for>for <control>(<init><decl><type><name>Clause</name></type> <name>clause</name> <range>: <expr><name>clauses</name></expr></range></decl></init>)</control> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">330</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">333</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ <name>class</name> <name>ExtendedDismaxQParser</name> extends <name>QParser</name> <block>{
           <expr><call><name><name>normalClauses</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>clause</name></expr></argument>)</argument_list></call></expr>;</block></expr></expr_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt>
         }</block>
 
        <comment type="line">// full phrase...</comment>
        <call><name>addShingledPhraseQueries</name><argument_list>(<argument><expr><name>query</name></expr></argument>, <argument><expr><name>normalClauses</name></expr></argument>, <argument><expr><name>phraseFields</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, 
                                 <argument><expr><name>tiebreaker</name></expr></argument>, <argument><expr><name>pslop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <comment type="line">// shingles...</comment>
        <expr_stmt><expr><call><name>addShingledPhraseQueries</name><argument_list>(<argument><expr><name>query</name></expr></argument>, <argument><expr><name>normalClauses</name></expr></argument>, <argument><expr><name>phraseFields2</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>,  
                                 <argument><expr><name>tiebreaker</name></expr></argument>, <argument><expr><name>pslop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>addShingledPhraseQueries</name><argument_list>(<argument><expr><name>query</name></expr></argument>, <argument><expr><name>normalClauses</name></expr></argument>, <argument><expr><name>phraseFields3</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>,
                                 <argument><expr><name>tiebreaker</name></expr></argument>, <argument><expr><name>pslop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <comment type="line">// full phrase and shingles</comment>
        <for>for <control>(<init><decl><type><name>FieldParams</name></type> <name>phraseField</name><range>: <expr><name>allPhraseFields</name></expr></range></decl></init>)</control> <block>{<block_content>
          <decl_stmt><decl><type><name>int</name></type> <name>slop</name> <init>= <expr><ternary><condition><expr><operator>(</operator><call><name><name>phraseField</name><operator>.</operator><name>getSlop</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="number">0</literal><operator>)</operator></expr> ?</condition><then> <expr><name>pslop</name></expr> </then><else>: <expr><call><name><name>phraseField</name><operator>.</operator><name>getSlop</name></name><argument_list>()</argument_list></call></expr></else></ternary></expr></init></decl>;</decl_stmt>
          <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Float</name></argument>&gt;</argument_list></name></type> <name>pf</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Float</name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <expr_stmt><expr><call><name><name>pf</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>phraseField</name><operator>.</operator><name>getField</name></name><argument_list>()</argument_list></call></expr></argument>,<argument><expr><call><name><name>phraseField</name><operator>.</operator><name>getBoost</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name>addShingledPhraseQueries</name><argument_list>(<argument><expr><name>query</name></expr></argument>, <argument><expr><name>normalClauses</name></expr></argument>, <argument><expr><name>pf</name></expr></argument>,   
				   <argument><expr><call><name><name>phraseField</name><operator>.</operator><name>getWordGrams</name></name><argument_list>()</argument_list></call></expr></argument>,<argument><expr><name>tiebreaker</name></expr></argument>, <argument><expr><name>slop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
         
       }
     }
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>FieldParams</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>FieldParams</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">00000000000..aaf9c290b8e</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>FieldParams</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">46</literal> @@</expr></expr_stmt>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name></name>;</package>
<comment type="block" format="javadoc">/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<comment type="block" format="javadoc">/**
 * A class to hold "phrase slop" and "boost" parameters for pf, pf2, pf3 parameters
 **/</comment>
<class><specifier>public</specifier> class <name>FieldParams</name> <block>{
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>int</name></type> <name>wordGrams</name></decl>;</decl_stmt>  <comment type="line">// make bigrams if 2, trigrams if 3, or all if 0</comment>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>int</name></type> <name>slop</name></decl>;</decl_stmt>  <comment type="line">// null defaults to ps parameter</comment>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>float</name></type> <name>boost</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>String</name></type> <name>field</name></decl>;</decl_stmt>
  <constructor><specifier>public</specifier> <name>FieldParams</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>field</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>wordGrams</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>slop</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>boost</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>wordGrams</name></name> <operator>=</operator> <name>wordGrams</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>slop</name></name>      <operator>=</operator> <name>slop</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>boost</name></name>     <operator>=</operator> <name>boost</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>field</name></name>     <operator>=</operator> <name>field</name></expr>;</expr_stmt>
  </block_content>}</block></constructor>
  <function><type><specifier>public</specifier> <name>int</name></type> <name>getWordGrams</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>wordGrams</name></expr>;</return>
  </block_content>}</block></function>
  <function><type><specifier>public</specifier> <name>int</name></type> <name>getSlop</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>slop</name></expr>;</return>
  </block_content>}</block></function>
  <function><type><specifier>public</specifier> <name>float</name></type> <name>getBoost</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>boost</name></expr>;</return>
  </block_content>}</block></function>
  <function><type><specifier>public</specifier> <name>String</name></type> <name>getField</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>field</name></expr>;</return>
  </block_content>}</block></function>
  
}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>util</name><operator>/</operator><name><name>SolrPluginUtils</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>util</name><operator>/</operator><name><name>SolrPluginUtils</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>d204d181072</name><operator>..</operator><literal type="number">1e3aaef4d04</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>util</name><operator>/</operator><name><name>SolrPluginUtils</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>util</name><operator>/</operator><name><name>SolrPluginUtils</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">377</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">377</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrPluginUtils</name> <block>{
     }</block></expr></expr_stmt>
 
   }
  private <decl_stmt><decl><type><specifier>static</specifier> <specifier>final</specifier> <name>Pattern</name></type> <name>whitespacePattern</name> <init>= <expr><call><name><name>Pattern</name><operator>.</operator><name>compile</name></name><argument_list>(<argument><expr><literal type="string">"\\s+"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>Pattern</name></type> <name>caratPattern</name> <init>= <expr><call><name><name>Pattern</name><operator>.</operator><name>compile</name></name><argument_list>(<argument><expr><literal type="string">"\\^"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>Pattern</name></type> <name>tildePattern</name> <init>= <expr><call><name><name>Pattern</name><operator>.</operator><name>compile</name></name><argument_list>(<argument><expr><literal type="string">"[~]"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
   <comment type="block" format="javadoc">/**
    * Given a string containing fieldNames and boost info,
@@ -408,16 +411,58 @@ public class SolrPluginUtils {
     }
     Map&lt;String, Float&gt; out = new HashMap&lt;String,Float&gt;(7);
     for (String in : fieldLists) {
      if (null == in || "".equals(in.trim()))
      if (null == in) {
         continue;
      String[] bb = in.trim().split("\\s+");
      }
      in = in.trim();
      if(in.length()==0) {
        continue;
      }
      
      String[] bb = whitespacePattern.split(in);
       for (String s : bb) {
        String[] bbb = s.split("\\^");
        String[] bbb = caratPattern.split(s);
         out.put(bbb[0], 1 == bbb.length ? null : Float.valueOf(bbb[1]));
       }
     }
     return out;
   }
  /**
  
  /**
   * Like {@link #parseFieldBoosts}, but allows for an optional slop value prefixed by "~".
   *
   * @param fieldLists - an array of Strings eg. &lt;code&gt;{"fieldOne^2.3", "fieldTwo", fieldThree~5^-0.4}&lt;/code&gt;
   * @param wordGrams - (0=all words, 2,3 = shingle size)
   * @return - FieldParams containing the fieldname,boost,slop,and shingle size
   */</comment>
  <function><type><specifier>public</specifier> <specifier>static</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>FieldParams</name></argument>&gt;</argument_list></name></type> <name>parseFieldBoostsAndSlop</name><parameter_list>(<parameter><decl><type><name><name>String</name><index>[]</index></name></type> <name>fieldLists</name></decl></parameter>,<parameter><decl><type><name>int</name></type> <name>wordGrams</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><literal type="null">null</literal> <operator>==</operator> <name>fieldLists</name> <operator>||</operator> <literal type="number">0</literal> <operator>==</operator> <name><name>fieldLists</name><operator>.</operator><name>length</name></name></expr>)</condition> <block>{<block_content>
        <return>return <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>FieldParams</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>FieldParams</name></argument>&gt;</argument_list></name></type> <name>out</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>FieldParams</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <for>for <control>(<init><decl><type><name>String</name></type> <name>in</name> <range>: <expr><name>fieldLists</name></expr></range></decl></init>)</control> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><literal type="null">null</literal> <operator>==</operator> <name>in</name></expr>)</condition> <block>{<block_content>
        <continue>continue;</continue>
      </block_content>}</block></if></if_stmt>
      <expr_stmt><expr><name>in</name> <operator>=</operator> <call><name><name>in</name><operator>.</operator><name>trim</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <if_stmt><if>if<condition>(<expr><call><name><name>in</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call><operator>==</operator><literal type="number">0</literal></expr>)</condition> <block>{<block_content>
        <continue>continue;</continue>
      </block_content>}</block></if></if_stmt>
      <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>fieldConfigs</name> <init>= <expr><call><name><name>whitespacePattern</name><operator>.</operator><name>split</name></name><argument_list>(<argument><expr><name>in</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <for>for <control>(<init><decl><type><name>String</name></type> <name>s</name> <range>: <expr><name>fieldConfigs</name></expr></range></decl></init>)</control> <block>{<block_content>
        <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>fieldAndSlopVsBoost</name> <init>= <expr><call><name><name>caratPattern</name><operator>.</operator><name>split</name></name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>fieldVsSlop</name> <init>= <expr><call><name><name>tildePattern</name><operator>.</operator><name>split</name></name><argument_list>(<argument><expr><name><name>fieldAndSlopVsBoost</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>field</name> <init>= <expr><name><name>fieldVsSlop</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>slop</name>  <init>= <expr><ternary><condition><expr><operator>(</operator><literal type="number">2</literal> <operator>==</operator> <name><name>fieldVsSlop</name><operator>.</operator><name>length</name></name><operator>)</operator></expr> ?</condition><then> <expr><call><name><name>Integer</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><name><name>fieldVsSlop</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Float</name></type> <name>boost</name> <init>= <expr><ternary><condition><expr><operator>(</operator><literal type="number">1</literal> <operator>==</operator> <name><name>fieldAndSlopVsBoost</name><operator>.</operator><name>length</name></name><operator>)</operator></expr> ?</condition><then> <expr><literal type="number">1</literal></expr>  </then><else>: <expr><call><name><name>Float</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><name><name>fieldAndSlopVsBoost</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></else></ternary></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>FieldParams</name></type> <name>fp</name> <init>= <expr><operator>new</operator> <call><name>FieldParams</name><argument_list>(<argument><expr><name>field</name></expr></argument>,<argument><expr><name>wordGrams</name></expr></argument>,<argument><expr><name>slop</name></expr></argument>,<argument><expr><name>boost</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>out</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>fp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></for>
    </block_content>}</block></for>
    <return>return <expr><name>out</name></expr>;</return>
  </block_content>}</block></function>

 
   <comment type="block" format="javadoc">/**
    * Checks the number of optional clauses in the query, and compares it
diff --git a/solr/core/src/test/org/apache/solr/search/TestExtendedDismaxParser.java b/solr/core/src/test/org/apache/solr/search/TestExtendedDismaxParser.java
index d5c258a6ade..47d0ae791ac 100755
-- a/solr/core/src/test/org/apache/solr/search/TestExtendedDismaxParser.java
++ b/solr/core/src/test/org/apache/solr/search/TestExtendedDismaxParser.java
@@ -597,5 +597,29 @@ public class TestExtendedDismaxParser extends AbstractSolrTestCase {
             "debugQuery",  "true",
             "defType", "edismax"),
         "//doc[1]/str[@name='id'][.='s1']"); 
    
    assertQ("ps/ps2/ps3 with default slop overrides not working",
        req("q", "zzzz xxxx cccc vvvv",
            "qf", "phrase_sw",
            "pf", "phrase_sw~1^10 phrase_sw~2^20 phrase_sw^30",
            "pf2", "phrase_sw~2^22 phrase_sw^33",
            "pf3", "phrase_sw~2^222 phrase_sw^333",
            "ps", "3",
            "defType", "edismax",
            "debugQuery", "true"),
        "//str[@name='parsedquery'][contains(.,'phrase_sw:\"zzzz xxxx cccc vvvv\"~1^10.0')]",
        "//str[@name='parsedquery'][contains(.,'phrase_sw:\"zzzz xxxx cccc vvvv\"~2^20.0')]",
        "//str[@name='parsedquery'][contains(.,'phrase_sw:\"zzzz xxxx cccc vvvv\"~3^30.0')]",
        "//str[@name='parsedquery'][contains(.,'phrase_sw:\"zzzz xxxx\"~2^22.0')]",
        "//str[@name='parsedquery'][contains(.,'phrase_sw:\"xxxx cccc\"~2^22.0')]",
        "//str[@name='parsedquery'][contains(.,'phrase_sw:\"cccc vvvv\"~2^22.0')]",
        "//str[@name='parsedquery'][contains(.,'phrase_sw:\"zzzz xxxx\"~3^33.0')]",
        "//str[@name='parsedquery'][contains(.,'phrase_sw:\"xxxx cccc\"~3^33.0')]",
        "//str[@name='parsedquery'][contains(.,'phrase_sw:\"cccc vvvv\"~3^33.0')]",        
        "//str[@name='parsedquery'][contains(.,'phrase_sw:\"zzzz xxxx cccc\"~2^222.0')]",
        "//str[@name='parsedquery'][contains(.,'phrase_sw:\"xxxx cccc vvvv\"~2^222.0')]",
        "//str[@name='parsedquery'][contains(.,'phrase_sw:\"zzzz xxxx cccc\"~3^333.0')]",
        "//str[@name='parsedquery'][contains(.,'phrase_sw:\"xxxx cccc vvvv\"~3^333.0')]"
     );
   }
 }
- 
2.19.1.windows.1

</comment></unit>
