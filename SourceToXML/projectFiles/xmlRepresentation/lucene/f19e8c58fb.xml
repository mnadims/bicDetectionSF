<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/lucene/f19e8c58fb.java"><expr_stmt><expr><name>From</name> <name>f19e8c58fbb2b24de6037eee84adc0cbcbc99200</name> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Simon</name> <name><name>Willnauer</name> <argument_list type="generic">&lt;<argument><name>simonw</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Thu</name></expr><operator>,</operator> <expr><literal type="number">13</literal> <name>Jan</name> <literal type="number">2011</literal> <literal type="number">07</literal><operator>:</operator><literal type="number">13</literal><operator>:</operator><literal type="number">23</literal> <operator>+</operator><literal type="number">0000</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>LUCENE</name><operator>-</operator><literal type="number">2831</literal><operator>:</operator>  <name>Cut</name> <name>over</name> <name>ValueSource</name><operator>#</operator><name>docValues</name> <name>to</name>
 <name>AtomicReaderContext</name> <operator>&amp;</operator> <name>removed</name> <name>SolrIndexReader</name>

<name>git</name><operator>-</operator><name>svn</name><operator>-</operator><name>id</name><operator>:</operator> <name>https</name><operator>:</operator><comment type="line">//svn.apache.org/repos/asf/lucene/dev/trunk@1058431 13f79535-47bb-0310-9956-ffa450edef68</comment>
<operator>--</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>IndexSearcher</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">28</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TermQuery</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">11</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>FieldCacheSource</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">5</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>MultiValueSource</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">64</literal> <operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>OrdFieldSource</name><operator>.</operator><name>java</name></name>       <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>function</name><operator>/</operator><name><name>ReverseOrdFieldSource</name><operator>.</operator><name>java</name></name>       <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ValueSource</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">21</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ValueSourceQuery</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">9</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>ReaderUtil</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">11</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>function</name><operator>/</operator><name><name>JustCompileSearchSpans</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">3</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>TestFieldScoreQuery</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">25</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>TestOrdValues</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">29</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>TestValueSource</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">15</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrCore</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>MoreLikeThisHandler</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>ReplicationHandler</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">8</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>SnapPuller</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>CoreAdminHandler</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>LukeRequestHandler</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>HighlightComponent</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>component</name><operator>/</operator><name><name>QueryElevationComponent</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>component</name><operator>/</operator><name><name>SpellCheckComponent</name><operator>.</operator><name>java</name></name>        <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>StatsComponent</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>component</name><operator>/</operator><name><name>TermVectorComponent</name><operator>.</operator><name>java</name></name>        <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>highlight</name><operator>/</operator><name><name>DefaultSolrHighlighter</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>request</name><operator>/</operator><name><name>SimpleFacets</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>request</name><operator>/</operator><name><name>UnInvertedField</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">8</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>DateField</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>LatLonType</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">13</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>RandomSortField</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">20</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>SortableDoubleField</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>SortableFloatField</name><operator>.</operator><name>java</name></name>       <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>SortableIntField</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>SortableLongField</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>StrFieldSource</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>Grouping</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SolrFilter</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SolrIndexReader</name><operator>.</operator><name>java</name></name>   <operator>|</operator> <literal type="number">505</literal> <operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SolrIndexSearcher</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">21</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>ValueSourceParser</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">14</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>BoostedQuery</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">16</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ByteFieldSource</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ConstValueSource</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>DocFreqValueSource</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>function</name><operator>/</operator><name><name>DoubleConstValueSource</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>DoubleFieldSource</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">5</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>DualFloatFunction</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">8</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>FileFloatSource</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">17</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>FloatFieldSource</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>FunctionQuery</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">7</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>IDFValueSource</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">3</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>IntFieldSource</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">5</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>function</name><operator>/</operator><name><name>JoinDocFreqValueSource</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">20</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>LinearFloatFunction</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>LiteralValueSource</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>LongFieldSource</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">5</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>MaxDocValueSource</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>MaxFloatFunction</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>MultiFloatFunction</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>NormValueSource</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>NumDocsValueSource</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">10</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>OrdFieldSource</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">20</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>QueryValueSource</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">42</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>function</name><operator>/</operator><name><name>RangeMapFloatFunction</name><operator>.</operator><name>java</name></name>       <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>function</name><operator>/</operator><name><name>ReciprocalFloatFunction</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>function</name><operator>/</operator><name><name>ReverseOrdFieldSource</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  <literal type="number">18</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ScaleFloatFunction</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">15</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ShortFieldSource</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>SimpleFloatFunction</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>StringIndexDocValues</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">5</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>TFValueSource</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>TermFreqValueSource</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ValueSource</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">41</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>function</name><operator>/</operator><name><name>ValueSourceRangeFilter</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>VectorValueSource</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">10</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>function</name><operator>/</operator><name>distance</name><operator>/</operator><name><name>GeohashFunction</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">8</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>distance</name><operator>/</operator><name><name>GeohashHaversineFunction</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">8</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>distance</name><operator>/</operator><name><name>HaversineConstFunction</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">8</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>function</name><operator>/</operator><name>distance</name><operator>/</operator><name><name>HaversineFunction</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">8</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>distance</name><operator>/</operator><name><name>StringDistanceFunction</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">8</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>distance</name><operator>/</operator><name><name>VectorDistanceFunction</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">8</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>spelling</name><operator>/</operator><name><name>IndexBasedSpellChecker</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>spelling</name><operator>/</operator><name>suggest</name><operator>/</operator><name><name>Suggester</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>update</name><operator>/</operator><name><name>UpdateHandler</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestConfig</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestQuerySenderListener</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>QueryElevationComponentTest</name><operator>.</operator><name>java</name></name>          <operator>|</operator>   <literal type="number">8</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>request</name><operator>/</operator><name><name>TestFaceting</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestIndexSearcher</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>spelling</name><operator>/</operator><name><name>DirectSolrSpellCheckerTest</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>spelling</name><operator>/</operator><name><name>FileBasedSpellCheckerTest</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>spelling</name><operator>/</operator><name><name>IndexBasedSpellCheckerTest</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>SignatureUpdateProcessorFactoryTest</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>servlet</name><operator>/</operator><name>cache</name><operator>/</operator><name><name>HttpCacheHeaderUtil</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <literal type="number">94</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">394</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">947</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>
 <name>delete</name> <name>mode</name> <literal type="number">100755</literal> <name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SolrIndexReader</name><operator>.</operator><name>java</name></name>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>IndexSearcher</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>IndexSearcher</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">9bd72d426db</literal><operator>..</operator><literal type="number">9e587962ea6</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>IndexSearcher</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>IndexSearcher</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">174</literal></expr><operator>,</operator><expr><literal type="number">20</literal> <operator>+</operator><literal type="number">174</literal></expr><operator>,</operator><expr><literal type="number">34</literal> @@ <specifier>public</specifier> <name>class</name> <name>IndexSearcher</name> <block>{
       }</block></expr></expr_stmt>
     }
   }
  
  <comment type="block">/* Ctor for concurrent sub-searchers searching only on a specific leaf of the given top-reader context
   * - instead of searching over all leaves this searcher only searches a single leaf searcher slice. Hence, 
   * for scorer and filter this looks like an ordinary search in the hierarchy such that there is no difference
   * between single and multi-threaded */</comment>
  <constructor><specifier>private</specifier> <name>IndexSearcher</name><parameter_list>(<parameter><decl><type><name>ReaderContext</name></type> <name>topLevel</name></decl></parameter>, <parameter><decl><type><name>AtomicReaderContext</name></type> <name>leaf</name></decl></parameter>)</parameter_list> <block>{<block_content>

  <comment type="block" format="javadoc">/**
   * Expert: Creates a searcher from a top-level {@link ReaderContext} with and
   * executes searches on the given leave slice exclusively instead of searching
   * over all leaves. This constructor should be used to run one or more leaves
   * within a single thread. Hence, for scorer and filter this looks like an
   * ordinary search in the hierarchy such that there is no difference between
   * single and multi-threaded.
   * 
   * @lucene.experimental
   * */</comment>
  <constructor><specifier>public</specifier> <name>IndexSearcher</name><parameter_list>(<parameter><decl><type><name>ReaderContext</name></type> <name>topLevel</name></decl></parameter>, <parameter><decl><type><name>AtomicReaderContext</name><modifier>...</modifier></type> <name>leaves</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <assert>assert <expr><call><name>assertLeaves</name><argument_list>(<argument><expr><name>topLevel</name></expr></argument>, <argument><expr><name>leaves</name></expr></argument>)</argument_list></call></expr>;</assert>
     <expr_stmt><expr><name>readerContext</name> <operator>=</operator> <name>topLevel</name></expr>;</expr_stmt>
     <expr_stmt><expr><name>reader</name> <operator>=</operator> <name><name>topLevel</name><operator>.</operator><name>reader</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name>leafContexts</name> <operator>=</operator> <operator>new</operator> <name><name>AtomicReaderContext</name><index>[]</index></name> <block>{<expr><name>leaf</name></expr>}</block></expr>;</expr_stmt>
    <expr_stmt><expr><name>leafContexts</name> <operator>=</operator> <name>leaves</name></expr>;</expr_stmt>
     <expr_stmt><expr><name>executor</name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
     <expr_stmt><expr><name>subSearchers</name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
     <expr_stmt><expr><name>closeReader</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
   </block_content>}</block></constructor>
   
  <function><type><specifier>private</specifier> <name>boolean</name></type> <name>assertLeaves</name><parameter_list>(<parameter><decl><type><name>ReaderContext</name></type> <name>topLevel</name></decl></parameter>, <parameter><decl><type><name>AtomicReaderContext</name><modifier>...</modifier></type> <name>leaves</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <for>for <control>(<init><decl><type><name>AtomicReaderContext</name></type> <name>leaf</name> <range>: <expr><name>leaves</name></expr></range></decl></init>)</control> <block>{<block_content>
      <assert>assert <expr><call><name><name>ReaderUtil</name><operator>.</operator><name>getTopLevelContext</name></name><argument_list>(<argument><expr><name>leaf</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>topLevel</name> <operator>:</operator> <literal type="string">"leaf context is not a leaf of the given top-level context"</literal></expr>;</assert>
    </block_content>}</block></for>
    <return>return <expr><literal type="boolean">true</literal></expr>;</return>
  </block_content>}</block></function>
  
   <comment type="block" format="javadoc">/** Return the {@link IndexReader} this searches. */</comment>
   <function><type><specifier>public</specifier> <name>IndexReader</name></type> <name>getIndexReader</name><parameter_list>()</parameter_list> <block>{<block_content>
     <return>return <expr><name>reader</name></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TermQuery</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TermQuery</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>aa41c1240a7</name><operator>..</operator><literal type="number">56d0dcd63d1</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TermQuery</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TermQuery</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">30</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">30</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Term</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Explanation</name><operator>.</operator><name>IDFExplanation</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>BytesRef</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>PerReaderTermState</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>ReaderUtil</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>ToStringUtils</name></name>;</import>
 
 <comment type="block" format="javadoc">/** A Query that matches documents containing a term.
@@ -88,7 +89,7 @@ public class TermQuery extends Query {
     public Scorer scorer(AtomicReaderContext context, boolean scoreDocsInOrder, boolean topScorer) throws IOException {
       final String field = term.field();
       final IndexReader reader = context.reader;
      assert assertTopReaderContext(termStates, context) : "The top-reader used to create Weight is not the same as the current reader's top-reader";
      assert termStates.topReaderContext == ReaderUtil.getTopLevelContext(context) : "The top-reader used to create Weight is not the same as the current reader's top-reader";
       final TermState state = termStates
           .get(context.ord);
       if (state == null) { // term is not present in that reader
@@ -106,14 +107,6 @@ public class TermQuery extends Query {
       return terms == null || terms.docFreq(bytes) == 0;
     }
     
    private boolean assertTopReaderContext(PerReaderTermState state, ReaderContext context) {
      while(context.parent != null) {
        context = context.parent;
      }
      return state.topReaderContext == context;
    }
    
   
     @Override
     public Explanation explain(AtomicReaderContext context, int doc)
       throws IOException {
diff --git a/lucene/src/java/org/apache/lucene/search/function/FieldCacheSource.java b/lucene/src/java/org/apache/lucene/search/function/FieldCacheSource.java
index b55ae5ff820..c079ebddb81 100644
-- a/lucene/src/java/org/apache/lucene/search/function/FieldCacheSource.java
++ b/lucene/src/java/org/apache/lucene/search/function/FieldCacheSource.java
@@ -20,6 +20,7 @@ package org.apache.lucene.search.function;
 import java.io.IOException;
 
 import org.apache.lucene.index.IndexReader;
import org.apache.lucene.index.IndexReader.AtomicReaderContext;
 import org.apache.lucene.search.FieldCache;
 
 /**
@@ -55,8 +56,8 @@ public abstract class FieldCacheSource extends ValueSource {
 
   /* (non-Javadoc) @see org.apache.lucene.search.function.ValueSource#getValues(org.apache.lucene.index.IndexReader) */</comment>
   <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <specifier>final</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <return>return <expr><call><name>getCachedFieldValues</name><argument_list>(<argument><expr><name><name>FieldCache</name><operator>.</operator><name>DEFAULT</name></name></expr></argument>, <argument><expr><name>field</name></expr></argument>, <argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr>;</return>
  <function><type><specifier>public</specifier> <specifier>final</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <return>return <expr><call><name>getCachedFieldValues</name><argument_list>(<argument><expr><name><name>FieldCache</name><operator>.</operator><name>DEFAULT</name></name></expr></argument>, <argument><expr><name>field</name></expr></argument>, <argument><expr><name><name>context</name><operator>.</operator><name>reader</name></name></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
 
   <comment type="block">/* (non-Javadoc) @see org.apache.lucene.search.function.ValueSource#description() */</comment>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>MultiValueSource</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>MultiValueSource</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">534cd1230b9</literal><operator>..</operator><literal type="number">7dbccb25a69</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>MultiValueSource</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>MultiValueSource</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name></name>;</package>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Explanation</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>ReaderUtil</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">44</literal></expr><operator>,</operator><expr><literal type="number">16</literal> <operator>+</operator><literal type="number">47</literal></expr><operator>,</operator><expr><literal type="number">16</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>MultiValueSource</name> extends <name>ValueSource</name> <block>{
   }</block>
 
   @<name>Override</name>
  <specifier>public</specifier> <name>DocValues</name> <call><name>getValues</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{

    <expr><name><name>IndexReader</name><index>[]</index></name> <name>subReaders</name> <operator>=</operator> <call><name><name>reader</name><operator>.</operator><name>getSequentialSubReaders</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>subReaders</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <comment type="line">// This is a composite reader</comment>
      <return>return <expr><operator>new</operator> <call><name>MultiDocValues</name><argument_list>(<argument><expr><name>subReaders</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></if> <else>else <block>{<block_content>
  <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
       <comment type="line">// Already an atomic reader -- just delegate</comment>
      <return>return <expr><call><name><name>other</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr>;</return>
      <return>return <expr><call><name><name>other</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>
  
  <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>ReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name><name>context</name><operator>.</operator><name>isAtomic</name></name></expr>)</condition> <block>{<block_content>
      <return>return <expr><call><name>getValues</name><argument_list>(<argument><expr><operator>(</operator><name>AtomicReaderContext</name><operator>)</operator> <name>context</name></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block></if></if_stmt>
    <return>return <expr><operator>new</operator> <call><name>MultiDocValues</name><argument_list>(<argument><expr><call><name><name>ReaderUtil</name><operator>.</operator><name>leaves</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
 
   <annotation>@<name>Override</name></annotation>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">78</literal></expr><operator>,</operator><expr><literal type="number">59</literal> <operator>+</operator><literal type="number">81</literal></expr><operator>,</operator><expr><literal type="number">56</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>MultiValueSource</name> extends <name>ValueSource</name> <block>{
   <expr><specifier>private</specifier> <name>final</name> <name>class</name> <name>MultiDocValues</name> extends <name>DocValues</name> <block>{
 
     <expr><name>final</name> <name><name>DocValues</name><index>[]</index></name> <name>docValues</name></expr>;
    <name>final</name> <name><name>int</name><index>[]</index></name> <name>docStarts</name></block></expr>;

    <call><name>MultiDocValues</name><argument_list>(<argument><expr><name><name>IndexReader</name><index>[]</index></name> <name>subReaders</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
      <expr><name>docValues</name> <operator>=</operator> <operator>new</operator> <name><name>DocValues</name><index>[<expr><name><name>subReaders</name><operator>.</operator><name>length</name></name></expr>]</index></name></expr></block></expr></argument></throws></block></expr>;</expr_stmt>
      <expr_stmt><expr><name>docStarts</name> <operator>=</operator> <operator>new</operator> <name><name>int</name><index>[<expr><name><name>subReaders</name><operator>.</operator><name>length</name></name></expr>]</index></name></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>int</name></type> <name>base</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
      <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name><name>subReaders</name><operator>.</operator><name>length</name></name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
        <expr_stmt><expr><name><name>docValues</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name><name>other</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name><name>subReaders</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>docStarts</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name>base</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>base</name> <operator>+=</operator> <name><name>subReaders</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>maxDoc</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>AtomicReaderContext</name><index>[]</index></name></type> <name>leaves</name></decl>;</decl_stmt>

    <expr_stmt><expr><call><name>MultiDocValues</name><argument_list>(<argument><expr><name><name>AtomicReaderContext</name><index>[]</index></name> <name>leaves</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
      <expr><name><name>this</name><operator>.</operator><name>leaves</name></name> <operator>=</operator> <name>leaves</name></expr></block></expr></argument></throws></expr>;</expr_stmt>
      <expr_stmt><expr><name>docValues</name> <operator>=</operator> <operator>new</operator> <name><name>DocValues</name><index>[<expr><name><name>leaves</name><operator>.</operator><name>length</name></name></expr>]</index></name></expr>;</expr_stmt>
      <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name><name>leaves</name><operator>.</operator><name>length</name></name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
        <expr_stmt><expr><name><name>docValues</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name><name>other</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name><name>leaves</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></for>
     </block_content>}</block></for>
     
     <function><annotation>@<name>Override</name></annotation>
     <type><specifier>public</specifier> <name>float</name></type> <name>floatVal</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <decl_stmt><decl><type><specifier>final</specifier> <name>int</name></type> <name>n</name> <init>= <expr><call><name><name>ReaderUtil</name><operator>.</operator><name>subIndex</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>, <argument><expr><name>docStarts</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <return>return <expr><name><name>docValues</name><index>[<expr><name>n</name></expr>]</index></name><operator>.</operator><call><name>floatVal</name><argument_list>(<argument><expr><name>doc</name><operator>-</operator><name><name>docStarts</name><index>[<expr><name>n</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</return>
      <decl_stmt><decl><type><specifier>final</specifier> <name>int</name></type> <name>n</name> <init>= <expr><call><name><name>ReaderUtil</name><operator>.</operator><name>subIndex</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>, <argument><expr><name>leaves</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <return>return <expr><name><name>docValues</name><index>[<expr><name>n</name></expr>]</index></name><operator>.</operator><call><name>floatVal</name><argument_list>(<argument><expr><name>doc</name><operator>-</operator><name><name>leaves</name><index>[<expr><name>n</name></expr>]</index></name><operator>.</operator><name>docBase</name></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block></function>
 
     <function><annotation>@<name>Override</name></annotation>
     <type><specifier>public</specifier> <name>int</name></type> <name>intVal</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <decl_stmt><decl><type><specifier>final</specifier> <name>int</name></type> <name>n</name> <init>= <expr><call><name><name>ReaderUtil</name><operator>.</operator><name>subIndex</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>, <argument><expr><name>docStarts</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <return>return <expr><name><name>docValues</name><index>[<expr><name>n</name></expr>]</index></name><operator>.</operator><call><name>intVal</name><argument_list>(<argument><expr><name>doc</name><operator>-</operator><name><name>docStarts</name><index>[<expr><name>n</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</return>
      <decl_stmt><decl><type><specifier>final</specifier> <name>int</name></type> <name>n</name> <init>= <expr><call><name><name>ReaderUtil</name><operator>.</operator><name>subIndex</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>, <argument><expr><name>leaves</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <return>return <expr><name><name>docValues</name><index>[<expr><name>n</name></expr>]</index></name><operator>.</operator><call><name>intVal</name><argument_list>(<argument><expr><name>doc</name><operator>-</operator><name><name>leaves</name><index>[<expr><name>n</name></expr>]</index></name><operator>.</operator><name>docBase</name></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block></function>
 
     <function><annotation>@<name>Override</name></annotation>
     <type><specifier>public</specifier> <name>long</name></type> <name>longVal</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <decl_stmt><decl><type><specifier>final</specifier> <name>int</name></type> <name>n</name> <init>= <expr><call><name><name>ReaderUtil</name><operator>.</operator><name>subIndex</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>, <argument><expr><name>docStarts</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <return>return <expr><name><name>docValues</name><index>[<expr><name>n</name></expr>]</index></name><operator>.</operator><call><name>longVal</name><argument_list>(<argument><expr><name>doc</name><operator>-</operator><name><name>docStarts</name><index>[<expr><name>n</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</return>
      <decl_stmt><decl><type><specifier>final</specifier> <name>int</name></type> <name>n</name> <init>= <expr><call><name><name>ReaderUtil</name><operator>.</operator><name>subIndex</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>, <argument><expr><name>leaves</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <return>return <expr><name><name>docValues</name><index>[<expr><name>n</name></expr>]</index></name><operator>.</operator><call><name>longVal</name><argument_list>(<argument><expr><name>doc</name><operator>-</operator><name><name>leaves</name><index>[<expr><name>n</name></expr>]</index></name><operator>.</operator><name>docBase</name></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block></function>
 
     <function><annotation>@<name>Override</name></annotation>
     <type><specifier>public</specifier> <name>double</name></type> <name>doubleVal</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <decl_stmt><decl><type><specifier>final</specifier> <name>int</name></type> <name>n</name> <init>= <expr><call><name><name>ReaderUtil</name><operator>.</operator><name>subIndex</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>, <argument><expr><name>docStarts</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <return>return <expr><name><name>docValues</name><index>[<expr><name>n</name></expr>]</index></name><operator>.</operator><call><name>doubleVal</name><argument_list>(<argument><expr><name>doc</name><operator>-</operator><name><name>docStarts</name><index>[<expr><name>n</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</return>
      <decl_stmt><decl><type><specifier>final</specifier> <name>int</name></type> <name>n</name> <init>= <expr><call><name><name>ReaderUtil</name><operator>.</operator><name>subIndex</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>, <argument><expr><name>leaves</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <return>return <expr><name><name>docValues</name><index>[<expr><name>n</name></expr>]</index></name><operator>.</operator><call><name>doubleVal</name><argument_list>(<argument><expr><name>doc</name><operator>-</operator><name><name>leaves</name><index>[<expr><name>n</name></expr>]</index></name><operator>.</operator><name>docBase</name></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block></function>
 
     <function><annotation>@<name>Override</name></annotation>
     <type><specifier>public</specifier> <name>String</name></type> <name>strVal</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <decl_stmt><decl><type><specifier>final</specifier> <name>int</name></type> <name>n</name> <init>= <expr><call><name><name>ReaderUtil</name><operator>.</operator><name>subIndex</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>, <argument><expr><name>docStarts</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <return>return <expr><name><name>docValues</name><index>[<expr><name>n</name></expr>]</index></name><operator>.</operator><call><name>strVal</name><argument_list>(<argument><expr><name>doc</name><operator>-</operator><name><name>docStarts</name><index>[<expr><name>n</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</return>
      <decl_stmt><decl><type><specifier>final</specifier> <name>int</name></type> <name>n</name> <init>= <expr><call><name><name>ReaderUtil</name><operator>.</operator><name>subIndex</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>, <argument><expr><name>leaves</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <return>return <expr><name><name>docValues</name><index>[<expr><name>n</name></expr>]</index></name><operator>.</operator><call><name>strVal</name><argument_list>(<argument><expr><name>doc</name><operator>-</operator><name><name>leaves</name><index>[<expr><name>n</name></expr>]</index></name><operator>.</operator><name>docBase</name></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block></function>
 
     <function><annotation>@<name>Override</name></annotation>
     <type><specifier>public</specifier> <name>String</name></type> <name>toString</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <decl_stmt><decl><type><specifier>final</specifier> <name>int</name></type> <name>n</name> <init>= <expr><call><name><name>ReaderUtil</name><operator>.</operator><name>subIndex</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>, <argument><expr><name>docStarts</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <return>return <expr><name><name>docValues</name><index>[<expr><name>n</name></expr>]</index></name><operator>.</operator><call><name>toString</name><argument_list>(<argument><expr><name>doc</name><operator>-</operator><name><name>docStarts</name><index>[<expr><name>n</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</return>
      <decl_stmt><decl><type><specifier>final</specifier> <name>int</name></type> <name>n</name> <init>= <expr><call><name><name>ReaderUtil</name><operator>.</operator><name>subIndex</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>, <argument><expr><name>leaves</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <return>return <expr><name><name>docValues</name><index>[<expr><name>n</name></expr>]</index></name><operator>.</operator><call><name>toString</name><argument_list>(<argument><expr><name>doc</name><operator>-</operator><name><name>leaves</name><index>[<expr><name>n</name></expr>]</index></name><operator>.</operator><name>docBase</name></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block></function>
 
     <function><annotation>@<name>Override</name></annotation>
     <type><specifier>public</specifier> <name>Explanation</name></type> <name>explain</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <decl_stmt><decl><type><specifier>final</specifier> <name>int</name></type> <name>n</name> <init>= <expr><call><name><name>ReaderUtil</name><operator>.</operator><name>subIndex</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>, <argument><expr><name>docStarts</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <return>return <expr><name><name>docValues</name><index>[<expr><name>n</name></expr>]</index></name><operator>.</operator><call><name>explain</name><argument_list>(<argument><expr><name>doc</name><operator>-</operator><name><name>docStarts</name><index>[<expr><name>n</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</return>
      <decl_stmt><decl><type><specifier>final</specifier> <name>int</name></type> <name>n</name> <init>= <expr><call><name><name>ReaderUtil</name><operator>.</operator><name>subIndex</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>, <argument><expr><name>leaves</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <return>return <expr><name><name>docValues</name><index>[<expr><name>n</name></expr>]</index></name><operator>.</operator><call><name>explain</name><argument_list>(<argument><expr><name>doc</name><operator>-</operator><name><name>leaves</name><index>[<expr><name>n</name></expr>]</index></name><operator>.</operator><name>docBase</name></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block></function>
   </block_content>}</block></else></if_stmt>
 </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>OrdFieldSource</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>OrdFieldSource</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">218375d2d5b</literal><operator>..</operator><name>e7817da359e</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>OrdFieldSource</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>OrdFieldSource</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt>
 
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name></name>;</package>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>FieldCache</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>FieldCache</name><operator>.</operator><name>DocTermsIndex</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">69</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">69</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>OrdFieldSource</name> extends <name>ValueSource</name> <block>{
 
   <comment type="block">/*(non-Javadoc) @see org.apache.lucene.search.function.ValueSource#getValues(org.apache.lucene.index.IndexReader) */</comment>
   @<expr><name>Override</name>
  <specifier>public</specifier> <name>DocValues</name> <call><name>getValues</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><name>final</name> <name>DocTermsIndex</name> <name>termsIndex</name> <operator>=</operator> <call><name><name>FieldCache</name><operator>.</operator><name>DEFAULT</name><operator>.</operator><name>getTermsIndex</name></name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><name>field</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
  <expr><specifier>public</specifier> <name>DocValues</name> <call><name>getValues</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><name>final</name> <name>DocTermsIndex</name> <name>termsIndex</name> <operator>=</operator> <call><name><name>FieldCache</name><operator>.</operator><name>DEFAULT</name><operator>.</operator><name>getTermsIndex</name></name><argument_list>(<argument><expr><name><name>context</name><operator>.</operator><name>reader</name></name></expr></argument>, <argument><expr><name>field</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
     <return>return <expr><operator>new</operator> <class><super><name>DocValues</name></super><argument_list>()</argument_list> <block>{
       <comment type="block">/*(non-Javadoc) @see org.apache.lucene.search.function.DocValues#floatVal(int) */</comment>
       <annotation>@<name>Override</name></annotation>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ReverseOrdFieldSource</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ReverseOrdFieldSource</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">517c37a7675</literal><operator>..</operator><literal type="number">30e339d5724</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ReverseOrdFieldSource</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ReverseOrdFieldSource</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt>
 
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name></name>;</package>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>FieldCache</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">69</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">69</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>ReverseOrdFieldSource</name> extends <name>ValueSource</name> <block>{
 
   <comment type="block">/*(non-Javadoc) @see org.apache.lucene.search.function.ValueSource#getValues(org.apache.lucene.index.IndexReader) */</comment>
   @<expr><name>Override</name>
  <specifier>public</specifier> <name>DocValues</name> <call><name>getValues</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><name>final</name> <name><name>FieldCache</name><operator>.</operator><name>DocTermsIndex</name></name> <name>termsIndex</name> <operator>=</operator> <call><name><name>FieldCache</name><operator>.</operator><name>DEFAULT</name><operator>.</operator><name>getTermsIndex</name></name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><name>field</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
  <expr><specifier>public</specifier> <name>DocValues</name> <call><name>getValues</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><name>final</name> <name><name>FieldCache</name><operator>.</operator><name>DocTermsIndex</name></name> <name>termsIndex</name> <operator>=</operator> <call><name><name>FieldCache</name><operator>.</operator><name>DEFAULT</name><operator>.</operator><name>getTermsIndex</name></name><argument_list>(<argument><expr><name><name>context</name><operator>.</operator><name>reader</name></name></expr></argument>, <argument><expr><name>field</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
 
     <expr><name>final</name> <name>int</name> <name>end</name> <operator>=</operator> <call><name><name>termsIndex</name><operator>.</operator><name>numOrd</name></name><argument_list>()</argument_list></call></expr>;
 
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ValueSource</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ValueSource</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">0f8c7aa1298</literal><operator>..</operator><name>b2c9603694a</name> <literal type="number">100755</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ValueSource</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ValueSource</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">17</literal></expr>,<expr><literal type="number">10</literal> @@</expr> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name></name>;</package>
  <operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></block></expr></expr_stmt>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>CompositeReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name><operator>.</operator><name>DocValues</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">39</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">42</literal></expr><operator>,</operator><expr><literal type="number">23</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>ValueSource</name> implements <name>Serializable</name> <block>{
 
   <comment type="block" format="javadoc">/**
    * Return the DocValues used by the function query.
   * @param reader the IndexReader used to read these values.
   * @param context the IndexReader used to read these values.
    * If any caching is involved, that caching would also be IndexReader based.  
    * @throws IOException for any error.
    */</comment>
  <expr><specifier>public</specifier> <specifier>abstract</specifier> <name>DocValues</name> <call><name>getValues</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws></expr>;
  <expr><specifier>public</specifier> <specifier>abstract</specifier> <name>DocValues</name> <call><name>getValues</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws></expr>;
  
  <comment type="block" format="javadoc">/**
   * Return the DocValues used by the function query.
   * @deprecated (4.0) This method is temporary, to ease the migration to segment-based
   * searching. Please change your code to not pass {@link CompositeReaderContext} to these
   * APIs. Use {@link #getValues(AtomicReaderContext)} instead
   */</comment>
  @<expr><name>Deprecated</name>
  <specifier>public</specifier> <name>DocValues</name> <call><name>getValues</name><argument_list>(<argument><expr><name>ReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr>
    <return>return <expr><call><name>getValues</name><argument_list>(<argument><expr><operator>(</operator><name>AtomicReaderContext</name><operator>)</operator> <name>context</name></expr></argument>)</argument_list></call></expr>;</return></block></expr></expr_stmt></block></class></expr></return>
  }</block>

 
   <comment type="block" format="javadoc">/** 
    * description of field, used in explain() 
diff --git a/lucene/src/java/org/apache/lucene/search/function/ValueSourceQuery.java b/lucene/src/java/org/apache/lucene/search/function/ValueSourceQuery.java
index 1a3f7706e67..38e4c95e625 100644
-- a/lucene/src/java/org/apache/lucene/search/function/ValueSourceQuery.java
++ b/lucene/src/java/org/apache/lucene/search/function/ValueSourceQuery.java
@@ -100,13 +100,13 @@ public class ValueSourceQuery extends Query {
 
     @Override
     public Scorer scorer(AtomicReaderContext context, boolean scoreDocsInOrder, boolean topScorer) throws IOException {
      return new ValueSourceScorer(similarity, context.reader, this);
      return new ValueSourceScorer(similarity, context, this);
     }
 
     /*(non-Javadoc) @see org.apache.lucene.search.Weight#explain(org.apache.lucene.index.IndexReader, int) */</comment>
     @<name>Override</name>
     <specifier>public</specifier> <name>Explanation</name> <call><name>explain</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>int</name> <name>doc</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
      <expr><name>DocValues</name> <name>vals</name> <operator>=</operator> <call><name><name>valSrc</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name><name>context</name><operator>.</operator><name>reader</name></name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>DocValues</name></type> <name>vals</name> <init>= <expr><call><name><name>valSrc</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>float</name></type> <name>sc</name> <init>= <expr><name>queryWeight</name> <operator>*</operator> <call><name><name>vals</name><operator>.</operator><name>floatVal</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
       <decl_stmt><decl><type><name>Explanation</name></type> <name>result</name> <init>= <expr><operator>new</operator> <call><name>ComplexExplanation</name><argument_list>(
<argument>@@ <expr><operator>-</operator><literal type="number">133</literal></expr></argument>,<argument><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">133</literal></expr></argument>,<argument><expr><literal type="number">12</literal> @@ <specifier>public</specifier> class <name>ValueSourceQuery</name> extends <name>Query</name> <block>{
     <expr><specifier>private</specifier> <name>int</name> <name>doc</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;
 
     <comment type="line">// constructor</comment>
    <expr><specifier>private</specifier> <call><name>ValueSourceScorer</name><argument_list>(<argument><expr><name>Similarity</name> <name>similarity</name></expr></argument>, <argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>, <argument><expr><name>ValueSourceWeight</name> <name>w</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><specifier>private</specifier> <call><name>ValueSourceScorer</name><argument_list>(<argument><expr><name>Similarity</name> <name>similarity</name></expr></argument>, <argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>ValueSourceWeight</name> <name>w</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
       <expr><call><name>super</name><argument_list>(<argument><expr><name>similarity</name></expr></argument>,<argument><expr><name>w</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
      <expr><name>final</name> <name>IndexReader</name> <name>reader</name> <operator>=</operator> <name><name>context</name><operator>.</operator><name>reader</name></name></expr>;
       <expr><name>qWeight</name> <operator>=</operator> <call><name><name>w</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr>;
       <comment type="line">// this is when/where the values are first created.</comment>
      <expr><name>vals</name> <operator>=</operator> <call><name><name>valSrc</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr>;
      <expr><name>vals</name> <operator>=</operator> <call><name><name>valSrc</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;
       <expr><name>delDocs</name> <operator>=</operator> <call><name><name>reader</name><operator>.</operator><name>getDeletedDocs</name></name><argument_list>()</argument_list></call></expr>;
       <expr><name>maxDoc</name> <operator>=</operator> <call><name><name>reader</name><operator>.</operator><name>maxDoc</name></name><argument_list>()</argument_list></call></expr>;
     }</block>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>ReaderUtil</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>ReaderUtil</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>e1533433c1b</name><operator>..</operator><literal type="number">772b5ebf751</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>ReaderUtil</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>ReaderUtil</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">228</literal></expr></argument>,<argument><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">228</literal></expr></argument>,<argument><expr><literal type="number">17</literal> @@ <specifier>public</specifier> <name>final</name> class <name>ReaderUtil</name> <block>{
     }</block></expr></argument>
     <return>return <expr><name>leaves</name></expr>;</return></argument_list></call></expr></init></decl></decl_stmt>
   </block_content>}</block></function>
  
  <comment type="block" format="javadoc">/**
   * Walks up the reader tree and return the given context's top level reader
   * context, or in other words the reader tree's root context.
   */</comment>
  <function><type><specifier>public</specifier> <specifier>static</specifier> <name>ReaderContext</name></type> <name>getTopLevelContext</name><parameter_list>(<parameter><decl><type><name>ReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <while>while <condition>(<expr><name><name>context</name><operator>.</operator><name>parent</name></name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>context</name> <operator>=</operator> <name><name>context</name><operator>.</operator><name>parent</name></name></expr>;</expr_stmt>
    </block_content>}</block></while>
    <return>return <expr><name>context</name></expr>;</return>
  </block_content>}</block></function>
 
   <comment type="block" format="javadoc">/**
    * Returns index of the searcher/reader for document &lt;code&gt;n&lt;/code&gt; in the
diff --git a/lucene/src/test/org/apache/lucene/search/function/JustCompileSearchSpans.java b/lucene/src/test/org/apache/lucene/search/function/JustCompileSearchSpans.java
index a85f040352c..96f5032c629 100644
-- a/lucene/src/test/org/apache/lucene/search/function/JustCompileSearchSpans.java
++ b/lucene/src/test/org/apache/lucene/search/function/JustCompileSearchSpans.java
@@ -18,6 +18,7 @@ package org.apache.lucene.search.function;
  */</comment>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>FieldCache</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">82</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">83</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <name>final</name> <name>class</name> <name>JustCompileSearchFunction</name> <block>{
     }</block>
 
     @<name>Override</name>
    <specifier>public</specifier> <name>DocValues</name> <call><name>getValues</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><specifier>public</specifier> <name>DocValues</name> <call><name>getValues</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws>
       <throw>throw <argument_list>new <argument><expr><call><name>UnsupportedOperationException</name><argument_list>(<argument><expr><name>UNSUPPORTED_MSG</name></expr></argument>)</argument_list></call></expr></argument></argument_list></throw></expr>;</expr_stmt>
     </block_content>}</block></constructor>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>TestFieldScoreQuery</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>TestFieldScoreQuery</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">8ff2af949d9</literal><operator>..</operator><name>a90be6ec36c</name> <literal type="number">100755</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>TestFieldScoreQuery</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>TestFieldScoreQuery</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>IndexSearcher</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Query</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>QueryUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>ScoreDoc</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>TopDocs</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>ReaderUtil</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
@@ -185,12 +186,12 @@ public class TestFieldScoreQuery extends FunctionTestSetup {
       FieldScoreQuery q = new FieldScoreQuery(field,tp);
       ScoreDoc[] h = s.search(q, null, 1000).scoreDocs;
       assertEquals("All docs should be matched!",N_DOCS,h.length);
      IndexReader[] readers = s.getIndexReader().getSequentialSubReaders();
      for (int j = 0; j &lt; readers.length; j++) {
        IndexReader reader = readers[j];
      AtomicReaderContext[] leaves = ReaderUtil.leaves(s.getTopReaderContext());
      for (int j = 0; j &lt; leaves.length; j++) {
        AtomicReaderContext leaf = leaves[j];
         try {
           if (i == 0) {
            innerArray[j] = q.valSrc.getValues(reader).getInnerArray();
            innerArray[j] = q.valSrc.getValues(leaf).getInnerArray();
             log(i + ".  compare: " + innerArray[j].getClass() + " to "
                 + expectedArrayTypes.get(tp).getClass());
             assertEquals(
@@ -198,9 +199,9 @@ public class TestFieldScoreQuery extends FunctionTestSetup {
                 innerArray[j].getClass(), expectedArrayTypes.get(tp).getClass());
           } else {
             log(i + ".  compare: " + innerArray[j] + " to "
                + q.valSrc.getValues(reader).getInnerArray());
                + q.valSrc.getValues(leaf).getInnerArray());
             assertSame("field values should be cached and reused!", innerArray[j],
                q.valSrc.getValues(reader).getInnerArray());
                q.valSrc.getValues(leaf).getInnerArray());
           }
         } catch (UnsupportedOperationException e) {
           if (!warned) {
@@ -217,15 +218,15 @@ public class TestFieldScoreQuery extends FunctionTestSetup {
     FieldScoreQuery q = new FieldScoreQuery(field,tp);
     ScoreDoc[] h = s.search(q, null, 1000).scoreDocs;
     assertEquals("All docs should be matched!",N_DOCS,h.length);
    IndexReader[] readers = s.getIndexReader().getSequentialSubReaders();
    for (int j = 0; j &lt; readers.length; j++) {
      IndexReader reader = readers[j];
    AtomicReaderContext[] leaves = ReaderUtil.leaves(s.getTopReaderContext());
    for (int j = 0; j &lt; leaves.length; j++) {
      AtomicReaderContext leaf = leaves[j];
       try {
         log("compare: " + innerArray + " to "
            + q.valSrc.getValues(reader).getInnerArray());
            + q.valSrc.getValues(leaf).getInnerArray());
         assertNotSame(
             "cached field values should not be reused if reader as changed!",
            innerArray, q.valSrc.getValues(reader).getInnerArray());
            innerArray, q.valSrc.getValues(leaf).getInnerArray());
       } catch (UnsupportedOperationException e) {
         if (!warned) {
           System.err.println("WARNING: " + testName()
diff --git a/lucene/src/test/org/apache/lucene/search/function/TestOrdValues.java b/lucene/src/test/org/apache/lucene/search/function/TestOrdValues.java
index 8fb7eda1484..706eca76f43 100644
-- a/lucene/src/test/org/apache/lucene/search/function/TestOrdValues.java
++ b/lucene/src/test/org/apache/lucene/search/function/TestOrdValues.java
@@ -18,8 +18,9 @@ package org.apache.lucene.search.function;
  */</comment>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>CorruptIndexException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>*</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>ReaderUtil</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
@@ -168,14 +169,14 @@ public class TestOrdValues extends FunctionTestSetup {
       ScoreDoc[] h = s.search(q, null, 1000).scoreDocs;
       try {
         assertEquals("All docs should be matched!", N_DOCS, h.length);
        IndexReader[] readers = s.getIndexReader().getSequentialSubReaders();
        AtomicReaderContext[] leaves = ReaderUtil.leaves(s.getTopReaderContext());
 
        for (IndexReader reader : readers) {
        for (AtomicReaderContext leaf : leaves) {
           if (i == 0) {
            innerArray = q.valSrc.getValues(reader).getInnerArray();
            innerArray = q.valSrc.getValues(leaf).getInnerArray();
           } else {
            log(i + ".  compare: " + innerArray + " to " + q.valSrc.getValues(reader).getInnerArray());
            assertSame("field values should be cached and reused!", innerArray, q.valSrc.getValues(reader).getInnerArray());
            log(i + ".  compare: " + innerArray + " to " + q.valSrc.getValues(leaf).getInnerArray());
            assertSame("field values should be cached and reused!", innerArray, q.valSrc.getValues(leaf).getInnerArray());
           }
         }
       } catch (UnsupportedOperationException e) {
@@ -201,15 +202,15 @@ public class TestOrdValues extends FunctionTestSetup {
     q = new ValueSourceQuery(vs);
     h = s.search(q, null, 1000).scoreDocs;
     assertEquals("All docs should be matched!", N_DOCS, h.length);
    IndexReader[] readers = s.getIndexReader().getSequentialSubReaders();
    AtomicReaderContext[] leaves = ReaderUtil.leaves(s.getTopReaderContext());
 
    for (IndexReader reader : readers) {
    for (AtomicReaderContext leaf : leaves) {
       try {
         log("compare (should differ): " + innerArray + " to "
                + q.valSrc.getValues(reader).getInnerArray());
                + q.valSrc.getValues(leaf).getInnerArray());
         assertNotSame(
                 "different values should be loaded for a different field!",
                innerArray, q.valSrc.getValues(reader).getInnerArray());
                innerArray, q.valSrc.getValues(leaf).getInnerArray());
       } catch (UnsupportedOperationException e) {
         if (!warned) {
           System.err.println("WARNING: " + testName()
@@ -229,15 +230,15 @@ public class TestOrdValues extends FunctionTestSetup {
     q = new ValueSourceQuery(vs);
     h = s.search(q, null, 1000).scoreDocs;
     assertEquals("All docs should be matched!", N_DOCS, h.length);
    readers = s.getIndexReader().getSequentialSubReaders();
    leaves = ReaderUtil.leaves(s.getTopReaderContext());
 
    for (IndexReader reader : readers) {
    for (AtomicReaderContext leaf : leaves) {
       try {
         log("compare (should differ): " + innerArray + " to "
                + q.valSrc.getValues(reader).getInnerArray());
                + q.valSrc.getValues(leaf).getInnerArray());
         assertNotSame(
                 "cached field values should not be reused if reader as changed!",
                innerArray, q.valSrc.getValues(reader).getInnerArray());
                innerArray, q.valSrc.getValues(leaf).getInnerArray());
       } catch (UnsupportedOperationException e) {
         if (!warned) {
           System.err.println("WARNING: " + testName()
diff --git a/lucene/src/test/org/apache/lucene/search/function/TestValueSource.java b/lucene/src/test/org/apache/lucene/search/function/TestValueSource.java
index 38b6e9cd91f..d6b9f780dae 100644
-- a/lucene/src/test/org/apache/lucene/search/function/TestValueSource.java
++ b/lucene/src/test/org/apache/lucene/search/function/TestValueSource.java
@@ -22,6 +22,7 @@ import org.apache.lucene.store.*;
 import org.apache.lucene.search.*;
 import org.apache.lucene.analysis.*;
 import org.apache.lucene.index.*;
import org.apache.lucene.index.IndexReader.AtomicReaderContext;
 import org.apache.lucene.document.*;
 
 public class TestValueSource extends LuceneTestCase {
@@ -45,11 +46,17 @@ public class TestValueSource extends LuceneTestCase {
     assertTrue(r.getSequentialSubReaders().length &gt; 1);
 
     ValueSource s1 = new IntFieldSource("field");
    DocValues v1 = s1.getValues(r);
    DocValues v2 = new MultiValueSource(s1).getValues(r);

    AtomicReaderContext[] leaves = ReaderUtil.leaves(r.getTopReaderContext());
    DocValues v1 = null;
    DocValues v2 = new MultiValueSource(s1).getValues(r.getTopReaderContext());
    int leafOrd = -1;
     for(int i=0;i&lt;r.maxDoc();i++) {
      assertEquals(v1.intVal(i), i);
      int subIndex = ReaderUtil.subIndex(i, leaves);
      if (subIndex != leafOrd) {
        leafOrd = subIndex;
        v1 = s1.getValues(leaves[leafOrd]);
      }
      assertEquals(v1.intVal(i - leaves[leafOrd].docBase), i);
       assertEquals(v2.intVal(i), i);
     }
 
diff --git a/solr/src/java/org/apache/solr/core/SolrCore.java b/solr/src/java/org/apache/solr/core/SolrCore.java
index 1d61661f82d..b1774338967 100644
-- a/solr/src/java/org/apache/solr/core/SolrCore.java
++ b/solr/src/java/org/apache/solr/core/SolrCore.java
@@ -1005,7 +1005,7 @@ public final class SolrCore implements SolrInfoMBean {
       
       if (newestSearcher != null &amp;&amp; solrConfig.reopenReaders
           &amp;&amp; indexDirFile.equals(newIndexDirFile)) {
        IndexReader currentReader = newestSearcher.get().getReader();
        IndexReader currentReader = newestSearcher.get().getIndexReader();
         IndexReader newReader = currentReader.reopen();
 
         if (newReader == currentReader) {
diff --git a/solr/src/java/org/apache/solr/handler/MoreLikeThisHandler.java b/solr/src/java/org/apache/solr/handler/MoreLikeThisHandler.java
index bad251ccb12..e367d8922f4 100644
-- a/solr/src/java/org/apache/solr/handler/MoreLikeThisHandler.java
++ b/solr/src/java/org/apache/solr/handler/MoreLikeThisHandler.java
@@ -284,7 +284,7 @@ public class MoreLikeThisHandler extends RequestHandlerBase
     public MoreLikeThisHelper( SolrParams params, SolrIndexSearcher searcher )
     {
       this.searcher = searcher;
      this.reader = searcher.getReader();
      this.reader = searcher.getIndexReader();
       this.uniqueKeyField = searcher.getSchema().getUniqueKeyField();
       this.needDocSet = params.getBool(FacetParams.FACET,false);
       
diff --git a/solr/src/java/org/apache/solr/handler/ReplicationHandler.java b/solr/src/java/org/apache/solr/handler/ReplicationHandler.java
index a9983c798c8..d08cdb94cd2 100644
-- a/solr/src/java/org/apache/solr/handler/ReplicationHandler.java
++ b/solr/src/java/org/apache/solr/handler/ReplicationHandler.java
@@ -281,7 +281,7 @@ public class ReplicationHandler extends RequestHandlerBase implements SolrCoreAw
       IndexCommit indexCommit = delPolicy.getLatestCommit();
 
       if(indexCommit == null) {
        indexCommit = req.getSearcher().getReader().getIndexCommit();
        indexCommit = req.getSearcher().getIndexReader().getIndexCommit();
       }
 
       // small race here before the commit point is saved
@@ -481,8 +481,8 @@ public class ReplicationHandler extends RequestHandlerBase implements SolrCoreAw
     long version[] = new long[2];
     RefCounted&lt;SolrIndexSearcher&gt; searcher = core.getSearcher();
     try {
      version[0] = searcher.get().getReader().getIndexCommit().getVersion();
      version[1] = searcher.get().getReader().getIndexCommit().getGeneration();
      version[0] = searcher.get().getIndexReader().getIndexCommit().getVersion();
      version[1] = searcher.get().getIndexReader().getIndexCommit().getGeneration();
     } catch (IOException e) {
       LOG.warn("Unable to get index version : ", e);
     } finally {
@@ -823,7 +823,7 @@ public class ReplicationHandler extends RequestHandlerBase implements SolrCoreAw
         replicateOnStart = true;
         RefCounted&lt;SolrIndexSearcher&gt; s = core.getNewestSearcher(false);
         try {
          IndexReader reader = s==null ? null : s.get().getReader();
          IndexReader reader = s==null ? null : s.get().getIndexReader();
           if (reader!=null &amp;&amp; reader.getIndexCommit() != null &amp;&amp; reader.getIndexCommit().getGeneration() != 1L) {
             try {
               if(replicateOnOptimize){
diff --git a/solr/src/java/org/apache/solr/handler/SnapPuller.java b/solr/src/java/org/apache/solr/handler/SnapPuller.java
index 1a41f827680..88ac16671cf 100644
-- a/solr/src/java/org/apache/solr/handler/SnapPuller.java
++ b/solr/src/java/org/apache/solr/handler/SnapPuller.java
@@ -269,7 +269,7 @@ public class SnapPuller {
       RefCounted&lt;SolrIndexSearcher&gt; searcherRefCounted = null;
       try {
         searcherRefCounted = core.getNewestSearcher(false);
        commit = searcherRefCounted.get().getReader().getIndexCommit();
        commit = searcherRefCounted.get().getIndexReader().getIndexCommit();
       } finally {
         if (searcherRefCounted != null)
           searcherRefCounted.decref();
diff --git a/solr/src/java/org/apache/solr/handler/admin/CoreAdminHandler.java b/solr/src/java/org/apache/solr/handler/admin/CoreAdminHandler.java
index 39dc8cd136a..aa0d3ee9b9a 100644
-- a/solr/src/java/org/apache/solr/handler/admin/CoreAdminHandler.java
++ b/solr/src/java/org/apache/solr/handler/admin/CoreAdminHandler.java
@@ -470,7 +470,7 @@ public class CoreAdminHandler extends RequestHandlerBase {
         info.add("uptime", System.currentTimeMillis() - core.getStartTime());
         RefCounted&lt;SolrIndexSearcher&gt; searcher = core.getSearcher();
         try {
          info.add("index", LukeRequestHandler.getIndexInfo(searcher.get().getReader(), false));
          info.add("index", LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader(), false));
         } finally {
           searcher.decref();
         }
diff --git a/solr/src/java/org/apache/solr/handler/admin/LukeRequestHandler.java b/solr/src/java/org/apache/solr/handler/admin/LukeRequestHandler.java
index 76c28f85720..c11b0ace7f3 100644
-- a/solr/src/java/org/apache/solr/handler/admin/LukeRequestHandler.java
++ b/solr/src/java/org/apache/solr/handler/admin/LukeRequestHandler.java
@@ -97,7 +97,7 @@ public class LukeRequestHandler extends RequestHandlerBase
   {    
     IndexSchema schema = req.getSchema();
     SolrIndexSearcher searcher = req.getSearcher();
    IndexReader reader = searcher.getReader();
    IndexReader reader = searcher.getIndexReader();
     SolrParams params = req.getParams();
     int numTerms = params.getInt( NUMTERMS, DEFAULT_COUNT );
         
@@ -285,7 +285,7 @@ public class LukeRequestHandler extends RequestHandlerBase
     final SolrIndexSearcher searcher, final Set&lt;String&gt; fields, final int numTerms ) 
     throws Exception {
 
    IndexReader reader = searcher.getReader();
    IndexReader reader = searcher.getIndexReader();
     IndexSchema schema = searcher.getSchema();
     
     // Walk the term enum and keep a priority queue for each map in our set
diff --git a/solr/src/java/org/apache/solr/handler/component/HighlightComponent.java b/solr/src/java/org/apache/solr/handler/component/HighlightComponent.java
index 255a75691f1..10070d795f7 100644
-- a/solr/src/java/org/apache/solr/handler/component/HighlightComponent.java
++ b/solr/src/java/org/apache/solr/handler/component/HighlightComponent.java
@@ -113,7 +113,7 @@ public class HighlightComponent extends SearchComponent implements PluginInfoIni
       
       if(highlightQuery != null) {
         boolean rewrite = !(Boolean.valueOf(req.getParams().get(HighlightParams.USE_PHRASE_HIGHLIGHTER, "true")) &amp;&amp; Boolean.valueOf(req.getParams().get(HighlightParams.HIGHLIGHT_MULTI_TERM, "true")));
        highlightQuery = rewrite ?  highlightQuery.rewrite(req.getSearcher().getReader()) : highlightQuery;
        highlightQuery = rewrite ?  highlightQuery.rewrite(req.getSearcher().getIndexReader()) : highlightQuery;
       }
       
       // No highlighting if there is no query -- consider q.alt="*:*
diff --git a/solr/src/java/org/apache/solr/handler/component/QueryElevationComponent.java b/solr/src/java/org/apache/solr/handler/component/QueryElevationComponent.java
index 65061e231b0..8b4af7d715d 100644
-- a/solr/src/java/org/apache/solr/handler/component/QueryElevationComponent.java
++ b/solr/src/java/org/apache/solr/handler/component/QueryElevationComponent.java
@@ -200,7 +200,7 @@ public class QueryElevationComponent extends SearchComponent implements SolrCore
           RefCounted&lt;SolrIndexSearcher&gt; searchHolder = null;
           try {
             searchHolder = core.getNewestSearcher(false);
            IndexReader reader = searchHolder.get().getReader();
            IndexReader reader = searchHolder.get().getIndexReader();
             getElevationMap( reader, core );
           } finally {
             if (searchHolder != null) searchHolder.decref();
@@ -344,7 +344,7 @@ public class QueryElevationComponent extends SearchComponent implements SolrCore
     }
 
     qstr = getAnalyzedQuery(qstr);
    IndexReader reader = req.getSearcher().getReader();
    IndexReader reader = req.getSearcher().getIndexReader();
     ElevationObj booster = null;
     try {
       booster = getElevationMap( reader, req.getCore() ).get( qstr );
diff --git a/solr/src/java/org/apache/solr/handler/component/SpellCheckComponent.java b/solr/src/java/org/apache/solr/handler/component/SpellCheckComponent.java
index efd685dba04..524fc3fa572 100644
-- a/solr/src/java/org/apache/solr/handler/component/SpellCheckComponent.java
++ b/solr/src/java/org/apache/solr/handler/component/SpellCheckComponent.java
@@ -143,7 +143,7 @@ public class SpellCheckComponent extends SearchComponent implements SolrCoreAwar
         boolean extendedResults = params.getBool(SPELLCHECK_EXTENDED_RESULTS,
             false);
         NamedList response = new SimpleOrderedMap();
        IndexReader reader = rb.req.getSearcher().getReader();
        IndexReader reader = rb.req.getSearcher().getIndexReader();
         boolean collate = params.getBool(SPELLCHECK_COLLATE, false);
         float accuracy = params.getFloat(SPELLCHECK_ACCURACY, Float.MIN_VALUE);
         SolrParams customParams = getCustomParams(getDictionaryName(params), params, shardRequest);
@@ -678,7 +678,7 @@ public class SpellCheckComponent extends SearchComponent implements SolrCoreAwar
         if (buildOnCommit)  {
           buildSpellIndex(newSearcher);
         } else if (buildOnOptimize) {
          if (newSearcher.getReader().isOptimized())  {
          if (newSearcher.getIndexReader().isOptimized())  {
             buildSpellIndex(newSearcher);
           } else  {
             LOG.info("Index is not optimized therefore skipping building spell check index for: " + checker.getDictionaryName());
diff --git a/solr/src/java/org/apache/solr/handler/component/StatsComponent.java b/solr/src/java/org/apache/solr/handler/component/StatsComponent.java
index dc0b4333047..64af5b95ebb 100644
-- a/solr/src/java/org/apache/solr/handler/component/StatsComponent.java
++ b/solr/src/java/org/apache/solr/handler/component/StatsComponent.java
@@ -248,7 +248,7 @@ class SimpleStats {
 
     FieldCache.DocTermsIndex si = null;
     try {
      si = FieldCache.DEFAULT.getTermsIndex(searcher.getReader(), fieldName);
      si = FieldCache.DEFAULT.getTermsIndex(searcher.getIndexReader(), fieldName);
     } 
     catch (IOException e) {
       throw new RuntimeException( "failed to open field cache for: "+fieldName, e );
@@ -263,7 +263,7 @@ class SimpleStats {
     for( String f : facet ) {
       ft = searcher.getSchema().getFieldType(f);
       try {
        si = FieldCache.DEFAULT.getTermsIndex(searcher.getReader(), f);
        si = FieldCache.DEFAULT.getTermsIndex(searcher.getIndexReader(), f);
       } 
       catch (IOException e) {
         throw new RuntimeException( "failed to open field cache for: "+f, e );
diff --git a/solr/src/java/org/apache/solr/handler/component/TermVectorComponent.java b/solr/src/java/org/apache/solr/handler/component/TermVectorComponent.java
index 59310c6fa14..1fea0ac618b 100644
-- a/solr/src/java/org/apache/solr/handler/component/TermVectorComponent.java
++ b/solr/src/java/org/apache/solr/handler/component/TermVectorComponent.java
@@ -174,7 +174,7 @@ public class TermVectorComponent extends SearchComponent implements SolrCoreAwar
     }
     SolrIndexSearcher searcher = rb.req.getSearcher();
 
    IndexReader reader = searcher.getReader();
    IndexReader reader = searcher.getIndexReader();
     //the TVMapper is a TermVectorMapper which can be used to optimize loading of Term Vectors
     SchemaField keyField = schema.getUniqueKeyField();
     String uniqFieldName = null;
diff --git a/solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter.java b/solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter.java
index a032da6f55a..41604fab4b1 100644
-- a/solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter.java
++ b/solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter.java
@@ -216,7 +216,7 @@ public class DefaultSolrHighlighter extends SolrHighlighter implements PluginInf
   private Scorer getQueryScorer(Query query, String fieldName, SolrQueryRequest request) {
      boolean reqFieldMatch = request.getParams().getFieldBool(fieldName, HighlightParams.FIELD_MATCH, false);
      if (reqFieldMatch) {
        return new QueryTermScorer(query, request.getSearcher().getReader(), fieldName);
        return new QueryTermScorer(query, request.getSearcher().getIndexReader(), fieldName);
      }
      else {
         return new QueryTermScorer(query);
@@ -415,7 +415,7 @@ public class DefaultSolrHighlighter extends SolrHighlighter implements PluginInf
 
     TermOffsetsTokenStream tots = null; // to be non-null iff we're using TermOffsets optimization
     try {
        TokenStream tvStream = TokenSources.getTokenStream(searcher.getReader(), docId, fieldName);
        TokenStream tvStream = TokenSources.getTokenStream(searcher.getIndexReader(), docId, fieldName);
         if (tvStream != null) {
           tots = new TermOffsetsTokenStream(tvStream);
         }
@@ -503,7 +503,7 @@ public class DefaultSolrHighlighter extends SolrHighlighter implements PluginInf
       String fieldName ) throws IOException {
     SolrParams params = req.getParams(); 
     SolrFragmentsBuilder solrFb = getSolrFragmentsBuilder( fieldName, params );
    String[] snippets = highlighter.getBestFragments( fieldQuery, req.getSearcher().getReader(), docId, fieldName,
    String[] snippets = highlighter.getBestFragments( fieldQuery, req.getSearcher().getIndexReader(), docId, fieldName,
         params.getFieldInt( fieldName, HighlightParams.FRAGSIZE, 100 ),
         params.getFieldInt( fieldName, HighlightParams.SNIPPETS, 1 ),
         getFragListBuilder( fieldName, params ),
diff --git a/solr/src/java/org/apache/solr/request/SimpleFacets.java b/solr/src/java/org/apache/solr/request/SimpleFacets.java
index 15ef35d7c15..65c948edabe 100644
-- a/solr/src/java/org/apache/solr/request/SimpleFacets.java
++ b/solr/src/java/org/apache/solr/request/SimpleFacets.java
@@ -413,7 +413,7 @@ public class SimpleFacets {
     FieldType ft = searcher.getSchema().getFieldType(fieldName);
     NamedList&lt;Integer&gt; res = new NamedList&lt;Integer&gt;();
 
    FieldCache.DocTermsIndex si = FieldCache.DEFAULT.getTermsIndex(searcher.getReader(), fieldName);
    FieldCache.DocTermsIndex si = FieldCache.DEFAULT.getTermsIndex(searcher.getIndexReader(), fieldName);
 
     final BytesRef prefixRef;
     if (prefix == null) {
@@ -611,7 +611,7 @@ public class SimpleFacets {
 
 
     IndexSchema schema = searcher.getSchema();
    IndexReader r = searcher.getReader();
    IndexReader r = searcher.getIndexReader();
     FieldType ft = schema.getFieldType(field);
 
     boolean sortByCount = sort.equals("count") || sort.equals("true");
diff --git a/solr/src/java/org/apache/solr/request/UnInvertedField.java b/solr/src/java/org/apache/solr/request/UnInvertedField.java
index 7e6bf9978db..d724961cb22 100755
-- a/solr/src/java/org/apache/solr/request/UnInvertedField.java
++ b/solr/src/java/org/apache/solr/request/UnInvertedField.java
@@ -192,7 +192,7 @@ public class UnInvertedField {
   private void uninvert(SolrIndexSearcher searcher) throws IOException {
     long startTime = System.currentTimeMillis();
 
    IndexReader reader = searcher.getReader();
    IndexReader reader = searcher.getIndexReader();
     int maxDoc = reader.maxDoc();
 
     int[] index = new int[maxDoc];       // immediate term numbers, or the index into the byte[] representing the last number
@@ -481,7 +481,7 @@ public class UnInvertedField {
       int startTerm = 0;
       int endTerm = numTermsInField;  // one past the end
 
      NumberedTermsEnum te = ti.getEnumerator(searcher.getReader());
      NumberedTermsEnum te = ti.getEnumerator(searcher.getIndexReader());
       if (prefix != null &amp;&amp; prefix.length() &gt; 0) {
         BytesRef prefixBr = new BytesRef(prefix);
         te.skipTo(prefixBr);
@@ -719,7 +719,7 @@ public class UnInvertedField {
     for (String f : facet) {
       FieldType facet_ft = searcher.getSchema().getFieldType(f);
       try {
        si = FieldCache.DEFAULT.getTermsIndex(searcher.getReader(), f);
        si = FieldCache.DEFAULT.getTermsIndex(searcher.getIndexReader(), f);
       }
       catch (IOException e) {
         throw new RuntimeException("failed to open field cache for: " + f, e);
@@ -731,7 +731,7 @@ public class UnInvertedField {
     final int[] index = this.index;
     final int[] counts = new int[numTermsInField];//keep track of the number of times we see each word in the field for all the documents in the docset
 
    NumberedTermsEnum te = ti.getEnumerator(searcher.getReader());
    NumberedTermsEnum te = ti.getEnumerator(searcher.getIndexReader());
 
 
     boolean doNegative = false;
diff --git a/solr/src/java/org/apache/solr/schema/DateField.java b/solr/src/java/org/apache/solr/schema/DateField.java
index 09b091fdc8c..d60584a5f3a 100644
-- a/solr/src/java/org/apache/solr/schema/DateField.java
++ b/solr/src/java/org/apache/solr/schema/DateField.java
@@ -18,7 +18,7 @@
 package org.apache.solr.schema;
 
 import org.apache.lucene.document.Fieldable;
import org.apache.lucene.index.IndexReader;
import org.apache.lucene.index.IndexReader.AtomicReaderContext;
 import org.apache.lucene.search.Query;
 import org.apache.lucene.search.SortField;
 import org.apache.lucene.search.TermRangeQuery;
@@ -427,8 +427,8 @@ class DateFieldSource extends FieldCacheSource {
     return "date(" + field + ')';
   }
 
  public DocValues getValues(Map context, IndexReader reader) throws IOException {
    return new StringIndexDocValues(this, reader, field) {
  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {
    return new StringIndexDocValues(this, readerContext, field) {
       protected String toTerm(String readableValue) {
         // needed for frange queries to work properly
         return ft.toInternal(readableValue);
diff --git a/solr/src/java/org/apache/solr/schema/LatLonType.java b/solr/src/java/org/apache/solr/schema/LatLonType.java
index 2e35dcf72db..a1d0fdfeab5 100644
-- a/solr/src/java/org/apache/solr/schema/LatLonType.java
++ b/solr/src/java/org/apache/solr/schema/LatLonType.java
@@ -20,7 +20,6 @@ import org.apache.lucene.document.Field;
 import org.apache.lucene.document.Fieldable;
 import org.apache.lucene.index.IndexReader;
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
import org.apache.lucene.index.MultiFields;
 import org.apache.lucene.search.*;
 import org.apache.lucene.spatial.DistanceUtils;
 import org.apache.lucene.spatial.tier.InvalidGeoException;
@@ -372,7 +371,7 @@ class SpatialDistanceQuery extends Query {
 
     @Override
     public Scorer scorer(AtomicReaderContext context, boolean scoreDocsInOrder, boolean topScorer) throws IOException {
      return new SpatialScorer(getSimilarity(searcher), context.reader, this);
      return new SpatialScorer(getSimilarity(searcher), context, this);
     }
 
     @Override
@@ -405,15 +404,15 @@ class SpatialDistanceQuery extends Query {
     int lastDistDoc;
     double lastDist;
 
    public SpatialScorer(Similarity similarity, IndexReader reader, SpatialWeight w) throws IOException {
    public SpatialScorer(Similarity similarity, AtomicReaderContext readerContext, SpatialWeight w) throws IOException {
       super(similarity);
       this.weight = w;
       this.qWeight = w.getValue();
      this.reader = reader;
      this.reader = readerContext.reader;
       this.maxDoc = reader.maxDoc();
      this.delDocs = reader.hasDeletions() ? MultiFields.getDeletedDocs(reader) : null;
      latVals = latSource.getValues(weight.latContext, reader);
      lonVals = lonSource.getValues(weight.lonContext, reader);
      this.delDocs = reader.getDeletedDocs();
      latVals = latSource.getValues(weight.latContext, readerContext);
      lonVals = lonSource.getValues(weight.lonContext, readerContext);
 
       this.lonMin = SpatialDistanceQuery.this.lonMin;
       this.lonMax = SpatialDistanceQuery.this.lonMax;
diff --git a/solr/src/java/org/apache/solr/schema/RandomSortField.java b/solr/src/java/org/apache/solr/schema/RandomSortField.java
index 848e8206f9d..fd69557e3b1 100644
-- a/solr/src/java/org/apache/solr/schema/RandomSortField.java
++ b/solr/src/java/org/apache/solr/schema/RandomSortField.java
@@ -24,11 +24,11 @@ import org.apache.lucene.document.Fieldable;
 import org.apache.lucene.index.IndexReader;
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
 import org.apache.lucene.search.*;
import org.apache.lucene.util.ReaderUtil;
 import org.apache.solr.response.TextResponseWriter;
 import org.apache.solr.search.QParser;
 import org.apache.solr.search.function.DocValues;
 import org.apache.solr.search.function.ValueSource;
import org.apache.solr.search.SolrIndexReader;
 
 /**
  * Utility Field used for random sorting.  It should not be passed a value.
@@ -78,17 +78,11 @@ public class RandomSortField extends FieldType {
    * Given a field name and an IndexReader, get a random hash seed.  
    * Using dynamic fields, you can force the random order to change 
    */</comment>
  <function><type><specifier>private</specifier> <specifier>static</specifier> <name>int</name></type> <name>getSeed</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>fieldName</name></decl></parameter>, <parameter><decl><type><name>IndexReader</name></type> <name>r</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>SolrIndexReader</name></type> <name>top</name> <init>= <expr><operator>(</operator><name>SolrIndexReader</name><operator>)</operator><name>r</name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>base</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <while>while <condition>(<expr><call><name><name>top</name><operator>.</operator><name>getParent</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>base</name> <operator>+=</operator> <call><name><name>top</name><operator>.</operator><name>getBase</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>top</name> <operator>=</operator> <call><name><name>top</name><operator>.</operator><name>getParent</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>

  <function><type><specifier>private</specifier> <specifier>static</specifier> <name>int</name></type> <name>getSeed</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>fieldName</name></decl></parameter>, <parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><specifier>final</specifier> <name>IndexReader</name></type> <name>top</name> <init>= <expr><call><name><name>ReaderUtil</name><operator>.</operator><name>getTopLevelContext</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call><operator>.</operator><name>reader</name></expr></init></decl>;</decl_stmt>
     <comment type="line">// calling getVersion() on a segment will currently give you a null pointer exception, so</comment>
     <comment type="line">// we use the top-level reader.</comment>
    <return>return <expr><call><name><name>fieldName</name><operator>.</operator><name>hashCode</name></name><argument_list>()</argument_list></call> <operator>+</operator> <name>base</name> <operator>+</operator> <operator>(</operator><name>int</name><operator>)</operator><call><name><name>top</name><operator>.</operator><name>getVersion</name></name><argument_list>()</argument_list></call></expr>;</return>
    <return>return <expr><call><name><name>fieldName</name><operator>.</operator><name>hashCode</name></name><argument_list>()</argument_list></call> <operator>+</operator> <name><name>context</name><operator>.</operator><name>docBase</name></name> <operator>+</operator> <operator>(</operator><name>int</name><operator>)</operator><call><name><name>top</name><operator>.</operator><name>getVersion</name></name><argument_list>()</argument_list></call></expr>;</return>
   </block_content>}</block></function>
   
   <annotation>@<name>Override</name></annotation>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">129</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">123</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>RandomSortField</name> extends <name>FieldType</name> <block>{
         }</block>
 
         <specifier>public</specifier> <name>FieldComparator</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
          <expr><name>seed</name> <operator>=</operator> <call><name>getSeed</name><argument_list>(<argument><expr><name>fieldname</name></expr></argument>, <argument><expr><name><name>context</name><operator>.</operator><name>reader</name></name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
          <expr_stmt><expr><name>seed</name> <operator>=</operator> <call><name>getSeed</name><argument_list>(<argument><expr><name>fieldname</name></expr></argument>, <argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           <return>return <expr><name>this</name></expr>;</return>
         </block_content>}</block></function>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">155</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">149</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>RandomSortField</name> extends <name>FieldType</name> <block>{
     }</block>
 
     @<name>Override</name>
    <specifier>public</specifier> <name>DocValues</name> <call><name>getValues</name><argument_list>(<argument><expr><name>Map</name> <name>context</name></expr></argument>, <argument><expr><name>final</name> <name>IndexReader</name> <name>reader</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><specifier>public</specifier> <name>DocValues</name> <call><name>getValues</name><argument_list>(<argument><expr><name>Map</name> <name>context</name></expr></argument>, <argument><expr><name>final</name> <name>AtomicReaderContext</name> <name>readerContext</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr></expr_stmt>
       <return>return <expr><operator>new</operator> <class><super><name>DocValues</name></super><argument_list>()</argument_list> <block>{
          <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>int</name></type> <name>seed</name> <init>= <expr><call><name>getSeed</name><argument_list>(<argument><expr><name>field</name></expr></argument>, <argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>int</name></type> <name>seed</name> <init>= <expr><call><name>getSeed</name><argument_list>(<argument><expr><name>field</name></expr></argument>, <argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
           <function><annotation>@<name>Override</name></annotation>
           <type><specifier>public</specifier> <name>float</name></type> <name>floatVal</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <block>{<block_content>
             <return>return <expr><operator>(</operator><name>float</name><operator>)</operator><call><name>hash</name><argument_list>(<argument><expr><name>doc</name><operator>+</operator><name>seed</name></expr></argument>)</argument_list></call></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>SortableDoubleField</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>SortableDoubleField</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>f1744efc688</name><operator>..</operator><literal type="number">411e9b5f6fc</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>SortableDoubleField</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>SortableDoubleField</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">28</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">28</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name><operator>.</operator><name>FieldCacheSource</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name><operator>.</operator><name>DocValues</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name><operator>.</operator><name>StringIndexDocValues</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Fieldable</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>ByteUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>NumberUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>response</name><operator>.</operator><name>TextResponseWriter</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">99</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">99</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <name>class</name> <name>SortableDoubleFieldSource</name> extends <name>FieldCacheSource</name> <block>{
     <return>return <expr><literal type="string">"sdouble("</literal> <operator>+</operator> <name>field</name> <operator>+</operator> <literal type="char">')'</literal></expr>;</return>
   }</block></expr></expr_stmt>
 
  <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
  <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>AtomicReaderContext</name></type> <name>readerContext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
     <decl_stmt><decl><type><specifier>final</specifier> <name>double</name></type> <name>def</name> <init>= <expr><name>defVal</name></expr></init></decl>;</decl_stmt>
 
    <return>return <expr><operator>new</operator> <class><super><name>StringIndexDocValues</name></super><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>reader</name></expr></argument>, <argument><expr><name>field</name></expr></argument>)</argument_list> <block>{
    <return>return <expr><operator>new</operator> <class><super><name>StringIndexDocValues</name></super><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>readerContext</name></expr></argument>, <argument><expr><name>field</name></expr></argument>)</argument_list> <block>{
       <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>BytesRef</name></type> <name>spare</name> <init>= <expr><operator>new</operator> <call><name>BytesRef</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
       <function><type><specifier>protected</specifier> <name>String</name></type> <name>toTerm</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>readableValue</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>SortableFloatField</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>SortableFloatField</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">407c17f90e3</literal><operator>..</operator><name>e56ffd70c2a</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>SortableFloatField</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>SortableFloatField</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">28</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">28</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name><operator>.</operator><name>FieldCacheSource</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name><operator>.</operator><name>DocValues</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name><operator>.</operator><name>StringIndexDocValues</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Fieldable</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>ByteUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>NumberUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>response</name><operator>.</operator><name>TextResponseWriter</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">99</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">99</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <name>class</name> <name>SortableFloatFieldSource</name> extends <name>FieldCacheSource</name> <block>{
     <return>return <expr><literal type="string">"sfloat("</literal> <operator>+</operator> <name>field</name> <operator>+</operator> <literal type="char">')'</literal></expr>;</return>
   }</block></expr></expr_stmt>
 
  <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
  <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>AtomicReaderContext</name></type> <name>readerContext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
     <decl_stmt><decl><type><specifier>final</specifier> <name>float</name></type> <name>def</name> <init>= <expr><name>defVal</name></expr></init></decl>;</decl_stmt>
 
    <return>return <expr><operator>new</operator> <class><super><name>StringIndexDocValues</name></super><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>reader</name></expr></argument>, <argument><expr><name>field</name></expr></argument>)</argument_list> <block>{
    <return>return <expr><operator>new</operator> <class><super><name>StringIndexDocValues</name></super><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>readerContext</name></expr></argument>, <argument><expr><name>field</name></expr></argument>)</argument_list> <block>{
       <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>BytesRef</name></type> <name>spare</name> <init>= <expr><operator>new</operator> <call><name>BytesRef</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
       <function><type><specifier>protected</specifier> <name>String</name></type> <name>toTerm</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>readableValue</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>SortableIntField</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>SortableIntField</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">3771d3eb0e2</literal><operator>..</operator><name>b6db1cff194</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>SortableIntField</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>SortableIntField</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">28</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">28</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name><operator>.</operator><name>FieldCacheSource</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name><operator>.</operator><name>DocValues</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name><operator>.</operator><name>StringIndexDocValues</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Fieldable</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>ByteUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>NumberUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>response</name><operator>.</operator><name>TextResponseWriter</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">101</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">101</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <name>class</name> <name>SortableIntFieldSource</name> extends <name>FieldCacheSource</name> <block>{
     <return>return <expr><literal type="string">"sint("</literal> <operator>+</operator> <name>field</name> <operator>+</operator> <literal type="char">')'</literal></expr>;</return>
   }</block></expr></expr_stmt>
 
  <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
  <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>AtomicReaderContext</name></type> <name>readerContext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
     <decl_stmt><decl><type><specifier>final</specifier> <name>int</name></type> <name>def</name> <init>= <expr><name>defVal</name></expr></init></decl>;</decl_stmt>
 
    <return>return <expr><operator>new</operator> <class><super><name>StringIndexDocValues</name></super><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>reader</name></expr></argument>, <argument><expr><name>field</name></expr></argument>)</argument_list> <block>{
    <return>return <expr><operator>new</operator> <class><super><name>StringIndexDocValues</name></super><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>readerContext</name></expr></argument>, <argument><expr><name>field</name></expr></argument>)</argument_list> <block>{
       <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>BytesRef</name></type> <name>spare</name> <init>= <expr><operator>new</operator> <call><name>BytesRef</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
       <function><type><specifier>protected</specifier> <name>String</name></type> <name>toTerm</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>readableValue</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>SortableLongField</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>SortableLongField</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>b9657d1451a</name><operator>..</operator><literal type="number">3be76b9b1c1</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>SortableLongField</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>SortableLongField</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">28</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">28</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name><operator>.</operator><name>FieldCacheSource</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name><operator>.</operator><name>DocValues</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name><operator>.</operator><name>StringIndexDocValues</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Fieldable</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>ByteUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>NumberUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>response</name><operator>.</operator><name>TextResponseWriter</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">100</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">100</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <name>class</name> <name>SortableLongFieldSource</name> extends <name>FieldCacheSource</name> <block>{
     <return>return <expr><literal type="string">"slong("</literal> <operator>+</operator> <name>field</name> <operator>+</operator> <literal type="char">')'</literal></expr>;</return>
   }</block></expr></expr_stmt>
 
  <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
  <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>AtomicReaderContext</name></type> <name>readerContext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
     <decl_stmt><decl><type><specifier>final</specifier> <name>long</name></type> <name>def</name> <init>= <expr><name>defVal</name></expr></init></decl>;</decl_stmt>
 
    <return>return <expr><operator>new</operator> <class><super><name>StringIndexDocValues</name></super><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>reader</name></expr></argument>, <argument><expr><name>field</name></expr></argument>)</argument_list> <block>{
    <return>return <expr><operator>new</operator> <class><super><name>StringIndexDocValues</name></super><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>readerContext</name></expr></argument>, <argument><expr><name>field</name></expr></argument>)</argument_list> <block>{
       <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>BytesRef</name></type> <name>spare</name> <init>= <expr><operator>new</operator> <call><name>BytesRef</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
       <function><type><specifier>protected</specifier> <name>String</name></type> <name>toTerm</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>readableValue</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>StrFieldSource</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>StrFieldSource</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>ab12750a084</name><operator>..</operator><literal type="number">36dcfcefcee</literal> <literal type="number">100755</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>StrFieldSource</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>StrFieldSource</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt>
 
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>schema</name></name>;</package>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>BytesRef</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name><operator>.</operator><name>DocValues</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name><operator>.</operator><name>FieldCacheSource</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">36</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">36</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>StrFieldSource</name> extends <name>FieldCacheSource</name> <block>{
     <return>return <expr><literal type="string">"str("</literal> <operator>+</operator> <name>field</name> <operator>+</operator> <literal type="char">')'</literal></expr>;</return>
   }</block></expr></expr_stmt>
 
  <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <return>return <expr><operator>new</operator> <class><super><name>StringIndexDocValues</name></super><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>reader</name></expr></argument>, <argument><expr><name>field</name></expr></argument>)</argument_list> <block>{
  <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>AtomicReaderContext</name></type> <name>readerContext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <return>return <expr><operator>new</operator> <class><super><name>StringIndexDocValues</name></super><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>readerContext</name></expr></argument>, <argument><expr><name>field</name></expr></argument>)</argument_list> <block>{
       <function><type><specifier>protected</specifier> <name>String</name></type> <name>toTerm</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>readableValue</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <return>return <expr><name>readableValue</name></expr>;</return>
       </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>Grouping</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>Grouping</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>bc7e858c2ac</name><operator>..</operator><literal type="number">894b592f3e1</literal> <literal type="number">100755</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>Grouping</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>Grouping</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">688</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">688</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <name>class</name> <name>TopGroupCollector</name> extends <name>GroupCollector</name> <block>{
   @<expr><name>Override</name>
   <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>readerContext</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><name><name>this</name><operator>.</operator><name>docBase</name></name> <operator>=</operator> <name><name>readerContext</name><operator>.</operator><name>docBase</name></name></expr></block></expr></argument></throws></expr>;
    <expr><name>docValues</name> <operator>=</operator> <call><name><name>vs</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name><name>readerContext</name><operator>.</operator><name>reader</name></name></expr></argument>)</argument_list></call></expr>;
    <expr><name>docValues</name> <operator>=</operator> <call><name><name>vs</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr>;
     <expr><name>filler</name> <operator>=</operator> <call><name><name>docValues</name><operator>.</operator><name>getValueFiller</name></name><argument_list>()</argument_list></call></expr>;
     <expr><name>mval</name> <operator>=</operator> <call><name><name>filler</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr>;
     <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name><name>comparators</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">762</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">762</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <name>class</name> <name>Phase2GroupCollector</name> extends <name>Collector</name> <block>{
   @<expr><name>Override</name>
   <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>readerContext</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><name><name>this</name><operator>.</operator><name>docBase</name></name> <operator>=</operator> <name><name>readerContext</name><operator>.</operator><name>docBase</name></name></expr></block></expr></argument></throws></expr>;
    <expr><name>docValues</name> <operator>=</operator> <call><name><name>vs</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name><name>readerContext</name><operator>.</operator><name>reader</name></name></expr></argument>)</argument_list></call></expr>;
    <expr><name>docValues</name> <operator>=</operator> <call><name><name>vs</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr>;
     <expr><name>filler</name> <operator>=</operator> <call><name><name>docValues</name><operator>.</operator><name>getValueFiller</name></name><argument_list>()</argument_list></call></expr>;
     <expr><name>mval</name> <operator>=</operator> <call><name><name>filler</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr>;
     <for>for <control>(<init><decl><type><name>SearchGroupDocs</name></type> <name>group</name> <range>: <expr><call><name><name>groupMap</name><operator>.</operator><name>values</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control><block type="pseudo"><block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SolrFilter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SolrFilter</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">1eddff4ff43</literal><operator>..</operator><literal type="number">3b57d612f73</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SolrFilter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SolrFilter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">22</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">22</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt></block_content></block></for> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>IndexSearcher</name></name>;</import></block></expr></expr_stmt></block_content></block></for>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>DocIdSet</name></name>;</import></block></expr></expr_stmt>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">39</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">39</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>SolrFilter</name> extends <name>Filter</name> <block>{
    <expr><operator>*</operator> <name>The</name> <name>context</name> <name>object</name> <name>will</name> <name>be</name> <name>passed</name> <name>to</name> <call><name>getDocIdSet</name><argument_list>()</argument_list></call> <name>where</name> <name>this</name> <name>info</name> <name>can</name> <name>be</name> <name><name>retrieved</name><operator>.</operator></name> *<operator>/</operator>
   <specifier>public</specifier> <specifier>abstract</specifier> <name>void</name> <call><name>createWeight</name><argument_list>(<argument><expr><name>Map</name> <name>context</name></expr></argument>, <argument><expr><name>IndexSearcher</name> <name>searcher</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws></expr>;
   
  <expr><specifier>public</specifier> <specifier>abstract</specifier> <name>DocIdSet</name> <call><name>getDocIdSet</name><argument_list>(<argument><expr><name>Map</name> <name>context</name></expr></argument>, <argument><expr><name>ReaderContext</name> <name>readerContext</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws></expr>;
  <expr><specifier>public</specifier> <specifier>abstract</specifier> <name>DocIdSet</name> <call><name>getDocIdSet</name><argument_list>(<argument><expr><name>Map</name> <name>context</name></expr></argument>, <argument><expr><name>AtomicReaderContext</name> <name>readerContext</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws></expr>;
 
   @<expr><name>Override</name>
   <specifier>public</specifier> <name>DocIdSet</name> <call><name>getDocIdSet</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SolrIndexReader</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SolrIndexReader</name><operator>.</operator><name>java</name></name>
<name>deleted</name> <name>file</name> <name>mode</name> <literal type="number">100755</literal>
<name>index</name> <literal type="number">0440e57f7a6</literal><operator>..</operator><literal type="number">00000000000</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SolrIndexReader</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal></expr></block></expr></argument>
@<argument>@ <expr><operator>-</operator><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">505</literal> <operator>+</operator><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal> @@</expr></argument></throws></expr>
<comment type="block" format="javadoc">/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name></name>;</package></block></expr></expr_stmt>


<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>*</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>Directory</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>LockObtainFailedException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Document</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>FieldSelector</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>Bits</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>BytesRef</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>ReaderUtil</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collection</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>

<comment type="block" format="javadoc">/** Solr wrapper for IndexReader that contains extra context.
 * This is currently experimental, for internal use only, and subject to change.
 */</comment>
<class><specifier>public</specifier> class <name>SolrIndexReader</name> <super_list><extends>extends <super><name>FilterIndexReader</name></super></extends></super_list> <block>{
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name><name>SolrIndexReader</name><index>[]</index></name></type> <name>subReaders</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name><name>SolrIndexReader</name><index>[]</index></name></type> <name>leafReaders</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name><name>int</name><index>[]</index></name></type> <name>leafOffsets</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>SolrIndexReader</name></type> <name>parent</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>int</name></type> <name>base</name></decl>;</decl_stmt> <comment type="line">// docid offset of this reader within parent</comment>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>ReaderContext</name></type> <name>topLevelContext</name></decl>;</decl_stmt>

  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name><name>int</name><index>[]</index></name></type> <name>zeroIntArray</name> <init>= <expr><operator>new</operator> <name><name>int</name><index>[]</index></name><block>{<expr><literal type="number">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

  <comment type="line">// top level searcher for this reader tree</comment>
  <comment type="line">// a bit if a hack currently... searcher needs to set</comment>
  <decl_stmt><decl><type><name>SolrIndexSearcher</name></type> <name>searcher</name></decl>;</decl_stmt>

  <comment type="line">// Shared info about the wrapped reader.</comment>
  <decl_stmt><decl><type><specifier>private</specifier> <name>SolrReaderInfo</name></type> <name>info</name></decl>;</decl_stmt>

  <comment type="block" format="javadoc">/** Recursively wrap an IndexReader in SolrIndexReader instances.
   * @param in  the reader to wrap
   * @param parent the parent, if any (null if none)
   * @param base the docid offset in the parent (0 if top level)
   */</comment>
  <constructor><specifier>public</specifier> <name>SolrIndexReader</name><parameter_list>(<parameter><decl><type><name>IndexReader</name></type> <name>in</name></decl></parameter>, <parameter><decl><type><name>SolrIndexReader</name></type> <name>parent</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>base</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <assert>assert<expr><operator>(</operator><operator>!</operator><operator>(</operator><name>in</name> <operator>instanceof</operator> <name>SolrIndexReader</name><operator>)</operator><operator>)</operator></expr>;</assert>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>parent</name></name> <operator>=</operator> <name>parent</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>base</name></name> <operator>=</operator> <name>base</name></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>IndexReader</name></type> <name><name>subs</name><index>[]</index></name> <init>= <expr><call><name><name>in</name><operator>.</operator><name>getSequentialSubReaders</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>subs</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>subReaders</name> <operator>=</operator> <operator>new</operator> <name><name>SolrIndexReader</name><index>[<expr><name><name>subs</name><operator>.</operator><name>length</name></name></expr>]</index></name></expr>;</expr_stmt> 
      <decl_stmt><decl><type><name>int</name></type> <name>numLeaves</name> <init>= <expr><name><name>subs</name><operator>.</operator><name>length</name></name></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><name>leafOffsets</name> <operator>=</operator> <operator>new</operator> <name><name>int</name><index>[<expr><name>numLeaves</name></expr>]</index></name></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>int</name></type> <name>b</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
      <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name><name>subReaders</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
        <decl_stmt><decl><type><name>SolrIndexReader</name></type> <name>sir</name> <init>= <expr><name><name>subReaders</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>new</operator> <call><name>SolrIndexReader</name><argument_list>(<argument><expr><name><name>subs</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><name>b</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name><name>leafOffsets</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name>b</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>b</name> <operator>+=</operator> <call><name><name>sir</name><operator>.</operator><name>maxDoc</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>IndexReader</name></type> <name><name>subLeaves</name><index>[]</index></name> <init>= <expr><name><name>sir</name><operator>.</operator><name>leafReaders</name></name></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name>numLeaves</name> <operator>+=</operator> <name><name>subLeaves</name><operator>.</operator><name>length</name></name> <operator>-</operator> <literal type="number">1</literal></expr>;</expr_stmt>  <comment type="line">// subtract 1 for the parent</comment>
      </block_content>}</block></for>
      <expr_stmt><expr><name>leafReaders</name> <operator>=</operator> <call><name>getLeaves</name><argument_list>(<argument><expr><name>numLeaves</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <else>else <block>{<block_content>
      <expr_stmt><expr><name>subReaders</name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
      <expr_stmt><expr><name>leafReaders</name> <operator>=</operator> <operator>new</operator> <name><name>SolrIndexReader</name><index>[]</index></name><block>{<expr><name>this</name></expr>}</block></expr>;</expr_stmt>
      <expr_stmt><expr><name>leafOffsets</name> <operator>=</operator> <name>zeroIntArray</name></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
    <expr_stmt><expr><name>topLevelContext</name> <operator>=</operator> <call><name><name>ReaderUtil</name><operator>.</operator><name>buildReaderContext</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></constructor>

  <function><type><specifier>private</specifier> <name><name>SolrIndexReader</name><index>[]</index></name></type> <name>getLeaves</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>numLeaves</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <comment type="line">// fast path for a normal multiReader</comment>
    <if_stmt><if>if <condition>(<expr><name>subReaders</name><operator>==</operator><literal type="null">null</literal> <operator>||</operator> <name>numLeaves</name> <operator>==</operator> <name><name>subReaders</name><operator>.</operator><name>length</name></name></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><name>subReaders</name></expr>;</return></block_content></block></if></if_stmt>

    <decl_stmt><decl><type><name><name>SolrIndexReader</name><index>[]</index></name></type> <name>leaves</name> <init>= <expr><operator>new</operator> <name><name>SolrIndexReader</name><index>[<expr><name>numLeaves</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>leafOffsets</name> <operator>=</operator> <operator>new</operator> <name><name>int</name><index>[<expr><name>numLeaves</name></expr>]</index></name></expr>;</expr_stmt>
    
    <decl_stmt><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>b</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <for>for <control>(<init><decl><type><name>SolrIndexReader</name></type> <name>sir</name> <range>: <expr><name>subReaders</name></expr></range></decl></init>)</control> <block>{<block_content>
      <decl_stmt><decl><type><name>SolrIndexReader</name></type> <name><name>subLeaves</name><index>[]</index></name> <init>= <expr><name><name>sir</name><operator>.</operator><name>leafReaders</name></name></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>subLeaves</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name><name>leafOffsets</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name>b</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>b</name> <operator>+=</operator> <call><name><name>sir</name><operator>.</operator><name>maxDoc</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>leaves</name><index>[<expr><name>i</name><operator>++</operator></expr>]</index></name> <operator>=</operator> <name>sir</name></expr>;</expr_stmt>
      </block_content>}</block></if> <else>else <block>{<block_content>
        <for>for <control>(<init><decl><type><name>SolrIndexReader</name></type> <name>subLeaf</name> <range>: <expr><name>subLeaves</name></expr></range></decl></init>)</control> <block>{<block_content>
          <expr_stmt><expr><name><name>leafOffsets</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name>b</name></expr>;</expr_stmt>
          <expr_stmt><expr><name>b</name> <operator>+=</operator> <call><name><name>subLeaf</name><operator>.</operator><name>maxDoc</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><name><name>leaves</name><index>[<expr><name>i</name><operator>++</operator></expr>]</index></name> <operator>=</operator> <name>subLeaf</name></expr>;</expr_stmt>
        </block_content>}</block></for>
      </block_content>}</block></else></if_stmt>
    </block_content>}</block></for>
    <assert>assert<expr><operator>(</operator><name>i</name> <operator>==</operator> <name>numLeaves</name> <operator>&amp;&amp;</operator> <name>b</name> <operator>==</operator> <call><name>maxDoc</name><argument_list>()</argument_list></call><operator>)</operator></expr>;</assert>
    <return>return <expr><name>leaves</name></expr>;</return>
  </block_content>}</block></function>

  <comment type="block" format="javadoc">/** return the leaf readers in this reader tree, or an array of size 1 containing "this" if "this" is a leaf */</comment>
  <function><type><specifier>public</specifier> <name><name>SolrIndexReader</name><index>[]</index></name></type> <name>getLeafReaders</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>leafReaders</name></expr>;</return>
  </block_content>}</block></function>

  <comment type="block" format="javadoc">/** Return the doc id offsets for each leaf reader.  This will be different than getBase() for
   * any leaf reader who is not a direct descendant of "this".
   */</comment>
  <function><type><specifier>public</specifier> <name><name>int</name><index>[]</index></name></type> <name>getLeafOffsets</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>leafOffsets</name></expr>;</return>
  </block_content>}</block></function>

  <comment type="block" format="javadoc">/** Given an array of IndexReader offsets, find which contains the given doc */</comment>
  <function><type><specifier>public</specifier> <specifier>static</specifier> <name>int</name></type> <name>readerIndex</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>, <parameter><decl><type><name><name>int</name><index>[]</index></name></type> <name>offsets</name></decl></parameter>)</parameter_list> <block>{<block_content>    <comment type="line">// find reader for doc doc:</comment>
    <decl_stmt><decl><type><name>int</name></type> <name>high</name> <init>= <expr><name><name>offsets</name><operator>.</operator><name>length</name></name> <operator>-</operator> <literal type="number">1</literal></expr></init></decl>;</decl_stmt>

    <comment type="line">// fast-path for a big optimized index and a bunch of smaller ones.</comment>
    <if_stmt><if>if <condition>(<expr><name>high</name> <operator>&lt;=</operator> <literal type="number">0</literal> <operator>||</operator> <name>doc</name> <operator>&lt;</operator> <name><name>offsets</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><literal type="number">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <decl_stmt><decl><type><name>int</name></type> <name>low</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>

    <while>while <condition>(<expr><name>high</name> <operator>&gt;=</operator> <name>low</name></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>int</name></type> <name>mid</name> <init>= <expr><operator>(</operator><name>low</name> <operator>+</operator> <name>high</name><operator>)</operator> <operator>&gt;&gt;&gt;</operator> <literal type="number">1</literal></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>int</name></type> <name>offset</name> <init>= <expr><name><name>offsets</name><index>[<expr><name>mid</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
      <comment type="line">// check low first since first segments are normally bigger.</comment>
      <if_stmt><if>if <condition>(<expr><name>doc</name> <operator>&lt;</operator> <name>offset</name></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><name>high</name> <operator>=</operator> <name>mid</name> <operator>-</operator> <literal type="number">1</literal></expr>;</expr_stmt></block_content></block></if>
      <if type="elseif">else if <condition>(<expr><name>doc</name> <operator>&gt;</operator> <name>offset</name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>low</name> <operator>=</operator> <name>mid</name> <operator>+</operator> <literal type="number">1</literal></expr>;</expr_stmt>
      </block_content>}</block></if>
      <else>else <block>{<block_content>
        <comment type="line">// exact match on the offset.</comment>
        <return>return <expr><name>mid</name></expr>;</return>
      </block_content>}</block></else></if_stmt>
    </block_content>}</block></while>
    <comment type="line">// low is the insertion point, high should be just below that (and the segment we want).</comment>
    <return>return <expr><name>high</name></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>static</specifier> <name>String</name></type> <name>shortName</name><parameter_list>(<parameter><decl><type><name>Object</name></type> <name>o</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <return>return <expr><call><name><name>o</name><operator>.</operator><name>getClass</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getSimpleName</name><argument_list>()</argument_list></call><operator>+</operator> <literal type="string">"@"</literal> <operator>+</operator> <call><name><name>Integer</name><operator>.</operator><name>toHexString</name></name><argument_list>(<argument><expr><call><name><name>o</name><operator>.</operator><name>hashCode</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>String</name></type> <name>toString</name><parameter_list>()</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>StringBuilder</name></type> <name>sb</name> <init>= <expr><operator>new</operator> <call><name>StringBuilder</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>sb</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><literal type="string">"SolrIndexReader{this="</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>append</name><argument_list>(<argument><expr><call><name><name>Integer</name><operator>.</operator><name>toHexString</name></name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>hashCode</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>sb</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><literal type="string">",r="</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>append</name><argument_list>(<argument><expr><call><name>shortName</name><argument_list>(<argument><expr><name>in</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>sb</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><literal type="string">",refCnt="</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>append</name><argument_list>(<argument><expr><call><name>getRefCount</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>sb</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><literal type="string">",segments="</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>sb</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><ternary><condition><expr><name>subReaders</name> <operator>==</operator> <literal type="null">null</literal></expr> ?</condition><then> <expr><literal type="number">1</literal></expr> </then><else>: <expr><name><name>subReaders</name><operator>.</operator><name>length</name></name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>parent</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>sb</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><literal type="string">",parent="</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>append</name><argument_list>(<argument><expr><call><name><name>parent</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt><expr><call><name><name>sb</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><literal type="char">'}'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><call><name><name>sb</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>static</specifier> <name>void</name></type> <name>setSearcher</name><parameter_list>(<parameter><decl><type><name>SolrIndexReader</name></type> <name>sr</name></decl></parameter>, <parameter><decl><type><name>SolrIndexSearcher</name></type> <name>searcher</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name><name>sr</name><operator>.</operator><name>searcher</name></name> <operator>=</operator> <name>searcher</name></expr>;</expr_stmt>
    <decl_stmt><decl><type><name><name>SolrIndexReader</name><index>[]</index></name></type> <name>readers</name> <init>= <expr><call><name><name>sr</name><operator>.</operator><name>getSequentialSubReaders</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>readers</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>
    <for>for <control>(<init><decl><type><name>SolrIndexReader</name></type> <name>r</name> <range>: <expr><name>readers</name></expr></range></decl></init>)</control> <block>{<block_content>
      <expr_stmt><expr><call><name>setSearcher</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><name>searcher</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
  </block_content>}</block></function>

   <function><type><specifier>private</specifier> <specifier>static</specifier> <name>void</name></type> <name>buildInfoMap</name><parameter_list>(<parameter><decl><type><name>SolrIndexReader</name></type> <name>other</name></decl></parameter>, <parameter><decl><type><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>IndexReader</name></argument>, <argument><name>SolrReaderInfo</name></argument>&gt;</argument_list></name></type> <name>map</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <if_stmt><if>if <condition>(<expr><name>other</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>
     <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>other</name><operator>.</operator><name>getWrappedReader</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>other</name><operator>.</operator><name>info</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name><name>SolrIndexReader</name><index>[]</index></name></type> <name>readers</name> <init>= <expr><call><name><name>other</name><operator>.</operator><name>getSequentialSubReaders</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <if_stmt><if>if <condition>(<expr><name>readers</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>
     <for>for <control>(<init><decl><type><name>SolrIndexReader</name></type> <name>r</name> <range>: <expr><name>readers</name></expr></range></decl></init>)</control> <block>{<block_content>
       <expr_stmt><expr><call><name>buildInfoMap</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><name>map</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></for>     
   </block_content>}</block></function>

   <function><type><specifier>private</specifier> <specifier>static</specifier> <name>void</name></type> <name>setInfo</name><parameter_list>(<parameter><decl><type><name>SolrIndexReader</name></type> <name>target</name></decl></parameter>, <parameter><decl><type><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>IndexReader</name></argument>, <argument><name>SolrReaderInfo</name></argument>&gt;</argument_list></name></type> <name>map</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <decl_stmt><decl><type><name>SolrReaderInfo</name></type> <name>info</name> <init>= <expr><call><name><name>map</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>target</name><operator>.</operator><name>getWrappedReader</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <if_stmt><if>if <condition>(<expr><name>info</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>info</name> <operator>=</operator> <operator>new</operator> <call><name>SolrReaderInfo</name><argument_list>(<argument><expr><call><name><name>target</name><operator>.</operator><name>getWrappedReader</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
     <expr_stmt><expr><name><name>target</name><operator>.</operator><name>info</name></name> <operator>=</operator> <name>info</name></expr>;</expr_stmt>
     <decl_stmt><decl><type><name><name>SolrIndexReader</name><index>[]</index></name></type> <name>readers</name> <init>= <expr><call><name><name>target</name><operator>.</operator><name>getSequentialSubReaders</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <if_stmt><if>if <condition>(<expr><name>readers</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>
     <for>for <control>(<init><decl><type><name>SolrIndexReader</name></type> <name>r</name> <range>: <expr><name>readers</name></expr></range></decl></init>)</control> <block>{<block_content>
       <expr_stmt><expr><call><name>setInfo</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><name>map</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></for>     
   </block_content>}</block></function>

   <comment type="block" format="javadoc">/** Copies SolrReaderInfo instances from the source to this SolrIndexReader */</comment>
   <function><type><specifier>public</specifier> <name>void</name></type> <name>associateInfo</name><parameter_list>(<parameter><decl><type><name>SolrIndexReader</name></type> <name>source</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <comment type="line">// seemed safer to not mess with reopen() but simply set</comment>
     <comment type="line">// one set of caches from another reader tree.</comment>
     <decl_stmt><decl><type><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>IndexReader</name></argument>, <argument><name>SolrReaderInfo</name></argument>&gt;</argument_list></name></type> <name>map</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>IndexReader</name></argument>, <argument><name>SolrReaderInfo</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>buildInfoMap</name><argument_list>(<argument><expr><name>source</name></expr></argument>, <argument><expr><name>map</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>setInfo</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>map</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>IndexReader</name></type> <name>getWrappedReader</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>in</name></expr>;</return>
  </block_content>}</block></function>

  <comment type="block" format="javadoc">/** returns the parent reader, or null of none */</comment>
  <function><type><specifier>public</specifier> <name>SolrIndexReader</name></type> <name>getParent</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>parent</name></expr>;</return>
  </block_content>}</block></function>

   <comment type="block" format="javadoc">/** returns the docid offset within the parent reader */</comment>
  <function><type><specifier>public</specifier> <name>int</name></type> <name>getBase</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>base</name></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>Directory</name></type> <name>directory</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><call><name><name>in</name><operator>.</operator><name>directory</name></name><argument_list>()</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>Bits</name></type> <name>getDeletedDocs</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><call><name><name>in</name><operator>.</operator><name>getDeletedDocs</name></name><argument_list>()</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name><name>TermFreqVector</name><index>[]</index></name></type> <name>getTermFreqVectors</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>docNumber</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <return>return <expr><call><name><name>in</name><operator>.</operator><name>getTermFreqVectors</name></name><argument_list>(<argument><expr><name>docNumber</name></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>TermFreqVector</name></type> <name>getTermFreqVector</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>docNumber</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>field</name></decl></parameter>)</parameter_list>
          <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <return>return <expr><call><name><name>in</name><operator>.</operator><name>getTermFreqVector</name></name><argument_list>(<argument><expr><name>docNumber</name></expr></argument>, <argument><expr><name>field</name></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>getTermFreqVector</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>docNumber</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>field</name></decl></parameter>, <parameter><decl><type><name>TermVectorMapper</name></type> <name>mapper</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>in</name><operator>.</operator><name>getTermFreqVector</name></name><argument_list>(<argument><expr><name>docNumber</name></expr></argument>, <argument><expr><name>field</name></expr></argument>, <argument><expr><name>mapper</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>getTermFreqVector</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>docNumber</name></decl></parameter>, <parameter><decl><type><name>TermVectorMapper</name></type> <name>mapper</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>in</name><operator>.</operator><name>getTermFreqVector</name></name><argument_list>(<argument><expr><name>docNumber</name></expr></argument>, <argument><expr><name>mapper</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>int</name></type> <name>numDocs</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><call><name><name>in</name><operator>.</operator><name>numDocs</name></name><argument_list>()</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>int</name></type> <name>maxDoc</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><call><name><name>in</name><operator>.</operator><name>maxDoc</name></name><argument_list>()</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>Document</name></type> <name>document</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>n</name></decl></parameter>, <parameter><decl><type><name>FieldSelector</name></type> <name>fieldSelector</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>CorruptIndexException</name></expr></argument>, <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <return>return <expr><call><name><name>in</name><operator>.</operator><name>document</name></name><argument_list>(<argument><expr><name>n</name></expr></argument>, <argument><expr><name>fieldSelector</name></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>boolean</name></type> <name>hasDeletions</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><call><name><name>in</name><operator>.</operator><name>hasDeletions</name></name><argument_list>()</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>protected</specifier> <name>void</name></type> <name>doUndeleteAll</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>CorruptIndexException</name></expr></argument>, <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content><expr_stmt><expr><call><name><name>in</name><operator>.</operator><name>undeleteAll</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>boolean</name></type> <name>hasNorms</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>field</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <return>return <expr><call><name><name>in</name><operator>.</operator><name>hasNorms</name></name><argument_list>(<argument><expr><name>field</name></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name><name>byte</name><index>[]</index></name></type> <name>norms</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>f</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <return>return <expr><call><name><name>in</name><operator>.</operator><name>norms</name></name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>protected</specifier> <name>void</name></type> <name>doSetNorm</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>d</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>f</name></decl></parameter>, <parameter><decl><type><name>byte</name></type> <name>b</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>CorruptIndexException</name></expr></argument>, <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>in</name><operator>.</operator><name>setNorm</name></name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>Fields</name></type> <name>fields</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <return>return <expr><call><name><name>in</name><operator>.</operator><name>fields</name></name><argument_list>()</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>int</name></type> <name>docFreq</name><parameter_list>(<parameter><decl><type><name>Term</name></type> <name>t</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name>ensureOpen</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><call><name><name>in</name><operator>.</operator><name>docFreq</name></name><argument_list>(<argument><expr><name>t</name></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>int</name></type> <name>docFreq</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>field</name></decl></parameter>, <parameter><decl><type><name>BytesRef</name></type> <name>t</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <return>return <expr><call><name><name>in</name><operator>.</operator><name>docFreq</name></name><argument_list>(<argument><expr><name>field</name></expr></argument>, <argument><expr><name>t</name></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>Terms</name></type> <name>terms</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>field</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <return>return <expr><call><name><name>in</name><operator>.</operator><name>terms</name></name><argument_list>(<argument><expr><name>field</name></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>DocsEnum</name></type> <name>termDocsEnum</name><parameter_list>(<parameter><decl><type><name>Bits</name></type> <name>skipDocs</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>field</name></decl></parameter>, <parameter><decl><type><name>BytesRef</name></type> <name>term</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <return>return <expr><call><name><name>in</name><operator>.</operator><name>termDocsEnum</name></name><argument_list>(<argument><expr><name>skipDocs</name></expr></argument>, <argument><expr><name>field</name></expr></argument>, <argument><expr><name>term</name></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>DocsAndPositionsEnum</name></type> <name>termPositionsEnum</name><parameter_list>(<parameter><decl><type><name>Bits</name></type> <name>skipDocs</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>field</name></decl></parameter>, <parameter><decl><type><name>BytesRef</name></type> <name>term</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <return>return <expr><call><name><name>in</name><operator>.</operator><name>termPositionsEnum</name></name><argument_list>(<argument><expr><name>skipDocs</name></expr></argument>, <argument><expr><name>field</name></expr></argument>, <argument><expr><name>term</name></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>protected</specifier> <name>void</name></type> <name>doDelete</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>n</name></decl></parameter>)</parameter_list> <throws>throws  <argument><expr><name>CorruptIndexException</name></expr></argument>, <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content> <expr_stmt><expr><call><name><name>in</name><operator>.</operator><name>deleteDocument</name></name><argument_list>(<argument><expr><name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> </block_content>}</block></function>


  <comment type="line">// Let FilterIndexReader handle commit()... we cannot override commit()</comment>
  <comment type="line">// or call in.commit() ourselves.</comment>
  <comment type="line">// protected void doCommit() throws IOException { in.commit(); }</comment>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>protected</specifier> <name>void</name></type> <name>doClose</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>in</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>Collection</name></type> <name>getFieldNames</name><parameter_list>(<parameter><decl><type><name><name>IndexReader</name><operator>.</operator><name>FieldOption</name></name></type> <name>fieldNames</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <return>return <expr><call><name><name>in</name><operator>.</operator><name>getFieldNames</name></name><argument_list>(<argument><expr><name>fieldNames</name></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>long</name></type> <name>getVersion</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><call><name><name>in</name><operator>.</operator><name>getVersion</name></name><argument_list>()</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>boolean</name></type> <name>isCurrent</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>CorruptIndexException</name></expr></argument>, <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <return>return <expr><call><name><name>in</name><operator>.</operator><name>isCurrent</name></name><argument_list>()</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>boolean</name></type> <name>isOptimized</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><call><name><name>in</name><operator>.</operator><name>isOptimized</name></name><argument_list>()</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name><name>SolrIndexReader</name><index>[]</index></name></type> <name>getSequentialSubReaders</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>subReaders</name></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>int</name></type> <name>hashCode</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><call><name><name>in</name><operator>.</operator><name>hashCode</name></name><argument_list>()</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>boolean</name></type> <name>equals</name><parameter_list>(<parameter><decl><type><name>Object</name></type> <name>o</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name>o</name> <operator>instanceof</operator> <name>SolrIndexReader</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>o</name> <operator>=</operator> <operator>(</operator><operator>(</operator><name>SolrIndexReader</name><operator>)</operator><name>o</name><operator>)</operator><operator>.</operator><name>in</name></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <return>return <expr><call><name><name>in</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>o</name></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>int</name></type> <name>getRefCount</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><call><name><name>in</name><operator>.</operator><name>getRefCount</name></name><argument_list>()</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>IndexReader</name></type> <name>reopen</name><parameter_list>(<parameter><decl><type><name>IndexCommit</name></type> <name>commit</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>CorruptIndexException</name></expr></argument>, <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <return>return <expr><call><name><name>in</name><operator>.</operator><name>reopen</name></name><argument_list>(<argument><expr><name>commit</name></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>Object</name></type> <name>clone</name><parameter_list>()</parameter_list> <block>{<block_content>
    <comment type="line">// hmmm, is this right?</comment>
    <return>return <expr><call><name><name>super</name><operator>.</operator><name>clone</name></name><argument_list>()</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>IndexReader</name></type> <name>clone</name><parameter_list>(<parameter><decl><type><name>boolean</name></type> <name>openReadOnly</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>CorruptIndexException</name></expr></argument>, <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <comment type="line">// hmmm, is this right?</comment>
    <return>return <expr><call><name><name>super</name><operator>.</operator><name>clone</name></name><argument_list>(<argument><expr><name>openReadOnly</name></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>Map</name></type> <name>getCommitUserData</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><call><name><name>in</name><operator>.</operator><name>getCommitUserData</name></name><argument_list>()</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>long</name></type> <name>getUniqueTermCount</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <return>return <expr><call><name><name>in</name><operator>.</operator><name>getUniqueTermCount</name></name><argument_list>()</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>SolrIndexReader</name></type> <name>reopen</name><parameter_list>(<parameter><decl><type><name>boolean</name></type> <name>openReadOnly</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>IndexReader</name></type> <name>r</name> <init>= <expr><call><name><name>in</name><operator>.</operator><name>reopen</name></name><argument_list>(<argument><expr><name>openReadOnly</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>r</name> <operator>==</operator> <name>in</name></expr>)</condition> <block>{<block_content>
      <return>return <expr><name>this</name></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <decl_stmt><decl><type><name>SolrIndexReader</name></type> <name>sr</name> <init>= <expr><operator>new</operator> <call><name>SolrIndexReader</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>sr</name><operator>.</operator><name>associateInfo</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name>sr</name></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>SolrIndexReader</name></type> <name>reopen</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>CorruptIndexException</name></expr></argument>, <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <return>return <expr><call><name>reopen</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>decRef</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>in</name><operator>.</operator><name>decRef</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>deleteDocument</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>docNum</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>StaleReaderException</name></expr></argument>, <argument><expr><name>CorruptIndexException</name></expr></argument>, <argument><expr><name>LockObtainFailedException</name></expr></argument>, <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>in</name><operator>.</operator><name>deleteDocument</name></name><argument_list>(<argument><expr><name>docNum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>int</name></type> <name>deleteDocuments</name><parameter_list>(<parameter><decl><type><name>Term</name></type> <name>term</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>StaleReaderException</name></expr></argument>, <argument><expr><name>CorruptIndexException</name></expr></argument>, <argument><expr><name>LockObtainFailedException</name></expr></argument>, <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <return>return <expr><call><name><name>in</name><operator>.</operator><name>deleteDocuments</name></name><argument_list>(<argument><expr><name>term</name></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>Document</name></type> <name>document</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>n</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>CorruptIndexException</name></expr></argument>, <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <return>return <expr><call><name><name>in</name><operator>.</operator><name>document</name></name><argument_list>(<argument><expr><name>n</name></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

<comment type="line">//  @Override</comment>
<comment type="line">//  public String getCommitUserData() {</comment>
<comment type="line">//    return in.getCommitUserData();</comment>
<comment type="line">//  }</comment>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>IndexCommit</name></type> <name>getIndexCommit</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <return>return <expr><call><name><name>in</name><operator>.</operator><name>getIndexCommit</name></name><argument_list>()</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>incRef</name><parameter_list>()</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name><name>in</name><operator>.</operator><name>incRef</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>int</name></type> <name>numDeletedDocs</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><call><name><name>in</name><operator>.</operator><name>numDeletedDocs</name></name><argument_list>()</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>setNorm</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>field</name></decl></parameter>, <parameter><decl><type><name>byte</name></type> <name>value</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>StaleReaderException</name></expr></argument>, <argument><expr><name>CorruptIndexException</name></expr></argument>, <argument><expr><name>LockObtainFailedException</name></expr></argument>, <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>in</name><operator>.</operator><name>setNorm</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>, <argument><expr><name>field</name></expr></argument>, <argument><expr><name>value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>undeleteAll</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>StaleReaderException</name></expr></argument>, <argument><expr><name>CorruptIndexException</name></expr></argument>, <argument><expr><name>LockObtainFailedException</name></expr></argument>, <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>in</name><operator>.</operator><name>undeleteAll</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>Object</name></type> <name>getCoreCacheKey</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><call><name><name>in</name><operator>.</operator><name>getCoreCacheKey</name></name><argument_list>()</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>int</name></type> <name>getTermInfosIndexDivisor</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><call><name><name>in</name><operator>.</operator><name>getTermInfosIndexDivisor</name></name><argument_list>()</argument_list></call></expr>;</return>
  </block_content>}</block></function>
  
  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>ReaderContext</name></type> <name>getTopReaderContext</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>topLevelContext</name></expr>;</return>
  </block_content>}</block></function>
}</block></class>



<comment type="block" format="javadoc">/** SolrReaderInfo contains information that is the same for
 * every SolrIndexReader that wraps the same IndexReader.
 * Multiple SolrIndexReader instances will be accessing this
 * class concurrently.
 */</comment>
<class>class <name>SolrReaderInfo</name> <block>{
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>IndexReader</name></type> <name>reader</name></decl>;</decl_stmt>
  <constructor><specifier>public</specifier> <name>SolrReaderInfo</name><parameter_list>(<parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>reader</name></name> <operator>=</operator> <name>reader</name></expr>;</expr_stmt>
  </block_content>}</block></constructor>
  <function><type><specifier>public</specifier> <name>IndexReader</name></type> <name>getReader</name><parameter_list>()</parameter_list> <block>{<block_content> <return>return <expr><name>reader</name></expr>;</return> </block_content>}</block></function>

}</block></class>
<expr_stmt><expr><operator>\</operator> <name>No</name> <name>newline</name> <name>at</name> <name>end</name> <name>of</name> <name>file</name>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SolrIndexSearcher</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SolrIndexSearcher</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">9a59dc78cbc</literal><operator>..</operator><literal type="number">6dec3f0df6b</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SolrIndexSearcher</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SolrIndexSearcher</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">68</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">68</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrIndexSearcher</name> extends <name>IndexSearcher</name> implements <name>SolrInfoMBean</name> <block>{
   <expr><specifier>private</specifier> <name>long</name> <name>openTime</name> <operator>=</operator> <call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call></expr>;
   <expr><specifier>private</specifier> <name>long</name> <name>registerTime</name> <operator>=</operator> <literal type="number">0</literal></expr>;
   <expr><specifier>private</specifier> <name>long</name> <name>warmupTime</name> <operator>=</operator> <literal type="number">0</literal></expr>;
  <expr><specifier>private</specifier> <name>final</name> <name>SolrIndexReader</name> <name>reader</name></expr>;
  <expr><specifier>private</specifier> <name>final</name> <name>IndexReader</name> <name>reader</name></expr>;
   <expr><specifier>private</specifier> <name>final</name> <name>boolean</name> <name>closeReader</name></expr>;
 
   <expr><specifier>private</specifier> <name>final</name> <name>int</name> <name>queryResultWindowSize</name></expr>;
@@ <expr><operator>-</operator><literal type="number">117</literal></expr>,<expr><literal type="number">28</literal> <operator>+</operator><literal type="number">117</literal></expr>,<expr><literal type="number">15</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrIndexSearcher</name> extends <name>IndexSearcher</name> implements <name>SolrInfoMBean</name> <block>{
     <expr><call><name>this</name><argument_list>(<argument><expr><name>core</name></expr></argument>, <argument><expr><name>schema</name></expr></argument>,<argument><expr><name>name</name></expr></argument>,<argument><expr><name>r</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><name>enableCache</name></expr></argument>)</argument_list></call></expr>;
   }</block>
 
  <specifier>private</specifier> <specifier>static</specifier> <name>SolrIndexReader</name> <call><name>wrap</name><argument_list>(<argument><expr><name>IndexReader</name> <name>r</name></expr></argument>)</argument_list></call> <block>{
    <expr><name>SolrIndexReader</name> <name>sir</name></expr>;
    <comment type="line">// wrap the reader</comment>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><name>r</name> <operator>instanceof</operator> <name>SolrIndexReader</name><operator>)</operator></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>sir</name> <operator>=</operator> <operator>new</operator> <call><name>SolrIndexReader</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>sir</name><operator>.</operator><name>associateInfo</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt/></block_content></block></if></if_stmt>}</block></expr> <if_stmt><else>else <block>{<block_content>
      <expr_stmt><expr><name>sir</name> <operator>=</operator> <operator>(</operator><name>SolrIndexReader</name><operator>)</operator><name>r</name></expr>;</expr_stmt>
    <expr_stmt/></block_content></block></else></if_stmt>}</block></expr></expr_stmt>
    <return>return <expr><name>sir</name></expr>;</return>
  }</block></class>
 
   <specifier>public</specifier> <call><name>SolrIndexSearcher</name><argument_list>(<argument><expr><name>SolrCore</name> <name>core</name></expr></argument>, <argument><expr><name>IndexSchema</name> <name>schema</name></expr></argument>, <argument><expr><name>String</name> <name>name</name></expr></argument>, <argument><expr><name>IndexReader</name> <name>r</name></expr></argument>, <argument><expr><name>boolean</name> <name>closeReader</name></expr></argument>, <argument><expr><name>boolean</name> <name>enableCache</name></expr></argument>)</argument_list></call> <block>{
    <expr><call><name>super</name><argument_list>(<argument><expr><call><name>wrap</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><name><name>this</name><operator>.</operator><name>reader</name></name> <operator>=</operator> <operator>(</operator><name>SolrIndexReader</name><operator>)</operator><call><name><name>super</name><operator>.</operator><name>getIndexReader</name></name><argument_list>()</argument_list></call></expr>;
    <expr><call><name>super</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>;
    <expr><name><name>this</name><operator>.</operator><name>reader</name></name> <operator>=</operator> <call><name>getIndexReader</name><argument_list>()</argument_list></call></expr>;
     <expr><name><name>this</name><operator>.</operator><name>core</name></name> <operator>=</operator> <name>core</name></expr>;
     <expr><name><name>this</name><operator>.</operator><name>schema</name></name> <operator>=</operator> <name>schema</name></expr>;
     <expr><name><name>this</name><operator>.</operator><name>name</name></name> <operator>=</operator> <literal type="string">"Searcher@"</literal> <operator>+</operator> <call><name><name>Integer</name><operator>.</operator><name>toHexString</name></name><argument_list>(<argument><expr><call><name>hashCode</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call> <operator>+</operator> <operator>(</operator><ternary><condition><expr><name>name</name><operator>!=</operator><literal type="null">null</literal></expr> ?</condition><then> <expr><literal type="string">" "</literal><operator>+</operator><name>name</name></expr> </then><else>: <expr><literal type="string">""</literal></expr></else></ternary><operator>)</operator></expr>;
     <expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Opening "</literal> <operator>+</operator> <name><name>this</name><operator>.</operator><name>name</name></name></expr></argument>)</argument_list></call></expr>;
 
    <expr><call><name><name>SolrIndexReader</name><operator>.</operator><name>setSearcher</name></name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;

     <if_stmt><if>if <condition>(<expr><call><name><name>r</name><operator>.</operator><name>directory</name></name><argument_list>()</argument_list></call> <operator>instanceof</operator> <name>FSDirectory</name></expr>)</condition> <block>{<block_content>
       <decl_stmt><decl><type><name>FSDirectory</name></type> <name>fsDirectory</name> <init>= <expr><operator>(</operator><name>FSDirectory</name><operator>)</operator> <call><name><name>r</name><operator>.</operator><name>directory</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><name>indexDir</name> <operator>=</operator> <call><name><name>fsDirectory</name><operator>.</operator><name>getDirectory</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">247</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">234</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrIndexSearcher</name> extends <name>IndexSearcher</name> implements <name>SolrInfoMBean</name> <block>{
     <expr><call><name><name>numCloses</name><operator>.</operator><name>incrementAndGet</name></name><argument_list>()</argument_list></call></expr>;</block></expr></expr_stmt></block_content></block></if></if_stmt>
   }</block>
 
  <comment type="block" format="javadoc">/** Direct access to the IndexReader used by this searcher */</comment>
  <specifier>public</specifier> <name>SolrIndexReader</name> <call><name>getReader</name><argument_list>()</argument_list></call> <block>{ <return>return <expr><name>reader</name></expr>;</return> }</block></expr></return>
   <comment type="block" format="javadoc">/** Direct access to the IndexSchema for use with this searcher */</comment>
   <function><type><specifier>public</specifier> <name>IndexSchema</name></type> <name>getSchema</name><parameter_list>()</parameter_list> <block>{<block_content> <return>return <expr><name>schema</name></expr>;</return> </block_content>}</block></function>
   
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>ValueSourceParser</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>ValueSourceParser</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">5b1805ee017</literal><operator>..</operator><name>b7668608f61</name> <literal type="number">100755</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>ValueSourceParser</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>ValueSourceParser</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@
  <operator>*</operator><operator>/</operator></expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name></name>;</package>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Term</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>queryParser</name><operator>.</operator><name>ParseException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Query</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">710</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">710</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <name>class</name> <name>LongConstValueSource</name> extends <name>ConstNumberSource</name> <block>{
     <return>return <expr><literal type="string">"const("</literal> <operator>+</operator> <name>constant</name> <operator>+</operator> <literal type="string">")"</literal></expr>;</return>
   }</block></expr></expr_stmt>
 
  <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
  <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>AtomicReaderContext</name></type> <name>readerContext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
     <return>return <expr><operator>new</operator> <class><super><name>DocValues</name></super><argument_list>()</argument_list> <block>{
       <function><type><specifier>public</specifier> <name>float</name></type> <name>floatVal</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <return>return <expr><name>fv</name></expr>;</return>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">807</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">807</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>abstract</specifier> <name>class</name> <name>DoubleParser</name> extends <name>NamedParser</name> <block>{
     }</block>
 
     @<name>Override</name>
    <specifier>public</specifier> <name>DocValues</name> <call><name>getValues</name><argument_list>(<argument><expr><name>Map</name> <name>context</name></expr></argument>, <argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
      <expr><name>final</name> <name>DocValues</name> <name>vals</name> <operator>=</operator>  <call><name><name>source</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>AtomicReaderContext</name></type> <name>readerContext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
      <decl_stmt><decl><type><specifier>final</specifier> <name>DocValues</name></type> <name>vals</name> <init>=  <expr><call><name><name>source</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <return>return <expr><operator>new</operator> <class><super><name>DocValues</name></super><argument_list>()</argument_list> <block>{
         <function><type><specifier>public</specifier> <name>float</name></type> <name>floatVal</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <block>{<block_content>
           <return>return <expr><operator>(</operator><name>float</name><operator>)</operator><call><name>doubleVal</name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</return>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">862</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">862</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>abstract</specifier> <name>class</name> <name>Double2Parser</name> extends <name>NamedParser</name> <block>{
       <return>return <expr><call><name>name</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"("</literal> <operator>+</operator> <call><name><name>a</name><operator>.</operator><name>description</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">","</literal> <operator>+</operator> <call><name><name>b</name><operator>.</operator><name>description</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">")"</literal></expr>;</return>
     }</block></expr></expr_stmt>
 
    <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
      <decl_stmt><decl><type><specifier>final</specifier> <name>DocValues</name></type> <name>aVals</name> <init>=  <expr><call><name><name>a</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><specifier>final</specifier> <name>DocValues</name></type> <name>bVals</name> <init>=  <expr><call><name><name>b</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>AtomicReaderContext</name></type> <name>readerContext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
      <decl_stmt><decl><type><specifier>final</specifier> <name>DocValues</name></type> <name>aVals</name> <init>=  <expr><call><name><name>a</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><specifier>final</specifier> <name>DocValues</name></type> <name>bVals</name> <init>=  <expr><call><name><name>b</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <return>return <expr><operator>new</operator> <class><super><name>DocValues</name></super><argument_list>()</argument_list> <block>{
         <function><type><specifier>public</specifier> <name>float</name></type> <name>floatVal</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <block>{<block_content>
           <return>return <expr><operator>(</operator><name>float</name><operator>)</operator><call><name>doubleVal</name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>BoostedQuery</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>BoostedQuery</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">645f3805cb8</literal><operator>..</operator><literal type="number">2ceb78ba6f7</literal> <literal type="number">100755</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>BoostedQuery</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>BoostedQuery</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">96</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">96</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>BoostedQuery</name> extends <name>Query</name> <block>{
       <if_stmt><if>if<condition>(<expr><name>subQueryScorer</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
         <return>return <expr><literal type="null">null</literal></expr>;</return>
       <expr_stmt/></block_content></block></if></if_stmt>}</block></expr></expr_stmt>
      <return>return <expr><operator>new</operator> <call><name><name>BoostedQuery</name><operator>.</operator><name>CustomScorer</name></name><argument_list>(<argument><expr><call><name>getSimilarity</name><argument_list>(<argument><expr><name>searcher</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>searcher</name></expr></argument>, <argument><expr><name><name>context</name><operator>.</operator><name>reader</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><name>subQueryScorer</name></expr></argument>, <argument><expr><name>boostVal</name></expr></argument>)</argument_list></call></expr>;</return>
      <return>return <expr><operator>new</operator> <call><name><name>BoostedQuery</name><operator>.</operator><name>CustomScorer</name></name><argument_list>(<argument><expr><call><name>getSimilarity</name><argument_list>(<argument><expr><name>searcher</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>context</name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><name>subQueryScorer</name></expr></argument>, <argument><expr><name>boostVal</name></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block></function>
 
     <annotation>@<name>Override</name></annotation>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">105</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">105</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>BoostedQuery</name> extends <name>Query</name> <block>{
       <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>subQueryExpl</name><operator>.</operator><name>isMatch</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
         <return>return <expr><name>subQueryExpl</name></expr>;</return>
       <expr_stmt/></block_content></block></if></if_stmt>}</block>
      <name>DocValues</name> <name>vals</name> <operator>=</operator> <call><name><name>boostVal</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>fcontext</name></expr></argument>, <argument><expr><name><name>readerContext</name><operator>.</operator><name>reader</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>DocValues</name></type> <name>vals</name> <init>= <expr><call><name><name>boostVal</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>fcontext</name></expr></argument>, <argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>float</name></type> <name>sc</name> <init>= <expr><call><name><name>subQueryExpl</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call> <operator>*</operator> <call><name><name>vals</name><operator>.</operator><name>floatVal</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>Explanation</name></type> <name>res</name> <init>= <expr><operator>new</operator> <call><name>ComplexExplanation</name><argument_list>(
         <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><name>sc</name></expr></argument>, <argument><expr><call><name><name>BoostedQuery</name><operator>.</operator><name>this</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">", product of:"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">121</literal></expr><operator>,</operator><expr><literal type="number">18</literal> <operator>+</operator><literal type="number">121</literal></expr><operator>,</operator><expr><literal type="number">16</literal> @@ <specifier>public</specifier> <name>class</name> <name>BoostedQuery</name> extends <name>Query</name> <block>{
     <expr><specifier>private</specifier> <name>final</name> <name>float</name> <name>qWeight</name></expr>;
     <expr><specifier>private</specifier> <name>final</name> <name>Scorer</name> <name>scorer</name></expr>;
     <expr><specifier>private</specifier> <name>final</name> <name>DocValues</name> <name>vals</name></expr>;
    <expr><specifier>private</specifier> <name>final</name> <name>IndexReader</name> <name>reader</name></expr>;
    <expr><specifier>private</specifier> <name>final</name> <name>IndexSearcher</name> <name>searcher</name></expr>;
    <expr><specifier>private</specifier> <name>final</name> <name>AtomicReaderContext</name> <name>readerContext</name></expr>;
 
    <expr><specifier>private</specifier> <call><name>CustomScorer</name><argument_list>(<argument><expr><name>Similarity</name> <name>similarity</name></expr></argument>, <argument><expr><name>IndexSearcher</name> <name>searcher</name></expr></argument>, <argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>, <argument><expr><name><name>BoostedQuery</name><operator>.</operator><name>BoostedWeight</name></name> <name>w</name></expr></argument>,
    <argument><expr><specifier>private</specifier> <call><name>CustomScorer</name><argument_list>(<argument><expr><name>Similarity</name> <name>similarity</name></expr></argument>, <argument><expr><name>AtomicReaderContext</name> <name>readerContext</name></expr></argument>, <argument><expr><name><name>BoostedQuery</name><operator>.</operator><name>BoostedWeight</name></name> <name>w</name></expr></argument>,
         <argument><expr><name>Scorer</name> <name>scorer</name></expr></argument>, <argument><expr><name>ValueSource</name> <name>vs</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
       <expr><call><name>super</name><argument_list>(<argument><expr><name>similarity</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr></argument>;
       <argument><expr><name><name>this</name><operator>.</operator><name>weight</name></name> <operator>=</operator> <name>w</name></expr></argument>;
       <argument><expr><name><name>this</name><operator>.</operator><name>qWeight</name></name> <operator>=</operator> <call><name><name>w</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>;
       <argument><expr><name><name>this</name><operator>.</operator><name>scorer</name></name> <operator>=</operator> <name>scorer</name></expr></argument>;
      <argument><expr><name><name>this</name><operator>.</operator><name>reader</name></name> <operator>=</operator> <name>reader</name></expr></argument>;
      <argument><expr><name><name>this</name><operator>.</operator><name>searcher</name></name> <operator>=</operator> <name>searcher</name></expr></argument>; <comment type="line">// for explain</comment>
      <argument><expr><name><name>this</name><operator>.</operator><name>vals</name></name> <operator>=</operator> <call><name><name>vs</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name><name>weight</name><operator>.</operator><name>fcontext</name></name></expr></argument>, <argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr></argument>;
      <argument><expr><name><name>this</name><operator>.</operator><name>readerContext</name></name> <operator>=</operator> <name>readerContext</name></expr></argument>;
      <argument><expr><name><name>this</name><operator>.</operator><name>vals</name></name> <operator>=</operator> <call><name><name>vs</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name><name>weight</name><operator>.</operator><name>fcontext</name></name></expr></argument>, <argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr></argument>;
     }</argument_list></call>
 
     @<name>Override</name>
@@ <operator>-</operator><literal type="number">161</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">159</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>BoostedQuery</name> extends <name>Query</name> <block>{
     }</block>
 
     <specifier>public</specifier> <name>Explanation</name> <call><name>explain</name><argument_list>(<argument><expr><name>int</name> <name>doc</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
      <expr><name>Explanation</name> <name>subQueryExpl</name> <operator>=</operator> <call><name><name>weight</name><operator>.</operator><name>qWeight</name><operator>.</operator><name>explain</name></name><argument_list>(<argument><expr><call><name><name>ValueSource</name><operator>.</operator><name>readerToContext</name></name><argument_list>(<argument><expr><name><name>weight</name><operator>.</operator><name>fcontext</name></name></expr></argument>,<argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr></argument> ,<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
      <expr><name>Explanation</name> <name>subQueryExpl</name> <operator>=</operator> <call><name><name>weight</name><operator>.</operator><name>qWeight</name><operator>.</operator><name>explain</name></name><argument_list>(<argument><expr><name>readerContext</name></expr></argument> ,<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;
       <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>subQueryExpl</name><operator>.</operator><name>isMatch</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
         <return>return <expr><name>subQueryExpl</name></expr>;</return>
       <expr_stmt/></block_content></block></if></if_stmt>}</block>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ByteFieldSource</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ByteFieldSource</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">0cba6fd4c20</literal><operator>..</operator><literal type="number">2dd5bb77ddf</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ByteFieldSource</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ByteFieldSource</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>cache</name><operator>.</operator><name>ByteValuesCreator</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>cache</name><operator>.</operator><name>CachedArray</name><operator>.</operator><name>ByteValues</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">41</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">41</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>ByteFieldSource</name> extends <name><name>NumericFieldCacheSource</name><argument_list type="generic">&lt;<argument><name>ByteValues</name></argument>&gt;</argument_list></name> <block>{
     <return>return <expr><literal type="string">"byte("</literal> <operator>+</operator> <name>field</name> <operator>+</operator> <literal type="char">')'</literal></expr>;</return>
   }</block></expr></expr_stmt>
 
  <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><specifier>final</specifier> <name>ByteValues</name></type> <name>vals</name> <init>= <expr><call><name><name>cache</name><operator>.</operator><name>getBytes</name></name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><name>field</name></expr></argument>, <argument><expr><name>creator</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>AtomicReaderContext</name></type> <name>readerContext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><specifier>final</specifier> <name>ByteValues</name></type> <name>vals</name> <init>= <expr><call><name><name>cache</name><operator>.</operator><name>getBytes</name></name><argument_list>(<argument><expr><name><name>readerContext</name><operator>.</operator><name>reader</name></name></expr></argument>, <argument><expr><name>field</name></expr></argument>, <argument><expr><name>creator</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>final</specifier> <name><name>byte</name><index>[]</index></name></type> <name>arr</name> <init>= <expr><name><name>vals</name><operator>.</operator><name>values</name></name></expr></init></decl>;</decl_stmt>
     
     <return>return <expr><operator>new</operator> <class><super><name>DocValues</name></super><argument_list>()</argument_list> <block>{
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ConstValueSource</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ConstValueSource</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>b4a09bf0c13</name><operator>..</operator><literal type="number">846591dafb2</literal> <literal type="number">100755</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ConstValueSource</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ConstValueSource</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt>
 
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name></name>;</package>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">38</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">38</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ConstValueSource</name> extends <name>ConstNumberSource</name> <block>{
     <return>return <expr><literal type="string">"const("</literal> <operator>+</operator> <name>constant</name> <operator>+</operator> <literal type="string">")"</literal></expr>;</return>
   }</block></expr></expr_stmt>
 
  <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
  <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>AtomicReaderContext</name></type> <name>readerContext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
     <return>return <expr><operator>new</operator> <class><super><name>DocValues</name></super><argument_list>()</argument_list> <block>{
       <function><type><specifier>public</specifier> <name>float</name></type> <name>floatVal</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <return>return <expr><name>constant</name></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>DocFreqValueSource</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>DocFreqValueSource</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">2fef6ac117e</literal><operator>..</operator><literal type="number">641f2a9aaa8</literal> <literal type="number">100755</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>DocFreqValueSource</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>DocFreqValueSource</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt>
 
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name></name>;</package>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Term</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>IndexSearcher</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>BytesRef</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">239</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">239</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>DocFreqValueSource</name> extends <name>ValueSource</name> <block>{
   }</block>
 
   @<name>Override</name>
  <specifier>public</specifier> <name>DocValues</name> <call><name>getValues</name><argument_list>(<argument><expr><name>Map</name> <name>context</name></expr></argument>, <argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>public</specifier> <name>DocValues</name> <call><name>getValues</name><argument_list>(<argument><expr><name>Map</name> <name>context</name></expr></argument>, <argument><expr><name>AtomicReaderContext</name> <name>readerContext</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><name>IndexSearcher</name> <name>searcher</name> <operator>=</operator> <operator>(</operator><name>IndexSearcher</name><operator>)</operator><call><name><name>context</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"searcher"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>int</name></type> <name>docfreq</name> <init>= <expr><call><name><name>searcher</name><operator>.</operator><name>docFreq</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Term</name><argument_list>(<argument><expr><name>indexedField</name></expr></argument>, <argument><expr><name>indexedBytes</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <return>return <expr><operator>new</operator> <call><name>ConstIntDocValues</name><argument_list>(<argument><expr><name>docfreq</name></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>DoubleConstValueSource</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>DoubleConstValueSource</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">19c5443ca39</literal><operator>..</operator><literal type="number">9df2d685f2d</literal> <literal type="number">100755</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>DoubleConstValueSource</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>DoubleConstValueSource</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt>
 
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name></name>;</package>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">37</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">37</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>DoubleConstValueSource</name> extends <name>ConstNumberSource</name> <block>{
     <return>return <expr><literal type="string">"const("</literal> <operator>+</operator> <name>constant</name> <operator>+</operator> <literal type="string">")"</literal></expr>;</return>
   }</block></expr></expr_stmt>
 
  <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
  <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>AtomicReaderContext</name></type> <name>readerContext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
     <return>return <expr><operator>new</operator> <class><super><name>DocValues</name></super><argument_list>()</argument_list> <block>{
       <function><type><specifier>public</specifier> <name>float</name></type> <name>floatVal</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <return>return <expr><name>fv</name></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>DoubleFieldSource</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>DoubleFieldSource</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>de670596d84</name><operator>..</operator><literal type="number">02017aee0a6</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>DoubleFieldSource</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>DoubleFieldSource</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name></name>;</package>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>Bits</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>cache</name><operator>.</operator><name>DoubleValuesCreator</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>cache</name><operator>.</operator><name>CachedArray</name><operator>.</operator><name>DoubleValues</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">45</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">46</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>DoubleFieldSource</name> extends <name><name>NumericFieldCacheSource</name><argument_list type="generic">&lt;<argument><name>DoubleValues</name></argument>&gt;</argument_list></name> <block>{
     <return>return <expr><literal type="string">"double("</literal> <operator>+</operator> <name>field</name> <operator>+</operator> <literal type="char">')'</literal></expr>;</return>
   }</block></expr></expr_stmt>
 
  <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><specifier>final</specifier> <name>DoubleValues</name></type> <name>vals</name> <init>= <expr><call><name><name>cache</name><operator>.</operator><name>getDoubles</name></name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><name>field</name></expr></argument>, <argument><expr><name>creator</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>AtomicReaderContext</name></type> <name>readerContext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><specifier>final</specifier> <name>DoubleValues</name></type> <name>vals</name> <init>= <expr><call><name><name>cache</name><operator>.</operator><name>getDoubles</name></name><argument_list>(<argument><expr><name><name>readerContext</name><operator>.</operator><name>reader</name></name></expr></argument>, <argument><expr><name>field</name></expr></argument>, <argument><expr><name>creator</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>final</specifier> <name><name>double</name><index>[]</index></name></type> <name>arr</name> <init>= <expr><name><name>vals</name><operator>.</operator><name>values</name></name></expr></init></decl>;</decl_stmt>
 	<decl_stmt><decl><type><specifier>final</specifier> <name>Bits</name></type> <name>valid</name> <init>= <expr><name><name>vals</name><operator>.</operator><name>valid</name></name></expr></init></decl>;</decl_stmt>
     
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>DualFloatFunction</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>DualFloatFunction</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">0b4b54c444f</literal><operator>..</operator><literal type="number">9eaec662091</literal> <literal type="number">100755</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>DualFloatFunction</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>DualFloatFunction</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt>
 
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name></name>;</package>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>IndexSearcher</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">43</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">43</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>DualFloatFunction</name> extends <name>ValueSource</name> <block>{
     <return>return <expr><call><name>name</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"("</literal> <operator>+</operator> <call><name><name>a</name><operator>.</operator><name>description</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">","</literal> <operator>+</operator> <call><name><name>b</name><operator>.</operator><name>description</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">")"</literal></expr>;</return>
   }</block></expr></expr_stmt>
 
  <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><specifier>final</specifier> <name>DocValues</name></type> <name>aVals</name> <init>=  <expr><call><name><name>a</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>DocValues</name></type> <name>bVals</name> <init>=  <expr><call><name><name>b</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>AtomicReaderContext</name></type> <name>readerContext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><specifier>final</specifier> <name>DocValues</name></type> <name>aVals</name> <init>=  <expr><call><name><name>a</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>DocValues</name></type> <name>bVals</name> <init>=  <expr><call><name><name>b</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <return>return <expr><operator>new</operator> <class><super><name>DocValues</name></super><argument_list>()</argument_list> <block>{
       <function><type><specifier>public</specifier> <name>float</name></type> <name>floatVal</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <block>{<block_content>
 	<return>return <expr><call><name>func</name><argument_list>(<argument><expr><name>doc</name></expr></argument>, <argument><expr><name>aVals</name></expr></argument>, <argument><expr><name>bVals</name></expr></argument>)</argument_list></call></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>FileFloatSource</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>FileFloatSource</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>c682ea8a2e0</name><operator>..</operator><literal type="number">817062c770d</literal> <literal type="number">100755</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>FileFloatSource</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>FileFloatSource</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">15</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">17</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name></name>;</package>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>DocsEnum</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>TermsEnum</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>MultiFields</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>ReaderUtil</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>StringHelper</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>BytesRef</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrCore</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>schema</name><operator>.</operator><name>SchemaField</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>schema</name><operator>.</operator><name>FieldType</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>QParser</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>SolrIndexReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>VersionedFile</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>*</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">55</literal></expr><operator>,</operator><expr><literal type="number">19</literal> <operator>+</operator><literal type="number">57</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>FileFloatSource</name> extends <name>ValueSource</name> <block>{
     <return>return <expr><literal type="string">"float("</literal> <operator>+</operator> <name>field</name> <operator>+</operator> <literal type="char">')'</literal></expr>;</return>
   }</block></expr></expr_stmt>
 
  <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
  <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>AtomicReaderContext</name></type> <name>readerContext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
     <decl_stmt><decl><type><name>int</name></type> <name>offset</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>reader</name> <operator>instanceof</operator> <name>SolrIndexReader</name></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>SolrIndexReader</name></type> <name>r</name> <init>= <expr><operator>(</operator><name>SolrIndexReader</name><operator>)</operator><name>reader</name></expr></init></decl>;</decl_stmt>
      <while>while <condition>(<expr><call><name><name>r</name><operator>.</operator><name>getParent</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>offset</name> <operator>+=</operator> <call><name><name>r</name><operator>.</operator><name>getBase</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>r</name> <operator>=</operator> <call><name><name>r</name><operator>.</operator><name>getParent</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></while>
      <expr_stmt><expr><name>reader</name> <operator>=</operator> <name>r</name></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <decl_stmt><decl><type><name>ReaderContext</name></type> <name>topLevelContext</name> <init>= <expr><call><name><name>ReaderUtil</name><operator>.</operator><name>getTopLevelContext</name></name><argument_list>(<argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>final</specifier> <name>int</name></type> <name>off</name> <init>= <expr><name>offset</name></expr></init></decl>;</decl_stmt>
 
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>float</name><index>[]</index></name></type> <name>arr</name> <init>= <expr><call><name>getCachedFloats</name><argument_list>(<argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>float</name><index>[]</index></name></type> <name>arr</name> <init>= <expr><call><name>getCachedFloats</name><argument_list>(<argument><expr><name><name>topLevelContext</name><operator>.</operator><name>reader</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <return>return <expr><operator>new</operator> <class><super><name>DocValues</name></super><argument_list>()</argument_list> <block>{
       <function><type><specifier>public</specifier> <name>float</name></type> <name>floatVal</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <return>return <expr><name><name>arr</name><index>[<expr><name>doc</name> <operator>+</operator> <name>off</name></expr>]</index></name></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>FloatFieldSource</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>FloatFieldSource</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">607de808325</literal><operator>..</operator><name>a985b49fe7c</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>FloatFieldSource</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>FloatFieldSource</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name></name>;</package>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>Bits</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>cache</name><operator>.</operator><name>FloatValuesCreator</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>cache</name><operator>.</operator><name>CachedArray</name><operator>.</operator><name>FloatValues</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">45</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">45</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>FloatFieldSource</name> extends <name><name>NumericFieldCacheSource</name><argument_list type="generic">&lt;<argument><name>FloatValues</name></argument>&gt;</argument_list></name> <block>{
     <return>return <expr><literal type="string">"float("</literal> <operator>+</operator> <name>field</name> <operator>+</operator> <literal type="char">')'</literal></expr>;</return>
   }</block></expr></expr_stmt>
 
  <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><specifier>final</specifier> <name>FloatValues</name></type> <name>vals</name> <init>= <expr><call><name><name>cache</name><operator>.</operator><name>getFloats</name></name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><name>field</name></expr></argument>, <argument><expr><name>creator</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>AtomicReaderContext</name></type> <name>readerContext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><specifier>final</specifier> <name>FloatValues</name></type> <name>vals</name> <init>= <expr><call><name><name>cache</name><operator>.</operator><name>getFloats</name></name><argument_list>(<argument><expr><name><name>readerContext</name><operator>.</operator><name>reader</name></name></expr></argument>, <argument><expr><name>field</name></expr></argument>, <argument><expr><name>creator</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>final</specifier> <name><name>float</name><index>[]</index></name></type> <name>arr</name> <init>= <expr><name><name>vals</name><operator>.</operator><name>values</name></name></expr></init></decl>;</decl_stmt>
 	<decl_stmt><decl><type><specifier>final</specifier> <name>Bits</name></type> <name>valid</name> <init>= <expr><name><name>vals</name><operator>.</operator><name>valid</name></name></expr></init></decl>;</decl_stmt>
     
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>FunctionQuery</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>FunctionQuery</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>dc0f644995e</name><operator>..</operator><literal type="number">8cd1a6f0257</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>FunctionQuery</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>FunctionQuery</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name></name>;</package>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>*</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>MultiFields</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>Bits</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">115</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">114</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>FunctionQuery</name> extends <name>Query</name> <block>{
     <expr><name>final</name> <name>boolean</name> <name>hasDeletions</name></expr>;
     <expr><name>final</name> <name>Bits</name> <name>delDocs</name></expr>;
 
    <expr><specifier>public</specifier> <call><name>AllScorer</name><argument_list>(<argument><expr><name>Similarity</name> <name>similarity</name></expr></argument>, <argument><expr><name>ReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>FunctionWeight</name> <name>w</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><specifier>public</specifier> <call><name>AllScorer</name><argument_list>(<argument><expr><name>Similarity</name> <name>similarity</name></expr></argument>, <argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>FunctionWeight</name> <name>w</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
       <expr><call><name>super</name><argument_list>(<argument><expr><name>similarity</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
       <expr><name><name>this</name><operator>.</operator><name>weight</name></name> <operator>=</operator> <name>w</name></expr>;
       <expr><name><name>this</name><operator>.</operator><name>qWeight</name></name> <operator>=</operator> <call><name><name>w</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">124</literal></expr>,<expr><literal type="number">9</literal> <operator>+</operator><literal type="number">123</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>FunctionQuery</name> extends <name>Query</name> <block>{
       <expr><name><name>this</name><operator>.</operator><name>hasDeletions</name></name> <operator>=</operator> <call><name><name>reader</name><operator>.</operator><name>hasDeletions</name></name><argument_list>()</argument_list></call></expr>;
       <expr><name><name>this</name><operator>.</operator><name>delDocs</name></name> <operator>=</operator> <call><name><name>MultiFields</name><operator>.</operator><name>getDeletedDocs</name></name><argument_list>(<argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr>;
       <assert>assert <expr><operator>!</operator><name>hasDeletions</name> <operator>||</operator> <name>delDocs</name> <operator>!=</operator> <literal type="null">null</literal></expr>;</assert>
      <name>Map</name> <name>funcContext</name> <operator>=</operator> <name><name>weight</name><operator>.</operator><name>context</name></name></block></expr>;
      <expr><call><name><name>funcContext</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;
      <expr><name>vals</name> <operator>=</operator> <call><name><name>func</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>funcContext</name></expr></argument>, <argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr>;
      <expr><name>vals</name> <operator>=</operator> <call><name><name>func</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name><name>weight</name><operator>.</operator><name>context</name></name></expr></argument>, <argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;
     }</block>
 
     @<name>Override</name>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>IDFValueSource</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>IDFValueSource</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">5cb86fbb6b3</literal><operator>..</operator><name>a9543b1c893</name> <literal type="number">100755</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>IDFValueSource</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>IDFValueSource</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name></name>;</package>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>*</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>IndexSearcher</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Similarity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>BytesRef</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">38</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">39</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>IDFValueSource</name> extends <name>DocFreqValueSource</name> <block>{
   }</block>
 
   @<name>Override</name>
  <specifier>public</specifier> <name>DocValues</name> <call><name>getValues</name><argument_list>(<argument><expr><name>Map</name> <name>context</name></expr></argument>, <argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>public</specifier> <name>DocValues</name> <call><name>getValues</name><argument_list>(<argument><expr><name>Map</name> <name>context</name></expr></argument>, <argument><expr><name>AtomicReaderContext</name> <name>readerContext</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><name>IndexSearcher</name> <name>searcher</name> <operator>=</operator> <operator>(</operator><name>IndexSearcher</name><operator>)</operator><call><name><name>context</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"searcher"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>Similarity</name></type> <name>sim</name> <init>= <expr><call><name><name>searcher</name><operator>.</operator><name>getSimilarity</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <comment type="line">// todo: we need docFreq that takes a BytesRef</comment>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>IntFieldSource</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>IntFieldSource</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">5b01abb34bf</literal><operator>..</operator><literal type="number">0cee5e769cf</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>IntFieldSource</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>IntFieldSource</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name></name>;</package>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>Bits</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>MutableValueInt</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>MutableValue</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">45</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">46</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>IntFieldSource</name> extends <name><name>NumericFieldCacheSource</name><argument_list type="generic">&lt;<argument><name>IntValues</name></argument>&gt;</argument_list></name> <block>{
   }</block>
 
 
  <specifier>public</specifier> <name>DocValues</name> <call><name>getValues</name><argument_list>(<argument><expr><name>Map</name> <name>context</name></expr></argument>, <argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><name>final</name> <name>IntValues</name> <name>vals</name> <operator>=</operator> <call><name><name>cache</name><operator>.</operator><name>getInts</name></name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><name>field</name></expr></argument>, <argument><expr><name>creator</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
  <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>AtomicReaderContext</name></type> <name>readerContext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><specifier>final</specifier> <name>IntValues</name></type> <name>vals</name> <init>= <expr><call><name><name>cache</name><operator>.</operator><name>getInts</name></name><argument_list>(<argument><expr><name><name>readerContext</name><operator>.</operator><name>reader</name></name></expr></argument>, <argument><expr><name>field</name></expr></argument>, <argument><expr><name>creator</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>final</specifier> <name><name>int</name><index>[]</index></name></type> <name>arr</name> <init>= <expr><name><name>vals</name><operator>.</operator><name>values</name></name></expr></init></decl>;</decl_stmt>
 	<decl_stmt><decl><type><specifier>final</specifier> <name>Bits</name></type> <name>valid</name> <init>= <expr><name><name>vals</name><operator>.</operator><name>valid</name></name></expr></init></decl>;</decl_stmt>
     
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>JoinDocFreqValueSource</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>JoinDocFreqValueSource</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>f93c9882e40</name><operator>..</operator><name>dae45789fca</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>JoinDocFreqValueSource</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>JoinDocFreqValueSource</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>FieldCache</name><operator>.</operator><name>DocTerms</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>BytesRef</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>ReaderUtil</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>SolrException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>SolrIndexReader</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
  * Use a field value and find the Document Frequency within another field.
@@ -46,21 +47,10 @@ public class JoinDocFreqValueSource extends FieldCacheSource {
     return NAME + "(" + field +":("+qfield+"))";
   }
 
  public DocValues getValues(Map context, IndexReader reader) throws IOException 
  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException 
   {
    final DocTerms terms = cache.getTerms(reader, field, true );
    
    int offset = 0;
    IndexReader topReader = reader;
    if (topReader instanceof SolrIndexReader) {
      SolrIndexReader r = (SolrIndexReader)topReader;
      while (r.getParent() != null) {
        offset += r.getBase();
        r = r.getParent();
      }
      topReader = r;
    }
    final IndexReader top = topReader;
    final DocTerms terms = cache.getTerms(readerContext.reader, field, true );
    final IndexReader top = ReaderUtil.getTopLevelContext(readerContext).reader;
     
     return new DocValues() {
       BytesRef ref = new BytesRef();
diff --git a/solr/src/java/org/apache/solr/search/function/LinearFloatFunction.java b/solr/src/java/org/apache/solr/search/function/LinearFloatFunction.java
index 79a3a0ac37f..7ceb07e2bf9 100644
-- a/solr/src/java/org/apache/solr/search/function/LinearFloatFunction.java
++ b/solr/src/java/org/apache/solr/search/function/LinearFloatFunction.java
@@ -17,7 +17,7 @@
 
 package org.apache.solr.search.function;
 
import org.apache.lucene.index.IndexReader;
import org.apache.lucene.index.IndexReader.AtomicReaderContext;
 import org.apache.lucene.search.IndexSearcher;
 
 import java.io.IOException;
@@ -46,8 +46,8 @@ public class LinearFloatFunction extends ValueSource {
     return slope + "*float(" + source.description() + ")+" + intercept;
   }
 
  public DocValues getValues(Map context, IndexReader reader) throws IOException {
    final DocValues vals =  source.getValues(context, reader);
  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {
    final DocValues vals =  source.getValues(context, readerContext);
     return new DocValues() {
       public float floatVal(int doc) {
         return vals.floatVal(doc) * slope + intercept;
diff --git a/solr/src/java/org/apache/solr/search/function/LiteralValueSource.java b/solr/src/java/org/apache/solr/search/function/LiteralValueSource.java
index 0c16a838d8c..64965e74cf7 100644
-- a/solr/src/java/org/apache/solr/search/function/LiteralValueSource.java
++ b/solr/src/java/org/apache/solr/search/function/LiteralValueSource.java
@@ -16,7 +16,7 @@ package org.apache.solr.search.function;
  * limitations under the License.
  */</comment>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">38</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">38</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>LiteralValueSource</name> extends <name>ValueSource</name> <block>{
   }</block>
 
   @<name>Override</name>
  <specifier>public</specifier> <name>DocValues</name> <call><name>getValues</name><argument_list>(<argument><expr><name>Map</name> <name>context</name></expr></argument>, <argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>public</specifier> <name>DocValues</name> <call><name>getValues</name><argument_list>(<argument><expr><name>Map</name> <name>context</name></expr></argument>, <argument><expr><name>AtomicReaderContext</name> <name>readerContext</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr></expr_stmt>
 
     <return>return <expr><operator>new</operator> <class><super><name>DocValues</name></super><argument_list>()</argument_list> <block>{
       <annotation>@<name>Override</name></annotation>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>LongFieldSource</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>LongFieldSource</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">60587d229c3</literal><operator>..</operator><name>dfa92b7b2c1</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>LongFieldSource</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>LongFieldSource</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name></name>;</package>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>Bits</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>cache</name><operator>.</operator><name>LongValuesCreator</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>cache</name><operator>.</operator><name>CachedArray</name><operator>.</operator><name>LongValues</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">50</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">51</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>LongFieldSource</name> extends <name><name>NumericFieldCacheSource</name><argument_list type="generic">&lt;<argument><name>LongValues</name></argument>&gt;</argument_list></name> <block>{
     <return>return <expr><call><name><name>Long</name><operator>.</operator><name>parseLong</name></name><argument_list>(<argument><expr><name>extVal</name></expr></argument>)</argument_list></call></expr>;</return>
   }</block></expr></expr_stmt>
 
  <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><specifier>final</specifier> <name>LongValues</name></type> <name>vals</name> <init>= <expr><call><name><name>cache</name><operator>.</operator><name>getLongs</name></name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><name>field</name></expr></argument>, <argument><expr><name>creator</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>AtomicReaderContext</name></type> <name>readerContext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><specifier>final</specifier> <name>LongValues</name></type> <name>vals</name> <init>= <expr><call><name><name>cache</name><operator>.</operator><name>getLongs</name></name><argument_list>(<argument><expr><name><name>readerContext</name><operator>.</operator><name>reader</name></name></expr></argument>, <argument><expr><name>field</name></expr></argument>, <argument><expr><name>creator</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>final</specifier> <name><name>long</name><index>[]</index></name></type> <name>arr</name> <init>= <expr><name><name>vals</name><operator>.</operator><name>values</name></name></expr></init></decl>;</decl_stmt>
 	<decl_stmt><decl><type><specifier>final</specifier> <name>Bits</name></type> <name>valid</name> <init>= <expr><name><name>vals</name><operator>.</operator><name>valid</name></name></expr></init></decl>;</decl_stmt>
     
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>MaxDocValueSource</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>MaxDocValueSource</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">6f4bebcd586</literal><operator>..</operator><literal type="number">30d94528a93</literal> <literal type="number">100755</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>MaxDocValueSource</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>MaxDocValueSource</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@
  <operator>*</operator><operator>/</operator></expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name></name>;</package>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>IndexSearcher</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">38</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">38</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>MaxDocValueSource</name> extends <name>ValueSource</name> <block>{
   }</block>
 
   @<name>Override</name>
  <specifier>public</specifier> <name>DocValues</name> <call><name>getValues</name><argument_list>(<argument><expr><name>Map</name> <name>context</name></expr></argument>, <argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>public</specifier> <name>DocValues</name> <call><name>getValues</name><argument_list>(<argument><expr><name>Map</name> <name>context</name></expr></argument>, <argument><expr><name>AtomicReaderContext</name> <name>readerContext</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><name>IndexSearcher</name> <name>searcher</name> <operator>=</operator> <operator>(</operator><name>IndexSearcher</name><operator>)</operator><call><name><name>context</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"searcher"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
     <return>return <expr><operator>new</operator> <call><name>ConstIntDocValues</name><argument_list>(<argument><expr><call><name><name>searcher</name><operator>.</operator><name>maxDoc</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>MaxFloatFunction</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>MaxFloatFunction</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>bab340f36b3</name><operator>..</operator><literal type="number">37af4d94809</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>MaxFloatFunction</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>MaxFloatFunction</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt>
 
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name></name>;</package>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>IndexSearcher</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">45</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">45</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>MaxFloatFunction</name> extends <name>ValueSource</name> <block>{
     <return>return <expr><literal type="string">"max("</literal> <operator>+</operator> <call><name><name>source</name><operator>.</operator><name>description</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">","</literal> <operator>+</operator> <name>fval</name> <operator>+</operator> <literal type="string">")"</literal></expr>;</return>
   }</block></expr></expr_stmt>
 
  <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><specifier>final</specifier> <name>DocValues</name></type> <name>vals</name> <init>=  <expr><call><name><name>source</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>AtomicReaderContext</name></type> <name>readerContext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><specifier>final</specifier> <name>DocValues</name></type> <name>vals</name> <init>=  <expr><call><name><name>source</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <return>return <expr><operator>new</operator> <class><super><name>DocValues</name></super><argument_list>()</argument_list> <block>{
       <function><type><specifier>public</specifier> <name>float</name></type> <name>floatVal</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <block>{<block_content>
 	<decl_stmt><decl><type><name>float</name></type> <name>v</name> <init>= <expr><call><name><name>vals</name><operator>.</operator><name>floatVal</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>MultiFloatFunction</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>MultiFloatFunction</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">331cd649095</literal><operator>..</operator><name>f66bdfe7502</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>MultiFloatFunction</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>MultiFloatFunction</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>IndexSearcher</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">54</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">54</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>MultiFloatFunction</name> extends <name>ValueSource</name> <block>{
     <return>return <expr><call><name><name>sb</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr>;</return>
   }</block></expr></expr_stmt>
 
  <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
  <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>AtomicReaderContext</name></type> <name>readerContext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
     <decl_stmt><decl><type><specifier>final</specifier> <name><name>DocValues</name><index>[]</index></name></type> <name>valsArr</name> <init>= <expr><operator>new</operator> <name><name>DocValues</name><index>[<expr><name><name>sources</name><operator>.</operator><name>length</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>
     <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name><name>sources</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
      <expr_stmt><expr><name><name>valsArr</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>sources</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>getValues</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>valsArr</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>sources</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>getValues</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></for>
 
     <return>return <expr><operator>new</operator> <class><super><name>DocValues</name></super><argument_list>()</argument_list> <block>{
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>NormValueSource</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>NormValueSource</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">913f4670511</literal><operator>..</operator><literal type="number">004bd14be71</literal> <literal type="number">100755</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>NormValueSource</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>NormValueSource</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt>
 
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name></name>;</package>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>IndexSearcher</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Similarity</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">44</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">44</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>NormValueSource</name> extends <name>ValueSource</name> <block>{
   }</block>
 
   @<name>Override</name>
  <specifier>public</specifier> <name>DocValues</name> <call><name>getValues</name><argument_list>(<argument><expr><name>Map</name> <name>context</name></expr></argument>, <argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>public</specifier> <name>DocValues</name> <call><name>getValues</name><argument_list>(<argument><expr><name>Map</name> <name>context</name></expr></argument>, <argument><expr><name>AtomicReaderContext</name> <name>readerContext</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><name>IndexSearcher</name> <name>searcher</name> <operator>=</operator> <operator>(</operator><name>IndexSearcher</name><operator>)</operator><call><name><name>context</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"searcher"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
     <decl_stmt><decl><type><specifier>final</specifier> <name>Similarity</name></type> <name>similarity</name> <init>= <expr><call><name><name>searcher</name><operator>.</operator><name>getSimilarity</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>byte</name><index>[]</index></name></type> <name>norms</name> <init>= <expr><call><name><name>reader</name><operator>.</operator><name>norms</name></name><argument_list>(<argument><expr><name>field</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>byte</name><index>[]</index></name></type> <name>norms</name> <init>= <expr><call><name><name>readerContext</name><operator>.</operator><name>reader</name><operator>.</operator><name>norms</name></name><argument_list>(<argument><expr><name>field</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <if_stmt><if>if <condition>(<expr><name>norms</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
       <return>return <expr><operator>new</operator> <call><name>ConstDoubleDocValues</name><argument_list>(<argument><expr><literal type="number">0.0</literal></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>NumDocsValueSource</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>NumDocsValueSource</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>c23d0968000</name><operator>..</operator><literal type="number">6b939d3b733</literal> <literal type="number">100755</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>NumDocsValueSource</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>NumDocsValueSource</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@
  <operator>*</operator><operator>/</operator></expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name></name>;</package>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>SolrIndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>ReaderUtil</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">33</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">33</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>NumDocsValueSource</name> extends <name>ValueSource</name> <block>{
   }</block>
 
   @<name>Override</name>
  <specifier>public</specifier> <name>DocValues</name> <call><name>getValues</name><argument_list>(<argument><expr><name>Map</name> <name>context</name></expr></argument>, <argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>public</specifier> <name>DocValues</name> <call><name>getValues</name><argument_list>(<argument><expr><name>Map</name> <name>context</name></expr></argument>, <argument><expr><name>AtomicReaderContext</name> <name>readerContext</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
     <comment type="line">// Searcher has no numdocs so we must use the reader instead</comment>
    <expr><name>SolrIndexReader</name> <name>topReader</name> <operator>=</operator> <operator>(</operator><name>SolrIndexReader</name><operator>)</operator><name>reader</name></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <while>while <condition>(<expr><call><name><name>topReader</name><operator>.</operator><name>getParent</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>topReader</name> <operator>=</operator> <call><name><name>topReader</name><operator>.</operator><name>getParent</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></while>
    <return>return <expr><operator>new</operator> <call><name>ConstIntDocValues</name><argument_list>(<argument><expr><call><name><name>topReader</name><operator>.</operator><name>numDocs</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</return>
    <return>return <expr><operator>new</operator> <call><name>ConstIntDocValues</name><argument_list>(<argument><expr><call><name><name>ReaderUtil</name><operator>.</operator><name>getTopLevelContext</name></name><argument_list>(<argument><expr><name>readerContext</name></expr></argument>)</argument_list></call><operator>.</operator><call><name><name>reader</name><operator>.</operator><name>numDocs</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</return>
   }</block></class>
 
   @<name>Override</name>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>OrdFieldSource</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>OrdFieldSource</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>d68185664cb</name><operator>..</operator><literal type="number">7c249571c48</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>OrdFieldSource</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>OrdFieldSource</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@</expr></return>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name></name>;</package>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>FieldCache</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>ReaderUtil</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>MutableValue</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>MutableValueInt</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>SolrIndexReader</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">56</literal></expr><operator>,</operator><expr><literal type="number">21</literal> <operator>+</operator><literal type="number">57</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>OrdFieldSource</name> extends <name>ValueSource</name> <block>{
   }</block>
 
 
  <specifier>public</specifier> <name>DocValues</name> <call><name>getValues</name><argument_list>(<argument><expr><name>Map</name> <name>context</name></expr></argument>, <argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><name>int</name> <name>offset</name> <operator>=</operator> <literal type="number">0</literal></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>IndexReader</name></type> <name>topReader</name> <init>= <expr><name>reader</name></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>topReader</name> <operator>instanceof</operator> <name>SolrIndexReader</name></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>SolrIndexReader</name></type> <name>r</name> <init>= <expr><operator>(</operator><name>SolrIndexReader</name><operator>)</operator><name>topReader</name></expr></init></decl>;</decl_stmt>
      <while>while <condition>(<expr><call><name><name>r</name><operator>.</operator><name>getParent</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>offset</name> <operator>+=</operator> <call><name><name>r</name><operator>.</operator><name>getBase</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>r</name> <operator>=</operator> <call><name><name>r</name><operator>.</operator><name>getParent</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></while>
      <expr_stmt><expr><name>topReader</name> <operator>=</operator> <name>r</name></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>int</name></type> <name>off</name> <init>= <expr><name>offset</name></expr></init></decl>;</decl_stmt>

  <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>AtomicReaderContext</name></type> <name>readerContext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><specifier>final</specifier> <name>int</name></type> <name>off</name> <init>= <expr><name><name>readerContext</name><operator>.</operator><name>docBase</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>IndexReader</name></type> <name>topReader</name> <init>= <expr><call><name><name>ReaderUtil</name><operator>.</operator><name>getTopLevelContext</name></name><argument_list>(<argument><expr><name>readerContext</name></expr></argument>)</argument_list></call><operator>.</operator><name>reader</name></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>final</specifier> <name><name>FieldCache</name><operator>.</operator><name>DocTermsIndex</name></name></type> <name>sindex</name> <init>= <expr><call><name><name>FieldCache</name><operator>.</operator><name>DEFAULT</name><operator>.</operator><name>getTermsIndex</name></name><argument_list>(<argument><expr><name>topReader</name></expr></argument>, <argument><expr><name>field</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

     <return>return <expr><operator>new</operator> <class><super><name>DocValues</name></super><argument_list>()</argument_list> <block>{
       <function><type><specifier>protected</specifier> <name>String</name></type> <name>toTerm</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>readableValue</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <return>return <expr><name>readableValue</name></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>QueryValueSource</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>QueryValueSource</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>b3b0c66b44d</name><operator>..</operator><name>f2407ab9b8c</name> <literal type="number">100755</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>QueryValueSource</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>QueryValueSource</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@</expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name></name>;</package>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>*</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>ReaderUtil</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>SolrException</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">44</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">46</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>QueryValueSource</name> extends <name>ValueSource</name> <block>{
   }</block>
 
   @<name>Override</name>
  <specifier>public</specifier> <name>DocValues</name> <call><name>getValues</name><argument_list>(<argument><expr><name>Map</name> <name>fcontext</name></expr></argument>, <argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr></expr_stmt>
    <return>return <expr><operator>new</operator> <call><name>QueryDocValues</name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><name>q</name></expr></argument>, <argument><expr><name>defVal</name></expr></argument>, <argument><expr><name>fcontext</name></expr></argument>)</argument_list></call></expr>;</return>
  <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>fcontext</name></decl></parameter>, <parameter><decl><type><name>AtomicReaderContext</name></type> <name>readerContext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <return>return <expr><operator>new</operator> <call><name>QueryDocValues</name><argument_list>(<argument><expr><name>readerContext</name></expr></argument>, <argument><expr><name>q</name></expr></argument>, <argument><expr><name>defVal</name></expr></argument>, <argument><expr><name>fcontext</name></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
 
   <function><type><specifier>public</specifier> <name>int</name></type> <name>hashCode</name><parameter_list>()</parameter_list> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">68</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">70</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>QueryValueSource</name> extends <name>ValueSource</name> <block>{
 
 <expr><name>class</name> <name>QueryDocValues</name> extends <name>DocValues</name> <block>{
   <expr><name>final</name> <name>Query</name> <name>q</name></expr>;
  <expr><name>final</name> <name>IndexReader</name> <name>reader</name></expr>;
<comment type="line">//  final IndexReader reader;</comment>
  <expr><name>final</name> <name>AtomicReaderContext</name> <name>readerContext</name></expr>;
   <expr><name>final</name> <name>Weight</name> <name>weight</name></expr>;
   <expr><name>final</name> <name>float</name> <name>defVal</name></expr>;
   <expr><name>final</name> <name>Map</name> <name>fcontext</name></expr>;
@@ <expr><operator>-</operator><literal type="number">79</literal></expr>,<expr><literal type="number">21</literal> <operator>+</operator><literal type="number">82</literal></expr>,<expr><literal type="number">28</literal> @@ <name>class</name> <name>QueryDocValues</name> extends <name>DocValues</name> <block>{
   <comment type="line">// the last document requested... start off with high value</comment>
   <comment type="line">// to trigger a scorer reset on first access.</comment>
   <expr><name>int</name> <name>lastDocRequested</name><operator>=</operator><name><name>Integer</name><operator>.</operator><name>MAX_VALUE</name></name></expr>;
  
 
  <expr><specifier>public</specifier> <call><name>QueryDocValues</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>, <argument><expr><name>Query</name> <name>q</name></expr></argument>, <argument><expr><name>float</name> <name>defVal</name></expr></argument>, <argument><expr><name>Map</name> <name>fcontext</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><name><name>this</name><operator>.</operator><name>reader</name></name> <operator>=</operator> <name>reader</name></expr></block></expr></argument></throws></expr>;
  <expr><specifier>public</specifier> <call><name>QueryDocValues</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>readerContext</name></expr></argument>, <argument><expr><name>Query</name> <name>q</name></expr></argument>, <argument><expr><name>float</name> <name>defVal</name></expr></argument>, <argument><expr><name>Map</name> <name>fcontext</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><name>IndexReader</name> <name>reader</name> <operator>=</operator> <name><name>readerContext</name><operator>.</operator><name>reader</name></name></expr></block></expr></argument></throws></expr>;
    <expr><name><name>this</name><operator>.</operator><name>readerContext</name></name> <operator>=</operator> <name>readerContext</name></expr>;
     <expr><name><name>this</name><operator>.</operator><name>q</name></name> <operator>=</operator> <name>q</name></expr>;
     <expr><name><name>this</name><operator>.</operator><name>defVal</name></name> <operator>=</operator> <name>defVal</name></expr>;
     <expr><name><name>this</name><operator>.</operator><name>fcontext</name></name> <operator>=</operator> <name>fcontext</name></expr>;
 
     <expr><name>Weight</name> <name>w</name> <operator>=</operator> <ternary><condition><expr><name>fcontext</name><operator>==</operator><literal type="null">null</literal></expr> ?</condition><then> <expr><literal type="null">null</literal></expr> </then><else>: <expr><operator>(</operator><name>Weight</name><operator>)</operator><call><name><name>fcontext</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>q</name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;
    <comment type="line">// TODO: sort by function doesn't weight (SOLR-1297 is open because of this bug)... so weightSearcher will currently be null</comment>
     <if_stmt><if>if <condition>(<expr><name>w</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
       <decl_stmt><decl><type><name>IndexSearcher</name></type> <name>weightSearcher</name> <init>= <expr><ternary><condition><expr><name>fcontext</name> <operator>==</operator> <literal type="null">null</literal></expr> ?</condition><then> <expr><operator>new</operator> <call><name>IndexSearcher</name><argument_list>(<argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr> </then><else>: <expr><operator>(</operator><name>IndexSearcher</name><operator>)</operator><call><name><name>fcontext</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"searcher"</literal></expr></argument>)</argument_list></call></expr></else></ternary></expr></init></decl>;</decl_stmt>

       <comment type="line">// TODO: sort by function doesn't weight (SOLR-1297 is open because of this bug)... so weightSearcher will currently be null</comment>
       <if_stmt><if>if <condition>(<expr><name>weightSearcher</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>weightSearcher</name> <operator>=</operator> <operator>new</operator> <call><name>IndexSearcher</name><argument_list>(<argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

       <expr_stmt><expr><name>w</name> <operator>=</operator> <call><name><name>q</name><operator>.</operator><name>weight</name></name><argument_list>(<argument><expr><name>weightSearcher</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>IndexSearcher</name></type> <name>weightSearcher</name></decl>;</decl_stmt>
      <if_stmt><if>if<condition>(<expr><name>fcontext</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>weightSearcher</name> <operator>=</operator> <operator>new</operator> <call><name>IndexSearcher</name><argument_list>(<argument><expr><call><name><name>ReaderUtil</name><operator>.</operator><name>getTopLevelContext</name></name><argument_list>(<argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt/></block_content></block></if></if_stmt></block_content></block></if></if_stmt>}</block></expr> <if_stmt><else>else <block>{<block_content>
        <expr_stmt><expr><name>weightSearcher</name> <operator>=</operator> <operator>(</operator><name>IndexSearcher</name><operator>)</operator><call><name><name>fcontext</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"searcher"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt><if>if <condition>(<expr><name>weightSearcher</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><name>weightSearcher</name> <operator>=</operator> <operator>new</operator> <call><name>IndexSearcher</name><argument_list>(<argument><expr><call><name><name>ReaderUtil</name><operator>.</operator><name>getTopLevelContext</name></name><argument_list>(<argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt/></block_content></block></if></if_stmt></block_content></block></else></if_stmt>}</block></expr>
      }</block>
      <name>w</name> <operator>=</operator> <call><name><name>q</name><operator>.</operator><name>weight</name></name><argument_list>(<argument><expr><name>weightSearcher</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></function>
     <expr_stmt><expr><name>weight</name> <operator>=</operator> <name>w</name></expr>;</expr_stmt>
   </block_content>}</block></function>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">101</literal></expr><operator>,</operator><expr><literal type="number">15</literal> <operator>+</operator><literal type="number">111</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <name>class</name> <name>QueryDocValues</name> extends <name>DocValues</name> <block>{
   <expr><specifier>public</specifier> <name>float</name> <call><name>floatVal</name><argument_list>(<argument><expr><name>int</name> <name>doc</name></expr></argument>)</argument_list></call> <block>{
     <try>try <block>{<block_content>
       <if_stmt><if>if <condition>(<expr><name>doc</name> <operator>&lt;</operator> <name>lastDocRequested</name></expr>)</condition> <block>{<block_content>
        <comment type="line">// out-of-order access.... reset scorer.</comment>
        <decl_stmt><decl><type><name><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name></type> <name>ctx</name> <init>= <expr><call><name><name>ValueSource</name><operator>.</operator><name>readerToContext</name></name><argument_list>(<argument><expr><name>fcontext</name></expr></argument>, <argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt><if>if <condition>(<expr><name>ctx</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
          <comment type="line">// TODO: this is because SOLR-1297 does not weight</comment>
          <expr_stmt><expr><name>ctx</name> <operator>=</operator> <operator>(</operator><name><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name><operator>)</operator><call><name><name>reader</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>  <comment type="line">// this is the incorrect context</comment>
        <expr_stmt/></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></try>}</block>

        <name>scorer</name> <operator>=</operator> <call><name><name>weight</name><operator>.</operator><name>scorer</name></name><argument_list>(<argument><expr><name>ctx</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;
        <expr><name>scorer</name> <operator>=</operator> <call><name><name>weight</name><operator>.</operator><name>scorer</name></name><argument_list>(<argument><expr><name>readerContext</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;
         <if_stmt><if>if <condition>(<expr><name>scorer</name><operator>==</operator><literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><name>defVal</name></expr>;</return></block_content></block></if></if_stmt>
         <name>scorerDoc</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></block></expr>;</expr_stmt>
       }</block></class>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>RangeMapFloatFunction</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>RangeMapFloatFunction</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">32544e5048f</literal><operator>..</operator><literal type="number">83bedeab8af</literal> <literal type="number">100755</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>RangeMapFloatFunction</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>RangeMapFloatFunction</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></return>
 
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name></name>;</package>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>IndexSearcher</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">50</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">50</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>RangeMapFloatFunction</name> extends <name>ValueSource</name> <block>{
     <return>return <expr><literal type="string">"map("</literal> <operator>+</operator> <call><name><name>source</name><operator>.</operator><name>description</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">","</literal> <operator>+</operator> <name>min</name> <operator>+</operator> <literal type="string">","</literal> <operator>+</operator> <name>max</name> <operator>+</operator> <literal type="string">","</literal> <operator>+</operator> <name>target</name> <operator>+</operator> <literal type="string">")"</literal></expr>;</return>
   }</block></expr></expr_stmt>
 
  <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><specifier>final</specifier> <name>DocValues</name></type> <name>vals</name> <init>=  <expr><call><name><name>source</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>AtomicReaderContext</name></type> <name>readerContext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><specifier>final</specifier> <name>DocValues</name></type> <name>vals</name> <init>=  <expr><call><name><name>source</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <return>return <expr><operator>new</operator> <class><super><name>DocValues</name></super><argument_list>()</argument_list> <block>{
       <function><type><specifier>public</specifier> <name>float</name></type> <name>floatVal</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <decl_stmt><decl><type><name>float</name></type> <name>val</name> <init>= <expr><call><name><name>vals</name><operator>.</operator><name>floatVal</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ReciprocalFloatFunction</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ReciprocalFloatFunction</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>fcfa8324c22</name><operator>..</operator><literal type="number">99627759db8</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ReciprocalFloatFunction</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ReciprocalFloatFunction</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt>
 
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name></name>;</package>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>IndexSearcher</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">57</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">57</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>ReciprocalFloatFunction</name> extends <name>ValueSource</name> <block>{
     <expr><name><name>this</name><operator>.</operator><name>b</name></name><operator>=</operator><name>b</name></expr>;
   }</block>
 
  <specifier>public</specifier> <name>DocValues</name> <call><name>getValues</name><argument_list>(<argument><expr><name>Map</name> <name>context</name></expr></argument>, <argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><name>final</name> <name>DocValues</name> <name>vals</name> <operator>=</operator> <call><name><name>source</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
  <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>AtomicReaderContext</name></type> <name>readerContext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><specifier>final</specifier> <name>DocValues</name></type> <name>vals</name> <init>= <expr><call><name><name>source</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <return>return <expr><operator>new</operator> <class><super><name>DocValues</name></super><argument_list>()</argument_list> <block>{
       <function><type><specifier>public</specifier> <name>float</name></type> <name>floatVal</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <return>return <expr><name>a</name><operator>/</operator><operator>(</operator><name>m</name><operator>*</operator><call><name><name>vals</name><operator>.</operator><name>floatVal</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>b</name><operator>)</operator></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ReverseOrdFieldSource</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ReverseOrdFieldSource</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">455fc3ab0f8</literal><operator>..</operator><literal type="number">639bdbba72b</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ReverseOrdFieldSource</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ReverseOrdFieldSource</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@</expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name></name>;</package>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>FieldCache</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>SolrIndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>ReaderUtil</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">56</literal></expr><operator>,</operator><expr><literal type="number">18</literal> <operator>+</operator><literal type="number">57</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>ReverseOrdFieldSource</name> extends <name>ValueSource</name> <block>{
     <return>return <expr><literal type="string">"rord("</literal><operator>+</operator><name>field</name><operator>+</operator><literal type="char">')'</literal></expr>;</return>
   }</block></expr></expr_stmt>
 
  <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>int</name></type> <name>offset</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>IndexReader</name></type> <name>topReader</name> <init>= <expr><name>reader</name></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>topReader</name> <operator>instanceof</operator> <name>SolrIndexReader</name></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>SolrIndexReader</name></type> <name>r</name> <init>= <expr><operator>(</operator><name>SolrIndexReader</name><operator>)</operator><name>topReader</name></expr></init></decl>;</decl_stmt>
      <while>while <condition>(<expr><call><name><name>r</name><operator>.</operator><name>getParent</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>offset</name> <operator>+=</operator> <call><name><name>r</name><operator>.</operator><name>getBase</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>r</name> <operator>=</operator> <call><name><name>r</name><operator>.</operator><name>getParent</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></while>
      <expr_stmt><expr><name>topReader</name> <operator>=</operator> <name>r</name></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>int</name></type> <name>off</name> <init>= <expr><name>offset</name></expr></init></decl>;</decl_stmt>
  <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>AtomicReaderContext</name></type> <name>readerContext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><specifier>final</specifier> <name>IndexReader</name></type> <name>topReader</name> <init>= <expr><call><name><name>ReaderUtil</name><operator>.</operator><name>getTopLevelContext</name></name><argument_list>(<argument><expr><name>readerContext</name></expr></argument>)</argument_list></call><operator>.</operator><name>reader</name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>int</name></type> <name>off</name> <init>= <expr><name><name>readerContext</name><operator>.</operator><name>docBase</name></name></expr></init></decl>;</decl_stmt>
 
     <decl_stmt><decl><type><specifier>final</specifier> <name><name>FieldCache</name><operator>.</operator><name>DocTermsIndex</name></name></type> <name>sindex</name> <init>= <expr><call><name><name>FieldCache</name><operator>.</operator><name>DEFAULT</name><operator>.</operator><name>getTermsIndex</name></name><argument_list>(<argument><expr><name>topReader</name></expr></argument>, <argument><expr><name>field</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>final</specifier> <name>int</name></type> <name>end</name> <init>= <expr><call><name><name>sindex</name><operator>.</operator><name>numOrd</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ScaleFloatFunction</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ScaleFloatFunction</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>da746d6a2a0</name><operator>..</operator><literal type="number">40e3192325c</literal> <literal type="number">100755</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ScaleFloatFunction</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ScaleFloatFunction</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt>
 
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name></name>;</package>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>IndexSearcher</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>ReaderUtil</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">56</literal></expr><operator>,</operator><expr><literal type="number">17</literal> <operator>+</operator><literal type="number">55</literal></expr><operator>,</operator><expr><literal type="number">15</literal> @@ <specifier>public</specifier> <name>class</name> <name>ScaleFloatFunction</name> extends <name>ValueSource</name> <block>{
     <expr><name>float</name> <name>maxVal</name></expr>;
   }</block>
 
  <specifier>private</specifier> <name>ScaleInfo</name> <call><name>createScaleInfo</name><argument_list>(<argument><expr><name>Map</name> <name>context</name></expr></argument>, <argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><name><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name> <name>ctx</name> <operator>=</operator> <call><name><name>ValueSource</name><operator>.</operator><name>readerToContext</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <while>while <condition>(<expr><name><name>ctx</name><operator>.</operator><name>parent</name></name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>ctx</name> <operator>=</operator> <name><name>ctx</name><operator>.</operator><name>parent</name></name></expr>;</expr_stmt></block_content></block></while>
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>AtomicReaderContext</name><index>[]</index></name></type> <name>leaves</name> <init>= <expr><call><name><name>ReaderUtil</name><operator>.</operator><name>leaves</name></name><argument_list>(<argument><expr><name>ctx</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <function><type><specifier>private</specifier> <name>ScaleInfo</name></type> <name>createScaleInfo</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>AtomicReaderContext</name></type> <name>readerContext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>AtomicReaderContext</name><index>[]</index></name></type> <name>leaves</name> <init>= <expr><call><name><name>ReaderUtil</name><operator>.</operator><name>leaves</name></name><argument_list>(<argument><expr><call><name><name>ReaderUtil</name><operator>.</operator><name>getTopLevelContext</name></name><argument_list>(<argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <decl_stmt><decl><type><name>float</name></type> <name>minVal</name> <init>= <expr><name><name>Float</name><operator>.</operator><name>POSITIVE_INFINITY</name></name></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>float</name></type> <name>maxVal</name> <init>= <expr><name><name>Float</name><operator>.</operator><name>NEGATIVE_INFINITY</name></name></expr></init></decl>;</decl_stmt>
 
     <for>for <control>(<init><decl><type><name>AtomicReaderContext</name></type> <name>leaf</name> <range>: <expr><name>leaves</name></expr></range></decl></init>)</control> <block>{<block_content>
       <decl_stmt><decl><type><name>int</name></type> <name>maxDoc</name> <init>= <expr><call><name><name>leaf</name><operator>.</operator><name>reader</name><operator>.</operator><name>maxDoc</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>DocValues</name></type> <name>vals</name> <init>=  <expr><call><name><name>source</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name><name>leaf</name><operator>.</operator><name>reader</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>DocValues</name></type> <name>vals</name> <init>=  <expr><call><name><name>source</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>leaf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name>maxDoc</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
 
       <decl_stmt><decl><type><name>float</name></type> <name>val</name> <init>= <expr><call><name><name>vals</name><operator>.</operator><name>floatVal</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">96</literal></expr><operator>,</operator><expr><literal type="number">18</literal> <operator>+</operator><literal type="number">93</literal></expr><operator>,</operator><expr><literal type="number">18</literal> @@ <specifier>public</specifier> <name>class</name> <name>ScaleFloatFunction</name> extends <name>ValueSource</name> <block>{
     <return>return <expr><name>scaleInfo</name></expr>;</return>
   }</block></expr></expr_stmt>
 
  <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
  <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>AtomicReaderContext</name></type> <name>readerContext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
 
     <decl_stmt><decl><type><name>ScaleInfo</name></type> <name>scaleInfo</name> <init>= <expr><operator>(</operator><name>ScaleInfo</name><operator>)</operator><call><name><name>context</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>source</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <if_stmt><if>if <condition>(<expr><name>scaleInfo</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>scaleInfo</name> <operator>=</operator> <call><name>createScaleInfo</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>scaleInfo</name> <operator>=</operator> <call><name>createScaleInfo</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></if></if_stmt>
 
     <decl_stmt><decl><type><specifier>final</specifier> <name>float</name></type> <name>scale</name> <init>= <expr><ternary><condition><expr><operator>(</operator><name><name>scaleInfo</name><operator>.</operator><name>maxVal</name></name><operator>-</operator><name><name>scaleInfo</name><operator>.</operator><name>minVal</name></name><operator>==</operator><literal type="number">0</literal><operator>)</operator></expr> ?</condition><then> <expr><literal type="number">0</literal></expr> </then><else>: <expr><operator>(</operator><name>max</name><operator>-</operator><name>min</name><operator>)</operator><operator>/</operator><operator>(</operator><name><name>scaleInfo</name><operator>.</operator><name>maxVal</name></name><operator>-</operator><name><name>scaleInfo</name><operator>.</operator><name>minVal</name></name><operator>)</operator></expr></else></ternary></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>final</specifier> <name>float</name></type> <name>minSource</name> <init>= <expr><name><name>scaleInfo</name><operator>.</operator><name>minVal</name></name></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>final</specifier> <name>float</name></type> <name>maxSource</name> <init>= <expr><name><name>scaleInfo</name><operator>.</operator><name>maxVal</name></name></expr></init></decl>;</decl_stmt>
 
    <decl_stmt><decl><type><specifier>final</specifier> <name>DocValues</name></type> <name>vals</name> <init>=  <expr><call><name><name>source</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>DocValues</name></type> <name>vals</name> <init>=  <expr><call><name><name>source</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <return>return <expr><operator>new</operator> <class><super><name>DocValues</name></super><argument_list>()</argument_list> <block>{
       <function><type><specifier>public</specifier> <name>float</name></type> <name>floatVal</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ShortFieldSource</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ShortFieldSource</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>cb146d84dcb</name><operator>..</operator><name>fb4e41b5562</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ShortFieldSource</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ShortFieldSource</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name></name>;</package>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>cache</name><operator>.</operator><name>ShortValuesCreator</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>cache</name><operator>.</operator><name>CachedArray</name><operator>.</operator><name>ShortValues</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">39</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">39</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>ShortFieldSource</name> extends <name><name>NumericFieldCacheSource</name><argument_list type="generic">&lt;<argument><name>ShortValues</name></argument>&gt;</argument_list></name> <block>{
     <return>return <expr><literal type="string">"short("</literal> <operator>+</operator> <name>field</name> <operator>+</operator> <literal type="char">')'</literal></expr>;</return>
   }</block></expr></expr_stmt>
 
  <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><specifier>final</specifier> <name>ShortValues</name></type> <name>vals</name> <init>= <expr><call><name><name>cache</name><operator>.</operator><name>getShorts</name></name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><name>field</name></expr></argument>, <argument><expr><name>creator</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>AtomicReaderContext</name></type> <name>readerContext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><specifier>final</specifier> <name>ShortValues</name></type> <name>vals</name> <init>= <expr><call><name><name>cache</name><operator>.</operator><name>getShorts</name></name><argument_list>(<argument><expr><name><name>readerContext</name><operator>.</operator><name>reader</name></name></expr></argument>, <argument><expr><name>field</name></expr></argument>, <argument><expr><name>creator</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>final</specifier> <name><name>short</name><index>[]</index></name></type> <name>arr</name> <init>= <expr><name><name>vals</name><operator>.</operator><name>values</name></name></expr></init></decl>;</decl_stmt>
     
     <return>return <expr><operator>new</operator> <class><super><name>DocValues</name></super><argument_list>()</argument_list> <block>{
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>SimpleFloatFunction</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>SimpleFloatFunction</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">4e82f005310</literal><operator>..</operator><name>e4079ac2dbd</name> <literal type="number">100755</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>SimpleFloatFunction</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>SimpleFloatFunction</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt>
 
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name></name>;</package>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">32</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">32</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
   <decl_stmt><decl><type><specifier>protected</specifier> <specifier>abstract</specifier> <name>float</name></type> <name>func</name><argument_list>(<argument><expr><name>int</name> <name>doc</name></expr></argument>, <argument><expr><name>DocValues</name> <name>vals</name></expr></argument>)</argument_list></decl>;</decl_stmt>
 
   <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><specifier>final</specifier> <name>DocValues</name></type> <name>vals</name> <init>=  <expr><call><name><name>source</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>AtomicReaderContext</name></type> <name>readerContext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><specifier>final</specifier> <name>DocValues</name></type> <name>vals</name> <init>=  <expr><call><name><name>source</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <return>return <expr><operator>new</operator> <class><super><name>DocValues</name></super><argument_list>()</argument_list> <block>{
       <function><type><specifier>public</specifier> <name>float</name></type> <name>floatVal</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <block>{<block_content>
 	<return>return <expr><call><name>func</name><argument_list>(<argument><expr><name>doc</name></expr></argument>, <argument><expr><name>vals</name></expr></argument>)</argument_list></call></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>StringIndexDocValues</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>StringIndexDocValues</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">66e88419a38</literal><operator>..</operator><name>f533a7319fc</name> <literal type="number">100755</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>StringIndexDocValues</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>StringIndexDocValues</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name></name>;</package>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>FieldCache</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>BytesRef</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>MutableValue</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>MutableValueStr</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">33</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">34</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>StringIndexDocValues</name> extends <name>DocValues</name> <block>{
     <expr><specifier>protected</specifier> <name>final</name> <name>ValueSource</name> <name>vs</name></expr>;
     <expr><specifier>protected</specifier> <name>final</name> <name>MutableValueStr</name> <name>val</name> <operator>=</operator> <operator>new</operator> <call><name>MutableValueStr</name><argument_list>()</argument_list></call></expr>;
 
    <expr><specifier>public</specifier> <call><name>StringIndexDocValues</name><argument_list>(<argument><expr><name>ValueSource</name> <name>vs</name></expr></argument>, <argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>, <argument><expr><name>String</name> <name>field</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><specifier>public</specifier> <call><name>StringIndexDocValues</name><argument_list>(<argument><expr><name>ValueSource</name> <name>vs</name></expr></argument>, <argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>String</name> <name>field</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr>
       <try>try <block>{<block_content>
        <expr_stmt><expr><name>termsIndex</name> <operator>=</operator> <call><name><name>FieldCache</name><operator>.</operator><name>DEFAULT</name><operator>.</operator><name>getTermsIndex</name></name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><name>field</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>termsIndex</name> <operator>=</operator> <call><name><name>FieldCache</name><operator>.</operator><name>DEFAULT</name><operator>.</operator><name>getTermsIndex</name></name><argument_list>(<argument><expr><name><name>context</name><operator>.</operator><name>reader</name></name></expr></argument>, <argument><expr><name>field</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt/></block_content></block></try>}</block></expr></expr_stmt> <catch>catch <parameter_list>(<parameter><decl><type><name>RuntimeException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <throw>throw <expr><operator>new</operator> <call><name>StringIndexException</name><argument_list>(<argument><expr><name>field</name></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
       </block_content>}</block></catch>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>TFValueSource</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>TFValueSource</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>fa82de53a25</name><operator>..</operator><name>cffb2264c59</name> <literal type="number">100755</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>TFValueSource</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>TFValueSource</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name></name>;</package>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>*</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>DocIdSetIterator</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>IndexSearcher</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Similarity</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">22</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>TFValueSource</name> extends <name>TermFreqValueSource</name> <block>{
   }</block>
 
   @<name>Override</name>
  <specifier>public</specifier> <name>DocValues</name> <call><name>getValues</name><argument_list>(<argument><expr><name>Map</name> <name>context</name></expr></argument>, <argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <comment type="line">// use MultiFields, just in case someone did a top() function</comment>
    <expr><name>Fields</name> <name>fields</name> <operator>=</operator> <call><name><name>MultiFields</name><operator>.</operator><name>getFields</name></name><argument_list>(<argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
  <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>AtomicReaderContext</name></type> <name>readerContext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>Fields</name></type> <name>fields</name> <init>= <expr><call><name><name>readerContext</name><operator>.</operator><name>reader</name><operator>.</operator><name>fields</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>final</specifier> <name>Terms</name></type> <name>terms</name> <init>= <expr><call><name><name>fields</name><operator>.</operator><name>terms</name></name><argument_list>(<argument><expr><name>field</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>final</specifier> <name>Similarity</name></type> <name>similarity</name> <init>= <expr><operator>(</operator><operator>(</operator><name>IndexSearcher</name><operator>)</operator><call><name><name>context</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"searcher"</literal></expr></argument>)</argument_list></call><operator>)</operator><operator>.</operator><call><name>getSimilarity</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>TermFreqValueSource</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>TermFreqValueSource</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>a5603fd451b</name><operator>..</operator><literal type="number">5f8e1432ce0</literal> <literal type="number">100755</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>TermFreqValueSource</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>TermFreqValueSource</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name></name>;</package>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>*</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>DocIdSetIterator</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>BytesRef</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>SolrException</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">36</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">37</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>TermFreqValueSource</name> extends <name>DocFreqValueSource</name> <block>{
   }</block>
 
   @<name>Override</name>
  <specifier>public</specifier> <name>DocValues</name> <call><name>getValues</name><argument_list>(<argument><expr><name>Map</name> <name>context</name></expr></argument>, <argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <comment type="line">// use MultiFields, just in case someone did a top() function</comment>
    <expr><name>Fields</name> <name>fields</name> <operator>=</operator> <call><name><name>MultiFields</name><operator>.</operator><name>getFields</name></name><argument_list>(<argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
  <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>AtomicReaderContext</name></type> <name>readerContext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>Fields</name></type> <name>fields</name> <init>= <expr><call><name><name>readerContext</name><operator>.</operator><name>reader</name><operator>.</operator><name>fields</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>final</specifier> <name>Terms</name></type> <name>terms</name> <init>= <expr><call><name><name>fields</name><operator>.</operator><name>terms</name></name><argument_list>(<argument><expr><name>field</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <return>return <expr><operator>new</operator> <class><super><name>IntDocValues</name></super><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list> <block>{
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ValueSource</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ValueSource</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">9c1ac9724c3</literal><operator>..</operator><name>e43ef276f1d</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ValueSource</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ValueSource</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name></name>;</package>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>FieldComparator</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>FieldComparatorSource</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Scorer</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">47</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">46</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>ValueSource</name> implements <name>Serializable</name> <block>{
    <expr><operator>*</operator> <name>Gets</name> <name>the</name> <name>values</name></expr> <for>for this reader and the context that was previously
    * passed to createWeight<control>(<init><expr/></init>)</control><block type="pseudo"><block_content>
    <expr_stmt><expr><operator>*</operator><operator>/</operator>
  <specifier>public</specifier> <specifier>abstract</specifier> <name>DocValues</name> <call><name>getValues</name><argument_list>(<argument><expr><name>Map</name> <name>context</name></expr></argument>, <argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws></expr>;</expr_stmt></block_content></block></for>
  <specifier>public</specifier> <specifier>abstract</specifier> <name>DocValues</name> <call><name>getValues</name><argument_list>(<argument><expr><name>Map</name> <name>context</name></expr></argument>, <argument><expr><name>AtomicReaderContext</name> <name>readerContext</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws></block></expr>;</expr_stmt>
 
   <decl_stmt><decl><type><specifier>public</specifier> <specifier>abstract</specifier> <name>boolean</name></type> <name>equals</name><argument_list>(<argument><expr><name>Object</name> <name>o</name></expr></argument>)</argument_list></decl>;</decl_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">66</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">65</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>ValueSource</name> implements <name>Serializable</name> <block>{
    <expr><operator>*</operator> <name>EXPERIMENTAL</name><operator>:</operator> <name>This</name> <name>method</name> <name>is</name> <name>subject</name> <name>to</name> <name><name>change</name><operator>.</operator></name>
    * <operator>&lt;</operator><name>br</name><operator>&gt;</operator><name>WARNING</name><operator>:</operator> <name>Sorted</name> <name>function</name> <name>queries</name> <name>are</name> <name>not</name> <name>currently</name> <name><name>weighted</name><operator>.</operator></name>
    * <operator>&lt;</operator><name>p</name><operator>&gt;</operator>
   <operator>*</operator> <name>Get</name> <name>the</name> <name>SortField</name></expr> <for>for this ValueSource.  Uses the <block>{<block_content><annotation>@<name>link</name></annotation> <expr_stmt><expr><operator>#</operator><call><name>getValues</name><argument_list>(<argument><expr><name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name></expr></argument>, <argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name></expr></argument>)</argument_list></call></expr></expr_stmt></block_content></block></for>}</block>
   <operator>*</operator> <name>Get</name> <name>the</name> <name>SortField</name></expr></expr_stmt> <for>for this ValueSource.  Uses the <block>{<block_content><annotation>@<name>link</name></annotation> <expr><operator>#</operator><call><name>getValues</name><argument_list>(<argument><expr><name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name></expr></argument>, <argument><expr><name>AtomicReaderContext</name></expr></argument>)</argument_list></call></expr></block_content>}</block></for>
    <expr_stmt><expr><operator>*</operator> <name>to</name> <name>populate</name> <name>the</name> <name><name>SortField</name><operator>.</operator></name>
    * 
    <operator>*</operator> @<name>param</name> <name>reverse</name> <literal type="boolean">true</literal></expr></expr_stmt> <if_stmt><if>if this is a reverse sort.
@@ -98<operator>,</operator><expr_stmt><expr><literal type="number">40</literal> <operator>+</operator><literal type="number">97</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>ValueSource</name> implements <name>Serializable</name> <block>{
     <return>return <expr><name>context</name></expr>;</return>
   }</block></expr></expr_stmt></if></if_stmt>
 
  <comment type="block">/* @lucene.internal
   * This will most likely go away in the future.
   */</comment>
  <function><type><specifier>public</specifier> <specifier>static</specifier> <name>AtomicReaderContext</name></type> <name>readerToContext</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>fcontext</name></decl></parameter>, <parameter><decl><type><name>IndexReader</name></type> <name>reader</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>Object</name></type> <name>v</name> <init>= <expr><call><name><name>fcontext</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>v</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>IndexSearcher</name></type> <name>searcher</name> <init>= <expr><operator>(</operator><name>IndexSearcher</name><operator>)</operator><call><name><name>fcontext</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"searcher"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>searcher</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <return>return <expr><literal type="null">null</literal></expr>;</return>
        <comment type="line">// TODO</comment>
        <comment type="line">// throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, "no searcher found in function context");</comment>
      </block_content>}</block></if></if_stmt>
      <decl_stmt><decl><type><name>ReaderContext</name></type> <name>rcontext</name> <init>= <expr><call><name><name>searcher</name><operator>.</operator><name>getIndexReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTopReaderContext</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name><name>rcontext</name><operator>.</operator><name>isAtomic</name></name></expr>)</condition> <block>{<block_content>
        <assert>assert <expr><name><name>rcontext</name><operator>.</operator><name>reader</name></name> <operator>==</operator> <name>reader</name></expr>;</assert>
        <expr_stmt><expr><call><name><name>fcontext</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name><name>rcontext</name><operator>.</operator><name>reader</name></name></expr></argument>, <argument><expr><operator>(</operator><name>AtomicReaderContext</name><operator>)</operator><name>rcontext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if> <else>else <block>{<block_content>
        <for>for <control>(<init><decl><type><name>AtomicReaderContext</name></type> <name>subCtx</name> <range>: <expr><call><name><name>rcontext</name><operator>.</operator><name>leaves</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
          <expr_stmt><expr><call><name><name>fcontext</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name><name>subCtx</name><operator>.</operator><name>reader</name></name></expr></argument>, <argument><expr><name>subCtx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
      </block_content>}</block></else></if_stmt>

      <expr_stmt><expr><name>v</name> <operator>=</operator> <call><name><name>fcontext</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <if_stmt><if>if <condition>(<expr><name>v</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <return>return <expr><literal type="null">null</literal></expr>;</return>
        <comment type="line">// TODO</comment>
        <comment type="line">// throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, "reader " + reader + " is not from the top reader " + searcher.getIndexReader());</comment>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block></if></if_stmt>

    <return>return <expr><operator>(</operator><name>AtomicReaderContext</name><operator>)</operator><name>v</name></expr>;</return>
  </block_content>}</block></function>


   <class>class <name>ValueSourceComparatorSource</name> <super_list><extends>extends <super><name>FieldComparatorSource</name></super></extends></super_list> <block>{
 
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">188</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">153</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>ValueSource</name> implements <name>Serializable</name> <block>{
     }</block>
 
     <specifier>public</specifier> <name>FieldComparator</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
      <expr><name>docVals</name> <operator>=</operator> <call><name>getValues</name><argument_list>(<argument><expr><call><name><name>Collections</name><operator>.</operator><name>emptyMap</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>context</name><operator>.</operator><name>reader</name></name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
      <expr_stmt><expr><name>docVals</name> <operator>=</operator> <call><name>getValues</name><argument_list>(<argument><expr><call><name><name>Collections</name><operator>.</operator><name>emptyMap</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <return>return <expr><name>this</name></expr>;</return>
     }</block></class>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ValueSourceRangeFilter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ValueSourceRangeFilter</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">8813736a849</literal><operator>..</operator><literal type="number">151b3878111</literal> <literal type="number">100755</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ValueSourceRangeFilter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ValueSourceRangeFilter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name></name>;</package>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>DocIdSet</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>DocIdSetIterator</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>IndexSearcher</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>SolrFilter</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">49</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">49</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>ValueSourceRangeFilter</name> extends <name>SolrFilter</name> <block>{
     <expr><name><name>this</name><operator>.</operator><name>includeUpper</name></name> <operator>=</operator> <name>upperVal</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <name>includeUpper</name></expr>;
   }</block>
 
  <specifier>public</specifier> <name>DocIdSet</name> <call><name>getDocIdSet</name><argument_list>(<argument><expr><name>final</name> <name>Map</name> <name>context</name></expr></argument>, <argument><expr><name>final</name> <name>ReaderContext</name> <name>readerContext</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>public</specifier> <name>DocIdSet</name> <call><name>getDocIdSet</name><argument_list>(<argument><expr><name>final</name> <name>Map</name> <name>context</name></expr></argument>, <argument><expr><name>final</name> <name>AtomicReaderContext</name> <name>readerContext</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr></expr_stmt>
      <return>return <expr><operator>new</operator> <class><super><name>DocIdSet</name></super><argument_list>()</argument_list> <block>{
        <function><type><specifier>public</specifier> <name>DocIdSetIterator</name></type> <name>iterator</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
         <return>return <expr><call><name><name>valueSource</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name><name>readerContext</name><operator>.</operator><name>reader</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getRangeScorer</name><argument_list>(<argument><expr><name><name>readerContext</name><operator>.</operator><name>reader</name></name></expr></argument>, <argument><expr><name>lowerVal</name></expr></argument>, <argument><expr><name>upperVal</name></expr></argument>, <argument><expr><name>includeLower</name></expr></argument>, <argument><expr><name>includeUpper</name></expr></argument>)</argument_list></call></expr>;</return>
         <return>return <expr><call><name><name>valueSource</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>readerContext</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getRangeScorer</name><argument_list>(<argument><expr><name><name>readerContext</name><operator>.</operator><name>reader</name></name></expr></argument>, <argument><expr><name>lowerVal</name></expr></argument>, <argument><expr><name>upperVal</name></expr></argument>, <argument><expr><name>includeLower</name></expr></argument>, <argument><expr><name>includeUpper</name></expr></argument>)</argument_list></call></expr>;</return>
        </block_content>}</block></function>
      }</block></class></expr>;</return>
   }</block></class>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>VectorValueSource</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>VectorValueSource</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">5947df8041e</literal><operator>..</operator><literal type="number">523e54670a3</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>VectorValueSource</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>VectorValueSource</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></return> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>IndexSearcher</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name><operator>.</operator><name>MultiValueSource</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name><operator>.</operator><name>DocValues</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">53</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">53</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>VectorValueSource</name> extends <name>MultiValueSource</name> <block>{
   }</block>
 
   @<name>Override</name>
  <specifier>public</specifier> <name>DocValues</name> <call><name>getValues</name><argument_list>(<argument><expr><name>Map</name> <name>context</name></expr></argument>, <argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>public</specifier> <name>DocValues</name> <call><name>getValues</name><argument_list>(<argument><expr><name>Map</name> <name>context</name></expr></argument>, <argument><expr><name>AtomicReaderContext</name> <name>readerContext</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><name>int</name> <name>size</name> <operator>=</operator> <call><name><name>sources</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
 
     <comment type="line">// special-case x,y and lat,lon since it's so common</comment>
     <if_stmt><if>if <condition>(<expr><name>size</name><operator>==</operator><literal type="number">2</literal></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><specifier>final</specifier> <name>DocValues</name></type> <name>x</name> <init>= <expr><call><name><name>sources</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getValues</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><specifier>final</specifier> <name>DocValues</name></type> <name>y</name> <init>= <expr><call><name><name>sources</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getValues</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><specifier>final</specifier> <name>DocValues</name></type> <name>x</name> <init>= <expr><call><name><name>sources</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getValues</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><specifier>final</specifier> <name>DocValues</name></type> <name>y</name> <init>= <expr><call><name><name>sources</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getValues</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <return>return <expr><operator>new</operator> <class><super><name>DocValues</name></super><argument_list>()</argument_list> <block>{
         <function><annotation>@<name>Override</name></annotation>
         <type><specifier>public</specifier> <name>void</name></type> <name>byteVal</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>, <parameter><decl><type><name><name>byte</name><index>[]</index></name></type> <name>vals</name></decl></parameter>)</parameter_list> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">106</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">106</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>VectorValueSource</name> extends <name>MultiValueSource</name> <block>{
 
     <expr><name>final</name> <name><name>DocValues</name><index>[]</index></name> <name>valsArr</name> <operator>=</operator> <operator>new</operator> <name><name>DocValues</name><index>[<expr><name>size</name></expr>]</index></name></expr>;</block></expr></expr_stmt>
     <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>size</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
      <expr_stmt><expr><name><name>valsArr</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name><name>sources</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getValues</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>valsArr</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name><name>sources</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getValues</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></for>
 
     <return>return <expr><operator>new</operator> <class><super><name>DocValues</name></super><argument_list>()</argument_list> <block>{
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name>distance</name><operator>/</operator><name><name>GeohashFunction</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name>distance</name><operator>/</operator><name><name>GeohashFunction</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">6102356b662</literal><operator>..</operator><name>df146f7cb72</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name>distance</name><operator>/</operator><name><name>GeohashFunction</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name>distance</name><operator>/</operator><name><name>GeohashFunction</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name><operator>.</operator><name>distance</name></name>;</package>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name><operator>.</operator><name>ValueSource</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name><operator>.</operator><name>DocValues</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>spatial</name><operator>.</operator><name>geohash</name><operator>.</operator><name>GeoHashUtils</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">46</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">46</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>GeohashFunction</name> extends <name>ValueSource</name> <block>{
   }</block>
 
   @<name>Override</name>
  <specifier>public</specifier> <name>DocValues</name> <call><name>getValues</name><argument_list>(<argument><expr><name>Map</name> <name>context</name></expr></argument>, <argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><name>final</name> <name>DocValues</name> <name>latDV</name> <operator>=</operator> <call><name><name>lat</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>DocValues</name></type> <name>lonDV</name> <init>= <expr><call><name><name>lon</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>AtomicReaderContext</name></type> <name>readerContext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><specifier>final</specifier> <name>DocValues</name></type> <name>latDV</name> <init>= <expr><call><name><name>lat</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>DocValues</name></type> <name>lonDV</name> <init>= <expr><call><name><name>lon</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
 
     <return>return <expr><operator>new</operator> <class><super><name>DocValues</name></super><argument_list>()</argument_list> <block>{
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name>distance</name><operator>/</operator><name><name>GeohashHaversineFunction</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name>distance</name><operator>/</operator><name><name>GeohashHaversineFunction</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>cdcc182d13f</name><operator>..</operator><literal type="number">728b528e578</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name>distance</name><operator>/</operator><name><name>GeohashHaversineFunction</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name>distance</name><operator>/</operator><name><name>GeohashHaversineFunction</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name><operator>.</operator><name>distance</name></name>;</package>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>spatial</name><operator>.</operator><name>DistanceUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name><operator>.</operator><name>ValueSource</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name><operator>.</operator><name>DocValues</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>IndexSearcher</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>spatial</name><operator>.</operator><name>geohash</name><operator>.</operator><name>GeoHashUtils</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">54</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">54</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>GeohashHaversineFunction</name> extends <name>ValueSource</name> <block>{
   }</block>
 
   @<name>Override</name>
  <specifier>public</specifier> <name>DocValues</name> <call><name>getValues</name><argument_list>(<argument><expr><name>Map</name> <name>context</name></expr></argument>, <argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><name>final</name> <name>DocValues</name> <name>gh1DV</name> <operator>=</operator> <call><name><name>geoHash1</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>DocValues</name></type> <name>gh2DV</name> <init>= <expr><call><name><name>geoHash2</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>AtomicReaderContext</name></type> <name>readerContext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><specifier>final</specifier> <name>DocValues</name></type> <name>gh1DV</name> <init>= <expr><call><name><name>geoHash1</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>DocValues</name></type> <name>gh2DV</name> <init>= <expr><call><name><name>geoHash2</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <return>return <expr><operator>new</operator> <class><super><name>DocValues</name></super><argument_list>()</argument_list> <block>{
       <function><type><specifier>public</specifier> <name>float</name></type> <name>floatVal</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name>distance</name><operator>/</operator><name><name>HaversineConstFunction</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name>distance</name><operator>/</operator><name><name>HaversineConstFunction</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>b1796b2646a</name><operator>..</operator><literal type="number">8ee45f57064</literal> <literal type="number">100755</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name>distance</name><operator>/</operator><name><name>HaversineConstFunction</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name>distance</name><operator>/</operator><name><name>HaversineConstFunction</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name><operator>.</operator><name>distance</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>queryParser</name><operator>.</operator><name>ParseException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>IndexSearcher</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>spatial</name><operator>.</operator><name>DistanceUtils</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">190</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">190</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>HaversineConstFunction</name> extends <name>ValueSource</name> <block>{
   }</block>
 
   @<name>Override</name>
  <specifier>public</specifier> <name>DocValues</name> <call><name>getValues</name><argument_list>(<argument><expr><name>Map</name> <name>context</name></expr></argument>, <argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><name>final</name> <name>DocValues</name> <name>latVals</name> <operator>=</operator> <call><name><name>latSource</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>DocValues</name></type> <name>lonVals</name> <init>= <expr><call><name><name>lonSource</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>AtomicReaderContext</name></type> <name>readerContext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><specifier>final</specifier> <name>DocValues</name></type> <name>latVals</name> <init>= <expr><call><name><name>latSource</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>DocValues</name></type> <name>lonVals</name> <init>= <expr><call><name><name>lonSource</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>final</specifier> <name>double</name></type> <name>latCenterRad</name> <init>= <expr><name><name>this</name><operator>.</operator><name>latCenter</name></name> <operator>*</operator> <name><name>DistanceUtils</name><operator>.</operator><name>DEGREES_TO_RADIANS</name></name></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>final</specifier> <name>double</name></type> <name>lonCenterRad</name> <init>= <expr><name><name>this</name><operator>.</operator><name>lonCenter</name></name> <operator>*</operator> <name><name>DistanceUtils</name><operator>.</operator><name>DEGREES_TO_RADIANS</name></name></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>final</specifier> <name>double</name></type> <name>latCenterRad_cos</name> <init>= <expr><name><name>this</name><operator>.</operator><name>latCenterRad_cos</name></name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name>distance</name><operator>/</operator><name><name>HaversineFunction</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name>distance</name><operator>/</operator><name><name>HaversineFunction</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">673840622c0</literal><operator>..</operator><name>f54c3aa9ba4</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name>distance</name><operator>/</operator><name><name>HaversineFunction</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name>distance</name><operator>/</operator><name><name>HaversineFunction</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name><operator>.</operator><name>distance</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>IndexSearcher</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>spatial</name><operator>.</operator><name>DistanceUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>SolrException</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">95</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">95</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>HaversineFunction</name> extends <name>ValueSource</name> <block>{
 
 
   @<expr><name>Override</name>
  <specifier>public</specifier> <name>DocValues</name> <call><name>getValues</name><argument_list>(<argument><expr><name>Map</name> <name>context</name></expr></argument>, <argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><name>final</name> <name>DocValues</name> <name>vals1</name> <operator>=</operator> <call><name><name>p1</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
  <specifier>public</specifier> <name>DocValues</name> <call><name>getValues</name><argument_list>(<argument><expr><name>Map</name> <name>context</name></expr></argument>, <argument><expr><name>AtomicReaderContext</name> <name>readerContext</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><name>final</name> <name>DocValues</name> <name>vals1</name> <operator>=</operator> <call><name><name>p1</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></block></expr>;</expr_stmt>
 
    <decl_stmt><decl><type><specifier>final</specifier> <name>DocValues</name></type> <name>vals2</name> <init>= <expr><call><name><name>p2</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>DocValues</name></type> <name>vals2</name> <init>= <expr><call><name><name>p2</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <return>return <expr><operator>new</operator> <class><super><name>DocValues</name></super><argument_list>()</argument_list> <block>{
       <function><type><specifier>public</specifier> <name>float</name></type> <name>floatVal</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <return>return <expr><operator>(</operator><name>float</name><operator>)</operator> <call><name>doubleVal</name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name>distance</name><operator>/</operator><name><name>StringDistanceFunction</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name>distance</name><operator>/</operator><name><name>StringDistanceFunction</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>ecdcb4d75ba</name><operator>..</operator><name>f67639c9d28</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name>distance</name><operator>/</operator><name><name>StringDistanceFunction</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name>distance</name><operator>/</operator><name><name>StringDistanceFunction</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name><operator>.</operator><name>distance</name></name>;</package>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>spell</name><operator>.</operator><name>StringDistance</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name><operator>.</operator><name>DocValues</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name><operator>.</operator><name>ValueSource</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">31</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">31</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>StringDistanceFunction</name> extends <name>ValueSource</name> <block>{
   }</block>
 
   @<name>Override</name>
  <specifier>public</specifier> <name>DocValues</name> <call><name>getValues</name><argument_list>(<argument><expr><name>Map</name> <name>context</name></expr></argument>, <argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><name>final</name> <name>DocValues</name> <name>str1DV</name> <operator>=</operator> <call><name><name>str1</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>DocValues</name></type> <name>str2DV</name> <init>= <expr><call><name><name>str2</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <function><type><specifier>public</specifier> <name>DocValues</name></type> <name>getValues</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>AtomicReaderContext</name></type> <name>readerContext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><specifier>final</specifier> <name>DocValues</name></type> <name>str1DV</name> <init>= <expr><call><name><name>str1</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>DocValues</name></type> <name>str2DV</name> <init>= <expr><call><name><name>str2</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <return>return <expr><operator>new</operator> <class><super><name>DocValues</name></super><argument_list>()</argument_list> <block>{
 
       <function><type><specifier>public</specifier> <name>float</name></type> <name>floatVal</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name>distance</name><operator>/</operator><name><name>VectorDistanceFunction</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name>distance</name><operator>/</operator><name><name>VectorDistanceFunction</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">95495bd3f8e</literal><operator>..</operator><literal type="number">3b86177bc04</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name>distance</name><operator>/</operator><name><name>VectorDistanceFunction</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name>distance</name><operator>/</operator><name><name>VectorDistanceFunction</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name><operator>.</operator><name>distance</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>IndexSearcher</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>spatial</name><operator>.</operator><name>DistanceUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>SolrException</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">78</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">78</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>VectorDistanceFunction</name> extends <name>ValueSource</name> <block>{
   }</block>
 
   @<name>Override</name>
  <specifier>public</specifier> <name>DocValues</name> <call><name>getValues</name><argument_list>(<argument><expr><name>Map</name> <name>context</name></expr></argument>, <argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>public</specifier> <name>DocValues</name> <call><name>getValues</name><argument_list>(<argument><expr><name>Map</name> <name>context</name></expr></argument>, <argument><expr><name>AtomicReaderContext</name> <name>readerContext</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
 
    <expr><name>final</name> <name>DocValues</name> <name>vals1</name> <operator>=</operator> <call><name><name>source1</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>DocValues</name></type> <name>vals1</name> <init>= <expr><call><name><name>source1</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
    <decl_stmt><decl><type><specifier>final</specifier> <name>DocValues</name></type> <name>vals2</name> <init>= <expr><call><name><name>source2</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>DocValues</name></type> <name>vals2</name> <init>= <expr><call><name><name>source2</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
 
     <return>return <expr><operator>new</operator> <class><super><name>DocValues</name></super><argument_list>()</argument_list> <block>{
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>spelling</name><operator>/</operator><name><name>IndexBasedSpellChecker</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>spelling</name><operator>/</operator><name><name>IndexBasedSpellChecker</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">3f85b259baf</literal><operator>..</operator><name>bac6c8cbb47</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>spelling</name><operator>/</operator><name><name>IndexBasedSpellChecker</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>spelling</name><operator>/</operator><name><name>IndexBasedSpellChecker</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">73</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">73</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>IndexBasedSpellChecker</name> extends <name>AbstractLuceneSpellChecker</name> <block>{
     <try>try <block>{<block_content>
       <if_stmt><if>if <condition>(<expr><name>sourceLocation</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
         <comment type="line">// Load from Solr's index</comment>
        <expr_stmt><expr><name>reader</name> <operator>=</operator> <call><name><name>searcher</name><operator>.</operator><name>getReader</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>reader</name> <operator>=</operator> <call><name><name>searcher</name><operator>.</operator><name>getIndexReader</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></if> <else>else <block>{<block_content>
         <comment type="line">// Load from Lucene index at given sourceLocation</comment>
         <expr_stmt><expr><name>reader</name> <operator>=</operator> <name><name>this</name><operator>.</operator><name>reader</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>spelling</name><operator>/</operator><name>suggest</name><operator>/</operator><name><name>Suggester</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>spelling</name><operator>/</operator><name>suggest</name><operator>/</operator><name><name>Suggester</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">8ba1077fb3f</literal><operator>..</operator><literal type="number">0eeb3141792</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>spelling</name><operator>/</operator><name>suggest</name><operator>/</operator><name><name>Suggester</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>spelling</name><operator>/</operator><name>suggest</name><operator>/</operator><name><name>Suggester</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">100</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">100</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>Suggester</name> extends <name>SolrSpellChecker</name> <block>{
   <expr><specifier>public</specifier> <name>void</name> <call><name>build</name><argument_list>(<argument><expr><name>SolrCore</name> <name>core</name></expr></argument>, <argument><expr><name>SolrIndexSearcher</name> <name>searcher</name></expr></argument>)</argument_list></call> <block>{
     <expr><call><name><name>LOG</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"build()"</literal></expr></argument>)</argument_list></call></expr>;</block></expr>
     <if_stmt><if>if <condition>(<expr><name>sourceLocation</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>reader</name> <operator>=</operator> <call><name><name>searcher</name><operator>.</operator><name>getReader</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>reader</name> <operator>=</operator> <call><name><name>searcher</name><operator>.</operator><name>getIndexReader</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><name>dictionary</name> <operator>=</operator> <operator>new</operator> <call><name>HighFrequencyDictionary</name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><name>field</name></expr></argument>, <argument><expr><name>threshold</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></if> <else>else <block>{<block_content>
       <try>try <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>update</name><operator>/</operator><name><name>UpdateHandler</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>update</name><operator>/</operator><name><name>UpdateHandler</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">7e06a2739fe</literal><operator>..</operator><name>e7332349dfd</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>update</name><operator>/</operator><name><name>UpdateHandler</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>update</name><operator>/</operator><name><name>UpdateHandler</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">152</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">152</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>UpdateHandler</name> implements <name>SolrInfoMBean</name> <block>{
     @<expr><name>Override</name>
     <specifier>public</specifier> <name>void</name> <call><name>collect</name><argument_list>(<argument><expr><name>int</name> <name>doc</name></expr></argument>)</argument_list></call> <block>{
       <try>try <block>{<block_content>
        <expr_stmt><expr><call><name><name>searcher</name><operator>.</operator><name>getReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>deleteDocument</name><argument_list>(<argument><expr><name>doc</name> <operator>+</operator> <name>docBase</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>searcher</name><operator>.</operator><name>getIndexReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>deleteDocument</name><argument_list>(<argument><expr><name>doc</name> <operator>+</operator> <name>docBase</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><name>deleted</name><operator>++</operator></expr>;</expr_stmt>
       <expr_stmt/></block_content></block></try></block></expr>}</block></expr></expr_stmt> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <comment type="line">// don't try to close the searcher on failure for now...</comment>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestConfig</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestConfig</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">03676c881e6</literal><operator>..</operator><literal type="number">8c4145a610d</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestConfig</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestConfig</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">139</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">139</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestConfig</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><name>StandardIndexReaderFactory</name> <name>sirf</name> <operator>=</operator> <operator>(</operator><name>StandardIndexReaderFactory</name><operator>)</operator> <name>irf</name></expr>;
     <call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><name><name>sirf</name><operator>.</operator><name>termInfosIndexDivisor</name></name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>SolrQueryRequest</name></type> <name>req</name> <init>= <expr><call><name>req</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><call><name><name>req</name><operator>.</operator><name>getSearcher</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getReader</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTermInfosIndexDivisor</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><call><name><name>req</name><operator>.</operator><name>getSearcher</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getIndexReader</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTermInfosIndexDivisor</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>req</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></catch>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestQuerySenderListener</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestQuerySenderListener</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>b8edad8e255</name><operator>..</operator><literal type="number">70a7501c6e8</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestQuerySenderListener</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestQuerySenderListener</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">75</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">75</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestQuerySenderListener</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><name>String</name> <name>evt</name> <operator>=</operator> <call><name><name>mock</name><operator>.</operator><name>req</name><operator>.</operator><name>getParams</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>EventParams</name><operator>.</operator><name>EVENT</name></name></expr></argument>)</argument_list></call></expr>;
     <call><name>assertNotNull</name><argument_list>(<argument><expr><literal type="string">"Event is null"</literal></expr></argument>, <argument><expr><name>evt</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><name>evt</name> <operator>+</operator> <literal type="string">" is not equal to "</literal> <operator>+</operator> <name><name>EventParams</name><operator>.</operator><name>FIRST_SEARCHER</name></name></expr></argument>, <argument><expr><call><name><name>evt</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name><name>EventParams</name><operator>.</operator><name>FIRST_SEARCHER</name></name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Directory</name></type> <name>dir</name> <init>= <expr><call><name><name>currentSearcher</name><operator>.</operator><name>getReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>directory</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Directory</name></type> <name>dir</name> <init>= <expr><call><name><name>currentSearcher</name><operator>.</operator><name>getIndexReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>directory</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>SolrIndexSearcher</name></type> <name>newSearcher</name> <init>= <expr><operator>new</operator> <call><name>SolrIndexSearcher</name><argument_list>(<argument><expr><name>core</name></expr></argument>, <argument><expr><call><name><name>core</name><operator>.</operator><name>getSchema</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"testQuerySenderListener"</literal></expr></argument>, <argument><expr><name>dir</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <expr_stmt><expr><call><name><name>qsl</name><operator>.</operator><name>newSearcher</name></name><argument_list>(<argument><expr><name>newSearcher</name></expr></argument>, <argument><expr><name>currentSearcher</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>QueryElevationComponentTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>QueryElevationComponentTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>b165298fa7d</name><operator>..</operator><name>dac3e913562</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>QueryElevationComponentTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>QueryElevationComponentTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">71</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">71</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>QueryElevationComponentTest</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><call><name><name>comp</name><operator>.</operator><name>inform</name></name><argument_list>( <argument><expr><name>core</name></expr></argument> )</argument_list></call></expr>;
 
     <name>SolrQueryRequest</name> <name>req</name> <operator>=</operator> <call><name>req</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>IndexReader</name></type> <name>reader</name> <init>= <expr><call><name><name>req</name><operator>.</operator><name>getSearcher</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getReader</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>IndexReader</name></type> <name>reader</name> <init>= <expr><call><name><name>req</name><operator>.</operator><name>getSearcher</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getIndexReader</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>ElevationObj</name></argument>&gt;</argument_list></name></type> <name>map</name> <init>= <expr><call><name><name>comp</name><operator>.</operator><name>getElevationMap</name></name><argument_list>( <argument><expr><name>reader</name></expr></argument>, <argument><expr><name>core</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>req</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">130</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">130</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>QueryElevationComponentTest</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><call><name><name>args</name><operator>.</operator><name>put</name></name><argument_list>( <argument><expr><literal type="string">"indent"</literal></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument> )</argument_list></call></expr>;
     <comment type="line">//args.put( CommonParams.FL, "id,title,score" );</comment>
     <name>SolrQueryRequest</name> <name>req</name> <operator>=</operator> <operator>new</operator> <call><name>LocalSolrQueryRequest</name><argument_list>( <argument><expr><call><name><name>h</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <call><name>MapSolrParams</name><argument_list>( <argument><expr><name>args</name></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>IndexReader</name></type> <name>reader</name> <init>= <expr><call><name><name>req</name><operator>.</operator><name>getSearcher</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getReader</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>IndexReader</name></type> <name>reader</name> <init>= <expr><call><name><name>req</name><operator>.</operator><name>getSearcher</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getIndexReader</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>QueryElevationComponent</name></type> <name>booster</name> <init>= <expr><operator>(</operator><name>QueryElevationComponent</name><operator>)</operator><call><name><name>req</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getSearchComponent</name><argument_list>( <argument><expr><literal type="string">"elevate"</literal></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <expr_stmt><expr><call><name>assertQ</name><argument_list>(<argument><expr><literal type="string">"Make sure standard sort works as expected"</literal></expr></argument>, <argument><expr><name>req</name>
@@ <operator>-</operator><literal type="number">255</literal></expr></argument>,<argument><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">255</literal></expr></argument>,<argument><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>QueryElevationComponentTest</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><call><name><name>comp</name><operator>.</operator><name>inform</name></name><argument_list>( <argument><expr><call><name><name>h</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call></expr></argument> )</argument_list></call></expr>;
 
     <name>SolrQueryRequest</name> <name>req</name> <operator>=</operator> <call><name>req</name><argument_list>()</argument_list></call></block></expr></argument>;</argument_list></call></expr></expr_stmt>
    <decl_stmt><decl><type><name>IndexReader</name></type> <name>reader</name> <init>= <expr><call><name><name>req</name><operator>.</operator><name>getSearcher</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getReader</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>IndexReader</name></type> <name>reader</name> <init>= <expr><call><name><name>req</name><operator>.</operator><name>getSearcher</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getIndexReader</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>ElevationObj</name></argument>&gt;</argument_list></name></type> <name>map</name> <init>= <expr><call><name><name>comp</name><operator>.</operator><name>getElevationMap</name></name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><call><name><name>h</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>assertTrue</name><argument_list>( <argument><expr><call><name><name>map</name><operator>.</operator><name>get</name></name><argument_list>( <argument><expr><literal type="string">"aaa"</literal></expr></argument> )</argument_list></call><operator>.</operator><call><name><name>priority</name><operator>.</operator><name>containsKey</name></name><argument_list>( <argument><expr><operator>new</operator> <call><name>BytesRef</name><argument_list>(<argument><expr><literal type="string">"A"</literal></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertNull</name><argument_list>( <argument><expr><call><name><name>map</name><operator>.</operator><name>get</name></name><argument_list>( <argument><expr><literal type="string">"bbb"</literal></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">267</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">267</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>QueryElevationComponentTest</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><call><name>assertU</name><argument_list>(<argument><expr><call><name>commit</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
     <name>req</name> <operator>=</operator> <call><name>req</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><name>reader</name> <operator>=</operator> <call><name><name>req</name><operator>.</operator><name>getSearcher</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getReader</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>reader</name> <operator>=</operator> <call><name><name>req</name><operator>.</operator><name>getSearcher</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getIndexReader</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>map</name> <operator>=</operator> <call><name><name>comp</name><operator>.</operator><name>getElevationMap</name></name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><call><name><name>h</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertNull</name><argument_list>( <argument><expr><call><name><name>map</name><operator>.</operator><name>get</name></name><argument_list>( <argument><expr><literal type="string">"aaa"</literal></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertTrue</name><argument_list>( <argument><expr><call><name><name>map</name><operator>.</operator><name>get</name></name><argument_list>( <argument><expr><literal type="string">"bbb"</literal></expr></argument> )</argument_list></call><operator>.</operator><call><name><name>priority</name><operator>.</operator><name>containsKey</name></name><argument_list>( <argument><expr><operator>new</operator> <call><name>BytesRef</name><argument_list>(<argument><expr><literal type="string">"B"</literal></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>request</name><operator>/</operator><name><name>TestFaceting</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>request</name><operator>/</operator><name><name>TestFaceting</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>fa5b6cdd1e0</name><operator>..</operator><name>b9e1a5f8a9e</name> <literal type="number">100755</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>request</name><operator>/</operator><name><name>TestFaceting</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>request</name><operator>/</operator><name><name>TestFaceting</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">67</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">67</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestFaceting</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><name>req</name> <operator>=</operator> <call><name><name>lrf</name><operator>.</operator><name>makeRequest</name></name><argument_list>(<argument><expr><literal type="string">"q"</literal></expr></argument>,<argument><expr><literal type="string">"*:*"</literal></expr></argument>)</argument_list></call></expr>;
 
     <name>TermIndex</name> <name>ti</name> <operator>=</operator> <operator>new</operator> <call><name>TermIndex</name><argument_list>(<argument><expr><call><name><name>proto</name><operator>.</operator><name>field</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>NumberedTermsEnum</name></type> <name>te</name> <init>= <expr><call><name><name>ti</name><operator>.</operator><name>getEnumerator</name></name><argument_list>(<argument><expr><call><name><name>req</name><operator>.</operator><name>getSearcher</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getReader</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>NumberedTermsEnum</name></type> <name>te</name> <init>= <expr><call><name><name>ti</name><operator>.</operator><name>getEnumerator</name></name><argument_list>(<argument><expr><call><name><name>req</name><operator>.</operator><name>getSearcher</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getIndexReader</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <comment type="line">// iterate through first</comment>
     <while>while<condition>(<expr><call><name><name>te</name><operator>.</operator><name>term</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name><name>te</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></while>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>size</name></expr></argument>, <argument><expr><call><name><name>te</name><operator>.</operator><name>getTermNumber</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>te</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
    <expr_stmt><expr><name>te</name> <operator>=</operator> <call><name><name>ti</name><operator>.</operator><name>getEnumerator</name></name><argument_list>(<argument><expr><call><name><name>req</name><operator>.</operator><name>getSearcher</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getReader</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>te</name> <operator>=</operator> <call><name><name>ti</name><operator>.</operator><name>getEnumerator</name></name><argument_list>(<argument><expr><call><name><name>req</name><operator>.</operator><name>getSearcher</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getIndexReader</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><name>Random</name></type> <name>r</name> <init>= <expr><operator>new</operator> <call><name>Random</name><argument_list>(<argument><expr><name>size</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <comment type="line">// test seeking by term string</comment>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestIndexSearcher</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestIndexSearcher</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">0b5e114c257</literal><operator>..</operator><literal type="number">4ad292607f9</literal> <literal type="number">100755</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestIndexSearcher</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestIndexSearcher</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">45</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">45</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestIndexSearcher</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><name><name>AtomicReaderContext</name><index>[]</index></name> <name>leaves</name> <operator>=</operator> <call><name><name>ReaderUtil</name><operator>.</operator><name>leaves</name></name><argument_list>(<argument><expr><name>topReaderContext</name></expr></argument>)</argument_list></call></expr>;
     <name>int</name> <name>idx</name> <operator>=</operator> <call><name><name>ReaderUtil</name><operator>.</operator><name>subIndex</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>, <argument><expr><name>leaves</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>AtomicReaderContext</name></type> <name>leaf</name> <init>= <expr><name><name>leaves</name><index>[<expr><name>idx</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>DocValues</name></type> <name>vals</name> <init>= <expr><call><name><name>vs</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name><name>leaf</name><operator>.</operator><name>reader</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>DocValues</name></type> <name>vals</name> <init>= <expr><call><name><name>vs</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>leaf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <return>return <expr><call><name><name>vals</name><operator>.</operator><name>strVal</name></name><argument_list>(<argument><expr><name>doc</name><operator>-</operator><name><name>leaf</name><operator>.</operator><name>docBase</name></name></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></try>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>spelling</name><operator>/</operator><name><name>DirectSolrSpellCheckerTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>spelling</name><operator>/</operator><name><name>DirectSolrSpellCheckerTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">41b64532a8b</literal><operator>..</operator><literal type="number">7e93afb8358</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>spelling</name><operator>/</operator><name><name>DirectSolrSpellCheckerTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>spelling</name><operator>/</operator><name><name>DirectSolrSpellCheckerTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">62</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">62</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>DirectSolrSpellCheckerTest</name> extends <name>SolrTestCaseJ4</name> <block>{
 
     <expr><name><name>RefCounted</name><argument_list type="generic">&lt;<argument><name>SolrIndexSearcher</name></argument>&gt;</argument_list></name> <name>searcher</name> <operator>=</operator> <call><name><name>core</name><operator>.</operator><name>getSearcher</name></name><argument_list>()</argument_list></call></expr>;
     <name><name>Collection</name><argument_list type="generic">&lt;<argument><name>Token</name></argument>&gt;</argument_list></name> <name>tokens</name> <operator>=</operator> <call><name><name>queryConverter</name><operator>.</operator><name>convert</name></name><argument_list>(<argument><expr><literal type="string">"fob"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>SpellingOptions</name></type> <name>spellOpts</name> <init>= <expr><operator>new</operator> <call><name>SpellingOptions</name><argument_list>(<argument><expr><name>tokens</name></expr></argument>, <argument><expr><call><name><name>searcher</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getReader</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>SpellingOptions</name></type> <name>spellOpts</name> <init>= <expr><operator>new</operator> <call><name>SpellingOptions</name><argument_list>(<argument><expr><name>tokens</name></expr></argument>, <argument><expr><call><name><name>searcher</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getIndexReader</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>SpellingResult</name></type> <name>result</name> <init>= <expr><call><name><name>checker</name><operator>.</operator><name>getSuggestions</name></name><argument_list>(<argument><expr><name>spellOpts</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"result is null and it shouldn't be"</literal></expr></argument>, <argument><expr><name>result</name> <operator>!=</operator> <literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Integer</name></argument>&gt;</argument_list></name></type> <name>suggestions</name> <init>= <expr><call><name><name>result</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>tokens</name><operator>.</operator><name>iterator</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>next</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>spelling</name><operator>/</operator><name><name>FileBasedSpellCheckerTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>spelling</name><operator>/</operator><name><name>FileBasedSpellCheckerTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">1230e78aa0b</literal><operator>..</operator><literal type="number">3c536058f1f</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>spelling</name><operator>/</operator><name><name>FileBasedSpellCheckerTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>spelling</name><operator>/</operator><name><name>FileBasedSpellCheckerTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">78</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">78</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>FileBasedSpellCheckerTest</name> extends <name>SolrTestCaseJ4</name> <block>{
 
     <expr><name><name>RefCounted</name><argument_list type="generic">&lt;<argument><name>SolrIndexSearcher</name></argument>&gt;</argument_list></name> <name>searcher</name> <operator>=</operator> <call><name><name>core</name><operator>.</operator><name>getSearcher</name></name><argument_list>()</argument_list></call></expr>;
     <name><name>Collection</name><argument_list type="generic">&lt;<argument><name>Token</name></argument>&gt;</argument_list></name> <name>tokens</name> <operator>=</operator> <call><name><name>queryConverter</name><operator>.</operator><name>convert</name></name><argument_list>(<argument><expr><literal type="string">"fob"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>SpellingOptions</name></type> <name>spellOpts</name> <init>= <expr><operator>new</operator> <call><name>SpellingOptions</name><argument_list>(<argument><expr><name>tokens</name></expr></argument>, <argument><expr><call><name><name>searcher</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getReader</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>SpellingOptions</name></type> <name>spellOpts</name> <init>= <expr><operator>new</operator> <call><name>SpellingOptions</name><argument_list>(<argument><expr><name>tokens</name></expr></argument>, <argument><expr><call><name><name>searcher</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getIndexReader</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>SpellingResult</name></type> <name>result</name> <init>= <expr><call><name><name>checker</name><operator>.</operator><name>getSuggestions</name></name><argument_list>(<argument><expr><name>spellOpts</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"result is null and it shouldn't be"</literal></expr></argument>, <argument><expr><name>result</name> <operator>!=</operator> <literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Integer</name></argument>&gt;</argument_list></name></type> <name>suggestions</name> <init>= <expr><call><name><name>result</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>tokens</name><operator>.</operator><name>iterator</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>next</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">117</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">117</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>FileBasedSpellCheckerTest</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><name><name>RefCounted</name><argument_list type="generic">&lt;<argument><name>SolrIndexSearcher</name></argument>&gt;</argument_list></name> <name>searcher</name> <operator>=</operator> <call><name><name>core</name><operator>.</operator><name>getSearcher</name></name><argument_list>()</argument_list></call></expr>;
     <name><name>Collection</name><argument_list type="generic">&lt;<argument><name>Token</name></argument>&gt;</argument_list></name> <name>tokens</name> <operator>=</operator> <call><name><name>queryConverter</name><operator>.</operator><name>convert</name></name><argument_list>(<argument><expr><literal type="string">"Solar"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
 
    <decl_stmt><decl><type><name>SpellingOptions</name></type> <name>spellOpts</name> <init>= <expr><operator>new</operator> <call><name>SpellingOptions</name><argument_list>(<argument><expr><name>tokens</name></expr></argument>, <argument><expr><call><name><name>searcher</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getReader</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>SpellingOptions</name></type> <name>spellOpts</name> <init>= <expr><operator>new</operator> <call><name>SpellingOptions</name><argument_list>(<argument><expr><name>tokens</name></expr></argument>, <argument><expr><call><name><name>searcher</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getIndexReader</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>SpellingResult</name></type> <name>result</name> <init>= <expr><call><name><name>checker</name><operator>.</operator><name>getSuggestions</name></name><argument_list>(<argument><expr><name>spellOpts</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"result is null and it shouldn't be"</literal></expr></argument>, <argument><expr><name>result</name> <operator>!=</operator> <literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <comment type="line">//should be lowercased, b/c we are using a lowercasing analyzer</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">160</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">160</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>FileBasedSpellCheckerTest</name> extends <name>SolrTestCaseJ4</name> <block>{
 
     <expr><name><name>RefCounted</name><argument_list type="generic">&lt;<argument><name>SolrIndexSearcher</name></argument>&gt;</argument_list></name> <name>searcher</name> <operator>=</operator> <call><name><name>core</name><operator>.</operator><name>getSearcher</name></name><argument_list>()</argument_list></call></expr>;
     <name><name>Collection</name><argument_list type="generic">&lt;<argument><name>Token</name></argument>&gt;</argument_list></name> <name>tokens</name> <operator>=</operator> <call><name><name>queryConverter</name><operator>.</operator><name>convert</name></name><argument_list>(<argument><expr><literal type="string">"solar"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>SpellingOptions</name></type> <name>spellOpts</name> <init>= <expr><operator>new</operator> <call><name>SpellingOptions</name><argument_list>(<argument><expr><name>tokens</name></expr></argument>, <argument><expr><call><name><name>searcher</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getReader</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>SpellingOptions</name></type> <name>spellOpts</name> <init>= <expr><operator>new</operator> <call><name>SpellingOptions</name><argument_list>(<argument><expr><name>tokens</name></expr></argument>, <argument><expr><call><name><name>searcher</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getIndexReader</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>SpellingResult</name></type> <name>result</name> <init>= <expr><call><name><name>checker</name><operator>.</operator><name>getSuggestions</name></name><argument_list>(<argument><expr><name>spellOpts</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"result is null and it shouldn't be"</literal></expr></argument>, <argument><expr><name>result</name> <operator>!=</operator> <literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <comment type="line">//should be lowercased, b/c we are using a lowercasing analyzer</comment>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>spelling</name><operator>/</operator><name><name>IndexBasedSpellCheckerTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>spelling</name><operator>/</operator><name><name>IndexBasedSpellCheckerTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>d7f8edfb95b</name><operator>..</operator><literal type="number">440142c667b</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>spelling</name><operator>/</operator><name><name>IndexBasedSpellCheckerTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>spelling</name><operator>/</operator><name><name>IndexBasedSpellCheckerTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">121</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">121</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>IndexBasedSpellCheckerTest</name> extends <name>SolrTestCaseJ4</name> <block>{
     <try>try <block>{<block_content>
     <expr_stmt><expr><call><name><name>checker</name><operator>.</operator><name>build</name></name><argument_list>(<argument><expr><name>core</name></expr></argument>, <argument><expr><name>searcher</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
    <decl_stmt><decl><type><name>IndexReader</name></type> <name>reader</name> <init>= <expr><call><name><name>searcher</name><operator>.</operator><name>getReader</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>IndexReader</name></type> <name>reader</name> <init>= <expr><call><name><name>searcher</name><operator>.</operator><name>getIndexReader</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name><name>Collection</name><argument_list type="generic">&lt;<argument><name>Token</name></argument>&gt;</argument_list></name></type> <name>tokens</name> <init>= <expr><call><name><name>queryConverter</name><operator>.</operator><name>convert</name></name><argument_list>(<argument><expr><literal type="string">"documemt"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>SpellingOptions</name></type> <name>spellOpts</name> <init>= <expr><operator>new</operator> <call><name>SpellingOptions</name><argument_list>(<argument><expr><name>tokens</name></expr></argument>, <argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>SpellingResult</name></type> <name>result</name> <init>= <expr><call><name><name>checker</name><operator>.</operator><name>getSuggestions</name></name><argument_list>(<argument><expr><name>spellOpts</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">196</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">196</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>IndexBasedSpellCheckerTest</name> extends <name>SolrTestCaseJ4</name> <block>{
     <try>try <block>{<block_content>
     <expr_stmt><expr><call><name><name>checker</name><operator>.</operator><name>build</name></name><argument_list>(<argument><expr><name>core</name></expr></argument>, <argument><expr><name>searcher</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
    <decl_stmt><decl><type><name>IndexReader</name></type> <name>reader</name> <init>= <expr><call><name><name>searcher</name><operator>.</operator><name>getReader</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>IndexReader</name></type> <name>reader</name> <init>= <expr><call><name><name>searcher</name><operator>.</operator><name>getIndexReader</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name><name>Collection</name><argument_list type="generic">&lt;<argument><name>Token</name></argument>&gt;</argument_list></name></type> <name>tokens</name> <init>= <expr><call><name><name>queryConverter</name><operator>.</operator><name>convert</name></name><argument_list>(<argument><expr><literal type="string">"documemt"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>SpellingOptions</name></type> <name>spellOpts</name> <init>= <expr><operator>new</operator> <call><name>SpellingOptions</name><argument_list>(<argument><expr><name>tokens</name></expr></argument>, <argument><expr><name>reader</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="number">0.5f</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>SpellingResult</name></type> <name>result</name> <init>= <expr><call><name><name>checker</name><operator>.</operator><name>getSuggestions</name></name><argument_list>(<argument><expr><name>spellOpts</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">309</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">309</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>IndexBasedSpellCheckerTest</name> extends <name>SolrTestCaseJ4</name> <block>{
     <try>try <block>{<block_content>
     <expr_stmt><expr><call><name><name>checker</name><operator>.</operator><name>build</name></name><argument_list>(<argument><expr><name>core</name></expr></argument>, <argument><expr><name>searcher</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
    <decl_stmt><decl><type><name>IndexReader</name></type> <name>reader</name> <init>= <expr><call><name><name>searcher</name><operator>.</operator><name>getReader</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>IndexReader</name></type> <name>reader</name> <init>= <expr><call><name><name>searcher</name><operator>.</operator><name>getIndexReader</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name><name>Collection</name><argument_list type="generic">&lt;<argument><name>Token</name></argument>&gt;</argument_list></name></type> <name>tokens</name> <init>= <expr><call><name><name>queryConverter</name><operator>.</operator><name>convert</name></name><argument_list>(<argument><expr><literal type="string">"flesh"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>SpellingOptions</name></type> <name>spellOpts</name> <init>= <expr><operator>new</operator> <call><name>SpellingOptions</name><argument_list>(<argument><expr><name>tokens</name></expr></argument>, <argument><expr><name>reader</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="number">0.5f</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>SpellingResult</name></type> <name>result</name> <init>= <expr><call><name><name>checker</name><operator>.</operator><name>getSuggestions</name></name><argument_list>(<argument><expr><name>spellOpts</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>update</name><operator>/</operator><name>processor</name><operator>/</operator><name><name>SignatureUpdateProcessorFactoryTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>update</name><operator>/</operator><name>processor</name><operator>/</operator><name><name>SignatureUpdateProcessorFactoryTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">9b07cab1312</literal><operator>..</operator><literal type="number">25f1a639442</literal> <literal type="number">100755</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>update</name><operator>/</operator><name>processor</name><operator>/</operator><name><name>SignatureUpdateProcessorFactoryTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>update</name><operator>/</operator><name>processor</name><operator>/</operator><name><name>SignatureUpdateProcessorFactoryTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">62</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">62</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SignatureUpdateProcessorFactoryTest</name> extends <name>SolrTestCaseJ4</name> <block>{
   <expr><name>void</name> <call><name>checkNumDocs</name><argument_list>(<argument><expr><name>int</name> <name>n</name></expr></argument>)</argument_list></call> <block>{
     <expr><name>SolrQueryRequest</name> <name>req</name> <operator>=</operator> <call><name>req</name><argument_list>()</argument_list></call></expr>;</block></expr>
     <try>try <block>{<block_content>
      <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>n</name></expr></argument>, <argument><expr><call><name><name>req</name><operator>.</operator><name>getSearcher</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getReader</name><argument_list>()</argument_list></call><operator>.</operator><call><name>numDocs</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>n</name></expr></argument>, <argument><expr><call><name><name>req</name><operator>.</operator><name>getSearcher</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getIndexReader</name><argument_list>()</argument_list></call><operator>.</operator><call><name>numDocs</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block> <finally>finally <block>{<block_content>
       <expr_stmt><expr><call><name><name>req</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></finally></try>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>webapp</name><operator>/</operator><name>src</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>servlet</name><operator>/</operator><name>cache</name><operator>/</operator><name><name>HttpCacheHeaderUtil</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>webapp</name><operator>/</operator><name>src</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>servlet</name><operator>/</operator><name>cache</name><operator>/</operator><name><name>HttpCacheHeaderUtil</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">6169a5cb095</literal><operator>..</operator><literal type="number">3a905cc545c</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>webapp</name><operator>/</operator><name>src</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>servlet</name><operator>/</operator><name>cache</name><operator>/</operator><name><name>HttpCacheHeaderUtil</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>webapp</name><operator>/</operator><name>src</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>servlet</name><operator>/</operator><name>cache</name><operator>/</operator><name><name>HttpCacheHeaderUtil</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">95</literal><operator>,</operator><literal type="number">7</literal> <operator>+</operator><literal type="number">95</literal><operator>,</operator><literal type="number">7</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>HttpCacheHeaderUtil</name> <block>{
   <expr><specifier>public</specifier> <specifier>static</specifier> <name>String</name> <call><name>calcEtag</name><argument_list>(<argument><expr><name>final</name> <name>SolrQueryRequest</name> <name>solrReq</name></expr></argument>)</argument_list></call> <block>{
     <expr><name>final</name> <name>SolrCore</name> <name>core</name> <operator>=</operator> <call><name><name>solrReq</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call></expr>;
     <name>final</name> <name>long</name> <name>currentIndexVersion</name>
      <operator>=</operator> <call><name><name>solrReq</name><operator>.</operator><name>getSearcher</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getReader</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getVersion</name><argument_list>()</argument_list></call></block></expr>;
      <operator>=</operator> <call><name><name>solrReq</name><operator>.</operator><name>getSearcher</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getIndexReader</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getVersion</name><argument_list>()</argument_list></call></block></block></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><name>EtagCacheVal</name></type> <name>etagCache</name> <init>= <expr><call><name><name>etagCoreCache</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>core</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <if_stmt><if>if <condition>(<expr><literal type="null">null</literal> <operator>==</operator> <name>etagCache</name></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">152</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">152</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>HttpCacheHeaderUtil</name> <block>{
       <comment type="line">// assume default, change if needed (getOpenTime() should be fast)</comment>
       <expr><name>lastMod</name> <operator>=</operator>
         <name><name>LastModFrom</name><operator>.</operator><name>DIRLASTMOD</name></name> <operator>==</operator> <name>lastModFrom</name>
        <operator>?</operator> <call><name><name>IndexReader</name><operator>.</operator><name>lastModified</name></name><argument_list>(<argument><expr><call><name><name>searcher</name><operator>.</operator><name>getReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>directory</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
        <operator>?</operator> <call><name><name>IndexReader</name><operator>.</operator><name>lastModified</name></name><argument_list>(<argument><expr><call><name><name>searcher</name><operator>.</operator><name>getIndexReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>directory</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
         <operator>:</operator> <call><name><name>searcher</name><operator>.</operator><name>getOpenTime</name></name><argument_list>()</argument_list></call></expr>;
     }</block></expr></expr_stmt> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
       <comment type="line">// we're pretty freaking screwed if this happens</comment>
<expr_stmt><expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></expr_stmt></block_content></block></catch></block_content></block></if></if_stmt></block_content></block></try></block></expr></expr_stmt></block_content></block></try></block></expr></expr_stmt></block_content></block></try></block></expr></expr_stmt></block_content></block></else></if_stmt></block></expr></expr_stmt></block_content></block></else></if_stmt></block_content></block></try></block></expr></expr_stmt></block></class></expr></return></block_content></block></function></block></class></expr></return></block_content></block></function></block_content></block></function></block></class></expr></return></block_content></block></function></block_content></block></function></block></class></expr></return></block_content></block></function></block></class></expr></return></block_content></block></function></block></class></expr></return></block_content></block></function></block></class></expr></return></block_content></block></if></if_stmt></block_content></block></function></block_content></block></function></block_content></block></function></block></class></expr></return></block_content></block></function></block_content></block></function></block></class></expr></return></block_content></block></function></block_content></block></function></block_content></block></function></block></class></expr></return></block_content></block></function></block_content></block></function></block_content></block></for></block_content></block></for></block_content></block></function></block_content></block></function></block_content></block></function></block_content></block></function></block></class></expr></return></block_content></block></function></block_content></block></function></block></class></expr></return></block_content></block></function></block_content></block></function></block_content></block></function></block_content></block></function></block_content></block></function></block_content></block></function></block></class></expr></return></block_content></block></function></block_content></block></function></block_content></block></function></block></class></expr></return></block_content></block></function></block_content></block></function></block_content></block></function></block_content></block></function></block></class></expr></return></block_content></block></function></block_content></block></function></block_content></block></function></block></class></expr></return></block_content></block></function></block_content></block></function></block_content></block></function></block_content></block></function></block_content></block></function></block></class></expr></return></block_content></block></function></block_content></block></function></block_content></block></function></block></class></expr></return></block_content></block></function></block_content></block></function></block></class></expr></return></block_content></block></function></block_content></block></function></block></class></expr></return></block_content></block></function></block_content></block></function></block_content></block></function></block></class></expr></return></block_content></block></function></block_content></block></function></block></class></expr></return></block_content></block></function></block_content></block></function></block_content></block></function></block></class></expr></return></block_content></block></function></block_content></block></function></block></class></expr></return></block></class></expr></return></block_content></block></function></block_content></block></function></block_content></block></function></block></class></expr></return></block></class></expr></return></block_content></block></function></block_content></block></function></block_content></block></function></block></class></expr></return></block></class></expr></return></block_content></block></function></block_content></block></function></block_content></block></function></block></class></expr></return></block></class></expr></return></block_content></block></function></block_content></block></function></block_content></block></function></block></class></expr></return>

</unit>
