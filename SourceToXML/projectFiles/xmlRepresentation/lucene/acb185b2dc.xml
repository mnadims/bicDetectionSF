<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/lucene/acb185b2dc.java"><expr_stmt><expr><name>From</name> <name>acb185b2dc7522e6a4fa55d54e82910736668f8d</name> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Andrzej</name> <name><name>Bialecki</name> <argument_list type="generic">&lt;<argument><name>ab</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Mon</name></expr><operator>,</operator> <expr><literal type="number">6</literal> <name>Mar</name> <literal type="number">2017</literal> <literal type="number">11</literal><operator>:</operator><literal type="number">09</literal><operator>:</operator><literal type="number">59</literal> <operator>+</operator><literal type="number">0100</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>SOLR</name><operator>-</operator><literal type="number">9999</literal><operator>:</operator> <name>Instrument</name> <name><name>DirectUpdateHandler2</name><operator>.</operator></name>

--
 <name>solr</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>                              <operator>|</operator>   <literal type="number">3</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrCore</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">3</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>update</name><operator>/</operator><name><name>DirectUpdateHandler2</name><operator>.</operator><name>java</name></name>     <operator>|</operator> <literal type="number">128</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>--</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>update</name><operator>/</operator><name><name>DirectUpdateHandlerTest</name><operator>.</operator><name>java</name></name>  <operator>|</operator> <literal type="number">108</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>--</operator><operator>-</operator>
 <literal type="number">4</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">185</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">57</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
<name>index</name> <literal type="number">0b0574902fb</literal><operator>..</operator><literal type="number">4cfcb722d87</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
@@ <operator>-</operator><literal type="number">151</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">151</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <name>New</name> <name>Features</name>
 
 <operator>*</operator> <name>SOLR</name><operator>-</operator><literal type="number">10146</literal><operator>:</operator> <name>Added</name> <name>button</name> <name>to</name> <name>the</name> <name>Admin</name> <name>UI</name> <literal type="char">'Collection'</literal> <name>tab</name></expr></expr_stmt> <for>for deleting an inactive shard <control>(<init><decl><type><name>Amrit</name></type> <name>Sarkar</name></decl>, <decl><type ref="prev"/><name>janhoy</name></decl></init>)</control><block type="pseudo"><block_content>
 
<expr_stmt><expr><operator>*</operator> <name>SOLR</name><operator>-</operator><literal type="number">9999</literal><operator>:</operator> <name>Instrument</name> <name><name>DirectUpdateHandler2</name><operator>.</operator> <name>This</name></name> <name>registers</name> <name>existing</name> <name>statistics</name> <name>under</name> <name>metrics</name> <name>API</name> <name>and</name> <name>adds</name>
  <name>more</name> <name>metrics</name> <name>to</name> <name>track</name> <name>the</name> <name>rates</name> <name>of</name> <name>update</name> <name>and</name> <name>delete</name> <name><name>commands</name><operator>.</operator></name> (<name>ab</name></expr></expr_stmt></block_content></block></for>)

 <expr_stmt><expr><name>Bug</name> <name>Fixes</name>
 <operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator>
 
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrCore</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrCore</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">1c30e4c1be8</literal><operator>..</operator><name>f22c4722222</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrCore</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrCore</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">1072</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">1072</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>SolrCore</name> implements <name>SolrInfoMBean</name></expr><operator>,</operator> <expr><name>Closeable</name> <block>{
     }</block></expr></expr_stmt> <if_stmt><else>else <block>{<block_content>
       <expr_stmt><expr><name>newUpdateHandler</name> <operator>=</operator> <call><name>createUpdateHandler</name><argument_list>(<argument><expr><name>updateHandlerClass</name></expr></argument>, <argument><expr><name>updateHandler</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></else></if_stmt>
    <if_stmt><if>if <condition>(<expr><name>newUpdateHandler</name> <operator>instanceof</operator> <name>SolrMetricProducer</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>coreMetricManager</name><operator>.</operator><name>registerMetricProducer</name></name><argument_list>(<argument><expr><literal type="string">"updateHandler"</literal></expr></argument>, <argument><expr><operator>(</operator><name>SolrMetricProducer</name><operator>)</operator><name>newUpdateHandler</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
     <expr_stmt><expr><call><name><name>infoRegistry</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"updateHandler"</literal></expr></argument>, <argument><expr><name>newUpdateHandler</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <return>return <expr><name>newUpdateHandler</name></expr>;</return>
   }
diff <expr_stmt><expr><operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>update</name><operator>/</operator><name><name>DirectUpdateHandler2</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>update</name><operator>/</operator><name><name>DirectUpdateHandler2</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>ebff564fbb5</name><operator>..</operator><literal type="number">4592bcf980b</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>update</name><operator>/</operator><name><name>DirectUpdateHandler2</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>update</name><operator>/</operator><name><name>DirectUpdateHandler2</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">26</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">26</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>ExecutionException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>Future</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>atomic</name><operator>.</operator><name>LongAdder</name></name>;</import>
 
<import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>Gauge</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>Meter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Document</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Field</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>CodecReader</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">49</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">51</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>NamedList</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>SimpleOrderedMap</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrConfig</name><operator>.</operator><name>UpdateHandlerInfo</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrCore</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>SolrMetricManager</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>SolrMetricProducer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>request</name><operator>.</operator><name>LocalSolrQueryRequest</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>request</name><operator>.</operator><name>SolrQueryRequest</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>request</name><operator>.</operator><name>SolrRequestInfo</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">71</literal></expr><operator>,</operator><expr><literal type="number">24</literal> <operator>+</operator><literal type="number">75</literal></expr><operator>,</operator><expr><literal type="number">25</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>
  <expr_stmt><expr><operator>*</operator> <operator>&lt;</operator><name>p</name><operator>&gt;</operator>
  <operator>*</operator> <name>TODO</name><operator>:</operator> <name>add</name> <name>soft</name> <name>commitWithin</name> <name>support</name>
  <operator>*</operator><operator>/</operator>
<specifier>public</specifier> <name>class</name> <name>DirectUpdateHandler2</name> extends <name>UpdateHandler</name> implements <name><name>SolrCoreState</name><operator>.</operator><name>IndexWriterCloser</name></name> <block>{
<expr><specifier>public</specifier> <name>class</name> <name>DirectUpdateHandler2</name> extends <name>UpdateHandler</name> implements <name><name>SolrCoreState</name><operator>.</operator><name>IndexWriterCloser</name></name></expr>, <expr><name>SolrMetricProducer</name> <block>{
   <expr><specifier>protected</specifier> <name>final</name> <name>SolrCoreState</name> <name>solrCoreState</name></expr>;
 
   <comment type="line">// stats</comment>
   <expr><name>LongAdder</name> <name>addCommands</name> <operator>=</operator> <operator>new</operator> <call><name>LongAdder</name><argument_list>()</argument_list></call></expr>;
  <expr><name>LongAdder</name> <name>addCommandsCumulative</name> <operator>=</operator> <operator>new</operator> <call><name>LongAdder</name><argument_list>()</argument_list></call></expr>;
  <expr><name>Meter</name> <name>addCommandsCumulative</name></expr>;
   <expr><name>LongAdder</name> <name>deleteByIdCommands</name><operator>=</operator> <operator>new</operator> <call><name>LongAdder</name><argument_list>()</argument_list></call></expr>;
  <expr><name>LongAdder</name> <name>deleteByIdCommandsCumulative</name><operator>=</operator> <operator>new</operator> <call><name>LongAdder</name><argument_list>()</argument_list></call></expr>;
  <expr><name>LongAdder</name> <name>deleteByQueryCommands</name><operator>=</operator> <operator>new</operator> <call><name>LongAdder</name><argument_list>()</argument_list></call></expr>;
  <expr><name>LongAdder</name> <name>deleteByQueryCommandsCumulative</name><operator>=</operator> <operator>new</operator> <call><name>LongAdder</name><argument_list>()</argument_list></call></expr>;
  <expr><name>LongAdder</name> <name>expungeDeleteCommands</name> <operator>=</operator> <operator>new</operator> <call><name>LongAdder</name><argument_list>()</argument_list></call></expr>;
  <expr><name>LongAdder</name> <name>mergeIndexesCommands</name> <operator>=</operator> <operator>new</operator> <call><name>LongAdder</name><argument_list>()</argument_list></call></expr>;
  <expr><name>LongAdder</name> <name>commitCommands</name><operator>=</operator> <operator>new</operator> <call><name>LongAdder</name><argument_list>()</argument_list></call></expr>;
  <expr><name>LongAdder</name> <name>optimizeCommands</name><operator>=</operator> <operator>new</operator> <call><name>LongAdder</name><argument_list>()</argument_list></call></expr>;
  <expr><name>LongAdder</name> <name>rollbackCommands</name><operator>=</operator> <operator>new</operator> <call><name>LongAdder</name><argument_list>()</argument_list></call></expr>;
  <expr><name>LongAdder</name> <name>numDocsPending</name><operator>=</operator> <operator>new</operator> <call><name>LongAdder</name><argument_list>()</argument_list></call></expr>;
  <expr><name>Meter</name> <name>deleteByIdCommandsCumulative</name></expr>;
  <expr><name>LongAdder</name> <name>deleteByQueryCommands</name> <operator>=</operator> <operator>new</operator> <call><name>LongAdder</name><argument_list>()</argument_list></call></expr>;
  <expr><name>Meter</name> <name>deleteByQueryCommandsCumulative</name></expr>;
  <expr><name>Meter</name> <name>expungeDeleteCommands</name></expr>;
  <expr><name>Meter</name> <name>mergeIndexesCommands</name></expr>;
  <expr><name>Meter</name> <name>commitCommands</name></expr>;
  <expr><name>Meter</name> <name>splitCommands</name></expr>;
  <expr><name>Meter</name> <name>optimizeCommands</name></expr>;
  <expr><name>Meter</name> <name>rollbackCommands</name></expr>;
  <expr><name>LongAdder</name> <name>numDocsPending</name> <operator>=</operator> <operator>new</operator> <call><name>LongAdder</name><argument_list>()</argument_list></call></expr>;
   <expr><name>LongAdder</name> <name>numErrors</name> <operator>=</operator> <operator>new</operator> <call><name>LongAdder</name><argument_list>()</argument_list></call></expr>;
  <expr><name>LongAdder</name> <name>numErrorsCumulative</name> <operator>=</operator> <operator>new</operator> <call><name>LongAdder</name><argument_list>()</argument_list></call></expr>;
  <expr><name>Meter</name> <name>numErrorsCumulative</name></expr>;
 
   <comment type="line">// tracks when auto-commit should occur</comment>
   <expr><specifier>protected</specifier> <name>final</name> <name>CommitTracker</name> <name>commitTracker</name></expr>;
@@ <expr><operator>-</operator><literal type="number">146</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">151</literal></expr>,<expr><literal type="number">35</literal> @@ <specifier>public</specifier> <name>class</name> <name>DirectUpdateHandler2</name> extends <name>UpdateHandler</name> implements <name>SolrCoreState</name></expr>
     }</block></expr>
   }</block>
 
  @<name>Override</name>
  <specifier>public</specifier> <name>void</name> <call><name>initializeMetrics</name><argument_list>(<argument><expr><name>SolrMetricManager</name> <name>manager</name></expr></argument>, <argument><expr><name>String</name> <name>registry</name></expr></argument>, <argument><expr><name>String</name> <name>scope</name></expr></argument>)</argument_list></call> <block>{
    <expr><name>commitCommands</name> <operator>=</operator> <call><name><name>manager</name><operator>.</operator><name>meter</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><literal type="string">"commits"</literal></expr></argument>, <argument><expr><call><name>getCategory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;
    <expr><name><name>Gauge</name><argument_list type="generic">&lt;<argument><name>Integer</name></argument>&gt;</argument_list></name> <name>autoCommits</name> <operator>=</operator> <lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>commitTracker</name><operator>.</operator><name>getCommitCount</name></name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr>;
    <expr><call><name><name>manager</name><operator>.</operator><name>register</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><name>autoCommits</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"autoCommits"</literal></expr></argument>, <argument><expr><call><name>getCategory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;
    <expr><name><name>Gauge</name><argument_list type="generic">&lt;<argument><name>Integer</name></argument>&gt;</argument_list></name> <name>softAutoCommits</name> <operator>=</operator> <lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>softCommitTracker</name><operator>.</operator><name>getCommitCount</name></name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr>;
    <expr><call><name><name>manager</name><operator>.</operator><name>register</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><name>softAutoCommits</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"softAutoCommits"</literal></expr></argument>, <argument><expr><call><name>getCategory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>optimizeCommands</name> <operator>=</operator> <call><name><name>manager</name><operator>.</operator><name>meter</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><literal type="string">"optimizes"</literal></expr></argument>, <argument><expr><call><name>getCategory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>rollbackCommands</name> <operator>=</operator> <call><name><name>manager</name><operator>.</operator><name>meter</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><literal type="string">"rollbacks"</literal></expr></argument>, <argument><expr><call><name>getCategory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>splitCommands</name> <operator>=</operator> <call><name><name>manager</name><operator>.</operator><name>meter</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><literal type="string">"splits"</literal></expr></argument>, <argument><expr><call><name>getCategory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>mergeIndexesCommands</name> <operator>=</operator> <call><name><name>manager</name><operator>.</operator><name>meter</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><literal type="string">"merges"</literal></expr></argument>, <argument><expr><call><name>getCategory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>expungeDeleteCommands</name> <operator>=</operator> <call><name><name>manager</name><operator>.</operator><name>meter</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><literal type="string">"expungeDeletes"</literal></expr></argument>, <argument><expr><call><name>getCategory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;
    <expr><name><name>Gauge</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>&gt;</argument_list></name> <name>docsPending</name> <operator>=</operator> <lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>numDocsPending</name><operator>.</operator><name>longValue</name></name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr>;
    <expr><call><name><name>manager</name><operator>.</operator><name>register</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><name>docsPending</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"docsPending"</literal></expr></argument>, <argument><expr><call><name>getCategory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;
    <expr><name><name>Gauge</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>&gt;</argument_list></name> <name>adds</name> <operator>=</operator> <lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>addCommands</name><operator>.</operator><name>longValue</name></name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr>;
    <expr><call><name><name>manager</name><operator>.</operator><name>register</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><name>adds</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"adds"</literal></expr></argument>, <argument><expr><call><name>getCategory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;
    <expr><name><name>Gauge</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>&gt;</argument_list></name> <name>deletesById</name> <operator>=</operator> <lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>deleteByIdCommands</name><operator>.</operator><name>longValue</name></name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr>;
    <expr><call><name><name>manager</name><operator>.</operator><name>register</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><name>deletesById</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"deletesById"</literal></expr></argument>, <argument><expr><call><name>getCategory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;
    <expr><name><name>Gauge</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>&gt;</argument_list></name> <name>deletesByQuery</name> <operator>=</operator> <lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>deleteByQueryCommands</name><operator>.</operator><name>longValue</name></name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr>;
    <expr><call><name><name>manager</name><operator>.</operator><name>register</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><name>deletesByQuery</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"deletesByQuery"</literal></expr></argument>, <argument><expr><call><name>getCategory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;
    <expr><name><name>Gauge</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>&gt;</argument_list></name> <name>errors</name> <operator>=</operator> <lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>numErrors</name><operator>.</operator><name>longValue</name></name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr>;
    <expr><call><name><name>manager</name><operator>.</operator><name>register</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><name>errors</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"errors"</literal></expr></argument>, <argument><expr><call><name>getCategory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;

    <expr><name>addCommandsCumulative</name> <operator>=</operator> <call><name><name>manager</name><operator>.</operator><name>meter</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><literal type="string">"cumulativeAdds"</literal></expr></argument>, <argument><expr><call><name>getCategory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>deleteByIdCommandsCumulative</name> <operator>=</operator> <call><name><name>manager</name><operator>.</operator><name>meter</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><literal type="string">"cumulativeDeletesById"</literal></expr></argument>, <argument><expr><call><name>getCategory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>deleteByQueryCommandsCumulative</name> <operator>=</operator> <call><name><name>manager</name><operator>.</operator><name>meter</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><literal type="string">"cumulativeDeletesByQuery"</literal></expr></argument>, <argument><expr><call><name>getCategory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>numErrorsCumulative</name> <operator>=</operator> <call><name><name>manager</name><operator>.</operator><name>meter</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><literal type="string">"cumulativeErrors"</literal></expr></argument>, <argument><expr><call><name>getCategory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;
  }</block>

   <specifier>private</specifier> <name>void</name> <call><name>deleteAll</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><call><name><name>core</name><operator>.</operator><name>getLogId</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"REMOVING ALL DOCUMENTS FROM INDEX"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
     <decl_stmt><decl><type><name><name>RefCounted</name><argument_list type="generic">&lt;<argument><name>IndexWriter</name></argument>&gt;</argument_list></name></type> <name>iw</name> <init>= <expr><call><name><name>solrCoreState</name><operator>.</operator><name>getIndexWriter</name></name><argument_list>(<argument><expr><name>core</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">192</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">226</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>DirectUpdateHandler2</name> extends <name>UpdateHandler</name> implements <name>SolrCoreState</name>
     <name>int</name> <name>rc</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>
 
     <expr_stmt><expr><call><name><name>addCommands</name><operator>.</operator><name>increment</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>addCommandsCumulative</name><operator>.</operator><name>increment</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>addCommandsCumulative</name><operator>.</operator><name>mark</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
     <comment type="line">// if there is no ID field, don't overwrite</comment>
     <if_stmt><if>if <condition>(<expr><name>idField</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">230</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">264</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>DirectUpdateHandler2</name> extends <name>UpdateHandler</name> implements <name>SolrCoreState</name></expr></expr_stmt>
     </block_content>}</block></if></if_stmt> <finally>finally <block>{<block_content>
       <if_stmt><if>if <condition>(<expr><name>rc</name> <operator>!=</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>
         <expr_stmt><expr><call><name><name>numErrors</name><operator>.</operator><name>increment</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>numErrorsCumulative</name><operator>.</operator><name>increment</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>numErrorsCumulative</name><operator>.</operator><name>mark</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></if> <else>else <block>{<block_content>
         <expr_stmt><expr><call><name><name>numDocsPending</name><operator>.</operator><name>increment</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></else></if_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">368</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">402</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>DirectUpdateHandler2</name> extends <name>UpdateHandler</name> implements <name>SolrCoreState</name>
   @<name>Override</name>
   <specifier>public</specifier> <name>void</name> <call><name>delete</name><argument_list>(<argument><expr><name>DeleteUpdateCommand</name> <name>cmd</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><call><name><name>deleteByIdCommands</name><operator>.</operator><name>increment</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>deleteByIdCommandsCumulative</name><operator>.</operator><name>increment</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>deleteByIdCommandsCumulative</name><operator>.</operator><name>mark</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><name>Term</name></type> <name>deleteTerm</name> <init>= <expr><operator>new</operator> <call><name>Term</name><argument_list>(<argument><expr><call><name><name>idField</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>cmd</name><operator>.</operator><name>getIndexedId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <comment type="line">// SolrCore.verbose("deleteDocuments",deleteTerm,writer);</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">426</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">460</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>DirectUpdateHandler2</name> extends <name>UpdateHandler</name> implements <name>SolrCoreState</name>
   @<name>Override</name>
   <specifier>public</specifier> <name>void</name> <call><name>deleteByQuery</name><argument_list>(<argument><expr><name>DeleteUpdateCommand</name> <name>cmd</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><call><name><name>deleteByQueryCommands</name><operator>.</operator><name>increment</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>deleteByQueryCommandsCumulative</name><operator>.</operator><name>increment</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>deleteByQueryCommandsCumulative</name><operator>.</operator><name>mark</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>boolean</name></type> <name>madeIt</name><init>=<expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
     <try>try <block>{<block_content>
       <decl_stmt><decl><type><name>Query</name></type> <name>q</name> <init>= <expr><call><name>getQuery</name><argument_list>(<argument><expr><name>cmd</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">478</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">512</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>DirectUpdateHandler2</name> extends <name>UpdateHandler</name> implements <name>SolrCoreState</name></expr></expr_stmt>
     </block_content>}</block> <finally>finally <block>{<block_content>
       <if_stmt><if>if <condition>(<expr><operator>!</operator><name>madeIt</name></expr>)</condition> <block>{<block_content>
         <expr_stmt><expr><call><name><name>numErrors</name><operator>.</operator><name>increment</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>numErrorsCumulative</name><operator>.</operator><name>increment</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>numErrorsCumulative</name><operator>.</operator><name>mark</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></if></if_stmt>
     </block_content>}</block></finally></try>
   </block_content>}</block></finally>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">486</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">520</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>DirectUpdateHandler2</name> extends <name>UpdateHandler</name> implements <name>SolrCoreState</name>
 
   @<name>Override</name>
   <specifier>public</specifier> <name>int</name> <call><name>mergeIndexes</name><argument_list>(<argument><expr><name>MergeIndexesCommand</name> <name>cmd</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><call><name><name>mergeIndexesCommands</name><operator>.</operator><name>increment</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>mergeIndexesCommands</name><operator>.</operator><name>mark</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>int</name></type> <name>rc</name></decl>;</decl_stmt>
 
     <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"start "</literal> <operator>+</operator> <name>cmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">540</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">574</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>DirectUpdateHandler2</name> extends <name>UpdateHandler</name> implements <name>SolrCoreState</name>
       <name>error</name><operator>=</operator><literal type="boolean">false</literal></expr>;</expr_stmt>
     }
     finally <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><name>error</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name><name>numErrors</name><operator>.</operator><name>increment</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
      <if_stmt><if>if <condition>(<expr><name>error</name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>numErrors</name><operator>.</operator><name>increment</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>numErrorsCumulative</name><operator>.</operator><name>mark</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
     </block_content>}</block>
   }
 
@<annotation>@</annotation> -<expr_stmt><expr><literal type="number">552</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">589</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>DirectUpdateHandler2</name> extends <name>UpdateHandler</name> implements <name>SolrCoreState</name></expr></expr_stmt>
     }
 
     if <expr_stmt><expr><operator>(</operator><name><name>cmd</name><operator>.</operator><name>optimize</name></name><operator>)</operator> <block>{
      <expr><call><name><name>optimizeCommands</name><operator>.</operator><name>increment</name></name><argument_list>()</argument_list></call></expr>;
      <expr><call><name><name>optimizeCommands</name><operator>.</operator><name>mark</name></name><argument_list>()</argument_list></call></expr>;
     }</block></expr></expr_stmt> <if_stmt><else>else <block>{<block_content>
      <expr_stmt><expr><call><name><name>commitCommands</name><operator>.</operator><name>increment</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <if_stmt><if>if <condition>(<expr><name><name>cmd</name><operator>.</operator><name>expungeDeletes</name></name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name><name>expungeDeleteCommands</name><operator>.</operator><name>increment</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
      <expr_stmt><expr><call><name><name>commitCommands</name><operator>.</operator><name>mark</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <if_stmt><if>if <condition>(<expr><name><name>cmd</name><operator>.</operator><name>expungeDeletes</name></name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name><name>expungeDeleteCommands</name><operator>.</operator><name>mark</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
     </block_content>}</block></else></if_stmt>
 
     <decl_stmt><decl><type><name><name>Future</name><index>[]</index></name></type> <name>waitSearcher</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">674</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">711</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>DirectUpdateHandler2</name> extends <name>UpdateHandler</name> implements <name>SolrCoreState</name>
       <call><name><name>addCommands</name><operator>.</operator><name>reset</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>deleteByIdCommands</name><operator>.</operator><name>reset</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>deleteByQueryCommands</name><operator>.</operator><name>reset</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <if_stmt><if>if <condition>(<expr><name>error</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name><name>numErrors</name><operator>.</operator><name>increment</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
      <if_stmt><if>if <condition>(<expr><name>error</name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>numErrors</name><operator>.</operator><name>increment</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>numErrorsCumulative</name><operator>.</operator><name>mark</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
     }
 
     <comment type="line">// if we are supposed to wait for the searcher to be registered, then we should do it</comment>
@<annotation>@</annotation> -<expr_stmt><expr><literal type="number">702</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">742</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>DirectUpdateHandler2</name> extends <name>UpdateHandler</name> implements <name>SolrCoreState</name>
       <throw>throw <argument_list>new <argument><expr><call><name>UnsupportedOperationException</name><argument_list>(<argument><expr><literal type="string">"Rollback is currently not supported in SolrCloud mode. (SOLR-4895)"</literal></expr></argument>)</argument_list></call></expr></argument></argument_list></throw></expr>;</expr_stmt>
     }
 
    rollbackCommands<expr_stmt><expr><operator>.</operator><call><name>increment</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>rollbackCommands</name><operator>.</operator><name>mark</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><name>boolean</name></type> <name>error</name><init>=<expr><literal type="boolean">true</literal></expr></init></decl>;</decl_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">722</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">762</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>DirectUpdateHandler2</name> extends <name>UpdateHandler</name> implements <name>SolrCoreState</name>
       <name>error</name><operator>=</operator><literal type="boolean">false</literal></expr>;</expr_stmt>
     }
     finally <block>{<block_content>
      <expr_stmt><expr><call><name><name>addCommandsCumulative</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>-</operator><call><name><name>addCommands</name><operator>.</operator><name>sumThenReset</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>deleteByIdCommandsCumulative</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>-</operator><call><name><name>deleteByIdCommands</name><operator>.</operator><name>sumThenReset</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>deleteByQueryCommandsCumulative</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>-</operator><call><name><name>deleteByQueryCommands</name><operator>.</operator><name>sumThenReset</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <if_stmt><if>if <condition>(<expr><name>error</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name><name>numErrors</name><operator>.</operator><name>increment</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
      <expr_stmt><expr><call><name><name>addCommandsCumulative</name><operator>.</operator><name>mark</name></name><argument_list>(<argument><expr><operator>-</operator><call><name><name>addCommands</name><operator>.</operator><name>sumThenReset</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>deleteByIdCommandsCumulative</name><operator>.</operator><name>mark</name></name><argument_list>(<argument><expr><operator>-</operator><call><name><name>deleteByIdCommands</name><operator>.</operator><name>sumThenReset</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>deleteByQueryCommandsCumulative</name><operator>.</operator><name>mark</name></name><argument_list>(<argument><expr><operator>-</operator><call><name><name>deleteByQueryCommands</name><operator>.</operator><name>sumThenReset</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <if_stmt><if>if <condition>(<expr><name>error</name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>numErrors</name><operator>.</operator><name>increment</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>numErrorsCumulative</name><operator>.</operator><name>mark</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
     </block_content>}</block>
   }
 
@<annotation>@</annotation> -<expr_stmt><expr><literal type="number">834</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">877</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>DirectUpdateHandler2</name> extends <name>UpdateHandler</name> implements <name>SolrCoreState</name>
   <specifier>public</specifier> <name>void</name> <call><name>split</name><argument_list>(<argument><expr><name>SplitIndexCommand</name> <name>cmd</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><call><name>commit</name><argument_list>(<argument><expr><operator>new</operator> <call><name>CommitUpdateCommand</name><argument_list>(<argument><expr><name><name>cmd</name><operator>.</operator><name>req</name></name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>SolrIndexSplitter</name></type> <name>splitter</name> <init>= <expr><operator>new</operator> <call><name>SolrIndexSplitter</name><argument_list>(<argument><expr><name>cmd</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>splitter</name><operator>.</operator><name>split</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>splitCommands</name><operator>.</operator><name>mark</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <try>try <block>{<block_content>
      <expr_stmt><expr><call><name><name>splitter</name><operator>.</operator><name>split</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name><name>numErrors</name><operator>.</operator><name>increment</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>numErrorsCumulative</name><operator>.</operator><name>mark</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></catch></try>
   }
 
   <comment type="block" format="javadoc">/**
@@ -873,10 +922,10 @@ public class DirectUpdateHandler2 extends UpdateHandler implements SolrCoreState
   }
 
   private void updateDocument(AddUpdateCommand cmd, IndexWriter writer, Term updateTerm) throws IOException {
    if(cmd.isBlock()){
    if (cmd.isBlock()) {
       log.debug("updateDocuments({})", cmd);
       writer.updateDocuments(updateTerm, cmd);
    }else{
    } else {
       Document luceneDocument = cmd.getLuceneDocument(false);
       log.debug("updateDocument({})", cmd);
       writer.updateDocument(updateTerm, luceneDocument);
@@ -916,7 +965,7 @@ public class DirectUpdateHandler2 extends UpdateHandler implements SolrCoreState
   @Override
   public NamedList getStatistics() {
     NamedList lst = new SimpleOrderedMap();
    lst.add("commits", commitCommands.longValue());
    lst.add("commits", commitCommands.getCount());
     if (commitTracker.getDocsUpperBound() &gt; 0) {
       lst.add("autocommit maxDocs", commitTracker.getDocsUpperBound());
     }
@@ -931,9 +980,9 @@ public class DirectUpdateHandler2 extends UpdateHandler implements SolrCoreState
       lst.add("soft autocommit maxTime", "" + softCommitTracker.getTimeUpperBound() + "ms");
     }
     lst.add("soft autocommits", softCommitTracker.getCommitCount());
    lst.add("optimizes", optimizeCommands.longValue());
    lst.add("rollbacks", rollbackCommands.longValue());
    lst.add("expungeDeletes", expungeDeleteCommands.longValue());
    lst.add("optimizes", optimizeCommands.getCount());
    lst.add("rollbacks", rollbackCommands.getCount());
    lst.add("expungeDeletes", expungeDeleteCommands.getCount());
     lst.add("docsPending", numDocsPending.longValue());
     // pset.size() not synchronized, but it should be fine to access.
     // lst.add("deletesPending", pset.size());
@@ -941,10 +990,10 @@ public class DirectUpdateHandler2 extends UpdateHandler implements SolrCoreState
     lst.add("deletesById", deleteByIdCommands.longValue());
     lst.add("deletesByQuery", deleteByQueryCommands.longValue());
     lst.add("errors", numErrors.longValue());
    lst.add("cumulative_adds", addCommandsCumulative.longValue());
    lst.add("cumulative_deletesById", deleteByIdCommandsCumulative.longValue());
    lst.add("cumulative_deletesByQuery", deleteByQueryCommandsCumulative.longValue());
    lst.add("cumulative_errors", numErrorsCumulative.longValue());
    lst.add("cumulative_adds", addCommandsCumulative.getCount());
    lst.add("cumulative_deletesById", deleteByIdCommandsCumulative.getCount());
    lst.add("cumulative_deletesByQuery", deleteByQueryCommandsCumulative.getCount());
    lst.add("cumulative_errors", numErrorsCumulative.getCount());
     if (this.ulog != null) {
       lst.add("transaction_logs_total_size", ulog.getTotalLogsSize());
       lst.add("transaction_logs_total_number", ulog.getTotalLogsNumber());
@@ -971,4 +1020,5 @@ public class DirectUpdateHandler2 extends UpdateHandler implements SolrCoreState
   public CommitTracker getSoftCommitTracker() {
     return softCommitTracker;
   }

 }
diff --git a/solr/core/src/test/org/apache/solr/update/DirectUpdateHandlerTest.java b/solr/core/src/test/org/apache/solr/update/DirectUpdateHandlerTest.java
index ca604fed5f8..281635435e4 100644
-- a/solr/core/src/test/org/apache/solr/update/DirectUpdateHandlerTest.java
++ b/solr/core/src/test/org/apache/solr/update/DirectUpdateHandlerTest.java
@@ -23,6 +23,9 @@ import java.util.Map;
 import java.util.concurrent.atomic.AtomicInteger;
 import java.util.concurrent.atomic.AtomicLong;
 
import com.codahale.metrics.Gauge;
import com.codahale.metrics.Meter;
import com.codahale.metrics.Metric;
 import org.apache.lucene.index.TieredMergePolicy;
 import org.apache.lucene.index.DirectoryReader;
 import org.apache.lucene.store.Directory;
@@ -99,7 +102,29 @@ public class DirectUpdateHandlerTest extends SolrTestCaseJ4 {
 
   @Test
   public void testBasics() throws Exception {
    

    // get initial metrics
    Map&lt;String, Metric&gt; metrics = h.getCoreContainer().getMetricManager()
        .registry(h.getCore().getCoreMetricManager().getRegistryName()).getMetrics();

    String PREFIX = "UPDATE.updateHandler.";

    String commitsName = PREFIX + "commits";
    assertTrue(metrics.containsKey(commitsName));
    String addsName = PREFIX + "adds";
    assertTrue(metrics.containsKey(addsName));
    String cumulativeAddsName = PREFIX + "cumulativeAdds";
    String delsIName = PREFIX + "deletesById";
    String cumulativeDelsIName = PREFIX + "cumulativeDeletesById";
    String delsQName = PREFIX + "deletesByQuery";
    String cumulativeDelsQName = PREFIX + "cumulativeDeletesByQuery";
    long commits = ((Meter) metrics.get(commitsName)).getCount();
    long adds = ((Gauge&lt;Long&gt;) metrics.get(addsName)).getValue();
    long cumulativeAdds = ((Meter) metrics.get(cumulativeAddsName)).getCount();
    long cumulativeDelsI = ((Meter) metrics.get(cumulativeDelsIName)).getCount();
    long cumulativeDelsQ = ((Meter) metrics.get(cumulativeDelsQName)).getCount();


     assertNull("This test requires a schema that has no version field, " +
                "it appears the schema file in use has been edited to violate " +
                "this requirement",
@@ -112,8 +137,23 @@ public class DirectUpdateHandlerTest extends SolrTestCaseJ4 {
     assertQ(req("q","id:5"), "//*[@numFound='0']");
     assertQ(req("q","id:6"), "//*[@numFound='0']");
 
    long newAdds = ((Gauge&lt;Long&gt;) metrics.get(addsName)).getValue();
    long newCumulativeAdds = ((Meter) metrics.get(cumulativeAddsName)).getCount();
    assertEquals("new adds", 2, newAdds - adds);
    assertEquals("new cumulative adds", 2, newCumulativeAdds - cumulativeAdds);

     assertU(commit());
 
    long newCommits = ((Meter) metrics.get(commitsName)).getCount();
    assertEquals("new commits", 1, newCommits - commits);

    newAdds = ((Gauge&lt;Long&gt;) metrics.get(addsName)).getValue();
    newCumulativeAdds = ((Meter) metrics.get(cumulativeAddsName)).getCount();
    // adds should be reset to 0 after commit
    assertEquals("new adds after commit", 0, newAdds);
    // not so with cumulative ones!
    assertEquals("new cumulative adds after commit", 2, newCumulativeAdds - cumulativeAdds);

     // now they should be there
     assertQ(req("q","id:5"), "//*[@numFound='1']");
     assertQ(req("q","id:6"), "//*[@numFound='1']");
@@ -121,11 +161,21 @@ public class DirectUpdateHandlerTest extends SolrTestCaseJ4 {
     // now delete one
     assertU(delI("5"));
 
    long newDelsI = ((Gauge&lt;Long&gt;) metrics.get(delsIName)).getValue();
    long newCumulativeDelsI = ((Meter) metrics.get(cumulativeDelsIName)).getCount();
    assertEquals("new delsI", 1, newDelsI);
    assertEquals("new cumulative delsI", 1, newCumulativeDelsI - cumulativeDelsI);

     // not committed yet
     assertQ(req("q","id:5"), "//*[@numFound='1']");
 
     assertU(commit());
    
    // delsI should be reset to 0 after commit
    newDelsI = ((Gauge&lt;Long&gt;) metrics.get(delsIName)).getValue();
    newCumulativeDelsI = ((Meter) metrics.get(cumulativeDelsIName)).getCount();
    assertEquals("new delsI after commit", 0, newDelsI);
    assertEquals("new cumulative delsI after commit", 1, newCumulativeDelsI - cumulativeDelsI);

     // 5 should be gone
     assertQ(req("q","id:5"), "//*[@numFound='0']");
     assertQ(req("q","id:6"), "//*[@numFound='1']");
@@ -133,14 +183,36 @@ public class DirectUpdateHandlerTest extends SolrTestCaseJ4 {
     // now delete all
     assertU(delQ("*:*"));
 
    long newDelsQ = ((Gauge&lt;Long&gt;) metrics.get(delsQName)).getValue();
    long newCumulativeDelsQ = ((Meter) metrics.get(cumulativeDelsQName)).getCount();
    assertEquals("new delsQ", 1, newDelsQ);
    assertEquals("new cumulative delsQ", 1, newCumulativeDelsQ - cumulativeDelsQ);

     // not committed yet
     assertQ(req("q","id:6"), "//*[@numFound='1']");
 
     assertU(commit());
 
    newDelsQ = ((Gauge&lt;Long&gt;) metrics.get(delsQName)).getValue();
    newCumulativeDelsQ = ((Meter) metrics.get(cumulativeDelsQName)).getCount();
    assertEquals("new delsQ after commit", 0, newDelsQ);
    assertEquals("new cumulative delsQ after commit", 1, newCumulativeDelsQ - cumulativeDelsQ);

     // 6 should be gone
     assertQ(req("q","id:6"), "//*[@numFound='0']");
 
    // verify final metrics
    newCommits = ((Meter) metrics.get(commitsName)).getCount();
    assertEquals("new commits", 3, newCommits - commits);
    newAdds = ((Gauge&lt;Long&gt;) metrics.get(addsName)).getValue();
    assertEquals("new adds", 0, newAdds);
    newCumulativeAdds = ((Meter) metrics.get(cumulativeAddsName)).getCount();
    assertEquals("new cumulative adds", 2, newCumulativeAdds - cumulativeAdds);
    newDelsI = ((Gauge&lt;Long&gt;) metrics.get(delsIName)).getValue();
    assertEquals("new delsI", 0, newDelsI);
    newCumulativeDelsI = ((Meter) metrics.get(cumulativeDelsIName)).getCount();
    assertEquals("new cumulative delsI", 1, newCumulativeDelsI - cumulativeDelsI);

   }
 
 
@@ -161,12 +233,12 @@ public class DirectUpdateHandlerTest extends SolrTestCaseJ4 {
     CommitUpdateCommand cmtCmd = new CommitUpdateCommand(ureq, false);
     cmtCmd.waitSearcher = true;
     assertEquals( 1, duh2.addCommands.longValue() );
    assertEquals( 1, duh2.addCommandsCumulative.longValue() );
    assertEquals( 0, duh2.commitCommands.longValue() );
    assertEquals( 1, duh2.addCommandsCumulative.getCount() );
    assertEquals( 0, duh2.commitCommands.getCount() );
     updater.commit(cmtCmd);
     assertEquals( 0, duh2.addCommands.longValue() );
    assertEquals( 1, duh2.addCommandsCumulative.longValue() );
    assertEquals( 1, duh2.commitCommands.longValue() );
    assertEquals( 1, duh2.addCommandsCumulative.getCount() );
    assertEquals( 1, duh2.commitCommands.getCount() );
     ureq.close();
 
     assertU(adoc("id","B"));
@@ -175,12 +247,12 @@ public class DirectUpdateHandlerTest extends SolrTestCaseJ4 {
     ureq = req();
     RollbackUpdateCommand rbkCmd = new RollbackUpdateCommand(ureq);
     assertEquals( 1, duh2.addCommands.longValue() );
    assertEquals( 2, duh2.addCommandsCumulative.longValue() );
    assertEquals( 0, duh2.rollbackCommands.longValue() );
    assertEquals( 2, duh2.addCommandsCumulative.getCount() );
    assertEquals( 0, duh2.rollbackCommands.getCount() );
     updater.rollback(rbkCmd);
     assertEquals( 0, duh2.addCommands.longValue() );
    assertEquals( 1, duh2.addCommandsCumulative.longValue() );
    assertEquals( 1, duh2.rollbackCommands.longValue() );
    assertEquals( 1, duh2.addCommandsCumulative.getCount() );
    assertEquals( 1, duh2.rollbackCommands.getCount() );
     ureq.close();
     
     // search - "B" should not be found.
@@ -221,12 +293,12 @@ public class DirectUpdateHandlerTest extends SolrTestCaseJ4 {
     CommitUpdateCommand cmtCmd = new CommitUpdateCommand(ureq, false);
     cmtCmd.waitSearcher = true;
     assertEquals( 2, duh2.addCommands.longValue() );
    assertEquals( 2, duh2.addCommandsCumulative.longValue() );
    assertEquals( 0, duh2.commitCommands.longValue() );
    assertEquals( 2, duh2.addCommandsCumulative.getCount() );
    assertEquals( 0, duh2.commitCommands.getCount() );
     updater.commit(cmtCmd);
     assertEquals( 0, duh2.addCommands.longValue() );
    assertEquals( 2, duh2.addCommandsCumulative.longValue() );
    assertEquals( 1, duh2.commitCommands.longValue() );
    assertEquals( 2, duh2.addCommandsCumulative.getCount() );
    assertEquals( 1, duh2.commitCommands.getCount() );
     ureq.close();
 
     // search - "A","B" should be found.
@@ -254,13 +326,13 @@ public class DirectUpdateHandlerTest extends SolrTestCaseJ4 {
     ureq = req();
     RollbackUpdateCommand rbkCmd = new RollbackUpdateCommand(ureq);
     assertEquals( 1, duh2.deleteByIdCommands.longValue() );
    assertEquals( 1, duh2.deleteByIdCommandsCumulative.longValue() );
    assertEquals( 0, duh2.rollbackCommands.longValue() );
    assertEquals( 1, duh2.deleteByIdCommandsCumulative.getCount() );
    assertEquals( 0, duh2.rollbackCommands.getCount() );
     updater.rollback(rbkCmd);
     ureq.close();
     assertEquals( 0, duh2.deleteByIdCommands.longValue() );
    assertEquals( 0, duh2.deleteByIdCommandsCumulative.longValue() );
    assertEquals( 1, duh2.rollbackCommands.longValue() );
    assertEquals( 0, duh2.deleteByIdCommandsCumulative.getCount() );
    assertEquals( 1, duh2.rollbackCommands.getCount() );
     
     // search - "B" should be found.
     assertQ("\"B\" should be found.", req
- 
2.19.1.windows.1

</comment></unit>
