<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/lucene/6efeb6196f.java"><expr_stmt><expr><name>From</name> <literal type="number">6efeb6196f65f4a7d59ea24672136c65ddd7b335</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Koji</name> <name><name>Sekiguchi</name> <argument_list type="generic">&lt;<argument><name>koji</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Mon</name></expr><operator>,</operator> <expr><literal type="number">1</literal> <name>Mar</name> <literal type="number">2010</literal> <literal type="number">14</literal><operator>:</operator><literal type="number">27</literal><operator>:</operator><literal type="number">45</literal> <operator>+</operator><literal type="number">0000</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>SOLR</name><operator>-</operator><literal type="number">1297</literal><operator>:</operator> <name>fix</name></expr></expr_stmt> <for>for more deep function

git-svn-id: https:<comment type="line">//svn.apache.org/repos/asf/lucene/solr/trunk@917547 13f79535-47bb-0310-9956-ffa450edef68</comment>
--
 src/java/org/apache/solr/search/QueryParsing.java     <operator>|</operator> 2 +-
 src/test/org/apache/solr/search/QueryParsingTest.java <operator>|</operator> 6 ++++++
 2 files changed<operator>,</operator> <expr_stmt><expr><literal type="number">7</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">1</literal> <call><name>deletion</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>QueryParsing</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>QueryParsing</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>ea721f72a94</name><operator>..</operator><name>e7eef5467a6</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>QueryParsing</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>QueryParsing</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">264</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">264</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>QueryParsing</name> <block>{
             <expr><name>needOrder</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;
           }</block></expr></expr_stmt></for>
         }
      } <if_stmt><if type="elseif">else if <condition>(<expr><name><name>chars</name><index>[<expr><name>i</name></expr>]</index></name> <operator>==</operator> <literal type="char">'('</literal> <operator>&amp;&amp;</operator> <name>functionDepth</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
      </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name><name>chars</name><index>[<expr><name>i</name></expr>]</index></name> <operator>==</operator> <literal type="char">'('</literal> <operator>&amp;&amp;</operator> <name>functionDepth</name> <operator>&gt;=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
         <expr_stmt><expr><call><name><name>buffer</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><name><name>chars</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><name>functionDepth</name><operator>++</operator></expr>;</expr_stmt>
       </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name><name>chars</name><index>[<expr><name>i</name></expr>]</index></name> <operator>==</operator> <literal type="char">')'</literal> <operator>&amp;&amp;</operator> <name>functionDepth</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>QueryParsingTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>QueryParsingTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>af4ec9daea2</name><operator>..</operator><literal type="number">637253c5c05</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>QueryParsingTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>QueryParsingTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">100</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">100</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>QueryParsingTest</name> extends <name>AbstractSolrTestCase</name> <block>{
     <comment type="line">//Not thrilled about the fragility of string matching here, but...</comment>
     <comment type="line">//the value sources get wrapped, so the out field is different than the input</comment>
     <expr><call><name>assertEquals</name><argument_list>(<argument><expr><name><name>flds</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><call><name>getField</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"pow(float(weight),const(2.0))"</literal></expr></argument>)</argument_list></call></expr>;
    
    <comment type="line">//test functions (more deep)</comment>
    <name>sort</name> <operator>=</operator> <call><name><name>QueryParsing</name><operator>.</operator><name>parseSort</name></name><argument_list>(<argument><expr><literal type="string">"sum(product(r_f,sum(d_f,t_f,1)),a_f) asc"</literal></expr></argument>, <argument><expr><name>schema</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><name>flds</name> <operator>=</operator> <call><name><name>sort</name><operator>.</operator><name>getSort</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name><name>flds</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><call><name>getType</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>SortField</name><operator>.</operator><name>CUSTOM</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name><name>flds</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><call><name>getField</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"sum(product(float(r_f),sum(float(d_f),float(t_f),const(1.0))),float(a_f))"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <expr_stmt><expr><name>sort</name> <operator>=</operator> <call><name><name>QueryParsing</name><operator>.</operator><name>parseSort</name></name><argument_list>(<argument><expr><literal type="string">"pow(weight,                 2)         desc"</literal></expr></argument>, <argument><expr><name>schema</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>flds</name> <operator>=</operator> <call><name><name>sort</name><operator>.</operator><name>getSort</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></expr_stmt></block_content></block></if></if_stmt>

</unit>
