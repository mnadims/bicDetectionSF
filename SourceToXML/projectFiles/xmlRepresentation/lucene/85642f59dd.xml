<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/lucene/85642f59dd.java"><expr_stmt><expr><name>From</name> <literal type="number">85642f59ddf00c469b502f46fbc39944e076190e</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Adrien</name> <name><name>Grand</name> <argument_list type="generic">&lt;<argument><name>jpountz</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Fri</name></expr><operator>,</operator> <expr><literal type="number">4</literal> <name>Apr</name> <literal type="number">2014</literal> <literal type="number">15</literal><operator>:</operator><literal type="number">31</literal><operator>:</operator><literal type="number">00</literal> <operator>+</operator><literal type="number">0000</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>LUCENE</name><operator>-</operator><literal type="number">5527</literal><operator>:</operator> <name>Refactor</name> <name>Collector</name> <name>API</name> <name>to</name> <name>use</name> <name>a</name> <name>dedicated</name>
 <name>Collector</name> <name>per</name> <name><name>leaf</name><operator>.</operator>

<name>git</name></name><operator>-</operator><name>svn</name><operator>-</operator><name>id</name><operator>:</operator> <name>https</name><operator>:</operator><comment type="line">//svn.apache.org/repos/asf/lucene/dev/trunk@1584747 13f79535-47bb-0310-9956-ffa450edef68</comment>
<operator>--</operator>
 <name>lucene</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>                            <operator>|</operator>   <literal type="number">3</literal> <operator>+</operator>
 <name>lucene</name><operator>/</operator><name><name>MIGRATE</name><operator>.</operator><name>txt</name></name>                            <operator>|</operator>   <literal type="number">7</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>BooleanScorer</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">15</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>BulkScorer</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>CachingCollector</name><operator>.</operator><name>java</name></name>       <operator>|</operator> <literal type="number">478</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>search</name><operator>/</operator><name><name>CollectionTerminatedException</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>Collector</name><operator>.</operator><name>java</name></name>   <operator>|</operator> <literal type="number">121</literal> <operator>+</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>ConstantScoreQuery</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">23</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>FakeScorer</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>FilterCollector</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">48</literal> <operator>++</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>FilterLeafCollector</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">56</literal> <operator>++</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>FilteredQuery</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>IndexSearcher</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">19</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>LeafCollector</name><operator>.</operator><name>java</name></name>   <operator>|</operator> <literal type="number">121</literal> <operator>++</operator><operator>++</operator><operator>+</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>MultiCollector</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">65</literal> <operator>++</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>search</name><operator>/</operator><name><name>PositiveScoresOnlyCollector</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">51</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>search</name><operator>/</operator><name><name>ScoreCachingWrappingScorer</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>Scorer</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SimpleCollector</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">53</literal> <operator>++</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SortRescorer</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TimeLimitingCollector</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">55</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TopDocsCollector</name><operator>.</operator><name>java</name></name>       <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TopFieldCollector</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TopScoreDocCollector</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">14</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TotalHitCountCollector</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">11</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>Weight</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator></expr></expr_stmt><package>package.<name>html</name>     <operator>|</operator>   4 +-
 .../<name>org</name>/<name>apache</name>/<name>lucene</name>/<name>index</name>/<name><name>TestOmitTf</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   8 +-
 .../<name>lucene</name>/<name>search</name>/<name><name>JustCompileSearch</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   8 +-
 .../<name>lucene</name>/<name>search</name>/<name><name>MultiCollectorTest</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  22 +-
 .../<name>apache</name>/<name>lucene</name>/<name>search</name>/<name><name>TestBooleanOr</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   9 +-
 .../<name><name>TestBooleanQueryVisitSubscorers</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  66 +--
 .../<name>lucene</name>/<name>search</name>/<name><name>TestBooleanScorer</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  14 +-
 .../<name>lucene</name>/<name>search</name>/<name><name>TestCachingCollector</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  58 +--
 .../<name>lucene</name>/<name>search</name>/<name><name>TestConstantScoreQuery</name><operator>.</operator><name>java</name></name> <operator>|</operator>   6 +-
 .../<name>apache</name>/<name>lucene</name>/<name>search</name>/<name><name>TestDocBoost</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   4 +-
 .../<name>lucene</name>/<name>search</name>/<name><name>TestEarlyTermination</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   7 +-
 .../<name>search</name>/<name><name>TestMultiTermConstantScore</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   4 +-
 .../<name><name>TestPositiveScoresOnlyCollector</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   7 +-
 .../<name><name>TestScoreCachingWrappingScorer</name><operator>.</operator><name>java</name></name>       <operator>|</operator>   5 +-
 .../<name>apache</name>/<name>lucene</name>/<name>search</name>/<name><name>TestScorerPerf</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   7 +-
 .../<name>apache</name>/<name>lucene</name>/<name>search</name>/<name><name>TestSimilarity</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  17 +-
 .../<name>lucene</name>/<name>search</name>/<name><name>TestSloppyPhraseQuery</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  13 +-
 .../<name>lucene</name>/<name>search</name>/<name><name>TestSubScorerFreqs</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  60 +--
 .../<name>apache</name>/<name>lucene</name>/<name>search</name>/<name><name>TestTermScorer</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   4 +-
 .../<name>search</name>/<name><name>TestTimeLimitingCollector</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   4 +-
 .../<name>lucene</name>/<name>search</name>/<name><name>TestTopDocsCollector</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   2 +-
 .../<name>apache</name>/<name>lucene</name>/<name>facet</name>/<name><name>DrillSideways</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   3 +-
 .../<name>lucene</name>/<name>facet</name>/<name><name>DrillSidewaysScorer</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  45 +-
 .../<name>apache</name>/<name>lucene</name>/<name>facet</name>/<name><name>FacetsCollector</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   7 +-
 .../<name><name>AssertingSubDocsAtOnceCollector</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  11 +-
 .../<name>lucene</name>/<name>facet</name>/<name><name>TestDrillSideways</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  10 +-
 .../<name><name>AbstractAllGroupHeadsCollector</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  10 +-
 .../<name>grouping</name>/<name><name>AbstractAllGroupsCollector</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  10 +-
 .../<name><name>AbstractDistinctValuesCollector</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  14 +-
 .../<name><name>AbstractFirstPassGroupingCollector</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   4 +-
 .../<name>grouping</name>/<name><name>AbstractGroupFacetCollector</name><operator>.</operator><name>java</name></name> <operator>|</operator>   3 +-
 .../<name><name>AbstractSecondPassGroupingCollector</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   6 +-
 .../<name>grouping</name>/<name><name>BlockGroupingCollector</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   6 +-
 .../<name><name>FunctionAllGroupHeadsCollector</name><operator>.</operator><name>java</name></name>       <operator>|</operator>   3 +-
 .../<name>function</name>/<name><name>FunctionAllGroupsCollector</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   3 +-
 .../<name><name>FunctionDistinctValuesCollector</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   3 +-
 .../<name><name>FunctionFirstPassGroupingCollector</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   5 +-
 .../<name><name>FunctionSecondPassGroupingCollector</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   5 +-
 .../<name>term</name>/<name><name>TermAllGroupHeadsCollector</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   9 +-
 .../<name>grouping</name>/<name>term</name>/<name><name>TermAllGroupsCollector</name><operator>.</operator><name>java</name></name> <operator>|</operator>   3 +-
 .../<name>term</name>/<name><name>TermDistinctValuesCollector</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   3 +-
 .../<name>term</name>/<name><name>TermFirstPassGroupingCollector</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   5 +-
 .../<name>term</name>/<name><name>TermGroupFacetCollector</name><operator>.</operator><name>java</name></name>         <operator>|</operator>   5 +-
 .../<name>term</name>/<name><name>TermSecondPassGroupingCollector</name><operator>.</operator><name>java</name></name> <operator>|</operator>   5 +-
 .../<name>highlight</name>/<name><name>HighlighterPhraseTest</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   7 +-
 .../<name>apache</name>/<name>lucene</name>/<name>search</name>/<name>join</name>/<name><name>FakeScorer</name><operator>.</operator><name>java</name></name> <operator>|</operator>   4 +-
 .../<name>lucene</name>/<name>search</name>/<name>join</name>/<name><name>TermsCollector</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  12 +-
 .../<name>search</name>/<name>join</name>/<name><name>TermsIncludingScoreQuery</name><operator>.</operator><name>java</name></name> <operator>|</operator>   3 +-
 .../<name>search</name>/<name>join</name>/<name><name>TermsWithScoreCollector</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   8 +-
 .../<name>join</name>/<name><name>ToParentBlockJoinCollector</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   6 +-
 .../<name>lucene</name>/<name>search</name>/<name>join</name>/<name><name>TestJoinUtil</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  32 +-
 .../<name>lucene</name>/<name>index</name>/<name>memory</name>/<name><name>MemoryIndex</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   5 +-
 .../<name><name>EarlyTerminatingSortingCollector</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  64 ++-
 .../<name>index</name>/<name>sorter</name>/<name><name>TestEarlyTermination</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   8 +-
 .../<name>surround</name>/<name>query</name>/<name><name>BooleanQueryTst</name><operator>.</operator><name>java</name></name>       <operator>|</operator>   8 +-
 .../<name>search</name>/<name><name>AssertingBulkOutOfOrderScorer</name><operator>.</operator><name>java</name></name> <operator>|</operator>   4 +-
 .../<name>lucene</name>/<name>search</name>/<name><name>AssertingBulkScorer</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   8 +-
 .../<name>lucene</name>/<name>search</name>/<name><name>AssertingCollector</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  42 +-
 .../<name>org</name>/<name>apache</name>/<name>lucene</name>/<name>search</name>/<name><name>CheckHits</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   8 +-
 .../<name>org</name>/<name>apache</name>/<name>lucene</name>/<name>search</name>/<name><name>QueryUtils</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   8 +-
 .../<name>accumulator</name>/<name><name>BasicAccumulator</name><operator>.</operator><name>java</name></name>         <operator>|</operator>   2 +-
 .../<name>accumulator</name>/<name><name>FacetingAccumulator</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  10 +-
 .../<name>accumulator</name>/<name><name>ValueAccumulator</name><operator>.</operator><name>java</name></name>         <operator>|</operator>  17 +-
 .../<name>facet</name>/<name><name>FieldFacetAccumulator</name><operator>.</operator><name>java</name></name>          <operator>|</operator>   2 +-
 .../<name>facet</name>/<name><name>QueryFacetAccumulator</name><operator>.</operator><name>java</name></name>          <operator>|</operator>   2 +-
 .../<name>facet</name>/<name><name>RangeFacetAccumulator</name><operator>.</operator><name>java</name></name>          <operator>|</operator>   2 +-
 .../<name>analytics</name>/<name>request</name>/<name><name>AnalyticsStats</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   2 +-
 .../<name>handler</name>/<name>component</name>/<name><name>ExpandComponent</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  75 +--
 .../<name>org</name>/<name>apache</name>/<name>solr</name>/<name>schema</name>/<name><name>LatLonType</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   9 +-
 .../<name>solr</name>/<name>search</name>/<name><name>CollapsingQParserPlugin</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  32 +-
 .../<name>solr</name>/<name>search</name>/<name><name>DelegatingCollector</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  22 +-
 .../<name>apache</name>/<name>solr</name>/<name>search</name>/<name><name>DocSetCollector</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   7 +-
 .../<name>solr</name>/<name>search</name>/<name><name>DocSetDelegateCollector</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  84 ---
 .../<name>search</name>/<name><name>EarlyTerminatingCollector</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  69 +--
 .../<name>solr</name>/<name>search</name>/<name><name>FunctionRangeQuery</name><operator>.</operator><name>java</name></name>       <operator>|</operator>   9 +-
 .../<name>java</name>/<name>org</name>/<name>apache</name>/<name>solr</name>/<name>search</name>/<name><name>Grouping</name><operator>.</operator><name>java</name></name> <operator>|</operator>   6 +-
 .../<name>apache</name>/<name>solr</name>/<name>search</name>/<name><name>SolrIndexSearcher</name><operator>.</operator><name>java</name></name> <operator>|</operator>  65 ++-
 .../<name>solr</name>/<name>search</name>/<name>grouping</name>/<name><name>CommandHandler</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  15 +-
 .../<name>grouping</name>/<name>collector</name>/<name><name>FilterCollector</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  48 +-
 .../<name>test</name>/<name>org</name>/<name>apache</name>/<name>solr</name>/<name>search</name>/<name><name>TestSort</name><operator>.</operator><name>java</name></name> <operator>|</operator>  34 +-
 106 <name>files</name> <name>changed</name><operator>,</operator> 1174 <name>insertions</name>(+</package>)<operator>,</operator> <expr_stmt><expr><literal type="number">1242</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>FilterCollector</name><operator>.</operator><name>java</name></name>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>FilterLeafCollector</name><operator>.</operator><name>java</name></name>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>LeafCollector</name><operator>.</operator><name>java</name></name>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SimpleCollector</name><operator>.</operator><name>java</name></name>
 <name>delete</name> <name>mode</name> <literal type="number">100644</literal> <name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>DocSetDelegateCollector</name><operator>.</operator><name>java</name></name>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
<name>index</name> <literal type="number">79911beb6c6</literal><operator>..</operator><name>a0a266bebb8</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
@@ <operator>-</operator><literal type="number">50</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">50</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <name>API</name> <name>Changes</name>
   <name>via</name> <name><name>setReader</name><operator>.</operator></name>  
   (<name>Benson</name> <name>Margulies</name> <name>via</name> <name>Robert</name> <name>Muir</name> <operator>-</operator> <name>pull</name> <name>request</name> <operator>#</operator><literal type="number">16</literal></expr></expr_stmt>)
 
<expr_stmt><expr><operator>*</operator> <name>LUCENE</name><operator>-</operator><literal type="number">5527</literal><operator>:</operator> <name>The</name> <name>Collector</name> <name>API</name> <name>has</name> <name>been</name> <name>refactored</name> <name>to</name> <name>use</name> <name>a</name> <name>dedicated</name> <name>Collector</name>
  <name>per</name> <name><name>leaf</name><operator>.</operator></name> (<name>Shikhar</name> <name>Bhushan</name></expr><operator>,</operator> <expr><name>Adrien</name> <name>Grand</name></expr></expr_stmt>)

 <expr_stmt><expr><name>Documentation</name>
 
 <operator>*</operator> <name>LUCENE</name><operator>-</operator><literal type="number">5392</literal><operator>:</operator> <name>Add</name><operator>/</operator><name>improve</name> <name>analysis</name></expr></expr_stmt> <package>package <name>documentation</name> <name>to</name> <name>reflect</name>
<name>diff</name> --<name>git</name> <name>a</name>/<name>lucene</name>/<name><name>MIGRATE</name><operator>.</operator><name>txt</name></name> <name>b</name>/<name>lucene</name>/<name><name>MIGRATE</name><operator>.</operator><name>txt</name></name>
<name>index</name> 6e26ad6b58d..7cbc53fbc08 100644
-- <name>a</name>/<name>lucene</name>/<name><name>MIGRATE</name><operator>.</operator><name>txt</name></name>
++ <name>b</name>/<name>lucene</name>/<name><name>MIGRATE</name><operator>.</operator><name>txt</name></name>
@@ -12<operator>,</operator>3 +12<operator>,</operator>10 @@ <name>of</name> <name>the</name> return <name>type</name> <name>is</name> <name>enough</name> <name>to</name> <name><name>upgrade</name><operator>.</operator>
 <name>The</name></name> <name>constructor</name> <name>of</name> <name>Tokenizer</name> <name>no</name> <name>longer</name> <name>takes</name> <name>Reader</name><operator>,</operator> <name>as</name> <name>this</name> <name>was</name> <name>a</name> <name>leftover</name>
 <name>from</name> <name>before</name> <name>it</name> <name>was</name> <name><name>reusable</name><operator>.</operator> <name>See</name></name> <name>the</name> <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name></name> package
 <name>documentation</name> for <name>more</name> <name><name>details</name><operator>.</operator></name>

## <name>Refactored</name> <name>Collector</name> <name>API</name> (<name>LUCENE</name>-5299</package>)

<expr_stmt><expr><name>The</name> <name>Collector</name> <name>API</name> <name>has</name> <name>been</name> <name>refactored</name> <name>to</name> <name>use</name> <name>a</name> <name>different</name> <name>Collector</name> <name>instance</name>
<name>per</name> <name><name>segment</name><operator>.</operator> <name>It</name></name> <name>is</name> <name>possible</name> <name>to</name> <name>migrate</name> <name>existing</name> <name>collectors</name> <name>painlessly</name> <name>by</name>
<name>extending</name> <name>SimpleCollector</name> <name>instead</name> <name>of</name> <name>Collector</name><operator>:</operator> <name>SimpleCollector</name> <name>is</name> <name>a</name>
<name>specialization</name> <name>of</name> <name>Collector</name> <name>that</name> <name>returns</name> <name>itself</name> <name>as</name> <name>a</name> <name>per</name><operator>-</operator><name>segment</name> <name><name>Collector</name><operator>.</operator>
<name>diff</name></name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>BooleanScorer</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>BooleanScorer</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">7c2b6aa38ca</literal><operator>..</operator><literal type="number">173bb44760b</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>BooleanScorer</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>BooleanScorer</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">61</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">61</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>BooleanQuery</name><operator>.</operator><name>BooleanWeight</name></name>;</import>
 
 <class><specifier>final</specifier> class <name>BooleanScorer</name> <super_list><extends>extends <super><name>BulkScorer</name></super></extends></super_list> <block>{
   
  <class><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> class <name>BooleanScorerCollector</name> <super_list><extends>extends <super><name>Collector</name></super></extends></super_list> <block>{
  <class><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> class <name>BooleanScorerCollector</name> <super_list><extends>extends <super><name>SimpleCollector</name></super></extends></super_list> <block>{
     <decl_stmt><decl><type><specifier>private</specifier> <name>BucketTable</name></type> <name>bucketTable</name></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>private</specifier> <name>int</name></type> <name>mask</name></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>private</specifier> <name>Scorer</name></type> <name>scorer</name></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">92</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">92</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <name>final</name> <name>class</name> <name>BooleanScorer</name> extends <name>BulkScorer</name> <block>{
       }</block></expr></expr_stmt>
     }</block></class>
     
    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <comment type="line">// not needed by this implementation</comment>
    </block_content>}</block></function>
    
     <function><annotation>@<name>Override</name></annotation>
     <type><specifier>public</specifier> <name>void</name></type> <name>setScorer</name><parameter_list>(<parameter><decl><type><name>Scorer</name></type> <name>scorer</name></decl></parameter>)</parameter_list> <block>{<block_content>
       <expr_stmt><expr><name><name>this</name><operator>.</operator><name>scorer</name></name> <operator>=</operator> <name>scorer</name></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">136</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">131</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <name>final</name> <name>class</name> <name>BooleanScorer</name> extends <name>BulkScorer</name> <block>{
       }</block></expr></expr_stmt>
     </block_content>}</block></function>
 
    <function><type><specifier>public</specifier> <name>Collector</name></type> <name>newCollector</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>mask</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <function><type><specifier>public</specifier> <name>LeafCollector</name></type> <name>newCollector</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>mask</name></decl></parameter>)</parameter_list> <block>{<block_content>
       <return>return <expr><operator>new</operator> <call><name>BooleanScorerCollector</name><argument_list>(<argument><expr><name>mask</name></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block></function>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">148</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">143</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <name>final</name> <name>class</name> <name>BooleanScorer</name> extends <name>BulkScorer</name> <block>{
     <comment type="line">// TODO: re-enable this if BQ ever sends us required clauses</comment>
     <comment type="line">//public boolean required = false;</comment>
     <expr><specifier>public</specifier> <name>boolean</name> <name>prohibited</name></expr>;
    <expr><specifier>public</specifier> <name>Collector</name> <name>collector</name></expr>;
    <expr><specifier>public</specifier> <name>LeafCollector</name> <name>collector</name></expr>;
     <expr><specifier>public</specifier> <name>SubScorer</name> <name>next</name></expr>;
     <expr><specifier>public</specifier> <name>boolean</name> <name>more</name></expr>;
 
     <expr><specifier>public</specifier> <call><name>SubScorer</name><argument_list>(<argument><expr><name>BulkScorer</name> <name>scorer</name></expr></argument>, <argument><expr><name>boolean</name> <name>required</name></expr></argument>, <argument><expr><name>boolean</name> <name>prohibited</name></expr></argument>,
        <argument><expr><name>Collector</name> <name>collector</name></expr></argument>, <argument><expr><name>SubScorer</name> <name>next</name></expr></argument>)</argument_list></call> <block>{
        <expr><name>LeafCollector</name> <name>collector</name></expr>, <expr><name>SubScorer</name> <name>next</name></expr>) <block>{
       <if_stmt><if>if <condition>(<expr><name>required</name></expr>)</condition> <block>{<block_content>
         <throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><literal type="string">"this scorer cannot handle required=true"</literal></expr></argument>)</argument_list></call></expr>;</throw>
       <expr_stmt/></block_content></block></if></if_stmt>}</block></block>
@@ <operator>-</operator><literal type="number">200</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">195</literal></expr>,<expr><literal type="number">7</literal> @@ <name>final</name> <name>class</name> <name>BooleanScorer</name> extends <name>BulkScorer</name> <block>{
   }</block>
 
   @<name>Override</name>
  <specifier>public</specifier> <name>boolean</name> <call><name>score</name><argument_list>(<argument><expr><name>Collector</name> <name>collector</name></expr></argument>, <argument><expr><name>int</name> <name>max</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>public</specifier> <name>boolean</name> <call><name>score</name><argument_list>(<argument><expr><name>LeafCollector</name> <name>collector</name></expr></argument>, <argument><expr><name>int</name> <name>max</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
 
     <expr><name>boolean</name> <name>more</name></expr></block></expr></argument></throws></expr>;
     <expr><name>Bucket</name> <name>tmp</name></expr>;
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>BulkScorer</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>BulkScorer</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">2331cae7f61</literal><operator>..</operator><literal type="number">7ba1b395ea8</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>BulkScorer</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>BulkScorer</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">31</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">31</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>BulkScorer</name> <block>{
   <comment type="block" format="javadoc">/** Scores and collects all matching documents.
    * @param collector The collector to which all matching documents are passed.
    */</comment>
  <expr><specifier>public</specifier> <name>void</name> <call><name>score</name><argument_list>(<argument><expr><name>Collector</name> <name>collector</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>public</specifier> <name>void</name> <call><name>score</name><argument_list>(<argument><expr><name>LeafCollector</name> <name>collector</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><call><name>score</name><argument_list>(<argument><expr><name>collector</name></expr></argument>, <argument><expr><name><name>Integer</name><operator>.</operator><name>MAX_VALUE</name></name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
   }</block>
 
@@ <operator>-</operator><literal type="number">42</literal></expr>,<expr><literal type="number">5</literal> <operator>+</operator><literal type="number">42</literal></expr>,<expr><literal type="number">5</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>BulkScorer</name> <block>{
    <expr><operator>*</operator> @<name>param</name> <name>max</name> <name>Score</name> <name>up</name> <name>to</name></expr>, <expr><name>but</name> <name>not</name> <name>including</name></expr>, <expr><name>this</name> <name>doc</name>
    <operator>*</operator> @</expr><return>return <expr><literal type="boolean">true</literal></expr></return> <if_stmt><if>if more matching documents may remain.
    */
  public abstract boolean score<condition>(<expr><name>Collector</name> <name>collector</name></expr><operator>,</operator> <expr><name>int</name> <name>max</name></expr>)</condition><block type="pseudo"><block_content> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws><empty_stmt>;</empty_stmt></block_content></block></if></if_stmt>
  <specifier>public</specifier> <specifier>abstract</specifier> <name>boolean</name> <call><name>score</name><argument_list>(<argument><expr><name>LeafCollector</name> <name>collector</name></expr></argument>, <argument><expr><name>int</name> <name>max</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws></block></expr>;
 }</block>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>CachingCollector</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>CachingCollector</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">23e159069ba</literal><operator>..</operator><name>c5957d8ead7</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>CachingCollector</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>CachingCollector</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name></name>;</package>
  <expr_stmt><expr><operator>*</operator><operator>/</operator></expr></expr_stmt>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayUtil</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>RamUsageEstimator</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
@@ -38,317 +40,280 @@ import java.util.List;
  * scoring is cached) per collected document.  If the result
  * set is large this can easily be a very substantial amount
  * of RAM!
 * 
 * &lt;p&gt;&lt;b&gt;NOTE&lt;/b&gt;: this class caches at least 128 documents
 * before checking RAM limits.
 * 
 *
  * &lt;p&gt;See the Lucene &lt;tt&gt;modules/grouping&lt;/tt&gt; module for more
  * details including a full code example.&lt;/p&gt;
  *
  * @lucene.experimental
  */</comment>
<class><specifier>public</specifier> <specifier>abstract</specifier> class <name>CachingCollector</name> <super_list><extends>extends <super><name>Collector</name></super></extends></super_list> <block>{
  
  <comment type="line">// Max out at 512K arrays</comment>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>int</name></type> <name>MAX_ARRAY_SIZE</name> <init>= <expr><literal type="number">512</literal> <operator>*</operator> <literal type="number">1024</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>int</name></type> <name>INITIAL_ARRAY_SIZE</name> <init>= <expr><literal type="number">128</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <specifier>static</specifier> <name><name>int</name><index>[]</index></name></type> <name>EMPTY_INT_ARRAY</name> <init>= <expr><operator>new</operator> <name><name>int</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
<class><specifier>public</specifier> <specifier>abstract</specifier> class <name>CachingCollector</name> <super_list><extends>extends <super><name>FilterCollector</name></super></extends></super_list> <block>{
 
  <class><specifier>private</specifier> <specifier>static</specifier> class <name>SegStart</name> <block>{
    <decl_stmt><decl><type><specifier>public</specifier> <specifier>final</specifier> <name>AtomicReaderContext</name></type> <name>readerContext</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <specifier>final</specifier> <name>int</name></type> <name>end</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>int</name></type> <name>INITIAL_ARRAY_SIZE</name> <init>= <expr><literal type="number">128</literal></expr></init></decl>;</decl_stmt>
 
    <constructor><specifier>public</specifier> <name>SegStart</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>readerContext</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>end</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>readerContext</name></name> <operator>=</operator> <name>readerContext</name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>end</name></name> <operator>=</operator> <name>end</name></expr>;</expr_stmt>
    </block_content>}</block></constructor>
  }</block></class>
  
   <class><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> class <name>CachedScorer</name> <super_list><extends>extends <super><name>Scorer</name></super></extends></super_list> <block>{
    

     <comment type="line">// NOTE: these members are package-private b/c that way accessing them from</comment>
     <comment type="line">// the outer class does not incur access check by the JVM. The same</comment>
     <comment type="line">// situation would be if they were defined in the outer class as private</comment>
     <comment type="line">// members.</comment>
     <decl_stmt><decl><type><name>int</name></type> <name>doc</name></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>float</name></type> <name>score</name></decl>;</decl_stmt>
    

     <constructor><specifier>private</specifier> <name>CachedScorer</name><parameter_list>()</parameter_list> <block>{<block_content> <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> </block_content>}</block></constructor>
 
     <function><annotation>@<name>Override</name></annotation>
     <type><specifier>public</specifier> <specifier>final</specifier> <name>float</name></type> <name>score</name><parameter_list>()</parameter_list> <block>{<block_content> <return>return <expr><name>score</name></expr>;</return> </block_content>}</block></function>
    

     <function><annotation>@<name>Override</name></annotation>
     <type><specifier>public</specifier> <specifier>final</specifier> <name>int</name></type> <name>advance</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>target</name></decl></parameter>)</parameter_list> <block>{<block_content> <throw>throw <expr><operator>new</operator> <call><name>UnsupportedOperationException</name><argument_list>()</argument_list></call></expr>;</throw> </block_content>}</block></function>
    

     <function><annotation>@<name>Override</name></annotation>
     <type><specifier>public</specifier> <specifier>final</specifier> <name>int</name></type> <name>docID</name><parameter_list>()</parameter_list> <block>{<block_content> <return>return <expr><name>doc</name></expr>;</return> </block_content>}</block></function>
    

     <function><annotation>@<name>Override</name></annotation>
     <type><specifier>public</specifier> <specifier>final</specifier> <name>int</name></type> <name>freq</name><parameter_list>()</parameter_list> <block>{<block_content> <throw>throw <expr><operator>new</operator> <call><name>UnsupportedOperationException</name><argument_list>()</argument_list></call></expr>;</throw> </block_content>}</block></function>
    

     <function><annotation>@<name>Override</name></annotation>
     <type><specifier>public</specifier> <specifier>final</specifier> <name>int</name></type> <name>nextDoc</name><parameter_list>()</parameter_list> <block>{<block_content> <throw>throw <expr><operator>new</operator> <call><name>UnsupportedOperationException</name><argument_list>()</argument_list></call></expr>;</throw> </block_content>}</block></function>
    

     <function><annotation>@<name>Override</name></annotation>
     <type><specifier>public</specifier> <name>long</name></type> <name>cost</name><parameter_list>()</parameter_list> <block>{<block_content> <return>return <expr><literal type="number">1</literal></expr>;</return> </block_content>}</block></function>
    }</block></class>

  <comment type="line">// A CachingCollector which caches scores</comment>
  <class><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> class <name>ScoreCachingCollector</name> <super_list><extends>extends <super><name>CachingCollector</name></super></extends></super_list> <block>{
  }</block></class>
 
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>CachedScorer</name></type> <name>cachedScorer</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name><name>float</name><index>[]</index></name></argument>&gt;</argument_list></name></type> <name>cachedScores</name></decl>;</decl_stmt>
  <class><specifier>private</specifier> <specifier>static</specifier> class <name>NoScoreCachingCollector</name> <super_list><extends>extends <super><name>CachingCollector</name></super></extends></super_list> <block>{
 
    <decl_stmt><decl><type><specifier>private</specifier> <name>Scorer</name></type> <name>scorer</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <name><name>float</name><index>[]</index></name></type> <name>curScores</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>Boolean</name></argument>&gt;</argument_list></name></type> <name>acceptDocsOutOfOrders</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>AtomicReaderContext</name></argument>&gt;</argument_list></name></type> <name>contexts</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name><name>int</name><index>[]</index></name></argument>&gt;</argument_list></name></type> <name>docs</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>maxDocsToCache</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>NoScoreCachingLeafCollector</name></type> <name>lastCollector</name></decl>;</decl_stmt>
 
    <constructor><name>ScoreCachingCollector</name><parameter_list>(<parameter><decl><type><name>Collector</name></type> <name>other</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>maxRAMMB</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>other</name></expr></argument>, <argument><expr><name>maxRAMMB</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>NoScoreCachingCollector</name><argument_list>(<argument><expr><name>Collector</name> <name>in</name></expr></argument>, <argument><expr><name>int</name> <name>maxDocsToCache</name></expr></argument>)</argument_list></call> <block>{
      <expr><call><name>super</name><argument_list>(<argument><expr><name>in</name></expr></argument>)</argument_list></call></expr>;
      <expr><name><name>this</name><operator>.</operator><name>maxDocsToCache</name></name> <operator>=</operator> <name>maxDocsToCache</name></expr>;
      <expr><name>contexts</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
      <expr><name>acceptDocsOutOfOrders</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
      <expr><name>docs</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
    }</block>
 
      <name>cachedScorer</name> <operator>=</operator> <operator>new</operator> <call><name>CachedScorer</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>cachedScores</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>curScores</name> <operator>=</operator> <operator>new</operator> <name><name>float</name><index>[<expr><name>INITIAL_ARRAY_SIZE</name></expr>]</index></name></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>cachedScores</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>curScores</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <function><type><specifier>protected</specifier> <name>NoScoreCachingLeafCollector</name></type> <name>wrap</name><parameter_list>(<parameter><decl><type><name>LeafCollector</name></type> <name>in</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>maxDocsToCache</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <return>return <expr><operator>new</operator> <call><name>NoScoreCachingLeafCollector</name><argument_list>(<argument><expr><name>in</name></expr></argument>, <argument><expr><name>maxDocsToCache</name></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block></function>
 
    <expr_stmt><expr><call><name>ScoreCachingCollector</name><argument_list>(<argument><expr><name>Collector</name> <name>other</name></expr></argument>, <argument><expr><name>int</name> <name>maxDocsToCache</name></expr></argument>)</argument_list></call> <block>{
      <expr><call><name>super</name><argument_list>(<argument><expr><name>other</name></expr></argument>, <argument><expr><name>maxDocsToCache</name></expr></argument>)</argument_list></call></expr>;
    <expr><specifier>public</specifier> <name>LeafCollector</name> <call><name>getLeafCollector</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
      <expr><call><name>postCollection</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
      <expr><name>final</name> <name>LeafCollector</name> <name>in</name> <operator>=</operator> <call><name><name>this</name><operator>.</operator><name>in</name><operator>.</operator><name>getLeafCollector</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;
      <if_stmt><if>if <condition>(<expr><name>contexts</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>contexts</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>acceptDocsOutOfOrders</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name><name>in</name><operator>.</operator><name>acceptsDocsOutOfOrder</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt/></block_content></block></if></if_stmt>}</block></expr></expr_stmt>
      <if_stmt><if>if <condition>(<expr><name>maxDocsToCache</name> <operator>&gt;=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
        <return>return <expr><name>lastCollector</name> <operator>=</operator> <call><name>wrap</name><argument_list>(<argument><expr><name>in</name></expr></argument>, <argument><expr><name>maxDocsToCache</name></expr></argument>)</argument_list></call></expr>;</return>
      </block_content>}</block></if> <else>else <block>{<block_content>
        <return>return <expr><name>in</name></expr>;</return>
      </block_content>}</block></else></if_stmt>
    </block_content>}</block></constructor>
 
      <expr_stmt><expr><name>cachedScorer</name> <operator>=</operator> <operator>new</operator> <call><name>CachedScorer</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>cachedScores</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>curScores</name> <operator>=</operator> <operator>new</operator> <name><name>float</name><index>[<expr><name>INITIAL_ARRAY_SIZE</name></expr>]</index></name></expr>;</expr_stmt>
      <constructor_decl><name><name>cachedScores</name><operator>.</operator><name>add</name></name><parameter_list>(<parameter><decl><type><name>curScores</name></type></decl></parameter>)</parameter_list>;</constructor_decl>
    <function><type><specifier>protected</specifier> <name>void</name></type> <name>invalidate</name><parameter_list>()</parameter_list> <block>{<block_content>
      <expr_stmt><expr><name>maxDocsToCache</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>
      <expr_stmt><expr><name>contexts</name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>docs</name></name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
     </block_content>}</block></function>
    
    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>collect</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
 
      <if_stmt><if>if <condition>(<expr><name>curDocs</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <comment type="line">// Cache was too large</comment>
        <expr_stmt><expr><name><name>cachedScorer</name><operator>.</operator><name>score</name></name> <operator>=</operator> <call><name><name>scorer</name><operator>.</operator><name>score</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>cachedScorer</name><operator>.</operator><name>doc</name></name> <operator>=</operator> <name>doc</name></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>other</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return>return;</return>
      </block_content>}</block></if></if_stmt>
    <function><type><specifier>protected</specifier> <name>void</name></type> <name>postCollect</name><parameter_list>(<parameter><decl><type><name>NoScoreCachingLeafCollector</name></type> <name>collector</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <decl_stmt><decl><type><specifier>final</specifier> <name><name>int</name><index>[]</index></name></type> <name>docs</name> <init>= <expr><call><name><name>collector</name><operator>.</operator><name>cachedDocs</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><name>maxDocsToCache</name> <operator>-=</operator> <name><name>docs</name><operator>.</operator><name>length</name></name></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>docs</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>docs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>
 
      <comment type="line">// Allocate a bigger array or abort caching</comment>
      <if_stmt><if>if <condition>(<expr><name>upto</name> <operator>==</operator> <name><name>curDocs</name><operator>.</operator><name>length</name></name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>base</name> <operator>+=</operator> <name>upto</name></expr>;</expr_stmt>
        
        <comment type="line">// Compute next array length - don't allocate too big arrays</comment>
        <decl_stmt><decl><type><name>int</name></type> <name>nextLength</name> <init>= <expr><literal type="number">8</literal><operator>*</operator><name><name>curDocs</name><operator>.</operator><name>length</name></name></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><name>nextLength</name> <operator>&gt;</operator> <name>MAX_ARRAY_SIZE</name></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><name>nextLength</name> <operator>=</operator> <name>MAX_ARRAY_SIZE</name></expr>;</expr_stmt>
    <function><type><specifier>private</specifier> <name>void</name></type> <name>postCollection</name><parameter_list>()</parameter_list> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><name>lastCollector</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>lastCollector</name><operator>.</operator><name>hasCache</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name>invalidate</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if> <else>else <block>{<block_content>
          <expr_stmt><expr><call><name>postCollect</name><argument_list>(<argument><expr><name>lastCollector</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></else></if_stmt>
        <expr_stmt><expr><name>lastCollector</name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block></function>
 
        <if_stmt><if>if <condition>(<expr><name>base</name> <operator>+</operator> <name>nextLength</name> <operator>&gt;</operator> <name>maxDocsToCache</name></expr>)</condition> <block>{<block_content>
          <comment type="line">// try to allocate a smaller array</comment>
          <expr_stmt><expr><name>nextLength</name> <operator>=</operator> <name>maxDocsToCache</name> <operator>-</operator> <name>base</name></expr>;</expr_stmt>
          <if_stmt><if>if <condition>(<expr><name>nextLength</name> <operator>&lt;=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
            <comment type="line">// Too many docs to collect -- clear cache</comment>
            <expr_stmt><expr><name>curDocs</name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
            <expr_stmt><expr><name>curScores</name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>cachedSegs</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>cachedDocs</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>cachedScores</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name><name>cachedScorer</name><operator>.</operator><name>score</name></name> <operator>=</operator> <call><name><name>scorer</name><operator>.</operator><name>score</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name><name>cachedScorer</name><operator>.</operator><name>doc</name></name> <operator>=</operator> <name>doc</name></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>other</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return>return;</return>
          </block_content>}</block></if></if_stmt>
        </block_content>}</block></if></if_stmt>
        
        <expr_stmt><expr><name>curDocs</name> <operator>=</operator> <operator>new</operator> <name><name>int</name><index>[<expr><name>nextLength</name></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>cachedDocs</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>curDocs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>curScores</name> <operator>=</operator> <operator>new</operator> <name><name>float</name><index>[<expr><name>nextLength</name></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>cachedScores</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>curScores</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>upto</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
    <function><type><specifier>protected</specifier> <name>void</name></type> <name>collect</name><parameter_list>(<parameter><decl><type><name>LeafCollector</name></type> <name>collector</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
      <decl_stmt><decl><type><specifier>final</specifier> <name><name>int</name><index>[]</index></name></type> <name>docs</name> <init>= <expr><call><name><name>this</name><operator>.</operator><name>docs</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <for>for <control>(<init><decl><type><name>int</name></type> <name>doc</name> <range>: <expr><name>docs</name></expr></range></decl></init>)</control> <block>{<block_content>
        <expr_stmt><expr><call><name><name>collector</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></for>
      
      <expr_stmt><expr><name><name>curDocs</name><index>[<expr><name>upto</name></expr>]</index></name> <operator>=</operator> <name>doc</name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>cachedScorer</name><operator>.</operator><name>score</name></name> <operator>=</operator> <name><name>curScores</name><index>[<expr><name>upto</name></expr>]</index></name> <operator>=</operator> <call><name><name>scorer</name><operator>.</operator><name>score</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>upto</name><operator>++</operator></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>cachedScorer</name><operator>.</operator><name>doc</name></name> <operator>=</operator> <name>doc</name></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>other</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></function>
 
    <function><annotation>@<name>Override</name></annotation>
     <type><specifier>public</specifier> <name>void</name></type> <name>replay</name><parameter_list>(<parameter><decl><type><name>Collector</name></type> <name>other</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
      <expr_stmt><expr><call><name>replayInit</name><argument_list>(<argument><expr><name>other</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      
      <decl_stmt><decl><type><name>int</name></type> <name>curUpto</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>int</name></type> <name>curBase</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>int</name></type> <name>chunkUpto</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><name>curDocs</name> <operator>=</operator> <name>EMPTY_INT_ARRAY</name></expr>;</expr_stmt>
      <for>for <control>(<init><decl><type><name>SegStart</name></type> <name>seg</name> <range>: <expr><name>cachedSegs</name></expr></range></decl></init>)</control> <block>{<block_content>
        <expr_stmt><expr><call><name><name>other</name><operator>.</operator><name>setNextReader</name></name><argument_list>(<argument><expr><name><name>seg</name><operator>.</operator><name>readerContext</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>other</name><operator>.</operator><name>setScorer</name></name><argument_list>(<argument><expr><name>cachedScorer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <while>while <condition>(<expr><name>curBase</name> <operator>+</operator> <name>curUpto</name> <operator>&lt;</operator> <name><name>seg</name><operator>.</operator><name>end</name></name></expr>)</condition> <block>{<block_content>
          <if_stmt><if>if <condition>(<expr><name>curUpto</name> <operator>==</operator> <name><name>curDocs</name><operator>.</operator><name>length</name></name></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><name>curBase</name> <operator>+=</operator> <name><name>curDocs</name><operator>.</operator><name>length</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><name>curDocs</name> <operator>=</operator> <call><name><name>cachedDocs</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>chunkUpto</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name>curScores</name> <operator>=</operator> <call><name><name>cachedScores</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>chunkUpto</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name>chunkUpto</name><operator>++</operator></expr>;</expr_stmt>
            <expr_stmt><expr><name>curUpto</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
          </block_content>}</block></if></if_stmt>
          <expr_stmt><expr><name><name>cachedScorer</name><operator>.</operator><name>score</name></name> <operator>=</operator> <name><name>curScores</name><index>[<expr><name>curUpto</name></expr>]</index></name></expr>;</expr_stmt>
          <expr_stmt><expr><name><name>cachedScorer</name><operator>.</operator><name>doc</name></name> <operator>=</operator> <name><name>curDocs</name><index>[<expr><name>curUpto</name></expr>]</index></name></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>other</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><name><name>curDocs</name><index>[<expr><name>curUpto</name><operator>++</operator></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>postCollection</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>isCached</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
        <throw>throw <expr><operator>new</operator> <call><name>IllegalStateException</name><argument_list>(<argument><expr><literal type="string">"cannot replay: cache was cleared because too much RAM was required"</literal></expr></argument>)</argument_list></call></expr>;</throw>
      </block_content>}</block></if></if_stmt>
      <assert>assert <expr><call><name><name>docs</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>==</operator> <call><name><name>contexts</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</assert>
      <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name><name>contexts</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{<block_content>
        <decl_stmt><decl><type><specifier>final</specifier> <name>AtomicReaderContext</name></type> <name>context</name> <init>= <expr><call><name><name>contexts</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier>final</specifier> <name>boolean</name></type> <name>docsInOrder</name> <init>= <expr><operator>!</operator><call><name><name>acceptDocsOutOfOrders</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier>final</specifier> <name>LeafCollector</name></type> <name>collector</name> <init>= <expr><call><name><name>other</name><operator>.</operator><name>getLeafCollector</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>collector</name><operator>.</operator><name>acceptsDocsOutOfOrder</name></name><argument_list>()</argument_list></call> <operator>&amp;&amp;</operator> <operator>!</operator><name>docsInOrder</name></expr>)</condition> <block>{<block_content>
          <throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(
                <argument><expr><literal type="string">"cannot replay: given collector does not support "</literal>
                    <operator>+</operator> <literal type="string">"out-of-order collection, while the wrapped collector does. "</literal>
                    <operator>+</operator> <literal type="string">"Therefore cached documents may be out-of-order."</literal></expr></argument>)</argument_list></call></expr>;</throw>
         </block_content>}</block></if></if_stmt>
        <expr_stmt><expr><call><name>collect</name><argument_list>(<argument><expr><name>collector</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></for>
     </block_content>}</block></while>
 
    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>setScorer</name><parameter_list>(<parameter><decl><type><name>Scorer</name></type> <name>scorer</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>scorer</name></name> <operator>=</operator> <name>scorer</name></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>other</name><operator>.</operator><name>setScorer</name></name><argument_list>(<argument><expr><name>cachedScorer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <class><specifier>private</specifier> <specifier>static</specifier> class <name>ScoreCachingCollector</name> <super_list><extends>extends <super><name>NoScoreCachingCollector</name></super></extends></super_list> <block>{

    <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name><name>float</name><index>[]</index></name></argument>&gt;</argument_list></name></type> <name>scores</name></decl>;</decl_stmt>

    <constructor><name>ScoreCachingCollector</name><parameter_list>(<parameter><decl><type><name>Collector</name></type> <name>in</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>maxDocsToCache</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>in</name></expr></argument>, <argument><expr><name>maxDocsToCache</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>scores</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></constructor>

    <function><type><specifier>protected</specifier> <name>NoScoreCachingLeafCollector</name></type> <name>wrap</name><parameter_list>(<parameter><decl><type><name>LeafCollector</name></type> <name>in</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>maxDocsToCache</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <return>return <expr><operator>new</operator> <call><name>ScoreCachingLeafCollector</name><argument_list>(<argument><expr><name>in</name></expr></argument>, <argument><expr><name>maxDocsToCache</name></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block></function>
 
     <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>String</name></type> <name>toString</name><parameter_list>()</parameter_list> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><call><name>isCached</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
        <return>return <expr><literal type="string">"CachingCollector ("</literal> <operator>+</operator> <operator>(</operator><name>base</name><operator>+</operator><name>upto</name><operator>)</operator> <operator>+</operator> <literal type="string">" docs &amp; scores cached)"</literal></expr>;</return>
      </block_content>}</block></if> <else>else <block>{<block_content>
        <return>return <expr><literal type="string">"CachingCollector (cache was cleared)"</literal></expr>;</return>
    <function><type><specifier>protected</specifier> <name>void</name></type> <name>postCollect</name><parameter_list>(<parameter><decl><type><name>NoScoreCachingLeafCollector</name></type> <name>collector</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <decl_stmt><decl><type><specifier>final</specifier> <name>ScoreCachingLeafCollector</name></type> <name>coll</name> <init>= <expr><operator>(</operator><name>ScoreCachingLeafCollector</name><operator>)</operator> <name>collector</name></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>postCollect</name></name><argument_list>(<argument><expr><name>coll</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>scores</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name><name>coll</name><operator>.</operator><name>cachedScores</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    <function><type><specifier>protected</specifier> <name>void</name></type> <name>collect</name><parameter_list>(<parameter><decl><type><name>LeafCollector</name></type> <name>collector</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
      <decl_stmt><decl><type><specifier>final</specifier> <name><name>int</name><index>[]</index></name></type> <name>docs</name> <init>= <expr><call><name><name>this</name><operator>.</operator><name>docs</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><specifier>final</specifier> <name><name>float</name><index>[]</index></name></type> <name>scores</name> <init>= <expr><call><name><name>this</name><operator>.</operator><name>scores</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <assert>assert <expr><name><name>docs</name><operator>.</operator><name>length</name></name> <operator>==</operator> <name><name>scores</name><operator>.</operator><name>length</name></name></expr>;</assert>
      <decl_stmt><decl><type><specifier>final</specifier> <name>CachedScorer</name></type> <name>scorer</name> <init>= <expr><operator>new</operator> <call><name>CachedScorer</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>collector</name><operator>.</operator><name>setScorer</name></name><argument_list>(<argument><expr><name>scorer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <for>for <control>(<init><decl><type><name>int</name></type> <name>j</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <name><name>docs</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><operator>++</operator><name>j</name></expr></incr>)</control> <block>{<block_content>
        <expr_stmt><expr><name><name>scorer</name><operator>.</operator><name>doc</name></name> <operator>=</operator> <name><name>docs</name><index>[<expr><name>j</name></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>scorer</name><operator>.</operator><name>score</name></name> <operator>=</operator> <name><name>scores</name><index>[<expr><name>j</name></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>collector</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><name><name>scorer</name><operator>.</operator><name>doc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></for>
     </block_content>}</block></function>
 
   </block_content>}</block></else></if_stmt>
 
  <comment type="line">// A CachingCollector which does not cache scores</comment>
  <class><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> class <name>NoScoreCachingCollector</name> <super_list><extends>extends <super><name>CachingCollector</name></super></extends></super_list> <block>{
    
    <constructor><name>NoScoreCachingCollector</name><parameter_list>(<parameter><decl><type><name>Collector</name></type> <name>other</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>maxRAMMB</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>other</name></expr></argument>, <argument><expr><name>maxRAMMB</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></constructor>
  <class><specifier>private</specifier> class <name>NoScoreCachingLeafCollector</name> <super_list><extends>extends <super><name>FilterLeafCollector</name></super></extends></super_list> <block>{
 
    <constructor><name>NoScoreCachingCollector</name><parameter_list>(<parameter><decl><type><name>Collector</name></type> <name>other</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>maxDocsToCache</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>other</name></expr></argument>, <argument><expr><name>maxDocsToCache</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></constructor>
    <decl_stmt><decl><type><specifier>final</specifier> <name>int</name></type> <name>maxDocsToCache</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>int</name><index>[]</index></name></type> <name>docs</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>docCount</name></decl>;</decl_stmt>
 
    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>collect</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name>NoScoreCachingLeafCollector</name><argument_list>(<argument><expr><name>LeafCollector</name> <name>in</name></expr></argument>, <argument><expr><name>int</name> <name>maxDocsToCache</name></expr></argument>)</argument_list></call> <block>{
      <expr><call><name>super</name><argument_list>(<argument><expr><name>in</name></expr></argument>)</argument_list></call></expr>;
      <name><name>this</name><operator>.</operator><name>maxDocsToCache</name></name> <operator>=</operator> <name>maxDocsToCache</name></block></expr>;</expr_stmt>
      <expr_stmt><expr><name>docs</name> <operator>=</operator> <operator>new</operator> <name><name>int</name><index>[<expr><call><name><name>Math</name><operator>.</operator><name>min</name></name><argument_list>(<argument><expr><name>maxDocsToCache</name></expr></argument>, <argument><expr><name>INITIAL_ARRAY_SIZE</name></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>
      <expr_stmt><expr><name>docCount</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
    </block_content>}</block></function>
 
      <if_stmt><if>if <condition>(<expr><name>curDocs</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <comment type="line">// Cache was too large</comment>
        <expr_stmt><expr><call><name><name>other</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return>return;</return>
      </block_content>}</block></if></if_stmt>
    <function><type><specifier>protected</specifier> <name>void</name></type> <name>grow</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>newLen</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><name>docs</name> <operator>=</operator> <call><name><name>Arrays</name><operator>.</operator><name>copyOf</name></name><argument_list>(<argument><expr><name>docs</name></expr></argument>, <argument><expr><name>newLen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>
 
      <comment type="line">// Allocate a bigger array or abort caching</comment>
      <if_stmt><if>if <condition>(<expr><name>upto</name> <operator>==</operator> <name><name>curDocs</name><operator>.</operator><name>length</name></name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>base</name> <operator>+=</operator> <name>upto</name></expr>;</expr_stmt>
        
        <comment type="line">// Compute next array length - don't allocate too big arrays</comment>
        <decl_stmt><decl><type><name>int</name></type> <name>nextLength</name> <init>= <expr><literal type="number">8</literal><operator>*</operator><name><name>curDocs</name><operator>.</operator><name>length</name></name></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><name>nextLength</name> <operator>&gt;</operator> <name>MAX_ARRAY_SIZE</name></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><name>nextLength</name> <operator>=</operator> <name>MAX_ARRAY_SIZE</name></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    <function><type><specifier>protected</specifier> <name>void</name></type> <name>invalidate</name><parameter_list>()</parameter_list> <block>{<block_content>
      <expr_stmt><expr><name>docs</name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
      <expr_stmt><expr><name>docCount</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>
      <expr_stmt><expr><name>cached</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
    </block_content>}</block></function>
 
        <if_stmt><if>if <condition>(<expr><name>base</name> <operator>+</operator> <name>nextLength</name> <operator>&gt;</operator> <name>maxDocsToCache</name></expr>)</condition> <block>{<block_content>
          <comment type="line">// try to allocate a smaller array</comment>
          <expr_stmt><expr><name>nextLength</name> <operator>=</operator> <name>maxDocsToCache</name> <operator>-</operator> <name>base</name></expr>;</expr_stmt>
          <if_stmt><if>if <condition>(<expr><name>nextLength</name> <operator>&lt;=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
            <comment type="line">// Too many docs to collect -- clear cache</comment>
            <expr_stmt><expr><name>curDocs</name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>cachedSegs</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>cachedDocs</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>other</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return>return;</return>
          </block_content>}</block></if></if_stmt>
        </block_content>}</block></if></if_stmt>
        
        <expr_stmt><expr><name>curDocs</name> <operator>=</operator> <operator>new</operator> <name><name>int</name><index>[<expr><name>nextLength</name></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>cachedDocs</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>curDocs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>upto</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
      
      <expr_stmt><expr><name><name>curDocs</name><index>[<expr><name>upto</name></expr>]</index></name> <operator>=</operator> <name>doc</name></expr>;</expr_stmt>
      <expr_stmt><expr><name>upto</name><operator>++</operator></expr>;</expr_stmt>
      <constructor_decl><name><name>other</name><operator>.</operator><name>collect</name></name><parameter_list>(<parameter><decl><type><name>doc</name></type></decl></parameter>)</parameter_list>;</constructor_decl>
    <function><type><specifier>protected</specifier> <name>void</name></type> <name>buffer</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
      <expr_stmt><expr><name><name>docs</name><index>[<expr><name>docCount</name></expr>]</index></name> <operator>=</operator> <name>doc</name></expr>;</expr_stmt>
     </block_content>}</block></function>
 
     <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>replay</name><parameter_list>(<parameter><decl><type><name>Collector</name></type> <name>other</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
      <expr_stmt><expr><call><name>replayInit</name><argument_list>(<argument><expr><name>other</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      
      <decl_stmt><decl><type><name>int</name></type> <name>curUpto</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>int</name></type> <name>curbase</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>int</name></type> <name>chunkUpto</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><name>curDocs</name> <operator>=</operator> <name>EMPTY_INT_ARRAY</name></expr>;</expr_stmt>
      <for>for <control>(<init><decl><type><name>SegStart</name></type> <name>seg</name> <range>: <expr><name>cachedSegs</name></expr></range></decl></init>)</control> <block>{<block_content>
        <expr_stmt><expr><call><name><name>other</name><operator>.</operator><name>setNextReader</name></name><argument_list>(<argument><expr><name><name>seg</name><operator>.</operator><name>readerContext</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <while>while <condition>(<expr><name>curbase</name> <operator>+</operator> <name>curUpto</name> <operator>&lt;</operator> <name><name>seg</name><operator>.</operator><name>end</name></name></expr>)</condition> <block>{<block_content>
          <if_stmt><if>if <condition>(<expr><name>curUpto</name> <operator>==</operator> <name><name>curDocs</name><operator>.</operator><name>length</name></name></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><name>curbase</name> <operator>+=</operator> <name><name>curDocs</name><operator>.</operator><name>length</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><name>curDocs</name> <operator>=</operator> <call><name><name>cachedDocs</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>chunkUpto</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name>chunkUpto</name><operator>++</operator></expr>;</expr_stmt>
            <expr_stmt><expr><name>curUpto</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>collect</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><name>docs</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name>docCount</name> <operator>&gt;=</operator> <name><name>docs</name><operator>.</operator><name>length</name></name></expr>)</condition> <block>{<block_content>
          <if_stmt><if>if <condition>(<expr><name>docCount</name> <operator>&gt;=</operator> <name>maxDocsToCache</name></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name>invalidate</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
          </block_content>}</block></if> <else>else <block>{<block_content>
            <decl_stmt><decl><type><specifier>final</specifier> <name>int</name></type> <name>newLen</name> <init>= <expr><call><name><name>Math</name><operator>.</operator><name>min</name></name><argument_list>(<argument><expr><call><name><name>ArrayUtil</name><operator>.</operator><name>oversize</name></name><argument_list>(<argument><expr><name>docCount</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>, <argument><expr><name><name>RamUsageEstimator</name><operator>.</operator><name>NUM_BYTES_INT</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>maxDocsToCache</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name>grow</name><argument_list>(<argument><expr><name>newLen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           </block_content>}</block></else></if_stmt>
          <expr_stmt><expr><call><name><name>other</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><name><name>curDocs</name><index>[<expr><name>curUpto</name><operator>++</operator></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <if_stmt><if>if <condition>(<expr><name>docs</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name>buffer</name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><operator>++</operator><name>docCount</name></expr>;</expr_stmt>
         </block_content>}</block></if></if_stmt>
       </block_content>}</block></if></if_stmt>
      <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    <function><type><name>boolean</name></type> <name>hasCache</name><parameter_list>()</parameter_list> <block>{<block_content>
      <return>return <expr><name>docs</name> <operator>!=</operator> <literal type="null">null</literal></expr>;</return>
    </block_content>}</block></function>

    <function><type><name><name>int</name><index>[]</index></name></type> <name>cachedDocs</name><parameter_list>()</parameter_list> <block>{<block_content>
      <return>return <expr><ternary><condition><expr><name>docs</name> <operator>==</operator> <literal type="null">null</literal></expr> ?</condition><then> <expr><literal type="null">null</literal></expr> </then><else>: <expr><call><name><name>Arrays</name><operator>.</operator><name>copyOf</name></name><argument_list>(<argument><expr><name>docs</name></expr></argument>, <argument><expr><name>docCount</name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</return>
    </block_content>}</block></function>

  </block_content>}</block></if></if_stmt>

  <class><specifier>private</specifier> class <name>ScoreCachingLeafCollector</name> <super_list><extends>extends <super><name>NoScoreCachingLeafCollector</name></super></extends></super_list> <block>{

    <decl_stmt><decl><type><name>Scorer</name></type> <name>scorer</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>float</name><index>[]</index></name></type> <name>scores</name></decl>;</decl_stmt>

    <constructor><name>ScoreCachingLeafCollector</name><parameter_list>(<parameter><decl><type><name>LeafCollector</name></type> <name>in</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>maxDocsToCache</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>in</name></expr></argument>, <argument><expr><name>maxDocsToCache</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>scores</name> <operator>=</operator> <operator>new</operator> <name><name>float</name><index>[<expr><name><name>docs</name><operator>.</operator><name>length</name></name></expr>]</index></name></expr>;</expr_stmt>
     </block_content>}</block></constructor>
 
     <function><annotation>@<name>Override</name></annotation>
     <type><specifier>public</specifier> <name>void</name></type> <name>setScorer</name><parameter_list>(<parameter><decl><type><name>Scorer</name></type> <name>scorer</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
      <expr_stmt><expr><call><name><name>other</name><operator>.</operator><name>setScorer</name></name><argument_list>(<argument><expr><name>scorer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>scorer</name></name> <operator>=</operator> <name>scorer</name></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>setScorer</name></name><argument_list>(<argument><expr><name>scorer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></function>
 
     <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>String</name></type> <name>toString</name><parameter_list>()</parameter_list> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><call><name>isCached</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
        <return>return <expr><literal type="string">"CachingCollector ("</literal> <operator>+</operator> <operator>(</operator><name>base</name><operator>+</operator><name>upto</name><operator>)</operator> <operator>+</operator> <literal type="string">" docs cached)"</literal></expr>;</return>
      </block_content>}</block></if> <else>else <block>{<block_content>
        <return>return <expr><literal type="string">"CachingCollector (cache was cleared)"</literal></expr>;</return>
      </block_content>}</block></else></if_stmt>
    <function><type><specifier>protected</specifier> <name>void</name></type> <name>grow</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>newLen</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>grow</name></name><argument_list>(<argument><expr><name>newLen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>scores</name> <operator>=</operator> <call><name><name>Arrays</name><operator>.</operator><name>copyOf</name></name><argument_list>(<argument><expr><name>scores</name></expr></argument>, <argument><expr><name>newLen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>protected</specifier> <name>void</name></type> <name>invalidate</name><parameter_list>()</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>invalidate</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>scores</name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
     </block_content>}</block></function>
 
    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>protected</specifier> <name>void</name></type> <name>buffer</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
      <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>buffer</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>scores</name><index>[<expr><name>docCount</name></expr>]</index></name> <operator>=</operator> <call><name><name>scorer</name><operator>.</operator><name>score</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    <function><type><name><name>float</name><index>[]</index></name></type> <name>cachedScores</name><parameter_list>()</parameter_list> <block>{<block_content>
      <return>return <expr><ternary><condition><expr><name>docs</name> <operator>==</operator> <literal type="null">null</literal></expr> ?</condition><then> <expr><literal type="null">null</literal></expr> </then><else>: <expr><call><name><name>Arrays</name><operator>.</operator><name>copyOf</name></name><argument_list>(<argument><expr><name>scores</name></expr></argument>, <argument><expr><name>docCount</name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</return>
    </block_content>}</block></function>
   </block_content>}</block></function>
 
  <comment type="line">// TODO: would be nice if a collector defined a</comment>
  <comment type="line">// needsScores() method so we can specialize / do checks</comment>
  <comment type="line">// up front. This is only relevant for the ScoreCaching</comment>
  <comment type="line">// version -- if the wrapped Collector does not need</comment>
  <comment type="line">// scores, it can avoid cachedScorer entirely.</comment>
  <decl_stmt><decl><type><specifier>protected</specifier> <specifier>final</specifier> <name>Collector</name></type> <name>other</name></decl>;</decl_stmt>
  
  <decl_stmt><decl><type><specifier>protected</specifier> <specifier>final</specifier> <name>int</name></type> <name>maxDocsToCache</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>protected</specifier> <specifier>final</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>SegStart</name></argument>&gt;</argument_list></name></type> <name>cachedSegs</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>protected</specifier> <specifier>final</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name><name>int</name><index>[]</index></name></argument>&gt;</argument_list></name></type> <name>cachedDocs</name></decl>;</decl_stmt>
  
  <decl_stmt><decl><type><specifier>private</specifier> <name>AtomicReaderContext</name></type> <name>lastReaderContext</name></decl>;</decl_stmt>
  
  <decl_stmt><decl><type><specifier>protected</specifier> <name><name>int</name><index>[]</index></name></type> <name>curDocs</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>protected</specifier> <name>int</name></type> <name>upto</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>protected</specifier> <name>int</name></type> <name>base</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>protected</specifier> <name>int</name></type> <name>lastDocBase</name></decl>;</decl_stmt>
  
   <comment type="block" format="javadoc">/**
    * Creates a {@link CachingCollector} which does not wrap another collector.
    * The cached documents and scores can later be {@link #replay(Collector)
    * replayed}.
   * 
   *
    * @param acceptDocsOutOfOrder
    *          whether documents are allowed to be collected out-of-order
    */</comment>
   <function><type><specifier>public</specifier> <specifier>static</specifier> <name>CachingCollector</name></type> <name>create</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>boolean</name></type> <name>acceptDocsOutOfOrder</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>cacheScores</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>maxRAMMB</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>Collector</name></type> <name>other</name> <init>= <expr><operator>new</operator> <class><super><name>Collector</name></super><argument_list>()</argument_list> <block>{
    <decl_stmt><decl><type><name>Collector</name></type> <name>other</name> <init>= <expr><operator>new</operator> <class><super><name>SimpleCollector</name></super><argument_list>()</argument_list> <block>{
       <function><annotation>@<name>Override</name></annotation>
       <type><specifier>public</specifier> <name>boolean</name></type> <name>acceptsDocsOutOfOrder</name><parameter_list>()</parameter_list> <block>{<block_content>
         <return>return <expr><name>acceptDocsOutOfOrder</name></expr>;</return>
       </block_content>}</block></function>
      
      <function><annotation>@<name>Override</name></annotation>
      <type><specifier>public</specifier> <name>void</name></type> <name>setScorer</name><parameter_list>(<parameter><decl><type><name>Scorer</name></type> <name>scorer</name></decl></parameter>)</parameter_list> <block>{<block_content/>}</block></function>
 
       <function><annotation>@<name>Override</name></annotation>
       <type><specifier>public</specifier> <name>void</name></type> <name>collect</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <block>{<block_content/>}</block></function>
 
      <function><annotation>@<name>Override</name></annotation>
      <type><specifier>public</specifier> <name>void</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{<block_content/>}</block></function>

     }</block></class></expr></init></decl>;</decl_stmt>
     <return>return <expr><call><name>create</name><argument_list>(<argument><expr><name>other</name></expr></argument>, <argument><expr><name>cacheScores</name></expr></argument>, <argument><expr><name>maxRAMMB</name></expr></argument>)</argument_list></call></expr>;</return>
   }</block></class>
@@ <operator>-</operator><literal type="number">356</literal></expr></init></decl>,7 +321,7 @@ public abstract <decl><type ref="prev"/><name>class</name> <name>CachingCollector</name> extends <name>Collector</name> <block>{<block_content>
   <comment type="block" format="javadoc">/**
    * Create a new {@link CachingCollector} that wraps the given collector and
    * caches documents and scores up to the specified RAM threshold.
   * 
   *
    * @param other
    *          the Collector to wrap and delegate calls to.
    * @param cacheScores
@@ -368,7 +333,12 @@ public abstract class CachingCollector extends Collector {
    *          scores are cached.
    */</comment>
   <function><type><specifier>public</specifier> <specifier>static</specifier> <name>CachingCollector</name></type> <name>create</name><parameter_list>(<parameter><decl><type><name>Collector</name></type> <name>other</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>cacheScores</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>maxRAMMB</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <return>return <expr><ternary><condition><expr><name>cacheScores</name></expr> ?</condition><then> <expr><operator>new</operator> <call><name>ScoreCachingCollector</name><argument_list>(<argument><expr><name>other</name></expr></argument>, <argument><expr><name>maxRAMMB</name></expr></argument>)</argument_list></call></expr> </then><else>: <expr><operator>new</operator> <call><name>NoScoreCachingCollector</name><argument_list>(<argument><expr><name>other</name></expr></argument>, <argument><expr><name>maxRAMMB</name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</return>
    <decl_stmt><decl><type><name>int</name></type> <name>bytesPerDoc</name> <init>= <expr><name><name>RamUsageEstimator</name><operator>.</operator><name>NUM_BYTES_INT</name></name></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>cacheScores</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>bytesPerDoc</name> <operator>+=</operator> <name><name>RamUsageEstimator</name><operator>.</operator><name>NUM_BYTES_FLOAT</name></name></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>int</name></type> <name>maxDocsToCache</name> <init>= <expr><operator>(</operator><name>int</name><operator>)</operator> <operator>(</operator><operator>(</operator><name>maxRAMMB</name> <operator>*</operator> <literal type="number">1024</literal> <operator>*</operator> <literal type="number">1024</literal><operator>)</operator> <operator>/</operator> <name>bytesPerDoc</name><operator>)</operator></expr></init></decl>;</decl_stmt>
    <return>return <expr><call><name>create</name><argument_list>(<argument><expr><name>other</name></expr></argument>, <argument><expr><name>cacheScores</name></expr></argument>, <argument><expr><name>maxDocsToCache</name></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
 
   <comment type="block" format="javadoc">/**
@@ -388,74 +358,26 @@ public abstract class CachingCollector extends Collector {
   public static CachingCollector create(Collector other, boolean cacheScores, int maxDocsToCache) {
     return cacheScores ? new ScoreCachingCollector(other, maxDocsToCache) : new NoScoreCachingCollector(other, maxDocsToCache);
   }
  
  // Prevent extension from non-internal classes
  private CachingCollector(Collector other, double maxRAMMB, boolean cacheScores) {
    this.other = other;
    
    cachedDocs = new ArrayList&lt;&gt;();
    curDocs = new int[INITIAL_ARRAY_SIZE];
    cachedDocs.add(curDocs);

    int bytesPerDoc = RamUsageEstimator.NUM_BYTES_INT;
    if (cacheScores) {
      bytesPerDoc += RamUsageEstimator.NUM_BYTES_FLOAT;
    }
    maxDocsToCache = (int) ((maxRAMMB * 1024 * 1024) / bytesPerDoc);
  }
 
  private CachingCollector(Collector other, int maxDocsToCache) {
    this.other = other;
  private boolean cached;
 
    cachedDocs = new ArrayList&lt;&gt;();
    curDocs = new int[INITIAL_ARRAY_SIZE];
    cachedDocs.add(curDocs);
    this.maxDocsToCache = maxDocsToCache;
  }
  
  @Override
  public boolean acceptsDocsOutOfOrder() {
    return other.acceptsDocsOutOfOrder();
  }

  public boolean isCached() {
    return curDocs != null;
  private CachingCollector(Collector in) {
    super(in);
    cached = true;
   }
 
  @Override  
  public void setNextReader(AtomicReaderContext context) throws IOException {
    other.setNextReader(context);
    if (lastReaderContext != null) {
      cachedSegs.add(new SegStart(lastReaderContext, base+upto));
    }
    lastReaderContext = context;
  }

  /** Reused by the specialized inner classes. */</comment>
  <function><type><name>void</name></type> <name>replayInit</name><parameter_list>(<parameter><decl><type><name>Collector</name></type> <name>other</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>isCached</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>IllegalStateException</name><argument_list>(<argument><expr><literal type="string">"cannot replay: cache was cleared because too much RAM was required"</literal></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></if></if_stmt>
    
    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>other</name><operator>.</operator><name>acceptsDocsOutOfOrder</name></name><argument_list>()</argument_list></call> <operator>&amp;&amp;</operator> <call><name><name>this</name><operator>.</operator><name>other</name><operator>.</operator><name>acceptsDocsOutOfOrder</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(
          <argument><expr><literal type="string">"cannot replay: given collector does not support "</literal>
              <operator>+</operator> <literal type="string">"out-of-order collection, while the wrapped collector does. "</literal>
              <operator>+</operator> <literal type="string">"Therefore cached documents may be out-of-order."</literal></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></if></if_stmt>
    
    <comment type="line">//System.out.println("CC: replay totHits=" + (upto + base));</comment>
    <if_stmt><if>if <condition>(<expr><name>lastReaderContext</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>cachedSegs</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>SegStart</name><argument_list>(<argument><expr><name>lastReaderContext</name></expr></argument>, <argument><expr><name>base</name><operator>+</operator><name>upto</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>lastReaderContext</name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
  <comment type="block" format="javadoc">/**
   * Return true is this collector is able to replay collection.
   */</comment>
  <function><type><specifier>public</specifier> <specifier>final</specifier> <name>boolean</name></type> <name>isCached</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>cached</name></expr>;</return>
   </block_content>}</block></function>
 
   <comment type="block" format="javadoc">/**
    * Replays the cached doc IDs (and scores) to the given Collector. If this
    * instance does not cache scores, then Scorer is not set on
    * {@code other.setScorer} as well as scores are not replayed.
   * 
   *
    * @throws IllegalStateException
    *           if this collector is not cached (i.e., if the RAM limits were too
    *           low for the number of documents + scores to cache).
@@ -464,5 +386,5 @@ public abstract class CachingCollector extends Collector {
    *           while the collector passed to the ctor does.
    */</comment>
   <decl_stmt><decl><type><specifier>public</specifier> <specifier>abstract</specifier> <name>void</name></type> <name>replay</name><argument_list>(<argument><expr><name>Collector</name> <name>other</name></expr></argument>)</argument_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws></decl>;</decl_stmt>
  

 </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>CollectionTerminatedException</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>CollectionTerminatedException</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">9caadfa2976</literal><operator>..</operator><name>a4c426a9d51</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>CollectionTerminatedException</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>CollectionTerminatedException</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator>
 
<comment type="block" format="javadoc">/** Throw this exception in {@link Collector#collect(int)} to prematurely
/** Throw this exception in {@link LeafCollector#collect(int)} to prematurely
  *  terminate collection of the current leaf.
  *  &lt;p&gt;Note: IndexSearcher swallows this exception and never re-throws it.
  *  As a consequence, you should not catch it when calling
diff --git a/lucene/core/src/java/org/apache/lucene/search/Collector.java b/lucene/core/src/java/org/apache/lucene/search/Collector.java
index 312f5074b58..bb473946c33 100644
-- a/lucene/core/src/java/org/apache/lucene/search/Collector.java
++ b/lucene/core/src/java/org/apache/lucene/search/Collector.java
@@ -20,20 +20,19 @@ package org.apache.lucene.search;
 import java.io.IOException;
 
 import org.apache.lucene.index.AtomicReaderContext;
import org.apache.lucene.index.IndexReaderContext;
 
 /**
  * &lt;p&gt;Expert: Collectors are primarily meant to be used to
  * gather raw results from a search, and implement sorting
  * or custom result filtering, collation, etc. &lt;/p&gt;
  *
 * &lt;p&gt;Lucene's core collectors are derived from Collector.
 * Likely your application can use one of these classes, or
 * subclass {@link TopDocsCollector}, instead of
 * implementing Collector directly:
 * &lt;p&gt;Lucene's core collectors are derived from {@link Collector}
 * and {@link SimpleCollector}. Likely your application can
 * use one of these classes, or subclass {@link TopDocsCollector},
 * instead of implementing Collector directly:
  *
  * &lt;ul&gt;
 *      
 *
  *   &lt;li&gt;{@link TopDocsCollector} is an abstract base class
  *   that assumes you will retrieve the top N docs,
  *   according to some criteria, after collection is
@@ -62,118 +61,16 @@ import org.apache.lucene.index.IndexReaderContext;
  *
  * &lt;/ul&gt;
  *
 * &lt;p&gt;Collector decouples the score from the collected doc:
 * the score computation is skipped entirely if it's not
 * needed.  Collectors that do need the score should
 * implement the {@link #setScorer} method, to hold onto the
 * passed {@link Scorer} instance, and call {@link
 * Scorer#score()} within the collect method to compute the
 * current hit's score.  If your collector may request the
 * score for a single hit multiple times, you should use
 * {@link ScoreCachingWrappingScorer}. &lt;/p&gt;
 * 
 * &lt;p&gt;&lt;b&gt;NOTE:&lt;/b&gt; The doc that is passed to the collect
 * method is relative to the current reader. If your
 * collector needs to resolve this to the docID space of the
 * Multi*Reader, you must re-base it by recording the
 * docBase from the most recent setNextReader call.  Here's
 * a simple example showing how to collect docIDs into a
 * BitSet:&lt;/p&gt;
 * 
 * &lt;pre class="prettyprint"&gt;
 * IndexSearcher searcher = new IndexSearcher(indexReader);
 * final BitSet bits = new BitSet(indexReader.maxDoc());
 * searcher.search(query, new Collector() {
 *   private int docBase;
 * 
 *   &lt;em&gt;// ignore scorer&lt;/em&gt;
 *   public void setScorer(Scorer scorer) {
 *   }
 *
 *   &lt;em&gt;// accept docs out of order (for a BitSet it doesn't matter)&lt;/em&gt;
 *   public boolean acceptsDocsOutOfOrder() {
 *     return true;
 *   }
 * 
 *   public void collect(int doc) {
 *     bits.set(doc + docBase);
 *   }
 * 
 *   public void setNextReader(AtomicReaderContext context) {
 *     this.docBase = context.docBase;
 *   }
 * });
 * &lt;/pre&gt;
 *
 * &lt;p&gt;Not all collectors will need to rebase the docID.  For
 * example, a collector that simply counts the total number
 * of hits would skip it.&lt;/p&gt;
 * 
 * &lt;p&gt;&lt;b&gt;NOTE:&lt;/b&gt; Prior to 2.9, Lucene silently filtered
 * out hits with score &lt;= 0.  As of 2.9, the core Collectors
 * no longer do that.  It's very unusual to have such hits
 * (a negative query boost, or function query returning
 * negative custom scores, could cause it to happen).  If
 * you need that behavior, use {@link
 * PositiveScoresOnlyCollector}.&lt;/p&gt;
 *
  * @lucene.experimental
 * 
 * @since 2.9
  */</comment>
<specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>Collector</name> <block>{
  
  <comment type="block" format="javadoc">/**
   * Called before successive calls to {@link #collect(int)}. Implementations
   * that need the score of the current document (passed-in to
   * {@link #collect(int)}), should save the passed-in Scorer and call
   * scorer.score() when needed.
   */</comment>
  <expr><specifier>public</specifier> <specifier>abstract</specifier> <name>void</name> <call><name>setScorer</name><argument_list>(<argument><expr><name>Scorer</name> <name>scorer</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws></expr>;
  
  <comment type="block" format="javadoc">/**
   * Called once for every document matching a query, with the unbased document
   * number.
   * &lt;p&gt;Note: The collection of the current segment can be terminated by throwing
   * a {@link CollectionTerminatedException}. In this case, the last docs of the
   * current {@link AtomicReaderContext} will be skipped and {@link IndexSearcher}
   * will swallow the exception and continue collection with the next leaf.
   * &lt;p&gt;
   * Note: This is called in an inner search loop. For good search performance,
   * implementations of this method should not call {@link IndexSearcher#doc(int)} or
   * {@link org.apache.lucene.index.IndexReader#document(int)} on every hit.
   * Doing so can slow searches by an order of magnitude or more.
   */</comment>
  <specifier>public</specifier> <specifier>abstract</specifier> <name>void</name> <call><name>collect</name><argument_list>(<argument><expr><name>int</name> <name>doc</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws></block></expr>;</expr_stmt>
<interface><specifier>public</specifier> interface <name>Collector</name> <block>{
 
   <comment type="block" format="javadoc">/**
   * Called before collecting from each {@link AtomicReaderContext}. All doc ids in
   * {@link #collect(int)} will correspond to {@link IndexReaderContext#reader}.
   * 
   * Add {@link AtomicReaderContext#docBase} to the current  {@link IndexReaderContext#reader}'s
   * internal document id to re-base ids in {@link #collect(int)}.
   * 
   * Create a new {@link LeafCollector collector} to collect the given context.
   *
    * @param context
    *          next atomic reader context
    */</comment>
  <decl_stmt><decl><type><specifier>public</specifier> <specifier>abstract</specifier> <name>void</name></type> <name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>LeafCollector</name></type> <name>getLeafCollector</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws></decl>;</decl_stmt>
 
  <comment type="block" format="javadoc">/**
   * Return &lt;code&gt;true&lt;/code&gt; if this collector does not
   * require the matching docIDs to be delivered in int sort
   * order (smallest to largest) to {@link #collect}.
   *
   * &lt;p&gt; Most Lucene Query implementations will visit
   * matching docIDs in order.  However, some queries
   * (currently limited to certain cases of {@link
   * BooleanQuery}) can achieve faster searching if the
   * &lt;code&gt;Collector&lt;/code&gt; allows them to deliver the
   * docIDs out of order.&lt;/p&gt;
   *
   * &lt;p&gt; Many collectors don't mind getting docIDs out of
   * order, so it's important to return &lt;code&gt;true&lt;/code&gt;
   * here.
   */</comment>
  <function_decl><type><specifier>public</specifier> <specifier>abstract</specifier> <name>boolean</name></type> <name>acceptsDocsOutOfOrder</name><parameter_list>()</parameter_list>;</function_decl>
  
 }</block></interface>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>ConstantScoreQuery</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>ConstantScoreQuery</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>a917a0c5cd2</name><operator>..</operator><literal type="number">2b7f4ed19b3</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>ConstantScoreQuery</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>ConstantScoreQuery</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">212</literal></expr><operator>,</operator><expr><literal type="number">31</literal> <operator>+</operator><literal type="number">212</literal></expr><operator>,</operator><expr><literal type="number">16</literal> @@ <specifier>public</specifier> <name>class</name> <name>ConstantScoreQuery</name> extends <name>Query</name> <block>{
     }</block>
 
     @<name>Override</name>
    <specifier>public</specifier> <name>boolean</name> <call><name>score</name><argument_list>(<argument><expr><name>Collector</name> <name>collector</name></expr></argument>, <argument><expr><name>int</name> <name>max</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><specifier>public</specifier> <name>boolean</name> <call><name>score</name><argument_list>(<argument><expr><name>LeafCollector</name> <name>collector</name></expr></argument>, <argument><expr><name>int</name> <name>max</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr></expr_stmt>
       <return>return <expr><call><name><name>bulkScorer</name><operator>.</operator><name>score</name></name><argument_list>(<argument><expr><call><name>wrapCollector</name><argument_list>(<argument><expr><name>collector</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>max</name></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block></decl></decl_stmt>
 
    <function><type><specifier>private</specifier> <name>Collector</name></type> <name>wrapCollector</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>Collector</name></type> <name>collector</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <return>return <expr><operator>new</operator> <class><super><name>Collector</name></super><argument_list>()</argument_list> <block>{
    <function><type><specifier>private</specifier> <name>LeafCollector</name></type> <name>wrapCollector</name><parameter_list>(<parameter><decl><type><name>LeafCollector</name></type> <name>collector</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <return>return <expr><operator>new</operator> <class><super><name>FilterLeafCollector</name></super><argument_list>(<argument><expr><name>collector</name></expr></argument>)</argument_list> <block>{
         <function><annotation>@<name>Override</name></annotation>
         <type><specifier>public</specifier> <name>void</name></type> <name>setScorer</name><parameter_list>(<parameter><decl><type><name>Scorer</name></type> <name>scorer</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
           <comment type="line">// we must wrap again here, but using the scorer passed in as parameter:</comment>
          <expr_stmt><expr><call><name><name>collector</name><operator>.</operator><name>setScorer</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>ConstantScorer</name><argument_list>(<argument><expr><name>scorer</name></expr></argument>, <argument><expr><name>weight</name></expr></argument>, <argument><expr><name>theScore</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></function>
        
        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>void</name></type> <name>collect</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
          <expr_stmt><expr><call><name><name>collector</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></function>
        
        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>void</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
          <expr_stmt><expr><call><name><name>collector</name><operator>.</operator><name>setNextReader</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></function>
        
        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>boolean</name></type> <name>acceptsDocsOutOfOrder</name><parameter_list>()</parameter_list> <block>{<block_content>
          <return>return <expr><call><name><name>collector</name><operator>.</operator><name>acceptsDocsOutOfOrder</name></name><argument_list>()</argument_list></call></expr>;</return>
          <expr_stmt><expr><call><name><name>in</name><operator>.</operator><name>setScorer</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>ConstantScorer</name><argument_list>(<argument><expr><name>scorer</name></expr></argument>, <argument><expr><name>weight</name></expr></argument>, <argument><expr><name>theScore</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></function>
       }</block></class></expr>;</return>
     </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>FakeScorer</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>FakeScorer</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">89b92a5bb22</literal><operator>..</operator><name>e2a50c8f37d</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>FakeScorer</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>FakeScorer</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name></name>;</package>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collection</name></name>;</import>
 
 <comment type="block" format="javadoc">/** Used by {@link BulkScorer}s that need to pass a {@link
 *  Scorer} to {@link Collector#setScorer}. */</comment>
 <expr><operator>*</operator>  <name>Scorer</name></expr>}</block></class> <name>to</name> <block>{@<expr><name>link</name> <name>LeafCollector</name><operator>#</operator><name>setScorer</name></expr>}</block><operator>.</operator> <operator>*</operator><operator>/</operator>
 <name>final</name> <name>class</name> <name>FakeScorer</name> extends <name>Scorer</name> <block>{
   <expr><name>float</name> <name>score</name></expr>;
   <name>int</name> <name>doc</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></block></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>FilterCollector</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>FilterCollector</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">00000000000..247bb038531</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>FilterCollector</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">48</literal> @@</expr></expr_stmt>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>

<comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<comment type="block" format="javadoc">/**
 * {@link Collector} delegator.
 *
 * @lucene.experimental
 */</comment>
<class><specifier>public</specifier> class <name>FilterCollector</name> <super_list><implements>implements <super><name>Collector</name></super></implements></super_list> <block>{

  <decl_stmt><decl><type><specifier>protected</specifier> <specifier>final</specifier> <name>Collector</name></type> <name>in</name></decl>;</decl_stmt>

  <comment type="block" format="javadoc">/** Sole constructor. */</comment>
  <constructor><specifier>public</specifier> <name>FilterCollector</name><parameter_list>(<parameter><decl><type><name>Collector</name></type> <name>in</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>in</name></name> <operator>=</operator> <name>in</name></expr>;</expr_stmt>
  </block_content>}</block></constructor>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>LeafCollector</name></type> <name>getLeafCollector</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <return>return <expr><call><name><name>in</name><operator>.</operator><name>getLeafCollector</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>String</name></type> <name>toString</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><call><name>getClass</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getSimpleName</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"("</literal> <operator>+</operator> <name>in</name> <operator>+</operator> <literal type="string">")"</literal></expr>;</return>
  </block_content>}</block></function>
  
}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>FilterLeafCollector</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>FilterLeafCollector</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">00000000000..e3ae9a8b0ab</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>FilterLeafCollector</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">56</literal> @@</expr></expr_stmt>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name></name>;</package>

<comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>

<comment type="block" format="javadoc">/**
 * {@link LeafCollector} delegator.
 *
 * @lucene.experimental
 */</comment>
<class><specifier>public</specifier> class <name>FilterLeafCollector</name> <super_list><implements>implements <super><name>LeafCollector</name></super></implements></super_list> <block>{

  <decl_stmt><decl><type><specifier>protected</specifier> <specifier>final</specifier> <name>LeafCollector</name></type> <name>in</name></decl>;</decl_stmt>

  <comment type="block" format="javadoc">/** Sole constructor. */</comment>
  <constructor><specifier>public</specifier> <name>FilterLeafCollector</name><parameter_list>(<parameter><decl><type><name>LeafCollector</name></type> <name>in</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>in</name></name> <operator>=</operator> <name>in</name></expr>;</expr_stmt>
  </block_content>}</block></constructor>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>setScorer</name><parameter_list>(<parameter><decl><type><name>Scorer</name></type> <name>scorer</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>in</name><operator>.</operator><name>setScorer</name></name><argument_list>(<argument><expr><name>scorer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>collect</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>in</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>boolean</name></type> <name>acceptsDocsOutOfOrder</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><call><name><name>in</name><operator>.</operator><name>acceptsDocsOutOfOrder</name></name><argument_list>()</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>String</name></type> <name>toString</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><call><name>getClass</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getSimpleName</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"("</literal> <operator>+</operator> <name>in</name> <operator>+</operator> <literal type="string">")"</literal></expr>;</return>
  </block_content>}</block></function>

}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>FilteredQuery</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>FilteredQuery</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>f4ef5944404</name><operator>..</operator><name>d700a3011f5</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>FilteredQuery</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>FilteredQuery</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">225</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">225</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>FilteredQuery</name> extends <name>Query</name> <block>{
     }</block>
 
     @<name>Override</name>
    <specifier>public</specifier> <name>boolean</name> <call><name>score</name><argument_list>(<argument><expr><name>Collector</name> <name>collector</name></expr></argument>, <argument><expr><name>int</name> <name>maxDoc</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><specifier>public</specifier> <name>boolean</name> <call><name>score</name><argument_list>(<argument><expr><name>LeafCollector</name> <name>collector</name></expr></argument>, <argument><expr><name>int</name> <name>maxDoc</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
       <comment type="line">// the normalization trick already applies the boost of this query,</comment>
       <comment type="line">// so we can use the wrapped scorer directly:</comment>
       <expr><call><name><name>collector</name><operator>.</operator><name>setScorer</name></name><argument_list>(<argument><expr><name>scorer</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>IndexSearcher</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>IndexSearcher</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">8b33ae736e5</literal><operator>..</operator><literal type="number">8f1a5f61dbd</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>IndexSearcher</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>IndexSearcher</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">275</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">275</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>IndexSearcher</name> <block>{
 
   <comment type="block" format="javadoc">/** Lower-level search API.
    *
   * &lt;p&gt;{@link Collector#collect(int)} is called for every matching
   * &lt;p&gt;{@link LeafCollector#collect(int)} is called for every matching
    * document.
    *
    * @param query to match documents
@@ -291,7 +291,7 @@ public class IndexSearcher {
 
   /** Lower-level search API.
    *
   * &lt;p&gt;{@link Collector#collect(int)} is called for every matching document.
   * &lt;p&gt;{@link LeafCollector#collect(int)} is called for every matching document.
    *
    * @throws BooleanQuery.TooManyClauses If a query would exceed 
    *         {@link BooleanQuery#getMaxClauseCount()} clauses.
@@ -578,7 +578,7 @@ public class IndexSearcher {
    * Lower-level search API.
    * 
    * &lt;p&gt;
   * {@link Collector#collect(int)} is called for every document. &lt;br&gt;
   * {@link LeafCollector#collect(int)} is called for every document. &lt;br&gt;
    * 
    * &lt;p&gt;
    * NOTE: this method executes the searches on all given leaves exclusively.
@@ -600,17 +600,18 @@ public class IndexSearcher {
     // threaded...?  the Collector could be sync'd?
     // always use single thread:
     for (AtomicReaderContext ctx : leaves) { // search each subreader
      final LeafCollector leafCollector;
       try {
        collector.setNextReader(ctx);
        leafCollector = collector.getLeafCollector(ctx);
       } catch (CollectionTerminatedException e) {
         // there is no doc of interest in this reader context
         // continue with the following leaf
         continue;
       }
      BulkScorer scorer = weight.bulkScorer(ctx, !collector.acceptsDocsOutOfOrder(), ctx.reader().getLiveDocs());
      BulkScorer scorer = weight.bulkScorer(ctx, !leafCollector.acceptsDocsOutOfOrder(), ctx.reader().getLiveDocs());
       if (scorer != null) {
         try {
          scorer.score(collector);
          scorer.score(leafCollector);
         } catch (CollectionTerminatedException e) {
           // collection was terminated prematurely
           // continue with the following leaf
@@ -779,12 +780,12 @@ public class IndexSearcher {
       try {
         final AtomicReaderContext ctx = slice.leaves[0];
         final int base = ctx.docBase;
        hq.setNextReader(ctx);
        hq.setScorer(fakeScorer);
        final LeafCollector collector = hq.getLeafCollector(ctx);
        collector.setScorer(fakeScorer);
         for(ScoreDoc scoreDoc : docs.scoreDocs) {
           fakeScorer.doc = scoreDoc.doc - base;
           fakeScorer.score = scoreDoc.score;
          hq.collect(scoreDoc.doc-base);
          collector.collect(scoreDoc.doc-base);
         }
 
         // Carry over maxScore from sub:
diff --git a/lucene/core/src/java/org/apache/lucene/search/LeafCollector.java b/lucene/core/src/java/org/apache/lucene/search/LeafCollector.java
new file mode 100644
index 00000000000..562e76dde76
-- /dev/null
++ b/lucene/core/src/java/org/apache/lucene/search/LeafCollector.java
@@ -0,0 +1,121 @@
package org.apache.lucene.search;

/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<expr><name>import</name> <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name></expr>;</block></expr></expr_stmt>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>

<comment type="block" format="javadoc">/**
 * &lt;p&gt;Collector decouples the score from the collected doc:
 * the score computation is skipped entirely if it's not
 * needed.  Collectors that do need the score should
 * implement the {@link #setScorer} method, to hold onto the
 * passed {@link Scorer} instance, and call {@link
 * Scorer#score()} within the collect method to compute the
 * current hit's score.  If your collector may request the
 * score for a single hit multiple times, you should use
 * {@link ScoreCachingWrappingScorer}. &lt;/p&gt;
 * 
 * &lt;p&gt;&lt;b&gt;NOTE:&lt;/b&gt; The doc that is passed to the collect
 * method is relative to the current reader. If your
 * collector needs to resolve this to the docID space of the
 * Multi*Reader, you must re-base it by recording the
 * docBase from the most recent setNextReader call.  Here's
 * a simple example showing how to collect docIDs into a
 * BitSet:&lt;/p&gt;
 * 
 * &lt;pre class="prettyprint"&gt;
 * IndexSearcher searcher = new IndexSearcher(indexReader);
 * final BitSet bits = new BitSet(indexReader.maxDoc());
 * searcher.search(query, new Collector() {
 *
 *   public LeafCollector getLeafCollector(AtomicReaderContext context)
 *       throws IOException {
 *     final int docBase = context.docBase;
 *     return new LeafCollector() {
 *
 *       &lt;em&gt;// ignore scorer&lt;/em&gt;
 *       public void setScorer(Scorer scorer) throws IOException {
 *       }
 *
 *       public void collect(int doc) throws IOException {
 *         bits.set(docBase + doc);
 *       }
 *
 *       // accept docs out of order (for a BitSet it doesn't matter)
 *       public boolean acceptsDocsOutOfOrder() {
 *         return true;
 *       }
 *          
 *     };
 *   }
 *      
 * });
 * &lt;/pre&gt;
 *
 * &lt;p&gt;Not all collectors will need to rebase the docID.  For
 * example, a collector that simply counts the total number
 * of hits would skip it.&lt;/p&gt;
 *
 * @lucene.experimental
 */</comment>
<interface><specifier>public</specifier> interface <name>LeafCollector</name> <block>{

  <comment type="block" format="javadoc">/**
   * Called before successive calls to {@link #collect(int)}. Implementations
   * that need the score of the current document (passed-in to
   * {@link #collect(int)}), should save the passed-in Scorer and call
   * scorer.score() when needed.
   */</comment>
  <decl_stmt><decl><type><name>void</name></type> <name>setScorer</name><argument_list>(<argument><expr><name>Scorer</name> <name>scorer</name></expr></argument>)</argument_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws></decl>;</decl_stmt>
  
  <comment type="block" format="javadoc">/**
   * Called once for every document matching a query, with the unbased document
   * number.
   * &lt;p&gt;Note: The collection of the current segment can be terminated by throwing
   * a {@link CollectionTerminatedException}. In this case, the last docs of the
   * current {@link AtomicReaderContext} will be skipped and {@link IndexSearcher}
   * will swallow the exception and continue collection with the next leaf.
   * &lt;p&gt;
   * Note: This is called in an inner search loop. For good search performance,
   * implementations of this method should not call {@link IndexSearcher#doc(int)} or
   * {@link org.apache.lucene.index.IndexReader#document(int)} on every hit.
   * Doing so can slow searches by an order of magnitude or more.
   */</comment>
  <decl_stmt><decl><type><name>void</name></type> <name>collect</name><argument_list>(<argument><expr><name>int</name> <name>doc</name></expr></argument>)</argument_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws></decl>;</decl_stmt>

  <comment type="block" format="javadoc">/**
   * Return &lt;code&gt;true&lt;/code&gt; if this collector does not
   * require the matching docIDs to be delivered in int sort
   * order (smallest to largest) to {@link #collect}.
   *
   * &lt;p&gt; Most Lucene Query implementations will visit
   * matching docIDs in order.  However, some queries
   * (currently limited to certain cases of {@link
   * BooleanQuery}) can achieve faster searching if the
   * &lt;code&gt;Collector&lt;/code&gt; allows them to deliver the
   * docIDs out of order.&lt;/p&gt;
   *
   * &lt;p&gt; Many collectors don't mind getting docIDs out of
   * order, so it's important to return &lt;code&gt;true&lt;/code&gt;
   * here.
   */</comment>
  <function_decl><type><name>boolean</name></type> <name>acceptsDocsOutOfOrder</name><parameter_list>()</parameter_list>;</function_decl>

}</block></interface>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>MultiCollector</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>MultiCollector</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">40c0838d72a</literal><operator>..</operator><literal type="number">859b8932567</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>MultiCollector</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>MultiCollector</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name></name>;</package>
  <expr_stmt><expr><operator>*</operator><operator>/</operator></expr></expr_stmt>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Collector</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">29</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">30</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Scorer</name></name>;</import>
  <expr_stmt><expr><operator>*</operator> <name>list</name> <name>of</name> <name>collectors</name> <name>and</name> <name>wraps</name> <name>them</name> <name>with</name> <block>{@<expr><name>link</name> <name>MultiCollector</name></expr>}</block></expr><operator>,</operator></expr_stmt> <while>while
  * filtering out the &lt;code&gt;null&lt;/code&gt; null ones.
  */
public class MultiCollector extends Collector <block>{<block_content>
<class><specifier>public</specifier> class <name>MultiCollector</name> <super_list><implements>implements <super><name>Collector</name></super></implements></super_list> <block>{

  <comment type="block" format="javadoc">/** See {@link #wrap(Iterable)}. */</comment>
  <function><type><specifier>public</specifier> <specifier>static</specifier> <name>Collector</name></type> <name>wrap</name><parameter_list>(<parameter><decl><type><name>Collector</name><modifier>...</modifier></type> <name>collectors</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <return>return <expr><call><name>wrap</name><argument_list>(<argument><expr><call><name><name>Arrays</name><operator>.</operator><name>asList</name></name><argument_list>(<argument><expr><name>collectors</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>
 
   <comment type="block" format="javadoc">/**
    * Wraps a list of {@link Collector}s with a {@link MultiCollector}. This
@@ -47,7 +53,7 @@ public class MultiCollector extends Collector {
    *           if either 0 collectors were input, or all collectors are
    *           &lt;code&gt;null&lt;/code&gt;.
    */</comment>
  <function><type><specifier>public</specifier> <specifier>static</specifier> <name>Collector</name></type> <name>wrap</name><parameter_list>(<parameter><decl><type><name>Collector</name><modifier>...</modifier></type> <name>collectors</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <function><type><specifier>public</specifier> <specifier>static</specifier> <name>Collector</name></type> <name>wrap</name><parameter_list>(<parameter><decl><type><name><name>Iterable</name><argument_list type="generic">&lt;<argument><name>?</name> <extends>extends <name>Collector</name></extends></argument>&gt;</argument_list></name></type> <name>collectors</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <comment type="line">// For the user's convenience, we allow null collectors to be passed.</comment>
     <comment type="line">// However, to improve performance, these null collectors are found</comment>
     <comment type="line">// and dropped from the array we save for actual collection time.</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">70</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">76</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>MultiCollector</name> extends <name>Collector</name> <block>{
         }</block></expr></expr_stmt>
       </block_content>}</block></function>
       <return>return <expr><name>col</name></expr>;</return>
    </block_content>}</block></function> <if_stmt><if type="elseif">else if <condition>(<expr><name>n</name> <operator>==</operator> <name><name>collectors</name><operator>.</operator><name>length</name></name></expr>)</condition> <block>{<block_content>
      <return>return <expr><operator>new</operator> <call><name>MultiCollector</name><argument_list>(<argument><expr><name>collectors</name></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block></if> <else>else <block>{<block_content>
       <decl_stmt><decl><type><name><name>Collector</name><index>[]</index></name></type> <name>colls</name> <init>= <expr><operator>new</operator> <name><name>Collector</name><index>[<expr><name>n</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><name>n</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">91</literal></expr><operator>,</operator><expr><literal type="number">34</literal> <operator>+</operator><literal type="number">95</literal></expr><operator>,</operator><expr><literal type="number">47</literal> @@ <specifier>public</specifier> <name>class</name> <name>MultiCollector</name> extends <name>Collector</name> <block>{
   }</block>
 
   @<name>Override</name>
  <specifier>public</specifier> <name>boolean</name> <call><name>acceptsDocsOutOfOrder</name><argument_list>()</argument_list></call> <block>{
    <for>for <control>(<init><decl><type><name>Collector</name></type> <name>c</name> <range>: <expr><name>collectors</name></expr></range></decl></init>)</control> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>c</name><operator>.</operator><name>acceptsDocsOutOfOrder</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
        <return>return <expr><literal type="boolean">false</literal></expr>;</return>
      </block_content>}</block></if></if_stmt>
  <function><type><specifier>public</specifier> <name>LeafCollector</name></type> <name>getLeafCollector</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>LeafCollector</name><index>[]</index></name></type> <name>leafCollectors</name> <init>= <expr><operator>new</operator> <name><name>LeafCollector</name><index>[<expr><name><name>collectors</name><operator>.</operator><name>length</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>collectors</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{<block_content>
      <expr_stmt><expr><name><name>leafCollectors</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>collectors</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>getLeafCollector</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></for>
    <return>return <expr><literal type="boolean">true</literal></expr>;</return>
    <return>return <expr><operator>new</operator> <call><name>MultiLeafCollector</name><argument_list>(<argument><expr><name>leafCollectors</name></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
 
  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>collect</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <for>for <control>(<init><decl><type><name>Collector</name></type> <name>c</name> <range>: <expr><name>collectors</name></expr></range></decl></init>)</control> <block>{<block_content>
      <expr_stmt><expr><call><name><name>c</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <class><specifier>private</specifier> <specifier>static</specifier> class <name>MultiLeafCollector</name> <super_list><implements>implements <super><name>LeafCollector</name></super></implements></super_list> <block>{

    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name><name>LeafCollector</name><index>[]</index></name></type> <name>collectors</name></decl>;</decl_stmt>

    <constructor><specifier>private</specifier> <name>MultiLeafCollector</name><parameter_list>(<parameter><decl><type><name><name>LeafCollector</name><index>[]</index></name></type> <name>collectors</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>collectors</name></name> <operator>=</operator> <name>collectors</name></expr>;</expr_stmt>
     </block_content>}</block></constructor>
  }</block></class>
 
  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <for>for <control>(<init><decl><type><name>Collector</name></type> <name>c</name> <range>: <expr><name>collectors</name></expr></range></decl></init>)</control> <block>{<block_content>
      <expr_stmt><expr><call><name><name>c</name><operator>.</operator><name>setNextReader</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>setScorer</name><parameter_list>(<parameter><decl><type><name>Scorer</name></type> <name>scorer</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
      <for>for <control>(<init><decl><type><name>LeafCollector</name></type> <name>c</name> <range>: <expr><name>collectors</name></expr></range></decl></init>)</control> <block>{<block_content>
        <expr_stmt><expr><call><name><name>c</name><operator>.</operator><name>setScorer</name></name><argument_list>(<argument><expr><name>scorer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></for>
     </block_content>}</block></function>
  </block_content>}</block></for>
 
  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>setScorer</name><parameter_list>(<parameter><decl><type><name>Scorer</name></type> <name>s</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <for>for <control>(<init><decl><type><name>Collector</name></type> <name>c</name> <range>: <expr><name>collectors</name></expr></range></decl></init>)</control> <block>{<block_content>
      <expr_stmt><expr><call><name><name>c</name><operator>.</operator><name>setScorer</name></name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>collect</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
      <for>for <control>(<init><decl><type><name>LeafCollector</name></type> <name>c</name> <range>: <expr><name>collectors</name></expr></range></decl></init>)</control> <block>{<block_content>
        <expr_stmt><expr><call><name><name>c</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></for>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>boolean</name></type> <name>acceptsDocsOutOfOrder</name><parameter_list>()</parameter_list> <block>{<block_content>
      <for>for <control>(<init><decl><type><name>LeafCollector</name></type> <name>c</name> <range>: <expr><name>collectors</name></expr></range></decl></init>)</control> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>c</name><operator>.</operator><name>acceptsDocsOutOfOrder</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
          <return>return <expr><literal type="boolean">false</literal></expr>;</return>
        </block_content>}</block></if></if_stmt>
      </block_content>}</block></for>
      <return>return <expr><literal type="boolean">true</literal></expr>;</return>
     </block_content>}</block></function>

   </block_content>}</block></for>
 
 </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>PositiveScoresOnlyCollector</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>PositiveScoresOnlyCollector</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>d35a755e2f0</name><operator>..</operator><name>ba222951cbd</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>PositiveScoresOnlyCollector</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>PositiveScoresOnlyCollector</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">26</literal></expr><operator>,</operator><expr><literal type="number">38</literal> <operator>+</operator><literal type="number">26</literal></expr><operator>,</operator><expr><literal type="number">33</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
  <expr_stmt><expr><operator>*</operator> <block>{@<expr><name>link</name> <name>Collector</name></expr>}</block> <name>and</name> <name>makes</name> <name>sure</name> <name>only</name> <name>documents</name> <name>with</name>
  <operator>*</operator> <name>scores</name> <operator>&amp;</operator><name>gt</name></expr>;</expr_stmt> <expr_stmt><expr><literal type="number">0</literal> <name>are</name> <name><name>collected</name><operator>.</operator></name>
  *<operator>/</operator>
<specifier>public</specifier> <name>class</name> <name>PositiveScoresOnlyCollector</name> extends <name>Collector</name> <block>{
<expr><specifier>public</specifier> <name>class</name> <name>PositiveScoresOnlyCollector</name> extends <name>FilterCollector</name> <block>{
 
  <expr><name>final</name> <specifier>private</specifier> <name>Collector</name> <name>c</name></expr>;
  <specifier>private</specifier> <name>Scorer</name> <name>scorer</name></block></expr>;
  
  <specifier>public</specifier> <call><name>PositiveScoresOnlyCollector</name><argument_list>(<argument><expr><name>Collector</name> <name>c</name></expr></argument>)</argument_list></call> <block>{
    <expr><name><name>this</name><operator>.</operator><name>c</name></name> <operator>=</operator> <name>c</name></expr>;
  }</block>
  
  @<name>Override</name>
  <specifier>public</specifier> <name>void</name> <call><name>collect</name><argument_list>(<argument><expr><name>int</name> <name>doc</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></block></expr></expr_stmt>
    <if_stmt><if>if <condition>(<expr><call><name><name>scorer</name><operator>.</operator><name>score</name></name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>c</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>c</name><operator>.</operator><name>setNextReader</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>setScorer</name><parameter_list>(<parameter><decl><type><name>Scorer</name></type> <name>scorer</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <comment type="line">// Set a ScoreCachingWrappingScorer in case the wrapped Collector will call</comment>
    <comment type="line">// score() also.</comment>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>scorer</name></name> <operator>=</operator> <operator>new</operator> <call><name>ScoreCachingWrappingScorer</name><argument_list>(<argument><expr><name>scorer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>c</name><operator>.</operator><name>setScorer</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>scorer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <constructor><specifier>public</specifier> <name>PositiveScoresOnlyCollector</name><parameter_list>(<parameter><decl><type><name>Collector</name></type> <name>in</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></constructor>
 
   <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>boolean</name></type> <name>acceptsDocsOutOfOrder</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><call><name><name>c</name><operator>.</operator><name>acceptsDocsOutOfOrder</name></name><argument_list>()</argument_list></call></expr>;</return>
  <function><type><specifier>public</specifier> <name>LeafCollector</name></type> <name>getLeafCollector</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list>
      <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <return>return <expr><operator>new</operator> <class><super><name>FilterLeafCollector</name></super><argument_list>(<argument><expr><call><name><name>super</name><operator>.</operator><name>getLeafCollector</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list> <block>{

      <decl_stmt><decl><type><specifier>private</specifier> <name>Scorer</name></type> <name>scorer</name></decl>;</decl_stmt>

      <function><annotation>@<name>Override</name></annotation>
      <type><specifier>public</specifier> <name>void</name></type> <name>setScorer</name><parameter_list>(<parameter><decl><type><name>Scorer</name></type> <name>scorer</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>scorer</name></name> <operator>=</operator> <operator>new</operator> <call><name>ScoreCachingWrappingScorer</name><argument_list>(<argument><expr><name>scorer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>in</name><operator>.</operator><name>setScorer</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>scorer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></function>

      <function><annotation>@<name>Override</name></annotation>
      <type><specifier>public</specifier> <name>void</name></type> <name>collect</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><call><name><name>scorer</name><operator>.</operator><name>score</name></name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name><name>in</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
      </block_content>}</block></function>
      
    }</block></class></expr>;</return>
   </block_content>}</block></function>
 
 </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>ScoreCachingWrappingScorer</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>ScoreCachingWrappingScorer</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">471dc20e123</literal><operator>..</operator><literal type="number">844290c856a</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>ScoreCachingWrappingScorer</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>ScoreCachingWrappingScorer</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">37</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">37</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ScoreCachingWrappingScorer</name> extends <name>Scorer</name> <block>{
   <expr><specifier>private</specifier> <name>final</name> <name>Scorer</name> <name>scorer</name></expr>;
   <specifier>private</specifier> <name>int</name> <name>curDoc</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></block></expr>;</expr_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <name>float</name></type> <name>curScore</name></decl>;</decl_stmt>
  

   <comment type="block" format="javadoc">/** Creates a new instance by wrapping the given scorer. */</comment>
   <constructor><specifier>public</specifier> <name>ScoreCachingWrappingScorer</name><parameter_list>(<parameter><decl><type><name>Scorer</name></type> <name>scorer</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name><name>scorer</name><operator>.</operator><name>weight</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">51</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">51</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ScoreCachingWrappingScorer</name> extends <name>Scorer</name> <block>{
       <expr><name>curScore</name> <operator>=</operator> <call><name><name>scorer</name><operator>.</operator><name>score</name></name><argument_list>()</argument_list></call></expr>;
       <name>curDoc</name> <operator>=</operator> <name>doc</name></block></expr>;</expr_stmt>
     </block_content>}</block></constructor>
    

     <return>return <expr><name>curScore</name></expr>;</return>
   </block_content>}</block></function>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>Scorer</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>Scorer</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>abcbb616c84</name><operator>..</operator><literal type="number">929d3b9a65f</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>Scorer</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>Scorer</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">57</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">57</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>Scorer</name> extends <name>DocsEnum</name> <block>{
   <comment type="block" format="javadoc">/** Returns the score of the current document matching the query.
    * Initially invalid, until {@link #nextDoc()} or {@link #advance(int)}
    * is called the first time, or when called from within
   * {@link Collector#collect}.
   * {@link LeafCollector#collect}.
    */</comment>
   <expr><specifier>public</specifier> <specifier>abstract</specifier> <name>float</name> <call><name>score</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws></expr>;
   
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SimpleCollector</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SimpleCollector</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">00000000000..5803b2e4dee</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SimpleCollector</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal><operator>,</operator><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal><operator>,</operator><literal type="number">53</literal> @@</block></expr></expr_stmt>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name></name>;</package>

<comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Base {@link Collector} implementation that is used to collect all contexts.
 *
 * @lucene.experimental
 */</comment>
<class><specifier>public</specifier> <specifier>abstract</specifier> class <name>SimpleCollector</name> <super_list><implements>implements <super><name>Collector</name></super>, <super><name>LeafCollector</name></super></implements></super_list> <block>{

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <specifier>final</specifier> <name>LeafCollector</name></type> <name>getLeafCollector</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name>doSetNextReader</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name>this</name></expr>;</return>
  </block_content>}</block></function>

  <comment type="block" format="javadoc">/** This method is called before collecting &lt;code&gt;context&lt;/code&gt;. */</comment>
  <function><type><specifier>protected</specifier> <name>void</name></type> <name>doSetNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content/>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>setScorer</name><parameter_list>(<parameter><decl><type><name>Scorer</name></type> <name>scorer</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <comment type="line">// no-op by default</comment>
  </block_content>}</block></function>

  <comment type="line">// redeclare methods so that javadocs are inherited on sub-classes</comment>

  <function_decl><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <specifier>abstract</specifier> <name>boolean</name></type> <name>acceptsDocsOutOfOrder</name><parameter_list>()</parameter_list>;</function_decl>

  <decl_stmt><decl><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <specifier>abstract</specifier> <name>void</name></type> <name>collect</name><argument_list>(<argument><expr><name>int</name> <name>doc</name></expr></argument>)</argument_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws></decl>;</decl_stmt>

}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SortRescorer</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SortRescorer</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">1bb21343c40</literal><operator>..</operator><literal type="number">6f125e8a5c3</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SortRescorer</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SortRescorer</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">75</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">75</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SortRescorer</name> extends <name>Rescorer</name> <block>{
 
       <if_stmt><if>if <condition>(<expr><name>readerContext</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
         <comment type="line">// We advanced to another segment:</comment>
        <expr_stmt><expr><call><name><name>collector</name><operator>.</operator><name>setNextReader</name></name><argument_list>(<argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>collector</name><operator>.</operator><name>getLeafCollector</name></name><argument_list>(<argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><call><name><name>collector</name><operator>.</operator><name>setScorer</name></name><argument_list>(<argument><expr><name>fakeScorer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><name>docBase</name> <operator>=</operator> <name><name>readerContext</name><operator>.</operator><name>docBase</name></name></expr>;</expr_stmt>
       </block_content>}</block></if></if_stmt>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TimeLimitingCollector</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TimeLimitingCollector</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">2d2eb0ee948</literal><operator>..</operator><literal type="number">9a08a2b4b8f</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TimeLimitingCollector</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TimeLimitingCollector</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">29</literal><operator>,</operator><literal type="number">7</literal> <operator>+</operator><literal type="number">29</literal><operator>,</operator><literal type="number">7</literal> @@</block></expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
  <expr_stmt><expr><operator>*</operator> <name>exceeded</name></expr><operator>,</operator> <expr><name>the</name> <name>search</name> <name>thread</name> <name>is</name> <name>stopped</name> <name>by</name> <name>throwing</name> <name>a</name>
  <operator>*</operator> <block>{@<expr><name>link</name> <name>TimeExceededException</name></expr>}</block><operator>.</operator>
  <operator>*</operator><operator>/</operator>
<specifier>public</specifier> <name>class</name> <name>TimeLimitingCollector</name> extends <name>Collector</name> <block>{
<expr><specifier>public</specifier> <name>class</name> <name>TimeLimitingCollector</name> implements <name>Collector</name> <block>{
 
 
   <comment type="block" format="javadoc">/** Thrown when elapsed search time exceeds allowed search time. */</comment>
@@ <expr><operator>-</operator><literal type="number">131</literal></expr>,<expr><literal type="number">45</literal> <operator>+</operator><literal type="number">131</literal></expr>,<expr><literal type="number">30</literal> @@ <specifier>public</specifier> <name>class</name> <name>TimeLimitingCollector</name> extends <name>Collector</name> <block>{
     <expr><name><name>this</name><operator>.</operator><name>greedy</name></name> <operator>=</operator> <name>greedy</name></expr>;</block></expr>
   }</block>
   
  <comment type="block" format="javadoc">/**
   * Calls {@link Collector#collect(int)} on the decorated {@link Collector}
   * unless the allowed time has passed, in which case it throws an exception.
   * 
   * @throws TimeExceededException
   *           if the time allowed has exceeded.
   */</comment>
  @<name>Override</name>
  <specifier>public</specifier> <name>void</name> <call><name>collect</name><argument_list>(<argument><expr><name>final</name> <name>int</name> <name>doc</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><name>final</name> <name>long</name> <name>time</name> <operator>=</operator> <call><name><name>clock</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</block></expr></expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>timeout</name> <operator>&lt;</operator> <name>time</name></expr>)</condition> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><name>greedy</name></expr>)</condition> <block>{<block_content>
        <comment type="line">//System.out.println(this+"  greedy: before failing, collecting doc: "+(docBase + doc)+"  "+(time-t0));</comment>
        <expr_stmt><expr><call><name><name>collector</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
      <comment type="line">//System.out.println(this+"  failing on:  "+(docBase + doc)+"  "+(time-t0));</comment>
      <throw>throw <expr><operator>new</operator> <call><name>TimeExceededException</name><argument_list>( <argument><expr><name>timeout</name><operator>-</operator><name>t0</name></expr></argument>, <argument><expr><name>time</name><operator>-</operator><name>t0</name></expr></argument>, <argument><expr><name>docBase</name> <operator>+</operator> <name>doc</name></expr></argument> )</argument_list></call></expr>;</throw>
    </block_content>}</block></if></if_stmt>
    <comment type="line">//System.out.println(this+"  collecting: "+(docBase + doc)+"  "+(time-t0));</comment>
    <expr_stmt><expr><call><name><name>collector</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></for>
  
   <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>collector</name><operator>.</operator><name>setNextReader</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <function><type><specifier>public</specifier> <name>LeafCollector</name></type> <name>getLeafCollector</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
     <expr_stmt><expr><name><name>this</name><operator>.</operator><name>docBase</name></name> <operator>=</operator> <name><name>context</name><operator>.</operator><name>docBase</name></name></expr>;</expr_stmt>
     <if_stmt><if>if <condition>(<expr><name><name>Long</name><operator>.</operator><name>MIN_VALUE</name></name> <operator>==</operator> <name>t0</name></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><call><name>setBaseline</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></if></if_stmt>
  </block_content>}</block></function>
  
  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>setScorer</name><parameter_list>(<parameter><decl><type><name>Scorer</name></type> <name>scorer</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>collector</name><operator>.</operator><name>setScorer</name></name><argument_list>(<argument><expr><name>scorer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>boolean</name></type> <name>acceptsDocsOutOfOrder</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><call><name><name>collector</name><operator>.</operator><name>acceptsDocsOutOfOrder</name></name><argument_list>()</argument_list></call></expr>;</return>
    <return>return <expr><operator>new</operator> <class><super><name>FilterLeafCollector</name></super><argument_list>(<argument><expr><call><name><name>collector</name><operator>.</operator><name>getLeafCollector</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list> <block>{
      
      <function><annotation>@<name>Override</name></annotation>
      <type><specifier>public</specifier> <name>void</name></type> <name>collect</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><specifier>final</specifier> <name>long</name></type> <name>time</name> <init>= <expr><call><name><name>clock</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><name>timeout</name> <operator>&lt;</operator> <name>time</name></expr>)</condition> <block>{<block_content>
          <if_stmt><if>if <condition>(<expr><name>greedy</name></expr>)</condition> <block>{<block_content>
            <comment type="line">//System.out.println(this+"  greedy: before failing, collecting doc: "+(docBase + doc)+"  "+(time-t0));</comment>
            <expr_stmt><expr><call><name><name>in</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          </block_content>}</block></if></if_stmt>
          <comment type="line">//System.out.println(this+"  failing on:  "+(docBase + doc)+"  "+(time-t0));</comment>
          <throw>throw <expr><operator>new</operator> <call><name>TimeExceededException</name><argument_list>( <argument><expr><name>timeout</name><operator>-</operator><name>t0</name></expr></argument>, <argument><expr><name>time</name><operator>-</operator><name>t0</name></expr></argument>, <argument><expr><name>docBase</name> <operator>+</operator> <name>doc</name></expr></argument> )</argument_list></call></expr>;</throw>
        </block_content>}</block></if></if_stmt>
        <comment type="line">//System.out.println(this+"  collecting: "+(docBase + doc)+"  "+(time-t0));</comment>
        <expr_stmt><expr><call><name><name>in</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></function>
      
    }</block></class></expr>;</return>
   </block_content>}</block></function>
   
   <comment type="block" format="javadoc">/**
diff --git a/lucene/core/src/java/org/apache/lucene/search/TopDocsCollector.java b/lucene/core/src/java/org/apache/lucene/search/TopDocsCollector.java
index 5e7dd50406f..bd0687e9e16 100644
-- a/lucene/core/src/java/org/apache/lucene/search/TopDocsCollector.java
++ b/lucene/core/src/java/org/apache/lucene/search/TopDocsCollector.java
@@ -31,7 +31,7 @@ import org.apache.lucene.util.PriorityQueue;
  * however, you might want to consider overriding all methods, in order to avoid
  * a NullPointerException.
  */</comment>
<class><specifier>public</specifier> <specifier>abstract</specifier> class <name><name>TopDocsCollector</name><parameter_list>&lt;<parameter><name>T</name> <extends>extends <name>ScoreDoc</name></extends></parameter>&gt;</parameter_list></name> <super_list><extends>extends <super><name>Collector</name></super></extends></super_list> <block>{
<class><specifier>public</specifier> <specifier>abstract</specifier> class <name><name>TopDocsCollector</name><parameter_list>&lt;<parameter><name>T</name> <extends>extends <name>ScoreDoc</name></extends></parameter>&gt;</parameter_list></name> <super_list><extends>extends <super><name>SimpleCollector</name></super></extends></super_list> <block>{
 
   <comment type="block" format="javadoc">/** This is used in case topDocs() is called with illegal parameters, or there
    *  simply aren't (enough) results. */</comment>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TopFieldCollector</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TopFieldCollector</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">3f1fa156230</literal><operator>..</operator><literal type="number">6f038c41786</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TopFieldCollector</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TopFieldCollector</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">92</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">92</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>TopFieldCollector</name> extends <name><name>TopDocsCollector</name><argument_list type="generic">&lt;<argument><name>Entry</name></argument>&gt;</argument_list></name> <block>{
     }</block>
     
     @<name>Override</name>
    <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><specifier>protected</specifier> <name>void</name> <call><name>doSetNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
       <expr><name><name>this</name><operator>.</operator><name>docBase</name></name> <operator>=</operator> <name><name>context</name><operator>.</operator><name>docBase</name></name></expr></block></expr></argument></throws></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>queue</name><operator>.</operator><name>setComparator</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><call><name><name>comparator</name><operator>.</operator><name>setNextReader</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><name>comparator</name> <operator>=</operator> <name><name>queue</name><operator>.</operator><name>firstComparator</name></name></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">446</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">446</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>TopFieldCollector</name> extends <name><name>TopDocsCollector</name><argument_list type="generic">&lt;<argument><name>Entry</name></argument>&gt;</argument_list></name> <block>{
     }</block>
 
     @<name>Override</name>
    <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><specifier>protected</specifier> <name>void</name> <call><name>doSetNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
       <expr><name>docBase</name> <operator>=</operator> <name><name>context</name><operator>.</operator><name>docBase</name></name></expr></block></expr></argument></throws></expr>;</expr_stmt>
       <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>comparators</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
         <expr_stmt><expr><call><name><name>queue</name><operator>.</operator><name>setComparator</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>, <argument><expr><name><name>comparators</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>setNextReader</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1001</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">1001</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>TopFieldCollector</name> extends <name><name>TopDocsCollector</name><argument_list type="generic">&lt;<argument><name>Entry</name></argument>&gt;</argument_list></name> <block>{
     }</block>
 
     @<name>Override</name>
    <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><specifier>protected</specifier> <name>void</name> <call><name>doSetNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
       <expr><name>docBase</name> <operator>=</operator> <name><name>context</name><operator>.</operator><name>docBase</name></name></expr></block></expr></argument></throws></expr>;</expr_stmt>
       <expr_stmt><expr><name>afterDoc</name> <operator>=</operator> <name><name>after</name><operator>.</operator><name>doc</name></name> <operator>-</operator> <name>docBase</name></expr>;</expr_stmt>
       <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>comparators</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TopScoreDocCollector</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TopScoreDocCollector</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">0674779f718</literal><operator>..</operator><name>bfebeda930d</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TopScoreDocCollector</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TopScoreDocCollector</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">113</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">113</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>TopScoreDocCollector</name> extends <name><name>TopDocsCollector</name><argument_list type="generic">&lt;<argument><name>ScoreDoc</name></argument>&gt;</argument_list></name> <block>{
     }</block>
 
     @<name>Override</name>
    <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <block>{
      <expr><call><name><name>super</name><operator>.</operator><name>setNextReader</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;
      <name>afterDoc</name> <operator>=</operator> <name><name>after</name><operator>.</operator><name>doc</name></name> <operator>-</operator> <name>docBase</name></block></expr>;</expr_stmt>
    <function><type><specifier>protected</specifier> <name>void</name></type> <name>doSetNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
      <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>doSetNextReader</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>afterDoc</name> <operator>=</operator> <name><name>after</name><operator>.</operator><name>doc</name></name> <operator>-</operator> <name><name>context</name><operator>.</operator><name>docBase</name></name></expr>;</expr_stmt>
     </block_content>}</block></function>
 
     <annotation>@<name>Override</name></annotation>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">208</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">208</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>TopScoreDocCollector</name> extends <name><name>TopDocsCollector</name><argument_list type="generic">&lt;<argument><name>ScoreDoc</name></argument>&gt;</argument_list></name> <block>{
     }</block>
     
     @<name>Override</name>
    <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <block>{
      <expr><call><name><name>super</name><operator>.</operator><name>setNextReader</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;
      <name>afterDoc</name> <operator>=</operator> <name><name>after</name><operator>.</operator><name>doc</name></name> <operator>-</operator> <name>docBase</name></block></expr>;</expr_stmt>
    <function><type><specifier>protected</specifier> <name>void</name></type> <name>doSetNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
      <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>doSetNextReader</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>afterDoc</name> <operator>=</operator> <name><name>after</name><operator>.</operator><name>doc</name></name> <operator>-</operator> <name><name>context</name><operator>.</operator><name>docBase</name></name></expr>;</expr_stmt>
     </block_content>}</block></function>
     
     <annotation>@<name>Override</name></annotation>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">300</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">300</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>TopScoreDocCollector</name> extends <name><name>TopDocsCollector</name><argument_list type="generic">&lt;<argument><name>ScoreDoc</name></argument>&gt;</argument_list></name> <block>{
   }</block>
   
   @<name>Override</name>
  <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <block>{
  <expr><specifier>protected</specifier> <name>void</name> <call><name>doSetNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><name>docBase</name> <operator>=</operator> <name><name>context</name><operator>.</operator><name>docBase</name></name></expr></block></expr></argument></throws></expr>;
   }</block></expr></expr_stmt>
   
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TotalHitCountCollector</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TotalHitCountCollector</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">1704d8b701c</literal><operator>..</operator><literal type="number">4fc5be65002</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TotalHitCountCollector</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TotalHitCountCollector</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
  * Just counts the total number of hits.
  */</comment>
 
<class><specifier>public</specifier> class <name>TotalHitCountCollector</name> <super_list><extends>extends <super><name>Collector</name></super></extends></super_list> <block>{
<class><specifier>public</specifier> class <name>TotalHitCountCollector</name> <super_list><extends>extends <super><name>SimpleCollector</name></super></extends></super_list> <block>{
   <decl_stmt><decl><type><specifier>private</specifier> <name>int</name></type> <name>totalHits</name></decl>;</decl_stmt>
 
   <comment type="block" format="javadoc">/** Returns how many hits matched the search. */</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">31</literal></expr><operator>,</operator><expr><literal type="number">19</literal> <operator>+</operator><literal type="number">30</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>TotalHitCountCollector</name> extends <name>Collector</name> <block>{
     <return>return <expr><name>totalHits</name></expr>;</return>
   }</block></expr></expr_stmt>
 
  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>setScorer</name><parameter_list>(<parameter><decl><type><name>Scorer</name></type> <name>scorer</name></decl></parameter>)</parameter_list> <block>{<block_content>
  </block_content>}</block></function>

   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>public</specifier> <name>void</name></type> <name>collect</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <expr_stmt><expr><name>totalHits</name><operator>++</operator></expr>;</expr_stmt>
   </block_content>}</block></function>
 
  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{<block_content>
  </block_content>}</block></function>

   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>public</specifier> <name>boolean</name></type> <name>acceptsDocsOutOfOrder</name><parameter_list>()</parameter_list> <block>{<block_content>
     <return>return <expr><literal type="boolean">true</literal></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>Weight</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>Weight</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">696c7ab764a</literal><operator>..</operator><literal type="number">0603cd8d478</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>Weight</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>Weight</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">150</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">150</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>Weight</name> <block>{
     }</block>
 
     @<name>Override</name>
    <specifier>public</specifier> <name>boolean</name> <call><name>score</name><argument_list>(<argument><expr><name>Collector</name> <name>collector</name></expr></argument>, <argument><expr><name>int</name> <name>max</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><specifier>public</specifier> <name>boolean</name> <call><name>score</name><argument_list>(<argument><expr><name>LeafCollector</name> <name>collector</name></expr></argument>, <argument><expr><name>int</name> <name>max</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument>
       <comment type="line">// TODO: this may be sort of weird, when we are</comment>
       <comment type="line">// embedded in a BooleanScorer, because we are</comment>
       <comment type="line">// called for every chunk of 2048 documents.  But,</comment>
@<argument>@ <expr><operator>-</operator><literal type="number">172</literal></expr></argument>,<argument><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">172</literal></expr></argument>,<argument><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>Weight</name></expr></argument></throws> <block>{<block_content>
   <comment type="block" format="javadoc">/**
    * Returns true iff this implementation scores docs only out of order. This
    * method is used in conjunction with {@link Collector}'s
   * {@link Collector#acceptsDocsOutOfOrder() acceptsDocsOutOfOrder} and
   * {@link LeafCollector#acceptsDocsOutOfOrder() acceptsDocsOutOfOrder} and
    * {@link #bulkScorer(AtomicReaderContext, boolean, Bits)} to
    * create a matching {@link Scorer} instance for a given {@link Collector}, or
    * vice versa.
diff --git a/lucene/core/src/java/org/apache/lucene/search/package.html b/lucene/core/src/java/org/apache/lucene/search/package.html
index 51e199e025d..889501a4941 100644
-- a/lucene/core/src/java/org/apache/lucene/search/package.html
++ b/lucene/core/src/java/org/apache/lucene/search/package.html
@@ -508,7 +508,7 @@ on the built-in available scoring models and extending or changing Similarity.
         abstract method:
         &lt;ol&gt;
             &lt;li&gt;
                {@link org.apache.lucene.search.BulkScorer#score(org.apache.lucene.search.Collector,int) score(Collector,int)} &amp;mdash;
                {@link org.apache.lucene.search.BulkScorer#score(org.apache.lucene.search.LeafCollector,int) score(LeafCollector,int)} &amp;mdash;
 		Score all documents up to but not including the specified max document.
 	    &lt;/li&gt;
         &lt;/ol&gt;
@@ -563,7 +563,7 @@ on the built-in available scoring models and extending or changing Similarity.
 &lt;p&gt;If a Filter is being used, some initial setup is done to determine which docs to include. 
    Otherwise, we ask the Weight for a {@link org.apache.lucene.search.Scorer Scorer} for each
    {@link org.apache.lucene.index.IndexReader IndexReader} segment and proceed by calling
   {@link org.apache.lucene.search.BulkScorer#score(org.apache.lucene.search.Collector) BulkScorer.score(Collector)}.
   {@link org.apache.lucene.search.BulkScorer#score(org.apache.lucene.search.LeafCollector) BulkScorer.score(LeafCollector)}.
 &lt;/p&gt;
 &lt;p&gt;At last, we are actually going to score some documents. The score method takes in the Collector
    (most likely the TopScoreDocCollector or TopFieldCollector) and does its business.Of course, here 
diff --git a/lucene/core/src/test/org/apache/lucene/index/TestOmitTf.java b/lucene/core/src/test/org/apache/lucene/index/TestOmitTf.java
index 47abea28b83..04fad029d86 100644
-- a/lucene/core/src/test/org/apache/lucene/index/TestOmitTf.java
++ b/lucene/core/src/test/org/apache/lucene/index/TestOmitTf.java
@@ -26,6 +26,7 @@ import org.apache.lucene.document.Field;
 import org.apache.lucene.document.FieldType;
 import org.apache.lucene.document.TextField;
 import org.apache.lucene.index.FieldInfo.IndexOptions;
import org.apache.lucene.search.LeafCollector;
 import org.apache.lucene.search.BooleanClause.Occur;
 import org.apache.lucene.search.BooleanQuery;
 import org.apache.lucene.search.CollectionStatistics;
@@ -34,6 +35,7 @@ import org.apache.lucene.search.Explanation;
 import org.apache.lucene.search.IndexSearcher;
 import org.apache.lucene.search.PhraseQuery;
 import org.apache.lucene.search.Scorer;
import org.apache.lucene.search.SimpleCollector;
 import org.apache.lucene.search.TermQuery;
 import org.apache.lucene.search.TermStatistics;
 import org.apache.lucene.search.similarities.TFIDFSimilarity;
@@ -414,14 +416,12 @@ public class TestOmitTf extends LuceneTestCase {
     dir.close();
   }
      
  public static class CountingHitCollector extends Collector {
  public static class CountingHitCollector extends SimpleCollector {
     static int count=0;
     static int sum=0;
     private int docBase = -1;
     CountingHitCollector(){count=0;sum=0;}
     @Override
    public void setScorer(Scorer scorer) throws IOException {}
    @Override
     public void collect(int doc) throws IOException {
       count++;
       sum += doc + docBase;  // use it to avoid any possibility of being merged away
@@ -431,7 +431,7 @@ public class TestOmitTf extends LuceneTestCase {
     public static int getSum() { return sum; }
     
     @Override
    public void setNextReader(AtomicReaderContext context) {
    protected void doSetNextReader(AtomicReaderContext context) throws IOException {
       docBase = context.docBase;
     }
     @Override
diff --git a/lucene/core/src/test/org/apache/lucene/search/JustCompileSearch.java b/lucene/core/src/test/org/apache/lucene/search/JustCompileSearch.java
index ee4775946ae..f09d992e0fc 100644
-- a/lucene/core/src/test/org/apache/lucene/search/JustCompileSearch.java
++ b/lucene/core/src/test/org/apache/lucene/search/JustCompileSearch.java
@@ -17,6 +17,8 @@ package org.apache.lucene.search;
  * limitations under the License.
  */</comment>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>

 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Terms</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>TermsEnum</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">37</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">39</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <name>final</name> <name>class</name> <name>JustCompileSearch</name> <block>{
 
   <expr><specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>UNSUPPORTED_MSG</name> <operator>=</operator> <literal type="string">"unsupported: used for back-compat testing only !"</literal></expr>;
 
  <specifier>static</specifier> <name>final</name> <name>class</name> <name>JustCompileCollector</name> extends <name>Collector</name> <block>{
  <expr><specifier>static</specifier> <name>final</name> <name>class</name> <name>JustCompileCollector</name> extends <name>SimpleCollector</name> <block>{
 
     @<expr><name>Override</name>
     <specifier>public</specifier> <name>void</name> <call><name>collect</name><argument_list>(<argument><expr><name>int</name> <name>doc</name></expr></argument>)</argument_list></call> <block>{
@@ <expr><operator>-</operator><literal type="number">45</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">47</literal></expr>,<expr><literal type="number">7</literal> @@ <name>final</name> <name>class</name> <name>JustCompileSearch</name> <block>{
     }</block>
 
     @<name>Override</name>
    <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <block>{
    <expr><specifier>protected</specifier> <name>void</name> <call><name>doSetNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws>
       <throw>throw <argument_list>new <argument><expr><call><name>UnsupportedOperationException</name><argument_list>(<argument><expr><name>UNSUPPORTED_MSG</name></expr></argument>)</argument_list></call></expr></argument></argument_list></throw></expr>;</block></expr>
     }</block>
 
@@ <operator>-</operator><literal type="number">290</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">292</literal></expr>,<expr><literal type="number">7</literal> @@ <name>final</name> <name>class</name> <name>JustCompileSearch</name> <block>{
     }</block>
 
     @<name>Override</name>
    <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <block>{
    <expr><specifier>protected</specifier> <name>void</name> <call><name>doSetNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws>
       <throw>throw <argument_list>new <argument><expr><call><name>UnsupportedOperationException</name><argument_list>(<argument><expr><name>UNSUPPORTED_MSG</name></expr></argument>)</argument_list></call></expr></argument></argument_list></throw></expr>;</block></expr>
     }</block>
 
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>MultiCollectorTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>MultiCollectorTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">2a63f49849f</literal><operator>..</operator><literal type="number">5a7df3c1c12</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>MultiCollectorTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>MultiCollectorTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">27</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">27</literal></expr>,<expr><literal type="number">7</literal> @@</expr> <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>
 
 <specifier>public</specifier> <name>class</name> <name>MultiCollectorTest</name> extends <name>LuceneTestCase</name> <block>{
 
  <expr><specifier>private</specifier> <specifier>static</specifier> <name>class</name> <name>DummyCollector</name> extends <name>Collector</name> <block>{
  <expr><specifier>private</specifier> <specifier>static</specifier> <name>class</name> <name>DummyCollector</name> extends <name>SimpleCollector</name> <block>{
 
     <expr><name>boolean</name> <name>acceptsDocsOutOfOrderCalled</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;
     <name>boolean</name> <name>collectCalled</name> <operator>=</operator> <literal type="boolean">false</literal></block></expr>;
@@ <operator>-</operator><literal type="number">46</literal><operator>,</operator><literal type="number">7</literal> <operator>+</operator><literal type="number">46</literal><operator>,</operator><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>MultiCollectorTest</name> extends <name>LuceneTestCase</name> <block>{
     }</block></block>
 
     @<name>Override</name>
    <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><specifier>protected</specifier> <name>void</name> <call><name>doSetNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
       <expr><name>setNextReaderCalled</name> <operator>=</operator> <literal type="boolean">true</literal></expr></block></expr></argument></throws></expr>;
     }</block>
 
@@ <operator>-</operator><literal type="number">71</literal><operator>,</operator><literal type="number">10</literal> <operator>+</operator><literal type="number">71</literal><operator>,</operator><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>MultiCollectorTest</name> extends <name>LuceneTestCase</name> <block>{
     <comment type="line">// doesn't, an NPE would be thrown.</comment>
     <expr><name>Collector</name> <name>c</name> <operator>=</operator> <call><name><name>MultiCollector</name><operator>.</operator><name>wrap</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>DummyCollector</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>DummyCollector</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <call><name>assertTrue</name><argument_list>(<argument><expr><name>c</name> <operator>instanceof</operator> <name>MultiCollector</name></expr></argument>)</argument_list></call></block></block></block></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>c</name><operator>.</operator><name>acceptsDocsOutOfOrder</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>c</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>c</name><operator>.</operator><name>setNextReader</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>c</name><operator>.</operator><name>setScorer</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>LeafCollector</name></type> <name>ac</name> <init>= <expr><call><name><name>c</name><operator>.</operator><name>getLeafCollector</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>ac</name><operator>.</operator><name>acceptsDocsOutOfOrder</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ac</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>c</name><operator>.</operator><name>getLeafCollector</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>c</name><operator>.</operator><name>getLeafCollector</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>setScorer</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></expr></expr_stmt>
 
   <annotation>@<name>Test</name></annotation>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">93</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">94</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>MultiCollectorTest</name> extends <name>LuceneTestCase</name> <block>{
     <comment type="line">// doesn't, an NPE would be thrown.</comment>
     <expr><name><name>DummyCollector</name><index>[]</index></name> <name>dcs</name> <operator>=</operator> <operator>new</operator> <name><name>DummyCollector</name><index>[]</index></name> <block>{ <expr><operator>new</operator> <call><name>DummyCollector</name><argument_list>()</argument_list></call></expr>, <expr><operator>new</operator> <call><name>DummyCollector</name><argument_list>()</argument_list></call></expr> }</block></expr>;
     <name>Collector</name> <name>c</name> <operator>=</operator> <call><name><name>MultiCollector</name><operator>.</operator><name>wrap</name></name><argument_list>(<argument><expr><name>dcs</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>c</name><operator>.</operator><name>acceptsDocsOutOfOrder</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>c</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>c</name><operator>.</operator><name>setNextReader</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>c</name><operator>.</operator><name>setScorer</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>LeafCollector</name></type> <name>ac</name> <init>= <expr><call><name><name>c</name><operator>.</operator><name>getLeafCollector</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>ac</name><operator>.</operator><name>acceptsDocsOutOfOrder</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ac</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>ac</name> <operator>=</operator> <call><name><name>c</name><operator>.</operator><name>getLeafCollector</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ac</name><operator>.</operator><name>setScorer</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <for>for <control>(<init><decl><type><name>DummyCollector</name></type> <name>dc</name> <range>: <expr><name>dcs</name></expr></range></decl></init>)</control> <block>{<block_content>
       <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><name><name>dc</name><operator>.</operator><name>acceptsDocsOutOfOrderCalled</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestBooleanOr</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestBooleanOr</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>b1ba0f1fbc8</name><operator>..</operator><literal type="number">137b4ce1dc9</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestBooleanOr</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestBooleanOr</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">187</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">187</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestBooleanOr</name> extends <name>LuceneTestCase</name> <block>{
 
     <expr><name>final</name> <name>FixedBitSet</name> <name>hits</name> <operator>=</operator> <operator>new</operator> <call><name>FixedBitSet</name><argument_list>(<argument><expr><name>docCount</name></expr></argument>)</argument_list></call></expr>;
     <name>final</name> <name>AtomicInteger</name> <name>end</name> <operator>=</operator> <operator>new</operator> <call><name>AtomicInteger</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Collector</name></type> <name>c</name> <init>= <expr><operator>new</operator> <class><super><name>Collector</name></super><argument_list>()</argument_list> <block>{
        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>void</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>sub</name></decl></parameter>)</parameter_list> <block>{<block_content>
        </block_content>}</block></function>
    <decl_stmt><decl><type><name>LeafCollector</name></type> <name>c</name> <init>= <expr><operator>new</operator> <class><super><name>SimpleCollector</name></super><argument_list>()</argument_list> <block>{
 
         <function><annotation>@<name>Override</name></annotation>
         <type><specifier>public</specifier> <name>void</name></type> <name>collect</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">198</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">195</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestBooleanOr</name> extends <name>LuceneTestCase</name> <block>{
           <expr><call><name><name>hits</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;
         }</block></expr></expr_stmt>
 
        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>void</name></type> <name>setScorer</name><parameter_list>(<parameter><decl><type><name>Scorer</name></type> <name>scorer</name></decl></parameter>)</parameter_list> <block>{<block_content>
        </block_content>}</block></function>

         <function><annotation>@<name>Override</name></annotation>
         <type><specifier>public</specifier> <name>boolean</name></type> <name>acceptsDocsOutOfOrder</name><parameter_list>()</parameter_list> <block>{<block_content>
           <return>return <expr><literal type="boolean">true</literal></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestBooleanQueryVisitSubscorers</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestBooleanQueryVisitSubscorers</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">175061a4281</literal><operator>..</operator><literal type="number">5e61f6981b1</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestBooleanQueryVisitSubscorers</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestBooleanQueryVisitSubscorers</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">121</literal></expr><operator>,</operator><expr><literal type="number">46</literal> <operator>+</operator><literal type="number">121</literal></expr><operator>,</operator><expr><literal type="number">45</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestBooleanQueryVisitSubscorers</name> extends <name>LuceneTestCase</name> <block>{
     <return>return <expr><name><name>collector</name><operator>.</operator><name>docCounts</name></name></expr>;</return>
   }</block></expr></expr_stmt>
   
  <class><specifier>static</specifier> class <name>MyCollector</name> <super_list><extends>extends <super><name>Collector</name></super></extends></super_list> <block>{
    
    <decl_stmt><decl><type><specifier>private</specifier> <name><name>TopDocsCollector</name><argument_list type="generic">&lt;<argument><name>ScoreDoc</name></argument>&gt;</argument_list></name></type> <name>collector</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <name>int</name></type> <name>docBase</name></decl>;</decl_stmt>
  <class><specifier>static</specifier> class <name>MyCollector</name> <super_list><extends>extends <super><name>FilterCollector</name></super></extends></super_list> <block>{
 
     <decl_stmt><decl><type><specifier>public</specifier> <specifier>final</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>Integer</name></argument>,<argument><name>Integer</name></argument>&gt;</argument_list></name></type> <name>docCounts</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>Scorer</name></argument>&gt;</argument_list></name></type> <name>tqsSet</name> <init>= <expr><operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     
     <constructor><name>MyCollector</name><parameter_list>()</parameter_list> <block>{<block_content>
      <expr_stmt><expr><name>collector</name> <operator>=</operator> <call><name><name>TopScoreDocCollector</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></constructor>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>boolean</name></type> <name>acceptsDocsOutOfOrder</name><parameter_list>()</parameter_list> <block>{<block_content>
      <return>return <expr><literal type="boolean">false</literal></expr>;</return>
      <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><call><name><name>TopScoreDocCollector</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></function>
 
    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>collect</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
      <decl_stmt><decl><type><name>int</name></type> <name>freq</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
      <for>for<control>(<init><decl><type><name>Scorer</name></type> <name>scorer</name> <range>: <expr><name>tqsSet</name></expr></range></decl></init>)</control> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name>doc</name> <operator>==</operator> <call><name><name>scorer</name><operator>.</operator><name>docID</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><name>freq</name> <operator>+=</operator> <call><name><name>scorer</name><operator>.</operator><name>freq</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <function><type><specifier>public</specifier> <name>LeafCollector</name></type> <name>getLeafCollector</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list>
        <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
      <decl_stmt><decl><type><specifier>final</specifier> <name>int</name></type> <name>docBase</name> <init>= <expr><name><name>context</name><operator>.</operator><name>docBase</name></name></expr></init></decl>;</decl_stmt>
      <return>return <expr><operator>new</operator> <class><super><name>FilterLeafCollector</name></super><argument_list>(<argument><expr><call><name><name>super</name><operator>.</operator><name>getLeafCollector</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list> <block>{
        
        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>boolean</name></type> <name>acceptsDocsOutOfOrder</name><parameter_list>()</parameter_list> <block>{<block_content>
          <return>return <expr><literal type="boolean">false</literal></expr>;</return>
         </block_content>}</block></function>
      }</block></class>
      <call><name><name>docCounts</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>doc</name> <operator>+</operator> <name>docBase</name></expr></argument>, <argument><expr><name>freq</name></expr></argument>)</argument_list></call></expr>;</return>
      <expr_stmt><expr><call><name><name>collector</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>docBase</name></name> <operator>=</operator> <name><name>context</name><operator>.</operator><name>docBase</name></name></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>collector</name><operator>.</operator><name>setNextReader</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>setScorer</name><parameter_list>(<parameter><decl><type><name>Scorer</name></type> <name>scorer</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
      <expr_stmt><expr><call><name><name>collector</name><operator>.</operator><name>setScorer</name></name><argument_list>(<argument><expr><name>scorer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>tqsSet</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>fillLeaves</name><argument_list>(<argument><expr><name>scorer</name></expr></argument>, <argument><expr><name>tqsSet</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        
        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>void</name></type> <name>setScorer</name><parameter_list>(<parameter><decl><type><name>Scorer</name></type> <name>scorer</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
          <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>setScorer</name></name><argument_list>(<argument><expr><name>scorer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>tqsSet</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name>fillLeaves</name><argument_list>(<argument><expr><name>scorer</name></expr></argument>, <argument><expr><name>tqsSet</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></function>
        
        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>void</name></type> <name>collect</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
          <decl_stmt><decl><type><name>int</name></type> <name>freq</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
          <for>for<control>(<init><decl><type><name>Scorer</name></type> <name>scorer</name> <range>: <expr><name>tqsSet</name></expr></range></decl></init>)</control> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><name>doc</name> <operator>==</operator> <call><name><name>scorer</name><operator>.</operator><name>docID</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
              <expr_stmt><expr><name>freq</name> <operator>+=</operator> <call><name><name>scorer</name><operator>.</operator><name>freq</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
          </block_content>}</block></for>
          <expr_stmt><expr><call><name><name>docCounts</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>doc</name> <operator>+</operator> <name>docBase</name></expr></argument>, <argument><expr><name>freq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></function>
        
      </block_content>}</block></function><empty_stmt>;</empty_stmt>
     </block_content>}</block></if></if_stmt>
     
     <function><type><specifier>private</specifier> <name>void</name></type> <name>fillLeaves</name><parameter_list>(<parameter><decl><type><name>Scorer</name></type> <name>scorer</name></decl></parameter>, <parameter><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>Scorer</name></argument>&gt;</argument_list></name></type> <name>set</name></decl></parameter>)</parameter_list> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">174</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">173</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestBooleanQueryVisitSubscorers</name> extends <name>LuceneTestCase</name> <block>{
     }</block>
     
     <specifier>public</specifier> <name>TopDocs</name> <call><name>topDocs</name><argument_list>()</argument_list></call><block>{
      <return>return <expr><call><name><name>collector</name><operator>.</operator><name>topDocs</name></name><argument_list>()</argument_list></call></expr>;</return></block></expr></expr_stmt>
      <return>return <expr><operator>(</operator><operator>(</operator><name><name>TopDocsCollector</name><argument_list type="generic">&lt;<argument><name>?</name></argument>&gt;</argument_list></name><operator>)</operator> <name>in</name><operator>)</operator><operator>.</operator><call><name>topDocs</name><argument_list>()</argument_list></call></expr>;</return>
     </block_content>}</block></function>
     
     <function><type><specifier>public</specifier> <name>int</name></type> <name>freq</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
       <return>return <expr><call><name><name>docCounts</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block></function>
    
   </block_content>}</block></for>
 </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestBooleanScorer</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestBooleanScorer</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">68227c6df11</literal><operator>..</operator><name>e6ed13aa21c</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestBooleanScorer</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestBooleanScorer</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">84</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">84</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestBooleanScorer</name> extends <name>LuceneTestCase</name> <block>{
       <expr><specifier>private</specifier> <name>int</name> <name>doc</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;
 
       @<name>Override</name>
      <specifier>public</specifier> <name>boolean</name> <call><name>score</name><argument_list>(<argument><expr><name>Collector</name> <name>c</name></expr></argument>, <argument><expr><name>int</name> <name>maxDoc</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
      <expr><specifier>public</specifier> <name>boolean</name> <call><name>score</name><argument_list>(<argument><expr><name>LeafCollector</name> <name>c</name></expr></argument>, <argument><expr><name>int</name> <name>maxDoc</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></block></expr></expr_stmt>
         <assert>assert <expr><name>doc</name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr>;</assert>
         <expr_stmt><expr><name>doc</name> <operator>=</operator> <literal type="number">3000</literal></expr>;</expr_stmt>
         <decl_stmt><decl><type><name>FakeScorer</name></type> <name>fs</name> <init>= <expr><operator>new</operator> <call><name>FakeScorer</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">99</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">99</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestBooleanScorer</name> extends <name>LuceneTestCase</name> <block>{
     <expr><name>BooleanScorer</name> <name>bs</name> <operator>=</operator> <operator>new</operator> <call><name>BooleanScorer</name><argument_list>(<argument><expr><name>weight</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><call><name><name>Arrays</name><operator>.</operator><name>asList</name></name><argument_list>(<argument><expr><name>scorers</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>Collections</name><operator>.</operator></name>&lt;<name>BulkScorer</name><operator>&gt;</operator><call><name>emptyList</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>scorers</name><operator>.</operator><name>length</name></name></expr></argument>)</argument_list></call></expr>;
 
     <name>final</name> <name><name>List</name><argument_list type="generic">&lt;<argument><name>Integer</name></argument>&gt;</argument_list></name> <name>hits</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>bs</name><operator>.</operator><name>score</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>Collector</name></super><argument_list>()</argument_list> <block>{
    <expr_stmt><expr><call><name><name>bs</name><operator>.</operator><name>score</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>SimpleCollector</name></super><argument_list>()</argument_list> <block>{
       <decl_stmt><decl><type><name>int</name></type> <name>docBase</name></decl>;</decl_stmt>
       <function><annotation>@<name>Override</name></annotation>
       <type><specifier>public</specifier> <name>void</name></type> <name>setScorer</name><parameter_list>(<parameter><decl><type><name>Scorer</name></type> <name>scorer</name></decl></parameter>)</parameter_list> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">111</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">111</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestBooleanScorer</name> extends <name>LuceneTestCase</name> <block>{
       }</block>
       
       @<name>Override</name>
      <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <block>{
      <expr><specifier>protected</specifier> <name>void</name> <call><name>doSetNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
         <expr><name>docBase</name> <operator>=</operator> <name><name>context</name><operator>.</operator><name>docBase</name></name></expr></block></expr></argument></throws></expr>;
       }</block></expr></expr_stmt>
       
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">149</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">149</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestBooleanScorer</name> extends <name>LuceneTestCase</name> <block>{
                             <expr><name><name>BooleanClause</name><operator>.</operator><name>Occur</name><operator>.</operator><name>SHOULD</name></name></expr></block></expr></expr_stmt></block_content></block></function></block></class></expr></argument>)</argument_list></call></expr></expr_stmt></block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                             
     <decl_stmt><decl><type><specifier>final</specifier> <name><name>int</name><index>[]</index></name></type> <name>count</name> <init>= <expr><operator>new</operator> <name><name>int</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>s</name><operator>.</operator><name>search</name></name><argument_list>(<argument><expr><name>q</name></expr></argument>, <argument><expr><operator>new</operator> <class><super><name>Collector</name></super><argument_list>()</argument_list> <block>{
    <expr_stmt><expr><call><name><name>s</name><operator>.</operator><name>search</name></name><argument_list>(<argument><expr><name>q</name></expr></argument>, <argument><expr><operator>new</operator> <class><super><name>SimpleCollector</name></super><argument_list>()</argument_list> <block>{
     
       <function><annotation>@<name>Override</name></annotation>
       <type><specifier>public</specifier> <name>void</name></type> <name>setScorer</name><parameter_list>(<parameter><decl><type><name>Scorer</name></type> <name>scorer</name></decl></parameter>)</parameter_list> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">163</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">163</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> class <name>TestBooleanScorer</name> extends <name>LuceneTestCase</name> <block>{
         <expr><name><name>count</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>++</operator></expr>;
       }</block></expr></expr_stmt>
       
      <function><annotation>@<name>Override</name></annotation>
      <type><specifier>public</specifier> <name>void</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{<block_content>
      </block_content>}</block></function>
      
       <function><annotation>@<name>Override</name></annotation>
       <type><specifier>public</specifier> <name>boolean</name></type> <name>acceptsDocsOutOfOrder</name><parameter_list>()</parameter_list> <block>{<block_content>
         <return>return <expr><literal type="boolean">true</literal></expr>;</return>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">219</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">215</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestBooleanScorer</name> extends <name>LuceneTestCase</name> <block>{
           <return>return <expr><operator>new</operator> <class><super><name>BulkScorer</name></super><argument_list>()</argument_list> <block>{
 
             <function><annotation>@<name>Override</name></annotation>
            <type><specifier>public</specifier> <name>boolean</name></type> <name>score</name><parameter_list>(<parameter><decl><type><name>Collector</name></type> <name>collector</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>max</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
            <function><type><specifier>public</specifier> <name>boolean</name></type> <name>score</name><parameter_list>(<parameter><decl><type><name>LeafCollector</name></type> <name>collector</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>max</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
               <expr_stmt><expr><call><name><name>collector</name><operator>.</operator><name>setScorer</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>FakeScorer</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
               <expr_stmt><expr><call><name><name>collector</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
               <return>return <expr><literal type="boolean">false</literal></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestCachingCollector</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestCachingCollector</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>f493d42cdc3</name><operator>..</operator><name>e842909b3da</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestCachingCollector</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestCachingCollector</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>LuceneTestCase</name></name>;</import>

 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>LuceneTestCase</name></name>;</import>

 <class><specifier>public</specifier> class <name>TestCachingCollector</name> <super_list><extends>extends <super><name>LuceneTestCase</name></super></extends></super_list> <block>{
 
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>double</name></type> <name>ONE_BYTE</name> <init>= <expr><literal type="number">1.0</literal> <operator>/</operator> <operator>(</operator><literal type="number">1024</literal> <operator>*</operator> <literal type="number">1024</literal><operator>)</operator></expr></init></decl>;</decl_stmt> <comment type="line">// 1 byte out of MB</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">53</literal></expr><operator>,</operator><expr><literal type="number">23</literal> <operator>+</operator><literal type="number">52</literal></expr><operator>,</operator><expr><literal type="number">17</literal> @@ <specifier>public</specifier> class <name>TestCachingCollector</name> extends <name>LuceneTestCase</name> <block>{
     }</block></expr></expr_stmt> 
   }</block></class>
   
  <class><specifier>private</specifier> <specifier>static</specifier> class <name>NoOpCollector</name> <super_list><extends>extends <super><name>Collector</name></super></extends></super_list> <block>{
  <class><specifier>private</specifier> <specifier>static</specifier> class <name>NoOpCollector</name> <super_list><extends>extends <super><name>SimpleCollector</name></super></extends></super_list> <block>{
 
     <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>boolean</name></type> <name>acceptDocsOutOfOrder</name></decl>;</decl_stmt>
     
     <constructor><specifier>public</specifier> <name>NoOpCollector</name><parameter_list>(<parameter><decl><type><name>boolean</name></type> <name>acceptDocsOutOfOrder</name></decl></parameter>)</parameter_list> <block>{<block_content>
       <expr_stmt><expr><name><name>this</name><operator>.</operator><name>acceptDocsOutOfOrder</name></name> <operator>=</operator> <name>acceptDocsOutOfOrder</name></expr>;</expr_stmt>
     </block_content>}</block></constructor>
    
    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>setScorer</name><parameter_list>(<parameter><decl><type><name>Scorer</name></type> <name>scorer</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content/>}</block></function>
 
     <function><annotation>@<name>Override</name></annotation>
     <type><specifier>public</specifier> <name>void</name></type> <name>collect</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content/>}</block></function>
 
    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content/>}</block></function>

     <function><annotation>@<name>Override</name></annotation>
     <type><specifier>public</specifier> <name>boolean</name></type> <name>acceptsDocsOutOfOrder</name><parameter_list>()</parameter_list> <block>{<block_content>
       <return>return <expr><name>acceptDocsOutOfOrder</name></expr>;</return>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">80</literal></expr><operator>,</operator><expr><literal type="number">23</literal> <operator>+</operator><literal type="number">73</literal></expr><operator>,</operator><expr><literal type="number">18</literal> @@ <specifier>public</specifier> class <name>TestCachingCollector</name> extends <name>LuceneTestCase</name> <block>{
   <expr><specifier>public</specifier> <name>void</name> <call><name>testBasic</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{</block></expr></argument></throws></expr>
     <for>for <control>(<init><decl><type><name>boolean</name></type> <name>cacheScores</name> <range>: <expr><operator>new</operator> <name><name>boolean</name><index>[]</index></name> <block>{ <expr><literal type="boolean">false</literal></expr>, <expr><literal type="boolean">true</literal></expr> }</block></expr></range></decl></init>)</control> <block>{<block_content>
       <decl_stmt><decl><type><name>CachingCollector</name></type> <name>cc</name> <init>= <expr><call><name><name>CachingCollector</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>NoOpCollector</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>cacheScores</name></expr></argument>, <argument><expr><literal type="number">1.0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>cc</name><operator>.</operator><name>setScorer</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>MockScorer</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>LeafCollector</name></type> <name>acc</name> <init>= <expr><call><name><name>cc</name><operator>.</operator><name>getLeafCollector</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>acc</name><operator>.</operator><name>setScorer</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>MockScorer</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
       <comment type="line">// collect 1000 docs</comment>
       <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">1000</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
        <expr_stmt><expr><call><name><name>cc</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>acc</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></for>
 
       <comment type="line">// now replay them</comment>
      <expr_stmt><expr><call><name><name>cc</name><operator>.</operator><name>replay</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>Collector</name></super><argument_list>()</argument_list> <block>{
      <expr_stmt><expr><call><name><name>cc</name><operator>.</operator><name>replay</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>SimpleCollector</name></super><argument_list>()</argument_list> <block>{
         <decl_stmt><decl><type><name>int</name></type> <name>prevDocID</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
 
        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>void</name></type> <name>setScorer</name><parameter_list>(<parameter><decl><type><name>Scorer</name></type> <name>scorer</name></decl></parameter>)</parameter_list> <block>{<block_content/>}</block></function>

        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>void</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{<block_content/>}</block></function>

         <function><annotation>@<name>Override</name></annotation>
         <type><specifier>public</specifier> <name>void</name></type> <name>collect</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <block>{<block_content>
           <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>prevDocID</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>, <argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">113</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">101</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> class <name>TestCachingCollector</name> extends <name>LuceneTestCase</name> <block>{
   
   <expr><specifier>public</specifier> <name>void</name> <call><name>testIllegalStateOnReplay</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><name>CachingCollector</name> <name>cc</name> <operator>=</operator> <call><name><name>CachingCollector</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>NoOpCollector</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="number">50</literal> <operator>*</operator> <name>ONE_BYTE</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <call><name><name>cc</name><operator>.</operator><name>setScorer</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>MockScorer</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>LeafCollector</name></type> <name>acc</name> <init>= <expr><call><name><name>cc</name><operator>.</operator><name>getLeafCollector</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>acc</name><operator>.</operator><name>setScorer</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>MockScorer</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     
     <comment type="line">// collect 130 docs, this should be enough for triggering cache abort.</comment>
     <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">130</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
      <expr_stmt><expr><call><name><name>cc</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>acc</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></for>
     
     <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><literal type="string">"CachingCollector should not be cached due to low memory limit"</literal></expr></argument>, <argument><expr><call><name><name>cc</name><operator>.</operator><name>isCached</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">135</literal></expr><operator>,</operator><expr><literal type="number">16</literal> <operator>+</operator><literal type="number">124</literal></expr><operator>,</operator><expr><literal type="number">18</literal> @@ <specifier>public</specifier> class <name>TestCachingCollector</name> extends <name>LuceneTestCase</name> <block>{
     <comment type="line">// is valid with the Collector passed to the ctor</comment>
     
     <comment type="line">// 'src' Collector does not support out-of-order</comment>
    <expr><name>CachingCollector</name> <name>cc</name> <operator>=</operator> <call><name><name>CachingCollector</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>NoOpCollector</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="number">50</literal> <operator>*</operator> <name>ONE_BYTE</name></expr></argument>)</argument_list></call></expr>;
    <call><name><name>cc</name><operator>.</operator><name>setScorer</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>MockScorer</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">10</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content> <expr_stmt><expr><call><name><name>cc</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
    <decl_stmt><decl><type><name>CachingCollector</name></type> <name>cc</name> <init>= <expr><call><name><name>CachingCollector</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>NoOpCollector</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="number">100</literal> <operator>*</operator> <name>ONE_BYTE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>LeafCollector</name></type> <name>acc</name> <init>= <expr><call><name><name>cc</name><operator>.</operator><name>getLeafCollector</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>acc</name><operator>.</operator><name>setScorer</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>MockScorer</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">10</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content> <expr_stmt><expr><call><name><name>acc</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
     <expr_stmt><expr><call><name><name>cc</name><operator>.</operator><name>replay</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>NoOpCollector</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// this call should not fail</comment>
     <expr_stmt><expr><call><name><name>cc</name><operator>.</operator><name>replay</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>NoOpCollector</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// this call should not fail</comment>
 
     <comment type="line">// 'src' Collector supports out-of-order</comment>
    <expr_stmt><expr><name>cc</name> <operator>=</operator> <call><name><name>CachingCollector</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>NoOpCollector</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="number">50</literal> <operator>*</operator> <name>ONE_BYTE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>cc</name><operator>.</operator><name>setScorer</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>MockScorer</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">10</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content> <expr_stmt><expr><call><name><name>cc</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
    <expr_stmt><expr><name>cc</name> <operator>=</operator> <call><name><name>CachingCollector</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>NoOpCollector</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="number">100</literal> <operator>*</operator> <name>ONE_BYTE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>acc</name> <operator>=</operator> <call><name><name>cc</name><operator>.</operator><name>getLeafCollector</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>acc</name><operator>.</operator><name>setScorer</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>MockScorer</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">10</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content> <expr_stmt><expr><call><name><name>acc</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
     <expr_stmt><expr><call><name><name>cc</name><operator>.</operator><name>replay</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>NoOpCollector</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// this call should not fail</comment>
     <try>try <block>{<block_content>
       <expr_stmt><expr><call><name><name>cc</name><operator>.</operator><name>replay</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>NoOpCollector</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// this call should fail</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">165</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">156</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> class <name>TestCachingCollector</name> extends <name>LuceneTestCase</name> <block>{
       <expr><name>int</name> <name>bytesPerDoc</name> <operator>=</operator> <name>cacheScores</name> <operator>?</operator> <literal type="number">8</literal> <operator>:</operator> <literal type="number">4</literal></expr>;
       <name>CachingCollector</name> <name>cc</name> <operator>=</operator> <call><name><name>CachingCollector</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>NoOpCollector</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></argument>,
           <argument><expr><name>cacheScores</name></expr></argument>, <argument><expr><name>bytesPerDoc</name> <operator>*</operator> <name>ONE_BYTE</name> <operator>*</operator> <name>numDocs</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>cc</name><operator>.</operator><name>setScorer</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>MockScorer</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>numDocs</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content> <expr_stmt><expr><call><name><name>cc</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
      <decl_stmt><decl><type><name>LeafCollector</name></type> <name>acc</name> <init>= <expr><call><name><name>cc</name><operator>.</operator><name>getLeafCollector</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>acc</name><operator>.</operator><name>setScorer</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>MockScorer</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>numDocs</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content> <expr_stmt><expr><call><name><name>acc</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
       <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>cc</name><operator>.</operator><name>isCached</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
       <comment type="line">// The 151's document should terminate caching</comment>
      <expr_stmt><expr><call><name><name>cc</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><name>numDocs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>acc</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><name>numDocs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>cc</name><operator>.</operator><name>isCached</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></try>
   </block_content>}</block></function>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">179</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">171</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> class <name>TestCachingCollector</name> extends <name>LuceneTestCase</name> <block>{
     <for>for <control>(<init><decl><type><name>boolean</name></type> <name>cacheScores</name> <range>: <expr><operator>new</operator> <name><name>boolean</name><index>[]</index></name> <block>{ <expr><literal type="boolean">false</literal></expr>, <expr><literal type="boolean">true</literal></expr> }</block></expr></range></decl></init>)</control> <block>{<block_content>
       <comment type="line">// create w/ null wrapped collector, and test that the methods work</comment>
       <decl_stmt><decl><type><name>CachingCollector</name></type> <name>cc</name> <init>= <expr><call><name><name>CachingCollector</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><name>cacheScores</name></expr></argument>, <argument><expr><literal type="number">50</literal> <operator>*</operator> <name>ONE_BYTE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>cc</name><operator>.</operator><name>setNextReader</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>cc</name><operator>.</operator><name>setScorer</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>MockScorer</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>cc</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>LeafCollector</name></type> <name>acc</name> <init>= <expr><call><name><name>cc</name><operator>.</operator><name>getLeafCollector</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>acc</name><operator>.</operator><name>setScorer</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>MockScorer</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>acc</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       
       <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>cc</name><operator>.</operator><name>isCached</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>cc</name><operator>.</operator><name>replay</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>NoOpCollector</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestConstantScoreQuery</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestConstantScoreQuery</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">21a6a7d4269</literal><operator>..</operator><literal type="number">93d5a1da4ab</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestConstantScoreQuery</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestConstantScoreQuery</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">50</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">50</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestConstantScoreQuery</name> extends <name>LuceneTestCase</name> <block>{
   
   <expr><specifier>private</specifier> <name>void</name> <call><name>checkHits</name><argument_list>(<argument><expr><name>IndexSearcher</name> <name>searcher</name></expr></argument>, <argument><expr><name>Query</name> <name>q</name></expr></argument>, <argument><expr><name>final</name> <name>float</name> <name>expectedScore</name></expr></argument>, <argument><expr><name>final</name> <name>String</name> <name>scorerClassName</name></expr></argument>, <argument><expr><name>final</name> <name>String</name> <name>innerScorerClassName</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><name>final</name> <name><name>int</name><index>[]</index></name> <name>count</name> <operator>=</operator> <operator>new</operator> <name><name>int</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></block></expr></argument></throws></expr>;
    <call><name><name>searcher</name><operator>.</operator><name>search</name></name><argument_list>(<argument><expr><name>q</name></expr></argument>, <argument><expr><operator>new</operator> <class><super><name>Collector</name></super><argument_list>()</argument_list> <block>{
    <expr_stmt><expr><call><name><name>searcher</name><operator>.</operator><name>search</name></name><argument_list>(<argument><expr><name>q</name></expr></argument>, <argument><expr><operator>new</operator> <class><super><name>SimpleCollector</name></super><argument_list>()</argument_list> <block>{
       <decl_stmt><decl><type><specifier>private</specifier> <name>Scorer</name></type> <name>scorer</name></decl>;</decl_stmt>
     
       <annotation>@<name>Override</name></annotation>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">69</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">69</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> class <name>TestConstantScoreQuery</name> extends <name>LuceneTestCase</name> <block>{
         <expr><name><name>count</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>++</operator></expr>;
       }</block></expr></expr_stmt>
       
      <function><annotation>@<name>Override</name></annotation>
      <type><specifier>public</specifier> <name>void</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{<block_content>
      </block_content>}</block></function>
      
       <function><annotation>@<name>Override</name></annotation>
       <type><specifier>public</specifier> <name>boolean</name></type> <name>acceptsDocsOutOfOrder</name><parameter_list>()</parameter_list> <block>{<block_content>
         <return>return <expr><literal type="boolean">true</literal></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestDocBoost</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestDocBoost</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">3cf2e85f83f</literal><operator>..</operator><name>aced6f6f2d6</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestDocBoost</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestDocBoost</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">59</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">59</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestDocBoost</name> extends <name>LuceneTestCase</name> <block>{
     <expr><name>IndexSearcher</name> <name>searcher</name> <operator>=</operator> <call><name>newSearcher</name><argument_list>(<argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr>;
     <call><name><name>searcher</name><operator>.</operator><name>search</name></name>
       <argument_list>(<argument><expr><operator>new</operator> <call><name>TermQuery</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Term</name><argument_list>(<argument><expr><literal type="string">"field"</literal></expr></argument>, <argument><expr><literal type="string">"word"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
       <argument><expr><operator>new</operator> <class><super><name>Collector</name></super><argument_list>()</argument_list> <block>{
       <expr_stmt><expr><operator>new</operator> <class><super><name>SimpleCollector</name></super><argument_list>()</argument_list> <block>{
          <decl_stmt><decl><type><specifier>private</specifier> <name>int</name></type> <name>base</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
          <decl_stmt><decl><type><specifier>private</specifier> <name>Scorer</name></type> <name>scorer</name></decl>;</decl_stmt>
          <annotation>@<name>Override</name></annotation>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">71</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">71</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestDocBoost</name> extends <name>LuceneTestCase</name> <block>{
            <expr><name><name>scores</name><index>[<expr><name>doc</name> <operator>+</operator> <name>base</name></expr>]</index></name> <operator>=</operator> <call><name><name>scorer</name><operator>.</operator><name>score</name></name><argument_list>()</argument_list></call></expr>;
          }</block></expr></expr_stmt>
          <function><annotation>@<name>Override</name></annotation>
         <type><specifier>public</specifier> <name>void</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <function><type><specifier>protected</specifier> <name>void</name></type> <name>doSetNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
            <expr_stmt><expr><name>base</name> <operator>=</operator> <name><name>context</name><operator>.</operator><name>docBase</name></name></expr>;</expr_stmt>
          </block_content>}</block></function>
          <annotation>@<name>Override</name></annotation>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestEarlyTermination</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestEarlyTermination</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>acbdaf7235b</name><operator>..</operator><literal type="number">7388d00f475</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestEarlyTermination</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestEarlyTermination</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">58</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">58</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> class <name>TestEarlyTermination</name> extends <name>LuceneTestCase</name> <block>{
 
     <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>iters</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{<block_content>
       <decl_stmt><decl><type><specifier>final</specifier> <name>IndexSearcher</name></type> <name>searcher</name> <init>= <expr><call><name>newSearcher</name><argument_list>(<argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><specifier>final</specifier> <name>Collector</name></type> <name>collector</name> <init>= <expr><operator>new</operator> <class><super><name>Collector</name></super><argument_list>()</argument_list> <block>{
      <decl_stmt><decl><type><specifier>final</specifier> <name>Collector</name></type> <name>collector</name> <init>= <expr><operator>new</operator> <class><super><name>SimpleCollector</name></super><argument_list>()</argument_list> <block>{
 
         <decl_stmt><decl><type><specifier>final</specifier> <name>boolean</name></type> <name>outOfOrder</name> <init>= <expr><call><name>random</name><argument_list>()</argument_list></call><operator>.</operator><call><name>nextBoolean</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
         <decl_stmt><decl><type><name>boolean</name></type> <name>collectionTerminated</name> <init>= <expr><literal type="boolean">true</literal></expr></init></decl>;</decl_stmt>
 
        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>void</name></type> <name>setScorer</name><parameter_list>(<parameter><decl><type><name>Scorer</name></type> <name>scorer</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content/>}</block></function>

         <function><annotation>@<name>Override</name></annotation>
         <type><specifier>public</specifier> <name>void</name></type> <name>collect</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
           <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><name>collectionTerminated</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">76</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">73</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestEarlyTermination</name> extends <name>LuceneTestCase</name> <block>{
         }</block>
 
         @<name>Override</name>
        <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
        <expr><specifier>protected</specifier> <name>void</name> <call><name>doSetNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr></expr_stmt>
           <if_stmt><if>if <condition>(<expr><call><name>random</name><argument_list>()</argument_list></call><operator>.</operator><call><name>nextBoolean</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
             <expr_stmt><expr><name>collectionTerminated</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
             <throw>throw <expr><operator>new</operator> <call><name>CollectionTerminatedException</name><argument_list>()</argument_list></call></expr>;</throw>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestMultiTermConstantScore</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestMultiTermConstantScore</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>d286d5472a6</name><operator>..</operator><literal type="number">9f5f4381ed4</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestMultiTermConstantScore</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestMultiTermConstantScore</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">226</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">226</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestMultiTermConstantScore</name> extends <name>BaseTestRangeFilter</name> <block>{
     <expr><call><name><name>search</name><operator>.</operator><name>setSimilarity</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>DefaultSimilarity</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <name>Query</name> <name>q</name> <operator>=</operator> <call><name>csrq</name><argument_list>(<argument><expr><literal type="string">"data"</literal></expr></argument>, <argument><expr><literal type="string">"1"</literal></expr></argument>, <argument><expr><literal type="string">"6"</literal></expr></argument>, <argument><expr><name>T</name></expr></argument>, <argument><expr><name>T</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>q</name><operator>.</operator><name>setBoost</name></name><argument_list>(<argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>search</name><operator>.</operator><name>search</name></name><argument_list>(<argument><expr><name>q</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><operator>new</operator> <class><super><name>Collector</name></super><argument_list>()</argument_list> <block>{
    <expr_stmt><expr><call><name><name>search</name><operator>.</operator><name>search</name></name><argument_list>(<argument><expr><name>q</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><operator>new</operator> <class><super><name>SimpleCollector</name></super><argument_list>()</argument_list> <block>{
       <decl_stmt><decl><type><specifier>private</specifier> <name>int</name></type> <name>base</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><specifier>private</specifier> <name>Scorer</name></type> <name>scorer</name></decl>;</decl_stmt>
       <annotation>@<name>Override</name></annotation>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">238</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">238</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestMultiTermConstantScore</name> extends <name>BaseTestRangeFilter</name> <block>{
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"score for doc "</literal> <operator>+</operator> <operator>(</operator><name>doc</name> <operator>+</operator> <name>base</name><operator>)</operator> <operator>+</operator> <literal type="string">" was not correct"</literal></expr></argument>, <argument><expr><literal type="number">1.0f</literal></expr></argument>, <argument><expr><call><name><name>scorer</name><operator>.</operator><name>score</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>SCORE_COMP_THRESH</name></expr></argument>)</argument_list></call></expr>;
       }</block></expr></expr_stmt>
       <function><annotation>@<name>Override</name></annotation>
      <type><specifier>public</specifier> <name>void</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <function><type><specifier>protected</specifier> <name>void</name></type> <name>doSetNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
         <expr_stmt><expr><name>base</name> <operator>=</operator> <name><name>context</name><operator>.</operator><name>docBase</name></name></expr>;</expr_stmt>
       </block_content>}</block></function>
       <annotation>@<name>Override</name></annotation>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestPositiveScoresOnlyCollector</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestPositiveScoresOnlyCollector</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">1f52b210697</literal><operator>..</operator><literal type="number">4a51978c925</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestPositiveScoresOnlyCollector</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestPositiveScoresOnlyCollector</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">22</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">22</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>RandomIndexWriter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Term</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>Directory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>LuceneTestCase</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Document</name></name>;</import>
 
 <class><specifier>public</specifier> class <name>TestPositiveScoresOnlyCollector</name> <super_list><extends>extends <super><name>LuceneTestCase</name></super></extends></super_list> <block>{
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">78</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">79</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestPositiveScoresOnlyCollector</name> extends <name>LuceneTestCase</name> <block>{
     
     <expr><name>Directory</name> <name>directory</name> <operator>=</operator> <call><name>newDirectory</name><argument_list>()</argument_list></call></expr>;
     <name>RandomIndexWriter</name> <name>writer</name> <operator>=</operator> <operator>new</operator> <call><name>RandomIndexWriter</name><argument_list>(<argument><expr><call><name>random</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>directory</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>addDocument</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Document</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <constructor_decl><name><name>writer</name><operator>.</operator><name>commit</name></name><parameter_list>()</parameter_list>;</constructor_decl>
     <decl_stmt><decl><type><name>IndexReader</name></type> <name>ir</name> <init>= <expr><call><name><name>writer</name><operator>.</operator><name>getReader</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <constructor_decl><name><name>writer</name><operator>.</operator><name>close</name></name><parameter_list>()</parameter_list>;</constructor_decl>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">86</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">88</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> class <name>TestPositiveScoresOnlyCollector</name> extends <name>LuceneTestCase</name> <block>{
     <expr><name>Scorer</name> <name>s</name> <operator>=</operator> <operator>new</operator> <call><name>SimpleScorer</name><argument_list>(<argument><expr><name>fake</name></expr></argument>)</argument_list></call></expr>;
     <name><name>TopDocsCollector</name><argument_list type="generic">&lt;<argument><name>ScoreDoc</name></argument>&gt;</argument_list></name> <name>tdc</name> <operator>=</operator> <call><name><name>TopScoreDocCollector</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><name><name>scores</name><operator>.</operator><name>length</name></name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>Collector</name></type> <name>c</name> <init>= <expr><operator>new</operator> <call><name>PositiveScoresOnlyCollector</name><argument_list>(<argument><expr><name>tdc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <constructor_decl><name><name>c</name><operator>.</operator><name>setScorer</name></name><parameter_list>(<parameter><decl><type><name>s</name></type></decl></parameter>)</parameter_list>;</constructor_decl>
    <decl_stmt><decl><type><name>LeafCollector</name></type> <name>ac</name> <init>= <expr><call><name><name>c</name><operator>.</operator><name>getLeafCollector</name></name><argument_list>(<argument><expr><call><name><name>ir</name><operator>.</operator><name>leaves</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <constructor_decl><name><name>ac</name><operator>.</operator><name>setScorer</name></name><parameter_list>(<parameter><decl><type><name>s</name></type></decl></parameter>)</parameter_list>;</constructor_decl>
     <while>while <condition>(<expr><call><name><name>s</name><operator>.</operator><name>nextDoc</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <name><name>DocIdSetIterator</name><operator>.</operator><name>NO_MORE_DOCS</name></name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>c</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>ac</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></while>
     <decl_stmt><decl><type><name>TopDocs</name></type> <name>td</name> <init>= <expr><call><name><name>tdc</name><operator>.</operator><name>topDocs</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name><name>ScoreDoc</name><index>[]</index></name></type> <name>sd</name> <init>= <expr><name><name>td</name><operator>.</operator><name>scoreDocs</name></name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestScoreCachingWrappingScorer</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestScoreCachingWrappingScorer</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">9c6f4861ccf</literal><operator>..</operator><name>c48c5f1bdbf</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestScoreCachingWrappingScorer</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestScoreCachingWrappingScorer</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">65</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">65</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestScoreCachingWrappingScorer</name> extends <name>LuceneTestCase</name> <block>{
     }</block></expr></expr_stmt>
   }</block></class>
   
  <class><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> class <name>ScoreCachingCollector</name> <super_list><extends>extends <super><name>Collector</name></super></extends></super_list> <block>{
  <class><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> class <name>ScoreCachingCollector</name> <super_list><extends>extends <super><name>SimpleCollector</name></super></extends></super_list> <block>{
 
     <decl_stmt><decl><type><specifier>private</specifier> <name>int</name></type> <name>idx</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>private</specifier> <name>Scorer</name></type> <name>scorer</name></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">88</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">88</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> class <name>TestScoreCachingWrappingScorer</name> extends <name>LuceneTestCase</name> <block>{
       <expr><operator>++</operator><name>idx</name></expr>;
     }</block></expr></expr_stmt>
 
    <function><annotation>@<name>Override</name></annotation> <type><specifier>public</specifier> <name>void</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{<block_content>
    </block_content>}</block></function>

     <function><annotation>@<name>Override</name></annotation> <type><specifier>public</specifier> <name>void</name></type> <name>setScorer</name><parameter_list>(<parameter><decl><type><name>Scorer</name></type> <name>scorer</name></decl></parameter>)</parameter_list> <block>{<block_content>
       <expr_stmt><expr><name><name>this</name><operator>.</operator><name>scorer</name></name> <operator>=</operator> <operator>new</operator> <call><name>ScoreCachingWrappingScorer</name><argument_list>(<argument><expr><name>scorer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestScorerPerf</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestScorerPerf</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">48cbaee43b8</literal><operator>..</operator><literal type="number">97dcc44c843</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestScorerPerf</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestScorerPerf</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">97</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">97</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> class <name>TestScorerPerf</name> extends <name>LuceneTestCase</name> <block>{
     <return>return <expr><name>sets</name></expr>;</return>
   }</block></expr></expr_stmt>
 
  <class><specifier>public</specifier> <specifier>static</specifier> class <name>CountingHitCollector</name> <super_list><extends>extends <super><name>Collector</name></super></extends></super_list> <block>{
  <class><specifier>public</specifier> <specifier>static</specifier> class <name>CountingHitCollector</name> <super_list><extends>extends <super><name>SimpleCollector</name></super></extends></super_list> <block>{
     <decl_stmt><decl><type><name>int</name></type> <name>count</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>int</name></type> <name>sum</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>protected</specifier> <name>int</name></type> <name>docBase</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>setScorer</name><parameter_list>(<parameter><decl><type><name>Scorer</name></type> <name>scorer</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content/>}</block></function>
     
     <function><annotation>@<name>Override</name></annotation>
     <type><specifier>public</specifier> <name>void</name></type> <name>collect</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">115</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">112</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestScorerPerf</name> extends <name>LuceneTestCase</name> <block>{
     <expr><specifier>public</specifier> <name>int</name> <call><name>getSum</name><argument_list>()</argument_list></call> <block>{ <return>return <expr><name>sum</name></expr>;</return> }</block>
 
     @<name>Override</name>
    <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <block>{
    <expr><specifier>protected</specifier> <name>void</name> <call><name>doSetNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
       <expr><name>docBase</name> <operator>=</operator> <name><name>context</name><operator>.</operator><name>docBase</name></name></expr></block></expr></argument></throws></expr>;
     }</block>
     @<name>Override</name>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSimilarity</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSimilarity</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">31ebc14e2e2</literal><operator>..</operator><literal type="number">3a3c58030a5</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSimilarity</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSimilarity</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">76</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">76</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestSimilarity</name> extends <name>LuceneTestCase</name> <block>{
     <expr><name>Term</name> <name>b</name> <operator>=</operator> <operator>new</operator> <call><name>Term</name><argument_list>(<argument><expr><literal type="string">"field"</literal></expr></argument>, <argument><expr><literal type="string">"b"</literal></expr></argument>)</argument_list></call></expr>;
     <name>Term</name> <name>c</name> <operator>=</operator> <operator>new</operator> <call><name>Term</name><argument_list>(<argument><expr><literal type="string">"field"</literal></expr></argument>, <argument><expr><literal type="string">"c"</literal></expr></argument>)</argument_list></call></block></expr>;
 
    <call><name><name>searcher</name><operator>.</operator><name>search</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>TermQuery</name><argument_list>(<argument><expr><name>b</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <class><super><name>Collector</name></super><argument_list>()</argument_list> <block>{
    <expr_stmt><expr><call><name><name>searcher</name><operator>.</operator><name>search</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>TermQuery</name><argument_list>(<argument><expr><name>b</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <class><super><name>SimpleCollector</name></super><argument_list>()</argument_list> <block>{
          <decl_stmt><decl><type><specifier>private</specifier> <name>Scorer</name></type> <name>scorer</name></decl>;</decl_stmt>
          <function><annotation>@<name>Override</name></annotation>
         <type><specifier>public</specifier> <name>void</name></type> <name>setScorer</name><parameter_list>(<parameter><decl><type><name>Scorer</name></type> <name>scorer</name></decl></parameter>)</parameter_list> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">86</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">86</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> class <name>TestSimilarity</name> extends <name>LuceneTestCase</name> <block>{
         <expr><specifier>public</specifier> <name>final</name> <name>void</name> <call><name>collect</name><argument_list>(<argument><expr><name>int</name> <name>doc</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
            <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1.0f</literal></expr></argument>, <argument><expr><call><name><name>scorer</name><operator>.</operator><name>score</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
          }</block></expr></expr_stmt>
         <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>void</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{<block_content/>}</block></function>
         <function><annotation>@<name>Override</name></annotation>
         <type><specifier>public</specifier> <name>boolean</name></type> <name>acceptsDocsOutOfOrder</name><parameter_list>()</parameter_list> <block>{<block_content>
            <return>return <expr><literal type="boolean">true</literal></expr>;</return>
          </block_content>}</block></function>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">98</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">95</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestSimilarity</name> extends <name>LuceneTestCase</name> <block>{
     <expr><call><name><name>bq</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>TermQuery</name><argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>BooleanClause</name><operator>.</operator><name>Occur</name><operator>.</operator><name>SHOULD</name></name></expr></argument>)</argument_list></call></expr>;
     <call><name><name>bq</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>TermQuery</name><argument_list>(<argument><expr><name>b</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>BooleanClause</name><operator>.</operator><name>Occur</name><operator>.</operator><name>SHOULD</name></name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <comment type="line">//System.out.println(bq.toString("field"));</comment>
    <expr_stmt><expr><call><name><name>searcher</name><operator>.</operator><name>search</name></name><argument_list>(<argument><expr><name>bq</name></expr></argument>, <argument><expr><operator>new</operator> <class><super><name>Collector</name></super><argument_list>()</argument_list> <block>{
    <expr_stmt><expr><call><name><name>searcher</name><operator>.</operator><name>search</name></name><argument_list>(<argument><expr><name>bq</name></expr></argument>, <argument><expr><operator>new</operator> <class><super><name>SimpleCollector</name></super><argument_list>()</argument_list> <block>{
          <decl_stmt><decl><type><specifier>private</specifier> <name>int</name></type> <name>base</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
          <decl_stmt><decl><type><specifier>private</specifier> <name>Scorer</name></type> <name>scorer</name></decl>;</decl_stmt>
          <annotation>@<name>Override</name></annotation>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">111</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">108</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestSimilarity</name> extends <name>LuceneTestCase</name> <block>{
            <expr><call><name>assertEquals</name><argument_list>(<argument><expr><operator>(</operator><name>float</name><operator>)</operator><name>doc</name><operator>+</operator><name>base</name><operator>+</operator><literal type="number">1</literal></expr></argument>, <argument><expr><call><name><name>scorer</name><operator>.</operator><name>score</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;
          }</block></expr></expr_stmt>
          <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>void</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <function><type><specifier>protected</specifier> <name>void</name></type> <name>doSetNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
            <expr_stmt><expr><name>base</name> <operator>=</operator> <name><name>context</name><operator>.</operator><name>docBase</name></name></expr>;</expr_stmt>
          </block_content>}</block></function>
          <annotation>@<name>Override</name></annotation>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">125</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">122</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestSimilarity</name> extends <name>LuceneTestCase</name> <block>{
     <expr><call><name><name>pq</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>c</name></expr></argument>)</argument_list></call></expr>;
     <comment type="line">//System.out.println(pq.toString("field"));</comment>
     <call><name><name>searcher</name><operator>.</operator><name>search</name></name><argument_list>(<argument><expr><name>pq</name></expr></argument>,
       <argument><expr><operator>new</operator> <class><super><name>Collector</name></super><argument_list>()</argument_list> <block>{
       <expr_stmt><expr><operator>new</operator> <class><super><name>SimpleCollector</name></super><argument_list>()</argument_list> <block>{
          <decl_stmt><decl><type><specifier>private</specifier> <name>Scorer</name></type> <name>scorer</name></decl>;</decl_stmt>
          <function><annotation>@<name>Override</name></annotation>
          <type><specifier>public</specifier> <name>void</name></type> <name>setScorer</name><parameter_list>(<parameter><decl><type><name>Scorer</name></type> <name>scorer</name></decl></parameter>)</parameter_list> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">137</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">134</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> class <name>TestSimilarity</name> extends <name>LuceneTestCase</name> <block>{
            <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1.0f</literal></expr></argument>, <argument><expr><call><name><name>scorer</name><operator>.</operator><name>score</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;
          }</block></expr></expr_stmt>
          <function><annotation>@<name>Override</name></annotation>
         <type><specifier>public</specifier> <name>void</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{<block_content/>}</block></function>
         <function><annotation>@<name>Override</name></annotation>
          <type><specifier>public</specifier> <name>boolean</name></type> <name>acceptsDocsOutOfOrder</name><parameter_list>()</parameter_list> <block>{<block_content>
            <return>return <expr><literal type="boolean">true</literal></expr>;</return>
          </block_content>}</block></function>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">146</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">141</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestSimilarity</name> extends <name>LuceneTestCase</name> <block>{
 
     <expr><call><name><name>pq</name><operator>.</operator><name>setSlop</name></name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;
     <comment type="line">//System.out.println(pq.toString("field"));</comment>
    <call><name><name>searcher</name><operator>.</operator><name>search</name></name><argument_list>(<argument><expr><name>pq</name></expr></argument>, <argument><expr><operator>new</operator> <class><super><name>Collector</name></super><argument_list>()</argument_list> <block>{
    <expr_stmt><expr><call><name><name>searcher</name><operator>.</operator><name>search</name></name><argument_list>(<argument><expr><name>pq</name></expr></argument>, <argument><expr><operator>new</operator> <class><super><name>SimpleCollector</name></super><argument_list>()</argument_list> <block>{
       <decl_stmt><decl><type><specifier>private</specifier> <name>Scorer</name></type> <name>scorer</name></decl>;</decl_stmt>
       <function><annotation>@<name>Override</name></annotation>
       <type><specifier>public</specifier> <name>void</name></type> <name>setScorer</name><parameter_list>(<parameter><decl><type><name>Scorer</name></type> <name>scorer</name></decl></parameter>)</parameter_list> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">158</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">153</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> class <name>TestSimilarity</name> extends <name>LuceneTestCase</name> <block>{
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">2.0f</literal></expr></argument>, <argument><expr><call><name><name>scorer</name><operator>.</operator><name>score</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;
       }</block></expr></expr_stmt>
       <function><annotation>@<name>Override</name></annotation>
      <type><specifier>public</specifier> <name>void</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{<block_content/>}</block></function>
      <function><annotation>@<name>Override</name></annotation>
       <type><specifier>public</specifier> <name>boolean</name></type> <name>acceptsDocsOutOfOrder</name><parameter_list>()</parameter_list> <block>{<block_content>
         <return>return <expr><literal type="boolean">true</literal></expr>;</return>
       </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSloppyPhraseQuery</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSloppyPhraseQuery</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>fdde5323713</name><operator>..</operator><literal type="number">85674196bb2</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSloppyPhraseQuery</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSloppyPhraseQuery</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">175</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">175</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestSloppyPhraseQuery</name> extends <name>LuceneTestCase</name> <block>{
     <return>return <expr><name>query</name></expr>;</return>
   }</block></expr></expr_stmt>
 
  <class><specifier>static</specifier> class <name>MaxFreqCollector</name> <super_list><extends>extends <super><name>Collector</name></super></extends></super_list> <block>{
  <class><specifier>static</specifier> class <name>MaxFreqCollector</name> <super_list><extends>extends <super><name>SimpleCollector</name></super></extends></super_list> <block>{
     <decl_stmt><decl><type><name>float</name></type> <name>max</name></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>int</name></type> <name>totalHits</name></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>Scorer</name></type> <name>scorer</name></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">191</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">191</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> class <name>TestSloppyPhraseQuery</name> extends <name>LuceneTestCase</name> <block>{
       <expr><name>max</name> <operator>=</operator> <call><name><name>Math</name><operator>.</operator><name>max</name></name><argument_list>(<argument><expr><name>max</name></expr></argument>, <argument><expr><call><name><name>scorer</name><operator>.</operator><name>freq</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
     }</block></expr></expr_stmt>
 
    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>      
    </block_content>}</block></function>

     <function><annotation>@<name>Override</name></annotation>
     <type><specifier>public</specifier> <name>boolean</name></type> <name>acceptsDocsOutOfOrder</name><parameter_list>()</parameter_list> <block>{<block_content>
       <return>return <expr><literal type="boolean">false</literal></expr>;</return>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">203</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">199</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestSloppyPhraseQuery</name> extends <name>LuceneTestCase</name> <block>{
   
   <comment type="block" format="javadoc">/** checks that no scores or freqs are infinite */</comment>
   <expr><specifier>private</specifier> <name>void</name> <call><name>assertSaneScoring</name><argument_list>(<argument><expr><name>PhraseQuery</name> <name>pq</name></expr></argument>, <argument><expr><name>IndexSearcher</name> <name>searcher</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><call><name><name>searcher</name><operator>.</operator><name>search</name></name><argument_list>(<argument><expr><name>pq</name></expr></argument>, <argument><expr><operator>new</operator> <class><super><name>Collector</name></super><argument_list>(</argument_list></class></expr></argument>)</argument_list></call> <block>{
    <expr><call><name><name>searcher</name><operator>.</operator><name>search</name></name><argument_list>(<argument><expr><name>pq</name></expr></argument>, <argument><expr><operator>new</operator> <class><super><name>SimpleCollector</name></super><argument_list>(</argument_list></class></expr></argument>)</argument_list></call> <block>{
       <expr><name>Scorer</name> <name>scorer</name></expr></block></expr></block></expr></block></expr></argument></throws></expr>;
       
       @<name>Override</name>
@@ <operator>-</operator><literal type="number">217</literal>,<literal type="number">11</literal> <operator>+</operator><literal type="number">213</literal>,<literal type="number">6</literal> @@ <specifier>public</specifier> class <name>TestSloppyPhraseQuery</name> extends <name>LuceneTestCase</name> <block>{
         <expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>Float</name><operator>.</operator><name>isInfinite</name></name><argument_list>(<argument><expr><call><name><name>scorer</name><operator>.</operator><name>score</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
       }</block>
       
      @<name>Override</name>
      <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <block>{
        <comment type="line">// do nothing</comment>
      }</block></block>
      
       @<name>Override</name>
       <specifier>public</specifier> <name>boolean</name> <call><name>acceptsDocsOutOfOrder</name><argument_list>()</argument_list></call> <block>{
         <return>return <expr><literal type="boolean">false</literal></expr>;</return>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSubScorerFreqs</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSubScorerFreqs</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">063d26b5c40</literal><operator>..</operator><name>def8988ae66</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSubScorerFreqs</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSubScorerFreqs</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">65</literal>,<literal type="number">10</literal> <operator>+</operator><literal type="number">65</literal>,<literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestSubScorerFreqs</name> extends <name>LuceneTestCase</name> <block>{
     <expr><name>dir</name> <operator>=</operator> <literal type="null">null</literal></expr>;
   }</block>
 
  <specifier>private</specifier> <specifier>static</specifier> class <name>CountingCollector</name> extends <name>Collector</name> <block>{
    <expr><specifier>private</specifier> <name>final</name> <name>Collector</name> <name>other</name></expr>;
    <specifier>private</specifier> <name>int</name> <name>docBase</name></block></block></expr>;</expr_stmt>

  <class><specifier>private</specifier> <specifier>static</specifier> class <name>CountingCollector</name> <super_list><extends>extends <super><name>FilterCollector</name></super></extends></super_list> <block>{
     <decl_stmt><decl><type><specifier>public</specifier> <specifier>final</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>Integer</name></argument>, <argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>Query</name></argument>, <argument><name>Float</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>docCounts</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>Query</name></argument>, <argument><name>Scorer</name></argument>&gt;</argument_list></name></type> <name>subScorers</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">79</literal></expr><operator>,</operator><expr><literal type="number">16</literal> <operator>+</operator><literal type="number">76</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> class <name>TestSubScorerFreqs</name> extends <name>LuceneTestCase</name> <block>{
     }</block>
 
     <specifier>public</specifier> <call><name>CountingCollector</name><argument_list>(<argument><expr><name>Collector</name> <name>other</name></expr></argument>, <argument><expr><name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name> <name>relationships</name></expr></argument>)</argument_list></call> <block>{
      <expr><name><name>this</name><operator>.</operator><name>other</name></name> <operator>=</operator> <name>other</name></expr>;
      <call><name>super</name><argument_list>(<argument><expr><name>other</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
       <expr_stmt><expr><name><name>this</name><operator>.</operator><name>relationships</name></name> <operator>=</operator> <name>relationships</name></expr>;</expr_stmt>
     }</block></class>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>setScorer</name><parameter_list>(<parameter><decl><type><name>Scorer</name></type> <name>scorer</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
      <expr_stmt><expr><call><name><name>other</name><operator>.</operator><name>setScorer</name></name><argument_list>(<argument><expr><name>scorer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>subScorers</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>setSubScorers</name><argument_list>(<argument><expr><name>scorer</name></expr></argument>, <argument><expr><literal type="string">"TOP"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>
     
     <function><type><specifier>public</specifier> <name>void</name></type> <name>setSubScorers</name><parameter_list>(<parameter><decl><type><name>Scorer</name></type> <name>scorer</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>relationship</name></decl></parameter>)</parameter_list> <block>{<block_content>
       <for>for <control>(<init><decl><type><name>ChildScorer</name></type> <name>child</name> <range>: <expr><call><name><name>scorer</name><operator>.</operator><name>getChildren</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">98</literal></expr><operator>,</operator><expr><literal type="number">30</literal> <operator>+</operator><literal type="number">88</literal></expr><operator>,</operator><expr><literal type="number">34</literal> @@ <specifier>public</specifier> class <name>TestSubScorerFreqs</name> extends <name>LuceneTestCase</name> <block>{
       }</block>
       <call><name><name>subScorers</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>scorer</name><operator>.</operator><name>getWeight</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getQuery</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scorer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></for>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>collect</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
      <decl_stmt><decl><type><specifier>final</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>Query</name></argument>, <argument><name>Float</name></argument>&gt;</argument_list></name></type> <name>freqs</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <for>for <control>(<init><decl><type><name><name>Map</name><operator>.</operator><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>Query</name></argument>, <argument><name>Scorer</name></argument>&gt;</argument_list></name></name></type> <name>ent</name> <range>: <expr><call><name><name>subScorers</name><operator>.</operator><name>entrySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
        <decl_stmt><decl><type><name>Scorer</name></type> <name>value</name> <init>= <expr><call><name><name>ent</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>matchId</name> <init>= <expr><call><name><name>value</name><operator>.</operator><name>docID</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>freqs</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>ent</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><ternary><condition><expr><name>matchId</name> <operator>==</operator> <name>doc</name></expr> ?</condition><then> <expr><call><name><name>value</name><operator>.</operator><name>freq</name></name><argument_list>()</argument_list></call></expr> </then><else>: <expr><literal type="number">0.0f</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></for>
      <expr_stmt><expr><call><name><name>docCounts</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>doc</name> <operator>+</operator> <name>docBase</name></expr></argument>, <argument><expr><name>freqs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>other</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    <decl_stmt><decl><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list>
    
    public <name>LeafCollector</name> <name>getLeafCollector</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list>
         <throws>throws <argument><expr><name>IOException</name> <block>{
      <expr><name>docBase</name> <operator>=</operator> <name><name>context</name><operator>.</operator><name>docBase</name></name></expr></block></expr></argument></throws></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>other</name><operator>.</operator><name>setNextReader</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><specifier>final</specifier> <name>int</name></type> <name>docBase</name> <init>= <expr><name><name>context</name><operator>.</operator><name>docBase</name></name></expr></init></decl>;</decl_stmt>
      <return>return <expr><operator>new</operator> <class><super><name>FilterLeafCollector</name></super><argument_list>(<argument><expr><call><name><name>super</name><operator>.</operator><name>getLeafCollector</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list> <block>{
        
        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>void</name></type> <name>collect</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
          <decl_stmt><decl><type><specifier>final</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>Query</name></argument>, <argument><name>Float</name></argument>&gt;</argument_list></name></type> <name>freqs</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>Query</name></argument>, <argument><name>Float</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
          <for>for <control>(<init><decl><type><name><name>Map</name><operator>.</operator><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>Query</name></argument>, <argument><name>Scorer</name></argument>&gt;</argument_list></name></name></type> <name>ent</name> <range>: <expr><call><name><name>subScorers</name><operator>.</operator><name>entrySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
            <decl_stmt><decl><type><name>Scorer</name></type> <name>value</name> <init>= <expr><call><name><name>ent</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>int</name></type> <name>matchId</name> <init>= <expr><call><name><name>value</name><operator>.</operator><name>docID</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>freqs</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>ent</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><ternary><condition><expr><name>matchId</name> <operator>==</operator> <name>doc</name></expr> ?</condition><then> <expr><call><name><name>value</name><operator>.</operator><name>freq</name></name><argument_list>()</argument_list></call></expr> </then><else>: <expr><literal type="number">0.0f</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          </block_content>}</block></for>
          <expr_stmt><expr><call><name><name>docCounts</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>doc</name> <operator>+</operator> <name>docBase</name></expr></argument>, <argument><expr><name>freqs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></function>
        
        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>void</name></type> <name>setScorer</name><parameter_list>(<parameter><decl><type><name>Scorer</name></type> <name>scorer</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
          <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>setScorer</name></name><argument_list>(<argument><expr><name>scorer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>subScorers</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name>setSubScorers</name><argument_list>(<argument><expr><name>scorer</name></expr></argument>, <argument><expr><literal type="string">"TOP"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></function>
        
      }</block></class></expr>;</return>
     </block_content>}</block></function>
 
    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>boolean</name></type> <name>acceptsDocsOutOfOrder</name><parameter_list>()</parameter_list> <block>{<block_content>
      <return>return <expr><call><name><name>other</name><operator>.</operator><name>acceptsDocsOutOfOrder</name></name><argument_list>()</argument_list></call></expr>;</return>
    </block_content>}</block></function>
   </block_content>}</block></function>
 
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>float</name></type> <name>FLOAT_TOLERANCE</name> <init>= <expr><literal type="number">0.00001F</literal></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestTermScorer</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestTermScorer</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">6b4f474f8d4</literal><operator>..</operator><literal type="number">44faa83a892</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestTermScorer</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestTermScorer</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">84</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">84</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestTermScorer</name> extends <name>LuceneTestCase</name> <block>{
     <expr><name>final</name> <name><name>List</name><argument_list type="generic">&lt;<argument><name>TestHit</name></argument>&gt;</argument_list></name> <name>docs</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
     <comment type="line">// must call next first</comment>
     
    <call><name><name>ts</name><operator>.</operator><name>score</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>Collector</name></super><argument_list>()</argument_list> <block>{
    <expr_stmt><expr><call><name><name>ts</name><operator>.</operator><name>score</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>SimpleCollector</name></super><argument_list>()</argument_list> <block>{
       <decl_stmt><decl><type><specifier>private</specifier> <name>int</name></type> <name>base</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><specifier>private</specifier> <name>Scorer</name></type> <name>scorer</name></decl>;</decl_stmt>
       
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">104</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">104</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestTermScorer</name> extends <name>LuceneTestCase</name> <block>{
       }</block>
       
       @<name>Override</name>
      <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <block>{
      <expr><specifier>protected</specifier> <name>void</name> <call><name>doSetNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
         <expr><name>base</name> <operator>=</operator> <name><name>context</name><operator>.</operator><name>docBase</name></name></expr></block></expr></argument></throws></expr>;
       }</block></expr></expr_stmt>
       
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestTimeLimitingCollector</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestTimeLimitingCollector</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">537e30f9176</literal><operator>..</operator><literal type="number">85239c62b10</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestTimeLimitingCollector</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestTimeLimitingCollector</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">307</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">307</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestTimeLimitingCollector</name> extends <name>LuceneTestCase</name> <block>{
   }</block>
   
   <comment type="line">// counting collector that can slow down at collect().</comment>
  <specifier>private</specifier> class <name>MyHitCollector</name> extends <name>Collector</name> <block>{
  <expr><specifier>private</specifier> class <name>MyHitCollector</name> extends <name>SimpleCollector</name> <block>{
     <expr><specifier>private</specifier> <name>final</name> <name>BitSet</name> <name>bits</name> <operator>=</operator> <operator>new</operator> <call><name>BitSet</name><argument_list>()</argument_list></call></expr>;
     <specifier>private</specifier> <name>int</name> <name>slowdown</name> <operator>=</operator> <literal type="number">0</literal></block></expr>;
     <specifier>private</specifier> <name>int</name> <name>lastDocCollected</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></block></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">349</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">349</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestTimeLimitingCollector</name> extends <name>LuceneTestCase</name> <block>{
     }</block>
     
     @<name>Override</name>
    <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <block>{
    <expr><specifier>protected</specifier> <name>void</name> <call><name>doSetNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
       <expr><name>docBase</name> <operator>=</operator> <name><name>context</name><operator>.</operator><name>docBase</name></name></expr></block></expr></argument></throws></expr>;
     }</block></expr></expr_stmt>
     
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestTopDocsCollector</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestTopDocsCollector</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>f8f728f9061</name><operator>..</operator><literal type="number">0c56e111cc2</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestTopDocsCollector</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestTopDocsCollector</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">61</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">61</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestTopDocsCollector</name> extends <name>LuceneTestCase</name> <block>{
     }</block>
 
     @<name>Override</name>
    <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <block>{
    <expr><specifier>protected</specifier> <name>void</name> <call><name>doSetNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
       <expr><name>base</name> <operator>=</operator> <name><name>context</name><operator>.</operator><name>docBase</name></name></expr></block></expr></argument></throws></expr>;
     }</block></expr></expr_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name><name>DrillSideways</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name><name>DrillSideways</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">01b3b6c5b53</literal><operator>..</operator><name>c8614f3fa53</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name><name>DrillSideways</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name><name>DrillSideways</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">26</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">26</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>facet</name><operator>.</operator><name>sortedset</name><operator>.</operator><name>SortedSetDocValuesFacetField</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>facet</name><operator>.</operator><name>sortedset</name><operator>.</operator><name>SortedSetDocValuesReaderState</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>facet</name><operator>.</operator><name>taxonomy</name><operator>.</operator><name>FastTaxonomyFacetCounts</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>facet</name><operator>.</operator><name>taxonomy</name><operator>.</operator><name>TaxonomyReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>LeafCollector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>BooleanClause</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>BooleanQuery</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Collector</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">238</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">239</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>DrillSideways</name> <block>{
    <expr><operator>*</operator>  default <name>is</name> <literal type="boolean">false</literal><operator>.</operator>  <name>Note</name> <name>that</name></expr> <if_stmt><if>if you return true from
    *  this method <condition>(<expr><name>in</name> <name>a</name> <name>subclass</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>be</name> <name>sure</name> <name>your</name> <name>collector</name>
    <operator>*</operator>  <name>also</name> <name>returns</name> <literal type="boolean">false</literal> <name>from</name> <block>{@<expr><name>link</name>
   <operator>*</operator>  <name>Collector</name><operator>#</operator><name>acceptsDocsOutOfOrder</name></expr>}</block><operator>:</operator> <name>this</name> <name>will</name> <name>trick</name>
   <operator>*</operator>  <name>LeafCollector</name><operator>#</operator><name>acceptsDocsOutOfOrder</name></expr></expr_stmt></block_content></block></if></if_stmt>}</block></expr></expr_stmt>: <expr_stmt><expr><name>this</name> <name>will</name> <name>trick</name>
    <operator>*</operator>  <block>{@<expr><name>code</name> <name>BooleanQuery</name></expr>}</block> <name>into</name> <name>also</name> <name>scoring</name> <name>all</name> <name>subDocs</name> <name>at</name>
    <operator>*</operator>  <name><name>once</name><operator>.</operator></name> *<operator>/</operator>
   <specifier>protected</specifier> <name>boolean</name> <call><name>scoreSubDocsAtOnce</name><argument_list>()</argument_list></call> <block>{
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name><name>DrillSidewaysScorer</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name><name>DrillSidewaysScorer</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">1d08bf77d9a</literal><operator>..</operator><literal type="number">273b6b18569</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name><name>DrillSidewaysScorer</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name><name>DrillSidewaysScorer</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">23</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">23</literal></expr>,<expr><literal type="number">7</literal> @@</expr> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import></block></expr></expr_stmt>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>DocsEnum</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>LeafCollector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Collector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>DocIdSetIterator</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Scorer</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">36</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">37</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ class <name>DrillSidewaysScorer</name> extends <name>BulkScorer</name> <block>{
   <comment type="line">//private static boolean DEBUG = false;</comment>
 
   <expr><specifier>private</specifier> <name>final</name> <name>Collector</name> <name>drillDownCollector</name></expr>;
  <specifier>private</specifier> <name>LeafCollector</name> <name>drillDownLeafCollector</name></block></expr>;</expr_stmt>
 
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name><name>DocsAndCost</name><index>[]</index></name></type> <name>dims</name></decl>;</decl_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">62</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">64</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ class <name>DrillSidewaysScorer</name> extends <name>BulkScorer</name> <block>{
   }</block>
 
   @<name>Override</name>
  <specifier>public</specifier> <name>boolean</name> <call><name>score</name><argument_list>(<argument><expr><name>Collector</name> <name>collector</name></expr></argument>, <argument><expr><name>int</name> <name>maxDoc</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>public</specifier> <name>boolean</name> <call><name>score</name><argument_list>(<argument><expr><name>LeafCollector</name> <name>collector</name></expr></argument>, <argument><expr><name>int</name> <name>maxDoc</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr></expr_stmt>
     <if_stmt><if>if <condition>(<expr><name>maxDoc</name> <operator>!=</operator> <name><name>Integer</name><operator>.</operator><name>MAX_VALUE</name></name></expr>)</condition> <block>{<block_content>
       <throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><literal type="string">"maxDoc must be Integer.MAX_VALUE"</literal></expr></argument>)</argument_list></call></expr>;</throw>
     </block_content>}</block></if></if_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">73</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">75</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ class <name>DrillSidewaysScorer</name> extends <name>BulkScorer</name> <block>{
     <expr><name>FakeScorer</name> <name>scorer</name> <operator>=</operator> <operator>new</operator> <call><name>FakeScorer</name><argument_list>()</argument_list></call></expr>;
     <call><name><name>collector</name><operator>.</operator><name>setScorer</name></name><argument_list>(<argument><expr><name>scorer</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <if_stmt><if>if <condition>(<expr><name>drillDownCollector</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>drillDownCollector</name><operator>.</operator><name>setScorer</name></name><argument_list>(<argument><expr><name>scorer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>drillDownCollector</name><operator>.</operator><name>setNextReader</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>drillDownLeafCollector</name> <operator>=</operator> <call><name><name>drillDownCollector</name><operator>.</operator><name>getLeafCollector</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>drillDownLeafCollector</name><operator>.</operator><name>setScorer</name></name><argument_list>(<argument><expr><name>scorer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <else>else <block>{<block_content>
      <expr_stmt><expr><name>drillDownLeafCollector</name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
     </block_content>}</block></else></if_stmt>
     <for>for <control>(<init><decl><type><name>DocsAndCost</name></type> <name>dim</name> <range>: <expr><name>dims</name></expr></range></decl></init>)</control> <block>{<block_content>
      <expr_stmt><expr><call><name><name>dim</name><operator>.</operator><name>sidewaysCollector</name><operator>.</operator><name>setScorer</name></name><argument_list>(<argument><expr><name>scorer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>dim</name><operator>.</operator><name>sidewaysCollector</name><operator>.</operator><name>setNextReader</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>dim</name><operator>.</operator><name>sidewaysLeafCollector</name></name> <operator>=</operator> <call><name><name>dim</name><operator>.</operator><name>sidewaysCollector</name><operator>.</operator><name>getLeafCollector</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>dim</name><operator>.</operator><name>sidewaysLeafCollector</name><operator>.</operator><name>setScorer</name></name><argument_list>(<argument><expr><name>scorer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></for>
 
     <comment type="line">// TODO: if we ever allow null baseScorer ... it will</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">100</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">104</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ class <name>DrillSidewaysScorer</name> extends <name>BulkScorer</name> <block>{
     <expr><name>final</name> <name>int</name> <name>numDims</name> <operator>=</operator> <name><name>dims</name><operator>.</operator><name>length</name></name></expr>;
 
     <name><name>Bits</name><index>[]</index></name> <name>bits</name> <operator>=</operator> <operator>new</operator> <name><name>Bits</name><index>[<expr><name>numBits</name></expr>]</index></name></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name><name>Collector</name><index>[]</index></name></type> <name>bitsSidewaysCollectors</name> <init>= <expr><operator>new</operator> <name><name>Collector</name><index>[<expr><name>numBits</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>LeafCollector</name><index>[]</index></name></type> <name>bitsSidewaysCollectors</name> <init>= <expr><operator>new</operator> <name><name>LeafCollector</name><index>[<expr><name>numBits</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
 
     <decl_stmt><decl><type><name><name>DocIdSetIterator</name><index>[]</index></name></type> <name>disis</name> <init>= <expr><operator>new</operator> <name><name>DocIdSetIterator</name><index>[<expr><name>numDims</name><operator>-</operator><name>numBits</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>Collector</name><index>[]</index></name></type> <name>sidewaysCollectors</name> <init>= <expr><operator>new</operator> <name><name>Collector</name><index>[<expr><name>numDims</name><operator>-</operator><name>numBits</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>LeafCollector</name><index>[]</index></name></type> <name>sidewaysCollectors</name> <init>= <expr><operator>new</operator> <name><name>LeafCollector</name><index>[<expr><name>numDims</name><operator>-</operator><name>numBits</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>long</name></type> <name>drillDownCost</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>int</name></type> <name>disiUpto</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>int</name></type> <name>bitsUpto</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">111</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">115</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ class <name>DrillSidewaysScorer</name> extends <name>BulkScorer</name> <block>{
       <expr><name>DocIdSetIterator</name> <name>disi</name> <operator>=</operator> <name><name>dims</name><index>[<expr><name>dim</name></expr>]</index></name><operator>.</operator><name>disi</name></expr>;</block></expr></expr_stmt>
       <if_stmt><if>if <condition>(<expr><name><name>dims</name><index>[<expr><name>dim</name></expr>]</index></name><operator>.</operator><name>bits</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
         <expr_stmt><expr><name><name>disis</name><index>[<expr><name>disiUpto</name></expr>]</index></name> <operator>=</operator> <name>disi</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>sidewaysCollectors</name><index>[<expr><name>disiUpto</name></expr>]</index></name> <operator>=</operator> <name><name>dims</name><index>[<expr><name>dim</name></expr>]</index></name><operator>.</operator><name>sidewaysCollector</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>sidewaysCollectors</name><index>[<expr><name>disiUpto</name></expr>]</index></name> <operator>=</operator> <name><name>dims</name><index>[<expr><name>dim</name></expr>]</index></name><operator>.</operator><name>sidewaysLeafCollector</name></expr>;</expr_stmt>
         <expr_stmt><expr><name>disiUpto</name><operator>++</operator></expr>;</expr_stmt>
         <if_stmt><if>if <condition>(<expr><name>disi</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
           <expr_stmt><expr><name>drillDownCost</name> <operator>+=</operator> <call><name><name>disi</name><operator>.</operator><name>cost</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></if></if_stmt>
       </block_content>}</block></if> <else>else <block>{<block_content>
         <expr_stmt><expr><name><name>bits</name><index>[<expr><name>bitsUpto</name></expr>]</index></name> <operator>=</operator> <name><name>dims</name><index>[<expr><name>dim</name></expr>]</index></name><operator>.</operator><name>bits</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>bitsSidewaysCollectors</name><index>[<expr><name>bitsUpto</name></expr>]</index></name> <operator>=</operator> <name><name>dims</name><index>[<expr><name>dim</name></expr>]</index></name><operator>.</operator><name>sidewaysCollector</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>bitsSidewaysCollectors</name><index>[<expr><name>bitsUpto</name></expr>]</index></name> <operator>=</operator> <name><name>dims</name><index>[<expr><name>dim</name></expr>]</index></name><operator>.</operator><name>sidewaysLeafCollector</name></expr>;</expr_stmt>
         <expr_stmt><expr><name>bitsUpto</name><operator>++</operator></expr>;</expr_stmt>
       </block_content>}</block></else></if_stmt>
     }</block></class>
@@ <operator>-</operator><literal type="number">154</literal></expr></argument>,<argument><expr><literal type="number">15</literal> <operator>+</operator><literal type="number">158</literal></expr></argument>,<argument><expr><literal type="number">15</literal> @@ class <name>DrillSidewaysScorer</name> extends <name>BulkScorer</name> <block>{
    <expr><operator>*</operator>  <operator>(</operator><name><name>i</name><operator>.</operator><name>e</name><operator>.</operator></name>, <name>like</name> <name>BooleanScorer2</name>, <name>not</name> <name>BooleanScorer</name><operator>)</operator><operator>.</operator>  <name>In</name>
    <operator>*</operator>  <name>this</name></expr> <case>case <expr><name>we</name> <call><name><name>just</name> <operator>.</operator><name>next</name></name><argument_list>()</argument_list></call> <name>on</name> <name>base</name> <call><name><name>and</name> <operator>.</operator><name>advance</name></name><argument_list>()</argument_list></call> <name>on</name>
    <operator>*</operator>  <name>the</name> <name>dim</name> <name><name>filters</name><operator>.</operator></name> *<operator>/</operator> 
  <specifier>private</specifier> <name>void</name> <call><name>doQueryFirstScoring</name><argument_list>(<argument><expr><name>Collector</name> <name>collector</name></expr></argument>, <argument><expr><name><name>DocIdSetIterator</name><index>[]</index></name> <name>disis</name></expr></argument>, <argument><expr><name><name>Collector</name><index>[]</index></name> <name>sidewaysCollectors</name></expr></argument>,
                                   <argument><expr><name><name>Bits</name><index>[]</index></name> <name>bits</name></expr></argument>, <argument><expr><name><name>Collector</name><index>[]</index></name> <name>bitsSidewaysCollectors</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>private</specifier> <name>void</name> <call><name>doQueryFirstScoring</name><argument_list>(<argument><expr><name>LeafCollector</name> <name>collector</name></expr></argument>, <argument><expr><name><name>DocIdSetIterator</name><index>[]</index></name> <name>disis</name></expr></argument>, <argument><expr><name><name>LeafCollector</name><index>[]</index></name> <name>sidewaysCollectors</name></expr></argument>,
                                   <argument><expr><name><name>Bits</name><index>[]</index></name> <name>bits</name></expr></argument>, <argument><expr><name><name>LeafCollector</name><index>[]</index></name> <name>bitsSidewaysCollectors</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
     <comment type="line">//if (DEBUG) {</comment>
     <comment type="line">//  System.out.println("  doQueryFirstScoring");</comment>
     <comment type="line">//}</comment>
     <expr><name>int</name> <name>docID</name> <operator>=</operator> <call><name><name>baseScorer</name><operator>.</operator><name>docID</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr><empty_stmt>;</empty_stmt>
 
     <label><name>nextDoc</name>:</label> <while>while <condition>(<expr><name>docID</name> <operator>!=</operator> <name><name>DocsEnum</name><operator>.</operator><name>NO_MORE_DOCS</name></name></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>Collector</name></type> <name>failedCollector</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>LeafCollector</name></type> <name>failedCollector</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
       <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name><name>disis</name><operator>.</operator><name>length</name></name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
         <comment type="line">// TODO: should we sort this 2nd dimension of</comment>
         <comment type="line">// docsEnums from most frequent to least?</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">225</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">229</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ class <name>DrillSidewaysScorer</name> extends <name>BulkScorer</name> <block>{
 
   <comment type="block" format="javadoc">/** Used when drill downs are highly constraining vs
    *  baseQuery. */</comment>
  <expr><specifier>private</specifier> <name>void</name> <call><name>doDrillDownAdvanceScoring</name><argument_list>(<argument><expr><name>Collector</name> <name>collector</name></expr></argument>, <argument><expr><name><name>DocIdSetIterator</name><index>[]</index></name> <name>disis</name></expr></argument>, <argument><expr><name><name>Collector</name><index>[]</index></name> <name>sidewaysCollectors</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>private</specifier> <name>void</name> <call><name>doDrillDownAdvanceScoring</name><argument_list>(<argument><expr><name>LeafCollector</name> <name>collector</name></expr></argument>, <argument><expr><name><name>DocIdSetIterator</name><index>[]</index></name> <name>disis</name></expr></argument>, <argument><expr><name><name>LeafCollector</name><index>[]</index></name> <name>sidewaysCollectors</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><name>final</name> <name>int</name> <name>maxDoc</name> <operator>=</operator> <call><name><name>context</name><operator>.</operator><name>reader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>maxDoc</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
     <name>final</name> <name>int</name> <name>numDims</name> <operator>=</operator> <name><name>dims</name><operator>.</operator><name>length</name></name></block></expr>;</expr_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">423</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">427</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ class <name>DrillSidewaysScorer</name> extends <name>BulkScorer</name> <block>{
     }</block></expr></expr_stmt>
   </block_content>}</block></for>
 
  <function><type><specifier>private</specifier> <name>void</name></type> <name>doUnionScoring</name><parameter_list>(<parameter><decl><type><name>Collector</name></type> <name>collector</name></decl></parameter>, <parameter><decl><type><name><name>DocIdSetIterator</name><index>[]</index></name></type> <name>disis</name></decl></parameter>, <parameter><decl><type><name><name>Collector</name><index>[]</index></name></type> <name>sidewaysCollectors</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
  <function><type><specifier>private</specifier> <name>void</name></type> <name>doUnionScoring</name><parameter_list>(<parameter><decl><type><name>LeafCollector</name></type> <name>collector</name></decl></parameter>, <parameter><decl><type><name><name>DocIdSetIterator</name><index>[]</index></name></type> <name>disis</name></decl></parameter>, <parameter><decl><type><name><name>LeafCollector</name><index>[]</index></name></type> <name>sidewaysCollectors</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
     <comment type="line">//if (DEBUG) {</comment>
     <comment type="line">//  System.out.println("  doUnionScoring");</comment>
     <comment type="line">//}</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">569</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">573</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ class <name>DrillSidewaysScorer</name> extends <name>BulkScorer</name> <block>{
     }</block></expr></expr_stmt>
   </block_content>}</block></function>
 
  <function><type><specifier>private</specifier> <name>void</name></type> <name>collectHit</name><parameter_list>(<parameter><decl><type><name>Collector</name></type> <name>collector</name></decl></parameter>, <parameter><decl><type><name><name>Collector</name><index>[]</index></name></type> <name>sidewaysCollectors</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
  <function><type><specifier>private</specifier> <name>void</name></type> <name>collectHit</name><parameter_list>(<parameter><decl><type><name>LeafCollector</name></type> <name>collector</name></decl></parameter>, <parameter><decl><type><name><name>LeafCollector</name><index>[]</index></name></type> <name>sidewaysCollectors</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
     <comment type="line">//if (DEBUG) {</comment>
     <comment type="line">//  System.out.println("      hit");</comment>
     <comment type="line">//}</comment>
 
     <expr_stmt><expr><call><name><name>collector</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><name>collectDocID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <if_stmt><if>if <condition>(<expr><name>drillDownCollector</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>drillDownCollector</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><name>collectDocID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>drillDownLeafCollector</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><name>collectDocID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></if></if_stmt>
 
     <comment type="line">// TODO: we could "fix" faceting of the sideways counts</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">589</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">593</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ class <name>DrillSidewaysScorer</name> extends <name>BulkScorer</name> <block>{
     }</block></expr></expr_stmt>
   </block_content>}</block></function>
 
  <function><type><specifier>private</specifier> <name>void</name></type> <name>collectHit</name><parameter_list>(<parameter><decl><type><name>Collector</name></type> <name>collector</name></decl></parameter>, <parameter><decl><type><name><name>Collector</name><index>[]</index></name></type> <name>sidewaysCollectors</name></decl></parameter>, <parameter><decl><type><name><name>Collector</name><index>[]</index></name></type> <name>sidewaysCollectors2</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
  <function><type><specifier>private</specifier> <name>void</name></type> <name>collectHit</name><parameter_list>(<parameter><decl><type><name>LeafCollector</name></type> <name>collector</name></decl></parameter>, <parameter><decl><type><name><name>LeafCollector</name><index>[]</index></name></type> <name>sidewaysCollectors</name></decl></parameter>, <parameter><decl><type><name><name>LeafCollector</name><index>[]</index></name></type> <name>sidewaysCollectors2</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
     <comment type="line">//if (DEBUG) {</comment>
     <comment type="line">//  System.out.println("      hit");</comment>
     <comment type="line">//}</comment>
 
     <expr_stmt><expr><call><name><name>collector</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><name>collectDocID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <if_stmt><if>if <condition>(<expr><name>drillDownCollector</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>drillDownCollector</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><name>collectDocID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>drillDownLeafCollector</name><operator>.</operator><name>collect</name></name><argument_list>(<argument><expr><name>collectDocID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></if></if_stmt>
 
     <comment type="line">// TODO: we could "fix" faceting of the sideways counts</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">612</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">616</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ class <name>DrillSidewaysScorer</name> extends <name>BulkScorer</name> <block>{
     }</block></expr></expr_stmt>
   </block_content>}</block></function>
 
  <function><type><specifier>private</specifier> <name>void</name></type> <name>collectNearMiss</name><parameter_list>(<parameter><decl><type><name>Collector</name></type> <name>sidewaysCollector</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
  <function><type><specifier>private</specifier> <name>void</name></type> <name>collectNearMiss</name><parameter_list>(<parameter><decl><type><name>LeafCollector</name></type> <name>sidewaysCollector</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
     <comment type="line">//if (DEBUG) {</comment>
     <comment type="line">//  System.out.println("      missingDim=" + dim);</comment>
     <comment type="line">//}</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">620</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">624</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ class <name>DrillSidewaysScorer</name> extends <name>BulkScorer</name> <block>{
   }</block>
 
   <specifier>private</specifier> <name>final</name> class <name>FakeScorer</name> extends <name>Scorer</name> <block>{
    <expr><name>float</name> <name>score</name></expr>;
    <name>int</name> <name>doc</name></block></expr>;</expr_stmt>
 
     <constructor><specifier>public</specifier> <name>FakeScorer</name><parameter_list>()</parameter_list> <block>{<block_content>
       <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">674</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">676</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ class <name>DrillSidewaysScorer</name> extends <name>BulkScorer</name> <block>{
     <comment type="line">// Random access bits:</comment>
     <expr><name>Bits</name> <name>bits</name></expr>;
     <name>Collector</name> <name>sidewaysCollector</name></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>LeafCollector</name></type> <name>sidewaysLeafCollector</name></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>String</name></type> <name>dim</name></decl>;</decl_stmt>
 
     <annotation>@<name>Override</name></annotation>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name><name>FacetsCollector</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name><name>FacetsCollector</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">912725d4c65</literal><operator>..</operator><literal type="number">90bbba6320d</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name><name>FacetsCollector</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name><name>FacetsCollector</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">32</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">32</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>MultiCollector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Query</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>ScoreDoc</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Scorer</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>SimpleCollector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Sort</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>TopDocs</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>TopDocsCollector</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">47</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">48</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>FixedBitSet</name></name>;</import>
  <expr_stmt><expr><operator>*</operator>  <name><name>counting</name><operator>.</operator>  <name>Use</name></name> <name>the</name> <block>{@<expr><name>code</name> <name>search</name></expr>}</block> <name>utility</name> <name>methods</name> <name>to</name>
  <operator>*</operator>  <name>perform</name> <name>an</name> <literal type="string">"ordinary"</literal> <name>search</name> <name>but</name> <name>also</name> <name>collect</name> <name>into</name> <name>a</name>
  <operator>*</operator>  <block>{@<expr><name>link</name> <name>Collector</name></expr>}</block><operator>.</operator> <operator>*</operator><operator>/</operator>
<specifier>public</specifier> class <name>FacetsCollector</name> extends <name>Collector</name> <block>{
<expr><specifier>public</specifier> class <name>FacetsCollector</name> extends <name>SimpleCollector</name> <block>{
 
   <expr><specifier>private</specifier> <name>AtomicReaderContext</name> <name>context</name></expr>;
   <specifier>private</specifier> <name>Scorer</name> <name>scorer</name></block></expr>;
@@ <operator>-</operator><literal type="number">151</literal>,<literal type="number">7</literal> <operator>+</operator><literal type="number">152</literal>,<literal type="number">7</literal> @@ <specifier>public</specifier> class <name>FacetsCollector</name> extends <name>Collector</name> <block>{
 
     <return>return <expr><name>matchingDocs</name></expr>;</return>
   }</block>
    

   @<name>Override</name>
   <specifier>public</specifier> <name>final</name> <name>boolean</name> <call><name>acceptsDocsOutOfOrder</name><argument_list>()</argument_list></call> <block>{
     <comment type="line">// If we are keeping scores then we require in-order</comment>
@@ <expr><operator>-</operator><literal type="number">180</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">181</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>FacetsCollector</name> extends <name>Collector</name> <block>{
   }</block>
     
   @<name>Override</name>
  <specifier>public</specifier> <name>final</name> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>protected</specifier> <name>void</name> <call><name>doSetNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr>
     <if_stmt><if>if <condition>(<expr><name>docs</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><call><name><name>matchingDocs</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>MatchingDocs</name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>context</name></name></expr></argument>, <argument><expr><call><name><name>docs</name><operator>.</operator><name>getDocIdSet</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>totalHits</name></expr></argument>, <argument><expr><name>scores</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></if></if_stmt>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name><name>AssertingSubDocsAtOnceCollector</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name><name>AssertingSubDocsAtOnceCollector</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">644b3adc8e0</literal><operator>..</operator><name>df104b0793e</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name><name>AssertingSubDocsAtOnceCollector</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name><name>AssertingSubDocsAtOnceCollector</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">20</literal>,<literal type="number">14</literal> <operator>+</operator><literal type="number">20</literal>,<literal type="number">13</literal> @@</block></block></expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>facet</name></name>;</package>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Collector</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Scorer</name><operator>.</operator><name>ChildScorer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Scorer</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Scorer</name><operator>.</operator><name>ChildScorer</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>SimpleCollector</name></name>;</import>
 
 <comment type="block" format="javadoc">/** Verifies in collect() that all child subScorers are on
  *  the collected doc. */</comment>
<class>class <name>AssertingSubDocsAtOnceCollector</name> <super_list><extends>extends <super><name>Collector</name></super></extends></super_list> <block>{
<class>class <name>AssertingSubDocsAtOnceCollector</name> <super_list><extends>extends <super><name>SimpleCollector</name></super></extends></super_list> <block>{
 
   <comment type="line">// TODO: allow wrapping another Collector</comment>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">56</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">55</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ class <name>AssertingSubDocsAtOnceCollector</name> extends <name>Collector</name> <block>{
     }</block></expr></expr_stmt>
   }</block></class>
 
  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{<block_content>
  </block_content>}</block></function>

   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>public</specifier> <name>boolean</name></type> <name>acceptsDocsOutOfOrder</name><parameter_list>()</parameter_list> <block>{<block_content>
     <return>return <expr><literal type="boolean">false</literal></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name><name>TestDrillSideways</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name><name>TestDrillSideways</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>a6875cba714</name><operator>..</operator><literal type="number">6847da75680</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name><name>TestDrillSideways</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>facet</name><operator>/</operator><name><name>TestDrillSideways</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">43</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">43</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexWriterConfig</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>RandomIndexWriter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Term</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>LeafCollector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Collector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>DocIdSet</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Filter</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">51</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">52</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>MatchAllDocsQuery</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Query</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>ScoreDoc</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Scorer</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>SimpleCollector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Sort</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>SortField</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>TermQuery</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">666</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">668</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> class <name>TestDrillSideways</name> extends <name>FacetTestCase</name> <block>{
       <comment type="line">// had an AssertingScorer it could catch it when</comment>
       <comment type="line">// Weight.scoresDocsOutOfOrder lies!:</comment>
       <expr><operator>new</operator> <call><name>DrillSideways</name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><name>config</name></expr></argument>, <argument><expr><name>tr</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>search</name><argument_list>(<argument><expr><name>ddq</name></expr></argument>,
                           <argument><expr><operator>new</operator> <class><super><name>Collector</name></super><argument_list>()</argument_list> <block>{
                           <expr_stmt><expr><operator>new</operator> <class><super><name>SimpleCollector</name></super><argument_list>()</argument_list> <block>{
                              <decl_stmt><decl><type><name>int</name></type> <name>lastDocID</name></decl>;</decl_stmt>
 
                             <function><annotation>@<name>Override</name></annotation>
                             <type><specifier>public</specifier> <name>void</name></type> <name>setScorer</name><parameter_list>(<parameter><decl><type><name>Scorer</name></type> <name>s</name></decl></parameter>)</parameter_list> <block>{<block_content>
                             <expr_stmt/>}</block_content>

                              @Override
                              public void collect(int doc</block></function>)</block> <block>{
                                <assert>assert <expr><name>doc</name> <operator>&gt;</operator> <name>lastDocID</name></expr>;</assert>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">680</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">678</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestDrillSideways</name> extends <name>FacetTestCase</name> <block>{
                              }</block>
 
                              @<name>Override</name>
                             <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <block>{
                             <expr><specifier>protected</specifier> <name>void</name> <call><name>doSetNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
                                <expr><name>lastDocID</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr></block></expr></argument></throws></expr>;
                              }</block>
 
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>grouping</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>grouping</name><operator>/</operator><name><name>AbstractAllGroupHeadsCollector</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>grouping</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>grouping</name><operator>/</operator><name><name>AbstractAllGroupHeadsCollector</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">31abf0bc3a3</literal><operator>..</operator><name>be6d8f8b92e</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>grouping</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>grouping</name><operator>/</operator><name><name>AbstractAllGroupHeadsCollector</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>grouping</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>grouping</name><operator>/</operator><name><name>AbstractAllGroupHeadsCollector</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">20</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">20</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>grouping</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Collector</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>FixedBitSet</name></name>;</import>

 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collection</name></name>;</import>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>SimpleCollector</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>FixedBitSet</name></name>;</import>

 <comment type="block" format="javadoc">/**
  * This collector specializes in collecting the most relevant document (group head) for each group that match the query.
  *
  * @lucene.experimental
  */</comment>
 <class><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><block>{<expr><literal type="string">"unchecked"</literal></expr>,<argument><expr><literal type="string">"rawtypes"</literal></expr></argument>}</block></expr></argument>)</argument_list></annotation>
<specifier>public</specifier> <specifier>abstract</specifier> class <name><name>AbstractAllGroupHeadsCollector</name><parameter_list>&lt;<parameter><name>GH</name> <extends>extends <name>AbstractAllGroupHeadsCollector</name><operator>.</operator><name>GroupHead</name></extends></parameter>&gt;</parameter_list></name> <super_list><extends>extends <super><name>Collector</name></super></extends></super_list> <block>{
<class><specifier>public</specifier> <specifier>abstract</specifier> class <name><name>AbstractAllGroupHeadsCollector</name><parameter_list>&lt;<parameter><name>GH</name> <extends>extends <name>AbstractAllGroupHeadsCollector</name><operator>.</operator><name>GroupHead</name></extends></parameter>&gt;</parameter_list></name> <super_list><extends>extends <super><name>SimpleCollector</name></super></extends></super_list> <block>{
 
   <decl_stmt><decl><type><specifier>protected</specifier> <specifier>final</specifier> <name><name>int</name><index>[]</index></name></type> <name>reversed</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>protected</specifier> <specifier>final</specifier> <name>int</name></type> <name>compIDXEnd</name></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>grouping</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>grouping</name><operator>/</operator><name><name>AbstractAllGroupsCollector</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>grouping</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>grouping</name><operator>/</operator><name><name>AbstractAllGroupsCollector</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">3cd9164df17</literal><operator>..</operator><literal type="number">1677ecaa5fa</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>grouping</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>grouping</name><operator>/</operator><name><name>AbstractAllGroupsCollector</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>grouping</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>grouping</name><operator>/</operator><name><name>AbstractAllGroupsCollector</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>grouping</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Collector</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Scorer</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>BytesRef</name></name>;</import>

 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collection</name></name>;</import>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Scorer</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>SimpleCollector</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>BytesRef</name></name>;</import>

 <comment type="block" format="javadoc">/**
  * A collector that collects all groups that match the
  * query. Only the group value is collected, and the order
@@ -36,7 +36,7 @@ import java.util.Collection;
  *
  * @lucene.experimental
  */</comment>
<class><specifier>public</specifier> <specifier>abstract</specifier> class <name><name>AbstractAllGroupsCollector</name><parameter_list>&lt;<parameter><name>GROUP_VALUE_TYPE</name></parameter>&gt;</parameter_list></name> <super_list><extends>extends <super><name>Collector</name></super></extends></super_list> <block>{
<class><specifier>public</specifier> <specifier>abstract</specifier> class <name><name>AbstractAllGroupsCollector</name><parameter_list>&lt;<parameter><name>GROUP_VALUE_TYPE</name></parameter>&gt;</parameter_list></name> <super_list><extends>extends <super><name>SimpleCollector</name></super></extends></super_list> <block>{
 
   <comment type="block" format="javadoc">/**
    * Returns the total number of groups for the executed search.
diff --git a/lucene/grouping/src/java/org/apache/lucene/search/grouping/AbstractDistinctValuesCollector.java b/lucene/grouping/src/java/org/apache/lucene/search/grouping/AbstractDistinctValuesCollector.java
index 07fc35e0aa5..a735caf48e9 100644
-- a/lucene/grouping/src/java/org/apache/lucene/search/grouping/AbstractDistinctValuesCollector.java
++ b/lucene/grouping/src/java/org/apache/lucene/search/grouping/AbstractDistinctValuesCollector.java
@@ -17,18 +17,18 @@ package org.apache.lucene.search.grouping;
  * limitations under the License.
  */</comment>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Collector</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Scorer</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>*</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>SimpleCollector</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
  * A second pass grouping collector that keeps track of distinct values for a specified field for the top N group.
  *
  * @lucene.experimental
  */</comment>
<class><specifier>public</specifier> <specifier>abstract</specifier> class <name><name>AbstractDistinctValuesCollector</name><parameter_list>&lt;<parameter><name>GC</name> <extends>extends <name>AbstractDistinctValuesCollector</name><operator>.</operator><name><name>GroupCount</name><parameter_list>&lt;<parameter><name>?</name></parameter>&gt;</parameter_list></name></extends></parameter>&gt;</parameter_list></name> <super_list><extends>extends <super><name>Collector</name></super></extends></super_list> <block>{
<class><specifier>public</specifier> <specifier>abstract</specifier> class <name><name>AbstractDistinctValuesCollector</name><parameter_list>&lt;<parameter><name>GC</name> <extends>extends <name>AbstractDistinctValuesCollector</name><operator>.</operator><name><name>GroupCount</name><parameter_list>&lt;<parameter><name>?</name></parameter>&gt;</parameter_list></name></extends></parameter>&gt;</parameter_list></name> <super_list><extends>extends <super><name>SimpleCollector</name></super></extends></super_list> <block>{
 
   <comment type="block" format="javadoc">/**
    * Returns all unique values for each top N group.
@@ -42,10 +42,6 @@ public abstract class AbstractDistinctValuesCollector&lt;GC extends AbstractDistinc
     return true;
   }
 
  @Override
  public void setScorer(Scorer scorer) throws IOException {
  }

   /**
    * Returned by {@link AbstractDistinctValuesCollector#getGroups()},
    * representing the value and set of distinct values for the group.
diff --git a/lucene/grouping/src/java/org/apache/lucene/search/grouping/AbstractFirstPassGroupingCollector.java b/lucene/grouping/src/java/org/apache/lucene/search/grouping/AbstractFirstPassGroupingCollector.java
index 19b1d36052e..0c342ecddae 100644
-- a/lucene/grouping/src/java/org/apache/lucene/search/grouping/AbstractFirstPassGroupingCollector.java
++ b/lucene/grouping/src/java/org/apache/lucene/search/grouping/AbstractFirstPassGroupingCollector.java
@@ -33,7 +33,7 @@ import java.util.*;
  *
  * @lucene.experimental
  */</comment>
<class><specifier>abstract</specifier> <specifier>public</specifier> class <name><name>AbstractFirstPassGroupingCollector</name><parameter_list>&lt;<parameter><name>GROUP_VALUE_TYPE</name></parameter>&gt;</parameter_list></name> <super_list><extends>extends <super><name>Collector</name></super></extends></super_list> <block>{
<class><specifier>abstract</specifier> <specifier>public</specifier> class <name><name>AbstractFirstPassGroupingCollector</name><parameter_list>&lt;<parameter><name>GROUP_VALUE_TYPE</name></parameter>&gt;</parameter_list></name> <super_list><extends>extends <super><name>SimpleCollector</name></super></extends></super_list> <block>{
 
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>Sort</name></type> <name>groupSort</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name><name><name>FieldComparator</name><argument_list type="generic">&lt;<argument><name>?</name></argument>&gt;</argument_list></name><index>[]</index></name></type> <name>comparators</name></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">326</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">326</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>abstract</specifier> <specifier>public</specifier> class <name><name>AbstractFirstPassGroupingCollector</name><argument_list type="generic">&lt;<argument><name>GROUP_VALUE_TYPE</name></argument>&gt;</argument_list></name> <name>exten</name></expr></expr_stmt>
   }</block>
 
   <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>readerContext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
  <function><type><specifier>protected</specifier> <name>void</name></type> <name>doSetNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>readerContext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
     <expr_stmt><expr><name>docBase</name> <operator>=</operator> <name><name>readerContext</name><operator>.</operator><name>docBase</name></name></expr>;</expr_stmt>
     <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name><name>comparators</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
       <expr_stmt><expr><name><name>comparators</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>comparators</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>setNextReader</name><argument_list>(<argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>grouping</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>grouping</name><operator>/</operator><name><name>AbstractGroupFacetCollector</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>grouping</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>grouping</name><operator>/</operator><name><name>AbstractGroupFacetCollector</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">8db044c8c1f</literal><operator>..</operator><literal type="number">016f393c908</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>grouping</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>grouping</name><operator>/</operator><name><name>AbstractGroupFacetCollector</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>grouping</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>grouping</name><operator>/</operator><name><name>AbstractGroupFacetCollector</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>grouping</name></name>;</package>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Collector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Scorer</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>SimpleCollector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>BytesRef</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>PriorityQueue</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">30</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">31</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>*</name></name>;</import>
  <expr_stmt><expr><operator>*</operator>
  <operator>*</operator> @<name><name>lucene</name><operator>.</operator><name>experimental</name></name>
  <operator>*</operator><operator>/</operator>
<specifier>public</specifier> <specifier>abstract</specifier> class <name>AbstractGroupFacetCollector</name> extends <name>Collector</name> <block>{
<expr><specifier>public</specifier> <specifier>abstract</specifier> class <name>AbstractGroupFacetCollector</name> extends <name>SimpleCollector</name> <block>{
 
   <expr><specifier>protected</specifier> <name>final</name> <name>String</name> <name>groupField</name></expr>;
   <specifier>protected</specifier> <name>final</name> <name>String</name> <name>facetField</name></block></expr>;
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>grouping</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>grouping</name><operator>/</operator><name><name>AbstractSecondPassGroupingCollector</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>grouping</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>grouping</name><operator>/</operator><name><name>AbstractSecondPassGroupingCollector</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">7b000124e07</literal><operator>..</operator><name>aedfa9ea21c</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>grouping</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>grouping</name><operator>/</operator><name><name>AbstractSecondPassGroupingCollector</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>grouping</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>grouping</name><operator>/</operator><name><name>AbstractSecondPassGroupingCollector</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">37</literal>,<literal type="number">7</literal> <operator>+</operator><literal type="number">37</literal>,<literal type="number">7</literal> @@</block></expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
  <expr_stmt><expr><operator>*</operator>
  <operator>*</operator> @<name><name>lucene</name><operator>.</operator><name>experimental</name></name>
  <operator>*</operator><operator>/</operator>
<specifier>public</specifier> <specifier>abstract</specifier> class <name><name>AbstractSecondPassGroupingCollector</name><argument_list type="generic">&lt;<argument><name>GROUP_VALUE_TYPE</name></argument>&gt;</argument_list></name> extends <name>Collector</name> <block>{
<expr><specifier>public</specifier> <specifier>abstract</specifier> class <name><name>AbstractSecondPassGroupingCollector</name><argument_list type="generic">&lt;<argument><name>GROUP_VALUE_TYPE</name></argument>&gt;</argument_list></name> extends <name>SimpleCollector</name> <block>{
 
   <expr><specifier>protected</specifier> <name>final</name> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>GROUP_VALUE_TYPE</name></argument>, <argument><name><name>SearchGroupDocs</name><argument_list type="generic">&lt;<argument><name>GROUP_VALUE_TYPE</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name> <name>groupMap</name></expr>;
   <specifier>private</specifier> <name>final</name> <name>int</name> <name>maxDocsPerGroup</name></block></expr>;
@@ <operator>-</operator><literal type="number">107</literal>,<literal type="number">10</literal> <operator>+</operator><literal type="number">107</literal>,<literal type="number">10</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> class <name><name>AbstractSecondPassGroupingCollector</name><argument_list type="generic">&lt;<argument><name>GROUP_VALUE_TYPE</name></argument>&gt;</argument_list></name> <name>exte</name>
   <specifier>protected</specifier> <specifier>abstract</specifier> <name><name>SearchGroupDocs</name><argument_list type="generic">&lt;<argument><name>GROUP_VALUE_TYPE</name></argument>&gt;</argument_list></name> <call><name>retrieveGroup</name><argument_list>(<argument><expr><name>int</name> <name>doc</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws></block></expr>;</expr_stmt>
 
   <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>readerContext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
  <function><type><specifier>protected</specifier> <name>void</name></type> <name>doSetNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>readerContext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
     <comment type="line">//System.out.println("SP.setNextReader");</comment>
     <for>for <control>(<init><decl><type><name><name>SearchGroupDocs</name><argument_list type="generic">&lt;<argument><name>GROUP_VALUE_TYPE</name></argument>&gt;</argument_list></name></type> <name>group</name> <range>: <expr><call><name><name>groupMap</name><operator>.</operator><name>values</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
      <expr_stmt><expr><call><name><name>group</name><operator>.</operator><name>collector</name><operator>.</operator><name>setNextReader</name></name><argument_list>(<argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>group</name><operator>.</operator><name>collector</name><operator>.</operator><name>getLeafCollector</name></name><argument_list>(<argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt/>}</block_content>
   }
 
diff --git a/lucene/grouping/src/java/org/apache/lucene/search/grouping/BlockGroupingCollector.java b/lucene/grouping/src/java/org/apache/lucene/search/grouping/BlockGroupingCollector.java
index 195ec230ed7..7c33583292f 100644
-- a/lucene/grouping/src/java/org/apache/lucene/search/grouping/BlockGroupingCollector.java
++ b/lucene/grouping/src/java/org/apache/lucene/search/grouping/BlockGroupingCollector.java
@@ -55</block><operator>,</operator><expr_stmt><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">55</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt></for> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>PriorityQueue</name></name>;</import>
  <expr_stmt><expr><operator>*</operator> @<name><name>lucene</name><operator>.</operator><name>experimental</name></name>
  <operator>*</operator><operator>/</operator>
 
<specifier>public</specifier> class <name>BlockGroupingCollector</name> extends <name>Collector</name> <block>{
<expr><specifier>public</specifier> class <name>BlockGroupingCollector</name> extends <name>SimpleCollector</name> <block>{
 
   <expr><specifier>private</specifier> <name><name>int</name><index>[]</index></name> <name>pendingSubDocs</name></expr>;
   <specifier>private</specifier> <name><name>float</name><index>[]</index></name> <name>pendingSubScores</name></block></expr>;
@@ <operator>-</operator><literal type="number">350</literal>,<literal type="number">7</literal> <operator>+</operator><literal type="number">350</literal>,<literal type="number">7</literal> @@ <specifier>public</specifier> class <name>BlockGroupingCollector</name> extends <name>Collector</name> <block>{
       }</block></block>
 
       <call><name><name>collector</name><operator>.</operator><name>setScorer</name></name><argument_list>(<argument><expr><name>fakeScorer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>collector</name><operator>.</operator><name>setNextReader</name></name><argument_list>(<argument><expr><name><name>og</name><operator>.</operator><name>readerContext</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>collector</name><operator>.</operator><name>getLeafCollector</name></name><argument_list>(<argument><expr><name><name>og</name><operator>.</operator><name>readerContext</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <for>for<control>(<init><decl><type><name>int</name></type> <name>docIDX</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>docIDX</name><operator>&lt;</operator><name><name>og</name><operator>.</operator><name>count</name></name></expr>;</condition><incr><expr><name>docIDX</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
         <decl_stmt><decl><type><specifier>final</specifier> <name>int</name></type> <name>doc</name> <init>= <expr><name><name>og</name><operator>.</operator><name>docs</name><index>[<expr><name>docIDX</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
         <expr_stmt><expr><name><name>fakeScorer</name><operator>.</operator><name>doc</name></name> <operator>=</operator> <name>doc</name></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">516</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">516</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>BlockGroupingCollector</name> extends <name>Collector</name> <block>{
   }</block>
 
   @<name>Override</name>
  <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>readerContext</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>protected</specifier> <name>void</name> <call><name>doSetNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>readerContext</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr></expr_stmt>
     <if_stmt><if>if <condition>(<expr><name>subDocUpto</name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><call><name>processGroup</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt/>}</block_content>
diff --git a/lucene/grouping/src/java/org/apache/lucene/search/grouping/function/FunctionAllGroupHeadsCollector.java b/lucene/grouping/src/java/org/apache/lucene/search/grouping/function/FunctionAllGroupHeadsCollector.java
index 8372ac5bc61..64ad845a517 100644
-- a/lucene/grouping/src/java/org/apache/lucene/search/grouping/function/FunctionAllGroupHeadsCollector.java
++ b/lucene/grouping/src/java/org/apache/lucene/search/grouping/function/FunctionAllGroupHeadsCollector.java
@@ -20</block><operator>,</operator><expr_stmt><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt></if></if_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>grouping</name><operator>.</operator><name>function</name></name>;</package>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>queries</name><operator>.</operator><name>function</name><operator>.</operator><name>FunctionValues</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>queries</name><operator>.</operator><name>function</name><operator>.</operator><name>ValueSource</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>LeafCollector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>FieldComparator</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Scorer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Sort</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">101</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">102</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>FunctionAllGroupHeadsCollector</name> extends <name>AbstractAllGroupHeadsCollect</name></expr></expr_stmt>
   }</block_content>
 
   @Override
  public void setNextReader(AtomicReaderContext context</block></for>)</block_content> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>protected</specifier> <name>void</name> <call><name>doSetNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><name><name>this</name><operator>.</operator><name>readerContext</name></name> <operator>=</operator> <name>context</name></expr></block></expr></argument></throws></block>;</function>
     <decl_stmt><decl><type><name>FunctionValues</name></type> <name>values</name> <init>= <expr><call><name><name>groupBy</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>vsContext</name></expr></argument>, <argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><name>filler</name> <operator>=</operator> <call><name><name>values</name><operator>.</operator><name>getValueFiller</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>grouping</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>grouping</name><operator>/</operator><name>function</name><operator>/</operator><name><name>FunctionAllGroupsCollector</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>grouping</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>grouping</name><operator>/</operator><name>function</name><operator>/</operator><name><name>FunctionAllGroupsCollector</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>c778162e0ca</name><operator>..</operator><name>d949bec7bfd</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>grouping</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>grouping</name><operator>/</operator><name>function</name><operator>/</operator><name><name>FunctionAllGroupsCollector</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>grouping</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>grouping</name><operator>/</operator><name>function</name><operator>/</operator><name><name>FunctionAllGroupsCollector</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>grouping</name><operator>.</operator><name>function</name></name>;</package>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>queries</name><operator>.</operator><name>function</name><operator>.</operator><name>FunctionValues</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>queries</name><operator>.</operator><name>function</name><operator>.</operator><name>ValueSource</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>LeafCollector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>grouping</name><operator>.</operator><name>AbstractAllGroupsCollector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>mutable</name><operator>.</operator><name>MutableValue</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">75</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">76</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>FunctionAllGroupsCollector</name> extends <name>AbstractAllGroupsCollector</name><operator>&lt;</operator><name>Mutab</name></expr></expr_stmt>
   }</block_content>
 
   @Override
  public void setNextReader(AtomicReaderContext context</block></function>)</block_content> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>protected</specifier> <name>void</name> <call><name>doSetNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><name>FunctionValues</name> <name>values</name> <operator>=</operator> <call><name><name>groupBy</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>vsContext</name></expr></argument>, <argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></block><empty_stmt>;</empty_stmt></for>
     <expr_stmt><expr><name>filler</name> <operator>=</operator> <call><name><name>values</name><operator>.</operator><name>getValueFiller</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>mval</name> <operator>=</operator> <call><name><name>filler</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>grouping</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>grouping</name><operator>/</operator><name>function</name><operator>/</operator><name><name>FunctionDistinctValuesCollector</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>grouping</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>grouping</name><operator>/</operator><name>function</name><operator>/</operator><name><name>FunctionDistinctValuesCollector</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">3bc707482fc</literal><operator>..</operator><literal type="number">597a1966796</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>grouping</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>grouping</name><operator>/</operator><name>function</name><operator>/</operator><name><name>FunctionDistinctValuesCollector</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>grouping</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>grouping</name><operator>/</operator><name>function</name><operator>/</operator><name><name>FunctionDistinctValuesCollector</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>grouping</name><operator>.</operator><name>function</name></name>;</package>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>queries</name><operator>.</operator><name>function</name><operator>.</operator><name>FunctionValues</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>queries</name><operator>.</operator><name>function</name><operator>.</operator><name>ValueSource</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>LeafCollector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>grouping</name><operator>.</operator><name>AbstractDistinctValuesCollector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>grouping</name><operator>.</operator><name>SearchGroup</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>mutable</name><operator>.</operator><name>MutableValue</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">70</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">71</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>FunctionDistinctValuesCollector</name> extends <name>AbstractDistinctValuesColle</name></expr></expr_stmt>
   }</block_content>
 
   @Override
  public void setNextReader(AtomicReaderContext context</block></function>)</block_content> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>protected</specifier> <name>void</name> <call><name>doSetNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><name>FunctionValues</name> <name>values</name> <operator>=</operator> <call><name><name>groupSource</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>vsContext</name></expr></argument>, <argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></block>;</function></class>
     <expr_stmt><expr><name>groupFiller</name> <operator>=</operator> <call><name><name>values</name><operator>.</operator><name>getValueFiller</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>groupMval</name> <operator>=</operator> <call><name><name>groupFiller</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>grouping</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>grouping</name><operator>/</operator><name>function</name><operator>/</operator><name><name>FunctionFirstPassGroupingCollector</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>grouping</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>grouping</name><operator>/</operator><name>function</name><operator>/</operator><name><name>FunctionFirstPassGroupingCollector</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">6355a516218</literal><operator>..</operator><name>b9737e1b9b7</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>grouping</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>grouping</name><operator>/</operator><name>function</name><operator>/</operator><name><name>FunctionFirstPassGroupingCollector</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>grouping</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>grouping</name><operator>/</operator><name>function</name><operator>/</operator><name><name>FunctionFirstPassGroupingCollector</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>grouping</name><operator>.</operator><name>function</name></name>;</package>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>queries</name><operator>.</operator><name>function</name><operator>.</operator><name>FunctionValues</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>queries</name><operator>.</operator><name>function</name><operator>.</operator><name>ValueSource</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>LeafCollector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Sort</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>grouping</name><operator>.</operator><name>AbstractFirstPassGroupingCollector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>mutable</name><operator>.</operator><name>MutableValue</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">77</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">78</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> class <name>FunctionFirstPassGroupingCollector</name> extends <name>AbstractFirstPassGroupin</name></expr></expr_stmt>
   }</block>
 
   <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>readerContext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>setNextReader</name></name><argument_list>(<argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <function><type><specifier>protected</specifier> <name>void</name></type> <name>doSetNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>readerContext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>doSetNextReader</name></name><argument_list>(<argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>FunctionValues</name></type> <name>values</name> <init>= <expr><call><name><name>groupByVS</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>vsContext</name></expr></argument>, <argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><name>filler</name> <operator>=</operator> <call><name><name>values</name><operator>.</operator><name>getValueFiller</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>mval</name> <operator>=</operator> <call><name><name>filler</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>grouping</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>grouping</name><operator>/</operator><name>function</name><operator>/</operator><name><name>FunctionSecondPassGroupingCollector</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>grouping</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>grouping</name><operator>/</operator><name>function</name><operator>/</operator><name><name>FunctionSecondPassGroupingCollector</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>d2f1d597a01</name><operator>..</operator><literal type="number">9df094be793</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>grouping</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>grouping</name><operator>/</operator><name>function</name><operator>/</operator><name><name>FunctionSecondPassGroupingCollector</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>grouping</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>grouping</name><operator>/</operator><name>function</name><operator>/</operator><name><name>FunctionSecondPassGroupingCollector</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>grouping</name><operator>.</operator><name>function</name></name>;</package>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>queries</name><operator>.</operator><name>function</name><operator>.</operator><name>FunctionValues</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>queries</name><operator>.</operator><name>function</name><operator>.</operator><name>ValueSource</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>LeafCollector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Sort</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>grouping</name><operator>.</operator><name>AbstractSecondPassGroupingCollector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>grouping</name><operator>.</operator><name>SearchGroup</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">71</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">72</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> class <name>FunctionSecondPassGroupingCollector</name> extends <name>AbstractSecondPassGroup</name></expr></expr_stmt>
   }</block_content>
 
   @Override
  public void setNextReader(AtomicReaderContext readerContext</block></function>)</block_content> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><call><name><name>super</name><operator>.</operator><name>setNextReader</name></name><argument_list>(<argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></block>;</function></class>
  <function><type><specifier>protected</specifier> <name>void</name></type> <name>doSetNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>readerContext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>doSetNextReader</name></name><argument_list>(<argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>FunctionValues</name></type> <name>values</name> <init>= <expr><call><name><name>groupByVS</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name>vsContext</name></expr></argument>, <argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><name>filler</name> <operator>=</operator> <call><name><name>values</name><operator>.</operator><name>getValueFiller</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>mval</name> <operator>=</operator> <call><name><name>filler</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>grouping</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>grouping</name><operator>/</operator><name>term</name><operator>/</operator><name><name>TermAllGroupHeadsCollector</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>grouping</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>grouping</name><operator>/</operator><name>term</name><operator>/</operator><name><name>TermAllGroupHeadsCollector</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">2367f4d6387</literal><operator>..</operator><literal type="number">45192c11c58</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>grouping</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>grouping</name><operator>/</operator><name>term</name><operator>/</operator><name><name>TermAllGroupHeadsCollector</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>grouping</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>grouping</name><operator>/</operator><name>term</name><operator>/</operator><name><name>TermAllGroupHeadsCollector</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>grouping</name><operator>.</operator><name>term</name></name>;</package>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>SortedDocValues</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>LeafCollector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>FieldCache</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>FieldComparator</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Scorer</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">158</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">159</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> class <name>TermAllGroupHeadsCollector</name><operator>&lt;</operator><name>GH</name> extends <name>AbstractAllGroupHead</name></expr></expr_stmt>
     }</block_content>
 
     @Override
    public void setNextReader(AtomicReaderContext context</block></function>)</block> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><specifier>protected</specifier> <name>void</name> <call><name>doSetNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
       <expr><name><name>this</name><operator>.</operator><name>readerContext</name></name> <operator>=</operator> <name>context</name></expr></block></expr></argument></throws>;</class>
       <expr_stmt><expr><name>groupIndex</name> <operator>=</operator> <call><name><name>FieldCache</name><operator>.</operator><name>DEFAULT</name><operator>.</operator><name>getTermsIndex</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>reader</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>groupField</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">273</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">274</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> class <name>TermAllGroupHeadsCollector</name><operator>&lt;</operator><name>GH</name> extends <name>AbstractAllGroupHead</name></expr></expr_stmt>
     }</block>
 
     <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <function><type><specifier>protected</specifier> <name>void</name></type> <name>doSetNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
       <expr_stmt><expr><name><name>this</name><operator>.</operator><name>readerContext</name></name> <operator>=</operator> <name>context</name></expr>;</expr_stmt>
       <expr_stmt><expr><name>groupIndex</name> <operator>=</operator> <call><name><name>FieldCache</name><operator>.</operator><name>DEFAULT</name><operator>.</operator><name>getTermsIndex</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>reader</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>groupField</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>fields</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">441</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">442</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> class <name>TermAllGroupHeadsCollector</name><operator>&lt;</operator><name>GH</name> extends <name>AbstractAllGroupHead</name></expr></expr_stmt>
     }</block_content>
 
     @Override
    public void setNextReader(AtomicReaderContext context</block></for>)</block_content> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><specifier>protected</specifier> <name>void</name> <call><name>doSetNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
       <expr><name><name>this</name><operator>.</operator><name>readerContext</name></name> <operator>=</operator> <name>context</name></expr></block></expr></argument></throws></block>;</function>
       <expr_stmt><expr><name>groupIndex</name> <operator>=</operator> <call><name><name>FieldCache</name><operator>.</operator><name>DEFAULT</name><operator>.</operator><name>getTermsIndex</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>reader</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>groupField</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>fields</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">584</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">585</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> class <name>TermAllGroupHeadsCollector</name><operator>&lt;</operator><name>GH</name> extends <name>AbstractAllGroupHead</name></expr></expr_stmt>
     }</block_content>
 
     @Override
    public void setNextReader(AtomicReaderContext context</block></for>)</block_content> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><specifier>protected</specifier> <name>void</name> <call><name>doSetNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
       <expr><name><name>this</name><operator>.</operator><name>readerContext</name></name> <operator>=</operator> <name>context</name></expr></block></expr></argument></throws></block>;</function></class>
       <expr_stmt><expr><name>groupIndex</name> <operator>=</operator> <call><name><name>FieldCache</name><operator>.</operator><name>DEFAULT</name><operator>.</operator><name>getTermsIndex</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>reader</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>groupField</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>grouping</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>grouping</name><operator>/</operator><name>term</name><operator>/</operator><name><name>TermAllGroupsCollector</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>grouping</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>grouping</name><operator>/</operator><name>term</name><operator>/</operator><name><name>TermAllGroupsCollector</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">548640416c9</literal><operator>..</operator><literal type="number">0ff1e57c539</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>grouping</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>grouping</name><operator>/</operator><name>term</name><operator>/</operator><name><name>TermAllGroupsCollector</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>grouping</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>grouping</name><operator>/</operator><name>term</name><operator>/</operator><name><name>TermAllGroupsCollector</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>grouping</name><operator>.</operator><name>term</name></name>;</package>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>SortedDocValues</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>LeafCollector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>FieldCache</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>grouping</name><operator>.</operator><name>AbstractAllGroupsCollector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>BytesRef</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">103</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">104</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TermAllGroupsCollector</name> extends <name><name>AbstractAllGroupsCollector</name><argument_list type="generic">&lt;<argument><name>BytesRef</name></argument>&gt;</argument_list></name></expr></expr_stmt>
   }</block>
 
   <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
  <function><type><specifier>protected</specifier> <name>void</name></type> <name>doSetNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
     <expr_stmt><expr><name>index</name> <operator>=</operator> <call><name><name>FieldCache</name><operator>.</operator><name>DEFAULT</name><operator>.</operator><name>getTermsIndex</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>reader</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>groupField</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <comment type="line">// Clear ordSet and fill it with previous encountered groups that can occur in the current segment.</comment>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>grouping</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>grouping</name><operator>/</operator><name>term</name><operator>/</operator><name><name>TermDistinctValuesCollector</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>grouping</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>grouping</name><operator>/</operator><name>term</name><operator>/</operator><name><name>TermDistinctValuesCollector</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">7dad9f01173</literal><operator>..</operator><name>c718dc2b4d6</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>grouping</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>grouping</name><operator>/</operator><name>term</name><operator>/</operator><name><name>TermDistinctValuesCollector</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>grouping</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>grouping</name><operator>/</operator><name>term</name><operator>/</operator><name><name>TermDistinctValuesCollector</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>grouping</name><operator>.</operator><name>term</name></name>;</package>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>SortedDocValues</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>LeafCollector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>FieldCache</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>grouping</name><operator>.</operator><name>AbstractDistinctValuesCollector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>grouping</name><operator>.</operator><name>SearchGroup</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">107</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">108</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TermDistinctValuesCollector</name> extends <name>AbstractDistinctValuesCollector</name></expr></expr_stmt>
   }</block_content>
 
   @Override
  public void setNextReader(AtomicReaderContext context</block></function>)</block_content> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>protected</specifier> <name>void</name> <call><name>doSetNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><name>groupFieldTermIndex</name> <operator>=</operator> <call><name><name>FieldCache</name><operator>.</operator><name>DEFAULT</name><operator>.</operator><name>getTermsIndex</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>reader</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>groupField</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></block>;</function></class>
     <expr_stmt><expr><name>countFieldTermIndex</name> <operator>=</operator> <call><name><name>FieldCache</name><operator>.</operator><name>DEFAULT</name><operator>.</operator><name>getTermsIndex</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>reader</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>countField</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <constructor_decl><name><name>ordSet</name><operator>.</operator><name>clear</name></name><parameter_list>()</parameter_list>;</constructor_decl>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>grouping</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>grouping</name><operator>/</operator><name>term</name><operator>/</operator><name><name>TermFirstPassGroupingCollector</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>grouping</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>grouping</name><operator>/</operator><name>term</name><operator>/</operator><name><name>TermFirstPassGroupingCollector</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">70b71b8111e</literal><operator>..</operator><literal type="number">6c708a924eb</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>grouping</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>grouping</name><operator>/</operator><name>term</name><operator>/</operator><name><name>TermFirstPassGroupingCollector</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>grouping</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>grouping</name><operator>/</operator><name>term</name><operator>/</operator><name><name>TermFirstPassGroupingCollector</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>SortedDocValues</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>LeafCollector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>FieldCache</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Sort</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>grouping</name><operator>.</operator><name>AbstractFirstPassGroupingCollector</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">85</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">86</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> class <name>TermFirstPassGroupingCollector</name> extends <name>AbstractFirstPassGroupingCol</name></expr></expr_stmt>
   }</block>
 
   <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>readerContext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>setNextReader</name></name><argument_list>(<argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <function><type><specifier>protected</specifier> <name>void</name></type> <name>doSetNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>readerContext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>doSetNextReader</name></name><argument_list>(<argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>index</name> <operator>=</operator> <call><name><name>FieldCache</name><operator>.</operator><name>DEFAULT</name><operator>.</operator><name>getTermsIndex</name></name><argument_list>(<argument><expr><call><name><name>readerContext</name><operator>.</operator><name>reader</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>groupField</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   <expr_stmt/>}</block_content>
 }
diff --git a/lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.java b/lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.java
index 075214af221..5cff4b0d8fd 100644
-- a/lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.java
++ b/lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.java
@@ -21</block><operator>,</operator>6 +21<operator>,</operator>7 @@ import org.apache.lucene.index.AtomicReaderContext;</function>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>SortedDocValues</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>SortedSetDocValues</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>TermsEnum</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>LeafCollector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>FieldCache</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>grouping</name><operator>.</operator><name>AbstractGroupFacetCollector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>BytesRef</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">122</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">123</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> class <name>TermGroupFacetCollector</name> extends <name>AbstractGroupFacetCollecto</name></expr></expr_stmt>
     }</block_content>
 
     @Override
    public void setNextReader(AtomicReaderContext context</block></function></class>)</block> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><specifier>protected</specifier> <name>void</name> <call><name>doSetNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws>
       <if_stmt><if>if <condition>(<expr><name>segmentFacetCounts</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
         <expr_stmt><expr><call><name><name>segmentResults</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name>createSegmentResult</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt/>}</block_content>
@@ -277</block><operator>,</operator><expr_stmt><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">278</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> class <name>TermGroupFacetCollector</name> extends <name>AbstractGroupFacetCollecto</name></expr></expr_stmt></if></if_stmt></class>
     }</block>
 
     <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <function><type><specifier>protected</specifier> <name>void</name></type> <name>doSetNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
       <if_stmt><if>if <condition>(<expr><name>segmentFacetCounts</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
         <expr_stmt><expr><call><name><name>segmentResults</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name>createSegmentResult</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt/>}</block_content>
diff --git a/lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermSecondPassGroupingCollector.java b/lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermSecondPassGroupingCollector.java
index 9401c865a9a..624b0f7c327 100644
-- a/lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermSecondPassGroupingCollector.java
++ b/lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermSecondPassGroupingCollector.java
@@ -22</block><operator>,</operator><expr_stmt><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">22</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt></if></if_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collection</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>SortedDocValues</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>LeafCollector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>FieldCache</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Sort</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>grouping</name><operator>.</operator><name>AbstractSecondPassGroupingCollector</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">53</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">54</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> class <name>TermSecondPassGroupingCollector</name> extends <name>AbstractSecondPassGroupingC</name></expr></expr_stmt>
   }</block_content>
 
   @Override
  public void setNextReader(AtomicReaderContext readerContext</block></function>)</block_content> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><call><name><name>super</name><operator>.</operator><name>setNextReader</name></name><argument_list>(<argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></block>;</function></class>
  <function><type><specifier>protected</specifier> <name>void</name></type> <name>doSetNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>readerContext</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>doSetNextReader</name></name><argument_list>(<argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>index</name> <operator>=</operator> <call><name><name>FieldCache</name><operator>.</operator><name>DEFAULT</name><operator>.</operator><name>getTermsIndex</name></name><argument_list>(<argument><expr><call><name><name>readerContext</name><operator>.</operator><name>reader</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>groupField</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <comment type="line">// Rebuild ordSet</comment>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>highlighter</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>HighlighterPhraseTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>highlighter</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>HighlighterPhraseTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">2f7d56dcc57</literal><operator>..</operator><name>a84ac7478a5</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>highlighter</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>HighlighterPhraseTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>highlighter</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>HighlighterPhraseTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">35</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">35</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>DirectoryReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexWriter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Term</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>LeafCollector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Collector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>IndexSearcher</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>PhraseQuery</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Query</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>SimpleCollector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>TopDocs</name></name>;</import>

 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>spans</name><operator>.</operator><name>SpanNearQuery</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>spans</name><operator>.</operator><name>SpanQuery</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>spans</name><operator>.</operator><name>SpanTermQuery</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">116</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">117</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>HighlighterPhraseTest</name> extends <name>LuceneTestCase</name> <block>{
           <expr><operator>new</operator> <call><name>SpanTermQuery</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Term</name><argument_list>(<argument><expr><name>FIELD</name></expr></argument>, <argument><expr><literal type="string">"fox"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>,
           <expr><operator>new</operator> <call><name>SpanTermQuery</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Term</name><argument_list>(<argument><expr><name>FIELD</name></expr></argument>, <argument><expr><literal type="string">"jumped"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr> }</block></expr><operator>,</operator> <expr><literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="boolean">true</literal></expr></expr_stmt></block_content></block></function></block></class></expr></expr_stmt></block></class></expr></argument>)</argument_list></call></expr>;
       <name>final</name> <name>FixedBitSet</name> <name>bitset</name> <operator>=</operator> <operator>new</operator> <call><name>FixedBitSet</name><argument_list>(<argument><expr><call><name><name>indexReader</name><operator>.</operator><name>maxDoc</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>indexSearcher</name><operator>.</operator><name>search</name></name><argument_list>(<argument><expr><name>phraseQuery</name></expr></argument>, <argument><expr><operator>new</operator> <class><super><name>Collector</name></super><argument_list>()</argument_list> <block>{
      <expr_stmt><expr><call><name><name>indexSearcher</name><operator>.</operator><name>search</name></name><argument_list>(<argument><expr><name>phraseQuery</name></expr></argument>, <argument><expr><operator>new</operator> <class><super><name>SimpleCollector</name></super><argument_list>()</argument_list> <block>{
         <decl_stmt><decl><type><specifier>private</specifier> <name>int</name></type> <name>baseDoc</name></decl>;</decl_stmt>
 
         <annotation>@<name>Override</name></annotation>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">130</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">131</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>HighlighterPhraseTest</name> extends <name>LuceneTestCase</name> <block>{
         }</block>
 
         @<name>Override</name>
        <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <block>{
        <expr><specifier>protected</specifier> <name>void</name> <call><name>doSetNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
           <expr><name><name>this</name><operator>.</operator><name>baseDoc</name></name> <operator>=</operator> <name><name>context</name><operator>.</operator><name>docBase</name></name></expr></block></expr></argument></throws></expr>;
         }</block></expr></expr_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>join</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>join</name><operator>/</operator><name><name>FakeScorer</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>join</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>join</name><operator>/</operator><name><name>FakeScorer</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>d4b02dc7d00</name><operator>..</operator><name>cbd1ff8612a</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>join</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>join</name><operator>/</operator><name><name>FakeScorer</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>join</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>join</name><operator>/</operator><name><name>FakeScorer</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>join</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collection</name></name>;</import>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Collector</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>LeafCollector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Scorer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Weight</name></name>;</import>
 
<comment type="block" format="javadoc">/** Passed to {@link Collector#setScorer} during join collection. */</comment>
<comment type="block" format="javadoc">/** Passed to {@link LeafCollector#setScorer} during join collection. */</comment>
 <class><specifier>final</specifier> class <name>FakeScorer</name> <super_list><extends>extends <super><name>Scorer</name></super></extends></super_list> <block>{
   <decl_stmt><decl><type><name>float</name></type> <name>score</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><name>int</name></type> <name>doc</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>join</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>join</name><operator>/</operator><name><name>TermsCollector</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>join</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>join</name><operator>/</operator><name><name>TermsCollector</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">49004b43b35</literal><operator>..</operator><literal type="number">56545b55502</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>join</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>join</name><operator>/</operator><name><name>TermsCollector</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>join</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>join</name><operator>/</operator><name><name>TermsCollector</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">22</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">22</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>BinaryDocValues</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>SortedSetDocValues</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>LeafCollector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Collector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>FieldCache</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Scorer</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>SimpleCollector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>BytesRef</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>BytesRefHash</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">33</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">35</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>BytesRefHash</name></name>;</import>
  <expr_stmt><expr><operator>*</operator>
  <operator>*</operator> @<name><name>lucene</name><operator>.</operator><name>experimental</name></name>
  <operator>*</operator><operator>/</operator>
<specifier>abstract</specifier> class <name>TermsCollector</name> extends <name>Collector</name> <block>{
<expr><specifier>abstract</specifier> class <name>TermsCollector</name> extends <name>SimpleCollector</name> <block>{
 
   <expr><name>final</name> <name>String</name> <name>field</name></expr>;
   <name>final</name> <name>BytesRefHash</name> <name>collectorTerms</name> <operator>=</operator> <operator>new</operator> <call><name>BytesRefHash</name><argument_list>()</argument_list></call></block></expr>;
@@ <operator>-</operator><literal type="number">46</literal>,<literal type="number">10</literal> <operator>+</operator><literal type="number">48</literal>,<literal type="number">6</literal> @@ <specifier>abstract</specifier> class <name>TermsCollector</name> extends <name>Collector</name> <block>{
     <return>return <expr><name>collectorTerms</name></expr>;</return>
   }</block>
 
  @<name>Override</name>
  <specifier>public</specifier> <name>void</name> <call><name>setScorer</name><argument_list>(<argument><expr><name>Scorer</name> <name>scorer</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
  }</block>

   <annotation>@<name>Override</name></annotation>
   <specifier>public</specifier> <name>boolean</name> <call><name>acceptsDocsOutOfOrder</name><argument_list>()</argument_list></call> <block>{</block></expr></argument></throws></block></expr></expr_stmt>
     <return>return <expr><literal type="boolean">true</literal></expr>;</return>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">86</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">84</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>abstract</specifier> class <name>TermsCollector</name> extends <name>Collector</name> <block>{
     }</block>
 
     @<name>Override</name>
    <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><specifier>protected</specifier> <name>void</name> <call><name>doSetNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
       <expr><name>docTermOrds</name> <operator>=</operator> <call><name><name>FieldCache</name><operator>.</operator><name>DEFAULT</name><operator>.</operator><name>getDocTermOrds</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>reader</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>field</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
     }</block></class>
   }</block></class>
@@ <operator>-</operator><literal type="number">108</literal></expr></argument>,<argument><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">106</literal></expr></argument>,<argument><expr><literal type="number">7</literal> @@ <specifier>abstract</specifier> class <name>TermsCollector</name> extends <name>Collector</name> <block>{
     }</block>
 
     @<name>Override</name>
    <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><specifier>protected</specifier> <name>void</name> <call><name>doSetNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
       <expr><name>fromDocTerms</name> <operator>=</operator> <call><name><name>FieldCache</name><operator>.</operator><name>DEFAULT</name><operator>.</operator><name>getTerms</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>reader</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>field</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr></argument>;</argument_list></call></expr></expr_stmt>
     }</block></class></expr></argument></argument_list></call></expr></expr_stmt>
   </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>join</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>join</name><operator>/</operator><name><name>TermsIncludingScoreQuery</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>join</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>join</name><operator>/</operator><name><name>TermsIncludingScoreQuery</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">739ef35ed13</literal><operator>..</operator><literal type="number">220d0e17d88</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>join</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>join</name><operator>/</operator><name><name>TermsIncludingScoreQuery</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>join</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>join</name><operator>/</operator><name><name>TermsIncludingScoreQuery</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">27</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">27</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Term</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Terms</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>TermsEnum</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>LeafCollector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Collector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>ComplexExplanation</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>DocIdSetIterator</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">227</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">228</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ class <name>TermsIncludingScoreQuery</name> extends <name>Query</name> <block>{
     }</block>
 
     @<name>Override</name>
    <specifier>public</specifier> <name>boolean</name> <call><name>score</name><argument_list>(<argument><expr><name>Collector</name> <name>collector</name></expr></argument>, <argument><expr><name>int</name> <name>max</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><specifier>public</specifier> <name>boolean</name> <call><name>score</name><argument_list>(<argument><expr><name>LeafCollector</name> <name>collector</name></expr></argument>, <argument><expr><name>int</name> <name>max</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
       <expr><name>FakeScorer</name> <name>fakeScorer</name> <operator>=</operator> <operator>new</operator> <call><name>FakeScorer</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
       <constructor_decl><name><name>collector</name><operator>.</operator><name>setScorer</name></name><parameter_list>(<parameter><decl><type><name>fakeScorer</name></type></decl></parameter>)</parameter_list>;</constructor_decl>
       <if_stmt><if>if <condition>(<expr><name>doc</name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>join</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>join</name><operator>/</operator><name><name>TermsWithScoreCollector</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>join</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>join</name><operator>/</operator><name><name>TermsWithScoreCollector</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>dae42b57068</name><operator>..</operator><name>c12f2b9241d</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>join</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>join</name><operator>/</operator><name><name>TermsWithScoreCollector</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>join</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>join</name><operator>/</operator><name><name>TermsWithScoreCollector</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">22</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">22</literal></expr><operator>,</operator><expr><literal type="number">16</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>BinaryDocValues</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>SortedSetDocValues</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>LeafCollector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Collector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>FieldCache</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Scorer</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>SimpleCollector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayUtil</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>BytesRef</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>BytesRefHash</name></name>;</import>
 
<class><specifier>abstract</specifier> class <name>TermsWithScoreCollector</name> <super_list><extends>extends <super><name>Collector</name></super></extends></super_list> <block>{
<class><specifier>abstract</specifier> class <name>TermsWithScoreCollector</name> <super_list><extends>extends <super><name>SimpleCollector</name></super></extends></super_list> <block>{
 
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <specifier>static</specifier> <name>int</name></type> <name>INITIAL_ARRAY_SIZE</name> <init>= <expr><literal type="number">256</literal></expr></init></decl>;</decl_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">128</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">130</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>abstract</specifier> class <name>TermsWithScoreCollector</name> extends <name>Collector</name> <block>{
     }</block>
 
     @<name>Override</name>
    <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><specifier>protected</specifier> <name>void</name> <call><name>doSetNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
       <expr><name>fromDocTerms</name> <operator>=</operator> <call><name><name>FieldCache</name><operator>.</operator><name>DEFAULT</name><operator>.</operator><name>getTerms</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>reader</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>field</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
     }</block></class>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">214</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">216</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>abstract</specifier> class <name>TermsWithScoreCollector</name> extends <name>Collector</name> <block>{
     }</block>
 
     @<name>Override</name>
    <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><specifier>protected</specifier> <name>void</name> <call><name>doSetNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
       <expr><name>fromDocTermOrds</name> <operator>=</operator> <call><name><name>FieldCache</name><operator>.</operator><name>DEFAULT</name><operator>.</operator><name>getDocTermOrds</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>reader</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>field</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
     }</block></class>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>join</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>join</name><operator>/</operator><name><name>ToParentBlockJoinCollector</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>join</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>join</name><operator>/</operator><name><name>ToParentBlockJoinCollector</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">2e3785d310d</literal><operator>..</operator><literal type="number">65767fcdbd8</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>join</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>join</name><operator>/</operator><name><name>ToParentBlockJoinCollector</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>join</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>join</name><operator>/</operator><name><name>ToParentBlockJoinCollector</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">74</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">74</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>*</name></name>;</import>
  <expr_stmt><expr><operator>*</operator>
  <operator>*</operator> @<name><name>lucene</name><operator>.</operator><name>experimental</name></name>
  <operator>*</operator><operator>/</operator>
<specifier>public</specifier> class <name>ToParentBlockJoinCollector</name> extends <name>Collector</name> <block>{
<expr><specifier>public</specifier> class <name>ToParentBlockJoinCollector</name> extends <name>SimpleCollector</name> <block>{
 
   <expr><specifier>private</specifier> <name>final</name> <name>Sort</name> <name>sort</name></expr>;
 
@@ <operator>-</operator><literal type="number">269</literal>,<literal type="number">7</literal> <operator>+</operator><literal type="number">269</literal>,<literal type="number">7</literal> @@ <specifier>public</specifier> class <name>ToParentBlockJoinCollector</name> extends <name>Collector</name> <block>{
   }</block></block>
 
   @<name>Override</name>
  <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>protected</specifier> <name>void</name> <call><name>doSetNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><name>currentReaderContext</name> <operator>=</operator> <name>context</name></expr></block></expr></argument></throws></expr>;
     <name>docBase</name> <operator>=</operator> <name><name>context</name><operator>.</operator><name>docBase</name></name></block></expr>;</expr_stmt>
     <for>for <control>(<init><decl><type><name>int</name></type> <name>compIDX</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>compIDX</name> <operator>&lt;</operator> <name><name>comparators</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>compIDX</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">421</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">421</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>ToParentBlockJoinCollector</name> extends <name>Collector</name> <block>{
       }</block>
 
       <call><name><name>collector</name><operator>.</operator><name>setScorer</name></name><argument_list>(<argument><expr><name>fakeScorer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>collector</name><operator>.</operator><name>setNextReader</name></name><argument_list>(<argument><expr><name><name>og</name><operator>.</operator><name>readerContext</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>collector</name><operator>.</operator><name>getLeafCollector</name></name><argument_list>(<argument><expr><name><name>og</name><operator>.</operator><name>readerContext</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <for>for<control>(<init><decl><type><name>int</name></type> <name>docIDX</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>docIDX</name><operator>&lt;</operator><name>numChildDocs</name></expr>;</condition><incr><expr><name>docIDX</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
         <comment type="line">//System.out.println("docIDX=" + docIDX + " vs " + og.docs[slot].length);</comment>
         <decl_stmt><decl><type><specifier>final</specifier> <name>int</name></type> <name>doc</name> <init>= <expr><name><name>og</name><operator>.</operator><name>docs</name><index>[<expr><name>slot</name></expr>]</index><index>[<expr><name>docIDX</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>join</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>join</name><operator>/</operator><name><name>TestJoinUtil</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>join</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>join</name><operator>/</operator><name><name>TestJoinUtil</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>e9f08023c50</name><operator>..</operator><name>f343e51d3fc</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>join</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>join</name><operator>/</operator><name><name>TestJoinUtil</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>join</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>join</name><operator>/</operator><name><name>TestJoinUtil</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">47</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">47</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>SortedSetDocValues</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Term</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Terms</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>TermsEnum</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>LeafCollector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>BooleanClause</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>BooleanQuery</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Collector</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">58</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">59</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>MatchAllDocsQuery</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Query</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>ScoreDoc</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Scorer</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>SimpleCollector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>TermQuery</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>TopDocs</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>TopScoreDocCollector</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">222</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">224</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> class <name>TestJoinUtil</name> extends <name>LuceneTestCase</name> <block>{
     <expr><call><name><name>bq</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>joinQuery</name></expr></argument>, <argument><expr><name><name>BooleanClause</name><operator>.</operator><name>Occur</name><operator>.</operator><name>SHOULD</name></name></expr></argument>)</argument_list></call></expr>;
     <call><name><name>bq</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>TermQuery</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Term</name><argument_list>(<argument><expr><literal type="string">"id"</literal></expr></argument>, <argument><expr><literal type="string">"3"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>BooleanClause</name><operator>.</operator><name>Occur</name><operator>.</operator><name>SHOULD</name></name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
 
    <expr_stmt><expr><call><name><name>indexSearcher</name><operator>.</operator><name>search</name></name><argument_list>(<argument><expr><name>bq</name></expr></argument>, <argument><expr><operator>new</operator> <class><super><name>Collector</name></super><argument_list>()</argument_list> <block>{
    <expr_stmt><expr><call><name><name>indexSearcher</name><operator>.</operator><name>search</name></name><argument_list>(<argument><expr><name>bq</name></expr></argument>, <argument><expr><operator>new</operator> <class><super><name>SimpleCollector</name></super><argument_list>()</argument_list> <block>{
         <decl_stmt><decl><type><name>boolean</name></type> <name>sawFive</name></decl>;</decl_stmt>
         <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>void</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{<block_content>
        </block_content>}</block></function>
        <function><annotation>@<name>Override</name></annotation>
         <type><specifier>public</specifier> <name>void</name></type> <name>collect</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>docID</name></decl></parameter>)</parameter_list> <block>{<block_content>
           <comment type="line">// Hairy / evil (depends on how BooleanScorer</comment>
           <comment type="line">// stores temporarily collected docIDs by</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">239</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">238</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> class <name>TestJoinUtil</name> extends <name>LuceneTestCase</name> <block>{
           }</block></expr></expr_stmt>
         </block_content>}</block></function>
         <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>void</name></type> <name>setScorer</name><parameter_list>(<parameter><decl><type><name>Scorer</name></type> <name>scorer</name></decl></parameter>)</parameter_list> <block>{<block_content>
        </block_content>}</block></function>
        <function><annotation>@<name>Override</name></annotation>
         <type><specifier>public</specifier> <name>boolean</name></type> <name>acceptsDocsOutOfOrder</name><parameter_list>()</parameter_list> <block>{<block_content>
           <return>return <expr><literal type="boolean">true</literal></expr>;</return>
         </block_content>}</block></function>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">407</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">403</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestJoinUtil</name> extends <name>LuceneTestCase</name> <block>{
         <comment type="line">// Need to know all documents that have matches. TopDocs doesn't give me that and then I'd be also testing TopDocsCollector...</comment>
         <expr><name>final</name> <name>FixedBitSet</name> <name>actualResult</name> <operator>=</operator> <operator>new</operator> <call><name>FixedBitSet</name><argument_list>(<argument><expr><call><name><name>indexSearcher</name><operator>.</operator><name>getIndexReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>maxDoc</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         <name>final</name> <name>TopScoreDocCollector</name> <name>topScoreDocCollector</name> <operator>=</operator> <call><name><name>TopScoreDocCollector</name><operator>.</operator><name>create</name></name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>indexSearcher</name><operator>.</operator><name>search</name></name><argument_list>(<argument><expr><name>joinQuery</name></expr></argument>, <argument><expr><operator>new</operator> <class><super><name>Collector</name></super><argument_list>()</argument_list> <block>{
        <expr_stmt><expr><call><name><name>indexSearcher</name><operator>.</operator><name>search</name></name><argument_list>(<argument><expr><name>joinQuery</name></expr></argument>, <argument><expr><operator>new</operator> <class><super><name>SimpleCollector</name></super><argument_list>()</argument_list> <block>{
 
           <decl_stmt><decl><type><name>int</name></type> <name>docBase</name></decl>;</decl_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">418</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">414</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> class <name>TestJoinUtil</name> extends <name>LuceneTestCase</name> <block>{
           }</block>
 
           @<name>Override</name>
          <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <block>{
          <expr><specifier>protected</specifier> <name>void</name> <call><name>doSetNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
             <expr><name>docBase</name> <operator>=</operator> <name><name>context</name><operator>.</operator><name>docBase</name></name></expr></block></expr></argument></throws></expr>;
            <call><name><name>topScoreDocCollector</name><operator>.</operator><name>setNextReader</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
            <constructor_decl><name><name>topScoreDocCollector</name><operator>.</operator><name>getLeafCollector</name></name><parameter_list>(<parameter><decl><type><name>context</name></type></decl></parameter>)</parameter_list>;</constructor_decl>
           }</block></class>
 
           @<name>Override</name>
@@ <operator>-</operator><literal type="number">572</literal></expr></argument>,<argument><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">568</literal></expr></argument>,<argument><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestJoinUtil</name> extends <name>LuceneTestCase</name> <block>{
       }</block>
       <name>final</name> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>BytesRef</name></argument>, <argument><name>JoinScore</name></argument>&gt;</argument_list></name> <name>joinValueToJoinScores</name> <operator>=</operator> <operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></argument>;</argument_list></call></expr></expr_stmt>
       <if_stmt><if>if <condition>(<expr><name>multipleValuesPerDocument</name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>fromSearcher</name><operator>.</operator><name>search</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>TermQuery</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Term</name><argument_list>(<argument><expr><literal type="string">"value"</literal></expr></argument>, <argument><expr><name>uniqueRandomValue</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <class><super><name>Collector</name></super><argument_list>()</argument_list> <block>{
        <expr_stmt><expr><call><name><name>fromSearcher</name><operator>.</operator><name>search</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>TermQuery</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Term</name><argument_list>(<argument><expr><literal type="string">"value"</literal></expr></argument>, <argument><expr><name>uniqueRandomValue</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <class><super><name>SimpleCollector</name></super><argument_list>()</argument_list> <block>{
 
           <decl_stmt><decl><type><specifier>private</specifier> <name>Scorer</name></type> <name>scorer</name></decl>;</decl_stmt>
           <decl_stmt><decl><type><specifier>private</specifier> <name>SortedSetDocValues</name></type> <name>docTermOrds</name></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">593</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">589</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestJoinUtil</name> extends <name>LuceneTestCase</name> <block>{
           }</block>
 
           @<name>Override</name>
          <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
          <expr><specifier>protected</specifier> <name>void</name> <call><name>doSetNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
             <expr><name>docTermOrds</name> <operator>=</operator> <call><name><name>FieldCache</name><operator>.</operator><name>DEFAULT</name><operator>.</operator><name>getDocTermOrds</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>reader</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>fromField</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
           }</block></class>
 
@@ <operator>-</operator><literal type="number">608</literal></expr></argument>,<argument><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">604</literal></expr></argument>,<argument><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestJoinUtil</name> extends <name>LuceneTestCase</name> <block>{
           }</block></expr></argument></argument_list></call></expr></expr_stmt>
         }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></if> <else>else <block>{<block_content>
        <expr_stmt><expr><call><name><name>fromSearcher</name><operator>.</operator><name>search</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>TermQuery</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Term</name><argument_list>(<argument><expr><literal type="string">"value"</literal></expr></argument>, <argument><expr><name>uniqueRandomValue</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <class><super><name>Collector</name></super><argument_list>()</argument_list> <block>{
        <expr_stmt><expr><call><name><name>fromSearcher</name><operator>.</operator><name>search</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>TermQuery</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Term</name><argument_list>(<argument><expr><literal type="string">"value"</literal></expr></argument>, <argument><expr><name>uniqueRandomValue</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <class><super><name>SimpleCollector</name></super><argument_list>()</argument_list> <block>{
 
           <decl_stmt><decl><type><specifier>private</specifier> <name>Scorer</name></type> <name>scorer</name></decl>;</decl_stmt>
           <decl_stmt><decl><type><specifier>private</specifier> <name>BinaryDocValues</name></type> <name>terms</name></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">631</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">627</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestJoinUtil</name> extends <name>LuceneTestCase</name> <block>{
           }</block>
 
           @<name>Override</name>
          <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
          <expr><specifier>protected</specifier> <name>void</name> <call><name>doSetNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
             <expr><name>terms</name> <operator>=</operator> <call><name><name>FieldCache</name><operator>.</operator><name>DEFAULT</name><operator>.</operator><name>getTerms</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>reader</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>fromField</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
             <expr_stmt><expr><name>docsWithField</name> <operator>=</operator> <call><name><name>FieldCache</name><operator>.</operator><name>DEFAULT</name><operator>.</operator><name>getDocsWithField</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>reader</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>fromField</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           }</block></class>
@@ <operator>-</operator><literal type="number">675</literal></expr></argument>,<argument><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">671</literal></expr></argument>,<argument><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestJoinUtil</name> extends <name>LuceneTestCase</name> <block>{
             }</block></expr></argument></argument_list></call></expr></expr_stmt>
           }</block></class></expr></argument></argument_list></call></expr></expr_stmt>
         </block_content>}</block></else></if_stmt> <if_stmt><else>else <block>{<block_content>
          <expr_stmt><expr><call><name><name>toSearcher</name><operator>.</operator><name>search</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>MatchAllDocsQuery</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <class><super><name>Collector</name></super><argument_list>()</argument_list> <block>{
          <expr_stmt><expr><call><name><name>toSearcher</name><operator>.</operator><name>search</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>MatchAllDocsQuery</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <class><super><name>SimpleCollector</name></super><argument_list>()</argument_list> <block>{
 
             <decl_stmt><decl><type><specifier>private</specifier> <name>SortedSetDocValues</name></type> <name>docTermOrds</name></decl>;</decl_stmt>
             <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>BytesRef</name></type> <name>scratch</name> <init>= <expr><operator>new</operator> <call><name>BytesRef</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">701</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">697</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestJoinUtil</name> extends <name>LuceneTestCase</name> <block>{
             }</block>
 
             @<name>Override</name>
            <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
            <expr><specifier>protected</specifier> <name>void</name> <call><name>doSetNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
               <expr><name>docBase</name> <operator>=</operator> <name><name>context</name><operator>.</operator><name>docBase</name></name></expr></block></expr></argument></throws></expr>;</expr_stmt>
               <expr_stmt><expr><name>docTermOrds</name> <operator>=</operator> <call><name><name>FieldCache</name><operator>.</operator><name>DEFAULT</name><operator>.</operator><name>getDocTermOrds</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>reader</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>toField</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             }</block></class>
@@ <operator>-</operator><literal type="number">713</literal></expr></argument>,<argument><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">709</literal></expr></argument>,<argument><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestJoinUtil</name> extends <name>LuceneTestCase</name> <block>{
           }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         }</block></class></expr></argument></argument_list></call></expr></expr_stmt>
       </block_content>}</block></else></if_stmt> <if_stmt><else>else <block>{<block_content>
        <expr_stmt><expr><call><name><name>toSearcher</name><operator>.</operator><name>search</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>MatchAllDocsQuery</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <class><super><name>Collector</name></super><argument_list>()</argument_list> <block>{
        <expr_stmt><expr><call><name><name>toSearcher</name><operator>.</operator><name>search</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>MatchAllDocsQuery</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <class><super><name>SimpleCollector</name></super><argument_list>()</argument_list> <block>{
 
           <decl_stmt><decl><type><specifier>private</specifier> <name>BinaryDocValues</name></type> <name>terms</name></decl>;</decl_stmt>
           <decl_stmt><decl><type><specifier>private</specifier> <name>int</name></type> <name>docBase</name></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">730</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">726</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestJoinUtil</name> extends <name>LuceneTestCase</name> <block>{
           }</block>
 
           @<name>Override</name>
          <specifier>public</specifier> <name>void</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
          <expr><specifier>protected</specifier> <name>void</name> <call><name>doSetNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
             <expr><name>terms</name> <operator>=</operator> <call><name><name>FieldCache</name><operator>.</operator><name>DEFAULT</name><operator>.</operator><name>getTerms</name></name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>reader</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>toField</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
             <expr_stmt><expr><name>docBase</name> <operator>=</operator> <name><name>context</name><operator>.</operator><name>docBase</name></name></expr>;</expr_stmt>
           }</block></class>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>memory</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name>memory</name><operator>/</operator><name><name>MemoryIndex</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>memory</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name>memory</name><operator>/</operator><name><name>MemoryIndex</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>db79ff021fd</name><operator>..</operator><name>a76877445b3</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>memory</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name>memory</name><operator>/</operator><name><name>MemoryIndex</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>memory</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name>memory</name><operator>/</operator><name><name>MemoryIndex</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">54</literal></expr></argument>,<argument><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">54</literal></expr></argument>,<argument><expr><literal type="number">7</literal> @@</expr></argument></argument_list></call></expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Collector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>IndexSearcher</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Query</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Scorer</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>SimpleCollector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>similarities</name><operator>.</operator><name>Similarity</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>RAMDirectory</name></name>;</import> <comment type="line">// for javadocs</comment>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayUtil</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">532</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">533</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>MemoryIndex</name> <block>{
     <expr><name>IndexSearcher</name> <name>searcher</name> <operator>=</operator> <call><name>createSearcher</name><argument_list>()</argument_list></call></expr>;</block></expr></expr_stmt>
     <try>try <block>{<block_content>
       <decl_stmt><decl><type><specifier>final</specifier> <name><name>float</name><index>[]</index></name></type> <name>scores</name> <init>= <expr><operator>new</operator> <name><name>float</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt> <comment type="line">// inits to 0.0f (no match)</comment>
      <expr_stmt><expr><call><name><name>searcher</name><operator>.</operator><name>search</name></name><argument_list>(<argument><expr><name>query</name></expr></argument>, <argument><expr><operator>new</operator> <class><super><name>Collector</name></super><argument_list>()</argument_list> <block>{
      <expr_stmt><expr><call><name><name>searcher</name><operator>.</operator><name>search</name></name><argument_list>(<argument><expr><name>query</name></expr></argument>, <argument><expr><operator>new</operator> <class><super><name>SimpleCollector</name></super><argument_list>()</argument_list> <block>{
         <decl_stmt><decl><type><specifier>private</specifier> <name>Scorer</name></type> <name>scorer</name></decl>;</decl_stmt>
 
         <annotation>@<name>Override</name></annotation>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">550</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">551</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> class <name>MemoryIndex</name> <block>{
           <return>return <expr><literal type="boolean">true</literal></expr>;</return>
         }</block></expr></expr_stmt>
 
        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>void</name></type> <name>setNextReader</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{<block_content> </block_content>}</block></function>
       }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <decl_stmt><decl><type><name>float</name></type> <name>score</name> <init>= <expr><name><name>scores</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
       <return>return <expr><name>score</name></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>misc</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name>sorter</name><operator>/</operator><name><name>EarlyTerminatingSortingCollector</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>misc</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name>sorter</name><operator>/</operator><name><name>EarlyTerminatingSortingCollector</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">23772e18f23</literal><operator>..</operator><literal type="number">2571632defd</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>misc</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name>sorter</name><operator>/</operator><name><name>EarlyTerminatingSortingCollector</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>misc</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name>sorter</name><operator>/</operator><name><name>EarlyTerminatingSortingCollector</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexWriter</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>LeafCollector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>CollectionTerminatedException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Collector</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Scorer</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>FilterLeafCollector</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>FilterCollector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Sort</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>TopDocsCollector</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>TotalHitCountCollector</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">32</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">34</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>TotalHitCountCollector</name></name>;</import>
  <expr_stmt><expr><operator>*</operator> <name>A</name> <block>{@<expr><name>link</name> <name>Collector</name></expr>}</block> <name>that</name> <name>early</name> <name>terminates</name> <name>collection</name> <name>of</name> <name>documents</name> <name>on</name> <name>a</name>
  <operator>*</operator> <name>per</name><operator>-</operator><name>segment</name> <name>basis</name></expr><operator>,</operator></expr_stmt> <if_stmt><if>if the segment was sorted according to the given
  * <block>{<block_content><annotation>@<name>link</name></annotation> <expr><name>Sort</name></expr></block_content>}</block></if></if_stmt><expr_stmt><expr><operator>.</operator>
 <operator>*</operator> 
 <operator>*</operator>
  <operator>*</operator> <operator>&lt;</operator><name>p</name><operator>&gt;</operator>
  <operator>*</operator> <operator>&lt;</operator><name>b</name><operator>&gt;</operator><name>NOTE</name></expr></expr_stmt></block></class></expr></argument></argument_list></call></expr></expr_stmt></block_content></block></try></block></class></expr></argument></argument_list></call></expr></expr_stmt></block_content></block></else></if_stmt></block></class></expr></argument></argument_list></call></expr></expr_stmt></block></class></expr></argument></argument_list></call></expr></expr_stmt></block></class></expr></argument></argument_list></call></expr></expr_stmt></block_content></block></for></block_content></block></for></block_content></block></if></if_stmt></block></class></block_content></block></constructor></block_content></block></function></block_content></block></function></block_content></block></function></block_content></block></function></block_content></block></function></block_content></block></while>:</case><operator>&lt;</operator><operator>/</operator><name>b</name><operator>&gt;</operator> <name>the</name> <block>{@<expr><name>code</name> <name>Collector</name></expr>}</block></block> <name>detects</name> <name>sorted</name> <name>segments</name> <name>according</name> <name>to</name>
  <operator>*</operator> <block>{@<expr><name>link</name> <name>SortingMergePolicy</name></expr>}</block></expr></argument>, <argument><expr><name>so</name> <name>it</name><literal type="char">'</literal></expr></argument></argument_list></call></expr></expr_stmt></block></class></expr></argument></argument_list></call></block></expr></expr_stmt></block></class></block></class></block_content></block></function></block></class></expr></argument></argument_list></call></expr></expr_stmt></block></class></expr></argument></argument_list></call></block></expr></expr_stmt></block_content></block></function></block></class></expr></expr_stmt></block></class></expr></argument></argument_list></call></block></expr></expr_stmt></block_content></block></function></block></class></expr></argument></argument_list></call></expr></expr_stmt></block></class></expr></argument></argument_list></call></expr></expr_stmt></block_content></block></function></block></class></expr></argument></argument_list></call></expr></expr_stmt></block></class></expr></argument></argument_list></call></block></expr></expr_stmt></block_content></block></function></block></class></block></class></block></class></block></class></block_content></block></function></block></class></expr></argument></argument_list></call></expr></expr_stmt></block></class></expr></argument></argument_list></call></expr></expr_stmt></block_content></block></if></if_stmt></block_content></block></function></block></class></expr></init></decl></decl_stmt></block></class></expr></init></decl></decl_stmt></block_content></block></for></block></expr></expr_stmt></block_content></block></function></block></class></expr></expr_stmt></block></class></expr></argument></argument_list></call></block></expr></expr_stmt></block_content></block></function></block></class></expr></argument></argument_list></call></expr></expr_stmt></block></class></expr></argument></argument_list></call></block></expr></expr_stmt></block_content></block></for></block></expr></expr_stmt></block></class></expr></argument></argument_list></call></expr></expr_stmt></block></class></expr></argument></argument_list></call></expr></expr_stmt></block_content></block></for></block></expr></expr_stmt></block_content></block></function></block></class></block></class></block_content></block></function></block_content></block></function></block></class></expr></return></block></expr></expr_stmt></block_content></block></function></block_content></block></function></block></class></expr></argument></argument_list></call></expr></expr_stmt></block></class></expr></argument></argument_list></call></expr></expr_stmt></block></class></block></class></block_content></block></function></block_content></block></function></block></class></expr></init></decl></decl_stmt></block></class></expr></init></decl></decl_stmt></block_content></block></for></block_content></block></function></block></class></block></class></block_content></block></for></block_content></block></for></block></class></block></class></block_content></block></function></block_content></block></function></block_content></block></for></block></expr></expr_stmt></block_content></block></else></if_stmt></block></class></block_content></block></while></block_content></block></function></block_content></block></function></block></class></block_content></block></while></block_content></block></for></block_content></block></function></block></class></block></class></block_content></block></function></block></class></block_content></block></for></block_content></block></function></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></block></class></block></class></block></class></block_content></block></function></block></class></block></class>s best used in conjunction with it. Also,
 * it collects up to a specified {@code numDocsToCollect} from each segment, 
 * it collects up to a specified {@code numDocsToCollect} from each segment,
  * and therefore is mostly suitable for use in conjunction with collectors such as
  * {@link TopDocsCollector}, and not e.g. {@link TotalHitCountCollector}.
  * &lt;p&gt;
@@ -58,26 +60,21 @@ import org.apache.lucene.search.TotalHitCountCollector;
  * the old and the new {@code Sort}s have the same identifier, this
  * {@code Collector} will incorrectly detect sorted segments.&lt;/li&gt;
  * &lt;/ul&gt;
 * 
 *
  * @lucene.experimental
  */
public class EarlyTerminatingSortingCollector extends Collector {
  /** The wrapped Collector */
  protected final Collector in;
public class EarlyTerminatingSortingCollector extends FilterCollector {

   /** Sort used to sort the search results */
   protected final Sort sort;
   /** Number of documents to collect in each segment */
   protected final int numDocsToCollect;
  /** Number of documents to collect in the current segment being processed */
  protected int segmentTotalCollect;
  /** True if the current segment being processed is sorted by {@link #sort} */
  protected boolean segmentSorted;
 
   private int numCollected;
 
   /**
    * Create a new {@link EarlyTerminatingSortingCollector} instance.
   * 
   *
    * @param in
    *          the collector to wrap
    * @param sort
@@ -88,38 +85,37 @@ public class EarlyTerminatingSortingCollector extends Collector {
    *          hits.
    */
   public EarlyTerminatingSortingCollector(Collector in, Sort sort, int numDocsToCollect) {
    super(in);
     if (numDocsToCollect &lt;= 0) {
      throw new IllegalStateException("numDocsToCollect must always be &gt; 0, got " + segmentTotalCollect);
      throw new IllegalStateException("numDocsToCollect must always be &gt; 0, got " + numDocsToCollect);
     }
    this.in = in;
     this.sort = sort;
     this.numDocsToCollect = numDocsToCollect;
   }
 
   @Override
  public void setScorer(Scorer scorer) throws IOException {
    in.setScorer(scorer);
  }
  public LeafCollector getLeafCollector(AtomicReaderContext context) throws IOException {
    if (SortingMergePolicy.isSorted(context.reader(), sort)) {
      // segment is sorted, can early-terminate
      return new FilterLeafCollector(super.getLeafCollector(context)) {
 
  @Override
  public void collect(int doc) throws IOException {
    in.collect(doc);
    if (++numCollected &gt;= segmentTotalCollect) {
      throw new CollectionTerminatedException();
    }
  }
        @Override
        public void collect(int doc) throws IOException {
          super.collect(doc);
          if (++numCollected &gt;= numDocsToCollect) {
            throw new CollectionTerminatedException();
          }
        }
 
  @Override
  public void setNextReader(AtomicReaderContext context) throws IOException {
    in.setNextReader(context);
    segmentSorted = SortingMergePolicy.isSorted(context.reader(), sort);
    segmentTotalCollect = segmentSorted ? numDocsToCollect : Integer.MAX_VALUE;
    numCollected = 0;
  }
        @Override
        public boolean acceptsDocsOutOfOrder() {
          return false;
        }
 
  @Override
  public boolean acceptsDocsOutOfOrder() {
    return !segmentSorted &amp;&amp; in.acceptsDocsOutOfOrder();
      };
    } else {
      return super.getLeafCollector(context);
    }
   }
 
 }
diff --git a/lucene/misc/src/test/org/apache/lucene/index/sorter/TestEarlyTermination.java b/lucene/misc/src/test/org/apache/lucene/index/sorter/TestEarlyTermination.java
index f64f56de711..716cc200be6 100644
-- a/lucene/misc/src/test/org/apache/lucene/index/sorter/TestEarlyTermination.java
++ b/lucene/misc/src/test/org/apache/lucene/index/sorter/TestEarlyTermination.java
@@ -34,6 +34,7 @@ import org.apache.lucene.index.IndexReader;
 import org.apache.lucene.index.IndexWriterConfig;
 import org.apache.lucene.index.RandomIndexWriter;
 import org.apache.lucene.index.Term;
import org.apache.lucene.search.LeafCollector;
 import org.apache.lucene.search.IndexSearcher;
 import org.apache.lucene.search.ScoreDoc;
 import org.apache.lucene.search.Sort;
@@ -147,9 +148,10 @@ public class TestEarlyTermination extends LuceneTestCase {
       Sort different = new Sort(new SortField("ndv2", SortField.Type.LONG));
       searcher.search(query, new EarlyTerminatingSortingCollector(collector2, different, numHits) {
         @Override
        public void setNextReader(AtomicReaderContext context) throws IOException {
          super.setNextReader(context);
          assertFalse("segment should not be recognized as sorted as different sorter was used", segmentSorted);
        public LeafCollector getLeafCollector(AtomicReaderContext context) throws IOException {
          final LeafCollector ret = super.getLeafCollector(context);
          assertTrue("segment should not be recognized as sorted as different sorter was used", ret.getClass() == in.getLeafCollector(context).getClass());
          return ret;
         }
       });
     }
diff --git a/lucene/queryparser/src/test/org/apache/lucene/queryparser/surround/query/BooleanQueryTst.java b/lucene/queryparser/src/test/org/apache/lucene/queryparser/surround/query/BooleanQueryTst.java
index 35a402deb14..4c6349b32d5 100644
-- a/lucene/queryparser/src/test/org/apache/lucene/queryparser/surround/query/BooleanQueryTst.java
++ b/lucene/queryparser/src/test/org/apache/lucene/queryparser/surround/query/BooleanQueryTst.java
@@ -22,13 +22,13 @@ import java.io.IOException;
 import org.apache.lucene.index.AtomicReaderContext;
 import org.apache.lucene.index.DirectoryReader;
 import org.apache.lucene.index.IndexReader;
import org.apache.lucene.search.LeafCollector;
 import org.apache.lucene.search.IndexSearcher;
 import org.apache.lucene.search.Collector;
 import org.apache.lucene.search.Scorer;
 import org.apache.lucene.search.Query;

import org.apache.lucene.search.SimpleCollector;
 import org.apache.lucene.queryparser.surround.parser.QueryParser;

 import org.junit.Assert;
 
 public class BooleanQueryTst {
@@ -57,7 +57,7 @@ public class BooleanQueryTst {
   
   public void setVerbose(boolean verbose) {this.verbose = verbose;}
 
  class TestCollector extends Collector { // FIXME: use check hits from Lucene tests
  class TestCollector extends SimpleCollector { // FIXME: use check hits from Lucene tests
     int totalMatched;
     boolean[] encountered;
     private Scorer scorer = null;
@@ -79,7 +79,7 @@ public class BooleanQueryTst {
     }
 
     @Override
    public void setNextReader(AtomicReaderContext context) throws IOException {
    protected void doSetNextReader(AtomicReaderContext context) throws IOException {
       docBase = context.docBase;
     }
     
diff --git a/lucene/test-framework/src/java/org/apache/lucene/search/AssertingBulkOutOfOrderScorer.java b/lucene/test-framework/src/java/org/apache/lucene/search/AssertingBulkOutOfOrderScorer.java
index 0b2fa34b044..39aa3c68b50 100644
-- a/lucene/test-framework/src/java/org/apache/lucene/search/AssertingBulkOutOfOrderScorer.java
++ b/lucene/test-framework/src/java/org/apache/lucene/search/AssertingBulkOutOfOrderScorer.java
@@ -59,7 +59,7 @@ public class AssertingBulkOutOfOrderScorer extends BulkScorer {
   }
 
   private static void flush(int[] docIDs, float[] scores, int[] freqs, int size,
      FakeScorer scorer, Collector collector) throws IOException {
      FakeScorer scorer, LeafCollector collector) throws IOException {
     for (int i = 0; i &lt; size; ++i) {
       scorer.doc = docIDs[i];
       scorer.freq = freqs[i];
@@ -69,7 +69,7 @@ public class AssertingBulkOutOfOrderScorer extends BulkScorer {
   }
 
   @Override
  public boolean score(Collector collector, int max) throws IOException {
  public boolean score(LeafCollector collector, int max) throws IOException {
     if (scorer.docID() == -1) {
       scorer.nextDoc();
     }
diff --git a/lucene/test-framework/src/java/org/apache/lucene/search/AssertingBulkScorer.java b/lucene/test-framework/src/java/org/apache/lucene/search/AssertingBulkScorer.java
index 995f49aee1d..50114aa6485 100644
-- a/lucene/test-framework/src/java/org/apache/lucene/search/AssertingBulkScorer.java
++ b/lucene/test-framework/src/java/org/apache/lucene/search/AssertingBulkScorer.java
@@ -31,8 +31,8 @@ import org.apache.lucene.util.VirtualMethod;
 /** Wraps a Scorer with additional checks */
 public class AssertingBulkScorer extends BulkScorer {
 
  private static final VirtualMethod&lt;BulkScorer&gt; SCORE_COLLECTOR = new VirtualMethod&lt;BulkScorer&gt;(BulkScorer.class, "score", Collector.class);
  private static final VirtualMethod&lt;BulkScorer&gt; SCORE_COLLECTOR_RANGE = new VirtualMethod&lt;BulkScorer&gt;(BulkScorer.class, "score", Collector.class, int.class);
  private static final VirtualMethod&lt;BulkScorer&gt; SCORE_COLLECTOR = new VirtualMethod&lt;BulkScorer&gt;(BulkScorer.class, "score", LeafCollector.class);
  private static final VirtualMethod&lt;BulkScorer&gt; SCORE_COLLECTOR_RANGE = new VirtualMethod&lt;BulkScorer&gt;(BulkScorer.class, "score", LeafCollector.class, int.class);
 
   public static BulkScorer wrap(Random random, BulkScorer other) {
     if (other == null || other instanceof AssertingBulkScorer) {
@@ -58,7 +58,7 @@ public class AssertingBulkScorer extends BulkScorer {
   }
 
   @Override
  public void score(Collector collector) throws IOException {
  public void score(LeafCollector collector) throws IOException {
     if (random.nextBoolean()) {
       try {
         final boolean remaining = in.score(collector, DocsEnum.NO_MORE_DOCS);
@@ -72,7 +72,7 @@ public class AssertingBulkScorer extends BulkScorer {
   }
 
   @Override
  public boolean score(Collector collector, int max) throws IOException {
  public boolean score(LeafCollector collector, int max) throws IOException {
     return in.score(collector, max);
   }
 
diff --git a/lucene/test-framework/src/java/org/apache/lucene/search/AssertingCollector.java b/lucene/test-framework/src/java/org/apache/lucene/search/AssertingCollector.java
index 8ab292614fc..7aa8a2ef3f5 100644
-- a/lucene/test-framework/src/java/org/apache/lucene/search/AssertingCollector.java
++ b/lucene/test-framework/src/java/org/apache/lucene/search/AssertingCollector.java
@@ -25,46 +25,42 @@ import org.apache.lucene.index.AtomicReaderContext;
 /** Wraps another Collector and checks that
  *  acceptsDocsOutOfOrder is respected. */
 
public class AssertingCollector extends Collector {
public class AssertingCollector extends FilterCollector {
 
   public static Collector wrap(Random random, Collector other, boolean inOrder) {
     return other instanceof AssertingCollector ? other : new AssertingCollector(random, other, inOrder);
   }
 
   final Random random;
  final Collector in;
   final boolean inOrder;
  int lastCollected;
 
   AssertingCollector(Random random, Collector in, boolean inOrder) {
    super(in);
     this.random = random;
    this.in = in;
     this.inOrder = inOrder;
    lastCollected = -1;
   }
 
   @Override
  public void setScorer(Scorer scorer) throws IOException {
    in.setScorer(AssertingScorer.getAssertingScorer(random, scorer));
  }
  public LeafCollector getLeafCollector(AtomicReaderContext context) throws IOException {
    return new FilterLeafCollector(super.getLeafCollector(context)) {
 
  @Override
  public void collect(int doc) throws IOException {
    if (inOrder || !acceptsDocsOutOfOrder()) {
      assert doc &gt; lastCollected : "Out of order : " + lastCollected + " " + doc;
    }
    in.collect(doc);
    lastCollected = doc;
  }
      int lastCollected = -1;
 
  @Override
  public void setNextReader(AtomicReaderContext context) throws IOException {
    lastCollected = -1;
  }
      @Override
      public void setScorer(Scorer scorer) throws IOException {
        super.setScorer(AssertingScorer.getAssertingScorer(random, scorer));
      }
 
  @Override
  public boolean acceptsDocsOutOfOrder() {
    return in.acceptsDocsOutOfOrder();
      @Override
      public void collect(int doc) throws IOException {
        if (inOrder || !acceptsDocsOutOfOrder()) {
          assert doc &gt; lastCollected : "Out of order : " + lastCollected + " " + doc;
        }
        in.collect(doc);
        lastCollected = doc;
      }

    };
   }
 
 }
diff --git a/lucene/test-framework/src/java/org/apache/lucene/search/CheckHits.java b/lucene/test-framework/src/java/org/apache/lucene/search/CheckHits.java
index 034396c9a05..042ad9b1eb3 100644
-- a/lucene/test-framework/src/java/org/apache/lucene/search/CheckHits.java
++ b/lucene/test-framework/src/java/org/apache/lucene/search/CheckHits.java
@@ -123,7 +123,7 @@ public class CheckHits {
   /**
    * Just collects document ids into a set.
    */
  public static class SetCollector extends Collector {
  public static class SetCollector extends SimpleCollector {
     final Set&lt;Integer&gt; bag;
     public SetCollector(Set&lt;Integer&gt; bag) {
       this.bag = bag;
@@ -136,7 +136,7 @@ public class CheckHits {
       bag.add(Integer.valueOf(doc + base));
     }
     @Override
    public void setNextReader(AtomicReaderContext context) {
    protected void doSetNextReader(AtomicReaderContext context) throws IOException {
       base = context.docBase;
     }
     @Override
@@ -464,7 +464,7 @@ public class CheckHits {
    *
    * @see CheckHits#verifyExplanation
    */
  public static class ExplanationAsserter extends Collector {
  public static class ExplanationAsserter extends SimpleCollector {
 
     Query q;
     IndexSearcher s;
@@ -508,7 +508,7 @@ public class CheckHits {
                         exp.isMatch());
     }
     @Override
    public void setNextReader(AtomicReaderContext context) {
    protected void doSetNextReader(AtomicReaderContext context) throws IOException {
       base = context.docBase;
     }
     @Override
diff --git a/lucene/test-framework/src/java/org/apache/lucene/search/QueryUtils.java b/lucene/test-framework/src/java/org/apache/lucene/search/QueryUtils.java
index cd00f74a12d..8656ef2eab8 100644
-- a/lucene/test-framework/src/java/org/apache/lucene/search/QueryUtils.java
++ b/lucene/test-framework/src/java/org/apache/lucene/search/QueryUtils.java
@@ -249,7 +249,7 @@ public class QueryUtils {
         final float maxDiff = 1e-5f;
         final AtomicReader lastReader[] = {null};
 
        s.search(q, new Collector() {
        s.search(q, new SimpleCollector() {
           private Scorer sc;
           private Scorer scorer;
           private int leafPtr;
@@ -305,7 +305,7 @@ public class QueryUtils {
           }
 
           @Override
          public void setNextReader(AtomicReaderContext context) throws IOException {
          protected void doSetNextReader(AtomicReaderContext context) throws IOException {
             // confirm that skipping beyond the last doc, on the
             // previous reader, hits NO_MORE_DOCS
             if (lastReader[0] != null) {
@@ -357,7 +357,7 @@ public class QueryUtils {
     final int lastDoc[] = {-1};
     final AtomicReader lastReader[] = {null};
     final List&lt;AtomicReaderContext&gt; context = s.getTopReaderContext().leaves();
    s.search(q,new Collector() {
    s.search(q,new SimpleCollector() {
       private Scorer scorer;
       private int leafPtr;
       private Bits liveDocs;
@@ -392,7 +392,7 @@ public class QueryUtils {
       }
 
       @Override
      public void setNextReader(AtomicReaderContext context) throws IOException {
      protected void doSetNextReader(AtomicReaderContext context) throws IOException {
         // confirm that skipping beyond the last doc, on the
         // previous reader, hits NO_MORE_DOCS
         if (lastReader[0] != null) {
diff --git a/solr/core/src/java/org/apache/solr/analytics/accumulator/BasicAccumulator.java b/solr/core/src/java/org/apache/solr/analytics/accumulator/BasicAccumulator.java
index 304c0a2b5a0..fdcf66ba2d5 100644
-- a/solr/core/src/java/org/apache/solr/analytics/accumulator/BasicAccumulator.java
++ b/solr/core/src/java/org/apache/solr/analytics/accumulator/BasicAccumulator.java
@@ -80,7 +80,7 @@ public class BasicAccumulator extends ValueAccumulator {
   }
   
   @Override
  public void setNextReader(AtomicReaderContext context) throws IOException {
  protected void doSetNextReader(AtomicReaderContext context) throws IOException {
     this.context = context;
     for (StatsCollector counter : statsCollectors) {
       counter.setNextReader(context);
diff --git a/solr/core/src/java/org/apache/solr/analytics/accumulator/FacetingAccumulator.java b/solr/core/src/java/org/apache/solr/analytics/accumulator/FacetingAccumulator.java
index 61ed6e100b9..fb6d81d5bf9 100644
-- a/solr/core/src/java/org/apache/solr/analytics/accumulator/FacetingAccumulator.java
++ b/solr/core/src/java/org/apache/solr/analytics/accumulator/FacetingAccumulator.java
@@ -155,8 +155,8 @@ public class FacetingAccumulator extends BasicAccumulator implements FacetValueA
    * @throws IOException if there is an error setting the next reader
    */
   @Override
  public void setNextReader(AtomicReaderContext context) throws IOException {
    super.setNextReader(context);
  protected void doSetNextReader(AtomicReaderContext context) throws IOException {
    super.doSetNextReader(context);
     for( Map&lt;String,StatsCollector[]&gt; valueList : fieldFacetCollectors.values() ){
       for (StatsCollector[] statsCollectorList : valueList.values()) {
         for (StatsCollector statsCollector : statsCollectorList) {
@@ -165,7 +165,7 @@ public class FacetingAccumulator extends BasicAccumulator implements FacetValueA
       }
     }
     for (FieldFacetAccumulator fa : facetAccumulators) {
      fa.setNextReader(context);
      fa.getLeafCollector(context);
     }
   }
   
@@ -175,7 +175,7 @@ public class FacetingAccumulator extends BasicAccumulator implements FacetValueA
    * @throws IOException if there is an error setting the next reader
    */
   public void setRangeStatsCollectorReaders(AtomicReaderContext context) throws IOException {
    super.setNextReader(context);
    super.getLeafCollector(context);
     for( Map&lt;String,StatsCollector[]&gt; rangeList : rangeFacetCollectors.values() ){
       for (StatsCollector[] statsCollectorList : rangeList.values()) {
         for (StatsCollector statsCollector : statsCollectorList) {
@@ -192,7 +192,7 @@ public class FacetingAccumulator extends BasicAccumulator implements FacetValueA
    * @throws IOException if there is an error setting the next reader
    */
   public void setQueryStatsCollectorReaders(AtomicReaderContext context) throws IOException {
    super.setNextReader(context);
    super.getLeafCollector(context);
     for( Map&lt;String,StatsCollector[]&gt; queryList : queryFacetCollectors.values() ){
       for (StatsCollector[] statsCollectorList : queryList.values()) {
         for (StatsCollector statsCollector : statsCollectorList) {
diff --git a/solr/core/src/java/org/apache/solr/analytics/accumulator/ValueAccumulator.java b/solr/core/src/java/org/apache/solr/analytics/accumulator/ValueAccumulator.java
index ecc74ef01d5..90b8713f2bd 100644
-- a/solr/core/src/java/org/apache/solr/analytics/accumulator/ValueAccumulator.java
++ b/solr/core/src/java/org/apache/solr/analytics/accumulator/ValueAccumulator.java
@@ -20,20 +20,14 @@ package org.apache.solr.analytics.accumulator;
 import java.io.IOException;
 
 import org.apache.lucene.index.AtomicReaderContext;
import org.apache.lucene.search.Collector;
import org.apache.lucene.search.Scorer;
import org.apache.lucene.search.LeafCollector;
import org.apache.lucene.search.SimpleCollector;
 import org.apache.solr.common.util.NamedList;
 
 /**
  * Abstract Collector that manages all StatsCollectors, Expressions and Facets.
  */
public abstract class ValueAccumulator extends Collector {

  /**
   * @param context The context to read documents from.
   * @throws IOException if setting next reader fails
   */
  public abstract void setNextReader(AtomicReaderContext context) throws IOException;
public abstract class ValueAccumulator extends SimpleCollector {
   
   /**
    * Finalizes the statistics within each StatsCollector.
@@ -51,9 +45,4 @@ public abstract class ValueAccumulator extends Collector {
     return true;
   }
 
  @Override
  public void setScorer(Scorer scorer) throws IOException {
    // NOP
  }
  
 }
diff --git a/solr/core/src/java/org/apache/solr/analytics/accumulator/facet/FieldFacetAccumulator.java b/solr/core/src/java/org/apache/solr/analytics/accumulator/facet/FieldFacetAccumulator.java
index 937690917ed..e2cf4168452 100644
-- a/solr/core/src/java/org/apache/solr/analytics/accumulator/facet/FieldFacetAccumulator.java
++ b/solr/core/src/java/org/apache/solr/analytics/accumulator/facet/FieldFacetAccumulator.java
@@ -82,7 +82,7 @@ public class FieldFacetAccumulator extends ValueAccumulator {
    * Move to the next set of documents to add to the field facet.
    */
   @Override
  public void setNextReader(AtomicReaderContext context) throws IOException { 
  protected void doSetNextReader(AtomicReaderContext context) throws IOException {
     if (multiValued) {
       setValues = context.reader().getSortedSetDocValues(name);
     } else {
diff --git a/solr/core/src/java/org/apache/solr/analytics/accumulator/facet/QueryFacetAccumulator.java b/solr/core/src/java/org/apache/solr/analytics/accumulator/facet/QueryFacetAccumulator.java
index f0d6b4aa516..3a268eebffa 100644
-- a/solr/core/src/java/org/apache/solr/analytics/accumulator/facet/QueryFacetAccumulator.java
++ b/solr/core/src/java/org/apache/solr/analytics/accumulator/facet/QueryFacetAccumulator.java
@@ -51,7 +51,7 @@ public class QueryFacetAccumulator extends ValueAccumulator {
    * Update the readers of the queryFacet {@link StatsCollector}s in FacetingAccumulator
    */
   @Override
  public void setNextReader(AtomicReaderContext context) throws IOException {
  protected void doSetNextReader(AtomicReaderContext context) throws IOException {
     parent.setQueryStatsCollectorReaders(context);
   }
 
diff --git a/solr/core/src/java/org/apache/solr/analytics/accumulator/facet/RangeFacetAccumulator.java b/solr/core/src/java/org/apache/solr/analytics/accumulator/facet/RangeFacetAccumulator.java
index dd29c1c414b..8c07c4f134d 100644
-- a/solr/core/src/java/org/apache/solr/analytics/accumulator/facet/RangeFacetAccumulator.java
++ b/solr/core/src/java/org/apache/solr/analytics/accumulator/facet/RangeFacetAccumulator.java
@@ -43,7 +43,7 @@ public class RangeFacetAccumulator extends QueryFacetAccumulator {
    * Update the readers of the rangeFacet {@link StatsCollector}s in FacetingAccumulator
    */
   @Override
  public void setNextReader(AtomicReaderContext context) throws IOException {
  protected void doSetNextReader(AtomicReaderContext context) throws IOException {
     parent.setRangeStatsCollectorReaders(context);
   }
 
diff --git a/solr/core/src/java/org/apache/solr/analytics/request/AnalyticsStats.java b/solr/core/src/java/org/apache/solr/analytics/request/AnalyticsStats.java
index c1ec21fb15b..adc68074023 100644
-- a/solr/core/src/java/org/apache/solr/analytics/request/AnalyticsStats.java
++ b/solr/core/src/java/org/apache/solr/analytics/request/AnalyticsStats.java
@@ -113,7 +113,7 @@ public class AnalyticsStats {
         }
 
         if (disi != null) {
          accumulator.setNextReader(context);
          accumulator.getLeafCollector(context);
           int doc = disi.nextDoc();
           while( doc != DocIdSetIterator.NO_MORE_DOCS){
             // Add a document to the statistics being generated
diff --git a/solr/core/src/java/org/apache/solr/handler/component/ExpandComponent.java b/solr/core/src/java/org/apache/solr/handler/component/ExpandComponent.java
index 99465b7f347..64b5690b69e 100644
-- a/solr/core/src/java/org/apache/solr/handler/component/ExpandComponent.java
++ b/solr/core/src/java/org/apache/solr/handler/component/ExpandComponent.java
@@ -20,9 +20,11 @@ package org.apache.solr.handler.component;
 import org.apache.lucene.index.AtomicReader;
 import org.apache.lucene.index.AtomicReaderContext;
 import org.apache.lucene.index.SortedDocValues;
import org.apache.lucene.search.LeafCollector;
 import org.apache.lucene.search.DocIdSetIterator;
 import org.apache.lucene.search.ScoreDoc;
 import org.apache.lucene.search.Scorer;
import org.apache.lucene.search.SimpleCollector;
 import org.apache.lucene.search.Sort;
 import org.apache.lucene.search.TopDocs;
 import org.apache.lucene.search.FieldCache;
@@ -52,9 +54,12 @@ import org.apache.solr.util.plugin.PluginInfoInitialized;
 import org.apache.solr.util.plugin.SolrCoreAware;
 import org.apache.solr.core.PluginInfo;
 import org.apache.solr.core.SolrCore;
import com.carrotsearch.hppc.IntObjectMap;
 import com.carrotsearch.hppc.IntObjectOpenHashMap;
 import com.carrotsearch.hppc.IntOpenHashSet;
 import com.carrotsearch.hppc.cursors.IntObjectCursor;
import com.carrotsearch.hppc.cursors.ObjectCursor;

 import java.io.IOException;
 import java.net.MalformedURLException;
 import java.net.URL;
@@ -210,9 +215,9 @@ public class ExpandComponent extends SearchComponent implements PluginInfoInitia
     }
 
     searcher.search(query, pfilter.filter, collector);
    IntObjectOpenHashMap groups = groupExpandCollector.getGroups();
    IntObjectMap groups = groupExpandCollector.getGroups();
     Iterator&lt;IntObjectCursor&gt; it = groups.iterator();
    Map&lt;String, DocSlice&gt; outMap = new HashMap();
    Map&lt;String, DocSlice&gt; outMap = new HashMap&lt;&gt;();
     BytesRef bytesRef = new BytesRef();
     CharsRef charsRef = new CharsRef();
     FieldType fieldType = searcher.getSchema().getField(field).getType();
@@ -292,24 +297,21 @@ public class ExpandComponent extends SearchComponent implements PluginInfoInitia
     rb.rsp.add("expanded", expanded);
   }
 
  private class GroupExpandCollector extends Collector {
  private class GroupExpandCollector implements Collector {
     private SortedDocValues docValues;
    private IntObjectOpenHashMap groups;
    private IntObjectMap&lt;Collector&gt; groups;
     private int docBase;
     private FixedBitSet groupBits;
     private IntOpenHashSet collapsedSet;
    private List&lt;Collector&gt; collectors;
 
     public GroupExpandCollector(SortedDocValues docValues, FixedBitSet groupBits, IntOpenHashSet collapsedSet, int limit, Sort sort) throws IOException {
       int numGroups = collapsedSet.size();
      groups = new IntObjectOpenHashMap(numGroups*2);
      collectors = new ArrayList();
      groups = new IntObjectOpenHashMap&lt;&gt;(numGroups*2);
       DocIdSetIterator iterator = groupBits.iterator();
       int group = -1;
       while((group = iterator.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {
         Collector collector = (sort == null) ? TopScoreDocCollector.create(limit, true) : TopFieldCollector.create(sort,limit, false, false,false, true);
         groups.put(group, collector);
        collectors.add(collector);
       }
 
       this.collapsedSet = collapsedSet;
@@ -317,35 +319,42 @@ public class ExpandComponent extends SearchComponent implements PluginInfoInitia
       this.docValues = docValues;
     }
 
    public IntObjectOpenHashMap getGroups() {
      return this.groups;
    }

    public boolean acceptsDocsOutOfOrder() {
      return false;
    }

    public void collect(int docId) throws IOException {
      int doc = docId+docBase;
      int ord = docValues.getOrd(doc);
      if(ord &gt; -1 &amp;&amp; groupBits.get(ord) &amp;&amp; !collapsedSet.contains(doc)) {
        Collector c = (Collector)groups.get(ord);
        c.collect(docId);
    public LeafCollector getLeafCollector(AtomicReaderContext context) throws IOException {
      final int docBase = context.docBase;
      final IntObjectMap&lt;LeafCollector&gt; leafCollectors = new IntObjectOpenHashMap&lt;&gt;();
      for (IntObjectCursor&lt;Collector&gt; entry : groups) {
        leafCollectors.put(entry.key, entry.value.getLeafCollector(context));
       }
      return new LeafCollector() {
        
        @Override
        public void setScorer(Scorer scorer) throws IOException {
          for (ObjectCursor&lt;LeafCollector&gt; c : leafCollectors.values()) {
            c.value.setScorer(scorer);
          }
        }
        
        @Override
        public void collect(int docId) throws IOException {
          int doc = docId+docBase;
          int ord = docValues.getOrd(doc);
          if(ord &gt; -1 &amp;&amp; groupBits.get(ord) &amp;&amp; !collapsedSet.contains(doc)) {
            LeafCollector c = leafCollectors.get(ord);
            c.collect(docId);
          }
        }
        
        @Override
        public boolean acceptsDocsOutOfOrder() {
          return false;
        }
      };
     }
 
    public void setNextReader(AtomicReaderContext context) throws IOException {
      this.docBase = context.docBase;
      for(Collector c : collectors) {
        c.setNextReader(context);
      }
    public IntObjectMap&lt;Collector&gt; getGroups() {
      return groups;
     }
 
    public void setScorer(Scorer scorer) throws IOException {
      for(Collector c : collectors) {
        c.setScorer(scorer);
      }
    }
   }
 
   ////////////////////////////////////////////
@@ -372,4 +381,4 @@ public class ExpandComponent extends SearchComponent implements PluginInfoInitia
       throw new RuntimeException(e);
     }
   }
}
\ No newline at end of file
}
diff --git a/solr/core/src/java/org/apache/solr/schema/LatLonType.java b/solr/core/src/java/org/apache/solr/schema/LatLonType.java
index 27157d27ce0..2763c8439cb 100644
-- a/solr/core/src/java/org/apache/solr/schema/LatLonType.java
++ b/solr/core/src/java/org/apache/solr/schema/LatLonType.java
@@ -23,6 +23,7 @@ import java.util.Map;
 import java.util.Set;
 
 import com.spatial4j.core.shape.Point;

 import org.apache.lucene.document.FieldType;
 import org.apache.lucene.index.AtomicReaderContext;
 import org.apache.lucene.index.IndexReader;
@@ -30,6 +31,7 @@ import org.apache.lucene.index.StorableField;
 import org.apache.lucene.queries.function.FunctionValues;
 import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.queries.function.valuesource.VectorValueSource;
import org.apache.lucene.search.LeafCollector;
 import org.apache.lucene.search.BooleanClause;
 import org.apache.lucene.search.BooleanQuery;
 import org.apache.lucene.search.ComplexExplanation;
@@ -51,6 +53,7 @@ import org.apache.solr.search.SpatialOptions;
 import com.spatial4j.core.context.SpatialContext;
 import com.spatial4j.core.distance.DistanceUtils;
 import com.spatial4j.core.shape.Rectangle;

 import org.apache.solr.util.SpatialUtils;
 
 
@@ -522,14 +525,14 @@ class SpatialDistanceQuery extends ExtendedQueryBase implements PostFilter {
     @Override
     public void collect(int doc) throws IOException {
       spatialScorer.doc = doc;
      if (spatialScorer.match()) delegate.collect(doc);
      if (spatialScorer.match()) leafDelegate.collect(doc);
     }
 
     @Override
    public void setNextReader(AtomicReaderContext context) throws IOException {
    protected void doSetNextReader(AtomicReaderContext context) throws IOException {
      super.doSetNextReader(context);
       maxdoc = context.reader().maxDoc();
       spatialScorer = new SpatialScorer(context, null, weight, 1.0f);
      super.setNextReader(context);
     }
   }
 
diff --git a/solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java b/solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java
index 601790c41f5..93ce79cd928 100644
-- a/solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java
++ b/solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java
@@ -34,11 +34,15 @@ import org.apache.lucene.index.TermsEnum;
 import org.apache.lucene.queries.function.FunctionQuery;
 import org.apache.lucene.queries.function.FunctionValues;
 import org.apache.lucene.queries.function.ValueSource;
import org.apache.lucene.search.LeafCollector;
import org.apache.lucene.search.Collector;
 import org.apache.lucene.search.DocIdSetIterator;
 import org.apache.lucene.search.FieldCache;
import org.apache.lucene.search.FilterCollector;
 import org.apache.lucene.search.IndexSearcher;
 import org.apache.lucene.search.Query;
 import org.apache.lucene.search.Scorer;
import org.apache.lucene.search.TopFieldCollector;
 import org.apache.lucene.util.Bits;
 import org.apache.lucene.util.BytesRef;
 import org.apache.lucene.util.FixedBitSet;
@@ -340,7 +344,7 @@ public class CollapsingQParserPlugin extends QParserPlugin {
 
         IntOpenHashSet boostDocs = getBoostDocs(searcher, this.boosted);
 
        if(this.min != null || this.max != null) {
        if (this.min != null || this.max != null) {
 
           return new CollapsingFieldValueCollector(maxDoc,
                                                    leafCount,
@@ -436,7 +440,6 @@ public class CollapsingQParserPlugin extends QParserPlugin {
     private SortedDocValues values;
     private int[] ords;
     private float[] scores;
    private int docBase;
     private int maxDoc;
     private int nullPolicy;
     private float nullScore = -Float.MAX_VALUE;
@@ -489,7 +492,7 @@ public class CollapsingQParserPlugin extends QParserPlugin {
     }
 
     @Override
    public void setNextReader(AtomicReaderContext context) throws IOException {
    protected void doSetNextReader(AtomicReaderContext context) throws IOException {
       this.contexts[context.ord] = context;
       this.docBase = context.docBase;
     }
@@ -546,9 +549,9 @@ public class CollapsingQParserPlugin extends QParserPlugin {
       int currentContext = 0;
       int currentDocBase = 0;
       int nextDocBase = currentContext+1 &lt; contexts.length ? contexts[currentContext+1].docBase : maxDoc;
      delegate.setNextReader(contexts[currentContext]);
      leafDelegate = delegate.getLeafCollector(contexts[currentContext]);
       DummyScorer dummy = new DummyScorer();
      delegate.setScorer(dummy);
      leafDelegate.setScorer(dummy);
       DocIdSetIterator it = collapsedSet.iterator();
       int docId = -1;
       int nullScoreIndex = 0;
@@ -571,13 +574,13 @@ public class CollapsingQParserPlugin extends QParserPlugin {
           currentContext++;
           currentDocBase = contexts[currentContext].docBase;
           nextDocBase = currentContext+1 &lt; contexts.length ? contexts[currentContext+1].docBase : maxDoc;
          delegate.setNextReader(contexts[currentContext]);
          delegate.setScorer(dummy);
          leafDelegate = delegate.getLeafCollector(contexts[currentContext]);
          leafDelegate.setScorer(dummy);
         }
 
         int contextDoc = docId-currentDocBase;
         dummy.docId = contextDoc;
        delegate.collect(contextDoc);
        leafDelegate.collect(contextDoc);
       }
 
       if(delegate instanceof DelegatingCollector) {
@@ -590,7 +593,6 @@ public class CollapsingQParserPlugin extends QParserPlugin {
     private AtomicReaderContext[] contexts;
     private SortedDocValues values;
 
    private int docBase;
     private int maxDoc;
     private int nullPolicy;
 
@@ -640,7 +642,7 @@ public class CollapsingQParserPlugin extends QParserPlugin {
       this.fieldValueCollapse.setScorer(scorer);
     }
 
    public void setNextReader(AtomicReaderContext context) throws IOException {
    public void doSetNextReader(AtomicReaderContext context) throws IOException {
       this.contexts[context.ord] = context;
       this.docBase = context.docBase;
       this.fieldValueCollapse.setNextReader(context);
@@ -660,9 +662,9 @@ public class CollapsingQParserPlugin extends QParserPlugin {
       int currentContext = 0;
       int currentDocBase = 0;
       int nextDocBase = currentContext+1 &lt; contexts.length ? contexts[currentContext+1].docBase : maxDoc;
      delegate.setNextReader(contexts[currentContext]);
      leafDelegate = delegate.getLeafCollector(contexts[currentContext]);
       DummyScorer dummy = new DummyScorer();
      delegate.setScorer(dummy);
      leafDelegate.setScorer(dummy);
       DocIdSetIterator it = fieldValueCollapse.getCollapsedSet().iterator();
       int docId = -1;
       int nullScoreIndex = 0;
@@ -689,13 +691,13 @@ public class CollapsingQParserPlugin extends QParserPlugin {
           currentContext++;
           currentDocBase = contexts[currentContext].docBase;
           nextDocBase = currentContext+1 &lt; contexts.length ? contexts[currentContext+1].docBase : maxDoc;
          delegate.setNextReader(contexts[currentContext]);
          delegate.setScorer(dummy);
          leafDelegate = delegate.getLeafCollector(contexts[currentContext]);
          leafDelegate.setScorer(dummy);
         }
 
         int contextDoc = docId-currentDocBase;
         dummy.docId = contextDoc;
        delegate.collect(contextDoc);
        leafDelegate.collect(contextDoc);
       }
 
       if(delegate instanceof DelegatingCollector) {
diff --git a/solr/core/src/java/org/apache/solr/search/DelegatingCollector.java b/solr/core/src/java/org/apache/solr/search/DelegatingCollector.java
index 97045e87d1e..06b96581b8b 100644
-- a/solr/core/src/java/org/apache/solr/search/DelegatingCollector.java
++ b/solr/core/src/java/org/apache/solr/search/DelegatingCollector.java
@@ -18,21 +18,23 @@
 package org.apache.solr.search;
 
 
import org.apache.lucene.index.IndexReader;
import java.io.IOException;

 import org.apache.lucene.index.AtomicReaderContext;
import org.apache.lucene.search.LeafCollector;
 import org.apache.lucene.search.Collector;
 import org.apache.lucene.search.Scorer;

import java.io.IOException;
import org.apache.lucene.search.SimpleCollector;
 
 
 /** A simple delegating collector where one can set the delegate after creation */
public class DelegatingCollector extends Collector {
public class DelegatingCollector extends SimpleCollector {
 
   /* for internal testing purposes only to determine the number of times a delegating collector chain was used */
   public static int setLastDelegateCount;
 
   protected Collector delegate;
  protected LeafCollector leafDelegate;
   protected Scorer scorer;
   protected AtomicReaderContext context;
   protected int docBase;
@@ -56,24 +58,26 @@ public class DelegatingCollector extends Collector {
   @Override
   public void setScorer(Scorer scorer) throws IOException {
     this.scorer = scorer;
    delegate.setScorer(scorer);
    if (leafDelegate != null) {
      leafDelegate.setScorer(scorer);
    }
   }
 
   @Override
   public void collect(int doc) throws IOException {
    delegate.collect(doc);
    leafDelegate.collect(doc);
   }
 
   @Override
  public void setNextReader(AtomicReaderContext context) throws IOException {
  protected void doSetNextReader(AtomicReaderContext context) throws IOException {
     this.context = context;
     this.docBase = context.docBase;
    delegate.setNextReader(context);
    leafDelegate = delegate.getLeafCollector(context);
   }
 
   @Override
   public boolean acceptsDocsOutOfOrder() {
    return delegate.acceptsDocsOutOfOrder();
    return leafDelegate.acceptsDocsOutOfOrder();
   }
 
   public void finish() throws IOException {
diff --git a/solr/core/src/java/org/apache/solr/search/DocSetCollector.java b/solr/core/src/java/org/apache/solr/search/DocSetCollector.java
index 76c3660cce9..cbc179b8232 100644
-- a/solr/core/src/java/org/apache/solr/search/DocSetCollector.java
++ b/solr/core/src/java/org/apache/solr/search/DocSetCollector.java
@@ -20,15 +20,16 @@ package org.apache.solr.search;
 import java.io.IOException;
 
 import org.apache.lucene.index.AtomicReaderContext;
import org.apache.lucene.search.Collector;
import org.apache.lucene.search.LeafCollector;
 import org.apache.lucene.search.Scorer;
import org.apache.lucene.search.SimpleCollector;
 import org.apache.lucene.util.FixedBitSet;
 
 /**
  *
  */
 
public class DocSetCollector extends Collector {
public class DocSetCollector extends SimpleCollector {
   int pos=0;
   FixedBitSet bits;
   final int maxDoc;
@@ -84,7 +85,7 @@ public class DocSetCollector extends Collector {
   }
 
   @Override
  public void setNextReader(AtomicReaderContext context) throws IOException {
  protected void doSetNextReader(AtomicReaderContext context) throws IOException {
     this.base = context.docBase;
   }
 
diff --git a/solr/core/src/java/org/apache/solr/search/DocSetDelegateCollector.java b/solr/core/src/java/org/apache/solr/search/DocSetDelegateCollector.java
deleted file mode 100644
index a73d77c4958..00000000000
-- a/solr/core/src/java/org/apache/solr/search/DocSetDelegateCollector.java
++ /dev/null
@@ -1,84 +0,0 @@
package org.apache.solr.search;

/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import java.io.IOException;

import org.apache.lucene.index.AtomicReaderContext;
import org.apache.lucene.search.Collector;
import org.apache.lucene.search.Scorer;
import org.apache.lucene.util.FixedBitSet;

/**
 *
 */
public class DocSetDelegateCollector extends DocSetCollector {
  final Collector collector;

  public DocSetDelegateCollector(int smallSetSize, int maxDoc, Collector collector) {
    super(smallSetSize, maxDoc);
    this.collector = collector;
  }

  @Override
  public void collect(int doc) throws IOException {
    collector.collect(doc);

    doc += base;
    // optimistically collect the first docs in an array
    // in case the total number will be small enough to represent
    // as a small set like SortedIntDocSet instead...
    // Storing in this array will be quicker to convert
    // than scanning through a potentially huge bit vector.
    // FUTURE: when search methods all start returning docs in order, maybe
    // we could have a ListDocSet() and use the collected array directly.
    if (pos &lt; scratch.length) {
      scratch[pos]=doc;
    } else {
      // this conditional could be removed if BitSet was preallocated, but that
      // would take up more memory, and add more GC time...
      if (bits==null) bits = new FixedBitSet(maxDoc);
      bits.set(doc);
    }

    pos++;
  }

  @Override
  public DocSet getDocSet() {
    if (pos&lt;=scratch.length) {
      // assumes docs were collected in sorted order!
      return new SortedIntDocSet(scratch, pos);
    } else {
      // set the bits for ids that were collected in the array
      for (int i=0; i&lt;scratch.length; i++) bits.set(scratch[i]);
      return new BitDocSet(bits,pos);
    }
  }

  @Override
  public void setScorer(Scorer scorer) throws IOException {
    collector.setScorer(scorer);
  }

  @Override
  public void setNextReader(AtomicReaderContext context) throws IOException {
    collector.setNextReader(context);
    this.base = context.docBase;
  }
}
diff --git a/solr/core/src/java/org/apache/solr/search/EarlyTerminatingCollector.java b/solr/core/src/java/org/apache/solr/search/EarlyTerminatingCollector.java
index b9eaca63cea..200d326a350 100644
-- a/solr/core/src/java/org/apache/solr/search/EarlyTerminatingCollector.java
++ b/solr/core/src/java/org/apache/solr/search/EarlyTerminatingCollector.java
@@ -20,67 +20,70 @@ package org.apache.solr.search;
 import java.io.IOException;
 
 import org.apache.lucene.index.AtomicReaderContext;
import org.apache.lucene.search.LeafCollector;
 import org.apache.lucene.search.Collector;
import org.apache.lucene.search.Scorer;
import org.apache.lucene.search.FilterLeafCollector;
import org.apache.lucene.search.FilterCollector;
 /**
  * &lt;p&gt;
 *  A wrapper {@link Collector} that throws {@link EarlyTerminatingCollectorException}) 
 *  A wrapper {@link Collector} that throws {@link EarlyTerminatingCollectorException})
  *  once a specified maximum number of documents are collected.
  * &lt;/p&gt;
  */
public class EarlyTerminatingCollector extends Collector {
public class EarlyTerminatingCollector extends FilterCollector {
 
   private final int maxDocsToCollect;
  private final Collector delegate;
 
   private int numCollected = 0;
   private int prevReaderCumulativeSize = 0;
  private int currentReaderSize = 0;  
  private int currentReaderSize = 0;
 
   /**
    * &lt;p&gt;
   *  Wraps a {@link Collector}, throwing {@link EarlyTerminatingCollectorException} 
   *  Wraps a {@link Collector}, throwing {@link EarlyTerminatingCollectorException}
    *  once the specified maximum is reached.
    * &lt;/p&gt;
    * @param delegate - the Collector to wrap.
    * @param maxDocsToCollect - the maximum number of documents to Collect
   * 
   *
    */
   public EarlyTerminatingCollector(Collector delegate, int maxDocsToCollect) {
    super(delegate);
     assert 0 &lt; maxDocsToCollect;
     assert null != delegate;
 
    this.delegate = delegate;
     this.maxDocsToCollect = maxDocsToCollect;
   }
 
  /**
   * This collector requires that docs be collected in order, otherwise
   * the computed number of scanned docs in the resulting 
   * {@link EarlyTerminatingCollectorException} will be meaningless.
   */
  @Override
  public boolean acceptsDocsOutOfOrder() {
    return false;
  }

  @Override
  public void collect(int doc) throws IOException {
    delegate.collect(doc);
    numCollected++;  
    if(maxDocsToCollect &lt;= numCollected) {
      throw new EarlyTerminatingCollectorException
        (numCollected, prevReaderCumulativeSize + (doc + 1));
    }
  }
   @Override
  public void setNextReader(AtomicReaderContext context) throws IOException {
  public LeafCollector getLeafCollector(AtomicReaderContext context)
      throws IOException {
     prevReaderCumulativeSize += currentReaderSize; // not current any more
     currentReaderSize = context.reader().maxDoc() - 1;
    delegate.setNextReader(context);
  }
  @Override
  public void setScorer(Scorer scorer) throws IOException {
    delegate.setScorer(scorer);    

    return new FilterLeafCollector(super.getLeafCollector(context)) {

      /**
       * This collector requires that docs be collected in order, otherwise
       * the computed number of scanned docs in the resulting
       * {@link EarlyTerminatingCollectorException} will be meaningless.
       */
      @Override
      public boolean acceptsDocsOutOfOrder() {
        return false;
      }

      @Override
      public void collect(int doc) throws IOException {
        super.collect(doc);
        numCollected++;
        if (maxDocsToCollect &lt;= numCollected) {
          throw new EarlyTerminatingCollectorException
            (numCollected, prevReaderCumulativeSize + (doc + 1));
        }
      }

    };
   }

 }
diff --git a/solr/core/src/java/org/apache/solr/search/FunctionRangeQuery.java b/solr/core/src/java/org/apache/solr/search/FunctionRangeQuery.java
index 4e913dd55b3..91bc1c01240 100644
-- a/solr/core/src/java/org/apache/solr/search/FunctionRangeQuery.java
++ b/solr/core/src/java/org/apache/solr/search/FunctionRangeQuery.java
@@ -22,6 +22,9 @@ import org.apache.lucene.index.IndexReader;
 import org.apache.lucene.queries.function.FunctionValues;
 import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.queries.function.ValueSourceScorer;
import org.apache.lucene.search.LeafCollector;
import org.apache.lucene.search.Collector;
import org.apache.lucene.search.FilterCollector;
 import org.apache.lucene.search.IndexSearcher;
 import org.apache.solr.search.function.ValueSourceRangeFilter;
 
@@ -55,16 +58,16 @@ public class FunctionRangeQuery extends SolrConstantScoreQuery implements PostFi
     @Override
     public void collect(int doc) throws IOException {
       if (doc&lt;maxdoc &amp;&amp; scorer.matches(doc)) {
        delegate.collect(doc);
        leafDelegate.collect(doc);
       }
     }
 
     @Override
    public void setNextReader(AtomicReaderContext context) throws IOException {
    protected void doSetNextReader(AtomicReaderContext context) throws IOException {
      super.doSetNextReader(context);
       maxdoc = context.reader().maxDoc();
       FunctionValues dv = rangeFilt.getValueSource().getValues(fcontext, context);
       scorer = dv.getRangeScorer(context.reader(), rangeFilt.getLowerVal(), rangeFilt.getUpperVal(), rangeFilt.isIncludeLower(), rangeFilt.isIncludeUpper());
      super.setNextReader(context);
     }
   }
 }
diff --git a/solr/core/src/java/org/apache/solr/search/Grouping.java b/solr/core/src/java/org/apache/solr/search/Grouping.java
index 88066de69c8..ee12482c361 100644
-- a/solr/core/src/java/org/apache/solr/search/Grouping.java
++ b/solr/core/src/java/org/apache/solr/search/Grouping.java
@@ -342,12 +342,12 @@ public class Grouping {
       }
     }
 
    Collector allCollectors = MultiCollector.wrap(collectors.toArray(new Collector[collectors.size()]));
     DocSetCollector setCollector = null;
     if (getDocSet &amp;&amp; allGroupHeadsCollector == null) {
      setCollector = new DocSetDelegateCollector(maxDoc &gt;&gt; 6, maxDoc, allCollectors);
      allCollectors = setCollector;
      setCollector = new DocSetCollector(maxDoc &gt;&gt; 6, maxDoc);
      collectors.add(setCollector);
     }
    Collector allCollectors = MultiCollector.wrap(collectors);
 
     CachingCollector cachedCollector = null;
     if (cacheSecondPassSearch &amp;&amp; allCollectors != null) {
diff --git a/solr/core/src/java/org/apache/solr/search/SolrIndexSearcher.java b/solr/core/src/java/org/apache/solr/search/SolrIndexSearcher.java
index be97d81e9d6..176c0df733f 100644
-- a/solr/core/src/java/org/apache/solr/search/SolrIndexSearcher.java
++ b/solr/core/src/java/org/apache/solr/search/SolrIndexSearcher.java
@@ -60,6 +60,7 @@ import org.apache.lucene.index.StoredFieldVisitor;
 import org.apache.lucene.index.Term;
 import org.apache.lucene.index.Terms;
 import org.apache.lucene.index.TermsEnum;
import org.apache.lucene.search.LeafCollector;
 import org.apache.lucene.search.BooleanClause;
 import org.apache.lucene.search.BooleanQuery;
 import org.apache.lucene.search.Collector;
@@ -71,9 +72,11 @@ import org.apache.lucene.search.FieldDoc;
 import org.apache.lucene.search.Filter;
 import org.apache.lucene.search.IndexSearcher;
 import org.apache.lucene.search.MatchAllDocsQuery;
import org.apache.lucene.search.MultiCollector;
 import org.apache.lucene.search.Query;
 import org.apache.lucene.search.ScoreDoc;
 import org.apache.lucene.search.Scorer;
import org.apache.lucene.search.SimpleCollector;
 import org.apache.lucene.search.Sort;
 import org.apache.lucene.search.SortField;
 import org.apache.lucene.search.TermQuery;
@@ -930,17 +933,17 @@ public class SolrIndexSearcher extends IndexSearcher implements Closeable,SolrIn
         if (idIter == null) continue;
       }
 
      collector.setNextReader(leaf);
      final LeafCollector leafCollector = collector.getLeafCollector(leaf);
       int max = reader.maxDoc();
 
       if (idIter == null) {
         for (int docid = 0; docid&lt;max; docid++) {
           if (liveDocs != null &amp;&amp; !liveDocs.get(docid)) continue;
          collector.collect(docid);
          leafCollector.collect(docid);
         }
       } else {
         for (int docid = -1; (docid = idIter.advance(docid+1)) &lt; max; ) {
          collector.collect(docid);
          leafCollector.collect(docid);
         }
       }
     }
@@ -1526,24 +1529,18 @@ public class SolrIndexSearcher extends IndexSearcher implements Closeable,SolrIn
       Collector collector;
 
       if (!needScores) {
        collector = new Collector () {
          @Override
          public void setScorer(Scorer scorer) {
          }
        collector = new SimpleCollector () {
           @Override
           public void collect(int doc) {
             numHits[0]++;
           }
           @Override
          public void setNextReader(AtomicReaderContext context) {
          }
          @Override
           public boolean acceptsDocsOutOfOrder() {
             return true;
           }
         };
       } else {
        collector = new Collector() {
        collector = new SimpleCollector() {
           Scorer scorer;
           @Override
           public void setScorer(Scorer scorer) {
@@ -1556,9 +1553,6 @@ public class SolrIndexSearcher extends IndexSearcher implements Closeable,SolrIn
             if (score &gt; topscore[0]) topscore[0]=score;            
           }
           @Override
          public void setNextReader(AtomicReaderContext context) {
          }
          @Override
           public boolean acceptsDocsOutOfOrder() {
             return true;
           }
@@ -1667,30 +1661,33 @@ public class SolrIndexSearcher extends IndexSearcher implements Closeable,SolrIn
       final float[] topscore = new float[] { Float.NEGATIVE_INFINITY };
 
       Collector collector;
      DocSetCollector setCollector;
      final DocSetCollector setCollector = new DocSetCollector(smallSetSize, maxDoc);
 
        if (!needScores) {
         collector = setCollector = new DocSetCollector(smallSetSize, maxDoc);
         collector = setCollector;
        } else {
         collector = setCollector = new DocSetDelegateCollector(smallSetSize, maxDoc, new Collector() {
         final Collector topScoreCollector = new SimpleCollector() {
          
            Scorer scorer;
           
            @Override
          public void setScorer(Scorer scorer) {
             this.scorer = scorer;
           }
           @Override
          public void setScorer(Scorer scorer) throws IOException {
            this.scorer = scorer;
          }
           
          @Override
           public void collect(int doc) throws IOException {
             float score = scorer.score();
             if (score &gt; topscore[0]) topscore[0]=score;
           }
           @Override
          public void setNextReader(AtomicReaderContext context) {
           }
           @Override
            float score = scorer.score();
            if (score &gt; topscore[0]) topscore[0] = score;
          }
          
          @Override
           public boolean acceptsDocsOutOfOrder() {
             return false;
           }
         });
            return true;
          }
        };
        
        collector = MultiCollector.wrap(setCollector, topScoreCollector);
        }
        if (terminateEarly) {
          collector = new EarlyTerminatingCollector(collector, cmd.len);
@@ -1726,8 +1723,8 @@ public class SolrIndexSearcher extends IndexSearcher implements Closeable,SolrIn
     } else {
 
       final TopDocsCollector topCollector = buildTopDocsCollector(len, cmd);
      DocSetCollector setCollector = new DocSetDelegateCollector(maxDoc&gt;&gt;6, maxDoc, topCollector);
      Collector collector = setCollector;
      DocSetCollector setCollector = new DocSetCollector(maxDoc&gt;&gt;6, maxDoc);
      Collector collector = MultiCollector.wrap(topCollector, setCollector);
       if (terminateEarly) {
         collector = new EarlyTerminatingCollector(collector, cmd.len);
       }
@@ -2031,7 +2028,7 @@ public class SolrIndexSearcher extends IndexSearcher implements Closeable,SolrIn
         AtomicReaderContext leaf = leafContexts.get(readerIndex++);
         base = leaf.docBase;
         end = base + leaf.reader().maxDoc();
        topCollector.setNextReader(leaf);
        topCollector.getLeafCollector(leaf);
         // we should never need to set the scorer given the settings for the collector
       }
       topCollector.collect(doc-base);
diff --git a/solr/core/src/java/org/apache/solr/search/grouping/CommandHandler.java b/solr/core/src/java/org/apache/solr/search/grouping/CommandHandler.java
index 4d10c931337..e8425138b68 100644
-- a/solr/core/src/java/org/apache/solr/search/grouping/CommandHandler.java
++ b/solr/core/src/java/org/apache/solr/search/grouping/CommandHandler.java
@@ -29,12 +29,10 @@ import org.apache.lucene.search.TimeLimitingCollector;
 import org.apache.lucene.search.TotalHitCountCollector;
 import org.apache.lucene.search.grouping.AbstractAllGroupHeadsCollector;
 import org.apache.lucene.search.grouping.term.TermAllGroupHeadsCollector;
import org.apache.lucene.util.FixedBitSet;
 import org.apache.solr.common.util.NamedList;
 import org.apache.solr.search.BitDocSet;
 import org.apache.solr.search.DocSet;
 import org.apache.solr.search.DocSetCollector;
import org.apache.solr.search.DocSetDelegateCollector;
 import org.apache.solr.search.QueryUtils;
 import org.apache.solr.search.SolrIndexSearcher;
 import org.apache.solr.search.SolrIndexSearcher.ProcessedFilter;
@@ -173,14 +171,11 @@ public class CommandHandler {
 
   private DocSet computeDocSet(Query query, ProcessedFilter filter, List&lt;Collector&gt; collectors) throws IOException {
     int maxDoc = searcher.maxDoc();
    DocSetCollector docSetCollector;
    if (collectors.isEmpty()) {
      docSetCollector = new DocSetCollector(maxDoc &gt;&gt; 6, maxDoc);
    } else {
      Collector wrappedCollectors = MultiCollector.wrap(collectors.toArray(new Collector[collectors.size()]));
      docSetCollector = new DocSetDelegateCollector(maxDoc &gt;&gt; 6, maxDoc, wrappedCollectors);
    }
    searchWithTimeLimiter(query, filter, docSetCollector);
    final Collector collector;
    final DocSetCollector docSetCollector = new DocSetCollector(maxDoc &gt;&gt; 6, maxDoc);
    List&lt;Collector&gt; allCollectors = new ArrayList&lt;&gt;(collectors);
    allCollectors.add(docSetCollector);
    searchWithTimeLimiter(query, filter, MultiCollector.wrap(allCollectors));
     return docSetCollector.getDocSet();
   }
 
diff --git a/solr/core/src/java/org/apache/solr/search/grouping/collector/FilterCollector.java b/solr/core/src/java/org/apache/solr/search/grouping/collector/FilterCollector.java
index 5ab7f1824be..3dd854525ab 100644
-- a/solr/core/src/java/org/apache/solr/search/grouping/collector/FilterCollector.java
++ b/solr/core/src/java/org/apache/solr/search/grouping/collector/FilterCollector.java
@@ -17,52 +17,42 @@ package org.apache.solr.search.grouping.collector;
  * limitations under the License.
  */
 
import java.io.IOException;

 import org.apache.lucene.index.AtomicReaderContext;
import org.apache.lucene.search.LeafCollector;
 import org.apache.lucene.search.Collector;
import org.apache.lucene.search.Scorer;
import org.apache.lucene.search.FilterLeafCollector;
 import org.apache.solr.search.DocSet;
 
import java.io.IOException;

 /**
  * A collector that filters incoming doc ids that are not in the filter.
  *
  * @lucene.experimental
  */
public class FilterCollector extends Collector {
public class FilterCollector extends org.apache.lucene.search.FilterCollector {
 
   private final DocSet filter;
  private final Collector delegate;
  private int docBase;
   private int matches;
 
   public FilterCollector(DocSet filter, Collector delegate) {
    super(delegate);
     this.filter = filter;
    this.delegate = delegate;
  }

  @Override
  public void setScorer(Scorer scorer) throws IOException {
    delegate.setScorer(scorer);
  }

  @Override
  public void collect(int doc) throws IOException {
    matches++;
    if (filter.exists(doc + docBase)) {
      delegate.collect(doc);
    }
  }

  @Override
  public void setNextReader(AtomicReaderContext context) throws IOException {
    this.docBase = context.docBase;
    delegate.setNextReader(context);
   }
 
   @Override
  public boolean acceptsDocsOutOfOrder() {
    return delegate.acceptsDocsOutOfOrder();
  public LeafCollector getLeafCollector(AtomicReaderContext context)
      throws IOException {
    final int docBase = context.docBase;
    return new FilterLeafCollector(super.getLeafCollector(context)) {
      @Override
      public void collect(int doc) throws IOException {
        matches++;
        if (filter.exists(doc + docBase)) {
          super.collect(doc);
        }
      }
    };
   }
 
   public int getMatches() {
@@ -75,6 +65,6 @@ public class FilterCollector extends Collector {
    * @return the delegate collector
    */
   public Collector getDelegate() {
    return delegate;
    return in;
   }
 }
diff --git a/solr/core/src/test/org/apache/solr/search/TestSort.java b/solr/core/src/test/org/apache/solr/search/TestSort.java
index b31952191b3..9671374bde5 100644
-- a/solr/core/src/test/org/apache/solr/search/TestSort.java
++ b/solr/core/src/test/org/apache/solr/search/TestSort.java
@@ -32,10 +32,13 @@ import org.apache.lucene.index.AtomicReaderContext;
 import org.apache.lucene.index.DirectoryReader;
 import org.apache.lucene.index.IndexWriter;
 import org.apache.lucene.index.IndexWriterConfig;
import org.apache.lucene.search.LeafCollector;
 import org.apache.lucene.search.BitsFilteredDocIdSet;
 import org.apache.lucene.search.Collector;
 import org.apache.lucene.search.DocIdSet;
 import org.apache.lucene.search.Filter;
import org.apache.lucene.search.FilterLeafCollector;
import org.apache.lucene.search.FilterCollector;
 import org.apache.lucene.search.IndexSearcher;
 import org.apache.lucene.search.MatchAllDocsQuery;
 import org.apache.lucene.search.ScoreDoc;
@@ -265,30 +268,21 @@ public class TestSort extends SolrTestCaseJ4 {
 
         final List&lt;MyDoc&gt; collectedDocs = new ArrayList&lt;&gt;();
         // delegate and collect docs ourselves
        Collector myCollector = new Collector() {
          int docBase;
        Collector myCollector = new FilterCollector(topCollector) {
 
           @Override
          public void setScorer(Scorer scorer) throws IOException {
            topCollector.setScorer(scorer);
          public LeafCollector getLeafCollector(AtomicReaderContext context)
              throws IOException {
            final int docBase = context.docBase;
            return new FilterLeafCollector(super.getLeafCollector(context)) {
              @Override
              public void collect(int doc) throws IOException {
                super.collect(doc);
                collectedDocs.add(mydocs[docBase + doc]);
              }
            };
           }
 
          @Override
          public void collect(int doc) throws IOException {
            topCollector.collect(doc);
            collectedDocs.add(mydocs[doc + docBase]);
          }

          @Override
          public void setNextReader(AtomicReaderContext context) throws IOException {
            topCollector.setNextReader(context);
            docBase = context.docBase;
          }

          @Override
          public boolean acceptsDocsOutOfOrder() {
            return topCollector.acceptsDocsOutOfOrder();
          }
         };
 
         searcher.search(new MatchAllDocsQuery(), filt, myCollector);
- 
2.19.1.windows.1

</unit>
