<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/lucene/3865e131cb.java"><expr_stmt><expr><name>From</name> <literal type="number">3865e131cb380b28bfe0e5ab796f551f6dddf03a</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Erick</name> <name><name>Erickson</name> <argument_list type="generic">&lt;<argument><name>erick</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Wed</name></expr><operator>,</operator> <expr><literal type="number">21</literal> <name>Aug</name> <literal type="number">2013</literal> <literal type="number">20</literal><operator>:</operator><literal type="number">31</literal><operator>:</operator><literal type="number">39</literal> <operator>+</operator><literal type="number">0000</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>SOLR</name><operator>-</operator><literal type="number">5057</literal> <operator>-</operator> <name>queryResultCache</name> <name>should</name> <name>match</name> <name>out</name><operator>-</operator><name>of</name><operator>-</operator><name>order</name> <name>fq</name>
 <name>clauses</name>

<name>git</name><operator>-</operator><name>svn</name><operator>-</operator><name>id</name><operator>:</operator> <name>https</name><operator>:</operator><comment type="line">//svn.apache.org/repos/asf/lucene/dev/trunk@1516299 13f79535-47bb-0310-9956-ffa450edef68</comment>
<operator>--</operator>
 <name>solr</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>                              <operator>|</operator>  <literal type="number">2</literal> <operator>++</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>QueryResultKey</name><operator>.</operator><name>java</name></name>    <operator>|</operator> <literal type="number">35</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>QueryResultKeyTest</name><operator>.</operator><name>java</name></name>  <operator>|</operator> <literal type="number">20</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator>
 <literal type="number">3</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">53</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">4</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
<name>index</name> <name>b0f62badcec</name><operator>..</operator><name>c9154b27283</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
@@ <operator>-</operator><literal type="number">155</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">155</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <name>Optimizations</name>
 <operator>*</operator> <name>SOLR</name><operator>-</operator><literal type="number">5134</literal><operator>:</operator> <name>Have</name> <name>HdfsIndexOutput</name> <name>extend</name> <name><name>BufferedIndexOutput</name><operator>.</operator></name> 
   (<name>Mark</name> <name>Miller</name></expr><operator>,</operator> <expr><name>Uwe</name> <name>Schindler</name></expr></expr_stmt>)
 
 <expr><operator>*</operator> <name>SOLR</name><operator>-</operator><literal type="number">5057</literal><operator>:</operator> <name>QueryResultCache</name> <name>should</name> <name>not</name> <name>related</name> <name>with</name> <name>the</name> <name>order</name> <name>of</name> <name>fq</name><literal type="char">'</literal></expr>s list (Feihong Huang via Erick Erickson)

 Other Changes
 ----------------------
 
diff --git a/solr/core/src/java/org/apache/solr/search/QueryResultKey.java b/solr/core/src/java/org/apache/solr/search/QueryResultKey.java
index b439fe3ca0a..b09b6062f35 100644
-- a/solr/core/src/java/org/apache/solr/search/QueryResultKey.java
++ b/solr/core/src/java/org/apache/solr/search/QueryResultKey.java
@@ -90,9 +90,36 @@ public final class QueryResultKey {
   }
 
 
  private static boolean isEqual(Object o1, Object o2) {
    if (o1==o2) return true;  // takes care of identity and null cases
    if (o1==null || o2==null) return false;
    return o1.equals(o2);
  // Do fast version, expecting that filters are ordered and only
  // fall back to unordered compare on the first non-equal elements.
  // This will only be called if the hash code of the entire key already
  // matched, so the slower unorderedCompare should pretty much never
  // be called if filter lists are generally ordered.
  private static boolean isEqual(List&lt;Query&gt; fqList1, List&lt;Query&gt; fqList2) {
    if (fqList1 == fqList2) return true;  // takes care of identity and null cases
    if (fqList1 == null || fqList2 == null) return false;
    int sz = fqList1.size();
    if (sz != fqList2.size()) return false;
    for (int i = 0; i &lt; sz; i++) {
      if (!fqList1.get(i).equals(fqList2.get(i))) {
        return unorderedCompare(fqList1, fqList2, i);
      }
    }
    return true;
   }

  private static boolean unorderedCompare(List&lt;Query&gt; fqList1, List&lt;Query&gt; fqList2, int start) {
    int sz = fqList1.size();
    outer:
    for (int i = start; i &lt; sz; i++) {
      Query q1 = fqList1.get(i);
      for (int j = start; j &lt; sz; j++) {
        if (q1.equals(fqList2.get(j)))
          continue outer;
      }
      return false;
    }
    return true;
  }

 }
diff --git a/solr/core/src/test/org/apache/solr/core/QueryResultKeyTest.java b/solr/core/src/test/org/apache/solr/core/QueryResultKeyTest.java
index 8ad39d526ae..1c07d85a0a0 100644
-- a/solr/core/src/test/org/apache/solr/core/QueryResultKeyTest.java
++ b/solr/core/src/test/org/apache/solr/core/QueryResultKeyTest.java
@@ -56,4 +56,24 @@ public class QueryResultKeyTest extends SolrTestCaseJ4 {
     assertEquals(qrk1.hashCode(), qrk2.hashCode());
   }
 
  @Test
  public void testQueryResultKeySortedFilters() {
    Query fq1 = new TermQuery(new Term("test1", "field1"));
    Query fq2 = new TermQuery(new Term("test2", "field2"));

    Query query = new TermQuery(new Term("test3", "field3"));
    List&lt;Query&gt; filters = new ArrayList&lt;Query&gt;();
    filters.add(fq1);
    filters.add(fq2);

    QueryResultKey key = new QueryResultKey(query, filters, null, 0);

    List&lt;Query&gt; newFilters = new ArrayList&lt;Query&gt;();
    newFilters.add(fq2);
    newFilters.add(fq1);
    QueryResultKey newKey = new QueryResultKey(query, newFilters, null, 0);

    assertEquals(key, newKey);
  }

 }
- 
2.19.1.windows.1

</unit>
