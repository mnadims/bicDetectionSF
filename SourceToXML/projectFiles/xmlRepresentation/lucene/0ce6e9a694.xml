<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/lucene/0ce6e9a694.java"><expr_stmt><expr><name>From</name> <literal type="number">0ce6e9a6949fd2ffee8ac56309557433e64f5268</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Noble</name> <name><name>Paul</name> <argument_list type="generic">&lt;<argument><name>noble</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Tue</name></expr><operator>,</operator> <expr><literal type="number">29</literal> <name>Oct</name> <literal type="number">2013</literal> <literal type="number">08</literal><operator>:</operator><literal type="number">37</literal><operator>:</operator><literal type="number">02</literal> <operator>+</operator><literal type="number">0000</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>SOLR</name><operator>-</operator><literal type="number">5311</literal> <operator>-</operator> <name>Avoid</name> <name>registering</name> <name>replicas</name> <name>which</name> <name>are</name> <name>removed</name></expr> <operator>,</operator>
 <expr><name>SOLR</name><operator>-</operator><literal type="number">5310</literal> <operator>-</operator><name>Add</name> <name>a</name> <name>collection</name> <name>admin</name> <name>command</name> <name>to</name> <name>remove</name> <name>a</name> <name>replica</name>

<name>git</name><operator>-</operator><name>svn</name><operator>-</operator><name>id</name><operator>:</operator> <name>https</name><operator>:</operator><comment type="line">//svn.apache.org/repos/asf/lucene/dev/trunk@1536606 13f79535-47bb-0310-9956-ffa450edef68</comment>
<operator>--</operator>
 <name>solr</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>                              <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>CloudDescriptor</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>Overseer</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">38</literal> <operator>++</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>cloud</name><operator>/</operator><name><name>OverseerCollectionProcessor</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">82</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ZkController</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">17</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>CoreDescriptor</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>CollectionsHandler</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">23</literal> <operator>++</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>TestRandomDVFaceting</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>CollectionsAPIDistributedZkTest</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>CustomCollectionTest</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">49</literal> <operator>--</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>DeleteInactiveReplicaTest</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">91</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>DeleteReplicaTest</name><operator>.</operator><name>java</name></name>  <operator>|</operator> <literal type="number">171</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestLazyCores</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>common</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ClusterState</name><operator>.</operator><name>java</name></name>       <operator>|</operator>   <literal type="number">3</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>common</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ZkStateReader</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">1</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>common</name><operator>/</operator><name>params</name><operator>/</operator><name><name>CollectionParams</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>cloud</name><operator>/</operator><name><name>AbstractFullDistribZkTestBase</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">47</literal> <operator>++</operator><operator>++</operator><operator>+</operator>
 <literal type="number">17</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">471</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">75</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>DeleteInactiveReplicaTest</name><operator>.</operator><name>java</name></name>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>DeleteReplicaTest</name><operator>.</operator><name>java</name></name>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
<name>index</name> <name>fe6d44d5533</name><operator>..</operator><name>aec0205cc73</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
@@ <operator>-</operator><literal type="number">107</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">107</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <name>New</name> <name>Features</name>
   <name>implementations</name> <name>indicating</name> <name>that</name> <name>they</name> <name>should</name> <name>not</name> <name>be</name> <name>removed</name> <name>in</name> <name>later</name> <name>stages</name>
   <name>of</name> <name>distributed</name> <call><name>updates</name> <argument_list>(<argument><expr><name>usually</name> <name>signalled</name> <name>by</name> <name>the</name> <name><name>update</name><operator>.</operator><name>distrib</name></name> <name>parameter</name></expr></argument>)</argument_list></call>
   <operator>(</operator><name>yonik</name><operator>)</operator>
  

 <operator>*</operator> <name>SOLR</name><operator>-</operator><literal type="number">5310</literal><operator>:</operator> <name>Add</name> <name>a</name> <name>collection</name> <name>admin</name> <name>command</name> <name>to</name> <name>remove</name> <name>a</name> <call><name>replica</name> <argument_list>(<argument><expr><name>noble</name></expr></argument>)</argument_list></call>

 <operator>*</operator> <name>SOLR</name><operator>-</operator><literal type="number">5311</literal><operator>:</operator> <name>Avoid</name> <name>registering</name> <name>replicas</name> <name>which</name> <name>are</name> <call><name>removed</name> <argument_list>(<argument><expr><name>noble</name></expr></argument>)</argument_list></call>

 
 <name>Bug</name> <name>Fixes</name>
 <operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>CloudDescriptor</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>CloudDescriptor</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>fbf02514e6c</name><operator>..</operator><name>e19ae117adc</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>CloudDescriptor</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>CloudDescriptor</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">27</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">27</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Properties</name></name>;</import>
 
 <class><specifier>public</specifier> class <name>CloudDescriptor</name> <block>{
 
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>CoreDescriptor</name></type> <name>cd</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>shardId</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>collectionName</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <name>SolrParams</name></type> <name>params</name></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">48</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">49</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>CloudDescriptor</name> <block>{
   <expr><specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>SHARD_RANGE</name> <operator>=</operator> <literal type="string">"shardRange"</literal></expr>;
   <expr><specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>SHARD_PARENT</name> <operator>=</operator> <literal type="string">"shardParent"</literal></expr>;
 
  <expr><specifier>public</specifier> <call><name>CloudDescriptor</name><argument_list>(<argument><expr><name>String</name> <name>coreName</name></expr></argument>, <argument><expr><name>Properties</name> <name>props</name></expr></argument>)</argument_list></call> <block>{
  <expr><specifier>public</specifier> <call><name>CloudDescriptor</name><argument_list>(<argument><expr><name>String</name> <name>coreName</name></expr></argument>, <argument><expr><name>Properties</name> <name>props</name></expr></argument>, <argument><expr><name>CoreDescriptor</name> <name>cd</name></expr></argument>)</argument_list></call> <block>{
    <expr><name><name>this</name><operator>.</operator><name>cd</name></name> <operator>=</operator> <name>cd</name></expr>;
     <expr><name><name>this</name><operator>.</operator><name>shardId</name></name> <operator>=</operator> <call><name><name>props</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><name><name>CoreDescriptor</name><operator>.</operator><name>CORE_SHARD</name></name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;
     <comment type="line">// If no collection name is specified, we default to the core name</comment>
     <expr><name><name>this</name><operator>.</operator><name>collectionName</name></name> <operator>=</operator> <call><name><name>props</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><name><name>CoreDescriptor</name><operator>.</operator><name>CORE_COLLECTION</name></name></expr></argument>, <argument><expr><name>coreName</name></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">120</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">122</literal></expr>,<expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>CloudDescriptor</name> <block>{
 
   <expr><specifier>public</specifier> <name>void</name> <call><name>setCoreNodeName</name><argument_list>(<argument><expr><name>String</name> <name>nodeName</name></expr></argument>)</argument_list></call> <block>{
     <expr><name><name>this</name><operator>.</operator><name>nodeName</name></name> <operator>=</operator> <name>nodeName</name></expr>;
    <if_stmt><if>if<condition>(<expr><name>nodeName</name><operator>==</operator><literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name><name>cd</name><operator>.</operator><name>getPersistableStandardProperties</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>remove</name><argument_list>(<argument><expr><name><name>CoreDescriptor</name><operator>.</operator><name>CORE_NODE_NAME</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
    <else>else<block type="pseudo"><block_content> <expr_stmt><expr><call><name><name>cd</name><operator>.</operator><name>getPersistableStandardProperties</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>setProperty</name><argument_list>(<argument><expr><name><name>CoreDescriptor</name><operator>.</operator><name>CORE_NODE_NAME</name></name></expr></argument>, <argument><expr><name>nodeName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt></block></expr>
   }</block>
 
   <specifier>public</specifier> <name>String</name> <call><name>getShardRange</name><argument_list>()</argument_list></call> <block>{
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>Overseer</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>Overseer</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">695cd7b2861</literal><operator>..</operator><literal type="number">30e5f21824b</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>Overseer</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>Overseer</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">59</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">59</literal></expr>,<expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>Overseer</name> <block>{
   <expr><specifier>private</specifier> <specifier>static</specifier> <name>Logger</name> <name>log</name> <operator>=</operator> <call><name><name>LoggerFactory</name><operator>.</operator><name>getLogger</name></name><argument_list>(<argument><expr><name><name>Overseer</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;
   
   <expr><specifier>static</specifier> enum <name>LeaderStatus</name> <block>{ <expr><name>DONT_KNOW</name></expr>, <expr><name>NO</name></expr>, <expr><name>YES</name></expr> }</block></expr>;
  

   <expr><specifier>private</specifier> <name>class</name> <name>ClusterStateUpdater</name> implements <name>Runnable</name></expr>, <expr><name>ClosableThread</name> <block>{
     
     <expr><specifier>private</specifier> <name>final</name> <name>ZkStateReader</name> <name>reader</name></expr>;
@@ <expr><operator>-</operator><literal type="number">329</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">329</literal></expr>,<expr><literal type="number">20</literal> @@ <specifier>public</specifier> <name>class</name> <name>Overseer</name> <block>{
         <expr><name>final</name> <name>String</name> <name>collection</name> <operator>=</operator> <call><name><name>message</name><operator>.</operator><name>getStr</name></name><argument_list>(<argument><expr><name><name>ZkStateReader</name><operator>.</operator><name>COLLECTION_PROP</name></name></expr></argument>)</argument_list></call></expr>;
         <assert>assert <expr><call><name><name>collection</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal> <operator>:</operator> <name>message</name></expr>;</assert>
         

        <name>Integer</name> <name>numShards</name> <operator>=</operator> <call><name><name>message</name><operator>.</operator><name>getInt</name></name><argument_list>(<argument><expr><name><name>ZkStateReader</name><operator>.</operator><name>NUM_SHARDS_PROP</name></name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></block></expr>;
        <expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Update state numShards={} message={}"</literal></expr></argument>, <argument><expr><name>numShards</name></expr></argument>, <argument><expr><name>message</name></expr></argument>)</argument_list></call></expr>;

        <expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name> <name>shardNames</name>  <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;

        <comment type="line">//collection does not yet exist, create placeholders if num shards is specified</comment>
        <expr><name>boolean</name> <name>collectionExists</name> <operator>=</operator> <call><name><name>state</name><operator>.</operator><name>hasCollection</name></name><argument_list>(<argument><expr><name>collection</name></expr></argument>)</argument_list></call></expr>;
        <if_stmt><if>if <condition>(<expr><operator>!</operator><name>collectionExists</name> <operator>&amp;&amp;</operator> <name>numShards</name><operator>!=</operator><literal type="null">null</literal></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name>getShardNames</name><argument_list>(<argument><expr><name>numShards</name></expr></argument>, <argument><expr><name>shardNames</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><name>state</name> <operator>=</operator> <call><name>createCollection</name><argument_list>(<argument><expr><name>state</name></expr></argument>, <argument><expr><name>collection</name></expr></argument>, <argument><expr><name>shardNames</name></expr></argument>, <argument><expr><name>message</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt/></block_content></block></if></if_stmt>}</block>
        <name>String</name> <name>sliceName</name> <operator>=</operator> <call><name><name>message</name><operator>.</operator><name>getStr</name></name><argument_list>(<argument><expr><name><name>ZkStateReader</name><operator>.</operator><name>SHARD_ID_PROP</name></name></expr></argument>)</argument_list></call></expr>;

         <expr><name>String</name> <name>coreNodeName</name> <operator>=</operator> <call><name><name>message</name><operator>.</operator><name>getStr</name></name><argument_list>(<argument><expr><name><name>ZkStateReader</name><operator>.</operator><name>CORE_NODE_NAME_PROP</name></name></expr></argument>)</argument_list></call></expr>;
         <if_stmt><if>if <condition>(<expr><name>coreNodeName</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
           <expr_stmt><expr><name>coreNodeName</name> <operator>=</operator> <call><name>getAssignedCoreNodeName</name><argument_list>(<argument><expr><name>state</name></expr></argument>, <argument><expr><name>message</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">339</literal></expr><operator>,</operator><expr><literal type="number">21</literal> <operator>+</operator><literal type="number">353</literal></expr><operator>,</operator><expr><literal type="number">18</literal> @@ <specifier>public</specifier> <name>class</name> <name>Overseer</name> <block>{
             <expr><name>coreNodeName</name> <operator>=</operator> <call><name><name>Assign</name><operator>.</operator><name>assignNode</name></name><argument_list>(<argument><expr><name>collection</name></expr></argument>, <argument><expr><name>state</name></expr></argument>)</argument_list></call></expr>;</block></expr></expr_stmt></block_content></block></if></if_stmt>
           }</block>
           <call><name><name>message</name><operator>.</operator><name>getProperties</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>put</name><argument_list>(<argument><expr><name><name>ZkStateReader</name><operator>.</operator><name>CORE_NODE_NAME_PROP</name></name></expr></argument>, <argument><expr><name>coreNodeName</name></expr></argument>)</argument_list></call></expr>;
        }</block>
        <name>Integer</name> <name>numShards</name> <operator>=</operator> <call><name><name>message</name><operator>.</operator><name>getInt</name></name><argument_list>(<argument><expr><name><name>ZkStateReader</name><operator>.</operator><name>NUM_SHARDS_PROP</name></name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Update state numShards={} message={}"</literal></expr></argument>, <argument><expr><name>numShards</name></expr></argument>, <argument><expr><name>message</name></expr></argument>)</argument_list></call></expr>;

        <expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name> <name>shardNames</name>  <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
        }</block></expr> <if_stmt><else>else <block>{<block_content>
          <comment type="line">//probably, this core was removed explicitly</comment>
          <if_stmt><if>if <condition>(<expr><name>sliceName</name> <operator>!=</operator><literal type="null">null</literal> <operator>&amp;&amp;</operator> <name>collectionExists</name> <operator>&amp;&amp;</operator>  <operator>!</operator><literal type="string">"true"</literal><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><call><name><name>state</name><operator>.</operator><name>getCollection</name></name><argument_list>(<argument><expr><name>collection</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getStr</name><argument_list>(<argument><expr><literal type="string">"autoCreated"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
            <decl_stmt><decl><type><name>Slice</name></type> <name>slice</name> <init>= <expr><call><name><name>state</name><operator>.</operator><name>getSlice</name></name><argument_list>(<argument><expr><name>collection</name></expr></argument>, <argument><expr><name>sliceName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if_stmt><if>if <condition>(<expr><call><name><name>slice</name><operator>.</operator><name>getReplica</name></name><argument_list>(<argument><expr><name>coreNodeName</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
              <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"core_deleted . Just return"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
              <return>return <expr><name>state</name></expr>;</return>
            <expr_stmt/></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></else></if_stmt>}</block></expr>
          }</block>
 
        <comment type="line">//collection does not yet exist, create placeholders if num shards is specified</comment>
        <name>boolean</name> <name>collectionExists</name> <operator>=</operator> <call><name><name>state</name><operator>.</operator><name>getCollections</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>contains</name><argument_list>(<argument><expr><name>collection</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt><if>if <condition>(<expr><operator>!</operator><name>collectionExists</name> <operator>&amp;&amp;</operator> <name>numShards</name><operator>!=</operator><literal type="null">null</literal></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name>getShardNames</name><argument_list>(<argument><expr><name>numShards</name></expr></argument>, <argument><expr><name>shardNames</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><name>state</name> <operator>=</operator> <call><name>createCollection</name><argument_list>(<argument><expr><name>state</name></expr></argument>, <argument><expr><name>collection</name></expr></argument>, <argument><expr><name>shardNames</name></expr></argument>, <argument><expr><name>message</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></if></if_stmt>
        
         <comment type="line">// use the provided non null shardId</comment>
        <decl_stmt><decl><type><name>String</name></type> <name>sliceName</name> <init>= <expr><call><name><name>message</name><operator>.</operator><name>getStr</name></name><argument_list>(<argument><expr><name><name>ZkStateReader</name><operator>.</operator><name>SHARD_ID_PROP</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <if_stmt><if>if <condition>(<expr><name>sliceName</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
           <comment type="line">//get shardId from ClusterState</comment>
           <expr_stmt><expr><name>sliceName</name> <operator>=</operator> <call><name>getAssignedId</name><argument_list>(<argument><expr><name>state</name></expr></argument>, <argument><expr><name>coreNodeName</name></expr></argument>, <argument><expr><name>message</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">541</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">552</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>Overseer</name> <block>{
         }</block>
         <call><name><name>collectionProps</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name><name>DocCollection</name><operator>.</operator><name>DOC_ROUTER</name></name></expr></argument>, <argument><expr><name>routerSpec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
        <if_stmt><if>if<condition>(<expr><call><name><name>message</name><operator>.</operator><name>getStr</name></name><argument_list>(<argument><expr><literal type="string">"fromApi"</literal></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name><name>collectionProps</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"autoCreated"</literal></expr></argument>,<argument><expr><literal type="string">"true"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
         <decl_stmt><decl><type><name>DocCollection</name></type> <name>newCollection</name> <init>= <expr><operator>new</operator> <call><name>DocCollection</name><argument_list>(<argument><expr><name>collectionName</name></expr></argument>, <argument><expr><name>newSlices</name></expr></argument>, <argument><expr><name>collectionProps</name></expr></argument>, <argument><expr><name>router</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
         <expr_stmt><expr><call><name><name>newCollections</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>collectionName</name></expr></argument>, <argument><expr><name>newCollection</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>OverseerCollectionProcessor</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>OverseerCollectionProcessor</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">77246c82a74</literal><operator>..</operator><name>cfa1790ba73</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>OverseerCollectionProcessor</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>OverseerCollectionProcessor</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">44</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">44</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>cloud</name><operator>.</operator><name>ZkStateReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>cloud</name><operator>.</operator><name>ZooKeeperException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>params</name><operator>.</operator><name>CoreAdminParams</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>params</name><operator>.</operator><name>CoreAdminParams</name><operator>.</operator><name>CoreAdminAction</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>params</name><operator>.</operator><name>MapSolrParams</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>params</name><operator>.</operator><name>ModifiableSolrParams</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>params</name><operator>.</operator><name>UpdateParams</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>NamedList</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">59</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">60</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collection</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">68</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">70</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
 <import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>cloud</name><operator>.</operator><name>Assign</name><operator>.</operator><name>Node</name></name>;</import>
 <import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>cloud</name><operator>.</operator><name>Assign</name><operator>.</operator><name>getNodesForNewShard</name></name>;</import>
 <import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>cloud</name><operator>.</operator><name>ZkStateReader</name><operator>.</operator><name>COLLECTION_PROP</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>cloud</name><operator>.</operator><name>ZkStateReader</name><operator>.</operator><name>REPLICA_PROP</name></name>;</import>
 <import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>cloud</name><operator>.</operator><name>ZkStateReader</name><operator>.</operator><name>SHARD_ID_PROP</name></name>;</import>
 
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">101</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">104</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>OverseerCollectionProcessor</name> implements <name>Runnable</name></expr><operator>,</operator> <expr><name>ClosableThread</name> <block>{
 
   <expr><specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>CREATESHARD</name> <operator>=</operator> <literal type="string">"createshard"</literal></expr>;
 
  <specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>DELETEREPLICA</name> <operator>=</operator> <literal type="string">"deletereplica"</literal></block></expr>;</expr_stmt>

   <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>COLL_CONF</name> <init>= <expr><literal type="string">"collection.configName"</literal></expr></init></decl>;</decl_stmt>
 
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">236</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">241</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>OverseerCollectionProcessor</name> implements <name>Runnable</name></expr><operator>,</operator> <expr><name>ClosableThread</name> <block>{
         <expr><call><name>createShard</name><argument_list>(<argument><expr><call><name><name>zkStateReader</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>message</name></expr></argument>, <argument><expr><name>results</name></expr></argument>)</argument_list></call></expr>;
       }</block></expr></expr_stmt> <if_stmt><if type="elseif">else if <condition>(<expr><call><name><name>DELETESHARD</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>operation</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
         <expr_stmt><expr><call><name>deleteShard</name><argument_list>(<argument><expr><call><name><name>zkStateReader</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>message</name></expr></argument>, <argument><expr><name>results</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><call><name><name>DELETEREPLICA</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>operation</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name>deleteReplica</name><argument_list>(<argument><expr><call><name><name>zkStateReader</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>message</name></expr></argument>, <argument><expr><name>results</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></if> <else>else <block>{<block_content>
         <throw>throw <expr><operator>new</operator> <call><name>SolrException</name><argument_list>(<argument><expr><name><name>ErrorCode</name><operator>.</operator><name>BAD_REQUEST</name></name></expr></argument>, <argument><expr><literal type="string">"Unknown operation:"</literal>
             <operator>+</operator> <name>operation</name></expr></argument>)</argument_list></call></expr>;</throw>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">254</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">261</literal></expr><operator>,</operator><expr><literal type="number">81</literal> @@ <specifier>public</specifier> <name>class</name> <name>OverseerCollectionProcessor</name> implements <name>Runnable</name></expr><operator>,</operator> <expr><name>ClosableThread</name> <block>{
     <return>return <expr><operator>new</operator> <call><name>OverseerSolrResponse</name><argument_list>(<argument><expr><name>results</name></expr></argument>)</argument_list></call></expr>;</return>
   }</block></expr></expr_stmt>
 
  <function><type><specifier>private</specifier> <name>void</name></type> <name>deleteReplica</name><parameter_list>(<parameter><decl><type><name>ClusterState</name></type> <name>clusterState</name></decl></parameter>, <parameter><decl><type><name>ZkNodeProps</name></type> <name>message</name></decl></parameter>, <parameter><decl><type><name>NamedList</name></type> <name>results</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>KeeperException</name></expr></argument>, <argument><expr><name>InterruptedException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name>checkRequired</name><argument_list>(<argument><expr><name>message</name></expr></argument>, <argument><expr><name>COLLECTION_PROP</name></expr></argument>, <argument><expr><name>SHARD_ID_PROP</name></expr></argument>,<argument><expr><name>REPLICA_PROP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>collectionName</name> <init>= <expr><call><name><name>message</name><operator>.</operator><name>getStr</name></name><argument_list>(<argument><expr><name>COLLECTION_PROP</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>shard</name> <init>= <expr><call><name><name>message</name><operator>.</operator><name>getStr</name></name><argument_list>(<argument><expr><name>SHARD_ID_PROP</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>replicaName</name> <init>= <expr><call><name><name>message</name><operator>.</operator><name>getStr</name></name><argument_list>(<argument><expr><name>REPLICA_PROP</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>DocCollection</name></type> <name>coll</name> <init>= <expr><call><name><name>clusterState</name><operator>.</operator><name>getCollection</name></name><argument_list>(<argument><expr><name>collectionName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Slice</name></type> <name>slice</name> <init>= <expr><call><name><name>coll</name><operator>.</operator><name>getSlice</name></name><argument_list>(<argument><expr><name>shard</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if<condition>(<expr><name>slice</name><operator>==</operator><literal type="null">null</literal></expr>)</condition><block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>SolrException</name><argument_list>(<argument><expr><name><name>ErrorCode</name><operator>.</operator><name>BAD_REQUEST</name></name></expr></argument>, <argument><expr><literal type="string">"Invalid shard name : "</literal><operator>+</operator><name>shard</name><operator>+</operator><literal type="string">" in collection : "</literal><operator>+</operator> <name>collectionName</name></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></if></if_stmt>
    <decl_stmt><decl><type><name>Replica</name></type> <name>replica</name> <init>= <expr><call><name><name>slice</name><operator>.</operator><name>getReplica</name></name><argument_list>(<argument><expr><name>replicaName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if<condition>(<expr><name>replica</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>SolrException</name><argument_list>(<argument><expr><name><name>ErrorCode</name><operator>.</operator><name>BAD_REQUEST</name></name></expr></argument>, <argument><expr><literal type="string">"Invalid shard name : "</literal><operator>+</operator><name>shard</name><operator>+</operator><literal type="string">" in collection : "</literal><operator>+</operator> <name>collectionName</name></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></if></if_stmt>

    <decl_stmt><decl><type><name>String</name></type> <name>baseUrl</name> <init>= <expr><call><name><name>replica</name><operator>.</operator><name>getStr</name></name><argument_list>(<argument><expr><name><name>ZkStateReader</name><operator>.</operator><name>BASE_URL_PROP</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>core</name> <init>= <expr><call><name><name>replica</name><operator>.</operator><name>getStr</name></name><argument_list>(<argument><expr><name><name>ZkStateReader</name><operator>.</operator><name>CORE_NAME_PROP</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <comment type="line">//assume the core exists and try to unload it</comment>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>Slice</name><operator>.</operator><name>ACTIVE</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><call><name><name>replica</name><operator>.</operator><name>getStr</name></name><argument_list>(<argument><expr><name><name>Slice</name><operator>.</operator><name>STATE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name>deleteCoreNode</name><argument_list>(<argument><expr><name>collectionName</name></expr></argument>, <argument><expr><name>replicaName</name></expr></argument>, <argument><expr><name>replica</name></expr></argument>, <argument><expr><name>core</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <if_stmt><if>if<condition>(<expr><call><name>waitForCoreNodeGone</name><argument_list>(<argument><expr><name>collectionName</name></expr></argument>, <argument><expr><name>shard</name></expr></argument>, <argument><expr><name>replicaName</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>
    </block_content>}</block></if> <else>else <block>{<block_content>
    <decl_stmt><decl><type><name>Map</name></type> <name>m</name> <init>= <expr><call><name><name>ZkNodeProps</name><operator>.</operator><name>makeMap</name></name><argument_list>(<argument><expr><literal type="string">"qt"</literal></expr></argument>, <argument><expr><name>adminPath</name></expr></argument>,
        <argument><expr><name><name>CoreAdminParams</name><operator>.</operator><name>ACTION</name></name></expr></argument>, <argument><expr><call><name><name>CoreAdminAction</name><operator>.</operator><name>UNLOAD</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>,
        <argument><expr><name><name>CoreAdminParams</name><operator>.</operator><name>CORE</name></name></expr></argument>, <argument><expr><name>core</name></expr></argument>)</argument_list></call></expr></init></decl> ;</decl_stmt>

      <decl_stmt><decl><type><name>ShardRequest</name></type> <name>sreq</name> <init>= <expr><operator>new</operator> <call><name>ShardRequest</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><name><name>sreq</name><operator>.</operator><name>purpose</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
      <if_stmt><if>if <condition>(<expr><call><name><name>baseUrl</name><operator>.</operator><name>startsWith</name></name><argument_list>(<argument><expr><literal type="string">"http://"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>baseUrl</name> <operator>=</operator> <call><name><name>baseUrl</name><operator>.</operator><name>substring</name></name><argument_list>(<argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
      <expr_stmt><expr><name><name>sreq</name><operator>.</operator><name>shards</name></name> <operator>=</operator> <operator>new</operator> <name><name>String</name><index>[]</index></name><block>{<expr><name>baseUrl</name></expr>}</block></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>sreq</name><operator>.</operator><name>actualShards</name></name> <operator>=</operator> <name><name>sreq</name><operator>.</operator><name>shards</name></name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>sreq</name><operator>.</operator><name>params</name></name> <operator>=</operator> <operator>new</operator> <call><name>ModifiableSolrParams</name><argument_list>(<argument><expr><operator>new</operator> <call><name>MapSolrParams</name><argument_list>(<argument><expr><name>m</name></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
      <try>try <block>{<block_content>
        <expr_stmt><expr><call><name><name>shardHandler</name><operator>.</operator><name>submit</name></name><argument_list>(<argument><expr><name>sreq</name></expr></argument>, <argument><expr><name>baseUrl</name></expr></argument>, <argument><expr><name><name>sreq</name><operator>.</operator><name>params</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Exception trying to unload core "</literal><operator>+</operator><name>sreq</name></expr></argument>,<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></catch></try>
      <if_stmt><if>if <condition>(<expr><call><name>waitForCoreNodeGone</name><argument_list>(<argument><expr><name>collectionName</name></expr></argument>, <argument><expr><name>shard</name></expr></argument>, <argument><expr><name>replicaName</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt><comment type="line">//check if the core unload removed the corenode zk enry</comment>
      <expr_stmt><expr><call><name>deleteCoreNode</name><argument_list>(<argument><expr><name>collectionName</name></expr></argument>, <argument><expr><name>replicaName</name></expr></argument>, <argument><expr><name>replica</name></expr></argument>, <argument><expr><name>core</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// this could be because the core is gone but not updated in ZK yet (race condition)</comment>
      <if_stmt><if>if<condition>(<expr><call><name>waitForCoreNodeGone</name><argument_list>(<argument><expr><name>collectionName</name></expr></argument>, <argument><expr><name>shard</name></expr></argument>, <argument><expr><name>replicaName</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>
    <throw>throw <expr><operator>new</operator> <call><name>SolrException</name><argument_list>(<argument><expr><name><name>ErrorCode</name><operator>.</operator><name>SERVER_ERROR</name></name></expr></argument>, <argument><expr><literal type="string">"Could not  remove replica : "</literal><operator>+</operator><name>collectionName</name><operator>+</operator><literal type="string">"/"</literal><operator>+</operator><name>shard</name><operator>+</operator><literal type="string">"/"</literal><operator>+</operator><name>replicaName</name></expr></argument>)</argument_list></call></expr>;</throw>
  </block_content>}</block></function>

  <function><type><specifier>private</specifier> <name>boolean</name></type> <name>waitForCoreNodeGone</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>collectionName</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>shard</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>replicaName</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>InterruptedException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>long</name></type> <name>waitUntil</name> <init>= <expr><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="number">30000</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>boolean</name></type> <name>deleted</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
    <while>while <condition>(<expr><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call> <operator>&lt;</operator> <name>waitUntil</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>Thread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>deleted</name> <operator>=</operator> <call><name><name>zkStateReader</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCollection</name><argument_list>(<argument><expr><name>collectionName</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getSlice</name><argument_list>(<argument><expr><name>shard</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getReplica</name><argument_list>(<argument><expr><name>replicaName</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="null">null</literal></expr>;</expr_stmt>
      <if_stmt><if>if <condition>(<expr><name>deleted</name></expr>)</condition><block type="pseudo"><block_content> <break>break;</break></block_content></block></if></if_stmt>
    </block_content>}</block></while>
    <return>return <expr><name>deleted</name></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>private</specifier> <name>void</name></type> <name>deleteCoreNode</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>collectionName</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>replicaName</name></decl></parameter>, <parameter><decl><type><name>Replica</name></type> <name>replica</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>core</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>KeeperException</name></expr></argument>, <argument><expr><name>InterruptedException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>ZkNodeProps</name></type> <name>m</name> <init>= <expr><operator>new</operator> <call><name>ZkNodeProps</name><argument_list>(
        <argument><expr><name><name>Overseer</name><operator>.</operator><name>QUEUE_OPERATION</name></name></expr></argument>, <argument><expr><name><name>Overseer</name><operator>.</operator><name>DELETECORE</name></name></expr></argument>,
        <argument><expr><name><name>ZkStateReader</name><operator>.</operator><name>CORE_NAME_PROP</name></name></expr></argument>, <argument><expr><name>core</name></expr></argument>,
        <argument><expr><name><name>ZkStateReader</name><operator>.</operator><name>NODE_NAME_PROP</name></name></expr></argument>, <argument><expr><call><name><name>replica</name><operator>.</operator><name>getStr</name></name><argument_list>(<argument><expr><name><name>ZkStateReader</name><operator>.</operator><name>NODE_NAME_PROP</name></name></expr></argument>)</argument_list></call></expr></argument>,
        <argument><expr><name><name>ZkStateReader</name><operator>.</operator><name>COLLECTION_PROP</name></name></expr></argument>, <argument><expr><name>collectionName</name></expr></argument>,
        <argument><expr><name><name>ZkStateReader</name><operator>.</operator><name>CORE_NODE_NAME_PROP</name></name></expr></argument>, <argument><expr><name>replicaName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>Overseer</name><operator>.</operator><name>getInQueue</name></name><argument_list>(<argument><expr><call><name><name>zkStateReader</name><operator>.</operator><name>getZkClient</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>offer</name><argument_list>(<argument><expr><call><name><name>ZkStateReader</name><operator>.</operator><name>toJSON</name></name><argument_list>(<argument><expr><name>m</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><type><specifier>private</specifier> <name>void</name></type> <name>checkRequired</name><parameter_list>(<parameter><decl><type><name>ZkNodeProps</name></type> <name>message</name></decl></parameter>, <parameter><decl><type><name>String</name><modifier>...</modifier></type> <name>props</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <for>for <control>(<init><decl><type><name>String</name></type> <name>prop</name> <range>: <expr><name>props</name></expr></range></decl></init>)</control> <block>{<block_content>
      <if_stmt><if>if<condition>(<expr><call><name><name>message</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>prop</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><block>{<block_content>
        <throw>throw <expr><operator>new</operator> <call><name>SolrException</name><argument_list>(<argument><expr><name><name>ErrorCode</name><operator>.</operator><name>BAD_REQUEST</name></name></expr></argument>, <argument><expr><call><name><name>StrUtils</name><operator>.</operator><name>join</name></name><argument_list>(<argument><expr><call><name><name>Arrays</name><operator>.</operator><name>asList</name></name><argument_list>(<argument><expr><name>props</name></expr></argument>)</argument_list></call></expr></argument>,<argument><expr><literal type="char">','</literal></expr></argument>)</argument_list></call> <operator>+</operator><literal type="string">" are required params"</literal></expr></argument> )</argument_list></call></expr>;</throw>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>

  </block_content>}</block></function>

   <function><type><specifier>private</specifier> <name>void</name></type> <name>deleteCollection</name><parameter_list>(<parameter><decl><type><name>ZkNodeProps</name></type> <name>message</name></decl></parameter>, <parameter><decl><type><name>NamedList</name></type> <name>results</name></decl></parameter>)</parameter_list>
       <throws>throws <argument><expr><name>KeeperException</name></expr></argument>, <argument><expr><name>InterruptedException</name></expr></argument></throws> <block>{<block_content>
     <decl_stmt><decl><type><name>String</name></type> <name>collection</name> <init>= <expr><call><name><name>message</name><operator>.</operator><name>getStr</name></name><argument_list>(<argument><expr><literal type="string">"name"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ZkController</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ZkController</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>f56aa62fe02</name><operator>..</operator><name>d32f37db637</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ZkController</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ZkController</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">1356</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">1356</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>ZkController</name> <block>{
   }</block>
 
   <specifier>public</specifier> <name>void</name> <call><name>preRegister</name><argument_list>(<argument><expr><name>CoreDescriptor</name> <name>cd</name></expr></argument> )</argument_list></call> <block>{
    

     <expr><name>String</name> <name>coreNodeName</name> <operator>=</operator> <call><name>getCoreNodeName</name><argument_list>(<argument><expr><name>cd</name></expr></argument>)</argument_list></call></expr>;
 
     <comment type="line">// make sure the node name is set on the descriptor</comment>
@@ <operator>-</operator><literal type="number">1367</literal><operator>,</operator><literal type="number">6</literal> <operator>+</operator><literal type="number">1367</literal><operator>,</operator><literal type="number">21</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>ZkController</name> <block>{
     <comment type="line">// before becoming available, make sure we are not live and active</comment>
     <comment type="line">// this also gets us our assigned shard id if it was not specified</comment>
     <try>try <block>{<block_content>
      <if_stmt><if>if<condition>(<expr><call><name><name>cd</name><operator>.</operator><name>getCloudDescriptor</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCollectionName</name><argument_list>()</argument_list></call> <operator>!=</operator><literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>cd</name><operator>.</operator><name>getCloudDescriptor</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCoreNodeName</name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr> )</condition> <block>{<block_content>
        <comment type="line">//we were already registered</comment>
        <if_stmt><if>if<condition>(<expr><call><name><name>zkStateReader</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>hasCollection</name><argument_list>(<argument><expr><call><name><name>cd</name><operator>.</operator><name>getCloudDescriptor</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCollectionName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><block>{<block_content>
        <decl_stmt><decl><type><name>DocCollection</name></type> <name>coll</name> <init>= <expr><call><name><name>zkStateReader</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCollection</name><argument_list>(<argument><expr><call><name><name>cd</name><operator>.</operator><name>getCloudDescriptor</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCollectionName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <if_stmt><if>if<condition>(<expr><operator>!</operator><literal type="string">"true"</literal><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><call><name><name>coll</name><operator>.</operator><name>getStr</name></name><argument_list>(<argument><expr><literal type="string">"autoCreated"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><block>{<block_content>
           <decl_stmt><decl><type><name>Slice</name></type> <name>slice</name> <init>= <expr><call><name><name>coll</name><operator>.</operator><name>getSlice</name></name><argument_list>(<argument><expr><call><name><name>cd</name><operator>.</operator><name>getCloudDescriptor</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getShardId</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
           <if_stmt><if>if<condition>(<expr><name>slice</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><block>{<block_content>
             <if_stmt><if>if<condition>(<expr><call><name><name>slice</name><operator>.</operator><name>getReplica</name></name><argument_list>(<argument><expr><call><name><name>cd</name><operator>.</operator><name>getCloudDescriptor</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCoreNodeName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
               <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"core_removed This core is removed from ZK"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
               <throw>throw <expr><operator>new</operator> <call><name>SolrException</name><argument_list>(<argument><expr><name><name>ErrorCode</name><operator>.</operator><name>NOT_FOUND</name></name></expr></argument>,<argument><expr><name>coreNodeName</name> <operator>+</operator><literal type="string">" is removed"</literal></expr></argument>)</argument_list></call></expr>;</throw>
             </block_content>}</block></if></if_stmt>
           </block_content>}</block></if></if_stmt>
         </block_content>}</block></if></if_stmt>
        </block_content>}</block></if></if_stmt>
      </block_content>}</block></if></if_stmt>
       <expr_stmt><expr><call><name>publish</name><argument_list>(<argument><expr><name>cd</name></expr></argument>, <argument><expr><name><name>ZkStateReader</name><operator>.</operator><name>DOWN</name></name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>KeeperException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
       <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>error</name></name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>CoreDescriptor</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>CoreDescriptor</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>b85fb78ddab</name><operator>..</operator><literal type="number">85f3d9ae378</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>CoreDescriptor</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>CoreDescriptor</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">183</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">183</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>CoreDescriptor</name> <block>{
 
     <comment type="line">// TODO maybe make this a CloudCoreDescriptor subclass?</comment>
     <if_stmt><if>if <condition>(<expr><call><name><name>container</name><operator>.</operator><name>isZooKeeperAware</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>cloudDesc</name> <operator>=</operator> <operator>new</operator> <call><name>CloudDescriptor</name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><name>coreProperties</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>cloudDesc</name> <operator>=</operator> <operator>new</operator> <call><name>CloudDescriptor</name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><name>coreProperties</name></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <if_stmt><if>if <condition>(<expr><name>params</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
         <expr_stmt><expr><call><name><name>cloudDesc</name><operator>.</operator><name>setParams</name></name><argument_list>(<argument><expr><name>params</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>CollectionsHandler</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>CollectionsHandler</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>f8b8420bf62</name><operator>..</operator><literal type="number">843397d14eb</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>CollectionsHandler</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>CollectionsHandler</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">56</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">56</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>cloud</name><operator>.</operator><name>Overseer</name><operator>.</operator><name>QUEUE_OPERATION</name></name>;</import>
 <import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>cloud</name><operator>.</operator><name>OverseerCollectionProcessor</name><operator>.</operator><name>COLL_CONF</name></name>;</import>
 <import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>cloud</name><operator>.</operator><name>OverseerCollectionProcessor</name><operator>.</operator><name>CREATESHARD</name></name>;</import>
 <import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>cloud</name><operator>.</operator><name>OverseerCollectionProcessor</name><operator>.</operator><name>CREATE_NODE_SET</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>cloud</name><operator>.</operator><name>OverseerCollectionProcessor</name><operator>.</operator><name>DELETEREPLICA</name></name>;</import>
 <import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>cloud</name><operator>.</operator><name>OverseerCollectionProcessor</name><operator>.</operator><name>MAX_SHARDS_PER_NODE</name></name>;</import>
 <import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>cloud</name><operator>.</operator><name>OverseerCollectionProcessor</name><operator>.</operator><name>NUM_SLICES</name></name>;</import>
 <import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>cloud</name><operator>.</operator><name>OverseerCollectionProcessor</name><operator>.</operator><name>REPLICATION_FACTOR</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">164</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">165</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>CollectionsHandler</name> extends <name>RequestHandlerBase</name> <block>{
         <expr><call><name><name>this</name><operator>.</operator><name>handleCreateShard</name></name><argument_list>(<argument><expr><name>req</name></expr></argument>, <argument><expr><name>rsp</name></expr></argument>)</argument_list></call></expr>;</block></expr></expr_stmt>
         <break>break;</break>
       </block_content>}</block></if></if_stmt></block></expr></expr_stmt>
      <case>case <expr><name>DELETEREPLICA</name></expr>:</case> <block>{<block_content>
        <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>handleRemoveReplica</name></name><argument_list>(<argument><expr><name>req</name></expr></argument>, <argument><expr><name>rsp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <break>break;</break>
      </block_content>}</block>
 
       <default>default:</default> <block>{<block_content>
           <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(<argument><expr><literal type="string">"Unknown action: "</literal> <operator>+</operator> <name>action</name></expr></argument>)</argument_list></call></expr>;</throw>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">295</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">300</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>CollectionsHandler</name> extends <name>RequestHandlerBase</name> <block>{
           <expr><literal type="string">"Collection name is required to create a new collection"</literal></expr>)</block></expr>;</expr_stmt>
     </block_content>}</block>
     
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>props</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Object</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>props</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name><name>Overseer</name><operator>.</operator><name>QUEUE_OPERATION</name></name></expr></argument>,
        <argument><expr><name><name>OverseerCollectionProcessor</name><operator>.</operator><name>CREATECOLLECTION</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>props</name> <init>= <expr><call><name><name>ZkNodeProps</name><operator>.</operator><name>makeMap</name></name><argument_list>(
        <argument><expr><name><name>Overseer</name><operator>.</operator><name>QUEUE_OPERATION</name></name></expr></argument>,
        <argument><expr><name><name>OverseerCollectionProcessor</name><operator>.</operator><name>CREATECOLLECTION</name></name></expr></argument>,
        <argument><expr><literal type="string">"fromApi"</literal></expr></argument>,<argument><expr><literal type="string">"true"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>copyIfNotNull</name><argument_list>(<argument><expr><call><name><name>req</name><operator>.</operator><name>getParams</name></name><argument_list>()</argument_list></call></expr></argument>,<argument><expr><name>props</name></expr></argument>,
         <argument><expr><literal type="string">"name"</literal></expr></argument>,
         <argument><expr><name>REPLICATION_FACTOR</name></expr></argument>,
<argument>@@ <expr><operator>-</operator><literal type="number">314</literal></expr></argument>,<argument><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">319</literal></expr></argument>,<argument><expr><literal type="number">16</literal> @@ <specifier>public</specifier> class <name>CollectionsHandler</name> extends <name>RequestHandlerBase</name> <block>{
     <expr><call><name>handleResponse</name><argument_list>(<argument><expr><name><name>OverseerCollectionProcessor</name><operator>.</operator><name>CREATECOLLECTION</name></name></expr></argument>, <argument><expr><name>m</name></expr></argument>, <argument><expr><name>rsp</name></expr></argument>)</argument_list></call></expr>;
   }</block></expr></argument></argument_list></call></expr></expr_stmt>
 
  <function><type><specifier>private</specifier> <name>void</name></type> <name>handleRemoveReplica</name><parameter_list>(<parameter><decl><type><name>SolrQueryRequest</name></type> <name>req</name></decl></parameter>, <parameter><decl><type><name>SolrQueryResponse</name></type> <name>rsp</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>KeeperException</name></expr></argument>, <argument><expr><name>InterruptedException</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Remove replica: "</literal> <operator>+</operator> <call><name><name>req</name><operator>.</operator><name>getParamString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>req</name><operator>.</operator><name>getParams</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>required</name><argument_list>()</argument_list></call><operator>.</operator><call><name>check</name><argument_list>(<argument><expr><name>COLLECTION_PROP</name></expr></argument>, <argument><expr><name>SHARD_ID_PROP</name></expr></argument>, <argument><expr><literal type="string">"replica"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>map</name> <init>= <expr><call><name>makeMap</name><argument_list>(<argument><expr><name>QUEUE_OPERATION</name></expr></argument>, <argument><expr><name>DELETEREPLICA</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>copyIfNotNull</name><argument_list>(<argument><expr><call><name><name>req</name><operator>.</operator><name>getParams</name></name><argument_list>()</argument_list></call></expr></argument>,<argument><expr><name>map</name></expr></argument>,<argument><expr><name>COLLECTION_PROP</name></expr></argument>,<argument><expr><name>SHARD_ID_PROP</name></expr></argument>,<argument><expr><literal type="string">"replica"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>ZkNodeProps</name></type> <name>m</name> <init>= <expr><operator>new</operator> <call><name>ZkNodeProps</name><argument_list>(<argument><expr><name>map</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>handleResponse</name><argument_list>(<argument><expr><name>DELETEREPLICA</name></expr></argument>, <argument><expr><name>m</name></expr></argument>, <argument><expr><name>rsp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>


   <function><type><specifier>private</specifier> <name>void</name></type> <name>handleCreateShard</name><parameter_list>(<parameter><decl><type><name>SolrQueryRequest</name></type> <name>req</name></decl></parameter>, <parameter><decl><type><name>SolrQueryResponse</name></type> <name>rsp</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>KeeperException</name></expr></argument>, <argument><expr><name>InterruptedException</name></expr></argument></throws> <block>{<block_content>
     <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Create shard: "</literal> <operator>+</operator> <call><name><name>req</name><operator>.</operator><name>getParamString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>req</name><operator>.</operator><name>getParams</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>required</name><argument_list>()</argument_list></call><operator>.</operator><call><name>check</name><argument_list>(<argument><expr><name>COLLECTION_PROP</name></expr></argument>, <argument><expr><name>SHARD_ID_PROP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>TestRandomDVFaceting</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>TestRandomDVFaceting</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">19d945b0d4f</literal><operator>..</operator><literal type="number">19ea8540e35</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>TestRandomDVFaceting</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>TestRandomDVFaceting</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">220</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">220</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestRandomDVFaceting</name> extends <name>SolrTestCaseJ4</name> <block>{
       <for>for <control>(<init><decl><type><name>String</name></type> <name>method</name> <range>: <expr><name>methods</name></expr></range></decl></init>)</control> <block>{<block_content>
         <if_stmt><if>if <condition>(<expr><call><name><name>method</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><literal type="string">"dv"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
           <expr_stmt><expr><call><name><name>params</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"facet.field"</literal></expr></argument>, <argument><expr><literal type="string">"{!key="</literal><operator>+</operator><name>facet_field</name><operator>+</operator><literal type="string">"}"</literal><operator>+</operator><name>facet_field</name><operator>+</operator><literal type="string">"_dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>params</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"facet.method"</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>params</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"facet.method"</literal></expr></argument>,<argument><expr><operator>(</operator><name>String</name><operator>)</operator> <literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></if> <else>else <block>{<block_content>
           <expr_stmt><expr><call><name><name>params</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"facet.field"</literal></expr></argument>, <argument><expr><name>facet_field</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           <expr_stmt><expr><call><name><name>params</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"facet.method"</literal></expr></argument>, <argument><expr><name>method</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>CollectionsAPIDistributedZkTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>CollectionsAPIDistributedZkTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">795cdc22359</literal><operator>..</operator><name>b0a059dae23</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>CollectionsAPIDistributedZkTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>CollectionsAPIDistributedZkTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">905</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">905</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>CollectionsAPIDistributedZkTest</name> extends <name>AbstractFullDistribZkTestBa</name>
     <throw>throw <argument_list>new <argument><expr><call><name>RuntimeException</name><argument_list>(<argument><expr><literal type="string">"Could not find a live node for collection:"</literal> <operator>+</operator> <name>collection</name></expr></argument>)</argument_list></call></expr></argument></argument_list></throw></expr>;</expr_stmt>
   </block_content>}</block></else></if_stmt>
 
  <decl_stmt><decl><type><specifier>private</specifier> <name>void</name></type> <name>waitForNon403or404or503</name><argument_list>(<argument><expr><name>HttpSolrServer</name> <name>collectionClient</name></expr></argument>)</argument_list>
<comment type="block">/*  private void waitForNon403or404or503(HttpSolrServer collectionClient)
       throws Exception {
     SolrException exp = null;
     long timeoutAt = System.currentTimeMillis() + 30000;
@@ -929,7 +929,7 @@ public class CollectionsAPIDistributedZkTest extends AbstractFullDistribZkTestBa
     }
 
     fail("Could not find the new collection - " + exp.code() + " : " + collectionClient.getBaseURL());
  }
  }*/</comment>
   
   private <name>void</name> <name>checkForMissingCollection</name><argument_list>(<argument><expr><name>String</name> <name>collectionName</name></expr></argument>)</argument_list>
       <throws>throws <argument><expr><name>Exception</name> <block>{
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>CustomCollectionTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>CustomCollectionTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">95255566fb0</literal><operator>..</operator><name>d96d6f90bde</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>CustomCollectionTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>CustomCollectionTest</name><operator>.</operator><name>java</name></name></expr></block></expr></argument>
@<argument>@ <expr><operator>-</operator><literal type="number">468</literal></expr></argument>,<argument><expr><literal type="number">55</literal> <operator>+</operator><literal type="number">468</literal></expr></argument>,<argument><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>CustomCollectionTest</name> extends <name>AbstractFullDistribZkTestBase</name></expr></argument></throws> <block>{<block_content>
   </block_content>}</block></decl></decl_stmt>
 
 
  <function><type><specifier>public</specifier> <specifier>static</specifier> <name>String</name></type> <name>getUrlFromZk</name><parameter_list>(<parameter><decl><type><name>ClusterState</name></type> <name>clusterState</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>collection</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Slice</name></argument>&gt;</argument_list></name></type> <name>slices</name> <init>= <expr><call><name><name>clusterState</name><operator>.</operator><name>getCollectionStates</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name>collection</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getSlicesMap</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt><if>if <condition>(<expr><name>slices</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>SolrException</name><argument_list>(<argument><expr><name><name>ErrorCode</name><operator>.</operator><name>BAD_REQUEST</name></name></expr></argument>, <argument><expr><literal type="string">"Could not find collection:"</literal> <operator>+</operator> <name>collection</name></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></if></if_stmt>

    <for>for <control>(<init><decl><type><name><name>Map</name><operator>.</operator><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Slice</name></argument>&gt;</argument_list></name></name></type> <name>entry</name> <range>: <expr><call><name><name>slices</name><operator>.</operator><name>entrySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
      <decl_stmt><decl><type><name>Slice</name></type> <name>slice</name> <init>= <expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Replica</name></argument>&gt;</argument_list></name></type> <name>shards</name> <init>= <expr><call><name><name>slice</name><operator>.</operator><name>getReplicasMap</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name><name>Map</name><operator>.</operator><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Replica</name></argument>&gt;</argument_list></name></name></argument>&gt;</argument_list></name></type> <name>shardEntries</name> <init>= <expr><call><name><name>shards</name><operator>.</operator><name>entrySet</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <for>for <control>(<init><decl><type><name><name>Map</name><operator>.</operator><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Replica</name></argument>&gt;</argument_list></name></name></type> <name>shardEntry</name> <range>: <expr><name>shardEntries</name></expr></range></decl></init>)</control> <block>{<block_content>
        <decl_stmt><decl><type><specifier>final</specifier> <name>ZkNodeProps</name></type> <name>node</name> <init>= <expr><call><name><name>shardEntry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><call><name><name>clusterState</name><operator>.</operator><name>liveNodesContain</name></name><argument_list>(<argument><expr><call><name><name>node</name><operator>.</operator><name>getStr</name></name><argument_list>(<argument><expr><name><name>ZkStateReader</name><operator>.</operator><name>NODE_NAME_PROP</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
          <return>return <expr><call><name><name>ZkCoreNodeProps</name><operator>.</operator><name>getCoreUrl</name></name><argument_list>(<argument><expr><call><name><name>node</name><operator>.</operator><name>getStr</name></name><argument_list>(<argument><expr><name><name>ZkStateReader</name><operator>.</operator><name>BASE_URL_PROP</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>collection</name></expr></argument>)</argument_list></call></expr>;</return> <comment type="line">//new ZkCoreNodeProps(node).getCoreUrl();</comment>
        </block_content>}</block></if></if_stmt>
      </block_content>}</block></for>
    </block_content>}</block></for>

    <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(<argument><expr><literal type="string">"Could not find a live node for collection:"</literal> <operator>+</operator> <name>collection</name></expr></argument>)</argument_list></call></expr>;</throw>
  </block_content>}</block></function>

  <function><type><specifier>private</specifier> <name>void</name></type> <name>waitForNon403or404or503</name><parameter_list>(<parameter><decl><type><name>HttpSolrServer</name></type> <name>collectionClient</name></decl></parameter>)</parameter_list>
      <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>SolrException</name></type> <name>exp</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>long</name></type> <name>timeoutAt</name> <init>= <expr><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="number">30000</literal></expr></init></decl>;</decl_stmt>

    <while>while <condition>(<expr><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call> <operator>&lt;</operator> <name>timeoutAt</name></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>boolean</name></type> <name>missing</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>

      <try>try <block>{<block_content>
        <expr_stmt><expr><call><name><name>collectionClient</name><operator>.</operator><name>query</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>SolrQuery</name><argument_list>(<argument><expr><literal type="string">"*:*"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>SolrException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><call><name><name>e</name><operator>.</operator><name>code</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="number">403</literal> <operator>||</operator> <call><name><name>e</name><operator>.</operator><name>code</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="number">503</literal> <operator>||</operator> <call><name><name>e</name><operator>.</operator><name>code</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="number">404</literal><operator>)</operator></expr>)</condition> <block>{<block_content>
          <throw>throw <expr><name>e</name></expr>;</throw>
        </block_content>}</block></if></if_stmt>
        <expr_stmt><expr><name>exp</name> <operator>=</operator> <name>e</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>missing</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
      </block_content>}</block></catch></try>
      <if_stmt><if>if <condition>(<expr><operator>!</operator><name>missing</name></expr>)</condition> <block>{<block_content>
        <return>return;</return>
      </block_content>}</block></if></if_stmt>
      <expr_stmt><expr><call><name><name>Thread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><literal type="number">50</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>

    <expr_stmt><expr><call><name>fail</name><argument_list>(<argument><expr><literal type="string">"Could not find the new collection - "</literal> <operator>+</operator> <call><name><name>exp</name><operator>.</operator><name>code</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">" : "</literal> <operator>+</operator> <call><name><name>collectionClient</name><operator>.</operator><name>getBaseURL</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>


   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>protected</specifier> <name>QueryResponse</name></type> <name>queryServer</name><parameter_list>(<parameter><decl><type><name>ModifiableSolrParams</name></type> <name>params</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>SolrServerException</name></expr></argument></throws> <block>{<block_content>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>DeleteInactiveReplicaTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>DeleteInactiveReplicaTest</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">00000000000..82bcffc8ddb</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>DeleteInactiveReplicaTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">91</literal> @@</expr></expr_stmt>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>cloud</name></name>;</package>

<comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>client</name><operator>.</operator><name>solrj</name><operator>.</operator><name>embedded</name><operator>.</operator><name>JettySolrRunner</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>client</name><operator>.</operator><name>solrj</name><operator>.</operator><name>impl</name><operator>.</operator><name>CloudSolrServer</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>client</name><operator>.</operator><name>solrj</name><operator>.</operator><name>impl</name><operator>.</operator><name>HttpSolrServer</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>client</name><operator>.</operator><name>solrj</name><operator>.</operator><name>request</name><operator>.</operator><name>QueryRequest</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>cloud</name><operator>.</operator><name>DocCollection</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>cloud</name><operator>.</operator><name>Replica</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>cloud</name><operator>.</operator><name>Slice</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>cloud</name><operator>.</operator><name>ZkStateReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>params</name><operator>.</operator><name>MapSolrParams</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>NamedList</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>

<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>cloud</name><operator>.</operator><name>ZkNodeProps</name><operator>.</operator><name>makeMap</name></name>;</import>

<class><specifier>public</specifier> class <name>DeleteInactiveReplicaTest</name> <super_list><extends>extends <super><name>DeleteReplicaTest</name></super></extends></super_list><block>{
  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>doTest</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name>deleteInactiveReplicaTest</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><type><specifier>private</specifier> <name>void</name></type> <name>deleteInactiveReplicaTest</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws><block>{<block_content>
    <decl_stmt><decl><type><name>String</name></type> <name>COLL_NAME</name> <init>= <expr><literal type="string">"delDeadColl"</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>CloudSolrServer</name></type> <name>client</name> <init>= <expr><call><name>createCloudClient</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>createCloudClient</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>createColl</name><argument_list>(<argument><expr><name>COLL_NAME</name></expr></argument>, <argument><expr><name>client</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>DocCollection</name></type> <name>testcoll</name> <init>= <expr><call><name>getCommonCloudSolrServer</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getZkStateReader</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClusterState</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCollection</name><argument_list>(<argument><expr><name>COLL_NAME</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>Slice</name></type> <name>shard1</name> <init>= <expr><call><name><name>testcoll</name><operator>.</operator><name>getSlices</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>iterator</name><argument_list>()</argument_list></call><operator>.</operator><call><name>next</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if<condition>(<expr><operator>!</operator><call><name><name>shard1</name><operator>.</operator><name>getState</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name><name>Slice</name><operator>.</operator><name>ACTIVE</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>fail</name><argument_list>(<argument><expr><literal type="string">"shard is not active"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <decl_stmt><decl><type><name>Replica</name></type> <name>replica1</name> <init>= <expr><call><name><name>shard1</name><operator>.</operator><name>getReplicas</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>iterator</name><argument_list>()</argument_list></call><operator>.</operator><call><name>next</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>boolean</name></type> <name>stopped</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>JettySolrRunner</name></type> <name>stoppedJetty</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>StringBuilder</name></type> <name>sb</name> <init>= <expr><operator>new</operator> <call><name>StringBuilder</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <for>for <control>(<init><decl><type><name>JettySolrRunner</name></type> <name>jetty</name> <range>: <expr><name>jettys</name></expr></range></decl></init>)</control> <block>{<block_content>
      <expr_stmt><expr><call><name><name>sb</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><call><name><name>jetty</name><operator>.</operator><name>getBaseUrl</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>append</name><argument_list>(<argument><expr><literal type="string">","</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <if_stmt><if>if<condition>( <expr><call><name><name>jetty</name><operator>.</operator><name>getBaseUrl</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call><operator>.</operator><call><name>startsWith</name><argument_list>(<argument><expr><call><name><name>replica1</name><operator>.</operator><name>getStr</name></name><argument_list>(<argument><expr><name><name>ZkStateReader</name><operator>.</operator><name>BASE_URL_PROP</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr> )</condition> <block>{<block_content>
        <expr_stmt><expr><name>stoppedJetty</name> <operator>=</operator> <name>jetty</name></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>ChaosMonkey</name><operator>.</operator><name>stop</name></name><argument_list>(<argument><expr><name>jetty</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>stopped</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
        <break>break;</break>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <if_stmt><if>if<condition>(<expr><operator>!</operator><name>stopped</name></expr>)</condition><block>{<block_content>
      <expr_stmt><expr><call><name>fail</name><argument_list>(<argument><expr><literal type="string">"Could not find jetty for replica "</literal><operator>+</operator> <name>replica1</name> <operator>+</operator> <literal type="string">"jettys: "</literal><operator>+</operator><name>sb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <decl_stmt><decl><type><name>long</name></type> <name>endAt</name> <init>= <expr><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call><operator>+</operator><literal type="number">3000</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>boolean</name></type> <name>success</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
    <while>while<condition>(<expr><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call> <operator>&lt;</operator> <name>endAt</name></expr>)</condition><block>{<block_content>
      <expr_stmt><expr><name>testcoll</name> <operator>=</operator> <call><name>getCommonCloudSolrServer</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getZkStateReader</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClusterState</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCollection</name><argument_list>(<argument><expr><name>COLL_NAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <if_stmt><if>if<condition>(<expr><operator>!</operator><literal type="string">"active"</literal><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><call><name><name>testcoll</name><operator>.</operator><name>getSlice</name></name><argument_list>(<argument><expr><call><name><name>shard1</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getReplica</name><argument_list>(<argument><expr><call><name><name>replica1</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getStr</name><argument_list>(<argument><expr><name><name>Slice</name><operator>.</operator><name>STATE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>  )</condition><block>{<block_content>
        <expr_stmt><expr><name>success</name><operator>=</operator><literal type="boolean">true</literal></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
      <if_stmt><if>if<condition>(<expr><name>success</name></expr>)</condition><block type="pseudo"><block_content> <break>break;</break></block_content></block></if></if_stmt>
      <expr_stmt><expr><call><name><name>Thread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"removed_replicas {}/{} "</literal></expr></argument>,<argument><expr><call><name><name>shard1</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>,<argument><expr><call><name><name>replica1</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>removeAndWaitForReplicaGone</name><argument_list>(<argument><expr><name>COLL_NAME</name></expr></argument>, <argument><expr><name>client</name></expr></argument>, <argument><expr><name>replica1</name></expr></argument>, <argument><expr><call><name><name>shard1</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>client</name><operator>.</operator><name>shutdown</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>ChaosMonkey</name><operator>.</operator><name>start</name></name><argument_list>(<argument><expr><name>stoppedJetty</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"restarted jetty"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    <decl_stmt><decl><type><name>Map</name></type> <name>m</name> <init>= <expr><call><name>makeMap</name><argument_list>(<argument><expr><literal type="string">"qt"</literal></expr></argument>,<argument><expr><literal type="string">"/admin/cores"</literal></expr></argument>,
        <argument><expr><literal type="string">"action"</literal></expr></argument>, <argument><expr><literal type="string">"status"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name><name>NamedList</name><argument_list type="generic">&lt;<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>resp</name> <init>= <expr><operator>new</operator> <call><name>HttpSolrServer</name><argument_list>(<argument><expr><call><name><name>replica1</name><operator>.</operator><name>getStr</name></name><argument_list>(<argument><expr><literal type="string">"base_url"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>request</name><argument_list>(<argument><expr><operator>new</operator> <call><name>QueryRequest</name><argument_list>(<argument><expr><operator>new</operator> <call><name>MapSolrParams</name><argument_list>(<argument><expr><name>m</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>assertNull</name><argument_list>( <argument><expr><literal type="string">"The core is up and running again"</literal></expr></argument> , <argument><expr><operator>(</operator><operator>(</operator><name>NamedList</name><operator>)</operator><call><name><name>resp</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"status"</literal></expr></argument>)</argument_list></call><operator>)</operator><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><call><name><name>replica1</name><operator>.</operator><name>getStr</name></name><argument_list>(<argument><expr><literal type="string">"core"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  </block_content>}</block></function>
}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>DeleteReplicaTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>DeleteReplicaTest</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">00000000000..a6c692392b1</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>DeleteReplicaTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">171</literal> @@</expr></expr_stmt>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>cloud</name></name>;</package>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>Constants</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>client</name><operator>.</operator><name>solrj</name><operator>.</operator><name>SolrRequest</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>client</name><operator>.</operator><name>solrj</name><operator>.</operator><name>SolrServerException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>client</name><operator>.</operator><name>solrj</name><operator>.</operator><name>impl</name><operator>.</operator><name>CloudSolrServer</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>client</name><operator>.</operator><name>solrj</name><operator>.</operator><name>impl</name><operator>.</operator><name>HttpSolrServer</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>client</name><operator>.</operator><name>solrj</name><operator>.</operator><name>request</name><operator>.</operator><name>QueryRequest</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>cloud</name><operator>.</operator><name>DocCollection</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>cloud</name><operator>.</operator><name>Replica</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>cloud</name><operator>.</operator><name>Slice</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>params</name><operator>.</operator><name>MapSolrParams</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>params</name><operator>.</operator><name>ModifiableSolrParams</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>params</name><operator>.</operator><name>SolrParams</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>update</name><operator>.</operator><name>SolrCmdDistributor</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>DefaultSolrThreadFactory</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Before</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>BeforeClass</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>CompletionService</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>ExecutorCompletionService</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>Future</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>SynchronousQueue</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>ThreadPoolExecutor</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>TimeUnit</name></name>;</import>

<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>cloud</name><operator>.</operator><name>OverseerCollectionProcessor</name><operator>.</operator><name>DELETEREPLICA</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>cloud</name><operator>.</operator><name>OverseerCollectionProcessor</name><operator>.</operator><name>MAX_SHARDS_PER_NODE</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>cloud</name><operator>.</operator><name>OverseerCollectionProcessor</name><operator>.</operator><name>NUM_SLICES</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>cloud</name><operator>.</operator><name>OverseerCollectionProcessor</name><operator>.</operator><name>REPLICATION_FACTOR</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>cloud</name><operator>.</operator><name>ZkNodeProps</name><operator>.</operator><name>makeMap</name></name>;</import>

<class><specifier>public</specifier> class <name>DeleteReplicaTest</name> <super_list><extends>extends <super><name>AbstractFullDistribZkTestBase</name></super></extends></super_list> <block>{
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>boolean</name></type> <name>DEBUG</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><type><name>ThreadPoolExecutor</name></type> <name>executor</name> <init>= <expr><operator>new</operator> <call><name>ThreadPoolExecutor</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,
      <argument><expr><name><name>Integer</name><operator>.</operator><name>MAX_VALUE</name></name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><name><name>TimeUnit</name><operator>.</operator><name>SECONDS</name></name></expr></argument>, <argument><expr><operator>new</operator> <call><name><name>SynchronousQueue</name><argument_list type="generic">&lt;<argument><name>Runnable</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></argument>,
      <argument><expr><operator>new</operator> <call><name>DefaultSolrThreadFactory</name><argument_list>(<argument><expr><literal type="string">"testExecutor"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><type><name><name>CompletionService</name><argument_list type="generic">&lt;<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>completionService</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name><name>Future</name><argument_list type="generic">&lt;<argument><name>Object</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>pending</name></decl>;</decl_stmt>

  <function><annotation>@<name>BeforeClass</name></annotation>
  <type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>beforeThisClass2</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name>assumeFalse</name><argument_list>(<argument><expr><literal type="string">"FIXME: This test fails under Java 8 all the time, see SOLR-4711"</literal></expr></argument>, <argument><expr><name><name>Constants</name><operator>.</operator><name>JRE_IS_MINIMUM_JAVA8</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Before</name></annotation>
  <annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>setUp</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>setUp</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"numShards"</literal></expr></argument>, <argument><expr><call><name><name>Integer</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><name>sliceCount</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"solr.xml.persist"</literal></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><type><specifier>protected</specifier> <name>String</name></type> <name>getSolrXml</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><literal type="string">"solr-no-core.xml"</literal></expr>;</return>
  </block_content>}</block></function>


  <constructor><specifier>public</specifier> <name>DeleteReplicaTest</name><parameter_list>()</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name>fixShardCount</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>

    <expr_stmt><expr><name>sliceCount</name> <operator>=</operator> <literal type="number">2</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name>shardCount</name> <operator>=</operator> <literal type="number">4</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name>completionService</name> <operator>=</operator> <operator>new</operator> <call><name><name>ExecutorCompletionService</name><argument_list type="generic">&lt;<argument><name>Object</name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>executor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>pending</name> <operator>=</operator> <operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;<argument><name><name>Future</name><argument_list type="generic">&lt;<argument><name>Object</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>checkCreatedVsState</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>

  </block_content>}</block></constructor>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>protected</specifier> <name>void</name></type> <name>setDistributedParams</name><parameter_list>(<parameter><decl><type><name>ModifiableSolrParams</name></type> <name>params</name></decl></parameter>)</parameter_list> <block>{<block_content>

    <if_stmt><if>if <condition>(<expr><call><name><name>r</name><operator>.</operator><name>nextBoolean</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <comment type="line">// don't set shards, let that be figured out from the cloud state</comment>
    </block_content>}</block></if> <else>else <block>{<block_content>
      <comment type="line">// use shard ids rather than physical locations</comment>
      <decl_stmt><decl><type><name>StringBuilder</name></type> <name>sb</name> <init>= <expr><operator>new</operator> <call><name>StringBuilder</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>shardCount</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name>i</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
          <expr_stmt><expr><call><name><name>sb</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><literal type="char">','</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <expr_stmt><expr><call><name><name>sb</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><literal type="string">"shard"</literal> <operator>+</operator> <operator>(</operator><name>i</name> <operator>+</operator> <literal type="number">3</literal><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></for>
      <expr_stmt><expr><call><name><name>params</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"shards"</literal></expr></argument>, <argument><expr><call><name><name>sb</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
  </block_content>}</block></function>


  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>doTest</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name>deleteLiveReplicaTest</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<comment type="line">//    deleteInactiveReplicaTest();</comment>
<comment type="line">//    super.printLayout();</comment>
  </block_content>}</block></function>






  <function><type><specifier>private</specifier> <name>void</name></type> <name>deleteLiveReplicaTest</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws><block>{<block_content>
    <decl_stmt><decl><type><name>String</name></type> <name>COLL_NAME</name> <init>= <expr><literal type="string">"delLiveColl"</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>CloudSolrServer</name></type> <name>client</name> <init>= <expr><call><name>createCloudClient</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>createColl</name><argument_list>(<argument><expr><name>COLL_NAME</name></expr></argument>, <argument><expr><name>client</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>DocCollection</name></type> <name>testcoll</name> <init>= <expr><call><name>getCommonCloudSolrServer</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getZkStateReader</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClusterState</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCollection</name><argument_list>(<argument><expr><name>COLL_NAME</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>Slice</name></type> <name>shard1</name> <init>= <expr><call><name><name>testcoll</name><operator>.</operator><name>getSlices</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>iterator</name><argument_list>()</argument_list></call><operator>.</operator><call><name>next</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if<condition>(<expr><operator>!</operator><call><name><name>shard1</name><operator>.</operator><name>getState</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name><name>Slice</name><operator>.</operator><name>ACTIVE</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>fail</name><argument_list>(<argument><expr><literal type="string">"shard is not active"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <decl_stmt><decl><type><name>Replica</name></type> <name>replica</name> <init>= <expr><call><name><name>shard1</name><operator>.</operator><name>getReplicas</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>iterator</name><argument_list>()</argument_list></call><operator>.</operator><call><name>next</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name>removeAndWaitForReplicaGone</name><argument_list>(<argument><expr><name>COLL_NAME</name></expr></argument>, <argument><expr><name>client</name></expr></argument>, <argument><expr><name>replica</name></expr></argument>, <argument><expr><call><name><name>shard1</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>client</name><operator>.</operator><name>shutdown</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>


  </block_content>}</block></function>

  <function><type><specifier>protected</specifier> <name>void</name></type> <name>removeAndWaitForReplicaGone</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>COLL_NAME</name></decl></parameter>, <parameter><decl><type><name>CloudSolrServer</name></type> <name>client</name></decl></parameter>, <parameter><decl><type><name>Replica</name></type> <name>replica</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>shard</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>SolrServerException</name></expr></argument>, <argument><expr><name>IOException</name></expr></argument>, <argument><expr><name>InterruptedException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>Map</name></type> <name>m</name> <init>= <expr><call><name>makeMap</name><argument_list>(<argument><expr><literal type="string">"collection"</literal></expr></argument>, <argument><expr><name>COLL_NAME</name></expr></argument>,
     <argument><expr><literal type="string">"action"</literal></expr></argument>, <argument><expr><name>DELETEREPLICA</name></expr></argument>,
    <argument><expr><literal type="string">"shard"</literal></expr></argument>,<argument><expr><name>shard</name></expr></argument>,
    <argument><expr><literal type="string">"replica"</literal></expr></argument>,<argument><expr><call><name><name>replica</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>SolrParams</name></type> <name>params</name> <init>= <expr><operator>new</operator> <call><name>MapSolrParams</name><argument_list>( <argument><expr><name>m</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>SolrRequest</name></type> <name>request</name> <init>= <expr><operator>new</operator> <call><name>QueryRequest</name><argument_list>(<argument><expr><name>params</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>request</name><operator>.</operator><name>setPath</name></name><argument_list>(<argument><expr><literal type="string">"/admin/collections"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>client</name><operator>.</operator><name>request</name></name><argument_list>(<argument><expr><name>request</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>long</name></type> <name>endAt</name> <init>= <expr><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call><operator>+</operator><literal type="number">3000</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>boolean</name></type> <name>success</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>DocCollection</name></type> <name>testcoll</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
    <while>while<condition>(<expr><call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call> <operator>&lt;</operator> <name>endAt</name></expr>)</condition><block>{<block_content>
      <expr_stmt><expr><name>testcoll</name> <operator>=</operator> <call><name>getCommonCloudSolrServer</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getZkStateReader</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClusterState</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCollection</name><argument_list>(<argument><expr><name>COLL_NAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>success</name> <operator>=</operator> <call><name><name>testcoll</name><operator>.</operator><name>getSlice</name></name><argument_list>(<argument><expr><name>shard</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getReplica</name><argument_list>(<argument><expr><call><name><name>replica</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="null">null</literal></expr>;</expr_stmt>
      <if_stmt><if>if<condition>(<expr><name>success</name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"replica cleaned up {}/{} core {}"</literal></expr></argument>,<argument><expr><name>shard</name><operator>+</operator><literal type="string">"/"</literal><operator>+</operator><call><name><name>replica</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>replica</name><operator>.</operator><name>getStr</name></name><argument_list>(<argument><expr><literal type="string">"core"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"current state {}"</literal></expr></argument>, <argument><expr><name>testcoll</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <break>break;</break>
      </block_content>}</block></if></if_stmt>
      <expr_stmt><expr><call><name><name>Thread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></while>
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"Replica not cleaned up"</literal></expr></argument>, <argument><expr><name>success</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><type><specifier>protected</specifier> <name>void</name></type> <name>createColl</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>COLL_NAME</name></decl></parameter>, <parameter><decl><type><name>CloudSolrServer</name></type> <name>client</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>int</name></type> <name>replicationFactor</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>numShards</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>maxShardsPerNode</name> <init>= <expr><operator>(</operator><operator>(</operator><operator>(</operator><operator>(</operator><name>numShards</name><operator>+</operator><literal type="number">1</literal><operator>)</operator> <operator>*</operator> <name>replicationFactor</name><operator>)</operator> <operator>/</operator> <call><name>getCommonCloudSolrServer</name><argument_list>()</argument_list></call>
        <operator>.</operator><call><name>getZkStateReader</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClusterState</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getLiveNodes</name><argument_list>()</argument_list></call><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call><operator>)</operator><operator>)</operator> <operator>+</operator> <literal type="number">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>props</name> <init>= <expr><call><name>makeMap</name><argument_list>(
        <argument><expr><name>REPLICATION_FACTOR</name></expr></argument>, <argument><expr><name>replicationFactor</name></expr></argument>,
        <argument><expr><name>MAX_SHARDS_PER_NODE</name></expr></argument>, <argument><expr><name>maxShardsPerNode</name></expr></argument>,
        <argument><expr><name>NUM_SLICES</name></expr></argument>, <argument><expr><name>numShards</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name><name>List</name><argument_list type="generic">&lt;<argument><name>Integer</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>collectionInfos</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name><name>List</name><argument_list type="generic">&lt;<argument><name>Integer</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>createCollection</name><argument_list>(<argument><expr><name>collectionInfos</name></expr></argument>, <argument><expr><name>COLL_NAME</name></expr></argument>, <argument><expr><name>props</name></expr></argument>, <argument><expr><name>client</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name><name>Map</name><operator>.</operator><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name><name>List</name><argument_list type="generic">&lt;<argument><name>Integer</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></name></argument>&gt;</argument_list></name></type> <name>collectionInfosEntrySet</name> <init>= <expr><call><name><name>collectionInfos</name><operator>.</operator><name>entrySet</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <for>for <control>(<init><decl><type><name><name>Map</name><operator>.</operator><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name><name>List</name><argument_list type="generic">&lt;<argument><name>Integer</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></name></type> <name>entry</name> <range>: <expr><name>collectionInfosEntrySet</name></expr></range></decl></init>)</control> <block>{<block_content>
      <decl_stmt><decl><type><name>String</name></type> <name>collection</name> <init>= <expr><call><name><name>entry</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>Integer</name></argument>&gt;</argument_list></name></type> <name>list</name> <init>= <expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name>checkForCollection</name><argument_list>(<argument><expr><name>collection</name></expr></argument>, <argument><expr><name>list</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>String</name></type> <name>url</name> <init>= <expr><call><name>getUrlFromZk</name><argument_list>(<argument><expr><call><name>getCommonCloudSolrServer</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getZkStateReader</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClusterState</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>collection</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>HttpSolrServer</name></type> <name>collectionClient</name> <init>= <expr><operator>new</operator> <call><name>HttpSolrServer</name><argument_list>(<argument><expr><name>url</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <comment type="line">// poll for a second - it can take a moment before we are ready to serve</comment>
      <expr_stmt><expr><call><name>waitForNon403or404or503</name><argument_list>(<argument><expr><name>collectionClient</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
  </block_content>}</block></function>
}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestLazyCores</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestLazyCores</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">64e99c0fba9</literal><operator>..</operator><name>cdb8850b49d</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestLazyCores</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestLazyCores</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">621</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">621</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestLazyCores</name> extends <name>SolrTestCaseJ4</name> <block>{
   <expr><specifier>private</specifier> <name>void</name> <call><name>addLazy</name><argument_list>(<argument><expr><name>SolrCore</name> <name>core</name></expr></argument>, <argument><expr><name>String</name><operator>...</operator> <name>fieldValues</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><name>UpdateHandler</name> <name>updater</name> <operator>=</operator> <call><name><name>core</name><operator>.</operator><name>getUpdateHandler</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
     <name>AddUpdateCommand</name> <name>cmd</name> <operator>=</operator> <operator>new</operator> <call><name>AddUpdateCommand</name><argument_list>(<argument><expr><call><name>makeReq</name><argument_list>(<argument><expr><name>core</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cmd</name><operator>.</operator><name>solrDoc</name></name> <operator>=</operator> <call><name>sdoc</name><argument_list>(<argument><expr><name>fieldValues</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cmd</name><operator>.</operator><name>solrDoc</name></name> <operator>=</operator> <call><name>sdoc</name><argument_list>(<argument><expr><operator>(</operator><name><name>Object</name><index>[]</index></name><operator>)</operator><name>fieldValues</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>updater</name><operator>.</operator><name>addDoc</name></name><argument_list>(<argument><expr><name>cmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>solrj</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>common</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ClusterState</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>solrj</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>common</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ClusterState</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">131f8c8eb7f</literal><operator>..</operator><literal type="number">93fb1264d0c</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>solrj</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>common</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ClusterState</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>solrj</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>common</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ClusterState</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">98</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">98</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>ClusterState</name> implements <name><name>JSONWriter</name><operator>.</operator><name>Writable</name></name> <block>{
     }</block></expr></expr_stmt>
     <return>return <expr><literal type="null">null</literal></expr>;</return>
   </block_content>}</block></for>
  <specifier>public</specifier> <name>boolean</name> <call><name>hasCollection</name><argument_list>(<argument><expr><name>String</name> <name>coll</name></expr></argument>)</argument_list></call><block>{
    <return>return <expr><call><name><name>collectionStates</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>coll</name></expr></argument>)</argument_list></call><operator>!=</operator><literal type="null">null</literal></expr>;</return>
  }</block></block></expr></expr_stmt></block_content></block></function></block_content></block></catch></try></block></block></expr></expr_stmt></block_content></block></function></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block></class>
 
 
   <comment type="block" format="javadoc">/**
diff --git a/solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader.java b/solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader.java
index 86483bae821..86928150c0a 100644
-- a/solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader.java
++ b/solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader.java
@@ -57,6 +57,7 @@ public class ZkStateReader {
   public static final String CORE_NAME_PROP = "core";
   public static final String COLLECTION_PROP = "collection";
   public static final String SHARD_ID_PROP = "shard";
  public static final String REPLICA_PROP = "replica";
   public static final String SHARD_RANGE_PROP = "shard_range";
   public static final String SHARD_STATE_PROP = "shard_state";
   public static final String SHARD_PARENT_PROP = "shard_parent";
diff --git a/solr/solrj/src/java/org/apache/solr/common/params/CollectionParams.java b/solr/solrj/src/java/org/apache/solr/common/params/CollectionParams.java
index 49165e865b7..ceda5f1243d 100644
-- a/solr/solrj/src/java/org/apache/solr/common/params/CollectionParams.java
++ b/solr/solrj/src/java/org/apache/solr/common/params/CollectionParams.java
@@ -28,7 +28,7 @@ public interface CollectionParams
 
 
   public enum CollectionAction {
    CREATE, DELETE, RELOAD, SYNCSHARD, CREATEALIAS, DELETEALIAS, SPLITSHARD, DELETESHARD, CREATESHARD;
    CREATE, DELETE, RELOAD, SYNCSHARD, CREATEALIAS, DELETEALIAS, SPLITSHARD, DELETESHARD, CREATESHARD, DELETEREPLICA;
     
     public static CollectionAction get( String p )
     {
diff --git a/solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase.java b/solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase.java
index f273e2746ba..e1c8cec7d26 100644
-- a/solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase.java
++ b/solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase.java
@@ -1745,5 +1745,52 @@ public abstract class AbstractFullDistribZkTestBase extends AbstractDistribZkTes
     }
     return commondCloudSolrServer;
   }
  public static String getUrlFromZk(ClusterState clusterState, String collection) {
    Map&lt;String,Slice&gt; slices = clusterState.getCollectionStates().get(collection).getSlicesMap();

    if (slices == null) {
      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, "Could not find collection:" + collection);
    }

    for (Map.Entry&lt;String,Slice&gt; entry : slices.entrySet()) {
      Slice slice = entry.getValue();
      Map&lt;String,Replica&gt; shards = slice.getReplicasMap();
      Set&lt;Map.Entry&lt;String,Replica&gt;&gt; shardEntries = shards.entrySet();
      for (Map.Entry&lt;String,Replica&gt; shardEntry : shardEntries) {
        final ZkNodeProps node = shardEntry.getValue();
        if (clusterState.liveNodesContain(node.getStr(ZkStateReader.NODE_NAME_PROP))) {
          return ZkCoreNodeProps.getCoreUrl(node.getStr(ZkStateReader.BASE_URL_PROP), collection); //new ZkCoreNodeProps(node).getCoreUrl();
        }
      }
    }

    throw new RuntimeException("Could not find a live node for collection:" + collection);
  }

 public  static void waitForNon403or404or503(HttpSolrServer collectionClient)
      throws Exception {
    SolrException exp = null;
    long timeoutAt = System.currentTimeMillis() + 30000;

    while (System.currentTimeMillis() &lt; timeoutAt) {
      boolean missing = false;

      try {
        collectionClient.query(new SolrQuery("*:*"));
      } catch (SolrException e) {
        if (!(e.code() == 403 || e.code() == 503 || e.code() == 404)) {
          throw e;
        }
        exp = e;
        missing = true;
      }
      if (!missing) {
        return;
      }
      Thread.sleep(50);
    }

    fail("Could not find the new collection - " + exp.code() + " : " + collectionClient.getBaseURL());
  }
 
 }
- 
2.19.1.windows.1

</comment></unit>
