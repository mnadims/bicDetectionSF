<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/lucene/52124d8ebf.java"><expr_stmt><expr><name>From</name> <literal type="number">52124d8ebfe4c7ee73caea0f10cf88feb68f5ded</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Simon</name> <name><name>Willnauer</name> <argument_list type="generic">&lt;<argument><name>simonw</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Tue</name></expr><operator>,</operator> <expr><literal type="number">11</literal> <name>Jan</name> <literal type="number">2011</literal> <literal type="number">11</literal><operator>:</operator><literal type="number">59</literal><operator>:</operator><literal type="number">26</literal> <operator>+</operator><literal type="number">0000</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>LUCENE</name><operator>-</operator><literal type="number">2831</literal><operator>:</operator> <name>cut</name> <name>over</name> <name>to</name> <name>AtomicReaderContext</name> <name>in</name>
 <name>Weight</name><operator>#</operator><name>scorer</name></expr><operator>,</operator> <expr><name>Weight</name><operator>#</operator><name>explain</name> <operator>&amp;</operator> <name>Filter</name><operator>#</operator><name>getDocIdSet</name>

<name>git</name><operator>-</operator><name>svn</name><operator>-</operator><name>id</name><operator>:</operator> <name>https</name><operator>:</operator><comment type="line">//svn.apache.org/repos/asf/lucene/dev/trunk@1057595 13f79535-47bb-0310-9956-ffa450edef68</comment>
<operator>--</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>BooleanFilter</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">8</literal> <operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>ChainedFilter</name><operator>.</operator><name>java</name></name>   <operator>|</operator> <literal type="number">24</literal> <operator>++</operator><operator>+</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>DuplicateFilter</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>search</name><operator>/</operator><name><name>FieldCacheRewriteMethod</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TermsFilter</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TermsFilterTest</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">5</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>geohash</name><operator>/</operator><name><name>GeoHashDistanceFilter</name><operator>.</operator><name>java</name></name>        <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>spatial</name><operator>/</operator><name>tier</name><operator>/</operator><name><name>CartesianShapeFilter</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>spatial</name><operator>/</operator><name>tier</name><operator>/</operator><name><name>LatLongDistanceFilter</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>spatial</name><operator>/</operator><name>tier</name><operator>/</operator><name><name>TestDistance</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">3</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>builders</name><operator>/</operator><name><name>NumericRangeFilterBuilder</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>TestNumericRangeFilterBuilder</name><operator>.</operator><name>java</name></name>        <operator>|</operator>  <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>BufferedDeletes</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">7</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>BooleanQuery</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>CachingSpanFilter</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>CachingWrapperFilter</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>ConstantScoreQuery</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>DisjunctionMaxQuery</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>FieldCacheRangeFilter</name><operator>.</operator><name>java</name></name>  <operator>|</operator> <literal type="number">18</literal> <operator>++</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>FieldCacheTermsFilter</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>Filter</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">7</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>FilteredQuery</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>IndexSearcher</name><operator>.</operator><name>java</name></name>   <operator>|</operator> <literal type="number">67</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>MatchAllDocsQuery</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>MultiPhraseQuery</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>search</name><operator>/</operator><name><name>MultiTermQueryWrapperFilter</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>PhraseQuery</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>QueryWrapperFilter</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">8</literal> <operator>++</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SpanQueryFilter</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TermQuery</name><operator>.</operator><name>java</name></name>   <operator>|</operator> <literal type="number">19</literal> <operator>++</operator><operator>++</operator><operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>Weight</name><operator>.</operator><name>java</name></name> <operator>|</operator> <literal type="number">22</literal> <operator>++</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>CustomScoreQuery</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">8</literal> <operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ValueSourceQuery</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>search</name><operator>/</operator><name>payloads</name><operator>/</operator><name><name>PayloadNearQuery</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>search</name><operator>/</operator><name>payloads</name><operator>/</operator><name><name>PayloadTermQuery</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>spans</name><operator>/</operator><name><name>SpanWeight</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>ReaderUtil</name><operator>.</operator><name>java</name></name>    <operator>|</operator> <literal type="number">15</literal> <operator>++</operator><operator>++</operator><operator>+</operator>
 <operator>...</operator><operator>/</operator><name>search</name><operator>/</operator><name><name>CachingWrapperFilterHelper</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>JustCompileSearch</name><operator>.</operator><name>java</name></name>      <operator>|</operator> <literal type="number">10</literal> <operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>MockFilter</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>QueryUtils</name><operator>.</operator><name>java</name></name>  <operator>|</operator> <literal type="number">23</literal> <operator>++</operator><operator>+</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SingleDocTestFilter</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>search</name><operator>/</operator><name><name>TestCachingWrapperFilter</name><operator>.</operator><name>java</name></name>      <operator>|</operator> <literal type="number">22</literal> <operator>++</operator><operator>+</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>search</name><operator>/</operator><name><name>TestDisjunctionMaxQuery</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestDocIdSet</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestFilteredQuery</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestFilteredSearch</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">3</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>search</name><operator>/</operator><name><name>TestNumericRangeQuery32</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  <literal type="number">8</literal> <operator>++</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>search</name><operator>/</operator><name><name>TestNumericRangeQuery64</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  <literal type="number">8</literal> <operator>++</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestScorerPerf</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSort</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestTermScorer</name><operator>.</operator><name>java</name></name>  <operator>|</operator> <literal type="number">15</literal> <operator>++</operator><operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>search</name><operator>/</operator><name>spans</name><operator>/</operator><name><name>TestNearSpansOrdered</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">7</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>PerSegmentSingleValuedFaceting</name><operator>.</operator><name>java</name></name>       <operator>|</operator> <literal type="number">16</literal> <operator>++</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>LatLonType</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>DocSet</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SolrConstantScoreQuery</name><operator>.</operator><name>java</name></name>   <operator>|</operator> <literal type="number">10</literal> <operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SolrFilter</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">3</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SortedIntDocSet</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">3</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>BoostedQuery</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">7</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>FunctionQuery</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">5</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ScaleFloatFunction</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">5</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ValueSource</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">1</literal> <operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestDocSet</name><operator>.</operator><name>java</name></name>    <operator>|</operator> <literal type="number">17</literal> <operator>++</operator><operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSort</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <literal type="number">65</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">276</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">264</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>contrib</name><operator>/</operator><name>queries</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>BooleanFilter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>contrib</name><operator>/</operator><name>queries</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>BooleanFilter</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>e3748774456</name><operator>..</operator><literal type="number">99a84b20bb7</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>contrib</name><operator>/</operator><name>queries</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>BooleanFilter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>contrib</name><operator>/</operator><name>queries</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>BooleanFilter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>BooleanClause</name><operator>.</operator><name>Occur</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>OpenBitSet</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>OpenBitSetDISI</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">42</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">42</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>BooleanFilter</name> extends <name>Filter</name>
   <name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>Filter</name></argument>&gt;</argument_list></name> <name>notFilters</name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
   <decl_stmt><decl><type><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>Filter</name></argument>&gt;</argument_list></name></type> <name>mustFilters</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
   
  <decl_stmt><decl><type><specifier>private</specifier> <name>DocIdSetIterator</name></type> <name>getDISI</name><argument_list>(<argument><expr><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>Filter</name></argument>&gt;</argument_list></name> <name>filters</name></expr></argument>, <argument><expr><name>int</name> <name>index</name></expr></argument>, <argument><expr><name>ReaderContext</name> <name>info</name></expr></argument>)</argument_list>
  private <name>DocIdSetIterator</name> <name>getDISI</name><argument_list>(<argument><expr><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>Filter</name></argument>&gt;</argument_list></name> <name>filters</name></expr></argument>, <argument><expr><name>int</name> <name>index</name></expr></argument>, <argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list>
   <throws>throws <argument><expr><name>IOException</name>
   <block>{</block></expr></argument></throws>
    return <name><name>filters</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>index</name></expr></argument>)</argument_list>.<name>getDocIdSet</name><argument_list>(<argument><expr><name>info</name></expr></argument>)</argument_list>.<name>iterator</name><argument_list>()</argument_list></decl>;</decl_stmt>
    <return>return <expr><call><name><name>filters</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>index</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getDocIdSet</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>iterator</name><argument_list>()</argument_list></call></expr>;</return>
   }
 
   <comment type="block" format="javadoc">/**
@@ -53,7 +53,7 @@ public class BooleanFilter extends Filter
    * of the filters that have been added.
    */</comment>
   @<decl_stmt><decl><type><name>Override</name>
  <specifier>public</specifier> <name>DocIdSet</name></type> <name>getDocIdSet</name><argument_list>(<argument><expr><name>ReaderContext</name> <name>context</name></expr></argument>)</argument_list> <throws>throws <argument><expr><name>IOException</name>
  <specifier>public</specifier> <name>DocIdSet</name> <call><name>getDocIdSet</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name>
   <block>{
     <expr><name>OpenBitSetDISI</name> <name>res</name> <operator>=</operator> <literal type="null">null</literal></expr></block></expr></argument></throws></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>final</specifier> <name>IndexReader</name></type> <name>reader</name> <init>= <expr><name><name>context</name><operator>.</operator><name>reader</name></name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>contrib</name><operator>/</operator><name>queries</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>ChainedFilter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>contrib</name><operator>/</operator><name>queries</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>ChainedFilter</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>a8cc00caf5f</name><operator>..</operator><literal type="number">4041792f5af</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>contrib</name><operator>/</operator><name>queries</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>ChainedFilter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>contrib</name><operator>/</operator><name>queries</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>ChainedFilter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name></name>;</package>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>DocIdSet</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>DocIdSetIterator</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Filter</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">97</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">97</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ChainedFilter</name> extends <name>Filter</name>
      <operator>*</operator> <block>{@<expr><name>link</name> <name>Filter</name><operator>#</operator><name>getDocIdSet</name></expr>}</block><operator>.</operator>
      <operator>*</operator><operator>/</operator>
     @<name>Override</name>
    <specifier>public</specifier> <name>DocIdSet</name> <call><name>getDocIdSet</name><argument_list>(<argument><expr><name>ReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name>
    <specifier>public</specifier> <name>DocIdSet</name> <call><name>getDocIdSet</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name>
     <block>{
         <expr><name><name>int</name><index>[]</index></name> <name>index</name> <operator>=</operator> <operator>new</operator> <name><name>int</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></block></expr></argument></throws></expr>;</expr_stmt> <comment type="line">// use array as reference to modifiable int; </comment>
         <expr_stmt><expr><name><name>index</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>             <comment type="line">// an object attribute would not be thread safe.</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">109</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">109</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>ChainedFilter</name> extends <name>Filter</name></expr></expr_stmt>
             <return>return <expr><call><name>getDocIdSet</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>DEFAULT</name></expr></argument>, <argument><expr><name>index</name></expr></argument>)</argument_list></call></expr>;</return>
     }
 
    private <decl_stmt><decl><type><name>DocIdSetIterator</name></type> <name>getDISI</name><argument_list>(<argument><expr><name>Filter</name> <name>filter</name></expr></argument>, <argument><expr><name>ReaderContext</name> <name>info</name></expr></argument>)</argument_list>
    private <name>DocIdSetIterator</name> <name>getDISI</name><argument_list>(<argument><expr><name>Filter</name> <name>filter</name></expr></argument>, <argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list>
     <throws>throws <argument><expr><name>IOException</name> <block>{
        <expr><name>DocIdSet</name> <name>docIdSet</name> <operator>=</operator> <call><name><name>filter</name><operator>.</operator><name>getDocIdSet</name></name><argument_list>(<argument><expr><name>info</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>DocIdSet</name></type> <name>docIdSet</name> <init>= <expr><call><name><name>filter</name><operator>.</operator><name>getDocIdSet</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <if_stmt><if>if <condition>(<expr><name>docIdSet</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
           <return>return <expr><call><name><name>DocIdSet</name><operator>.</operator><name>EMPTY_DOCIDSET</name><operator>.</operator><name>iterator</name></name><argument_list>()</argument_list></call></expr>;</return>
         </block_content>}</block></if> <else>else <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">124</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">124</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>ChainedFilter</name> extends <name>Filter</name></expr></expr_stmt>
         </block_content>}</block></else></if_stmt>
     }
 
    private <decl_stmt><decl><type><name>OpenBitSetDISI</name></type> <name>initialResult</name><argument_list>(<argument><expr><name>ReaderContext</name> <name>info</name></expr></argument>, <argument><expr><name>int</name> <name>logic</name></expr></argument>, <argument><expr><name><name>int</name><index>[]</index></name> <name>index</name></expr></argument>)</argument_list>
    private <name>OpenBitSetDISI</name> <name>initialResult</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>int</name> <name>logic</name></expr></argument>, <argument><expr><name><name>int</name><index>[]</index></name> <name>index</name></expr></argument>)</argument_list>
     <throws>throws <argument><expr><name>IOException</name>
     <block>{
        <expr><name>IndexReader</name> <name>reader</name> <operator>=</operator> <name><name>info</name><operator>.</operator><name>reader</name></name></expr></block></expr></argument></throws></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>IndexReader</name></type> <name>reader</name> <init>= <expr><name><name>context</name><operator>.</operator><name>reader</name></name></expr></init></decl>;</decl_stmt>
         <decl_stmt><decl><type><name>OpenBitSetDISI</name></type> <name>result</name></decl>;</decl_stmt>
         <comment type="block" format="javadoc">/**
          * First AND operation takes place against a completely false
@@ -135,12 +135,12 @@ public class ChainedFilter extends Filter
          */</comment>
         <if_stmt><if>if <condition>(<expr><name>logic</name> <operator>==</operator> <name>AND</name></expr>)</condition>
         <block>{<block_content>
            <expr_stmt><expr><name>result</name> <operator>=</operator> <operator>new</operator> <call><name>OpenBitSetDISI</name><argument_list>(<argument><expr><call><name>getDISI</name><argument_list>(<argument><expr><name><name>chain</name><index>[<expr><name><name>index</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>]</index></name></expr></argument>, <argument><expr><name>info</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>reader</name><operator>.</operator><name>maxDoc</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name>result</name> <operator>=</operator> <operator>new</operator> <call><name>OpenBitSetDISI</name><argument_list>(<argument><expr><call><name>getDISI</name><argument_list>(<argument><expr><name><name>chain</name><index>[<expr><name><name>index</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>]</index></name></expr></argument>, <argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>reader</name><operator>.</operator><name>maxDoc</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <expr_stmt><expr><operator>++</operator><name><name>index</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
         </block_content>}</block></if>
         <if type="elseif">else if <condition>(<expr><name>logic</name> <operator>==</operator> <name>ANDNOT</name></expr>)</condition>
         <block>{<block_content>
            <expr_stmt><expr><name>result</name> <operator>=</operator> <operator>new</operator> <call><name>OpenBitSetDISI</name><argument_list>(<argument><expr><call><name>getDISI</name><argument_list>(<argument><expr><name><name>chain</name><index>[<expr><name><name>index</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>]</index></name></expr></argument>, <argument><expr><name>info</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>reader</name><operator>.</operator><name>maxDoc</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name>result</name> <operator>=</operator> <operator>new</operator> <call><name>OpenBitSetDISI</name><argument_list>(<argument><expr><call><name>getDISI</name><argument_list>(<argument><expr><name><name>chain</name><index>[<expr><name><name>index</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>]</index></name></expr></argument>, <argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>reader</name><operator>.</operator><name>maxDoc</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <expr_stmt><expr><call><name><name>result</name><operator>.</operator><name>flip</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><call><name><name>reader</name><operator>.</operator><name>maxDoc</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// NOTE: may set bits for deleted docs.</comment>
             <expr_stmt><expr><operator>++</operator><name><name>index</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
         </block_content>}</block></if></if_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">157</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">157</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>ChainedFilter</name> extends <name>Filter</name>
      <operator>*</operator> @<name>param</name> <name>logic</name> <name>Logical</name> <name>operation</name>
      <operator>*</operator> @</expr></expr_stmt><return>return <expr><name>DocIdSet</name>
      <operator>*</operator><operator>/</operator>
    <specifier>private</specifier> <name>DocIdSet</name> <call><name>getDocIdSet</name><argument_list>(<argument><expr><name>ReaderContext</name> <name>info</name></expr></argument>, <argument><expr><name>int</name> <name>logic</name></expr></argument>, <argument><expr><name><name>int</name><index>[]</index></name> <name>index</name></expr></argument>)</argument_list></call>
    <specifier>private</specifier> <name>DocIdSet</name> <call><name>getDocIdSet</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>int</name> <name>logic</name></expr></argument>, <argument><expr><name><name>int</name><index>[]</index></name> <name>index</name></expr></argument>)</argument_list></call>
     <throws>throws <argument><expr><name>IOException</name>
     <block>{
        <expr><name>OpenBitSetDISI</name> <name>result</name> <operator>=</operator> <call><name>initialResult</name><argument_list>(<argument><expr><name>info</name></expr></argument>, <argument><expr><name>logic</name></expr></argument>, <argument><expr><name>index</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</return>
        <decl_stmt><decl><type><name>OpenBitSetDISI</name></type> <name>result</name> <init>= <expr><call><name>initialResult</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>logic</name></expr></argument>, <argument><expr><name>index</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <for>for <control>(<init>;</init> <condition><expr><name><name>index</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>&lt;</operator> <name><name>chain</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name><name>index</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>++</operator></expr></incr>)</control>
         <block>{<block_content>
            <expr_stmt><expr><call><name>doChain</name><argument_list>(<argument><expr><name>result</name></expr></argument>, <argument><expr><name>logic</name></expr></argument>, <argument><expr><name><name>chain</name><index>[<expr><name><name>index</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>]</index></name><operator>.</operator><call><name>getDocIdSet</name><argument_list>(<argument><expr><name>info</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>doChain</name><argument_list>(<argument><expr><name>result</name></expr></argument>, <argument><expr><name>logic</name></expr></argument>, <argument><expr><name><name>chain</name><index>[<expr><name><name>index</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>]</index></name><operator>.</operator><call><name>getDocIdSet</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></for>
         <return>return <expr><name>result</name></expr>;</return>
     }
@<annotation>@</annotation> -<expr_stmt><expr><literal type="number">174</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">174</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ChainedFilter</name> extends <name>Filter</name>
      <operator>*</operator> @<name>param</name> <name>logic</name> <name>Logical</name> <name>operation</name>
      <operator>*</operator> @</expr></expr_stmt><return>return <expr><name>DocIdSet</name>
      <operator>*</operator><operator>/</operator>
    <specifier>private</specifier> <name>DocIdSet</name> <call><name>getDocIdSet</name><argument_list>(<argument><expr><name>ReaderContext</name> <name>info</name></expr></argument>, <argument><expr><name><name>int</name><index>[]</index></name> <name>logic</name></expr></argument>, <argument><expr><name><name>int</name><index>[]</index></name> <name>index</name></expr></argument>)</argument_list></call>
    <specifier>private</specifier> <name>DocIdSet</name> <call><name>getDocIdSet</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>info</name></expr></argument>, <argument><expr><name><name>int</name><index>[]</index></name> <name>logic</name></expr></argument>, <argument><expr><name><name>int</name><index>[]</index></name> <name>index</name></expr></argument>)</argument_list></call>
     <throws>throws <argument><expr><name>IOException</name>
     <block>{</block></expr></argument></throws></expr></return>
         <if_stmt><if>if <condition>(<expr><name><name>logic</name><operator>.</operator><name>length</name></name> <operator>!=</operator> <name><name>chain</name><operator>.</operator><name>length</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>contrib</name><operator>/</operator><name>queries</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>DuplicateFilter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>contrib</name><operator>/</operator><name>queries</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>DuplicateFilter</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">5f2e3b1528f</literal><operator>..</operator><literal type="number">3b0c8de8296</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>contrib</name><operator>/</operator><name>queries</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>DuplicateFilter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>contrib</name><operator>/</operator><name>queries</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>DuplicateFilter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt></block_content></block></if></if_stmt> <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>BytesRef</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Terms</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>DocsEnum</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>TermsEnum</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">72</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">72</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>DuplicateFilter</name> extends <name>Filter</name></expr></expr_stmt>
 	}
 
   @<decl_stmt><decl><type><name>Override</name>
  <specifier>public</specifier> <name>DocIdSet</name></type> <name>getDocIdSet</name><argument_list>(<argument><expr><name>ReaderContext</name> <name>context</name></expr></argument>)</argument_list> <throws>throws <argument><expr><name>IOException</name>
  <specifier>public</specifier> <name>DocIdSet</name> <call><name>getDocIdSet</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name>
 	<block>{</block></expr></argument></throws>
 		if<argument_list>(<argument><expr><name>processingMode</name><operator>==</operator><name>PM_FAST_INVALIDATION</name></expr></argument>)</argument_list>
 		<block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>contrib</name><operator>/</operator><name>queries</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>FieldCacheRewriteMethod</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>contrib</name><operator>/</operator><name>queries</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>FieldCacheRewriteMethod</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">6dee395ab70</literal><operator>..</operator><literal type="number">5e83c75bc9e</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>contrib</name><operator>/</operator><name>queries</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>FieldCacheRewriteMethod</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>contrib</name><operator>/</operator><name>queries</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>FieldCacheRewriteMethod</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Comparator</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Terms</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>TermsEnum</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>BytesRef</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">109</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">109</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>FieldCacheRewriteMethod</name> extends <name><name>MultiTermQuery</name><operator>.</operator><name>RewriteMethod</name></name>
      <operator>*</operator> <name><name>results</name><operator>.</operator></name>
      *<operator>/</operator>
     @<name>Override</name>
    <specifier>public</specifier> <name>DocIdSet</name> <call><name>getDocIdSet</name><argument_list>(<argument><expr><name>ReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><specifier>public</specifier> <name>DocIdSet</name> <call><name>getDocIdSet</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
       <expr><name>final</name> <name><name>FieldCache</name><operator>.</operator><name>DocTermsIndex</name></name> <name>fcsi</name> <operator>=</operator> <call><name><name>FieldCache</name><operator>.</operator><name>DEFAULT</name><operator>.</operator><name>getTermsIndex</name></name><argument_list>(<argument><expr><name><name>context</name><operator>.</operator><name>reader</name></name></expr></argument>, <argument><expr><name><name>query</name><operator>.</operator><name>field</name></name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
       <decl_stmt><decl><type><specifier>final</specifier> <name>OpenBitSet</name></type> <name>termSet</name> <init>= <expr><operator>new</operator> <call><name>OpenBitSet</name><argument_list>(<argument><expr><call><name><name>fcsi</name><operator>.</operator><name>numOrd</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>TermsEnum</name></type> <name>termsEnum</name> <init>= <expr><call><name><name>query</name><operator>.</operator><name>getTermsEnum</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>Terms</name></super><argument_list>()</argument_list> <block>{
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>contrib</name><operator>/</operator><name>queries</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TermsFilter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>contrib</name><operator>/</operator><name>queries</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TermsFilter</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>e1ab950ab0c</name><operator>..</operator><name>f5c48c90fb2</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>contrib</name><operator>/</operator><name>queries</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TermsFilter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>contrib</name><operator>/</operator><name>queries</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TermsFilter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">23</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">23</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>TreeSet</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Term</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>DocsEnum</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Terms</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">58</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">58</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TermsFilter</name> extends <name>Filter</name>
    <operator>*</operator> @<name>see</name> <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Filter</name></name><operator>#</operator><call><name>getDocIdSet</name><argument_list>(<argument><expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name></expr></argument>)</argument_list></call>
 	 <operator>*</operator><operator>/</operator>
   @<name>Override</name>
  <specifier>public</specifier> <name>DocIdSet</name> <call><name>getDocIdSet</name><argument_list>(<argument><expr><name>ReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>public</specifier> <name>DocIdSet</name> <call><name>getDocIdSet</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><name>IndexReader</name> <name>reader</name> <operator>=</operator> <name><name>context</name><operator>.</operator><name>reader</name></name></expr></block></expr></argument></throws></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>OpenBitSet</name></type> <name>result</name><init>=<expr><operator>new</operator> <call><name>OpenBitSet</name><argument_list>(<argument><expr><call><name><name>reader</name><operator>.</operator><name>maxDoc</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>Fields</name></type> <name>fields</name> <init>= <expr><call><name><name>reader</name><operator>.</operator><name>fields</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>contrib</name><operator>/</operator><name>queries</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TermsFilterTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>contrib</name><operator>/</operator><name>queries</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TermsFilterTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">27d76cdb8df</literal><operator>..</operator><name>dfe6f8b8f6e</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>contrib</name><operator>/</operator><name>queries</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TermsFilterTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>contrib</name><operator>/</operator><name>queries</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TermsFilterTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Document</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Field</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>RandomIndexWriter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Term</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>Directory</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">60</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">60</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> class <name>TermsFilterTest</name> extends <name>LuceneTestCase</name> <block>{
 			<expr><call><name><name>w</name><operator>.</operator><name>addDocument</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;			
 		}</block>
 		<name>IndexReader</name> <name>reader</name> <operator>=</operator> <operator>new</operator> <call><name>SlowMultiReaderWrapper</name><argument_list>(<argument><expr><call><name><name>w</name><operator>.</operator><name>getReader</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name>ReaderContext</name></type> <name>context</name> <init>= <expr><call><name><name>reader</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>reader</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call><operator>.</operator><name>isAtomic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name>AtomicReaderContext</name></type> <name>context</name> <init>= <expr><operator>(</operator><name>AtomicReaderContext</name><operator>)</operator> <call><name><name>reader</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 		<constructor_decl><name>assertTrue</name><parameter_list>(<parameter><decl><type><name><name>context</name><operator>.</operator><name>isAtomic</name></name></type></decl></parameter>)</parameter_list>;</constructor_decl>
 		<constructor_decl><name><name>w</name><operator>.</operator><name>close</name></name><parameter_list>()</parameter_list>;</constructor_decl>
 		
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>contrib</name><operator>/</operator><name>spatial</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>spatial</name><operator>/</operator><name>geohash</name><operator>/</operator><name><name>GeoHashDistanceFilter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>contrib</name><operator>/</operator><name>spatial</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>spatial</name><operator>/</operator><name>geohash</name><operator>/</operator><name><name>GeoHashDistanceFilter</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">4f348b648d1</literal><operator>..</operator><literal type="number">2751dbc9e34</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>contrib</name><operator>/</operator><name>spatial</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>spatial</name><operator>/</operator><name>geohash</name><operator>/</operator><name><name>GeoHashDistanceFilter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>contrib</name><operator>/</operator><name>spatial</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>spatial</name><operator>/</operator><name>geohash</name><operator>/</operator><name><name>GeoHashDistanceFilter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>spatial</name><operator>.</operator><name>geohash</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>FieldCache</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>FieldCache</name><operator>.</operator><name>DocTerms</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Filter</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">62</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">62</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>GeoHashDistanceFilter</name> extends <name>DistanceFilter</name> <block>{
   }</block>
 
   @<name>Override</name>
  <specifier>public</specifier> <name>DocIdSet</name> <call><name>getDocIdSet</name><argument_list>(<argument><expr><name>ReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>public</specifier> <name>DocIdSet</name> <call><name>getDocIdSet</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
 
     <expr><name>final</name> <name>DocTerms</name> <name>geoHashValues</name> <operator>=</operator> <call><name><name>FieldCache</name><operator>.</operator><name>DEFAULT</name><operator>.</operator><name>getTerms</name></name><argument_list>(<argument><expr><name><name>context</name><operator>.</operator><name>reader</name></name></expr></argument>, <argument><expr><name>geoHashField</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
     <decl_stmt><decl><type><specifier>final</specifier> <name>BytesRef</name></type> <name>br</name> <init>= <expr><operator>new</operator> <call><name>BytesRef</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>contrib</name><operator>/</operator><name>spatial</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>spatial</name><operator>/</operator><name>tier</name><operator>/</operator><name><name>CartesianShapeFilter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>contrib</name><operator>/</operator><name>spatial</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>spatial</name><operator>/</operator><name>tier</name><operator>/</operator><name><name>CartesianShapeFilter</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">07a833f3e2e</literal><operator>..</operator><literal type="number">6ee8fbeb771</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>contrib</name><operator>/</operator><name>spatial</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>spatial</name><operator>/</operator><name>tier</name><operator>/</operator><name><name>CartesianShapeFilter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>contrib</name><operator>/</operator><name>spatial</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>spatial</name><operator>/</operator><name>tier</name><operator>/</operator><name><name>CartesianShapeFilter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>DocsEnum</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Filter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>DocIdSet</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>DocIdSetIterator</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">45</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">45</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>CartesianShapeFilter</name> extends <name>Filter</name> <block>{
   }</block>
   
   @<name>Override</name>
  <specifier>public</specifier> <name>DocIdSet</name> <call><name>getDocIdSet</name><argument_list>(<argument><expr><name>final</name> <name>ReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>public</specifier> <name>DocIdSet</name> <call><name>getDocIdSet</name><argument_list>(<argument><expr><name>final</name> <name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><name>final</name> <name>Bits</name> <name>delDocs</name> <operator>=</operator> <call><name><name>context</name><operator>.</operator><name>reader</name><operator>.</operator><name>getDeletedDocs</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
     <decl_stmt><decl><type><specifier>final</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>Double</name></argument>&gt;</argument_list></name></type> <name>area</name> <init>= <expr><call><name><name>shape</name><operator>.</operator><name>getArea</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>final</specifier> <name>int</name></type> <name>sz</name> <init>= <expr><call><name><name>area</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>contrib</name><operator>/</operator><name>spatial</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>spatial</name><operator>/</operator><name>tier</name><operator>/</operator><name><name>LatLongDistanceFilter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>contrib</name><operator>/</operator><name>spatial</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>spatial</name><operator>/</operator><name>tier</name><operator>/</operator><name><name>LatLongDistanceFilter</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">58b475bca60</literal><operator>..</operator><literal type="number">94c3bd86ba0</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>contrib</name><operator>/</operator><name>spatial</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>spatial</name><operator>/</operator><name>tier</name><operator>/</operator><name><name>LatLongDistanceFilter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>contrib</name><operator>/</operator><name>spatial</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>spatial</name><operator>/</operator><name>tier</name><operator>/</operator><name><name>LatLongDistanceFilter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>spatial</name><operator>.</operator><name>tier</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>FilteredDocIdSet</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>FieldCache</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Filter</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">65</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">65</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>LatLongDistanceFilter</name> extends <name>DistanceFilter</name> <block>{
   }</block>
   
   @<name>Override</name>
  <specifier>public</specifier> <name>DocIdSet</name> <call><name>getDocIdSet</name><argument_list>(<argument><expr><name>ReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>public</specifier> <name>DocIdSet</name> <call><name>getDocIdSet</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
 
     <expr><name>final</name> <name><name>double</name><index>[]</index></name> <name>latIndex</name> <operator>=</operator> <call><name><name>FieldCache</name><operator>.</operator><name>DEFAULT</name><operator>.</operator><name>getDoubles</name></name><argument_list>(<argument><expr><name><name>context</name><operator>.</operator><name>reader</name></name></expr></argument>, <argument><expr><name>latField</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
     <decl_stmt><decl><type><specifier>final</specifier> <name><name>double</name><index>[]</index></name></type> <name>lngIndex</name> <init>= <expr><call><name><name>FieldCache</name><operator>.</operator><name>DEFAULT</name><operator>.</operator><name>getDoubles</name></name><argument_list>(<argument><expr><name><name>context</name><operator>.</operator><name>reader</name></name></expr></argument>, <argument><expr><name>lngField</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>contrib</name><operator>/</operator><name>spatial</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>spatial</name><operator>/</operator><name>tier</name><operator>/</operator><name><name>TestDistance</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>contrib</name><operator>/</operator><name>spatial</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>spatial</name><operator>/</operator><name>tier</name><operator>/</operator><name><name>TestDistance</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>f355fab632d</name><operator>..</operator><name>f63e6acbcf3</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>contrib</name><operator>/</operator><name>spatial</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>spatial</name><operator>/</operator><name>tier</name><operator>/</operator><name><name>TestDistance</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>contrib</name><operator>/</operator><name>spatial</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>spatial</name><operator>/</operator><name>tier</name><operator>/</operator><name><name>TestDistance</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">29</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">29</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>QueryWrapperFilter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>MatchAllDocsQuery</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>LuceneTestCase</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>ReaderUtil</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>Directory</name></name>;</import>
 
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">102</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">103</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestDistance</name> extends <name>LuceneTestCase</name> <block>{
     <expr><name>LatLongDistanceFilter</name> <name>f</name> <operator>=</operator> <operator>new</operator> <call><name>LatLongDistanceFilter</name><argument_list>(<argument><expr><operator>new</operator> <call><name>QueryWrapperFilter</name><argument_list>(<argument><expr><operator>new</operator> <call><name>MatchAllDocsQuery</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
                                                         <argument><expr><name>lat</name></expr></argument>, <argument><expr><name>lng</name></expr></argument>, <argument><expr><literal type="number">1.0</literal></expr></argument>, <argument><expr><name>latField</name></expr></argument>, <argument><expr><name>lngField</name></expr></argument>)</argument_list></call></expr>;
 
    <expr><name><name>AtomicReaderContext</name><index>[]</index></name> <name>leaves</name> <operator>=</operator> <call><name><name>r</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>leaves</name><argument_list>()</argument_list></call></expr>;
    <expr><name><name>AtomicReaderContext</name><index>[]</index></name> <name>leaves</name> <operator>=</operator> <call><name><name>ReaderUtil</name><operator>.</operator><name>leaves</name></name><argument_list>(<argument><expr><call><name><name>r</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>leaves</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
       <expr_stmt><expr><call><name><name>f</name><operator>.</operator><name>getDocIdSet</name></name><argument_list>(<argument><expr><name><name>leaves</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt/>}</block_content>
diff --git a/lucene/contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/NumericRangeFilterBuilder.java b/lucene/contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/NumericRangeFilterBuilder.java
index b6bea806dee..ea5f5741c34 100644
-- a/lucene/contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/NumericRangeFilterBuilder.java
++ b/lucene/contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/NumericRangeFilterBuilder.java
@@ -19</block><operator>,</operator><expr_stmt><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt></for> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>xmlparser</name><operator>.</operator><name>builders</name></name>;</package></block></expr></expr_stmt>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>DocIdSet</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Filter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>NumericRangeFilter</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">157</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">157</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>NumericRangeFilterBuilder</name> implements <name>FilterBuilder</name> <block>{
 		<expr><specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name>long</name> <name>serialVersionUID</name> <operator>=</operator> <literal type="number">1L</literal></expr>;
 
 		@<expr><name>Override</name>
		<specifier>public</specifier> <name>DocIdSet</name> <call><name>getDocIdSet</name><argument_list>(<argument><expr><name>ReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
		<expr><specifier>public</specifier> <name>DocIdSet</name> <call><name>getDocIdSet</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr>
 			<return>return <expr><literal type="null">null</literal></expr>;</return>
 		}</block></expr></expr_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>contrib</name><operator>/</operator><name>xml</name><operator>-</operator><name>query</name><operator>-</operator><name>parser</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>xmlparser</name><operator>/</operator><name>builders</name><operator>/</operator><name><name>TestNumericRangeFilterBuilder</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>contrib</name><operator>/</operator><name>xml</name><operator>-</operator><name>query</name><operator>-</operator><name>parser</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>xmlparser</name><operator>/</operator><name>builders</name><operator>/</operator><name><name>TestNumericRangeFilterBuilder</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">4105c014f27</literal><operator>..</operator><literal type="number">028cc752b85</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>contrib</name><operator>/</operator><name>xml</name><operator>-</operator><name>query</name><operator>-</operator><name>parser</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>xmlparser</name><operator>/</operator><name>builders</name><operator>/</operator><name><name>TestNumericRangeFilterBuilder</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>contrib</name><operator>/</operator><name>xml</name><operator>-</operator><name>query</name><operator>-</operator><name>parser</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>xmlparser</name><operator>/</operator><name>builders</name><operator>/</operator><name><name>TestNumericRangeFilterBuilder</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">28</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">28</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@</expr></expr_stmt> <import>import <name><name>javax</name><operator>.</operator><name>xml</name><operator>.</operator><name>parsers</name><operator>.</operator><name>ParserConfigurationException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>LuceneTestCase</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexWriter</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>SlowMultiReaderWrapper</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Filter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>NumericRangeFilter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>Directory</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">64</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">66</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> class <name>TestNumericRangeFilterBuilder</name> extends <name>LuceneTestCase</name> <block>{
 		<expr><call><name><name>writer</name><operator>.</operator><name>commit</name></name><argument_list>()</argument_list></call></expr>;
 		<try>try
 		<block>{<block_content>
			<decl_stmt><decl><type><name>IndexReader</name></type> <name>reader</name> <init>= <expr><call><name><name>IndexReader</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><name>ramDir</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name>IndexReader</name></type> <name>reader</name> <init>= <expr><operator>new</operator> <call><name>SlowMultiReaderWrapper</name><argument_list>(<argument><expr><call><name><name>IndexReader</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><name>ramDir</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 			<try>try
 			<block>{<block_content>
				<expr_stmt><expr><call><name>assertNull</name><argument_list>(<argument><expr><call><name><name>filter</name><operator>.</operator><name>getDocIdSet</name></name><argument_list>(<argument><expr><call><name><name>reader</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name>assertNull</name><argument_list>(<argument><expr><call><name><name>filter</name><operator>.</operator><name>getDocIdSet</name></name><argument_list>(<argument><expr><operator>(</operator><name>AtomicReaderContext</name><operator>)</operator> <call><name><name>reader</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 			<expr_stmt/>}</block_content>
 			finally
 			<block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>BufferedDeletes</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>BufferedDeletes</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">8b4032a6602</literal><operator>..</operator><name>d41abb8af0d</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>BufferedDeletes</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>BufferedDeletes</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">26</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">26</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>atomic</name><operator>.</operator><name>AtomicInteger</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>atomic</name><operator>.</operator><name>AtomicLong</name></name>;</import>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>IndexSearcher</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Query</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Scorer</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">365</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">365</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ class <name>BufferedDeletes</name> <block>{
     <comment type="line">// Delete by query</comment>
     <if_stmt><if>if <condition>(<expr><call><name><name>deletes</name><operator>.</operator><name>queries</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
       <decl_stmt><decl><type><name>IndexSearcher</name></type> <name>searcher</name> <init>= <expr><operator>new</operator> <call><name>IndexSearcher</name><argument_list>(<argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      
      <decl_stmt><decl><type><specifier>final</specifier> <name>ReaderContext</name></type> <name>readerContext</name> <init>= <expr><call><name><name>searcher</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <assert>assert <expr><name><name>readerContext</name><operator>.</operator><name>isAtomic</name></name></expr>;</assert>
      <assert>assert <expr><call><name><name>searcher</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call><operator>.</operator><name>isAtomic</name></expr>;</assert>
      <decl_stmt><decl><type><specifier>final</specifier> <name>AtomicReaderContext</name></type> <name>readerContext</name> <init>= <expr><operator>(</operator><name>AtomicReaderContext</name><operator>)</operator> <call><name><name>searcher</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <try>try <block>{<block_content>
         <for>for <control>(<init><decl><type><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>Query</name></argument>, <argument><name>Integer</name></argument>&gt;</argument_list></name></type> <name>entry</name> <range>: <expr><call><name><name>deletes</name><operator>.</operator><name>queries</name><operator>.</operator><name>entrySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
           <decl_stmt><decl><type><name>Query</name></type> <name>query</name> <init>= <expr><call><name><name>entry</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>BooleanQuery</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>BooleanQuery</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">65523a6da7d</literal><operator>..</operator><literal type="number">65159d17569</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>BooleanQuery</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>BooleanQuery</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name></name>;</package>
  <expr_stmt><expr><operator>*</operator><operator>/</operator></expr></expr_stmt>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Term</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>ToStringUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>BooleanClause</name><operator>.</operator><name>Occur</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">212</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">212</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>BooleanQuery</name> extends <name>Query</name> implements <name><name>Iterable</name><argument_list type="generic">&lt;<argument><name>BooleanClause</name></argument>&gt;</argument_list></name> <block>{
     }</block>
 
     @<name>Override</name>
    <specifier>public</specifier> <name>Explanation</name> <call><name>explain</name><argument_list>(<argument><expr><name>ReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>int</name> <name>doc</name></expr></argument>)</argument_list></call>
    <specifier>public</specifier> <name>Explanation</name> <call><name>explain</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>int</name> <name>doc</name></expr></argument>)</argument_list></call>
       <throws>throws <argument><expr><name>IOException</name> <block>{
       <expr><name>final</name> <name>int</name> <name>minShouldMatch</name> <operator>=</operator>
         <call><name><name>BooleanQuery</name><operator>.</operator><name>this</name><operator>.</operator><name>getMinimumNumberShouldMatch</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">288</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">288</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>BooleanQuery</name> extends <name>Query</name> implements <name><name>Iterable</name><argument_list type="generic">&lt;<argument><name>BooleanClause</name></argument>&gt;</argument_list></name> <block>{
     }</block>
 
     @<name>Override</name>
    <specifier>public</specifier> <name>Scorer</name> <call><name>scorer</name><argument_list>(<argument><expr><name>ReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>boolean</name> <name>scoreDocsInOrder</name></expr></argument>, <argument><expr><name>boolean</name> <name>topScorer</name></expr></argument>)</argument_list></call>
    <specifier>public</specifier> <name>Scorer</name> <call><name>scorer</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>boolean</name> <name>scoreDocsInOrder</name></expr></argument>, <argument><expr><name>boolean</name> <name>topScorer</name></expr></argument>)</argument_list></call>
         <throws>throws <argument><expr><name>IOException</name> <block>{
       <expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>Scorer</name></argument>&gt;</argument_list></name> <name>required</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>Scorer</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
       <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>Scorer</name></argument>&gt;</argument_list></name></type> <name>prohibited</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>Scorer</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>CachingSpanFilter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>CachingSpanFilter</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">1939406749e</literal><operator>..</operator><name>b1a2fa80767</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>CachingSpanFilter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>CachingSpanFilter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name></name>;</package>
 
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>Bits</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">61</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">61</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>CachingSpanFilter</name> extends <name>SpanFilter</name> <block>{
   }</block>
 
   @<name>Override</name>
  <specifier>public</specifier> <name>DocIdSet</name> <call><name>getDocIdSet</name><argument_list>(<argument><expr><name>ReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>public</specifier> <name>DocIdSet</name> <call><name>getDocIdSet</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><name>SpanFilterResult</name> <name>result</name> <operator>=</operator> <call><name>getCachedResult</name><argument_list>(<argument><expr><name><name>context</name><operator>.</operator><name>reader</name></name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
     <return>return <expr><ternary><condition><expr><name>result</name> <operator>!=</operator> <literal type="null">null</literal></expr> ?</condition><then> <expr><call><name><name>result</name><operator>.</operator><name>getDocIdSet</name></name><argument_list>()</argument_list></call></expr> </then><else>: <expr><literal type="null">null</literal></expr></else></ternary></expr>;</return>
   <expr_stmt/>}</block_content>
diff --git a/lucene/src/java/org/apache/lucene/search/CachingWrapperFilter.java b/lucene/src/java/org/apache/lucene/search/CachingWrapperFilter.java
index 1fc5c9f8b80..1f865670b56 100644
-- a/lucene/src/java/org/apache/lucene/search/CachingWrapperFilter.java
++ b/lucene/src/java/org/apache/lucene/search/CachingWrapperFilter.java
@@ -23</block><operator>,</operator><expr_stmt><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">23</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt></for> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>WeakHashMap</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>OpenBitSetDISI</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>Bits</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">195</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">195</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>CachingWrapperFilter</name> extends <name>Filter</name> <block>{
   <expr><name>int</name> <name>hitCount</name></expr>, <expr><name>missCount</name></expr>;
 
   @<name>Override</name>
  <specifier>public</specifier> <name>DocIdSet</name> <call><name>getDocIdSet</name><argument_list>(<argument><expr><name>ReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>public</specifier> <name>DocIdSet</name> <call><name>getDocIdSet</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><name>final</name> <name>IndexReader</name> <name>reader</name> <operator>=</operator> <name><name>context</name><operator>.</operator><name>reader</name></name></expr></block></expr></argument></throws></block></expr>;</expr_stmt>
     <decl_stmt><decl><type><specifier>final</specifier> <name>Object</name></type> <name>coreKey</name> <init>= <expr><call><name><name>reader</name><operator>.</operator><name>getCoreCacheKey</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>final</specifier> <name>Object</name></type> <name>delCoreKey</name> <init>= <expr><ternary><condition><expr><call><name><name>reader</name><operator>.</operator><name>hasDeletions</name></name><argument_list>()</argument_list></call></expr> ?</condition><then> <expr><call><name><name>reader</name><operator>.</operator><name>getDeletedDocs</name></name><argument_list>()</argument_list></call></expr> </then><else>: <expr><name>coreKey</name></expr></else></ternary></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>ConstantScoreQuery</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>ConstantScoreQuery</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">10090e98ee9</literal><operator>..</operator><name>c8b8c9da180</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>ConstantScoreQuery</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>ConstantScoreQuery</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name></name>;</package>
  <expr_stmt><expr><operator>*</operator><operator>/</operator></expr></expr_stmt>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Term</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>ToStringUtils</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">133</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">133</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>ConstantScoreQuery</name> extends <name>Query</name> <block>{
     }</block>
 
     @<name>Override</name>
    <specifier>public</specifier> <name>Scorer</name> <call><name>scorer</name><argument_list>(<argument><expr><name>ReaderContext</name> <name>context</name></expr></argument>,  <argument><expr><name>boolean</name> <name>scoreDocsInOrder</name></expr></argument>, <argument><expr><name>boolean</name> <name>topScorer</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><specifier>public</specifier> <name>Scorer</name> <call><name>scorer</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>,  <argument><expr><name>boolean</name> <name>scoreDocsInOrder</name></expr></argument>, <argument><expr><name>boolean</name> <name>topScorer</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
       <expr><name>final</name> <name>DocIdSetIterator</name> <name>disi</name></expr></block></expr></argument></throws></expr>;</expr_stmt>
       <if_stmt><if>if <condition>(<expr><name>filter</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
         <assert>assert <expr><name>query</name> <operator>==</operator> <literal type="null">null</literal></expr>;</assert>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">157</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">157</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>ConstantScoreQuery</name> extends <name>Query</name> <block>{
     }</block>
 
     @<name>Override</name>
    <specifier>public</specifier> <name>Explanation</name> <call><name>explain</name><argument_list>(<argument><expr><name>ReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>int</name> <name>doc</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><specifier>public</specifier> <name>Explanation</name> <call><name>explain</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>int</name> <name>doc</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
       <expr><name>final</name> <name>Scorer</name> <name>cs</name> <operator>=</operator> <call><name>scorer</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
       <decl_stmt><decl><type><specifier>final</specifier> <name>boolean</name></type> <name>exists</name> <init>= <expr><operator>(</operator><name>cs</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>cs</name><operator>.</operator><name>advance</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>doc</name><operator>)</operator></expr></init></decl>;</decl_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>DisjunctionMaxQuery</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>DisjunctionMaxQuery</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">83f7764776f</literal><operator>..</operator><name>f7a797eec20</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>DisjunctionMaxQuery</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>DisjunctionMaxQuery</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">23</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">23</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Iterator</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Term</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
@@ -142,7 +142,7 @@ public class DisjunctionMaxQuery extends Query implements Iterable&lt;Query&gt; {
 
     /* Create the scorer used to score our associated DisjunctionMaxQuery */</comment>
     <decl_stmt><decl><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>Scorer</name></type> <name>scorer</name><argument_list>(<argument><expr><name>ReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>boolean</name> <name>scoreDocsInOrder</name></expr></argument>,
    <argument><expr><specifier>public</specifier> <name>Scorer</name> <call><name>scorer</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>boolean</name> <name>scoreDocsInOrder</name></expr></argument>,
         <argument><expr><name>boolean</name> <name>topScorer</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
       <expr><name><name>Scorer</name><index>[]</index></name> <name>scorers</name> <operator>=</operator> <operator>new</operator> <name><name>Scorer</name><index>[<expr><call><name><name>weights</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>]</index></name></expr></block></expr></argument></throws></expr></argument>;</argument_list></decl></decl_stmt>
       <decl_stmt><decl><type><name>int</name></type> <name>idx</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">159</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">159</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>DisjunctionMaxQuery</name> extends <name>Query</name> implements <name><name>Iterable</name><argument_list type="generic">&lt;<argument><name>Query</name></argument>&gt;</argument_list></name> <block>{
 
     <comment type="block">/* Explain the score we computed for doc */</comment>
     @<expr><name>Override</name>
    <specifier>public</specifier> <name>Explanation</name> <call><name>explain</name><argument_list>(<argument><expr><name>ReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>int</name> <name>doc</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><specifier>public</specifier> <name>Explanation</name> <call><name>explain</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>int</name> <name>doc</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr>
       <if_stmt><if>if <condition>(<expr><call><name><name>disjuncts</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><call><name><name>weights</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>explain</name><argument_list>(<argument><expr><name>context</name></expr></argument>,<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
       <name>ComplexExplanation</name> <name>result</name> <operator>=</operator> <operator>new</operator> <call><name>ComplexExplanation</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
       <decl_stmt><decl><type><name>float</name></type> <name>max</name> <init>= <expr><literal type="number">0.0f</literal></expr></init></decl>, <decl><type ref="prev"/><name>sum</name> <init>= <expr><literal type="number">0.0f</literal></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>FieldCacheRangeFilter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>FieldCacheRangeFilter</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>e0a03169285</name><operator>..</operator><literal type="number">9293e509608</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>FieldCacheRangeFilter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>FieldCacheRangeFilter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name></name>;</package>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>MultiFields</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>NumericUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>Bits</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">74</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">74</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> class <name><name>FieldCacheRangeFilter</name><argument_list type="generic">&lt;<argument><name>T</name></argument>&gt;</argument_list></name> extends <name>Filter</name> <block>{
   
   <comment type="block" format="javadoc">/** This method is implemented for each data type */</comment>
   @<expr><name>Override</name>
  <specifier>public</specifier> <specifier>abstract</specifier> <name>DocIdSet</name> <call><name>getDocIdSet</name><argument_list>(<argument><expr><name>ReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws></expr>;
  <specifier>public</specifier> <specifier>abstract</specifier> <name>DocIdSet</name> <call><name>getDocIdSet</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws></block></expr>;</expr_stmt>
 
   <comment type="block" format="javadoc">/**
    * Creates a string range filter using {@link FieldCache#getTermsIndex}. This works with all
@@ -84,7 +84,7 @@ public abstract class FieldCacheRangeFilter&lt;T&gt; extends Filter {
   public static FieldCacheRangeFilter&lt;String&gt; newStringRange(String field, String lowerVal, String upperVal, boolean includeLower, boolean includeUpper) {
     return new FieldCacheRangeFilter&lt;String&gt;(field, null, lowerVal, upperVal, includeLower, includeUpper) {
       @Override
      public DocIdSet getDocIdSet(ReaderContext context) throws IOException {
      public DocIdSet getDocIdSet(AtomicReaderContext context) throws IOException {
         final FieldCache.DocTermsIndex fcsi = FieldCache.DEFAULT.getTermsIndex(context.reader, field);
         final BytesRef spare = new BytesRef();
         final int lowerPoint = fcsi.binarySearchLookup(lowerVal == null ? null : new BytesRef(lowerVal), spare);
@@ -153,7 +153,7 @@ public abstract class FieldCacheRangeFilter&lt;T&gt; extends Filter {
   public static FieldCacheRangeFilter&lt;Byte&gt; newByteRange(String field, FieldCache.ByteParser parser, Byte lowerVal, Byte upperVal, boolean includeLower, boolean includeUpper) {
     return new FieldCacheRangeFilter&lt;Byte&gt;(field, parser, lowerVal, upperVal, includeLower, includeUpper) {
       @Override
      public DocIdSet getDocIdSet(ReaderContext context) throws IOException {
      public DocIdSet getDocIdSet(AtomicReaderContext context) throws IOException {
         final byte inclusiveLowerPoint, inclusiveUpperPoint;
         if (lowerVal != null) {
           final byte i = lowerVal.byteValue();
@@ -204,7 +204,7 @@ public abstract class FieldCacheRangeFilter&lt;T&gt; extends Filter {
   public static FieldCacheRangeFilter&lt;Short&gt; newShortRange(String field, FieldCache.ShortParser parser, Short lowerVal, Short upperVal, boolean includeLower, boolean includeUpper) {
     return new FieldCacheRangeFilter&lt;Short&gt;(field, parser, lowerVal, upperVal, includeLower, includeUpper) {
       @Override
      public DocIdSet getDocIdSet(ReaderContext context) throws IOException {
      public DocIdSet getDocIdSet(AtomicReaderContext context) throws IOException {
         final short inclusiveLowerPoint, inclusiveUpperPoint;
         if (lowerVal != null) {
           short i = lowerVal.shortValue();
@@ -255,7 +255,7 @@ public abstract class FieldCacheRangeFilter&lt;T&gt; extends Filter {
   public static FieldCacheRangeFilter&lt;Integer&gt; newIntRange(String field, FieldCache.IntParser parser, Integer lowerVal, Integer upperVal, boolean includeLower, boolean includeUpper) {
     return new FieldCacheRangeFilter&lt;Integer&gt;(field, parser, lowerVal, upperVal, includeLower, includeUpper) {
       @Override
      public DocIdSet getDocIdSet(ReaderContext context) throws IOException {
      public DocIdSet getDocIdSet(AtomicReaderContext context) throws IOException {
         final int inclusiveLowerPoint, inclusiveUpperPoint;
         if (lowerVal != null) {
           int i = lowerVal.intValue();
@@ -306,7 +306,7 @@ public abstract class FieldCacheRangeFilter&lt;T&gt; extends Filter {
   public static FieldCacheRangeFilter&lt;Long&gt; newLongRange(String field, FieldCache.LongParser parser, Long lowerVal, Long upperVal, boolean includeLower, boolean includeUpper) {
     return new FieldCacheRangeFilter&lt;Long&gt;(field, parser, lowerVal, upperVal, includeLower, includeUpper) {
       @Override
      public DocIdSet getDocIdSet(ReaderContext context) throws IOException {
      public DocIdSet getDocIdSet(AtomicReaderContext context) throws IOException {
         final long inclusiveLowerPoint, inclusiveUpperPoint;
         if (lowerVal != null) {
           long i = lowerVal.longValue();
@@ -357,7 +357,7 @@ public abstract class FieldCacheRangeFilter&lt;T&gt; extends Filter {
   public static FieldCacheRangeFilter&lt;Float&gt; newFloatRange(String field, FieldCache.FloatParser parser, Float lowerVal, Float upperVal, boolean includeLower, boolean includeUpper) {
     return new FieldCacheRangeFilter&lt;Float&gt;(field, parser, lowerVal, upperVal, includeLower, includeUpper) {
       @Override
      public DocIdSet getDocIdSet(ReaderContext context) throws IOException {
      public DocIdSet getDocIdSet(AtomicReaderContext context) throws IOException {
         // we transform the floating point numbers to sortable integers
         // using NumericUtils to easier find the next bigger/lower value
         final float inclusiveLowerPoint, inclusiveUpperPoint;
@@ -412,7 +412,7 @@ public abstract class FieldCacheRangeFilter&lt;T&gt; extends Filter {
   public static FieldCacheRangeFilter&lt;Double&gt; newDoubleRange(String field, FieldCache.DoubleParser parser, Double lowerVal, Double upperVal, boolean includeLower, boolean includeUpper) {
     return new FieldCacheRangeFilter&lt;Double&gt;(field, parser, lowerVal, upperVal, includeLower, includeUpper) {
       @Override
      public DocIdSet getDocIdSet(ReaderContext context) throws IOException {
      public DocIdSet getDocIdSet(AtomicReaderContext context) throws IOException {
         // we transform the floating point numbers to sortable integers
         // using NumericUtils to easier find the next bigger/lower value
         final double inclusiveLowerPoint, inclusiveUpperPoint;
diff --git a/lucene/src/java/org/apache/lucene/search/FieldCacheTermsFilter.java b/lucene/src/java/org/apache/lucene/search/FieldCacheTermsFilter.java
index 684b139e4cf..7c9099b6d2c 100644
-- a/lucene/src/java/org/apache/lucene/search/FieldCacheTermsFilter.java
++ b/lucene/src/java/org/apache/lucene/search/FieldCacheTermsFilter.java
@@ -21,7 +21,7 @@ import java.io.IOException;
 
 import org.apache.lucene.index.DocsEnum; // javadoc @link
 import org.apache.lucene.index.IndexReader;
import org.apache.lucene.index.IndexReader.ReaderContext;
import org.apache.lucene.index.IndexReader.AtomicReaderContext;
 import org.apache.lucene.util.OpenBitSet;
 import org.apache.lucene.util.BytesRef;
 
@@ -116,7 +116,7 @@ public class FieldCacheTermsFilter extends Filter {
   }
 
   @Override
  public DocIdSet getDocIdSet(ReaderContext context) throws IOException {
  public DocIdSet getDocIdSet(AtomicReaderContext context) throws IOException {
     return new FieldCacheTermsFilterDocIdSet(getFieldCache().getTermsIndex(context.reader, field));
   }
 
diff --git a/lucene/src/java/org/apache/lucene/search/Filter.java b/lucene/src/java/org/apache/lucene/search/Filter.java
index 2dea148e94e..f4404c71860 100644
-- a/lucene/src/java/org/apache/lucene/search/Filter.java
++ b/lucene/src/java/org/apache/lucene/search/Filter.java
@@ -19,7 +19,7 @@ package org.apache.lucene.search;
 
 import java.io.IOException;
 
import org.apache.lucene.index.IndexReader.ReaderContext;
import org.apache.lucene.index.IndexReader.AtomicReaderContext;
 import org.apache.lucene.util.DocIdBitSet;
 
 /** 
@@ -38,7 +38,7 @@ public abstract class Filter implements java.io.Serializable {
    * must refer to document IDs for that segment, not for
    * the top-level reader.
    * 
   * @param context a {@link ReaderContext} instance opened on the index currently
   * @param context a {@link AtomicReaderContext} instance opened on the index currently
    *         searched on. Note, it is likely that the provided reader info does not
    *         represent the whole underlying index i.e. if the index has more than
    *         one segment the given reader only represents a single segment.
@@ -52,6 +52,5 @@ public abstract class Filter implements java.io.Serializable {
    * 
    * @see DocIdBitSet
    */</comment>
  <comment type="line">// TODO make this context an AtomicContext</comment>
  <function_decl><type><specifier>public</specifier> <specifier>abstract</specifier> <name>DocIdSet</name></type> <name>getDocIdSet</name><parameter_list>(<parameter><decl><type><name>ReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws>;</function_decl>
  <function_decl><type><specifier>public</specifier> <specifier>abstract</specifier> <name>DocIdSet</name></type> <name>getDocIdSet</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws>;</function_decl>
 <expr_stmt/>}</block_content>
diff --git a/lucene/src/java/org/apache/lucene/search/FilteredQuery.java b/lucene/src/java/org/apache/lucene/search/FilteredQuery.java
index f0b6001665f..20ba46fa3b6 100644
-- a/lucene/src/java/org/apache/lucene/search/FilteredQuery.java
++ b/lucene/src/java/org/apache/lucene/search/FilteredQuery.java
@@ -18</block><operator>,</operator><expr_stmt><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt></if></if_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name></name>;</package>
  <expr_stmt><expr><operator>*</operator><operator>/</operator></expr></expr_stmt>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Term</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>ToStringUtils</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">82</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">82</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ extends <name>Query</name> <block>{
       }</block>
 
       @<name>Override</name>
      <specifier>public</specifier> <name>Explanation</name> <call><name>explain</name> <argument_list>(<argument><expr><name>ReaderContext</name> <name>ir</name></expr></argument>, <argument><expr><name>int</name> <name>i</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
      <expr><specifier>public</specifier> <name>Explanation</name> <call><name>explain</name> <argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>ir</name></expr></argument>, <argument><expr><name>int</name> <name>i</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
         <expr><name>Explanation</name> <name>inner</name> <operator>=</operator> <call><name><name>weight</name><operator>.</operator><name>explain</name></name> <argument_list>(<argument><expr><name>ir</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
         <if_stmt><if>if <condition>(<expr><call><name>getBoost</name><argument_list>()</argument_list></call><operator>!=</operator><literal type="number">1</literal></expr>)</condition> <block>{<block_content>
           <decl_stmt><decl><type><name>Explanation</name></type> <name>preBoost</name> <init>= <expr><name>inner</name></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">112</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">112</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ extends <name>Query</name> <block>{
 
       <comment type="line">// return a filtering scorer</comment>
       @<expr><name>Override</name>
      <specifier>public</specifier> <name>Scorer</name> <call><name>scorer</name><argument_list>(<argument><expr><name>ReaderContext</name> <name>indexReader</name></expr></argument>, <argument><expr><name>boolean</name> <name>scoreDocsInOrder</name></expr></argument>, <argument><expr><name>boolean</name> <name>topScorer</name></expr></argument>)</argument_list></call>
      <specifier>public</specifier> <name>Scorer</name> <call><name>scorer</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>indexReader</name></expr></argument>, <argument><expr><name>boolean</name> <name>scoreDocsInOrder</name></expr></argument>, <argument><expr><name>boolean</name> <name>topScorer</name></expr></argument>)</argument_list></call>
           <throws>throws <argument><expr><name>IOException</name> <block>{
         <expr><name>final</name> <name>Scorer</name> <name>scorer</name> <operator>=</operator> <call><name><name>weight</name><operator>.</operator><name>scorer</name></name><argument_list>(<argument><expr><name>indexReader</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</block></expr></expr_stmt>
         <if_stmt><if>if <condition>(<expr><name>scorer</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>IndexSearcher</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>IndexSearcher</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">2fdff34ad13</literal><operator>..</operator><literal type="number">0dd8dfb85e3</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>IndexSearcher</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>IndexSearcher</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">145</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">145</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>IndexSearcher</name> <block>{
    <expr><operator>*</operator> @<name><name>lucene</name><operator>.</operator><name>experimental</name></name>
    <operator>*</operator><operator>/</operator>
   <specifier>public</specifier> <call><name>IndexSearcher</name><argument_list>(<argument><expr><name>ReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <block>{
    <expr><call><name>this</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;
    <call><name>this</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><operator>(</operator><name>ExecutorService</name><operator>)</operator> <literal type="null">null</literal></expr></argument>)</argument_list></call></block></expr>;
   }</block>
   
   <comment type="line">// convenience ctor for other IR based ctors</comment>
@@ <operator>-</operator><literal type="number">159</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">159</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> class <name>IndexSearcher</name> <block>{
     <expr><name><name>this</name><operator>.</operator><name>executor</name></name> <operator>=</operator> <name>executor</name></expr>;
     <name><name>this</name><operator>.</operator><name>closeReader</name></name> <operator>=</operator> <name>closeReader</name></block></expr>;</expr_stmt>
     <expr_stmt><expr><name><name>this</name><operator>.</operator><name>readerContext</name></name> <operator>=</operator> <name>context</name></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name><name>context</name><operator>.</operator><name>isAtomic</name></name></expr>)</condition> <block>{<block_content>
      <assert>assert <expr><call><name><name>context</name><operator>.</operator><name>leaves</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="null">null</literal> <operator>:</operator> <literal type="string">"AtomicReaderContext must not have any leaves"</literal></expr>;</assert>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>leafContexts</name></name> <operator>=</operator> <operator>new</operator> <name><name>AtomicReaderContext</name><index>[]</index></name> <block>{ <expr><operator>(</operator><name>AtomicReaderContext</name><operator>)</operator> <name>context</name></expr> }</block></expr>;</expr_stmt>
    <expr_stmt/>}</block_content> else <block>{<block_content>
      <assert>assert <expr><call><name><name>context</name><operator>.</operator><name>leaves</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="null">null</literal> <operator>:</operator> <literal type="string">"non-atomic top-level context must have leaves"</literal></expr>;</assert>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>leafContexts</name></name> <operator>=</operator> <call><name><name>context</name><operator>.</operator><name>leaves</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt/>}</block_content>

    leafContexts = ReaderUtil.leaves(context</block></block></if></if_stmt>)</block_content></block><empty_stmt>;</empty_stmt></if></if_stmt>
    
     <if_stmt><if>if <condition>(<expr><name>executor</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><name>subSearchers</name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
     <expr_stmt/>}</block_content> else <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">175</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">169</literal></expr><operator>,</operator><expr><literal type="number">25</literal> @@ <specifier>public</specifier> class <name>IndexSearcher</name> <block>{
         <if_stmt><if>if <condition>(<expr><name><name>leafContexts</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>reader</name> <operator>==</operator> <name><name>context</name><operator>.</operator><name>reader</name></name></expr>)</condition> <block>{<block_content>
           <expr_stmt><expr><name><name>subSearchers</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name>this</name></expr>;</expr_stmt>
         <expr_stmt/>}</block_content> else <block>{<block_content>
          <expr_stmt><expr><name><name>subSearchers</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>new</operator> <call><name>IndexSearcher</name><argument_list>(<argument><expr><name><name>leafContexts</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name><name>reader</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// we need to get a TL context for sub searchers!</comment>
          <expr_stmt><expr><name><name>subSearchers</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>new</operator> <call><name>IndexSearcher</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name><name>leafContexts</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt/>}</block_content>
       }
     }
   }

  
  <comment type="block">/* Ctor for concurrent sub-searchers searching only on a specific leaf of the given top-reader context
   * - instead of searching over all leaves this searcher only searches a single leaf searcher slice. Hence, 
   * for scorer and filter this looks like an ordinary search in the hierarchy such that there is no difference
   * between single and multi-threaded */</comment>
  private IndexSearcher(ReaderContext topLevel</block></block><operator>,</operator> <expr_stmt><expr><name>AtomicReaderContext</name> <name>leaf</name></expr></expr_stmt></if></if_stmt></block></expr></expr_stmt></block_content></block></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></try></block_content></block></if></if_stmt></block></expr></expr_stmt></block_content></block></block></try></block_content></block></try></block></expr></expr_stmt></block></class></expr></argument>)</argument_list></call> <block>{
    <expr><name>readerContext</name> <operator>=</operator> <name>topLevel</name></expr>;
    <expr><name>reader</name> <operator>=</operator> <name><name>topLevel</name><operator>.</operator><name>reader</name></name></expr>;
    <expr><name>leafContexts</name> <operator>=</operator> <operator>new</operator> <name><name>AtomicReaderContext</name><index>[]</index></name> <block>{<expr><name>leaf</name></expr>}</block></expr>;
    <expr><name>executor</name> <operator>=</operator> <literal type="null">null</literal></expr>;
    <expr><name>subSearchers</name> <operator>=</operator> <literal type="null">null</literal></expr>;
    <expr><name>closeReader</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;
  }</block>
  
   <comment type="block" format="javadoc">/** Return the {@link IndexReader} this searches. */</comment>
   <specifier>public</specifier> <name>IndexReader</name> <call><name>getIndexReader</name><argument_list>()</argument_list></call> <block>{
     <return>return <expr><name>reader</name></expr>;</return>
@@ <operator>-</operator><literal type="number">365</literal>,<literal type="number">7</literal> <operator>+</operator><literal type="number">372</literal>,<literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>IndexSearcher</name> <block>{
     
       <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>subSearchers</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content> <comment type="line">// search each sub</comment>
         <expr_stmt><expr><call><name><name>runner</name><operator>.</operator><name>submit</name></name><argument_list>(
                      <argument><expr><operator>new</operator> <call><name>MultiSearcherCallableNoSort</name><argument_list>(<argument><expr><name>lock</name></expr></argument>, <argument><expr><name><name>subSearchers</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name>weight</name></expr></argument>, <argument><expr><name>filter</name></expr></argument>, <argument><expr><name>nDocs</name></expr></argument>, <argument><expr><name>hq</name></expr></argument>, <argument><expr><name><name>leafContexts</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>docBase</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                      <expr_stmt><expr><operator>new</operator> <call><name>SearcherCallableNoSort</name><argument_list>(<argument><expr><name>lock</name></expr></argument>, <argument><expr><name><name>subSearchers</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name>weight</name></expr></argument>, <argument><expr><name>filter</name></expr></argument>, <argument><expr><name>nDocs</name></expr></argument>, <argument><expr><name>hq</name></expr></argument>)</argument_list></call></expr></expr_stmt>)</block_content></block><empty_stmt>;</empty_stmt></for>
       }</block>
 
       <name>int</name> <name>totalHits</name> <operator>=</operator> <literal type="number">0</literal></block></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">434</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">441</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>IndexSearcher</name> <block>{
       <expr><name>final</name> <name><name>ExecutionHelper</name><argument_list type="generic">&lt;<argument><name>TopFieldDocs</name></argument>&gt;</argument_list></name> <name>runner</name> <operator>=</operator> <operator>new</operator> <call><name><name>ExecutionHelper</name><argument_list type="generic">&lt;<argument><name>TopFieldDocs</name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>executor</name></expr></argument>)</argument_list></call></expr>;
       <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>subSearchers</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content> <comment type="line">// search each sub</comment>
         <expr_stmt><expr><call><name><name>runner</name><operator>.</operator><name>submit</name></name><argument_list>(
                      <argument><expr><operator>new</operator> <call><name>MultiSearcherCallableWithSort</name><argument_list>(<argument><expr><name>lock</name></expr></argument>, <argument><expr><name><name>subSearchers</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name>weight</name></expr></argument>, <argument><expr><name>filter</name></expr></argument>, <argument><expr><name>nDocs</name></expr></argument>, <argument><expr><name>hq</name></expr></argument>, <argument><expr><name>sort</name></expr></argument>, <argument><expr><name><name>leafContexts</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>docBase</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                      <expr_stmt><expr><operator>new</operator> <call><name>SearcherCallableWithSort</name><argument_list>(<argument><expr><name>lock</name></expr></argument>, <argument><expr><name><name>subSearchers</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name>weight</name></expr></argument>, <argument><expr><name>filter</name></expr></argument>, <argument><expr><name>nDocs</name></expr></argument>, <argument><expr><name>hq</name></expr></argument>, <argument><expr><name>sort</name></expr></argument>)</argument_list></call></expr></expr_stmt>)</block_content></block><empty_stmt>;</empty_stmt></for>
       }</block></expr></expr_stmt>
       <decl_stmt><decl><type><name>int</name></type> <name>totalHits</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>float</name></type> <name>maxScore</name> <init>= <expr><name><name>Float</name><operator>.</operator><name>NEGATIVE_INFINITY</name></name></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">493</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">500</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>IndexSearcher</name> <block>{
     }</block></expr></expr_stmt>
   </block_content>}</block></decl></decl_stmt>
 
  <decl_stmt><decl><type><specifier>private</specifier> <name>void</name></type> <name>searchWithFilter</name><argument_list>(<argument><expr><name>ReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>Weight</name> <name>weight</name></expr></argument>,
  <argument><expr><specifier>private</specifier> <name>void</name> <call><name>searchWithFilter</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>Weight</name> <name>weight</name></expr></argument>,
       <argument><expr><name>final</name> <name>Filter</name> <name>filter</name></expr></argument>, <argument><expr><name>final</name> <name>Collector</name> <name>collector</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr></argument>
 
     <assert>assert <expr><name>filter</name> <operator>!=</operator> <literal type="null">null</literal></expr>;</assert></argument_list></decl></decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">621</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">628</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>IndexSearcher</name> <block>{
   <comment type="block" format="javadoc">/**
    * A thread subclass for searching a single searchable 
    */</comment>
  <expr><specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name>class</name> <name>MultiSearcherCallableNoSort</name> implements <name><name>Callable</name><argument_list type="generic">&lt;<argument><name>TopDocs</name></argument>&gt;</argument_list></name> <block>{
  <expr><specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name>class</name> <name>SearcherCallableNoSort</name> implements <name><name>Callable</name><argument_list type="generic">&lt;<argument><name>TopDocs</name></argument>&gt;</argument_list></name> <block>{
 
     <expr><specifier>private</specifier> <name>final</name> <name>Lock</name> <name>lock</name></expr>;
     <expr><specifier>private</specifier> <name>final</name> <name>IndexSearcher</name> <name>searchable</name></expr>;
@@ <expr><operator>-</operator><literal type="number">629</literal></expr>,<expr><literal type="number">17</literal> <operator>+</operator><literal type="number">636</literal></expr>,<expr><literal type="number">15</literal> @@ <specifier>public</specifier> <name>class</name> <name>IndexSearcher</name> <block>{
     <expr><specifier>private</specifier> <name>final</name> <name>Filter</name> <name>filter</name></expr>;
     <expr><specifier>private</specifier> <name>final</name> <name>int</name> <name>nDocs</name></expr>;
     <expr><specifier>private</specifier> <name>final</name> <name>HitQueue</name> <name>hq</name></expr>;
    <expr><specifier>private</specifier> <name>final</name> <name>int</name> <name>docBase</name></expr>;
 
    <expr><specifier>public</specifier> <call><name>MultiSearcherCallableNoSort</name><argument_list>(<argument><expr><name>Lock</name> <name>lock</name></expr></argument>, <argument><expr><name>IndexSearcher</name> <name>searchable</name></expr></argument>, <argument><expr><name>Weight</name> <name>weight</name></expr></argument>,
        <argument><expr><name>Filter</name> <name>filter</name></expr></argument>, <argument><expr><name>int</name> <name>nDocs</name></expr></argument>, <argument><expr><name>HitQueue</name> <name>hq</name></expr></argument>, <argument><expr><name>int</name> <name>docBase</name></expr></argument>)</argument_list></call> <block>{
    <expr><specifier>public</specifier> <call><name>SearcherCallableNoSort</name><argument_list>(<argument><expr><name>Lock</name> <name>lock</name></expr></argument>, <argument><expr><name>IndexSearcher</name> <name>searchable</name></expr></argument>, <argument><expr><name>Weight</name> <name>weight</name></expr></argument>,
        <argument><expr><name>Filter</name> <name>filter</name></expr></argument>, <argument><expr><name>int</name> <name>nDocs</name></expr></argument>, <argument><expr><name>HitQueue</name> <name>hq</name></expr></argument>)</argument_list></call> <block>{
       <expr><name><name>this</name><operator>.</operator><name>lock</name></name> <operator>=</operator> <name>lock</name></expr>;
       <expr><name><name>this</name><operator>.</operator><name>searchable</name></name> <operator>=</operator> <name>searchable</name></expr>;
       <expr><name><name>this</name><operator>.</operator><name>weight</name></name> <operator>=</operator> <name>weight</name></expr>;
       <expr><name><name>this</name><operator>.</operator><name>filter</name></name> <operator>=</operator> <name>filter</name></expr>;
       <expr><name><name>this</name><operator>.</operator><name>nDocs</name></name> <operator>=</operator> <name>nDocs</name></expr>;
       <expr><name><name>this</name><operator>.</operator><name>hq</name></name> <operator>=</operator> <name>hq</name></expr>;
      <expr><name><name>this</name><operator>.</operator><name>docBase</name></name> <operator>=</operator> <name>docBase</name></expr>;
     }</block>
 
     <specifier>public</specifier> <name>TopDocs</name> <call><name>call</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument>
@<argument>@ <expr><operator>-</operator><literal type="number">647</literal></expr></argument>,<argument><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">652</literal></expr></argument>,<argument><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>IndexSearcher</name></expr></argument></throws> <block>{<block_content>
       <decl_stmt><decl><type><specifier>final</specifier> <name><name>ScoreDoc</name><index>[]</index></name></type> <name>scoreDocs</name> <init>= <expr><name><name>docs</name><operator>.</operator><name>scoreDocs</name></name></expr></init></decl>;</decl_stmt>
       <for>for <control>(<init><decl><type><name>int</name></type> <name>j</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <name><name>scoreDocs</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>j</name><operator>++</operator></expr></incr>)</control> <block>{<block_content> <comment type="line">// merge scoreDocs into hq</comment>
         <decl_stmt><decl><type><specifier>final</specifier> <name>ScoreDoc</name></type> <name>scoreDoc</name> <init>= <expr><name><name>scoreDocs</name><index>[<expr><name>j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name><name>scoreDoc</name><operator>.</operator><name>doc</name></name> <operator>+=</operator> <name>docBase</name></expr>;</expr_stmt> <comment type="line">// convert doc </comment>
         <comment type="line">//it would be so nice if we had a thread-safe insert </comment>
         <expr_stmt><expr><call><name><name>lock</name><operator>.</operator><name>lock</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
         <try>try <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">665</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">669</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>IndexSearcher</name> <block>{
   <comment type="block" format="javadoc">/**
    * A thread subclass for searching a single searchable 
    */</comment>
  <expr><specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name>class</name> <name>MultiSearcherCallableWithSort</name> implements <name><name>Callable</name><argument_list type="generic">&lt;<argument><name>TopFieldDocs</name></argument>&gt;</argument_list></name> <block>{
  <expr><specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name>class</name> <name>SearcherCallableWithSort</name> implements <name><name>Callable</name><argument_list type="generic">&lt;<argument><name>TopFieldDocs</name></argument>&gt;</argument_list></name> <block>{
 
     <expr><specifier>private</specifier> <name>final</name> <name>Lock</name> <name>lock</name></expr>;
     <expr><specifier>private</specifier> <name>final</name> <name>IndexSearcher</name> <name>searchable</name></expr>;
@@ <expr><operator>-</operator><literal type="number">673</literal></expr>,<expr><literal type="number">37</literal> <operator>+</operator><literal type="number">677</literal></expr>,<expr><literal type="number">21</literal> @@ <specifier>public</specifier> <name>class</name> <name>IndexSearcher</name> <block>{
     <expr><specifier>private</specifier> <name>final</name> <name>Filter</name> <name>filter</name></expr>;
     <expr><specifier>private</specifier> <name>final</name> <name>int</name> <name>nDocs</name></expr>;
     <expr><specifier>private</specifier> <name>final</name> <name>FieldDocSortedHitQueue</name> <name>hq</name></expr>;
    <expr><specifier>private</specifier> <name>final</name> <name>int</name> <name>docBase</name></expr>;
     <expr><specifier>private</specifier> <name>final</name> <name>Sort</name> <name>sort</name></expr>;
 
    <expr><specifier>public</specifier> <call><name>MultiSearcherCallableWithSort</name><argument_list>(<argument><expr><name>Lock</name> <name>lock</name></expr></argument>, <argument><expr><name>IndexSearcher</name> <name>searchable</name></expr></argument>, <argument><expr><name>Weight</name> <name>weight</name></expr></argument>,
        <argument><expr><name>Filter</name> <name>filter</name></expr></argument>, <argument><expr><name>int</name> <name>nDocs</name></expr></argument>, <argument><expr><name>FieldDocSortedHitQueue</name> <name>hq</name></expr></argument>, <argument><expr><name>Sort</name> <name>sort</name></expr></argument>, <argument><expr><name>int</name> <name>docBase</name></expr></argument>)</argument_list></call> <block>{
    <expr><specifier>public</specifier> <call><name>SearcherCallableWithSort</name><argument_list>(<argument><expr><name>Lock</name> <name>lock</name></expr></argument>, <argument><expr><name>IndexSearcher</name> <name>searchable</name></expr></argument>, <argument><expr><name>Weight</name> <name>weight</name></expr></argument>,
        <argument><expr><name>Filter</name> <name>filter</name></expr></argument>, <argument><expr><name>int</name> <name>nDocs</name></expr></argument>, <argument><expr><name>FieldDocSortedHitQueue</name> <name>hq</name></expr></argument>, <argument><expr><name>Sort</name> <name>sort</name></expr></argument>)</argument_list></call> <block>{
       <expr><name><name>this</name><operator>.</operator><name>lock</name></name> <operator>=</operator> <name>lock</name></expr>;
       <expr><name><name>this</name><operator>.</operator><name>searchable</name></name> <operator>=</operator> <name>searchable</name></expr>;
       <expr><name><name>this</name><operator>.</operator><name>weight</name></name> <operator>=</operator> <name>weight</name></expr>;
       <expr><name><name>this</name><operator>.</operator><name>filter</name></name> <operator>=</operator> <name>filter</name></expr>;
       <expr><name><name>this</name><operator>.</operator><name>nDocs</name></name> <operator>=</operator> <name>nDocs</name></expr>;
       <expr><name><name>this</name><operator>.</operator><name>hq</name></name> <operator>=</operator> <name>hq</name></expr>;
      <expr><name><name>this</name><operator>.</operator><name>docBase</name></name> <operator>=</operator> <name>docBase</name></expr>;
       <expr><name><name>this</name><operator>.</operator><name>sort</name></name> <operator>=</operator> <name>sort</name></expr>;
     }</block>
 
     <specifier>public</specifier> <name>TopFieldDocs</name> <call><name>call</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
       <expr><name>final</name> <name>TopFieldDocs</name> <name>docs</name> <operator>=</operator> <call><name><name>searchable</name><operator>.</operator><name>search</name></name> <argument_list>(<argument><expr><name>weight</name></expr></argument>, <argument><expr><name>filter</name></expr></argument>, <argument><expr><name>nDocs</name></expr></argument>, <argument><expr><name>sort</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
      <comment type="line">// If one of the Sort fields is FIELD_DOC, need to fix its values, so that</comment>
      <comment type="line">// it will break ties by doc Id properly. Otherwise, it will compare to</comment>
      <comment type="line">// 'relative' doc Ids, that belong to two different searchables.</comment>
      <for>for <control>(<init><decl><type><name>int</name></type> <name>j</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <name><name>docs</name><operator>.</operator><name>fields</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>j</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name><name>docs</name><operator>.</operator><name>fields</name><index>[<expr><name>j</name></expr>]</index></name><operator>.</operator><call><name>getType</name><argument_list>()</argument_list></call> <operator>==</operator> <name><name>SortField</name><operator>.</operator><name>DOC</name></name></expr>)</condition> <block>{<block_content>
          <comment type="line">// iterate over the score docs and change their fields value</comment>
          <for>for <control>(<init><decl><type><name>int</name></type> <name>j2</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>j2</name> <operator>&lt;</operator> <name><name>docs</name><operator>.</operator><name>scoreDocs</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>j2</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
            <decl_stmt><decl><type><name>FieldDoc</name></type> <name>fd</name> <init>= <expr><operator>(</operator><name>FieldDoc</name><operator>)</operator> <name><name>docs</name><operator>.</operator><name>scoreDocs</name><index>[<expr><name>j2</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name><name>fd</name><operator>.</operator><name>fields</name><index>[<expr><name>j</name></expr>]</index></name> <operator>=</operator> <call><name><name>Integer</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><operator>(</operator><operator>(</operator><name>Integer</name><operator>)</operator> <name><name>fd</name><operator>.</operator><name>fields</name><index>[<expr><name>j</name></expr>]</index></name><operator>)</operator><operator>.</operator><call><name>intValue</name><argument_list>()</argument_list></call> <operator>+</operator> <name>docBase</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt/></block_content></block></for></block_content></block></if></if_stmt></block_content></block></for>}</block></expr>
          <break>break;</break></block></expr>
        }</block></expr>
      }</block>

       <call><name><name>lock</name><operator>.</operator><name>lock</name></name><argument_list>()</argument_list></call></expr>;
       <try>try <block>{<block_content>
         <expr_stmt><expr><call><name><name>hq</name><operator>.</operator><name>setFields</name></name><argument_list>(<argument><expr><name><name>docs</name><operator>.</operator><name>fields</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">714</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">702</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>IndexSearcher</name> <block>{
       <expr><name>final</name> <name><name>ScoreDoc</name><index>[]</index></name> <name>scoreDocs</name> <operator>=</operator> <name><name>docs</name><operator>.</operator><name>scoreDocs</name></name></expr>;
       <for>for <control>(<init><decl><type><name>int</name></type> <name>j</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <name><name>scoreDocs</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>j</name><operator>++</operator></expr></incr>)</control> <block>{<block_content> <comment type="line">// merge scoreDocs into hq</comment>
         <decl_stmt><decl><type><specifier>final</specifier> <name>FieldDoc</name></type> <name>fieldDoc</name> <init>= <expr><operator>(</operator><name>FieldDoc</name><operator>)</operator> <name><name>scoreDocs</name><index>[<expr><name>j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name><name>fieldDoc</name><operator>.</operator><name>doc</name></name> <operator>+=</operator> <name>docBase</name></expr>;</expr_stmt> <comment type="line">// convert doc </comment>
         <comment type="line">//it would be so nice if we had a thread-safe insert </comment>
         <expr_stmt><expr><call><name><name>lock</name><operator>.</operator><name>lock</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
         <try>try <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>MatchAllDocsQuery</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>MatchAllDocsQuery</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">38625194474..f3bad0cdc17</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>MatchAllDocsQuery</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>MatchAllDocsQuery</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name></name>;</package>
  <expr_stmt><expr><operator>*</operator><operator>/</operator></expr></expr_stmt>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Term</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>ToStringUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>Bits</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">127</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">127</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>MatchAllDocsQuery</name> extends <name>Query</name> <block>{
     }</block>
 
     @<name>Override</name>
    <specifier>public</specifier> <name>Scorer</name> <call><name>scorer</name><argument_list>(<argument><expr><name>ReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>boolean</name> <name>scoreDocsInOrder</name></expr></argument>, <argument><expr><name>boolean</name> <name>topScorer</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><specifier>public</specifier> <name>Scorer</name> <call><name>scorer</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>boolean</name> <name>scoreDocsInOrder</name></expr></argument>, <argument><expr><name>boolean</name> <name>topScorer</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr></expr_stmt>
       <return>return <expr><operator>new</operator> <call><name>MatchAllScorer</name><argument_list>(<argument><expr><name><name>context</name><operator>.</operator><name>reader</name></name></expr></argument>, <argument><expr><name>similarity</name></expr></argument>, <argument><expr><name>this</name></expr></argument>,
           <argument><expr><name>normsField</name> <operator>!=</operator> <literal type="null">null</literal> <operator>?</operator> <call><name><name>context</name><operator>.</operator><name>reader</name><operator>.</operator><name>norms</name></name><argument_list>(<argument><expr><name>normsField</name></expr></argument>)</argument_list></call> <operator>:</operator> <literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</return>
     <expr_stmt/></block_content></block></try></block_content></block></for>}</block>
 
     @<name>Override</name>
    <specifier>public</specifier> <name>Explanation</name> <call><name>explain</name><argument_list>(<argument><expr><name>ReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>int</name> <name>doc</name></expr></argument>)</argument_list></call> <block>{
    <expr><specifier>public</specifier> <name>Explanation</name> <call><name>explain</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>int</name> <name>doc</name></expr></argument>)</argument_list></call> <block>{
       <comment type="line">// explain query weight</comment>
       <expr><name>Explanation</name> <name>queryExpl</name> <operator>=</operator> <operator>new</operator> <call><name>ComplexExplanation</name>
         <argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><call><name>getValue</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"MatchAllDocsQuery, product of:"</literal></expr></argument>)</argument_list></call></expr>;
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>MultiPhraseQuery</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>MultiPhraseQuery</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">42b2086ea3c</literal><operator>..</operator><literal type="number">4aa6cfc914d</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>MultiPhraseQuery</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>MultiPhraseQuery</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">21</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">21</literal></expr>,<expr><literal type="number">7</literal> @@</expr> <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import></block></expr>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>*</name></name>;</import></block></expr></expr_stmt>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Term</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>DocsEnum</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>DocsAndPositionsEnum</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">168</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">168</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>MultiPhraseQuery</name> extends <name>Query</name> <block>{
     }</block>
 
     @<name>Override</name>
    <specifier>public</specifier> <name>Scorer</name> <call><name>scorer</name><argument_list>(<argument><expr><name>ReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>boolean</name> <name>scoreDocsInOrder</name></expr></argument>, <argument><expr><name>boolean</name> <name>topScorer</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><specifier>public</specifier> <name>Scorer</name> <call><name>scorer</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>boolean</name> <name>scoreDocsInOrder</name></expr></argument>, <argument><expr><name>boolean</name> <name>topScorer</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr></expr_stmt>
       <if_stmt><if>if <condition>(<expr><call><name><name>termArrays</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>                  <comment type="line">// optimize zero-term case</comment>
         <return>return <expr><literal type="null">null</literal></expr>;</return></block_content></block></if></if_stmt>
       <decl_stmt><decl><type><specifier>final</specifier> <name>IndexReader</name></type> <name>reader</name> <init>= <expr><name><name>context</name><operator>.</operator><name>reader</name></name></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">233</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">233</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>MultiPhraseQuery</name> extends <name>Query</name> <block>{
     }</block>
 
     @<name>Override</name>
    <specifier>public</specifier> <name>Explanation</name> <call><name>explain</name><argument_list>(<argument><expr><name>ReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>int</name> <name>doc</name></expr></argument>)</argument_list></call>
    <specifier>public</specifier> <name>Explanation</name> <call><name>explain</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>int</name> <name>doc</name></expr></argument>)</argument_list></call>
       <throws>throws <argument><expr><name>IOException</name> <block>{
       <expr><name>ComplexExplanation</name> <name>result</name> <operator>=</operator> <operator>new</operator> <call><name>ComplexExplanation</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>result</name><operator>.</operator><name>setDescription</name></name><argument_list>(<argument><expr><literal type="string">"weight("</literal><operator>+</operator><call><name>getQuery</name><argument_list>()</argument_list></call><operator>+</operator><literal type="string">" in "</literal><operator>+</operator><name>doc</name><operator>+</operator><literal type="string">"), product of:"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>MultiTermQueryWrapperFilter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>MultiTermQueryWrapperFilter</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">6d591c8a984</literal><operator>..</operator><literal type="number">8a6df063b83</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>MultiTermQueryWrapperFilter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>MultiTermQueryWrapperFilter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Fields</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Terms</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>TermsEnum</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>DocsEnum</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">105</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">105</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name><name>MultiTermQueryWrapperFilter</name><argument_list type="generic">&lt;<argument><name>Q</name> <extends>extends <name>MultiTermQuery</name></extends></argument>&gt;</argument_list></name> extends <name>Filte</name>
    <operator>*</operator> <name><name>results</name><operator>.</operator></name>
    *<operator>/</operator>
   @<name>Override</name>
  <specifier>public</specifier> <name>DocIdSet</name> <call><name>getDocIdSet</name><argument_list>(<argument><expr><name>ReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>public</specifier> <name>DocIdSet</name> <call><name>getDocIdSet</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><name>final</name> <name>IndexReader</name> <name>reader</name> <operator>=</operator> <name><name>context</name><operator>.</operator><name>reader</name></name></expr></block></expr></argument></throws></expr>;</expr_stmt>
     <decl_stmt><decl><type><specifier>final</specifier> <name>Fields</name></type> <name>fields</name> <init>= <expr><call><name><name>reader</name><operator>.</operator><name>fields</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <if_stmt><if>if <condition>(<expr><name>fields</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>PhraseQuery</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>PhraseQuery</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">7142461ef25</literal><operator>..</operator><name>c465f3cb023</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>PhraseQuery</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>PhraseQuery</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Term</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>DocsAndPositionsEnum</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">175</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">175</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>PhraseQuery</name> extends <name>Query</name> <block>{
     }</block>
 
     @<name>Override</name>
    <specifier>public</specifier> <name>Scorer</name> <call><name>scorer</name><argument_list>(<argument><expr><name>ReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>boolean</name> <name>scoreDocsInOrder</name></expr></argument>, <argument><expr><name>boolean</name> <name>topScorer</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><specifier>public</specifier> <name>Scorer</name> <call><name>scorer</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>boolean</name> <name>scoreDocsInOrder</name></expr></argument>, <argument><expr><name>boolean</name> <name>topScorer</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr></expr_stmt>
       <if_stmt><if>if <condition>(<expr><call><name><name>terms</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>			  <comment type="line">// optimize zero-term case</comment>
         <return>return <expr><literal type="null">null</literal></expr>;</return></block_content></block></if></if_stmt>
       <decl_stmt><decl><type><specifier>final</specifier> <name>IndexReader</name></type> <name>reader</name> <init>= <expr><name><name>context</name><operator>.</operator><name>reader</name></name></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">221</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">221</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>PhraseQuery</name> extends <name>Query</name> <block>{
     }</block>
 
     @<name>Override</name>
    <specifier>public</specifier> <name>Explanation</name> <call><name>explain</name><argument_list>(<argument><expr><name>ReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>int</name> <name>doc</name></expr></argument>)</argument_list></call>
    <specifier>public</specifier> <name>Explanation</name> <call><name>explain</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>int</name> <name>doc</name></expr></argument>)</argument_list></call>
       <throws>throws <argument><expr><name>IOException</name> <block>{
 
       <expr><name>Explanation</name> <name>result</name> <operator>=</operator> <operator>new</operator> <call><name>Explanation</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>QueryWrapperFilter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>QueryWrapperFilter</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>a2c2c29eaa1</name><operator>..</operator><literal type="number">31077e46683</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>QueryWrapperFilter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>QueryWrapperFilter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name></name>;</package>
  <expr_stmt><expr><operator>*</operator><operator>/</operator></expr></expr_stmt>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 
 <comment type="block" format="javadoc">/** 
  * Constrains search results to only match those which also match a provided
@@ -46,9 +47,10 @@ public class QueryWrapperFilter extends Filter {
   }
 
   @Override
  public DocIdSet getDocIdSet(final ReaderContext context) throws IOException {
  public DocIdSet getDocIdSet(final AtomicReaderContext context) throws IOException {
     // get a private context that is used to rewrite, createWeight and score eventually
    final ReaderContext privateContext = context.reader.getTopReaderContext();
    assert context.reader.getTopReaderContext().isAtomic;
    final AtomicReaderContext privateContext = (AtomicReaderContext) context.reader.getTopReaderContext();
     final Weight weight = query.weight(new IndexSearcher(privateContext));
     return new DocIdSet() {
       @Override
diff --git a/lucene/src/java/org/apache/lucene/search/SpanQueryFilter.java b/lucene/src/java/org/apache/lucene/search/SpanQueryFilter.java
index 68649be097a..6c12dac39b7 100644
-- a/lucene/src/java/org/apache/lucene/search/SpanQueryFilter.java
++ b/lucene/src/java/org/apache/lucene/search/SpanQueryFilter.java
@@ -17,7 +17,7 @@ package org.apache.lucene.search;
 
 
 import org.apache.lucene.index.IndexReader;
import org.apache.lucene.index.IndexReader.ReaderContext;
import org.apache.lucene.index.IndexReader.AtomicReaderContext;
 import org.apache.lucene.search.spans.SpanQuery;
 import org.apache.lucene.search.spans.Spans;
 import org.apache.lucene.util.OpenBitSet;
@@ -53,7 +53,7 @@ public class SpanQueryFilter extends SpanFilter {
   }
 
   @Override
  public DocIdSet getDocIdSet(ReaderContext context) throws IOException {
  public DocIdSet getDocIdSet(AtomicReaderContext context) throws IOException {
     SpanFilterResult result = bitSpans(context.reader);
     return result.getDocIdSet();
   }
diff --git a/lucene/src/java/org/apache/lucene/search/TermQuery.java b/lucene/src/java/org/apache/lucene/search/TermQuery.java
index bf8346cfb50..5ed96f8ddca 100644
-- a/lucene/src/java/org/apache/lucene/search/TermQuery.java
++ b/lucene/src/java/org/apache/lucene/search/TermQuery.java
@@ -42,9 +42,11 @@ public class TermQuery extends Query {
     private float queryNorm;
     private float queryWeight;
     private IDFExplanation idfExp;
    private transient ReaderContext weightContext; // only set if -ea for assert in scorer()
 
     public TermWeight(IndexSearcher searcher)
       throws IOException {
      assert setWeightContext(searcher);
       this.similarity = getSimilarity(searcher);
       if (docFreq != -1) {
         idfExp = similarity.idfExplain(term, searcher, docFreq);
@@ -77,7 +79,8 @@ public class TermQuery extends Query {
     }
 
     @Override
    public Scorer scorer(ReaderContext context, boolean scoreDocsInOrder, boolean topScorer) throws IOException {
    public Scorer scorer(AtomicReaderContext context, boolean scoreDocsInOrder, boolean topScorer) throws IOException {
      assert assertTopReaderContext(context);
       final IndexReader reader = context.reader;
       DocsEnum docs = reader.termDocsEnum(reader.getDeletedDocs(),
                                           term.field(),
@@ -89,9 +92,21 @@ public class TermQuery extends Query {
 
       return new TermScorer(this, docs, similarity, reader.norms(term.field()));
     }
    
    private boolean assertTopReaderContext(ReaderContext context) {
      while (context.parent != null) {
        context = context.parent;
      }
      return weightContext == context;
    }
    
    private boolean setWeightContext(IndexSearcher searcher) {
      weightContext = searcher.getTopReaderContext();
      return true;
    }
 
     @Override
    public Explanation explain(ReaderContext context, int doc)
    public Explanation explain(AtomicReaderContext context, int doc)
       throws IOException {
       final IndexReader reader = context.reader;
 
diff --git a/lucene/src/java/org/apache/lucene/search/Weight.java b/lucene/src/java/org/apache/lucene/search/Weight.java
index 016904eb833..e649530e530 100644
-- a/lucene/src/java/org/apache/lucene/search/Weight.java
++ b/lucene/src/java/org/apache/lucene/search/Weight.java
@@ -34,12 +34,9 @@ import org.apache.lucene.index.IndexReader.ReaderContext;
  * {@link IndexReader} dependent state should reside in the {@link Scorer}.
  * &lt;p&gt;
  * Since {@link Weight} creates {@link Scorer} instances for a given
 * {@link ReaderContext} ({@link #scorer(ReaderContext, boolean, boolean)})
 * {@link AtomicReaderContext} ({@link #scorer(AtomicReaderContext, boolean, boolean)})
  * callers must maintain the relationship between the searcher's top-level
 * {@link ReaderContext} and the context used to create a {@link Scorer}. A
 * {@link ReaderContext} used to create a {@link Scorer} should be a leaf
 * context ({@link AtomicReaderContext}) of the searcher's top-level context,
 * otherwise the scorer's state will be undefined. 
 * {@link ReaderContext} and the context used to create a {@link Scorer}. 
  * &lt;p&gt;
  * A &lt;code&gt;Weight&lt;/code&gt; is used in the following way:
  * &lt;ol&gt;
@@ -52,10 +49,9 @@ import org.apache.lucene.index.IndexReader.ReaderContext;
  * &lt;li&gt;The query normalization factor is passed to {@link #normalize(float)}. At
  * this point the weighting is complete.
  * &lt;li&gt;A &lt;code&gt;Scorer&lt;/code&gt; is constructed by
 * {@link #scorer(ReaderContext,boolean,boolean)}.
 * {@link #scorer(AtomicReaderContext,boolean,boolean)}.
  * &lt;/ol&gt;
  * 
 * 
  * @since 2.9
  */</comment>
 <class><specifier>public</specifier> <specifier>abstract</specifier> class <name>Weight</name> <super_list><implements>implements <super><name>Serializable</name></super></implements></super_list> <block>{
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">68</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">64</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>Weight</name> implements <name>Serializable</name> <block>{
    <expr><operator>*</operator> @</expr><return>return <expr><name>an</name> <name>Explanation</name></expr></return> <for>for the score
    * @<throws>throws <argument><expr><name>IOException</name></expr></argument></throws> if an <block>{<block_content><annotation>@<name>link</name></annotation> <expr_stmt><expr><name>IOException</name></expr></expr_stmt></block_content></block></for></block></expr></expr_stmt></block></class></block_content></block></if></if_stmt></block_content></block></try>}</block> <name>occurs</name>
    <operator>*</operator><operator>/</operator>
  <specifier>public</specifier> <specifier>abstract</specifier> <name>Explanation</name> <call><name>explain</name><argument_list>(<argument><expr><name>ReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>int</name> <name>doc</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws></expr>;</expr_stmt>
  <function_decl><type><specifier>public</specifier> <specifier>abstract</specifier> <name>Explanation</name></type> <name>explain</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws>;</function_decl>
 
   <comment type="block" format="javadoc">/** The query that this concerns. */</comment>
   <function_decl><type><specifier>public</specifier> <specifier>abstract</specifier> <name>Query</name></type> <name>getQuery</name><parameter_list>()</parameter_list>;</function_decl>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">90</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">86</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>Weight</name> implements <name>Serializable</name> <block>{
    <expr><operator>*</operator> <name>in</name><operator>-</operator><name><name>order</name><operator>.</operator></name>&lt;<name>br</name><operator>&gt;</operator>
    <operator>*</operator> <operator>&lt;</operator><name>b</name><operator>&gt;</operator><name>NOTE</name><operator>:</operator><operator>&lt;</operator><operator>/</operator><name>b</name><operator>&gt;</operator> <literal type="null">null</literal> <name>can</name> <name>be</name> <name>returned</name></expr> <if_stmt><if>if no documents will be scored by this
    * query.
   * &lt;b&gt;NOTE: Calling this method with a <block>{<block_content><annotation>@<name>link</name></annotation> <expr_stmt><expr><name>ReaderContext</name></expr></expr_stmt></block_content></block></if></if_stmt>}</block> <name>that</name> <name>is</name> <name>not</name> <name>a</name>
   <operator>*</operator> <name>leaf</name> <call><name>context</name> <argument_list>(<argument><expr><block>{@<expr><name>link</name> <name>AtomicReaderContext</name></expr>}</block></expr></argument>)</argument_list></call> <name>of</name> <name>the</name> <name>searcher</name><literal type="char">'s top-level context 
   * used to create this {@link Weight} instance can cause undefined behavior.
    * 
    * @param context
   *          the {@link ReaderContext} for which to return the {@link Scorer}.
   *          the {@link AtomicReaderContext} for which to return the {@link Scorer}.
    * @param scoreDocsInOrder
    *          specifies whether in-order scoring of documents is required. Note
    *          that if set to false (i.e., out-of-order scoring is required),
@@ -111,8 +104,7 @@ public abstract class Weight implements Serializable {
    * @return a {@link Scorer} which scores documents in/out-of order.
    * @throws IOException
    */
  // TODO make this context an AtomicContext if possible
  public abstract Scorer scorer(ReaderContext context, boolean scoreDocsInOrder,
  public abstract Scorer scorer(AtomicReaderContext context, boolean scoreDocsInOrder,
       boolean topScorer) throws IOException;
   
   /** The sum of squared weights of contained query clauses. */
@@ -122,7 +114,7 @@ public abstract class Weight implements Serializable {
    * Returns true iff this implementation scores docs only out of order. This
    * method is used in conjunction with {@link Collector}'</literal><name>s</name>
    <operator>*</operator> <block>{@<expr><name>link</name> <name>Collector</name><operator>#</operator><call><name>acceptsDocsOutOfOrder</name><argument_list>()</argument_list></call> <name>acceptsDocsOutOfOrder</name></expr>}</block> <name>and</name>
   <operator>*</operator> <block>{@<expr><name>link</name> <operator>#</operator><call><name>scorer</name><argument_list>(<argument><expr><name>ReaderContext</name></expr></argument>, <argument><expr><name>boolean</name></expr></argument>, <argument><expr><name>boolean</name></expr></argument>)</argument_list></call></expr>}</block> <name>to</name>
   <operator>*</operator> <block>{@<expr><name>link</name> <operator>#</operator><call><name>scorer</name><argument_list>(<argument><expr><name>AtomicReaderContext</name></expr></argument>, <argument><expr><name>boolean</name></expr></argument>, <argument><expr><name>boolean</name></expr></argument>)</argument_list></call></expr>}</block> <name>to</name>
    <operator>*</operator> <name>create</name> <name>a</name> <name>matching</name> <block>{@<expr><name>link</name> <name>Scorer</name></expr>}</block> <name>instance</name></expr></expr_stmt> <for>for a given <block>{<block_content><annotation>@<name>link</name></annotation> <expr_stmt><expr><name>Collector</name></expr></expr_stmt></block_content></block></for></block_content></block></try></block_content></block></for></block_content></block></expr>}</block></expr>, <expr><name>or</name>
    <operator>*</operator> <name>vice</name> <name><name>versa</name><operator>.</operator></name>
    * <operator>&lt;</operator><name>p</name><operator>&gt;</operator>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>CustomScoreQuery</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>CustomScoreQuery</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>ecea73df689</name><operator>..</operator><name>fd3bc3e81fb</name> <literal type="number">100755</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>CustomScoreQuery</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>CustomScoreQuery</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">22</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">22</literal></expr>,<expr><literal type="number">7</literal> @@</expr> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import></block></expr>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import></block></expr>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import></block></expr>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import></block></expr></expr_stmt>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Term</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>ComplexExplanation</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Explanation</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">240</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">240</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>CustomScoreQuery</name> extends <name>Query</name> <block>{
     }</block>
 
     @<name>Override</name>
    <specifier>public</specifier> <name>Scorer</name> <call><name>scorer</name><argument_list>(<argument><expr><name>ReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>boolean</name> <name>scoreDocsInOrder</name></expr></argument>, <argument><expr><name>boolean</name> <name>topScorer</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><specifier>public</specifier> <name>Scorer</name> <call><name>scorer</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>boolean</name> <name>scoreDocsInOrder</name></expr></argument>, <argument><expr><name>boolean</name> <name>topScorer</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument>
       <comment type="line">// Pass true for "scoresDocsInOrder", because we</comment>
       <comment type="line">// require in-order scoring, even if caller does not,</comment>
       <comment type="line">// since we call advance on the valSrcScorers.  Pass</comment>
@<argument>@ <expr><operator>-</operator><literal type="number">258</literal></expr></argument>,<argument><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">258</literal></expr></argument>,<argument><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>CustomScoreQuery</name> extends <name>Query</name></expr></argument></throws> <block>{<block_content>
     </block_content>}</block></expr></expr_stmt>
 
     <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>Explanation</name></type> <name>explain</name><parameter_list>(<parameter><decl><type><name>ReaderContext</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <function><type><specifier>public</specifier> <name>Explanation</name></type> <name>explain</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
       <decl_stmt><decl><type><name>Explanation</name></type> <name>explain</name> <init>= <expr><call><name>doExplain</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <return>return <expr><ternary><condition><expr><name>explain</name> <operator>==</operator> <literal type="null">null</literal></expr> ?</condition><then> <expr><operator>new</operator> <call><name>Explanation</name><argument_list>(<argument><expr><literal type="number">0.0f</literal></expr></argument>, <argument><expr><literal type="string">"no matching docs"</literal></expr></argument>)</argument_list></call></expr> </then><else>: <expr><name>explain</name></expr></else></ternary></expr>;</return>
     </block_content>}</block></function>
     
    <function><type><specifier>private</specifier> <name>Explanation</name></type> <name>doExplain</name><parameter_list>(<parameter><decl><type><name>ReaderContext</name></type> <name>info</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <function><type><specifier>private</specifier> <name>Explanation</name></type> <name>doExplain</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>info</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
       <decl_stmt><decl><type><name>Explanation</name></type> <name>subQueryExpl</name> <init>= <expr><call><name><name>subQueryWeight</name><operator>.</operator><name>explain</name></name><argument_list>(<argument><expr><name>info</name></expr></argument>, <argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>subQueryExpl</name><operator>.</operator><name>isMatch</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
         <return>return <expr><name>subQueryExpl</name></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ValueSourceQuery</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ValueSourceQuery</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">25af66e85d9</literal><operator>..</operator><literal type="number">1a3f7706e67</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ValueSourceQuery</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ValueSourceQuery</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name></name>;</package>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>*</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Term</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>ToStringUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>Bits</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">99</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">99</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>ValueSourceQuery</name> extends <name>Query</name> <block>{
     }</block>
 
     @<name>Override</name>
    <specifier>public</specifier> <name>Scorer</name> <call><name>scorer</name><argument_list>(<argument><expr><name>ReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>boolean</name> <name>scoreDocsInOrder</name></expr></argument>, <argument><expr><name>boolean</name> <name>topScorer</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><specifier>public</specifier> <name>Scorer</name> <call><name>scorer</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>boolean</name> <name>scoreDocsInOrder</name></expr></argument>, <argument><expr><name>boolean</name> <name>topScorer</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr></expr_stmt>
       <return>return <expr><operator>new</operator> <call><name>ValueSourceScorer</name><argument_list>(<argument><expr><name>similarity</name></expr></argument>, <argument><expr><name><name>context</name><operator>.</operator><name>reader</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block></if></if_stmt>
 
     <comment type="block">/*(non-Javadoc) @see org.apache.lucene.search.Weight#explain(org.apache.lucene.index.IndexReader, int) */</comment>
     <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>Explanation</name></type> <name>explain</name><parameter_list>(<parameter><decl><type><name>ReaderContext</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <function><type><specifier>public</specifier> <name>Explanation</name></type> <name>explain</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
       <decl_stmt><decl><type><name>DocValues</name></type> <name>vals</name> <init>= <expr><call><name><name>valSrc</name><operator>.</operator><name>getValues</name></name><argument_list>(<argument><expr><name><name>context</name><operator>.</operator><name>reader</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>float</name></type> <name>sc</name> <init>= <expr><name>queryWeight</name> <operator>*</operator> <call><name><name>vals</name><operator>.</operator><name>floatVal</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>payloads</name><operator>/</operator><name><name>PayloadNearQuery</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>payloads</name><operator>/</operator><name><name>PayloadNearQuery</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">1bb3b7a5f95</literal><operator>..</operator><literal type="number">2504e7ed28b</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>payloads</name><operator>/</operator><name><name>PayloadNearQuery</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>payloads</name><operator>/</operator><name><name>PayloadNearQuery</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>payloads</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Explanation</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Scorer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>IndexSearcher</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">143</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">143</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>PayloadNearQuery</name> extends <name>SpanNearQuery</name> <block>{
     }</block>
 
     @<name>Override</name>
    <specifier>public</specifier> <name>Scorer</name> <call><name>scorer</name><argument_list>(<argument><expr><name>ReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>boolean</name> <name>scoreDocsInOrder</name></expr></argument>,
    <argument><expr><specifier>public</specifier> <name>Scorer</name> <call><name>scorer</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>boolean</name> <name>scoreDocsInOrder</name></expr></argument>,
         <argument><expr><name>boolean</name> <name>topScorer</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr></argument>
       <return>return <expr><operator>new</operator> <call><name>PayloadNearSpanScorer</name><argument_list>(<argument><expr><call><name><name>query</name><operator>.</operator><name>getSpans</name></name><argument_list>(<argument><expr><name><name>context</name><operator>.</operator><name>reader</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>this</name></expr></argument>,
           <argument><expr><name>similarity</name></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>reader</name><operator>.</operator><name>norms</name></name><argument_list>(<argument><expr><call><name><name>query</name><operator>.</operator><name>getField</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return></argument_list></call></expr></expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>payloads</name><operator>/</operator><name><name>PayloadTermQuery</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>payloads</name><operator>/</operator><name><name>PayloadTermQuery</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">4aa29583473</literal><operator>..</operator><literal type="number">048f3affa30</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>payloads</name><operator>/</operator><name><name>PayloadTermQuery</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>payloads</name><operator>/</operator><name><name>PayloadTermQuery</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>payloads</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Term</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>DocsAndPositionsEnum</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>IndexSearcher</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">74</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">74</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>PayloadTermQuery</name> extends <name>SpanTermQuery</name> <block>{
     }</block>
 
     @<name>Override</name>
    <specifier>public</specifier> <name>Scorer</name> <call><name>scorer</name><argument_list>(<argument><expr><name>ReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>boolean</name> <name>scoreDocsInOrder</name></expr></argument>,
    <argument><expr><specifier>public</specifier> <name>Scorer</name> <call><name>scorer</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>boolean</name> <name>scoreDocsInOrder</name></expr></argument>,
         <argument><expr><name>boolean</name> <name>topScorer</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr></argument>
       <return>return <expr><operator>new</operator> <call><name>PayloadTermSpanScorer</name><argument_list>(<argument><expr><operator>(</operator><name>TermSpans</name><operator>)</operator> <call><name><name>query</name><operator>.</operator><name>getSpans</name></name><argument_list>(<argument><expr><name><name>context</name><operator>.</operator><name>reader</name></name></expr></argument>)</argument_list></call></expr></argument>,
           <argument><expr><name>this</name></expr></argument>, <argument><expr><name>similarity</name></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>reader</name><operator>.</operator><name>norms</name></name><argument_list>(<argument><expr><call><name><name>query</name><operator>.</operator><name>getField</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return></argument_list></call></expr></expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>spans</name><operator>/</operator><name><name>SpanWeight</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>spans</name><operator>/</operator><name><name>SpanWeight</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">6142ad42453</literal><operator>..</operator><literal type="number">4b360cfb8ea</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>spans</name><operator>/</operator><name><name>SpanWeight</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>spans</name><operator>/</operator><name><name>SpanWeight</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>spans</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Term</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>*</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Explanation</name><operator>.</operator><name>IDFExplanation</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">72</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">72</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>SpanWeight</name> extends <name>Weight</name> <block>{
   }</block>
 
   @<name>Override</name>
  <specifier>public</specifier> <name>Scorer</name> <call><name>scorer</name><argument_list>(<argument><expr><name>ReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>boolean</name> <name>scoreDocsInOrder</name></expr></argument>, <argument><expr><name>boolean</name> <name>topScorer</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>public</specifier> <name>Scorer</name> <call><name>scorer</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>boolean</name> <name>scoreDocsInOrder</name></expr></argument>, <argument><expr><name>boolean</name> <name>topScorer</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr></expr_stmt>
     <return>return <expr><operator>new</operator> <call><name>SpanScorer</name><argument_list>(<argument><expr><call><name><name>query</name><operator>.</operator><name>getSpans</name></name><argument_list>(<argument><expr><name><name>context</name><operator>.</operator><name>reader</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><name>similarity</name></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>reader</name>
         <operator>.</operator><name>norms</name></name><argument_list>(<argument><expr><call><name><name>query</name><operator>.</operator><name>getField</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
 
   <decl_stmt><decl><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>Explanation</name></type> <name>explain</name><argument_list>(<argument><expr><name>ReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>int</name> <name>doc</name></expr></argument>)</argument_list>
  public <name>Explanation</name> <name>explain</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>int</name> <name>doc</name></expr></argument>)</argument_list>
     <throws>throws <argument><expr><name>IOException</name> <block>{
 
     <expr><name>ComplexExplanation</name> <name>result</name> <operator>=</operator> <operator>new</operator> <call><name>ComplexExplanation</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>ReaderUtil</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>ReaderUtil</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">701cfee2368</literal><operator>..</operator><name>e1533433c1b</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>ReaderUtil</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>util</name><operator>/</operator><name><name>ReaderUtil</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">213</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">213</literal></expr><operator>,</operator><expr><literal type="number">21</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>ReaderUtil</name> <block>{
     
   }</block>
 
  <comment type="block" format="javadoc">/**
   * Returns the context's leaves or the context itself as the only element of
   * the returned array. If the context's #leaves() method returns
   * &lt;code&gt;null&lt;/code&gt; the given context must be an instance of
   * {@link AtomicReaderContext}
   */</comment>
  <specifier>public</specifier> <specifier>static</specifier> <name><name>AtomicReaderContext</name><index>[]</index></name> <call><name>leaves</name><argument_list>(<argument><expr><name>ReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <block>{
    <assert>assert <expr><name>context</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <name><name>context</name><operator>.</operator><name>isTopLevel</name></name> <operator>:</operator> <literal type="string">"context must be non-null &amp; top-level"</literal></expr>;</assert>
    <name>final</name> <name><name>AtomicReaderContext</name><index>[]</index></name> <name>leaves</name> <operator>=</operator> <call><name><name>context</name><operator>.</operator><name>leaves</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>leaves</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <assert>assert <expr><name><name>context</name><operator>.</operator><name>isAtomic</name></name> <operator>:</operator> <literal type="string">"top-level context without leaves must be atomic"</literal></expr>;</assert>
      <return>return <expr><operator>new</operator> <name><name>AtomicReaderContext</name><index>[]</index></name> <block>{ <expr><operator>(</operator><name>AtomicReaderContext</name><operator>)</operator> <name>context</name></expr> }</block></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <return>return <expr><name>leaves</name></expr>;</return>
  </block_content>}</block></function>
 
   <comment type="block" format="javadoc">/**
    * Returns index of the searcher/reader for document &lt;code&gt;n&lt;/code&gt; in the
diff --git a/lucene/src/test/org/apache/lucene/search/CachingWrapperFilterHelper.java b/lucene/src/test/org/apache/lucene/search/CachingWrapperFilterHelper.java
index 5acd441b18d..41872acd8bd 100644
-- a/lucene/src/test/org/apache/lucene/search/CachingWrapperFilterHelper.java
++ b/lucene/src/test/org/apache/lucene/search/CachingWrapperFilterHelper.java
@@ -21,7 +21,7 @@ import java.io.IOException;
 
 import junit.framework.Assert;
 
import org.apache.lucene.index.IndexReader.ReaderContext;
import org.apache.lucene.index.IndexReader.AtomicReaderContext;
 
 /**
  * A unit test helper class to test when the filter is getting cached and when it is not.
@@ -42,7 +42,7 @@ public class CachingWrapperFilterHelper extends CachingWrapperFilter {
   }
   
   @Override
  public synchronized DocIdSet getDocIdSet(ReaderContext context) throws IOException {
  public synchronized DocIdSet getDocIdSet(AtomicReaderContext context) throws IOException {
 
     final int saveMissCount = missCount;
     DocIdSet docIdSet = super.getDocIdSet(context);
diff --git a/lucene/src/test/org/apache/lucene/search/JustCompileSearch.java b/lucene/src/test/org/apache/lucene/search/JustCompileSearch.java
index f0488f5b7d4..2e43904b584 100644
-- a/lucene/src/test/org/apache/lucene/search/JustCompileSearch.java
++ b/lucene/src/test/org/apache/lucene/search/JustCompileSearch.java
@@ -20,7 +20,7 @@ package org.apache.lucene.search;
 import java.io.IOException;
 
 import org.apache.lucene.index.IndexReader;
import org.apache.lucene.index.IndexReader.ReaderContext;
import org.apache.lucene.index.IndexReader.AtomicReaderContext;
 import org.apache.lucene.util.BytesRef;
 import org.apache.lucene.index.FieldInvertState;
 import org.apache.lucene.util.PriorityQueue;
@@ -154,7 +154,7 @@ final class JustCompileSearch {
     // still added here in case someone will add abstract methods in the future.
     
     @Override
    public DocIdSet getDocIdSet(ReaderContext context) throws IOException {
    public DocIdSet getDocIdSet(AtomicReaderContext context) throws IOException {
       return null;
     }
   }
@@ -283,7 +283,7 @@ final class JustCompileSearch {
     }
     
     @Override
    public DocIdSet getDocIdSet(ReaderContext context) throws IOException {
    public DocIdSet getDocIdSet(AtomicReaderContext context) throws IOException {
       return null;
     }    
   }
@@ -335,7 +335,7 @@ final class JustCompileSearch {
   static final class JustCompileWeight extends Weight {
 
     @Override
    public Explanation explain(ReaderContext context, int doc) throws IOException {
    public Explanation explain(AtomicReaderContext context, int doc) throws IOException {
       throw new UnsupportedOperationException(UNSUPPORTED_MSG);
     }
 
@@ -360,7 +360,7 @@ final class JustCompileSearch {
     }
 
     @Override
    public Scorer scorer(ReaderContext context, boolean scoreDocsInOrder, boolean topScorer)
    public Scorer scorer(AtomicReaderContext context, boolean scoreDocsInOrder, boolean topScorer)
         throws IOException {
       throw new UnsupportedOperationException(UNSUPPORTED_MSG);
     }
diff --git a/lucene/src/test/org/apache/lucene/search/MockFilter.java b/lucene/src/test/org/apache/lucene/search/MockFilter.java
index 1ac9207e9ef..1152db0f3d8 100644
-- a/lucene/src/test/org/apache/lucene/search/MockFilter.java
++ b/lucene/src/test/org/apache/lucene/search/MockFilter.java
@@ -17,7 +17,7 @@ package org.apache.lucene.search;
  * limitations under the License.
  */</comment>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>DocIdBitSet</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>BitSet</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">25</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">25</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>MockFilter</name> extends <name>Filter</name> <block>{
   <expr><specifier>private</specifier> <name>boolean</name> <name>wasCalled</name></expr>;
 
   @<expr><name>Override</name>
  <specifier>public</specifier> <name>DocIdSet</name> <call><name>getDocIdSet</name><argument_list>(<argument><expr><name>ReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <block>{
  <expr><specifier>public</specifier> <name>DocIdSet</name> <call><name>getDocIdSet</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <block>{
     <expr><name>wasCalled</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;
     <return>return <expr><operator>new</operator> <call><name>DocIdBitSet</name><argument_list>(<argument><expr><operator>new</operator> <call><name>BitSet</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return></block></expr>
   }</block>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>QueryUtils</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>QueryUtils</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>fd52b748a74</name><operator>..</operator><literal type="number">27dda23ce40</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>QueryUtils</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>QueryUtils</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">13</literal></expr>,<expr><literal type="number">13</literal> <operator>+</operator><literal type="number">13</literal></expr>,<expr><literal type="number">13</literal> @@</expr> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>MockAnalyzer</name></name>;</import></block></expr></expr_stmt>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Document</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexWriter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexWriterConfig</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>MultiReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>Directory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>MockDirectoryWrapper</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>RAMDirectory</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>ReaderUtil</name></name>;</import>
 
 <import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>LuceneTestCase</name><operator>.</operator><name>TEST_VERSION_CURRENT</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">213</literal></expr><operator>,</operator><expr><literal type="number">21</literal> <operator>+</operator><literal type="number">213</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ <specifier>public</specifier> <name>class</name> <name>QueryUtils</name> <block>{
     }</block></expr></expr_stmt>
   </block_content>}</block></function>
   
  <function><type><specifier>private</specifier> <specifier>static</specifier> <name><name>AtomicReaderContext</name><index>[]</index></name></type> <name>getLeaves</name><parameter_list>(<parameter><decl><type><name>IndexSearcher</name></type> <name>searcher</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>ReaderContext</name></type> <name>topLevelReaderContext</name> <init>= <expr><call><name><name>searcher</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name><name>topLevelReaderContext</name><operator>.</operator><name>isAtomic</name></name></expr>)</condition> <block>{<block_content>
      <return>return <expr><operator>new</operator> <name><name>AtomicReaderContext</name><index>[]</index></name> <block>{<expr><operator>(</operator><name>AtomicReaderContext</name><operator>)</operator> <name>topLevelReaderContext</name></expr>}</block></expr>;</return>
    </block_content>}</block></if> <else>else <block>{<block_content>
      <return>return <expr><call><name><name>topLevelReaderContext</name><operator>.</operator><name>leaves</name></name><argument_list>()</argument_list></call></expr>;</return>
    </block_content>}</block></else></if_stmt>
  </block_content>}</block></function>

 
   <comment type="block" format="javadoc">/** alternate scorer skipTo(),skipTo(),next(),next(),skipTo(),skipTo(), etc
    * and ensure a hitcollector receives same docs and scores
    */</comment>
   <function><type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>checkSkipTo</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>Query</name></type> <name>q</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <name>IndexSearcher</name></type> <name>s</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
     <comment type="line">//System.out.println("Checking "+q);</comment>
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>AtomicReaderContext</name><index>[]</index></name></type> <name>context</name> <init>= <expr><call><name>getLeaves</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>AtomicReaderContext</name><index>[]</index></name></type> <name>context</name> <init>= <expr><call><name><name>ReaderUtil</name><operator>.</operator><name>leaves</name></name><argument_list>(<argument><expr><call><name><name>s</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <if_stmt><if>if <condition>(<expr><call><name><name>q</name><operator>.</operator><name>weight</name></name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>scoresDocsOutOfOrder</name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>  <comment type="line">// in this case order of skipTo() might differ from that of next().</comment>
 
     <decl_stmt><decl><type><specifier>final</specifier> <name>int</name></type> <name>skip_op</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">317</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">310</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>QueryUtils</name> <block>{
               <expr><name>final</name> <name>IndexReader</name> <name>previousReader</name> <operator>=</operator> <name><name>lastReader</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;
               <expr><name>IndexSearcher</name> <name>indexSearcher</name> <operator>=</operator> <operator>new</operator> <call><name>IndexSearcher</name><argument_list>(<argument><expr><name>previousReader</name></expr></argument>)</argument_list></call></expr>;
               <expr><name>Weight</name> <name>w</name> <operator>=</operator> <call><name><name>q</name><operator>.</operator><name>weight</name></name><argument_list>(<argument><expr><name>indexSearcher</name></expr></argument>)</argument_list></call></expr>;
              <expr><name>Scorer</name> <name>scorer</name> <operator>=</operator> <call><name><name>w</name><operator>.</operator><name>scorer</name></name><argument_list>(<argument><expr><call><name><name>indexSearcher</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;
              <expr><name>Scorer</name> <name>scorer</name> <operator>=</operator> <call><name><name>w</name><operator>.</operator><name>scorer</name></name><argument_list>(<argument><expr><operator>(</operator><name>AtomicReaderContext</name><operator>)</operator><call><name><name>indexSearcher</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;
               <if_stmt><if>if <condition>(<expr><name>scorer</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                 <decl_stmt><decl><type><name>boolean</name></type> <name>more</name> <init>= <expr><call><name><name>scorer</name><operator>.</operator><name>advance</name></name><argument_list>(<argument><expr><name><name>lastDoc</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <name><name>DocIdSetIterator</name><operator>.</operator><name>NO_MORE_DOCS</name></name></expr></init></decl>;</decl_stmt>
                 <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertFalse</name></name><argument_list>(<argument><expr><literal type="string">"query's last doc was "</literal><operator>+</operator> <name><name>lastDoc</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>+</operator><literal type="string">" but skipTo("</literal><operator>+</operator><operator>(</operator><name><name>lastDoc</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>+</operator><literal type="number">1</literal><operator>)</operator><operator>+</operator><literal type="string">") got to "</literal><operator>+</operator><call><name><name>scorer</name><operator>.</operator><name>docID</name></name><argument_list>()</argument_list></call></expr></argument>,<argument><expr><name>more</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">342</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">335</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>QueryUtils</name> <block>{
           <expr><name>final</name> <name>IndexReader</name> <name>previousReader</name> <operator>=</operator> <name><name>lastReader</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;
           <name>IndexSearcher</name> <name>indexSearcher</name> <operator>=</operator> <operator>new</operator> <call><name>IndexSearcher</name><argument_list>(<argument><expr><name>previousReader</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
           <decl_stmt><decl><type><name>Weight</name></type> <name>w</name> <init>= <expr><call><name><name>q</name><operator>.</operator><name>weight</name></name><argument_list>(<argument><expr><name>indexSearcher</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <decl_stmt><decl><type><name>Scorer</name></type> <name>scorer</name> <init>= <expr><call><name><name>w</name><operator>.</operator><name>scorer</name></name><argument_list>(<argument><expr><call><name><name>previousReader</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call></expr></argument> , <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <decl_stmt><decl><type><name>Scorer</name></type> <name>scorer</name> <init>= <expr><call><name><name>w</name><operator>.</operator><name>scorer</name></name><argument_list>(<argument><expr><operator>(</operator><name>AtomicReaderContext</name><operator>)</operator><call><name><name>previousReader</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call></expr></argument> , <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
           <if_stmt><if>if <condition>(<expr><name>scorer</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
             <decl_stmt><decl><type><name>boolean</name></type> <name>more</name> <init>= <expr><call><name><name>scorer</name><operator>.</operator><name>advance</name></name><argument_list>(<argument><expr><name><name>lastDoc</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <name><name>DocIdSetIterator</name><operator>.</operator><name>NO_MORE_DOCS</name></name></expr></init></decl>;</decl_stmt>
             <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertFalse</name></name><argument_list>(<argument><expr><literal type="string">"query's last doc was "</literal><operator>+</operator> <name><name>lastDoc</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>+</operator><literal type="string">" but skipTo("</literal><operator>+</operator><operator>(</operator><name><name>lastDoc</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>+</operator><literal type="number">1</literal><operator>)</operator><operator>+</operator><literal type="string">") got to "</literal><operator>+</operator><call><name><name>scorer</name><operator>.</operator><name>docID</name></name><argument_list>()</argument_list></call></expr></argument>,<argument><expr><name>more</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">357</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">350</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>QueryUtils</name> <block>{
     <expr><name>final</name> <name>float</name> <name>maxDiff</name> <operator>=</operator> <literal type="number">1e-3f</literal></expr>;
     <name>final</name> <name>int</name> <name><name>lastDoc</name><index>[]</index></name> <operator>=</operator> <block>{<expr><operator>-</operator><literal type="number">1</literal></expr>}</block></block></expr>;</expr_stmt>
     <decl_stmt><decl><type><specifier>final</specifier> <name>IndexReader</name></type> <name><name>lastReader</name><index>[]</index></name> <init>= <expr><block>{<expr><literal type="null">null</literal></expr>}</block></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>ReaderContext</name><index>[]</index></name></type> <name>context</name> <init>= <expr><call><name>getLeaves</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>AtomicReaderContext</name><index>[]</index></name></type> <name>context</name> <init>= <expr><call><name><name>ReaderUtil</name><operator>.</operator><name>leaves</name></name><argument_list>(<argument><expr><call><name><name>s</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>s</name><operator>.</operator><name>search</name></name><argument_list>(<argument><expr><name>q</name></expr></argument>,<argument><expr><operator>new</operator> <class><super><name>Collector</name></super><argument_list>()</argument_list> <block>{
       <decl_stmt><decl><type><specifier>private</specifier> <name>Scorer</name></type> <name>scorer</name></decl>;</decl_stmt>
       <decl_stmt><decl><type><specifier>private</specifier> <name>int</name></type> <name>leafPtr</name></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">399</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">392</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>QueryUtils</name> <block>{
           <expr><name>final</name> <name>IndexReader</name> <name>previousReader</name> <operator>=</operator> <name><name>lastReader</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;
           <name>IndexSearcher</name> <name>indexSearcher</name> <operator>=</operator> <operator>new</operator> <call><name>IndexSearcher</name><argument_list>(<argument><expr><name>previousReader</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
           <decl_stmt><decl><type><name>Weight</name></type> <name>w</name> <init>= <expr><call><name><name>q</name><operator>.</operator><name>weight</name></name><argument_list>(<argument><expr><name>indexSearcher</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <decl_stmt><decl><type><name>Scorer</name></type> <name>scorer</name> <init>= <expr><call><name><name>w</name><operator>.</operator><name>scorer</name></name><argument_list>(<argument><expr><call><name><name>indexSearcher</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <decl_stmt><decl><type><name>Scorer</name></type> <name>scorer</name> <init>= <expr><call><name><name>w</name><operator>.</operator><name>scorer</name></name><argument_list>(<argument><expr><operator>(</operator><name>AtomicReaderContext</name><operator>)</operator><call><name><name>indexSearcher</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
           <if_stmt><if>if <condition>(<expr><name>scorer</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
             <decl_stmt><decl><type><name>boolean</name></type> <name>more</name> <init>= <expr><call><name><name>scorer</name><operator>.</operator><name>advance</name></name><argument_list>(<argument><expr><name><name>lastDoc</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <name><name>DocIdSetIterator</name><operator>.</operator><name>NO_MORE_DOCS</name></name></expr></init></decl>;</decl_stmt>
             <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertFalse</name></name><argument_list>(<argument><expr><literal type="string">"query's last doc was "</literal><operator>+</operator> <name><name>lastDoc</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>+</operator><literal type="string">" but skipTo("</literal><operator>+</operator><operator>(</operator><name><name>lastDoc</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>+</operator><literal type="number">1</literal><operator>)</operator><operator>+</operator><literal type="string">") got to "</literal><operator>+</operator><call><name><name>scorer</name><operator>.</operator><name>docID</name></name><argument_list>()</argument_list></call></expr></argument>,<argument><expr><name>more</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">422</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">415</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>QueryUtils</name> <block>{
       <expr><name>final</name> <name>IndexReader</name> <name>previousReader</name> <operator>=</operator> <name><name>lastReader</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;
       <name>IndexSearcher</name> <name>indexSearcher</name> <operator>=</operator> <operator>new</operator> <call><name>IndexSearcher</name><argument_list>(<argument><expr><name>previousReader</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
       <decl_stmt><decl><type><name>Weight</name></type> <name>w</name> <init>= <expr><call><name><name>q</name><operator>.</operator><name>weight</name></name><argument_list>(<argument><expr><name>indexSearcher</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>Scorer</name></type> <name>scorer</name> <init>= <expr><call><name><name>w</name><operator>.</operator><name>scorer</name></name><argument_list>(<argument><expr><call><name><name>indexSearcher</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>Scorer</name></type> <name>scorer</name> <init>= <expr><call><name><name>w</name><operator>.</operator><name>scorer</name></name><argument_list>(<argument><expr><operator>(</operator><name>AtomicReaderContext</name><operator>)</operator><call><name><name>indexSearcher</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <if_stmt><if>if <condition>(<expr><name>scorer</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
         <decl_stmt><decl><type><name>boolean</name></type> <name>more</name> <init>= <expr><call><name><name>scorer</name><operator>.</operator><name>advance</name></name><argument_list>(<argument><expr><name><name>lastDoc</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <name><name>DocIdSetIterator</name><operator>.</operator><name>NO_MORE_DOCS</name></name></expr></init></decl>;</decl_stmt>
         <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>assertFalse</name></name><argument_list>(<argument><expr><literal type="string">"query's last doc was "</literal><operator>+</operator> <name><name>lastDoc</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>+</operator><literal type="string">" but skipTo("</literal><operator>+</operator><operator>(</operator><name><name>lastDoc</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>+</operator><literal type="number">1</literal><operator>)</operator><operator>+</operator><literal type="string">") got to "</literal><operator>+</operator><call><name><name>scorer</name><operator>.</operator><name>docID</name></name><argument_list>()</argument_list></call></expr></argument>,<argument><expr><name>more</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SingleDocTestFilter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SingleDocTestFilter</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">2625cda5b67</literal><operator>..</operator><name>a33a6c178a2</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SingleDocTestFilter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SingleDocTestFilter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name></name>;</package>
  <expr_stmt><expr><operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>DocIdBitSet</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>BitSet</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">31</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">31</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>SingleDocTestFilter</name> extends <name>Filter</name> <block>{
   }</block>
 
   @<name>Override</name>
  <specifier>public</specifier> <name>DocIdSet</name> <call><name>getDocIdSet</name><argument_list>(<argument><expr><name>ReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>public</specifier> <name>DocIdSet</name> <call><name>getDocIdSet</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><name>BitSet</name> <name>bits</name> <operator>=</operator> <operator>new</operator> <call><name>BitSet</name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>reader</name><operator>.</operator><name>maxDoc</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>bits</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <return>return <expr><operator>new</operator> <call><name>DocIdBitSet</name><argument_list>(<argument><expr><name>bits</name></expr></argument>)</argument_list></call></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestCachingWrapperFilter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestCachingWrapperFilter</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>a38fe553a26</name><operator>..</operator><literal type="number">36c6dfeeef8</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestCachingWrapperFilter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestCachingWrapperFilter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">24</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">24</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Document</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Field</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>RandomIndexWriter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>SerialMergeScheduler</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>SlowMultiReaderWrapper</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">41</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">40</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> class <name>TestCachingWrapperFilter</name> extends <name>LuceneTestCase</name> <block>{
     <expr><name>RandomIndexWriter</name> <name>writer</name> <operator>=</operator> <operator>new</operator> <call><name>RandomIndexWriter</name><argument_list>(<argument><expr><name>random</name></expr></argument>, <argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr>;
     <call><name><name>writer</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
 
    <decl_stmt><decl><type><name>IndexReader</name></type> <name>reader</name> <init>= <expr><call><name><name>IndexReader</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>ReaderContext</name></type> <name>context</name> <init>= <expr><call><name><name>reader</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>IndexReader</name></type> <name>reader</name> <init>= <expr><operator>new</operator> <call><name>SlowMultiReaderWrapper</name><argument_list>(<argument><expr><call><name><name>IndexReader</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>AtomicReaderContext</name></type> <name>context</name> <init>= <expr><operator>(</operator><name>AtomicReaderContext</name><operator>)</operator> <call><name><name>reader</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>MockFilter</name></type> <name>filter</name> <init>= <expr><operator>new</operator> <call><name>MockFilter</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>CachingWrapperFilter</name></type> <name>cacher</name> <init>= <expr><operator>new</operator> <call><name>CachingWrapperFilter</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">67</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">66</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> class <name>TestCachingWrapperFilter</name> extends <name>LuceneTestCase</name> <block>{
     <expr><name>RandomIndexWriter</name> <name>writer</name> <operator>=</operator> <operator>new</operator> <call><name>RandomIndexWriter</name><argument_list>(<argument><expr><name>random</name></expr></argument>, <argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr>;
     <call><name><name>writer</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
 
    <decl_stmt><decl><type><name>IndexReader</name></type> <name>reader</name> <init>= <expr><call><name><name>IndexReader</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>ReaderContext</name></type> <name>context</name> <init>= <expr><call><name><name>reader</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>IndexReader</name></type> <name>reader</name> <init>= <expr><operator>new</operator> <call><name>SlowMultiReaderWrapper</name><argument_list>(<argument><expr><call><name><name>IndexReader</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>AtomicReaderContext</name></type> <name>context</name> <init>= <expr><operator>(</operator><name>AtomicReaderContext</name><operator>)</operator> <call><name><name>reader</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <decl_stmt><decl><type><specifier>final</specifier> <name>Filter</name></type> <name>filter</name> <init>= <expr><operator>new</operator> <class><super><name>Filter</name></super><argument_list>()</argument_list> <block>{
       <function><annotation>@<name>Override</name></annotation>
      <type><specifier>public</specifier> <name>DocIdSet</name></type> <name>getDocIdSet</name><parameter_list>(<parameter><decl><type><name>ReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <function><type><specifier>public</specifier> <name>DocIdSet</name></type> <name>getDocIdSet</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <return>return <expr><literal type="null">null</literal></expr>;</return>
       <expr_stmt/>}</block_content>
     }</block>;</function>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">90</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">89</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> class <name>TestCachingWrapperFilter</name> extends <name>LuceneTestCase</name> <block>{
     <expr><name>RandomIndexWriter</name> <name>writer</name> <operator>=</operator> <operator>new</operator> <call><name>RandomIndexWriter</name><argument_list>(<argument><expr><name>random</name></expr></argument>, <argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr>;
     <call><name><name>writer</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
 
    <decl_stmt><decl><type><name>IndexReader</name></type> <name>reader</name> <init>= <expr><call><name><name>IndexReader</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>ReaderContext</name></type> <name>context</name> <init>= <expr><call><name><name>reader</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>IndexReader</name></type> <name>reader</name> <init>= <expr><operator>new</operator> <call><name>SlowMultiReaderWrapper</name><argument_list>(<argument><expr><call><name><name>IndexReader</name><operator>.</operator><name>open</name></name><argument_list>(<argument><expr><name>dir</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>AtomicReaderContext</name></type> <name>context</name> <init>= <expr><operator>(</operator><name>AtomicReaderContext</name><operator>)</operator> <call><name><name>reader</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <decl_stmt><decl><type><specifier>final</specifier> <name>Filter</name></type> <name>filter</name> <init>= <expr><operator>new</operator> <class><super><name>Filter</name></super><argument_list>()</argument_list> <block>{
       <function><annotation>@<name>Override</name></annotation>
      <type><specifier>public</specifier> <name>DocIdSet</name></type> <name>getDocIdSet</name><parameter_list>(<parameter><decl><type><name>ReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <function><type><specifier>public</specifier> <name>DocIdSet</name></type> <name>getDocIdSet</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <return>return <expr><operator>new</operator> <class><super><name>DocIdSet</name></super><argument_list>()</argument_list> <block>{
           <function><annotation>@<name>Override</name></annotation>
           <type><specifier>public</specifier> <name>DocIdSetIterator</name></type> <name>iterator</name><parameter_list>()</parameter_list> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">114</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">113</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> class <name>TestCachingWrapperFilter</name> extends <name>LuceneTestCase</name> <block>{
   }</block>
   
   <specifier>private</specifier> <specifier>static</specifier> <name>void</name> <call><name>assertDocIdSetCacheable</name><argument_list>(<argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>, <argument><expr><name>Filter</name> <name>filter</name></expr></argument>, <argument><expr><name>boolean</name> <name>shouldCacheable</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><name>ReaderContext</name> <name>context</name> <operator>=</operator> <call><name><name>reader</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>reader</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call><operator>.</operator><name>isAtomic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>AtomicReaderContext</name></type> <name>context</name> <init>= <expr><operator>(</operator><name>AtomicReaderContext</name><operator>)</operator> <call><name><name>reader</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>final</specifier> <name>CachingWrapperFilter</name></type> <name>cacher</name> <init>= <expr><operator>new</operator> <call><name>CachingWrapperFilter</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>final</specifier> <name>DocIdSet</name></type> <name>originalSet</name> <init>= <expr><call><name><name>filter</name><operator>.</operator><name>getDocIdSet</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>final</specifier> <name>DocIdSet</name></type> <name>cachedSet</name> <init>= <expr><call><name><name>cacher</name><operator>.</operator><name>getDocIdSet</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">145</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">145</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestCachingWrapperFilter</name> extends <name>LuceneTestCase</name> <block>{
     <comment type="line">// a openbitset filter is always cacheable</comment>
     <expr><call><name>assertDocIdSetCacheable</name><argument_list>(<argument><expr><name>reader</name></expr></argument>, <argument><expr><operator>new</operator> <class><super><name>Filter</name></super><argument_list>()</argument_list> <block>{
       <function><annotation>@<name>Override</name></annotation>
      <type><specifier>public</specifier> <name>DocIdSet</name></type> <name>getDocIdSet</name><parameter_list>(<parameter><decl><type><name>ReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <function><type><specifier>public</specifier> <name>DocIdSet</name></type> <name>getDocIdSet</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <return>return <expr><operator>new</operator> <call><name>OpenBitSet</name><argument_list>()</argument_list></call></expr>;</return>
       <expr_stmt/>}</block_content>
     }</block><operator>,</operator> true</function>)</block_content></block>;</function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestDisjunctionMaxQuery</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestDisjunctionMaxQuery</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>aa7b9faaff5</name><operator>..</operator><literal type="number">595c18c9762</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestDisjunctionMaxQuery</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestDisjunctionMaxQuery</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">22</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">22</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>MockAnalyzer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Document</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Field</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>SlowMultiReaderWrapper</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>FieldInvertState</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>RandomIndexWriter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Term</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>Directory</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>text</name><operator>.</operator><name>DecimalFormat</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">168</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">168</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestDisjunctionMaxQuery</name> extends <name>LuceneTestCase</name> <block>{
     <expr><call><name><name>QueryUtils</name><operator>.</operator><name>check</name></name><argument_list>(<argument><expr><name>random</name></expr></argument>, <argument><expr><name>dq</name></expr></argument>, <argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;
     <call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>s</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call><operator>.</operator><name>isAtomic</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <decl_stmt><decl><type><specifier>final</specifier> <name>Weight</name></type> <name>dw</name> <init>= <expr><call><name><name>dq</name><operator>.</operator><name>weight</name></name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>Scorer</name></type> <name>ds</name> <init>= <expr><call><name><name>dw</name><operator>.</operator><name>scorer</name></name><argument_list>(<argument><expr><call><name><name>s</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>Scorer</name></type> <name>ds</name> <init>= <expr><call><name><name>dw</name><operator>.</operator><name>scorer</name></name><argument_list>(<argument><expr><operator>(</operator><name>AtomicReaderContext</name><operator>)</operator><call><name><name>s</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>final</specifier> <name>boolean</name></type> <name>skipOk</name> <init>= <expr><call><name><name>ds</name><operator>.</operator><name>advance</name></name><argument_list>(<argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <name><name>DocIdSetIterator</name><operator>.</operator><name>NO_MORE_DOCS</name></name></expr></init></decl>;</decl_stmt>
     <if_stmt><if>if <condition>(<expr><name>skipOk</name></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><call><name>fail</name><argument_list>(<argument><expr><literal type="string">"firsttime skipTo found a match? ... "</literal>
@@ <operator>-</operator><literal type="number">183</literal></expr></argument>,<argument><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">183</literal></expr></argument>,<argument><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestDisjunctionMaxQuery</name> extends <name>LuceneTestCase</name> <block>{
     <expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>s</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call><operator>.</operator><name>isAtomic</name></expr></argument>)</argument_list></call></expr>;
     <call><name><name>QueryUtils</name><operator>.</operator><name>check</name></name><argument_list>(<argument><expr><name>random</name></expr></argument>, <argument><expr><name>dq</name></expr></argument>, <argument><expr><name>s</name></expr></argument>)</argument_list></call></block></expr></argument>;</argument_list></call></expr></expr_stmt>
     <decl_stmt><decl><type><specifier>final</specifier> <name>Weight</name></type> <name>dw</name> <init>= <expr><call><name><name>dq</name><operator>.</operator><name>weight</name></name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>Scorer</name></type> <name>ds</name> <init>= <expr><call><name><name>dw</name><operator>.</operator><name>scorer</name></name><argument_list>(<argument><expr><call><name><name>s</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>Scorer</name></type> <name>ds</name> <init>= <expr><call><name><name>dw</name><operator>.</operator><name>scorer</name></name><argument_list>(<argument><expr><operator>(</operator><name>AtomicReaderContext</name><operator>)</operator><call><name><name>s</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"firsttime skipTo found no match"</literal></expr></argument>,
         <argument><expr><call><name><name>ds</name><operator>.</operator><name>advance</name></name><argument_list>(<argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <name><name>DocIdSetIterator</name><operator>.</operator><name>NO_MORE_DOCS</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"found wrong docid"</literal></expr></argument>, <argument><expr><literal type="string">"d4"</literal></expr></argument>, <argument><expr><call><name><name>r</name><operator>.</operator><name>document</name></name><argument_list>(<argument><expr><call><name><name>ds</name><operator>.</operator><name>docID</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"id"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestDocIdSet</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestDocIdSet</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">5ff89d5c888</literal><operator>..</operator><literal type="number">6ca1192b25c</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestDocIdSet</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestDocIdSet</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">28</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">28</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Document</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Field</name><operator>.</operator><name>Index</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Field</name><operator>.</operator><name>Store</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>RandomIndexWriter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>Directory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>LuceneTestCase</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">115</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">115</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestDocIdSet</name> extends <name>LuceneTestCase</name> <block>{
     <comment type="line">// Now search w/ a Filter which returns a null DocIdSet</comment>
     <expr><name>Filter</name> <name>f</name> <operator>=</operator> <operator>new</operator> <class><super><name>Filter</name></super><argument_list>()</argument_list> <block>{
       <function><annotation>@<name>Override</name></annotation>
      <type><specifier>public</specifier> <name>DocIdSet</name></type> <name>getDocIdSet</name><parameter_list>(<parameter><decl><type><name>ReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
      <function><type><specifier>public</specifier> <name>DocIdSet</name></type> <name>getDocIdSet</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
         <return>return <expr><literal type="null">null</literal></expr>;</return>
       <expr_stmt/>}</block_content>
     }</block>;</function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestFilteredQuery</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestFilteredQuery</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>dd1655ad2a0</name><operator>..</operator><name>bca34a1f594</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestFilteredQuery</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestFilteredQuery</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name></name>;</package>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Document</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Field</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>RandomIndexWriter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Term</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>BooleanClause</name><operator>.</operator><name>Occur</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">88</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">88</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestFilteredQuery</name> extends <name>LuceneTestCase</name> <block>{
   <expr><specifier>private</specifier> <specifier>static</specifier> <name>Filter</name> <call><name>newStaticFilterB</name><argument_list>()</argument_list></call> <block>{
     <return>return <expr><operator>new</operator> <class><super><name>Filter</name></super><argument_list>()</argument_list> <block>{
       <function><annotation>@<name>Override</name></annotation>
      <type><specifier>public</specifier> <name>DocIdSet</name></type> <name>getDocIdSet</name> <parameter_list>(<parameter><decl><type><name>ReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <function><type><specifier>public</specifier> <name>DocIdSet</name></type> <name>getDocIdSet</name> <parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <decl_stmt><decl><type><name>BitSet</name></type> <name>bitset</name> <init>= <expr><operator>new</operator> <call><name>BitSet</name><argument_list>(<argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <expr_stmt><expr><call><name><name>bitset</name><operator>.</operator><name>set</name></name> <argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><call><name><name>bitset</name><operator>.</operator><name>set</name></name> <argument_list>(<argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">159</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">159</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestFilteredQuery</name> extends <name>LuceneTestCase</name> <block>{
   <expr><specifier>private</specifier> <specifier>static</specifier> <name>Filter</name> <call><name>newStaticFilterA</name><argument_list>()</argument_list></call> <block>{
     <return>return <expr><operator>new</operator> <class><super><name>Filter</name></super><argument_list>()</argument_list> <block>{
       <function><annotation>@<name>Override</name></annotation>
      <type><specifier>public</specifier> <name>DocIdSet</name></type> <name>getDocIdSet</name> <parameter_list>(<parameter><decl><type><name>ReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <function><type><specifier>public</specifier> <name>DocIdSet</name></type> <name>getDocIdSet</name> <parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <decl_stmt><decl><type><name>BitSet</name></type> <name>bitset</name> <init>= <expr><operator>new</operator> <call><name>BitSet</name><argument_list>(<argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <expr_stmt><expr><call><name><name>bitset</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <return>return <expr><operator>new</operator> <call><name>DocIdBitSet</name><argument_list>(<argument><expr><name>bitset</name></expr></argument>)</argument_list></call></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestFilteredSearch</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestFilteredSearch</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>a4b02fa9592</name><operator>..</operator><literal type="number">365f2317b36</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestFilteredSearch</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestFilteredSearch</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">25</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">25</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Document</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Field</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>CorruptIndexException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexWriter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Term</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">97</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">96</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestFilteredSearch</name> extends <name>LuceneTestCase</name> <block>{
     }</block>
 
     @<name>Override</name>
    <specifier>public</specifier> <name>DocIdSet</name> <call><name>getDocIdSet</name><argument_list>(<argument><expr><name>ReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <block>{
    <expr><specifier>public</specifier> <name>DocIdSet</name> <call><name>getDocIdSet</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <block>{
       <assert>assert <expr><name><name>context</name><operator>.</operator><name>isAtomic</name></name></expr>;</assert>
       <name>final</name> <name>OpenBitSet</name> <name>set</name> <operator>=</operator> <operator>new</operator> <call><name>OpenBitSet</name><argument_list>()</argument_list></call></block></expr>;
       <name>int</name> <name>docBase</name> <operator>=</operator> <operator>(</operator><operator>(</operator><name>AtomicReaderContext</name><operator>)</operator><name>context</name><operator>)</operator><operator>.</operator><name>docBase</name></block></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestNumericRangeQuery32</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestNumericRangeQuery32</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>f4b330e8fe9</name><operator>..</operator><literal type="number">18b1ded0a24</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestNumericRangeQuery32</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestNumericRangeQuery32</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">22</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">22</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Document</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Field</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>NumericField</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexWriter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>MultiFields</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>RandomIndexWriter</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">176</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">177</literal></expr><operator>,</operator><expr><literal type="number">15</literal> @@ <specifier>public</specifier> class <name>TestNumericRangeQuery32</name> extends <name>LuceneTestCase</name> <block>{
   
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testInverseRange</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>AtomicReaderContext</name> <name>context</name> <operator>=</operator> <operator>(</operator><name>AtomicReaderContext</name><operator>)</operator> <operator>new</operator> <call><name>SlowMultiReaderWrapper</name><argument_list>(<argument><expr><call><name><name>searcher</name><operator>.</operator><name>getIndexReader</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getTopReaderContext</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
     <name><name>NumericRangeFilter</name><argument_list type="generic">&lt;<argument><name>Integer</name></argument>&gt;</argument_list></name> <name>f</name> <operator>=</operator> <call><name><name>NumericRangeFilter</name><operator>.</operator><name>newIntRange</name></name><argument_list>(<argument><expr><literal type="string">"field8"</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">1000</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1000</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertSame</name><argument_list>(<argument><expr><literal type="string">"A inverse range should return the EMPTY_DOCIDSET instance"</literal></expr></argument>, <argument><expr><name><name>DocIdSet</name><operator>.</operator><name>EMPTY_DOCIDSET</name></name></expr></argument>, <argument><expr><call><name><name>f</name><operator>.</operator><name>getDocIdSet</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>SlowMultiReaderWrapper</name><argument_list>(<argument><expr><call><name><name>searcher</name><operator>.</operator><name>getIndexReader</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getTopReaderContext</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertSame</name><argument_list>(<argument><expr><literal type="string">"A inverse range should return the EMPTY_DOCIDSET instance"</literal></expr></argument>, <argument><expr><name><name>DocIdSet</name><operator>.</operator><name>EMPTY_DOCIDSET</name></name></expr></argument>, <argument><expr><call><name><name>f</name><operator>.</operator><name>getDocIdSet</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>f</name> <operator>=</operator> <call><name><name>NumericRangeFilter</name><operator>.</operator><name>newIntRange</name></name><argument_list>(<argument><expr><literal type="string">"field8"</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name><name>Integer</name><operator>.</operator><name>MAX_VALUE</name></name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertSame</name><argument_list>(<argument><expr><literal type="string">"A exclusive range starting with Integer.MAX_VALUE should return the EMPTY_DOCIDSET instance"</literal></expr></argument>,
               <argument><expr><name><name>DocIdSet</name><operator>.</operator><name>EMPTY_DOCIDSET</name></name></expr></argument>, <argument><expr><call><name><name>f</name><operator>.</operator><name>getDocIdSet</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>SlowMultiReaderWrapper</name><argument_list>(<argument><expr><call><name><name>searcher</name><operator>.</operator><name>getIndexReader</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getTopReaderContext</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
               <expr_stmt><expr><name><name>DocIdSet</name><operator>.</operator><name>EMPTY_DOCIDSET</name></name></expr><operator>,</operator> <expr><call><name><name>f</name><operator>.</operator><name>getDocIdSet</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></expr_stmt></block_content></block></function></block_content></block></function></block></class></expr></return></block></expr></block></expr></expr_stmt></block_content></block></function></block_content></block></function></block></class></expr></return></block></expr></block></expr></expr_stmt></block_content></block></function></block></class></expr></block></expr></expr_stmt></block_content></block></if></if_stmt></block></class></expr></argument>)</argument_list></call></expr>;
     <name>f</name> <operator>=</operator> <call><name><name>NumericRangeFilter</name><operator>.</operator><name>newIntRange</name></name><argument_list>(<argument><expr><literal type="string">"field8"</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name><name>Integer</name><operator>.</operator><name>MIN_VALUE</name></name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertSame</name><argument_list>(<argument><expr><literal type="string">"A exclusive range ending with Integer.MIN_VALUE should return the EMPTY_DOCIDSET instance"</literal></expr></argument>,
               <argument><expr><name><name>DocIdSet</name><operator>.</operator><name>EMPTY_DOCIDSET</name></name></expr></argument>, <argument><expr><call><name><name>f</name><operator>.</operator><name>getDocIdSet</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>SlowMultiReaderWrapper</name><argument_list>(<argument><expr><call><name><name>searcher</name><operator>.</operator><name>getIndexReader</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getTopReaderContext</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
               <expr_stmt><expr><name><name>DocIdSet</name><operator>.</operator><name>EMPTY_DOCIDSET</name></name></expr><operator>,</operator> <expr><call><name><name>f</name><operator>.</operator><name>getDocIdSet</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></expr_stmt></block_content></block></function></block></class></expr></return></block_content></block></function></block_content></block></function></block></class></expr></init></decl></decl_stmt></block_content></block></function></block></class></expr></init></decl></decl_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   <expr_stmt/></block_content></block></if></if_stmt></block_content></block></if></if_stmt>}</block>
   
   @<name>Test</name>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestNumericRangeQuery64</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestNumericRangeQuery64</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">2e5c3e8b256</literal><operator>..</operator><literal type="number">27aebfce451</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestNumericRangeQuery64</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestNumericRangeQuery64</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">25</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">25</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexWriter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>RandomIndexWriter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>SlowMultiReaderWrapper</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>Directory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>BytesRef</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>LuceneTestCase</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">181</literal></expr><operator>,</operator><expr><literal type="number">15</literal> <operator>+</operator><literal type="number">182</literal></expr><operator>,</operator><expr><literal type="number">16</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestNumericRangeQuery64</name> extends <name>LuceneTestCase</name> <block>{
   
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testInverseRange</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>AtomicReaderContext</name> <name>context</name> <operator>=</operator> <operator>(</operator><name>AtomicReaderContext</name><operator>)</operator> <operator>new</operator> <call><name>SlowMultiReaderWrapper</name><argument_list>(<argument><expr><call><name><name>searcher</name><operator>.</operator><name>getIndexReader</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getTopReaderContext</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
     <expr><name><name>NumericRangeFilter</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>&gt;</argument_list></name> <name>f</name> <operator>=</operator> <call><name><name>NumericRangeFilter</name><operator>.</operator><name>newLongRange</name></name><argument_list>(<argument><expr><literal type="string">"field8"</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">1000L</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1000L</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>assertSame</name><argument_list>(<argument><expr><literal type="string">"A inverse range should return the EMPTY_DOCIDSET instance"</literal></expr></argument>, <argument><expr><name><name>DocIdSet</name><operator>.</operator><name>EMPTY_DOCIDSET</name></name></expr></argument>,
        <argument><expr><call><name><name>f</name><operator>.</operator><name>getDocIdSet</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>SlowMultiReaderWrapper</name><argument_list>(<argument><expr><call><name><name>searcher</name><operator>.</operator><name>getIndexReader</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getTopReaderContext</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name>f</name><operator>.</operator><name>getDocIdSet</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>)</block></expr>;</expr_stmt>
     <expr_stmt><expr><name>f</name> <operator>=</operator> <call><name><name>NumericRangeFilter</name><operator>.</operator><name>newLongRange</name></name><argument_list>(<argument><expr><literal type="string">"field8"</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name><name>Long</name><operator>.</operator><name>MAX_VALUE</name></name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertSame</name><argument_list>(<argument><expr><literal type="string">"A exclusive range starting with Long.MAX_VALUE should return the EMPTY_DOCIDSET instance"</literal></expr></argument>,
               <argument><expr><name><name>DocIdSet</name><operator>.</operator><name>EMPTY_DOCIDSET</name></name></expr></argument>, <argument><expr><call><name><name>f</name><operator>.</operator><name>getDocIdSet</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>SlowMultiReaderWrapper</name><argument_list>(<argument><expr><call><name><name>searcher</name><operator>.</operator><name>getIndexReader</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getTopReaderContext</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
               <expr_stmt><expr><name><name>DocIdSet</name><operator>.</operator><name>EMPTY_DOCIDSET</name></name></expr><operator>,</operator> <expr><call><name><name>f</name><operator>.</operator><name>getDocIdSet</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></expr_stmt>)</block_content></block>;</function>
     <expr_stmt><expr><name>f</name> <operator>=</operator> <call><name><name>NumericRangeFilter</name><operator>.</operator><name>newLongRange</name></name><argument_list>(<argument><expr><literal type="string">"field8"</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name><name>Long</name><operator>.</operator><name>MIN_VALUE</name></name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertSame</name><argument_list>(<argument><expr><literal type="string">"A exclusive range ending with Long.MIN_VALUE should return the EMPTY_DOCIDSET instance"</literal></expr></argument>,
               <argument><expr><name><name>DocIdSet</name><operator>.</operator><name>EMPTY_DOCIDSET</name></name></expr></argument>, <argument><expr><call><name><name>f</name><operator>.</operator><name>getDocIdSet</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>SlowMultiReaderWrapper</name><argument_list>(<argument><expr><call><name><name>searcher</name><operator>.</operator><name>getIndexReader</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getTopReaderContext</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
               <expr_stmt><expr><name><name>DocIdSet</name><operator>.</operator><name>EMPTY_DOCIDSET</name></name></expr><operator>,</operator> <expr><call><name><name>f</name><operator>.</operator><name>getDocIdSet</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></expr_stmt>)</block_content></block>;</function>
   </block_content>}</block></function>
   
   <annotation>@<name>Test</name></annotation>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestScorerPerf</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestScorerPerf</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">364b452ce23</literal><operator>..</operator><literal type="number">55c4042eca0</literal> <literal type="number">100755</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestScorerPerf</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestScorerPerf</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">7</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">7</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>BitSet</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexWriter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Term</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexWriterConfig</name><operator>.</operator><name>OpenMode</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">142</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">142</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestScorerPerf</name> extends <name>LuceneTestCase</name> <block>{
     <expr><name>final</name> <name>BitSet</name> <name>rnd</name> <operator>=</operator> <name><name>sets</name><index>[<expr><call><name><name>random</name><operator>.</operator><name>nextInt</name></name><argument_list>(<argument><expr><name><name>sets</name><operator>.</operator><name>length</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr>;
     <expr><name>Query</name> <name>q</name> <operator>=</operator> <operator>new</operator> <call><name>ConstantScoreQuery</name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>Filter</name></super><argument_list>()</argument_list> <block>{
       <function><annotation>@<name>Override</name></annotation>
      <type><specifier>public</specifier> <name>DocIdSet</name></type> <name>getDocIdSet</name><parameter_list>(<parameter><decl><type><name>ReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <function><type><specifier>public</specifier> <name>DocIdSet</name></type> <name>getDocIdSet</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <return>return <expr><operator>new</operator> <call><name>DocIdBitSet</name><argument_list>(<argument><expr><name>rnd</name></expr></argument>)</argument_list></call></expr>;</return>
       <expr_stmt/>}</block_content>
     }</block></function>)</block_content></block>;</function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSort</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSort</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>b0889f21332</name><operator>..</operator><literal type="number">32b58632374</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSort</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSort</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">34</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">34</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Document</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Field</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>CorruptIndexException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexWriter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexWriterConfig</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>MultiReader</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">688</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">688</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestSort</name> extends <name>LuceneTestCase</name> implements <name>Serializable</name> <block>{
     <comment type="line">// a filter that only allows through the first hit</comment>
     <expr><name>Filter</name> <name>filt</name> <operator>=</operator> <operator>new</operator> <class><super><name>Filter</name></super><argument_list>()</argument_list> <block>{
       <function><annotation>@<name>Override</name></annotation>
      <type><specifier>public</specifier> <name>DocIdSet</name></type> <name>getDocIdSet</name><parameter_list>(<parameter><decl><type><name>ReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
      <function><type><specifier>public</specifier> <name>DocIdSet</name></type> <name>getDocIdSet</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
         <decl_stmt><decl><type><name>BitSet</name></type> <name>bs</name> <init>= <expr><operator>new</operator> <call><name>BitSet</name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>reader</name><operator>.</operator><name>maxDoc</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <expr_stmt><expr><call><name><name>bs</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><call><name><name>context</name><operator>.</operator><name>reader</name><operator>.</operator><name>maxDoc</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><call><name><name>bs</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name><name>docs1</name><operator>.</operator><name>scoreDocs</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>doc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestTermScorer</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestTermScorer</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">7265ada5b1c</literal><operator>..</operator><literal type="number">139df5077eb</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestTermScorer</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestTermScorer</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">28</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">28</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>RandomIndexWriter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Term</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>SlowMultiReaderWrapper</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>Directory</name></name>;</import>
 
 <class><specifier>public</specifier> class <name>TestTermScorer</name> <super_list><extends>extends <super><name>LuceneTestCase</name></super></extends></super_list> <block>{
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">71</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">71</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> class <name>TestTermScorer</name> extends <name>LuceneTestCase</name> <block>{
     <expr><name>TermQuery</name> <name>termQuery</name> <operator>=</operator> <operator>new</operator> <call><name>TermQuery</name><argument_list>(<argument><expr><name>allTerm</name></expr></argument>)</argument_list></call></expr>;
     
     <expr><name>Weight</name> <name>weight</name> <operator>=</operator> <call><name><name>termQuery</name><operator>.</operator><name>weight</name></name><argument_list>(<argument><expr><name>indexSearcher</name></expr></argument>)</argument_list></call></expr>;
    
    <expr><name>Scorer</name> <name>ts</name> <operator>=</operator> <call><name><name>weight</name><operator>.</operator><name>scorer</name></name><argument_list>(<argument><expr><call><name><name>indexSearcher</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>indexSearcher</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call><operator>.</operator><name>isAtomic</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>Scorer</name> <name>ts</name> <operator>=</operator> <call><name><name>weight</name><operator>.</operator><name>scorer</name></name><argument_list>(<argument><expr><operator>(</operator><name>AtomicReaderContext</name><operator>)</operator><call><name><name>indexSearcher</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;
     <comment type="line">// we have 2 documents with the term all in them, one document for all the</comment>
     <comment type="line">// other values</comment>
     <expr><name>final</name> <name><name>List</name><argument_list type="generic">&lt;<argument><name>TestHit</name></argument>&gt;</argument_list></name> <name>docs</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>TestHit</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">132</literal></expr>,<expr><literal type="number">8</literal> <operator>+</operator><literal type="number">132</literal></expr>,<expr><literal type="number">8</literal> @@ <specifier>public</specifier> class <name>TestTermScorer</name> extends <name>LuceneTestCase</name> <block>{
     <expr><name>TermQuery</name> <name>termQuery</name> <operator>=</operator> <operator>new</operator> <call><name>TermQuery</name><argument_list>(<argument><expr><name>allTerm</name></expr></argument>)</argument_list></call></expr>;
     
     <expr><name>Weight</name> <name>weight</name> <operator>=</operator> <call><name><name>termQuery</name><operator>.</operator><name>weight</name></name><argument_list>(<argument><expr><name>indexSearcher</name></expr></argument>)</argument_list></call></expr>;
    
    <expr><name>Scorer</name> <name>ts</name> <operator>=</operator> <call><name><name>weight</name><operator>.</operator><name>scorer</name></name><argument_list>(<argument><expr><call><name><name>indexSearcher</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>indexSearcher</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call><operator>.</operator><name>isAtomic</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>Scorer</name> <name>ts</name> <operator>=</operator> <call><name><name>weight</name><operator>.</operator><name>scorer</name></name><argument_list>(<argument><expr><operator>(</operator><name>AtomicReaderContext</name><operator>)</operator> <call><name><name>indexSearcher</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"next did not return a doc"</literal></expr></argument>,
         <argument><expr><call><name><name>ts</name><operator>.</operator><name>nextDoc</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <name><name>DocIdSetIterator</name><operator>.</operator><name>NO_MORE_DOCS</name></name></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"score is not correct"</literal></expr></argument>, <argument><expr><call><name><name>ts</name><operator>.</operator><name>score</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="number">1.6931472f</literal></expr></argument>)</argument_list></call></expr>;
@@ <expr><operator>-</operator><literal type="number">150</literal></expr>,<expr><literal type="number">8</literal> <operator>+</operator><literal type="number">150</literal></expr>,<expr><literal type="number">9</literal> @@ <specifier>public</specifier> class <name>TestTermScorer</name> extends <name>LuceneTestCase</name> <block>{
     <expr><name>TermQuery</name> <name>termQuery</name> <operator>=</operator> <operator>new</operator> <call><name>TermQuery</name><argument_list>(<argument><expr><name>allTerm</name></expr></argument>)</argument_list></call></expr>;
     
     <expr><name>Weight</name> <name>weight</name> <operator>=</operator> <call><name><name>termQuery</name><operator>.</operator><name>weight</name></name><argument_list>(<argument><expr><name>indexSearcher</name></expr></argument>)</argument_list></call></expr>;
    
    <expr><name>Scorer</name> <name>ts</name> <operator>=</operator> <call><name><name>weight</name><operator>.</operator><name>scorer</name></name><argument_list>(<argument><expr><call><name><name>indexSearcher</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>indexSearcher</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call><operator>.</operator><name>isAtomic</name></expr></argument>)</argument_list></call></expr>;

    <expr><name>Scorer</name> <name>ts</name> <operator>=</operator> <call><name><name>weight</name><operator>.</operator><name>scorer</name></name><argument_list>(<argument><expr><operator>(</operator><name>AtomicReaderContext</name><operator>)</operator> <call><name><name>indexSearcher</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"Didn't skip"</literal></expr></argument>, <argument><expr><call><name><name>ts</name><operator>.</operator><name>advance</name></name><argument_list>(<argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <name><name>DocIdSetIterator</name><operator>.</operator><name>NO_MORE_DOCS</name></name></expr></argument>)</argument_list></call></expr>;
     <comment type="line">// The next doc should be doc 5</comment>
     <expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"doc should be number 5"</literal></expr></argument>, <argument><expr><call><name><name>ts</name><operator>.</operator><name>docID</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>spans</name><operator>/</operator><name><name>TestNearSpansOrdered</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>spans</name><operator>/</operator><name><name>TestNearSpansOrdered</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>fc3fb442bab</name><operator>..</operator><name>e5497e470f7</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>spans</name><operator>/</operator><name><name>TestNearSpansOrdered</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>spans</name><operator>/</operator><name><name>TestNearSpansOrdered</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">21</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">21</literal></expr>,<expr><literal type="number">7</literal> @@</expr> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>MockAnalyzer</name></name>;</import></block></expr>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Document</name></name>;</import></block></expr>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Field</name></name>;</import></block></expr></expr_stmt>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>SlowMultiReaderWrapper</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>RandomIndexWriter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>Term</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">168</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">169</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> class <name>TestNearSpansOrdered</name> extends <name>LuceneTestCase</name> <block>{
   <expr><specifier>public</specifier> <name>void</name> <call><name>testSpanNearScorerSkipTo1</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><name>SpanNearQuery</name> <name>q</name> <operator>=</operator> <call><name>makeQuery</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
     <expr><name>Weight</name> <name>w</name> <operator>=</operator> <call><name><name>q</name><operator>.</operator><name>weight</name></name><argument_list>(<argument><expr><name>searcher</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>Scorer</name> <name>s</name> <operator>=</operator> <call><name><name>w</name><operator>.</operator><name>scorer</name></name><argument_list>(<argument><expr><call><name><name>searcher</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>searcher</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call><operator>.</operator><name>isAtomic</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>Scorer</name> <name>s</name> <operator>=</operator> <call><name><name>w</name><operator>.</operator><name>scorer</name></name><argument_list>(<argument><expr><operator>(</operator><name>AtomicReaderContext</name><operator>)</operator> <call><name><name>searcher</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><call><name><name>s</name><operator>.</operator><name>advance</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
   }</block>
   <comment type="block" format="javadoc">/**
@@ -177,7 +179,8 @@ public class TestNearSpansOrdered extends LuceneTestCase {
    */</comment>
   <specifier>public</specifier> <name>void</name> <call><name>testSpanNearScorerExplain</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><name>SpanNearQuery</name> <name>q</name> <operator>=</operator> <call><name>makeQuery</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Explanation</name></type> <name>e</name> <init>= <expr><call><name><name>q</name><operator>.</operator><name>weight</name></name><argument_list>(<argument><expr><name>searcher</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>explain</name><argument_list>(<argument><expr><call><name><name>searcher</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>searcher</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call><operator>.</operator><name>isAtomic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Explanation</name></type> <name>e</name> <init>= <expr><call><name><name>q</name><operator>.</operator><name>weight</name></name><argument_list>(<argument><expr><name>searcher</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>explain</name><argument_list>(<argument><expr><operator>(</operator><name>AtomicReaderContext</name><operator>)</operator> <call><name><name>searcher</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"Scorer explanation value for doc#1 isn't positive: "</literal>
                <operator>+</operator> <call><name><name>e</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>,
                <argument><expr><literal type="number">0.0f</literal> <operator>&lt;</operator> <call><name><name>e</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>request</name><operator>/</operator><name><name>PerSegmentSingleValuedFaceting</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>request</name><operator>/</operator><name><name>PerSegmentSingleValuedFaceting</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">8743072d5da</literal><operator>..</operator><literal type="number">30f99a6f0a6</literal> <literal type="number">100755</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>request</name><operator>/</operator><name><name>PerSegmentSingleValuedFaceting</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>request</name><operator>/</operator><name><name>PerSegmentSingleValuedFaceting</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>request</name></name>;</package>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>TermsEnum</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>DocIdSet</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>DocIdSetIterator</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">10</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">8</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>FieldCache</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Filter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>PriorityQueue</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>BytesRef</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>ReaderUtil</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>packed</name><operator>.</operator><name>Direct16</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>packed</name><operator>.</operator><name>Direct32</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>packed</name><operator>.</operator><name>Direct8</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>params</name><operator>.</operator><name>FacetParams</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>NamedList</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>schema</name><operator>.</operator><name>FieldType</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>DocSet</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>SolrIndexReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>SolrIndexSearcher</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>BoundedTreeSet</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>ByteUtils</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">70</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">68</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ class <name>PerSegmentSingleValuedFaceting</name> <block>{
     <comment type="line">// reuse the translation logic to go from top level set to per-segment set</comment>
     <expr><name>baseSet</name> <operator>=</operator> <call><name><name>docs</name><operator>.</operator><name>getTopFilter</name></name><argument_list>()</argument_list></call></expr>;
 
    <expr><name>final</name> <name><name>AtomicReaderContext</name><index>[]</index></name> <name>leaves</name> <operator>=</operator> <call><name><name>searcher</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>leaves</name><argument_list>()</argument_list></call></expr>;
    <expr><name>final</name> <name><name>AtomicReaderContext</name><index>[]</index></name> <name>leaves</name> <operator>=</operator> <call><name><name>ReaderUtil</name><operator>.</operator><name>leaves</name></name><argument_list>(<argument><expr><call><name><name>searcher</name><operator>.</operator><name>getTopReaderContext</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <comment type="line">// The list of pending tasks that aren't immediately submitted</comment>
     <comment type="line">// TODO: Is there a completion service, or a delegating executor that can</comment>
     <comment type="line">// limit the number of concurrent tasks submitted to a bigger executor?</comment>
@@ <expr><operator>-</operator><literal type="number">209</literal></expr>,<expr><literal type="number">9</literal> <operator>+</operator><literal type="number">207</literal></expr>,<expr><literal type="number">9</literal> @@ class <name>PerSegmentSingleValuedFaceting</name> <block>{
   }</block>
 
   class <name>SegFacet</name> <block>{
    <expr><name>ReaderContext</name> <name>info</name></expr>;
    <expr><call><name>SegFacet</name><argument_list>(<argument><expr><name>ReaderContext</name> <name>info</name></expr></argument>)</argument_list></call> <block>{
      <expr><name><name>this</name><operator>.</operator><name>info</name></name> <operator>=</operator> <name>info</name></expr>;
    <expr><name>AtomicReaderContext</name> <name>context</name></expr>;
    <expr><call><name>SegFacet</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <block>{
      <expr><name><name>this</name><operator>.</operator><name>context</name></name> <operator>=</operator> <name>context</name></expr>;
     }</block>
     
     <name><name>FieldCache</name><operator>.</operator><name>DocTermsIndex</name></name> <name>si</name></expr>;
@@ <expr><operator>-</operator><literal type="number">225</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">223</literal></expr>,<expr><literal type="number">7</literal> @@ class <name>PerSegmentSingleValuedFaceting</name> <block>{
     <expr><name>BytesRef</name> <name>tempBR</name> <operator>=</operator> <operator>new</operator> <call><name>BytesRef</name><argument_list>()</argument_list></call></expr>;
 
     <expr><name>void</name> <call><name>countTerms</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
      <expr><name>si</name> <operator>=</operator> <call><name><name>FieldCache</name><operator>.</operator><name>DEFAULT</name><operator>.</operator><name>getTermsIndex</name></name><argument_list>(<argument><expr><name><name>info</name><operator>.</operator><name>reader</name></name></expr></argument>, <argument><expr><name>fieldName</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
      <expr><name>si</name> <operator>=</operator> <call><name><name>FieldCache</name><operator>.</operator><name>DEFAULT</name><operator>.</operator><name>getTermsIndex</name></name><argument_list>(<argument><expr><name><name>context</name><operator>.</operator><name>reader</name></name></expr></argument>, <argument><expr><name>fieldName</name></expr></argument>)</argument_list></call></expr>;
       <comment type="line">// SolrCore.log.info("reader= " + reader + "  FC=" + System.identityHashCode(si));</comment>
 
       <if_stmt><if>if <condition>(<expr><name>prefix</name><operator>!=</operator><literal type="null">null</literal></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">247</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">245</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ class <name>PerSegmentSingleValuedFaceting</name> <block>{
         <comment type="line">// count collection array only needs to be as big as the number of terms we are</comment>
         <comment type="line">// going to collect counts for.</comment>
         <expr><name>final</name> <name><name>int</name><index>[]</index></name> <name>counts</name> <operator>=</operator> <name><name>this</name><operator>.</operator><name>counts</name></name> <operator>=</operator> <operator>new</operator> <name><name>int</name><index>[<expr><name>nTerms</name></expr>]</index></name></expr>;
        <name>DocIdSet</name> <name>idSet</name> <operator>=</operator> <call><name><name>baseSet</name><operator>.</operator><name>getDocIdSet</name></name><argument_list>(<argument><expr><name>info</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>DocIdSet</name></type> <name>idSet</name> <init>= <expr><call><name><name>baseSet</name><operator>.</operator><name>getDocIdSet</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <decl_stmt><decl><type><name>DocIdSetIterator</name></type> <name>iter</name> <init>= <expr><call><name><name>idSet</name><operator>.</operator><name>iterator</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>LatLonType</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>LatLonType</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">75694f7eaa9</literal><operator>..</operator><literal type="number">2e35dcf72db</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>LatLonType</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>schema</name><operator>/</operator><name><name>LatLonType</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>schema</name></name>;</package>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Field</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Fieldable</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>MultiFields</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>*</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>spatial</name><operator>.</operator><name>DistanceUtils</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">371</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">371</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ class <name>SpatialDistanceQuery</name> extends <name>Query</name> <block>{
     }</block>
 
     @<name>Override</name>
    <specifier>public</specifier> <name>Scorer</name> <call><name>scorer</name><argument_list>(<argument><expr><name>ReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>boolean</name> <name>scoreDocsInOrder</name></expr></argument>, <argument><expr><name>boolean</name> <name>topScorer</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><specifier>public</specifier> <name>Scorer</name> <call><name>scorer</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>boolean</name> <name>scoreDocsInOrder</name></expr></argument>, <argument><expr><name>boolean</name> <name>topScorer</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr></expr_stmt>
       <return>return <expr><operator>new</operator> <call><name>SpatialScorer</name><argument_list>(<argument><expr><call><name>getSimilarity</name><argument_list>(<argument><expr><name>searcher</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>context</name><operator>.</operator><name>reader</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</return>
     <expr_stmt/>}</block_content>
 
     @Override
    public Explanation explain(ReaderContext context</block><operator>,</operator> <expr_stmt><expr><name>int</name> <name>doc</name></expr></expr_stmt></if></if_stmt></block></expr></block></expr></block></expr></block></expr></expr_stmt></block></class></block_content></block></function></block_content></block></function></block></class></expr></block></expr></expr_stmt></block></class></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><specifier>public</specifier> <name>Explanation</name> <call><name>explain</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>int</name> <name>doc</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr>
       <return>return <expr><operator>(</operator><operator>(</operator><name>SpatialScorer</name><operator>)</operator><call><name>scorer</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call><operator>)</operator><operator>.</operator><call><name>explain</name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</return>
     }</block></expr></expr_stmt>
   }
diff <expr_stmt><expr><operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>DocSet</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>DocSet</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">59b3286c98a</literal><operator>..</operator><name>e4482ac0c73</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>DocSet</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>DocSet</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">23</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">23</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>DocIdSet</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Filter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>DocIdSetIterator</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">247</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">247</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>abstract</specifier> <name>class</name> <name>DocSetBase</name> implements <name>DocSet</name> <block>{
 
     <return>return <expr><operator>new</operator> <class><super><name>Filter</name></super><argument_list>()</argument_list> <block>{
       <function><annotation>@<name>Override</name></annotation>
      <type><specifier>public</specifier> <name>DocIdSet</name></type> <name>getDocIdSet</name><parameter_list>(<parameter><decl><type><name>ReaderContext</name></type> <name>ctx</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
      <function><type><specifier>public</specifier> <name>DocIdSet</name></type> <name>getDocIdSet</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>ctx</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
         <decl_stmt><decl><type><name><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name></type> <name>context</name> <init>= <expr><operator>(</operator><name><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name><operator>)</operator><name>ctx</name></expr></init></decl>;</decl_stmt>  <comment type="line">// TODO: remove after lucene migration</comment>
         <decl_stmt><decl><type><name>IndexReader</name></type> <name>reader</name> <init>= <expr><name><name>ctx</name><operator>.</operator><name>reader</name></name></expr></init></decl>;</decl_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SolrConstantScoreQuery</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SolrConstantScoreQuery</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">0c5179e3d8e</literal><operator>..</operator><name>fd63bb92fb9</name> <literal type="number">100755</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SolrConstantScoreQuery</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SolrConstantScoreQuery</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">2</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">2</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name></name>;</package>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>*</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name><operator>.</operator><name>ValueSource</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>SolrException</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">90</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">90</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrConstantScoreQuery</name> extends <name>ConstantScoreQuery</name> <block>{
     }</block>
 
     @<name>Override</name>
    <specifier>public</specifier> <name>Scorer</name> <call><name>scorer</name><argument_list>(<argument><expr><name>ReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>boolean</name> <name>scoreDocsInOrder</name></expr></argument>, <argument><expr><name>boolean</name> <name>topScorer</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><specifier>public</specifier> <name>Scorer</name> <call><name>scorer</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>boolean</name> <name>scoreDocsInOrder</name></expr></argument>, <argument><expr><name>boolean</name> <name>topScorer</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr></expr_stmt>
       <return>return <expr><operator>new</operator> <call><name>ConstantScorer</name><argument_list>(<argument><expr><name>similarity</name></expr></argument>, <argument><expr><name>context</name></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</return>
     <expr_stmt/></block_content></block></function></block_content></block></function></block></class></expr></return>}</block>
 
     @<name>Override</name>
    <specifier>public</specifier> <name>Explanation</name> <call><name>explain</name><argument_list>(<argument><expr><name>ReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>int</name> <name>doc</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><specifier>public</specifier> <name>Explanation</name> <call><name>explain</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>int</name> <name>doc</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
 
       <expr><name>ConstantScorer</name> <name>cs</name> <operator>=</operator> <operator>new</operator> <call><name>ConstantScorer</name><argument_list>(<argument><expr><name>similarity</name></expr></argument>, <argument><expr><name>context</name></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
       <decl_stmt><decl><type><name>boolean</name></type> <name>exists</name> <init>= <expr><call><name><name>cs</name><operator>.</operator><name>docIdSetIterator</name><operator>.</operator><name>advance</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>doc</name></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">124</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">124</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrConstantScoreQuery</name> extends <name>ConstantScoreQuery</name> <block>{
     <expr><name>final</name> <name>float</name> <name>theScore</name></expr>;
     <expr><name>int</name> <name>doc</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;
 
    <expr><specifier>public</specifier> <call><name>ConstantScorer</name><argument_list>(<argument><expr><name>Similarity</name> <name>similarity</name></expr></argument>, <argument><expr><name>ReaderContext</name> <name>info</name></expr></argument>, <argument><expr><name>ConstantWeight</name> <name>w</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><specifier>public</specifier> <call><name>ConstantScorer</name><argument_list>(<argument><expr><name>Similarity</name> <name>similarity</name></expr></argument>, <argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>ConstantWeight</name> <name>w</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
       <expr><call><name>super</name><argument_list>(<argument><expr><name>similarity</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
       <expr><name>theScore</name> <operator>=</operator> <call><name><name>w</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr>;
      <expr><name>DocIdSet</name> <name>docIdSet</name> <operator>=</operator> <ternary><condition><expr><name>filter</name> <operator>instanceof</operator> <name>SolrFilter</name></expr> ?</condition><then> <expr><operator>(</operator><operator>(</operator><name>SolrFilter</name><operator>)</operator><name>filter</name><operator>)</operator><operator>.</operator><call><name>getDocIdSet</name><argument_list>(<argument><expr><name><name>w</name><operator>.</operator><name>context</name></name></expr></argument>, <argument><expr><name>info</name></expr></argument>)</argument_list></call></expr> </then><else>: <expr><call><name><name>filter</name><operator>.</operator><name>getDocIdSet</name></name><argument_list>(<argument><expr><name>info</name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;
      <expr><name>DocIdSet</name> <name>docIdSet</name> <operator>=</operator> <ternary><condition><expr><name>filter</name> <operator>instanceof</operator> <name>SolrFilter</name></expr> ?</condition><then> <expr><operator>(</operator><operator>(</operator><name>SolrFilter</name><operator>)</operator><name>filter</name><operator>)</operator><operator>.</operator><call><name>getDocIdSet</name><argument_list>(<argument><expr><name><name>w</name><operator>.</operator><name>context</name></name></expr></argument>, <argument><expr><name>context</name></expr></argument>)</argument_list></call></expr> </then><else>: <expr><call><name><name>filter</name><operator>.</operator><name>getDocIdSet</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;
       <if_stmt><if>if <condition>(<expr><name>docIdSet</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
         <expr_stmt><expr><name>docIdSetIterator</name> <operator>=</operator> <call><name><name>DocIdSet</name><operator>.</operator><name>EMPTY_DOCIDSET</name><operator>.</operator><name>iterator</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <expr_stmt/></block_content></block></if></if_stmt>}</block></expr></expr_stmt> <if_stmt><else>else <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SolrFilter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SolrFilter</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">91009320b3b</literal><operator>..</operator><literal type="number">1eddff4ff43</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SolrFilter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SolrFilter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Filter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>IndexSearcher</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>DocIdSet</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">41</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">42</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>SolrFilter</name> extends <name>Filter</name> <block>{
   <expr><specifier>public</specifier> <specifier>abstract</specifier> <name>DocIdSet</name> <call><name>getDocIdSet</name><argument_list>(<argument><expr><name>Map</name> <name>context</name></expr></argument>, <argument><expr><name>ReaderContext</name> <name>readerContext</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws></expr>;
 
   @<name>Override</name>
  <specifier>public</specifier> <name>DocIdSet</name> <call><name>getDocIdSet</name><argument_list>(<argument><expr><name>ReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
  <expr><specifier>public</specifier> <name>DocIdSet</name> <call><name>getDocIdSet</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></block></expr></expr_stmt>
     <return>return <expr><call><name>getDocIdSet</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></else></if_stmt>
 }
diff <expr_stmt><expr><operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SortedIntDocSet</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SortedIntDocSet</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">052bac50ef6</literal><operator>..</operator><literal type="number">07a62d3e041</literal> <literal type="number">100755</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SortedIntDocSet</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SortedIntDocSet</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">22</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">22</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>DocIdSet</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>DocIdSetIterator</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Filter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">553</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">552</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SortedIntDocSet</name> extends <name>DocSetBase</name> <block>{
       <expr><name>int</name> <name>lastEndIdx</name> <operator>=</operator> <literal type="number">0</literal></expr>;
 
       @<expr><name>Override</name>
      <specifier>public</specifier> <name>DocIdSet</name> <call><name>getDocIdSet</name><argument_list>(<argument><expr><name>ReaderContext</name> <name>contextX</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
      <expr><specifier>public</specifier> <name>DocIdSet</name> <call><name>getDocIdSet</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>contextX</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
         <expr><name>AtomicReaderContext</name> <name>context</name> <operator>=</operator> <operator>(</operator><name>AtomicReaderContext</name><operator>)</operator><name>contextX</name></expr></block></expr></argument></throws></expr>;  <comment type="line">// TODO: remove after lucene migration</comment>
         <expr><name>IndexReader</name> <name>reader</name> <operator>=</operator> <name><name>context</name><operator>.</operator><name>reader</name></name></expr>;
 
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>BoostedQuery</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>BoostedQuery</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">963a776d3a0</literal><operator>..</operator><literal type="number">645f3805cb8</literal> <literal type="number">100755</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>BoostedQuery</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>BoostedQuery</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">19</literal></expr>,<expr><literal type="number">9</literal> <operator>+</operator><literal type="number">19</literal></expr>,<expr><literal type="number">8</literal> @@</expr> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name></name>;</package></block></expr></expr_stmt>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>*</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>ToStringUtils</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>SolrIndexReader</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">92</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">91</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>BoostedQuery</name> extends <name>Query</name> <block>{
     }</block>
 
     @<name>Override</name>
    <specifier>public</specifier> <name>Scorer</name> <call><name>scorer</name><argument_list>(<argument><expr><name>ReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>boolean</name> <name>scoreDocsInOrder</name></expr></argument>, <argument><expr><name>boolean</name> <name>topScorer</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><specifier>public</specifier> <name>Scorer</name> <call><name>scorer</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>boolean</name> <name>scoreDocsInOrder</name></expr></argument>, <argument><expr><name>boolean</name> <name>topScorer</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
       <expr><name>Scorer</name> <name>subQueryScorer</name> <operator>=</operator> <call><name><name>qWeight</name><operator>.</operator><name>scorer</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
       <if_stmt><if>if<condition>(<expr><name>subQueryScorer</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
         <return>return <expr><literal type="null">null</literal></expr>;</return>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">101</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">100</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>BoostedQuery</name> extends <name>Query</name> <block>{
     }</block>
 
     @<name>Override</name>
    <specifier>public</specifier> <name>Explanation</name> <call><name>explain</name><argument_list>(<argument><expr><name>ReaderContext</name> <name>readerContext</name></expr></argument>, <argument><expr><name>int</name> <name>doc</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><specifier>public</specifier> <name>Explanation</name> <call><name>explain</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>readerContext</name></expr></argument>, <argument><expr><name>int</name> <name>doc</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{
       <expr><name>Explanation</name> <name>subQueryExpl</name> <operator>=</operator> <call><name><name>qWeight</name><operator>.</operator><name>explain</name></name><argument_list>(<argument><expr><name>readerContext</name></expr></argument>,<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
       <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>subQueryExpl</name><operator>.</operator><name>isMatch</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
         <return>return <expr><name>subQueryExpl</name></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>FunctionQuery</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>FunctionQuery</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">1a6ad49bb6e</literal><operator>..</operator><name>dc0f644995e</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>FunctionQuery</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>FunctionQuery</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name></name>;</package>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>*</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>MultiFields</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">94</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">95</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>FunctionQuery</name> extends <name>Query</name> <block>{
     }</block>
 
     @<name>Override</name>
    <specifier>public</specifier> <name>Scorer</name> <call><name>scorer</name><argument_list>(<argument><expr><name>ReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>boolean</name> <name>scoreDocsInOrder</name></expr></argument>, <argument><expr><name>boolean</name> <name>topScorer</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><specifier>public</specifier> <name>Scorer</name> <call><name>scorer</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>, <argument><expr><name>boolean</name> <name>scoreDocsInOrder</name></expr></argument>, <argument><expr><name>boolean</name> <name>topScorer</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr></expr_stmt>
       <return>return <expr><operator>new</operator> <call><name>AllScorer</name><argument_list>(<argument><expr><call><name>getSimilarity</name><argument_list>(<argument><expr><name>searcher</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>context</name></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block></if></if_stmt>
 
     <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>Explanation</name></type> <name>explain</name><parameter_list>(<parameter><decl><type><name>ReaderContext</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <function><type><specifier>public</specifier> <name>Explanation</name></type> <name>explain</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>doc</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
       <return>return <expr><operator>(</operator><operator>(</operator><name>AllScorer</name><operator>)</operator><call><name>scorer</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call><operator>)</operator><operator>.</operator><call><name>explain</name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block></function>
   </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ScaleFloatFunction</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ScaleFloatFunction</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">74875bedbfc</literal><operator>..</operator><name>da746d6a2a0</name> <literal type="number">100755</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ScaleFloatFunction</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ScaleFloatFunction</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>function</name></name>;</package>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>IndexSearcher</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>SolrIndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>ReaderUtil</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">59</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">59</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ScaleFloatFunction</name> extends <name>ValueSource</name> <block>{
   <expr><specifier>private</specifier> <name>ScaleInfo</name> <call><name>createScaleInfo</name><argument_list>(<argument><expr><name>Map</name> <name>context</name></expr></argument>, <argument><expr><name>IndexReader</name> <name>reader</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><name><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name> <name>ctx</name> <operator>=</operator> <call><name><name>ValueSource</name><operator>.</operator><name>readerToContext</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</block></expr></expr_stmt>
     <while>while <condition>(<expr><name><name>ctx</name><operator>.</operator><name>parent</name></name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>ctx</name> <operator>=</operator> <name><name>ctx</name><operator>.</operator><name>parent</name></name></expr>;</expr_stmt></block_content></block></while>
    <decl_stmt><decl><type><name><name>AtomicReaderContext</name><index>[]</index></name></type> <name>leaves</name> <init>= <expr><call><name><name>ctx</name><operator>.</operator><name>leaves</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>ctx</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>leaves</name> <operator>=</operator> <operator>new</operator> <name><name>AtomicReaderContext</name><index>[]</index></name> <block>{<expr><operator>(</operator><name>AtomicReaderContext</name><operator>)</operator><name>ctx</name></expr>}</block></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>AtomicReaderContext</name><index>[]</index></name></type> <name>leaves</name> <init>= <expr><call><name><name>ReaderUtil</name><operator>.</operator><name>leaves</name></name><argument_list>(<argument><expr><name>ctx</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <decl_stmt><decl><type><name>float</name></type> <name>minVal</name> <init>= <expr><name><name>Float</name><operator>.</operator><name>POSITIVE_INFINITY</name></name></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>float</name></type> <name>maxVal</name> <init>= <expr><name><name>Float</name><operator>.</operator><name>NEGATIVE_INFINITY</name></name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ValueSource</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ValueSource</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>daaffd65504</name><operator>..</operator><literal type="number">80f61f6018d</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ValueSource</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ValueSource</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">27</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">27</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>IndexSearcher</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>SortField</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>Bits</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>MultiFields</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>SolrException</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>Serializable</name></name>;</import>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestDocSet</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestDocSet</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">8a87ac5d72b</literal><operator>..</operator><literal type="number">25eda5c9259</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestDocSet</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestDocSet</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">24</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">24</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>LuceneTestCase</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>OpenBitSet</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>OpenBitSetIterator</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>ReaderUtil</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>FilterIndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>MultiReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Filter</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">424</literal></expr><operator>,</operator><expr><literal type="number">18</literal> <operator>+</operator><literal type="number">426</literal></expr><operator>,</operator><expr><literal type="number">19</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestDocSet</name> extends <name>LuceneTestCase</name> <block>{
     <expr><name>DocIdSet</name> <name>db</name></expr>;</block></expr></expr_stmt>
 
     <comment type="line">// first test in-sequence sub readers</comment>
    <for>for <control>(<init><decl><type><name>ReaderContext</name></type> <name>readerInfo</name> <range>: <expr><call><name><name>topLevelContext</name><operator>.</operator><name>leaves</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
      <expr_stmt><expr><name>da</name> <operator>=</operator> <call><name><name>fa</name><operator>.</operator><name>getDocIdSet</name></name><argument_list>(<argument><expr><name>readerInfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>db</name> <operator>=</operator> <call><name><name>fb</name><operator>.</operator><name>getDocIdSet</name></name><argument_list>(<argument><expr><name>readerInfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for>for <control>(<init><decl><type><name>AtomicReaderContext</name></type> <name>readerContext</name> <range>: <expr><call><name><name>ReaderUtil</name><operator>.</operator><name>leaves</name></name><argument_list>(<argument><expr><name>topLevelContext</name></expr></argument>)</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
      <expr_stmt><expr><name>da</name> <operator>=</operator> <call><name><name>fa</name><operator>.</operator><name>getDocIdSet</name></name><argument_list>(<argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>db</name> <operator>=</operator> <call><name><name>fb</name><operator>.</operator><name>getDocIdSet</name></name><argument_list>(<argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>doTestIteratorEqual</name><argument_list>(<argument><expr><name>da</name></expr></argument>, <argument><expr><name>db</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></for>  
 
    <decl_stmt><decl><type><name>int</name></type> <name>nReaders</name> <init>= <expr><call><name><name>topLevelContext</name><operator>.</operator><name>leaves</name></name><argument_list>()</argument_list></call><operator>.</operator><name>length</name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>AtomicReaderContext</name><index>[]</index></name></type> <name>leaves</name> <init>= <expr><call><name><name>ReaderUtil</name><operator>.</operator><name>leaves</name></name><argument_list>(<argument><expr><name>topLevelContext</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>nReaders</name> <init>= <expr><name><name>leaves</name><operator>.</operator><name>length</name></name></expr></init></decl>;</decl_stmt>
     <comment type="line">// now test out-of-sequence sub readers</comment>
     <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name>nReaders</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
      <decl_stmt><decl><type><name>ReaderContext</name></type> <name>readerInfo</name> <init>= <expr><call><name><name>topLevelContext</name><operator>.</operator><name>leaves</name></name><argument_list>()</argument_list></call><index>[<expr><call><name><name>rand</name><operator>.</operator><name>nextInt</name></name><argument_list>(<argument><expr><name>nReaders</name></expr></argument>)</argument_list></call></expr>]</index></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><name>da</name> <operator>=</operator> <call><name><name>fa</name><operator>.</operator><name>getDocIdSet</name></name><argument_list>(<argument><expr><name>readerInfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>db</name> <operator>=</operator> <call><name><name>fb</name><operator>.</operator><name>getDocIdSet</name></name><argument_list>(<argument><expr><name>readerInfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>AtomicReaderContext</name></type> <name>readerContext</name> <init>= <expr><name><name>leaves</name><index>[<expr><call><name><name>rand</name><operator>.</operator><name>nextInt</name></name><argument_list>(<argument><expr><name>nReaders</name></expr></argument>)</argument_list></call></expr>]</index></name></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><name>da</name> <operator>=</operator> <call><name><name>fa</name><operator>.</operator><name>getDocIdSet</name></name><argument_list>(<argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>db</name> <operator>=</operator> <call><name><name>fb</name><operator>.</operator><name>getDocIdSet</name></name><argument_list>(<argument><expr><name>readerContext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>doTestIteratorEqual</name><argument_list>(<argument><expr><name>da</name></expr></argument>, <argument><expr><name>db</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></for>
   </block_content>}</block></for>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSort</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSort</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">60b46237416</literal><operator>..</operator><name>c4b0c1450c7</name> <literal type="number">100755</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSort</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSort</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>analysis</name><operator>.</operator><name>core</name><operator>.</operator><name>SimpleAnalyzer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Document</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Field</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>ReaderContext</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name><operator>.</operator><name>AtomicReaderContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexWriter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexWriterConfig</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>*</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">107</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">107</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSort</name> extends <name>AbstractSolrTestCase</name> <block>{
       <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name>qiter</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
         <decl_stmt><decl><type><name>Filter</name></type> <name>filt</name> <init>= <expr><operator>new</operator> <class><super><name>Filter</name></super><argument_list>()</argument_list> <block>{
           <function><annotation>@<name>Override</name></annotation>
          <type><specifier>public</specifier> <name>DocIdSet</name></type> <name>getDocIdSet</name><parameter_list>(<parameter><decl><type><name>ReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
          <function><type><specifier>public</specifier> <name>DocIdSet</name></type> <name>getDocIdSet</name><parameter_list>(<parameter><decl><type><name>AtomicReaderContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
             <return>return <expr><call><name>randSet</name><argument_list>(<argument><expr><call><name><name>context</name><operator>.</operator><name>reader</name><operator>.</operator><name>maxDoc</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
           </block_content>}</block></function>
         </block_content>}</block></function><empty_stmt>;</empty_stmt>
<expr_stmt><expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></expr_stmt></block></class></expr></init></decl></decl_stmt></block_content></block></for></block></expr></expr_stmt></block_content></block></if></if_stmt>

</unit>
