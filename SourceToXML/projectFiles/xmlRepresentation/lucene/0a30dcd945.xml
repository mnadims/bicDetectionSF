<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/lucene/0a30dcd945.java"><expr_stmt><expr><name>From</name> <literal type="number">0a30dcd94540ecb3ff15686ce45d06171aec6d71</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Yonik</name> <name><name>Seeley</name> <argument_list type="generic">&lt;<argument><name>yonik</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Wed</name></expr><operator>,</operator> <expr><literal type="number">19</literal> <name>Jan</name> <literal type="number">2011</literal> <literal type="number">23</literal><operator>:</operator><literal type="number">48</literal><operator>:</operator><literal type="number">28</literal> <operator>+</operator><literal type="number">0000</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>SOLR</name><operator>-</operator><literal type="number">1297</literal><operator>:</operator> <name>fix</name> <name>weighting</name> <name>when</name> <name>sorting</name> <name>by</name> <name>function</name>

<name>git</name><operator>-</operator><name>svn</name><operator>-</operator><name>id</name><operator>:</operator> <name>https</name><operator>:</operator><comment type="line">//svn.apache.org/repos/asf/lucene/dev/trunk@1061065 13f79535-47bb-0310-9956-ffa450edef68</comment>
<operator>--</operator>
 <operator>...</operator><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>QueryComponent</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>Grouping</name><operator>.</operator><name>java</name></name> <operator>|</operator> <literal type="number">24</literal> <operator>++</operator><operator>+</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SolrIndexSearcher</name><operator>.</operator><name>java</name></name> <operator>|</operator> <literal type="number">30</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SolrSortField</name><operator>.</operator><name>java</name></name> <operator>|</operator> <literal type="number">31</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ValueSource</name><operator>.</operator><name>java</name></name>     <operator>|</operator> <literal type="number">75</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>TestDistributedSearch</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">1</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>TestFunctionQuery</name><operator>.</operator><name>java</name></name>    <operator>|</operator> <literal type="number">15</literal> <operator>++</operator><operator>+</operator><operator>-</operator>
 <literal type="number">7</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">134</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">44</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SolrSortField</name><operator>.</operator><name>java</name></name>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>QueryComponent</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>QueryComponent</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">18bbf49deec</literal><operator>..</operator><name>f98d65493ca</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>QueryComponent</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>QueryComponent</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">443</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">443</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>QueryComponent</name> extends <name>SearchComponent</name>
     <comment type="line">// take the documents given and re-derive the sort values.</comment>
     <name>boolean</name> <name>fsv</name> <operator>=</operator> <call><name><name>req</name><operator>.</operator><name>getParams</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getBool</name><argument_list>(<argument><expr><name><name>ResponseBuilder</name><operator>.</operator><name>FIELD_SORT_VALUES</name></name></expr></argument>,<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <if_stmt><if>if<condition>(<expr><name>fsv</name></expr>)</condition><block>{<block_content>
      <decl_stmt><decl><type><name>Sort</name></type> <name>sort</name> <init>= <expr><call><name><name>rb</name><operator>.</operator><name>getSortSpec</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getSort</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>Sort</name></type> <name>sort</name> <init>= <expr><call><name><name>searcher</name><operator>.</operator><name>weightSort</name></name><argument_list>(<argument><expr><call><name><name>rb</name><operator>.</operator><name>getSortSpec</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getSort</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name><name>SortField</name><index>[]</index></name></type> <name>sortFields</name> <init>= <expr><ternary><condition><expr><name>sort</name><operator>==</operator><literal type="null">null</literal></expr> ?</condition><then> <expr><operator>new</operator> <name><name>SortField</name><index>[]</index></name><block>{<expr><name><name>SortField</name><operator>.</operator><name>FIELD_SCORE</name></name></expr>}</block></expr> </then><else>: <expr><call><name><name>sort</name><operator>.</operator><name>getSort</name></name><argument_list>()</argument_list></call></expr></else></ternary></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>NamedList</name></type> <name>sortVals</name> <init>= <expr><operator>new</operator> <call><name>NamedList</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="line">// order is important for the sort fields</comment>
       <decl_stmt><decl><type><name>Field</name></type> <name>field</name> <init>= <expr><operator>new</operator> <call><name>Field</name><argument_list>(<argument><expr><literal type="string">"dummy"</literal></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><name><name>Field</name><operator>.</operator><name>Store</name><operator>.</operator><name>YES</name></name></expr></argument>, <argument><expr><name><name>Field</name><operator>.</operator><name>Index</name><operator>.</operator><name>NO</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="line">// a dummy Field</comment>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>Grouping</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>Grouping</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">894b592f3e1</literal><operator>..</operator><literal type="number">992109130a5</literal> <literal type="number">100755</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>Grouping</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>Grouping</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">162</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">162</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>Grouping</name> <block>{
       <comment type="line">// if we aren't going to return any groups, disregard the offset </comment>
       <if_stmt><if>if <condition>(<expr><name>numGroups</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>maxGroupToFind</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
 
      <name>collector</name> <operator>=</operator> <operator>new</operator> <call><name>TopGroupCollector</name><argument_list>(<argument><expr><name>groupBy</name></expr></argument>, <argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>normalizeSort</name><argument_list>(<argument><expr><name>sort</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>maxGroupToFind</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
      <expr_stmt><expr><name>collector</name> <operator>=</operator> <operator>new</operator> <call><name>TopGroupCollector</name><argument_list>(<argument><expr><name>groupBy</name></expr></argument>, <argument><expr><name>context</name></expr></argument>, <argument><expr><call><name><name>searcher</name><operator>.</operator><name>weightSort</name></name><argument_list>(<argument><expr><call><name>normalizeSort</name><argument_list>(<argument><expr><name>sort</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>maxGroupToFind</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
       <comment type="block" format="javadoc">/*** if we need a different algorithm when sort != group.sort
       if (compareSorts(sort, groupSort)) {
@@ -185,9 +185,9 @@ public class Grouping {
       int collectorOffset = format==Format.Simple ? 0 : offset;
 
       if (groupBy instanceof StrFieldSource) {
        collector2 = new Phase2StringGroupCollector(collector, groupBy, context, groupSort, docsToCollect, needScores, collectorOffset);
        collector2 = new Phase2StringGroupCollector(collector, groupBy, context, searcher.weightSort(groupSort), docsToCollect, needScores, collectorOffset);
       } else {
        collector2 = new Phase2GroupCollector(collector, groupBy, context, groupSort, docsToCollect, needScores, collectorOffset);
        collector2 = new Phase2GroupCollector(collector, groupBy, context, searcher.weightSort(groupSort), docsToCollect, needScores, collectorOffset);
       }
       return collector2;
     }
@@ -306,11 +306,11 @@ public class Grouping {
     return v;
   }
 
  static TopDocsCollector newCollector(Sort sort, int numHits, boolean fillFields, boolean needScores) throws IOException {
  TopDocsCollector newCollector(Sort sort, int numHits, boolean fillFields, boolean needScores) throws IOException {
     if (sort==null || sort==byScoreDesc) {
       return TopScoreDocCollector.create(numHits, true);
     } else {
      return TopFieldCollector.create(sort, numHits, false, needScores, needScores, true);
      return TopFieldCollector.create(searcher.weightSort(sort), numHits, false, needScores, needScores, true);
     }
   }
 
@@ -505,12 +505,12 @@ class TopGroupCollector extends GroupCollector {
 
   int matches;
 
  public TopGroupCollector(ValueSource groupByVS, Map vsContext, Sort sort, int nGroups) throws IOException {
  public TopGroupCollector(ValueSource groupByVS, Map vsContext, Sort weightedSort, int nGroups) throws IOException {
     this.vs = groupByVS;
     this.context = vsContext;
     this.nGroups = nGroups = Math.max(1,nGroups);  // we need a minimum of 1 for this collector
 
    SortField[] sortFields = sort.getSort();
    SortField[] sortFields = weightedSort.getSort();
     this.comparators = new FieldComparator[sortFields.length];
     this.reversed = new int[sortFields.length];
     for (int i = 0; i &lt; sortFields.length; i++) {
@@ -719,7 +719,7 @@ class Phase2GroupCollector extends Collector {
   int docBase;
 
   // TODO: may want to decouple from the phase1 collector
  public Phase2GroupCollector(TopGroupCollector topGroups, ValueSource groupByVS, Map vsContext, Sort sort, int docsPerGroup, boolean getScores, int offset) throws IOException {
  public Phase2GroupCollector(TopGroupCollector topGroups, ValueSource groupByVS, Map vsContext, Sort weightedSort, int docsPerGroup, boolean getScores, int offset) throws IOException {
     boolean getSortFields = false;
 
     if (topGroups.orderedGroups == null)
@@ -733,10 +733,10 @@ class Phase2GroupCollector extends Collector {
       }
       SearchGroupDocs groupDocs = new SearchGroupDocs();
       groupDocs.groupValue = group.groupValue;
      if (sort==null)
      if (weightedSort==null)
         groupDocs.collector = TopScoreDocCollector.create(docsPerGroup, true);        
       else
        groupDocs.collector = TopFieldCollector.create(sort, docsPerGroup, getSortFields, getScores, getScores, true);
        groupDocs.collector = TopFieldCollector.create(weightedSort, docsPerGroup, getSortFields, getScores, getScores, true);
       groupMap.put(groupDocs.groupValue, groupDocs);
     }
 
@@ -791,8 +791,8 @@ class Phase2StringGroupCollector extends Phase2GroupCollector {
   final SearchGroupDocs[] groups;
   final BytesRef spare = new BytesRef();
 
  public Phase2StringGroupCollector(TopGroupCollector topGroups, ValueSource groupByVS, Map vsContext, Sort sort, int docsPerGroup, boolean getScores, int offset) throws IOException {
    super(topGroups, groupByVS, vsContext,sort,docsPerGroup,getScores,offset);
  public Phase2StringGroupCollector(TopGroupCollector topGroups, ValueSource groupByVS, Map vsContext, Sort weightedSort, int docsPerGroup, boolean getScores, int offset) throws IOException {
    super(topGroups, groupByVS, vsContext,weightedSort,docsPerGroup,getScores,offset);
     ordSet = new SentinelIntSet(groupMap.size(), -1);
     groups = new SearchGroupDocs[ordSet.keys.length];
   }
diff --git a/solr/src/java/org/apache/solr/search/SolrIndexSearcher.java b/solr/src/java/org/apache/solr/search/SolrIndexSearcher.java
index 6dec3f0df6b..d874f13722a 100644
-- a/solr/src/java/org/apache/solr/search/SolrIndexSearcher.java
++ b/solr/src/java/org/apache/solr/search/SolrIndexSearcher.java
@@ -460,6 +460,30 @@ public class SolrIndexSearcher extends IndexSearcher implements SolrInfoMBean {
     return fieldValueCache;
   }
 
  /** Returns a weighted sort according to this searcher */</comment>
  <function><type><specifier>public</specifier> <name>Sort</name></type> <name>weightSort</name><parameter_list>(<parameter><decl><type><name>Sort</name></type> <name>sort</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name>sort</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><literal type="null">null</literal></expr>;</return></block_content></block></if></if_stmt>
    <decl_stmt><decl><type><name><name>SortField</name><index>[]</index></name></type> <name>sorts</name> <init>= <expr><call><name><name>sort</name><operator>.</operator><name>getSort</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>boolean</name></type> <name>needsWeighting</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
    <for>for <control>(<init><decl><type><name>SortField</name></type> <name>sf</name> <range>: <expr><name>sorts</name></expr></range></decl></init>)</control> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><name>sf</name> <operator>instanceof</operator> <name>SolrSortField</name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>needsWeighting</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
        <break>break;</break>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><name>needsWeighting</name></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><name>sort</name></expr>;</return></block_content></block></if></if_stmt>

    <decl_stmt><decl><type><name><name>SortField</name><index>[]</index></name></type> <name>newSorts</name> <init>= <expr><call><name><name>Arrays</name><operator>.</operator><name>copyOf</name></name><argument_list>(<argument><expr><name>sorts</name></expr></argument>, <argument><expr><name><name>sorts</name><operator>.</operator><name>length</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name><name>newSorts</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><name><name>newSorts</name><index>[<expr><name>i</name></expr>]</index></name> <operator>instanceof</operator> <name>SolrSortField</name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name><name>newSorts</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><operator>(</operator><name>SolrSortField</name><operator>)</operator><name><name>newSorts</name><index>[<expr><name>i</name></expr>]</index></name><operator>)</operator><operator>.</operator><call><name>weight</name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>

    <return>return <expr><operator>new</operator> <call><name>Sort</name><argument_list>(<argument><expr><name>newSorts</name></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

 
   <comment type="block" format="javadoc">/**
    * Returns the first document number containing the term &lt;code&gt;t&lt;/code&gt;
@@ -1156,7 +1180,7 @@ public class SolrIndexSearcher extends IndexSearcher implements SolrInfoMBean {
       if (cmd.getSort() == null) {
         topCollector = TopScoreDocCollector.create(len, true);
       } else {
        topCollector = TopFieldCollector.create(cmd.getSort(), len, false, needScores, needScores, true);
        topCollector = TopFieldCollector.create(weightSort(cmd.getSort()), len, false, needScores, needScores, true);
       }
       Collector collector = topCollector;
       if( timeAllowed &gt; 0 ) {
@@ -1266,7 +1290,7 @@ public class SolrIndexSearcher extends IndexSearcher implements SolrInfoMBean {
       if (cmd.getSort() == null) {
         topCollector = TopScoreDocCollector.create(len, true);
       } else {
        topCollector = TopFieldCollector.create(cmd.getSort(), len, false, needScores, needScores, true);
        topCollector = TopFieldCollector.create(weightSort(cmd.getSort()), len, false, needScores, needScores, true);
       }
 
       DocSetCollector setCollector = new DocSetDelegateCollector(maxDoc&gt;&gt;6, maxDoc, topCollector);
@@ -1548,7 +1572,7 @@ public class SolrIndexSearcher extends IndexSearcher implements SolrInfoMBean {
     // bit of a hack to tell if a set is sorted - do it better in the futute.
     boolean inOrder = set instanceof BitDocSet || set instanceof SortedIntDocSet;
 
    TopDocsCollector topCollector = TopFieldCollector.create(sort, nDocs, false, false, false, inOrder);
    TopDocsCollector topCollector = TopFieldCollector.create(weightSort(sort), nDocs, false, false, false, inOrder);
 
     DocIterator iter = set.iterator();
     int base=0;
diff --git a/solr/src/java/org/apache/solr/search/SolrSortField.java b/solr/src/java/org/apache/solr/search/SolrSortField.java
new file mode 100644
index 00000000000..8b21e4357bd
-- /dev/null
++ b/solr/src/java/org/apache/solr/search/SolrSortField.java
@@ -0,0 +1,31 @@
/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>


<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name></name>;</package>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>IndexSearcher</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>SortField</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>

<comment type="block" format="javadoc">/**@lucene.internal
 *
 */</comment>
<interface><specifier>public</specifier> interface <name>SolrSortField</name> <block>{
  <function_decl><type><specifier>public</specifier> <name>SortField</name></type> <name>weight</name><parameter_list>(<parameter><decl><type><name>IndexSearcher</name></type> <name>searcher</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws>;</function_decl>
}</block></interface>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ValueSource</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ValueSource</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>e43ef276f1d</name><operator>..</operator><literal type="number">7674b803089</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ValueSource</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>ValueSource</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">26</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">26</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>IndexSearcher</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>SortField</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>Bits</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>MultiFields</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>SolrException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>SolrSortField</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>Serializable</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>IdentityHashMap</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
  * Instantiates {@link org.apache.solr.search.function.DocValues} for a particular reader.
@@ -61,24 +62,6 @@ public abstract class ValueSource implements Serializable {
     return description();
   }
 
  /**
   * EXPERIMENTAL: This method is subject to change.
   * &lt;br&gt;WARNING: Sorted function queries are not currently weighted.
   * &lt;p&gt;
   * Get the SortField for this ValueSource.  Uses the {@link #getValues(java.util.Map, AtomicReaderContext)}
   * to populate the SortField.
   * 
   * @param reverse true if this is a reverse sort.
   * @return The {@link org.apache.lucene.search.SortField} for the ValueSource
   * @throws IOException if there was a problem reading the values.
   */</comment>
  <function><type><specifier>public</specifier> <name>SortField</name></type> <name>getSortField</name><parameter_list>(<parameter><decl><type><name>boolean</name></type> <name>reverse</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <comment type="line">//should we pass in the description for the field name?</comment>
    <comment type="line">//Hmm, Lucene is going to intern whatever we pass in, not sure I like that</comment>
    <comment type="line">//and we can't pass in null, either, as that throws an illegal arg. exception</comment>
    <return>return <expr><operator>new</operator> <call><name>SortField</name><argument_list>(<argument><expr><call><name>description</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <call><name>ValueSourceComparatorSource</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>reverse</name></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

 
   <comment type="block" format="javadoc">/**
    * Implementations should propagate createWeight to sub-ValueSources which can optionally store
@@ -97,16 +80,56 @@ public abstract class ValueSource implements Serializable {
     return context;
   }
 
  class ValueSourceComparatorSource extends FieldComparatorSource {
 
  //
  // Sorting by function
  //
 
    public ValueSourceComparatorSource() {
  /**
   * EXPERIMENTAL: This method is subject to change.
   * &lt;br&gt;WARNING: Sorted function queries are not currently weighted.
   * &lt;p&gt;
   * Get the SortField for this ValueSource.  Uses the {@link #getValues(java.util.Map, AtomicReaderContext)}
   * to populate the SortField.
   *
   * @param reverse true if this is a reverse sort.
   * @return The {@link org.apache.lucene.search.SortField} for the ValueSource
   * @throws IOException if there was a problem reading the values.
   */</comment>
  <function><type><specifier>public</specifier> <name>SortField</name></type> <name>getSortField</name><parameter_list>(<parameter><decl><type><name>boolean</name></type> <name>reverse</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <return>return <expr><operator>new</operator> <call><name>ValueSourceSortField</name><argument_list>(<argument><expr><name>reverse</name></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>FieldComparatorSource</name></type> <name>dummyComparator</name> <init>= <expr><operator>new</operator> <class><super><name>FieldComparatorSource</name></super><argument_list>()</argument_list> <block>{
    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>FieldComparator</name></type> <name>newComparator</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>fieldname</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>numHits</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>sortPos</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>reversed</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>SolrException</name><argument_list>(<argument><expr><name><name>SolrException</name><operator>.</operator><name>ErrorCode</name><operator>.</operator><name>SERVER_ERROR</name></name></expr></argument>, <argument><expr><literal type="string">"Unweighted use of sort "</literal> <operator>+</operator> <name>fieldname</name></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></function>
  }</block></class></expr></init></decl>;</decl_stmt>

  <class>class <name>ValueSourceSortField</name> <super_list><extends>extends <super><name>SortField</name></super></extends> <implements>implements <super><name>SolrSortField</name></super></implements></super_list> <block>{
    <constructor><specifier>public</specifier> <name>ValueSourceSortField</name><parameter_list>(<parameter><decl><type><name>boolean</name></type> <name>reverse</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><call><name>description</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>dummyComparator</name></expr></argument>, <argument><expr><name>reverse</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></constructor>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>SortField</name></type> <name>weight</name><parameter_list>(<parameter><decl><type><name>IndexSearcher</name></type> <name>searcher</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
      <decl_stmt><decl><type><name>Map</name></type> <name>context</name> <init>= <expr><call><name>newContext</name><argument_list>(<argument><expr><name>searcher</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name>createWeight</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>searcher</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <return>return <expr><operator>new</operator> <call><name>SortField</name><argument_list>(<argument><expr><call><name>getField</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <call><name>ValueSourceComparatorSource</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>getReverse</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>
  }</block></class>

  <class>class <name>ValueSourceComparatorSource</name> <super_list><extends>extends <super><name>FieldComparatorSource</name></super></extends></super_list> <block>{
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>Map</name></type> <name>context</name></decl>;</decl_stmt>
 
    <constructor><specifier>public</specifier> <name>ValueSourceComparatorSource</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>context</name></name> <operator>=</operator> <name>context</name></expr>;</expr_stmt>
     </block_content>}</block></constructor>
 
     <function><type><specifier>public</specifier> <name>FieldComparator</name></type> <name>newComparator</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>fieldname</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>numHits</name></decl></parameter>,
                                          <parameter><decl><type><name>int</name></type> <name>sortPos</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>reversed</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
      <return>return <expr><operator>new</operator> <call><name>ValueSourceComparator</name><argument_list>(<argument><expr><name>numHits</name></expr></argument>)</argument_list></call></expr>;</return>
      <return>return <expr><operator>new</operator> <call><name>ValueSourceComparator</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>numHits</name></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block></function>
   }</block></class>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">119</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">142</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>ValueSource</name> implements <name>Serializable</name> <block>{
     <expr><specifier>private</specifier> <name>final</name> <name><name>double</name><index>[]</index></name> <name>values</name></expr>;
     <specifier>private</specifier> <name>DocValues</name> <name>docVals</name></block></expr>;</expr_stmt>
     <decl_stmt><decl><type><specifier>private</specifier> <name>double</name></type> <name>bottom</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <name>Map</name></type> <name>fcontext</name></decl>;</decl_stmt>
 
    <expr_stmt><expr><call><name>ValueSourceComparator</name><argument_list>(<argument><expr><name>int</name> <name>numHits</name></expr></argument>)</argument_list></call> <block>{
    <expr><call><name>ValueSourceComparator</name><argument_list>(<argument><expr><name>Map</name> <name>fcontext</name></expr></argument>, <argument><expr><name>int</name> <name>numHits</name></expr></argument>)</argument_list></call> <block>{
      <expr><name><name>this</name><operator>.</operator><name>fcontext</name></name> <operator>=</operator> <name>fcontext</name></expr>;
       <name>values</name> <operator>=</operator> <operator>new</operator> <name><name>double</name><index>[<expr><name>numHits</name></expr>]</index></name></block></expr>;
     }</block></expr></expr_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">153</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">178</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>ValueSource</name> implements <name>Serializable</name> <block>{
     }</block>
 
     <specifier>public</specifier> <name>FieldComparator</name> <call><name>setNextReader</name><argument_list>(<argument><expr><name>AtomicReaderContext</name> <name>context</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
      <expr><name>docVals</name> <operator>=</operator> <call><name>getValues</name><argument_list>(<argument><expr><call><name><name>Collections</name><operator>.</operator><name>emptyMap</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
      <expr_stmt><expr><name>docVals</name> <operator>=</operator> <call><name>getValues</name><argument_list>(<argument><expr><name>fcontext</name></expr></argument>, <argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <return>return <expr><name>this</name></expr>;</return>
     </block_content>}</block></if></if_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">162</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">187</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>ValueSource</name> implements <name>Serializable</name> <block>{
     }</block>
 
     <specifier>public</specifier> <name>Comparable</name> <call><name>value</name><argument_list>(<argument><expr><name>int</name> <name>slot</name></expr></argument>)</argument_list></call> <block>{
      <return>return <expr><call><name><name>Double</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><name><name>values</name><index>[<expr><name>slot</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</return></block></expr></expr_stmt>
      <return>return <expr><name><name>values</name><index>[<expr><name>slot</name></expr>]</index></name></expr>;</return>
     }
   }
 }
diff <expr_stmt><expr><operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>TestDistributedSearch</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>TestDistributedSearch</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>b04c51c023d</name><operator>..</operator><name>d1cd535941d</name> <literal type="number">100755</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>TestDistributedSearch</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>TestDistributedSearch</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">95</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">95</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestDistributedSearch</name> extends <name>BaseDistributedSearchTestCase</name> <block>{
 
     <comment type="line">// these queries should be exactly ordered and scores should exactly match</comment>
     <expr><call><name>query</name><argument_list>(<argument><expr><literal type="string">"q"</literal></expr></argument>,<argument><expr><literal type="string">"*:*"</literal></expr></argument>, <argument><expr><literal type="string">"sort"</literal></expr></argument>,<argument><expr><name>i1</name><operator>+</operator><literal type="string">" desc"</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>query</name><argument_list>(<argument><expr><literal type="string">"q"</literal></expr></argument>,<argument><expr><literal type="string">"*:*"</literal></expr></argument>, <argument><expr><literal type="string">"sort"</literal></expr></argument>,<argument><expr><literal type="string">"{!func}add("</literal><operator>+</operator><name>i1</name><operator>+</operator><literal type="string">",5)"</literal><operator>+</operator><literal type="string">" desc"</literal></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>query</name><argument_list>(<argument><expr><literal type="string">"q"</literal></expr></argument>,<argument><expr><literal type="string">"*:*"</literal></expr></argument>, <argument><expr><literal type="string">"sort"</literal></expr></argument>,<argument><expr><name>i1</name><operator>+</operator><literal type="string">" asc"</literal></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>query</name><argument_list>(<argument><expr><literal type="string">"q"</literal></expr></argument>,<argument><expr><literal type="string">"*:*"</literal></expr></argument>, <argument><expr><literal type="string">"sort"</literal></expr></argument>,<argument><expr><name>i1</name><operator>+</operator><literal type="string">" desc"</literal></expr></argument>, <argument><expr><literal type="string">"fl"</literal></expr></argument>,<argument><expr><literal type="string">"*,score"</literal></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>query</name><argument_list>(<argument><expr><literal type="string">"q"</literal></expr></argument>,<argument><expr><literal type="string">"*:*"</literal></expr></argument>, <argument><expr><literal type="string">"sort"</literal></expr></argument>,<argument><expr><name>tlong</name><operator>+</operator><literal type="string">" asc"</literal></expr></argument>, <argument><expr><literal type="string">"fl"</literal></expr></argument>,<argument><expr><literal type="string">"score"</literal></expr></argument>)</argument_list></call></expr>;  <comment type="line">// test legacy behavior - "score"=="*,score"</comment>
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>TestFunctionQuery</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>TestFunctionQuery</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">7ac1d8e50fa</literal><operator>..</operator><literal type="number">300acd34b8a</literal> <literal type="number">100755</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>TestFunctionQuery</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>function</name><operator>/</operator><name><name>TestFunctionQuery</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">326</literal></expr>,<expr><literal type="number">17</literal> <operator>+</operator><literal type="number">326</literal></expr>,<expr><literal type="number">18</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestFunctionQuery</name> extends <name>SolrTestCaseJ4</name> <block>{
       <expr><call><name>assertU</name><argument_list>(<argument><expr><call><name>adoc</name><argument_list>(<argument><expr><literal type="string">"id"</literal></expr></argument>,<argument><expr><literal type="string">""</literal><operator>+</operator><name>i</name></expr></argument>, <argument><expr><literal type="string">"text"</literal></expr></argument>,<argument><expr><literal type="string">"batman"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     }</block>
     <call><name>assertU</name><argument_list>(<argument><expr><call><name>commit</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertU</name><argument_list>(<argument><expr><call><name>adoc</name><argument_list>(<argument><expr><literal type="string">"id"</literal></expr></argument>,<argument><expr><literal type="string">"120"</literal></expr></argument>, <argument><expr><literal type="string">"text"</literal></expr></argument>,<argument><expr><literal type="string">"batman superman"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;   <comment type="line">// in a segment by itself</comment>
    <expr><call><name>assertU</name><argument_list>(<argument><expr><call><name>adoc</name><argument_list>(<argument><expr><literal type="string">"id"</literal></expr></argument>,<argument><expr><literal type="string">"120"</literal></expr></argument>, <argument><expr><literal type="string">"text"</literal></expr></argument>,<argument><expr><literal type="string">"batman superman"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;   <comment type="line">// in a smaller segment</comment>
    <expr><call><name>assertU</name><argument_list>(<argument><expr><call><name>adoc</name><argument_list>(<argument><expr><literal type="string">"id"</literal></expr></argument>,<argument><expr><literal type="string">"121"</literal></expr></argument>, <argument><expr><literal type="string">"text"</literal></expr></argument>,<argument><expr><literal type="string">"superman"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>assertU</name><argument_list>(<argument><expr><call><name>commit</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
    <comment type="line">// batman and superman have the same idf in single-doc segment, but very different in the complete index.</comment>
    <comment type="line">// superman has a higher df (thus lower idf) in one segment, but reversed in the complete index</comment>
     <expr><name>String</name> <name>q</name> <operator>=</operator><literal type="string">"{!func}query($qq)"</literal></expr>;
     <expr><name>String</name> <name>fq</name><operator>=</operator><literal type="string">"id:120"</literal></expr>; 
     <expr><call><name>assertQ</name><argument_list>(<argument><expr><call><name>req</name><argument_list>(<argument><expr><literal type="string">"fl"</literal></expr></argument>,<argument><expr><literal type="string">"*,score"</literal></expr></argument>,<argument><expr><literal type="string">"q"</literal></expr></argument>, <argument><expr><name>q</name></expr></argument>, <argument><expr><literal type="string">"qq"</literal></expr></argument>,<argument><expr><literal type="string">"text:batman"</literal></expr></argument>, <argument><expr><literal type="string">"fq"</literal></expr></argument>,<argument><expr><name>fq</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"//float[@name='score']&lt;'1.0'"</literal></expr></argument>)</argument_list></call></expr>;
     <expr><call><name>assertQ</name><argument_list>(<argument><expr><call><name>req</name><argument_list>(<argument><expr><literal type="string">"fl"</literal></expr></argument>,<argument><expr><literal type="string">"*,score"</literal></expr></argument>,<argument><expr><literal type="string">"q"</literal></expr></argument>, <argument><expr><name>q</name></expr></argument>, <argument><expr><literal type="string">"qq"</literal></expr></argument>,<argument><expr><literal type="string">"text:superman"</literal></expr></argument>, <argument><expr><literal type="string">"fq"</literal></expr></argument>,<argument><expr><name>fq</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"//float[@name='score']&gt;'1.0'"</literal></expr></argument>)</argument_list></call></expr>;
 
     <comment type="line">// test weighting through a function range query</comment>
    <expr><call><name>assertQ</name><argument_list>(<argument><expr><call><name>req</name><argument_list>(<argument><expr><literal type="string">"fl"</literal></expr></argument>,<argument><expr><literal type="string">"*,score"</literal></expr></argument>, <argument><expr><literal type="string">"q"</literal></expr></argument>, <argument><expr><literal type="string">"{!frange l=1 u=10}query($qq)"</literal></expr></argument>, <argument><expr><literal type="string">"qq"</literal></expr></argument>,<argument><expr><literal type="string">"text:superman"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"//*[@numFound='1']"</literal></expr></argument>)</argument_list></call></expr>;
    <expr><call><name>assertQ</name><argument_list>(<argument><expr><call><name>req</name><argument_list>(<argument><expr><literal type="string">"fl"</literal></expr></argument>,<argument><expr><literal type="string">"*,score"</literal></expr></argument>, <argument><expr><literal type="string">"fq"</literal></expr></argument>,<argument><expr><name>fq</name></expr></argument>,  <argument><expr><literal type="string">"q"</literal></expr></argument>, <argument><expr><literal type="string">"{!frange l=1 u=10}query($qq)"</literal></expr></argument>, <argument><expr><literal type="string">"qq"</literal></expr></argument>,<argument><expr><literal type="string">"text:superman"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"//*[@numFound='1']"</literal></expr></argument>)</argument_list></call></expr>;
 
     <comment type="line">// test weighting through a complex function</comment>
     <expr><name>q</name> <operator>=</operator><literal type="string">"{!func}sub(div(sum(0.0,product(1,query($qq))),1),0)"</literal></expr>;
@@ <expr><operator>-</operator><literal type="number">360</literal></expr>,<expr><literal type="number">6</literal> <operator>+</operator><literal type="number">361</literal></expr>,<expr><literal type="number">14</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestFunctionQuery</name> extends <name>SolrTestCaseJ4</name> <block>{
       <comment type="line">// OK</comment>
     }</block>
 
    <comment type="line">// test that sorting by function weights correctly.  superman should sort higher than batman due to idf of the whole index</comment>

    <call><name>assertQ</name><argument_list>(<argument><expr><call><name>req</name><argument_list>(<argument><expr><literal type="string">"q"</literal></expr></argument>, <argument><expr><literal type="string">"*:*"</literal></expr></argument>, <argument><expr><literal type="string">"fq"</literal></expr></argument>,<argument><expr><literal type="string">"id:120 OR id:121"</literal></expr></argument>, <argument><expr><literal type="string">"sort"</literal></expr></argument>,<argument><expr><literal type="string">"{!func v=$sortfunc} desc"</literal></expr></argument>, <argument><expr><literal type="string">"sortfunc"</literal></expr></argument>,<argument><expr><literal type="string">"query($qq)"</literal></expr></argument>, <argument><expr><literal type="string">"qq"</literal></expr></argument>,<argument><expr><literal type="string">"text:(batman OR superman)"</literal></expr></argument>)</argument_list></call></expr></argument>
           ,<argument><expr><literal type="string">"*//doc[1]/float[.='120.0']"</literal></expr></argument>
           ,<argument><expr><literal type="string">"*//doc[2]/float[.='121.0']"</literal></expr></argument>
    )</argument_list></call></expr>;


     <expr><call><name>purgeFieldCache</name><argument_list>(<argument><expr><name><name>FieldCache</name><operator>.</operator><name>DEFAULT</name></name></expr></argument>)</argument_list></call></expr>;   <comment type="line">// avoid FC insanity</comment>
   }</block>
 
<operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></expr_stmt>

</unit>
