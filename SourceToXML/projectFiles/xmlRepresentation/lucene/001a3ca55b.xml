<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/lucene/001a3ca55b.java"><expr_stmt><expr><name>From</name> <literal type="number">001a3ca55b30656e0e42f612d927a7923f5370e9</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Mike</name> <name><name>McCandless</name> <argument_list type="generic">&lt;<argument><name>mikemccand</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Wed</name></expr><operator>,</operator> <expr><literal type="number">5</literal> <name>Oct</name> <literal type="number">2016</literal> <literal type="number">14</literal><operator>:</operator><literal type="number">18</literal><operator>:</operator><literal type="number">55</literal> <operator>-</operator><literal type="number">0400</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>LUCENE</name><operator>-</operator><literal type="number">7407</literal><operator>:</operator> <name>speed</name> <name>up</name> <name>iterating</name> <name>norms</name> <name>a</name> <name>bit</name> <name>by</name> <name>having</name> default
 <name>codec</name> <name>implement</name> <name>the</name> <name>iterator</name> <name>directly</name>

<operator>--</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>codecs</name><operator>/</operator><name><name>DocValuesConsumer</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>codecs</name><operator>/</operator><name><name>LegacyDocValuesIterables</name><operator>.</operator><name>java</name></name>      <operator>|</operator> <literal type="number">12</literal> <operator>++</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>codecs</name><operator>/</operator><name><name>NormsConsumer</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene53</name><operator>/</operator><name><name>Lucene53NormsProducer</name><operator>.</operator><name>java</name></name>       <operator>|</operator> <literal type="number">93</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>FilterNumericDocValues</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>index</name><operator>/</operator><name><name>LegacyNumericDocValuesWrapper</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">9</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>MultiDocValues</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>NumericDocValues</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SortedNumericSelector</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>join</name><operator>/</operator><name><name>ToParentBlockJoinSortField</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>AssertingLeafReader</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>request</name><operator>/</operator><name><name>IntervalFacets</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>request</name><operator>/</operator><name><name>NumericFacets</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>TestFieldCacheWithThreads</name><operator>.</operator><name>java</name></name>            <operator>|</operator>  <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <literal type="number">14</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">85</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">69</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>codecs</name><operator>/</operator><name><name>DocValuesConsumer</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>codecs</name><operator>/</operator><name><name>DocValuesConsumer</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">87c236cc244</literal><operator>..</operator><literal type="number">35aa1002ddf</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>codecs</name><operator>/</operator><name><name>DocValuesConsumer</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>codecs</name><operator>/</operator><name><name>DocValuesConsumer</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">233</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">233</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>DocValuesConsumer</name> implements <name>Closeable</name> <block>{
                           }</block>
 
                           @<name>Override</name>
                          <specifier>public</specifier> <name>long</name> <call><name>longValue</name><argument_list>()</argument_list></call> <block>{
                          <expr><specifier>public</specifier> <name>long</name> <call><name>longValue</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr>
                             <return>return <expr><call><name><name>current</name><operator>.</operator><name>values</name><operator>.</operator><name>longValue</name></name><argument_list>()</argument_list></call></expr>;</return>
                           }</block></expr></expr_stmt>
                         };
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">495</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">495</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>DocValuesConsumer</name> implements <name>Closeable</name> <block>{
     <for>for <control>(<init><decl><type><name>int</name></type> <name>sub</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>sub</name><operator>&lt;</operator><name>numReaders</name></expr>;</condition><incr><expr><name>sub</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
       <decl_stmt><decl><type><name>SortedDocValues</name></type> <name>dv</name> <init>= <expr><name><name>dvs</name><index>[<expr><name>sub</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>Bits</name></type> <name>liveDocs</name> <init>= <expr><name><name>mergeState</name><operator>.</operator><name>liveDocs</name><index>[<expr><name>sub</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>int</name></type> <name>maxDoc</name> <init>= <expr><name><name>mergeState</name><operator>.</operator><name>maxDocs</name><index>[<expr><name>sub</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
       <if_stmt><if>if <condition>(<expr><name>liveDocs</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
         <expr_stmt><expr><name><name>liveTerms</name><index>[<expr><name>sub</name></expr>]</index></name> <operator>=</operator> <call><name><name>dv</name><operator>.</operator><name>termsEnum</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><name><name>weights</name><index>[<expr><name>sub</name></expr>]</index></name> <operator>=</operator> <call><name><name>dv</name><operator>.</operator><name>getValueCount</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">668</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">667</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>DocValuesConsumer</name> implements <name>Closeable</name> <block>{
     <for>for <control>(<init><decl><type><name>int</name></type> <name>sub</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>sub</name> <operator>&lt;</operator> <name><name>liveTerms</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>sub</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
       <decl_stmt><decl><type><name>SortedSetDocValues</name></type> <name>dv</name> <init>= <expr><call><name><name>toMerge</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>sub</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>Bits</name></type> <name>liveDocs</name> <init>= <expr><name><name>mergeState</name><operator>.</operator><name>liveDocs</name><index>[<expr><name>sub</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>int</name></type> <name>maxDoc</name> <init>= <expr><name><name>mergeState</name><operator>.</operator><name>maxDocs</name><index>[<expr><name>sub</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
       <if_stmt><if>if <condition>(<expr><name>liveDocs</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
         <expr_stmt><expr><name><name>liveTerms</name><index>[<expr><name>sub</name></expr>]</index></name> <operator>=</operator> <call><name><name>dv</name><operator>.</operator><name>termsEnum</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><name><name>weights</name><index>[<expr><name>sub</name></expr>]</index></name> <operator>=</operator> <call><name><name>dv</name><operator>.</operator><name>getValueCount</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>codecs</name><operator>/</operator><name><name>LegacyDocValuesIterables</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>codecs</name><operator>/</operator><name><name>LegacyDocValuesIterables</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">9d664c6322d</literal><operator>..</operator><literal type="number">63f93dbef84</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>codecs</name><operator>/</operator><name><name>LegacyDocValuesIterables</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>codecs</name><operator>/</operator><name><name>LegacyDocValuesIterables</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">406</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">406</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>LegacyDocValuesIterables</name> <block>{
             }</block>
             <name>Number</name> <name>result</name></expr>;</expr_stmt>
             <if_stmt><if>if <condition>(<expr><name>docIDUpto</name> <operator>==</operator> <call><name><name>values</name><operator>.</operator><name>docID</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
              <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name><name>values</name><operator>.</operator><name>longValue</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
              <try>try <block>{<block_content>
                <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name><name>values</name><operator>.</operator><name>longValue</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
              <expr_stmt/></block_content></block></try></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block></expr></expr_stmt></block_content></block></if></if_stmt></block_content></block></for>}</block></expr></expr_stmt> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>ioe</name></decl></parameter>)</parameter_list> <block>{<block_content>
                <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(<argument><expr><name>ioe</name></expr></argument>)</argument_list></call></expr>;</throw>
              </block_content>}</block></catch>
             } else <block>{<block_content>
               <comment type="line">// Unlike NumericDocValues, norms should return for missing values:</comment>
               <expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">501</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">505</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>LegacyDocValuesIterables</name> <block>{
             }</block>
             <name>Number</name> <name>result</name></expr>;</expr_stmt>
             <if_stmt><if>if <condition>(<expr><name>docIDUpto</name> <operator>==</operator> <call><name><name>values</name><operator>.</operator><name>docID</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
              <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name><name>values</name><operator>.</operator><name>longValue</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
              <try>try <block>{<block_content>
                <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name><name>values</name><operator>.</operator><name>longValue</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
              </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>ioe</name></decl></parameter>)</parameter_list> <block>{<block_content>
                <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(<argument><expr><name>ioe</name></expr></argument>)</argument_list></call></expr>;</throw>
              </block_content>}</block></catch></try>
             </block_content>}</block></if> <else>else <block>{<block_content>
               <expr_stmt><expr><name>result</name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
             </block_content>}</block></else></if_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>codecs</name><operator>/</operator><name><name>NormsConsumer</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>codecs</name><operator>/</operator><name><name>NormsConsumer</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>ddd5c1b532b</name><operator>..</operator><literal type="number">3a6ce2274d5</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>codecs</name><operator>/</operator><name><name>NormsConsumer</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>codecs</name><operator>/</operator><name><name>NormsConsumer</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">163</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">163</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>NormsConsumer</name> implements <name>Closeable</name> <block>{
                           }</block>
 
                           @<name>Override</name>
                          <specifier>public</specifier> <name>long</name> <call><name>longValue</name><argument_list>()</argument_list></call> <block>{
                          <expr><specifier>public</specifier> <name>long</name> <call><name>longValue</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr>
                             <return>return <expr><call><name><name>current</name><operator>.</operator><name>values</name><operator>.</operator><name>longValue</name></name><argument_list>()</argument_list></call></expr>;</return>
                           }</block></expr></expr_stmt>
                         </block_content>}</block><empty_stmt>;</empty_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>codecs</name><operator>/</operator><name>lucene53</name><operator>/</operator><name><name>Lucene53NormsProducer</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>codecs</name><operator>/</operator><name>lucene53</name><operator>/</operator><name><name>Lucene53NormsProducer</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">8be0f66c9ca</literal><operator>..</operator><name>a97cb5a8ea3</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>codecs</name><operator>/</operator><name>lucene53</name><operator>/</operator><name><name>Lucene53NormsProducer</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>codecs</name><operator>/</operator><name>lucene53</name><operator>/</operator><name><name>Lucene53NormsProducer</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">27</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">27</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>CorruptIndexException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>FieldInfo</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>FieldInfos</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexFileNames</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>LegacyNumericDocValues</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>NumericDocValues</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>SegmentReadState</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>LegacyNumericDocValuesWrapper</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>ChecksumIndexInput</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>IndexInput</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>RandomAccessInput</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>Bits</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>IOUtils</name></name>;</import>
 
 <import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>codecs</name><operator>.</operator><name>lucene53</name><operator>.</operator><name>Lucene53NormsFormat</name><operator>.</operator><name>VERSION_CURRENT</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">117</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">114</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <name>class</name> <name>Lucene53NormsProducer</name> extends <name>NormsProducer</name> <block>{
   <expr><specifier>public</specifier> <name>NumericDocValues</name> <call><name>getNorms</name><argument_list>(<argument><expr><name>FieldInfo</name> <name>field</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><name>final</name> <name>NormsEntry</name> <name>entry</name> <operator>=</operator> <call><name><name>norms</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>field</name><operator>.</operator><name>number</name></name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
 
    <expr><name>LegacyNumericDocValues</name> <name>norms</name></expr>;

     <if_stmt><if>if <condition>(<expr><name><name>entry</name><operator>.</operator><name>bytesPerValue</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
       <decl_stmt><decl><type><specifier>final</specifier> <name>long</name></type> <name>value</name> <init>= <expr><name><name>entry</name><operator>.</operator><name>offset</name></name></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><name>norms</name> <operator>=</operator> <operator>new</operator> <class><super><name>LegacyNumericDocValues</name></super><argument_list>()</argument_list> <block>{
      <return>return <expr><operator>new</operator> <class><super><name>NormsIterator</name></super><argument_list>(<argument><expr><name>maxDoc</name></expr></argument>)</argument_list> <block>{
           <function><annotation>@<name>Override</name></annotation>
          <type><specifier>public</specifier> <name>long</name></type> <name>get</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>docID</name></decl></parameter>)</parameter_list> <block>{<block_content>
          <function><type><specifier>public</specifier> <name>long</name></type> <name>longValue</name><parameter_list>()</parameter_list> <block>{<block_content>
             <return>return <expr><name>value</name></expr>;</return>
           <expr_stmt/></block_content></block></function></block_content></block></function></block></class></expr></return></block></class></expr></expr_stmt></block_content></block></if></if_stmt>}</block></expr></expr_stmt>
         };
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">133</literal></expr><operator>,</operator><expr><literal type="number">63</literal> <operator>+</operator><literal type="number">128</literal></expr><operator>,</operator><expr><literal type="number">41</literal> @@ <name>class</name> <name>Lucene53NormsProducer</name> extends <name>NormsProducer</name> <block>{
         <switch>switch <condition>(<expr><name><name>entry</name><operator>.</operator><name>bytesPerValue</name></name></expr>)</condition> <block>{<block_content>
         <case>case <expr><literal type="number">1</literal></expr>:</case> 
           <expr_stmt><expr><name>slice</name> <operator>=</operator> <call><name><name>data</name><operator>.</operator><name>randomAccessSlice</name></name><argument_list>(<argument><expr><name><name>entry</name><operator>.</operator><name>offset</name></name></expr></argument>, <argument><expr><name>maxDoc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><name>norms</name> <operator>=</operator> <operator>new</operator> <class><super><name>LegacyNumericDocValues</name></super><argument_list>()</argument_list> <block>{
          <return>return <expr><operator>new</operator> <class><super><name>NormsIterator</name></super><argument_list>(<argument><expr><name>maxDoc</name></expr></argument>)</argument_list> <block>{
             <function><annotation>@<name>Override</name></annotation>
            <type><specifier>public</specifier> <name>long</name></type> <name>get</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>docID</name></decl></parameter>)</parameter_list> <block>{<block_content>
              <try>try <block>{<block_content>
                <return>return <expr><call><name><name>slice</name><operator>.</operator><name>readByte</name></name><argument_list>(<argument><expr><name>docID</name></expr></argument>)</argument_list></call></expr>;</return>
              <expr_stmt/></block_content></block></try></block_content></block></function></block></class></expr></return></block></class></expr></expr_stmt></block_content></block></switch>}</block></expr></expr_stmt> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
                <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
              </block_content>}</block></catch>
            <function><type><specifier>public</specifier> <name>long</name></type> <name>longValue</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
              <return>return <expr><call><name><name>slice</name><operator>.</operator><name>readByte</name></name><argument_list>(<argument><expr><name>docID</name></expr></argument>)</argument_list></call></expr>;</return>
             </block_content>}</block></function>
           };
          <break>break;</break>
         <case>case <expr><literal type="number">2</literal></expr>:</case> 
           <expr_stmt><expr><name>slice</name> <operator>=</operator> <call><name><name>data</name><operator>.</operator><name>randomAccessSlice</name></name><argument_list>(<argument><expr><name><name>entry</name><operator>.</operator><name>offset</name></name></expr></argument>, <argument><expr><name>maxDoc</name> <operator>*</operator> <literal type="number">2L</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><name>norms</name> <operator>=</operator> <operator>new</operator> <class><super><name>LegacyNumericDocValues</name></super><argument_list>()</argument_list> <block>{
          <return>return <expr><operator>new</operator> <class><super><name>NormsIterator</name></super><argument_list>(<argument><expr><name>maxDoc</name></expr></argument>)</argument_list> <block>{
             <function><annotation>@<name>Override</name></annotation>
            <type><specifier>public</specifier> <name>long</name></type> <name>get</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>docID</name></decl></parameter>)</parameter_list> <block>{<block_content>
              <try>try <block>{<block_content>
                <return>return <expr><call><name><name>slice</name><operator>.</operator><name>readShort</name></name><argument_list>(<argument><expr><operator>(</operator><operator>(</operator><name>long</name><operator>)</operator><name>docID</name><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">1L</literal></expr></argument>)</argument_list></call></expr>;</return>
              </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
                <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
              </block_content>}</block></catch></try>
            <function><type><specifier>public</specifier> <name>long</name></type> <name>longValue</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
              <return>return <expr><call><name><name>slice</name><operator>.</operator><name>readShort</name></name><argument_list>(<argument><expr><operator>(</operator><operator>(</operator><name>long</name><operator>)</operator><name>docID</name><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">1L</literal></expr></argument>)</argument_list></call></expr>;</return>
             </block_content>}</block></function>
           </block_content>}</block></function><empty_stmt>;</empty_stmt>
          <break>break;</break>
         <case>case <expr><literal type="number">4</literal></expr>:</case> 
           <expr_stmt><expr><name>slice</name> <operator>=</operator> <call><name><name>data</name><operator>.</operator><name>randomAccessSlice</name></name><argument_list>(<argument><expr><name><name>entry</name><operator>.</operator><name>offset</name></name></expr></argument>, <argument><expr><name>maxDoc</name> <operator>*</operator> <literal type="number">4L</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><name>norms</name> <operator>=</operator> <operator>new</operator> <class><super><name>LegacyNumericDocValues</name></super><argument_list>()</argument_list> <block>{
          <return>return <expr><operator>new</operator> <class><super><name>NormsIterator</name></super><argument_list>(<argument><expr><name>maxDoc</name></expr></argument>)</argument_list> <block>{
             <function><annotation>@<name>Override</name></annotation>
            <type><specifier>public</specifier> <name>long</name></type> <name>get</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>docID</name></decl></parameter>)</parameter_list> <block>{<block_content>
              <try>try <block>{<block_content>
                <return>return <expr><call><name><name>slice</name><operator>.</operator><name>readInt</name></name><argument_list>(<argument><expr><operator>(</operator><operator>(</operator><name>long</name><operator>)</operator><name>docID</name><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">2L</literal></expr></argument>)</argument_list></call></expr>;</return>
              </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
                <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
              </block_content>}</block></catch></try>
            <function><type><specifier>public</specifier> <name>long</name></type> <name>longValue</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
              <return>return <expr><call><name><name>slice</name><operator>.</operator><name>readInt</name></name><argument_list>(<argument><expr><operator>(</operator><operator>(</operator><name>long</name><operator>)</operator><name>docID</name><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">2L</literal></expr></argument>)</argument_list></call></expr>;</return>
             </block_content>}</block></function>
           </block_content>}</block></function><empty_stmt>;</empty_stmt>
          <break>break;</break>
         <case>case <expr><literal type="number">8</literal></expr>:</case> 
           <expr_stmt><expr><name>slice</name> <operator>=</operator> <call><name><name>data</name><operator>.</operator><name>randomAccessSlice</name></name><argument_list>(<argument><expr><name><name>entry</name><operator>.</operator><name>offset</name></name></expr></argument>, <argument><expr><name>maxDoc</name> <operator>*</operator> <literal type="number">8L</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><name>norms</name> <operator>=</operator> <operator>new</operator> <class><super><name>LegacyNumericDocValues</name></super><argument_list>()</argument_list> <block>{
          <return>return <expr><operator>new</operator> <class><super><name>NormsIterator</name></super><argument_list>(<argument><expr><name>maxDoc</name></expr></argument>)</argument_list> <block>{
             <function><annotation>@<name>Override</name></annotation>
            <type><specifier>public</specifier> <name>long</name></type> <name>get</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>docID</name></decl></parameter>)</parameter_list> <block>{<block_content>
              <try>try <block>{<block_content>
                <return>return <expr><call><name><name>slice</name><operator>.</operator><name>readLong</name></name><argument_list>(<argument><expr><operator>(</operator><operator>(</operator><name>long</name><operator>)</operator><name>docID</name><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">3L</literal></expr></argument>)</argument_list></call></expr>;</return>
              </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
                <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
              </block_content>}</block></catch></try>
            <function><type><specifier>public</specifier> <name>long</name></type> <name>longValue</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
              <return>return <expr><call><name><name>slice</name><operator>.</operator><name>readLong</name></name><argument_list>(<argument><expr><operator>(</operator><operator>(</operator><name>long</name><operator>)</operator><name>docID</name><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">3L</literal></expr></argument>)</argument_list></call></expr>;</return>
             </block_content>}</block></function>
           </block_content>}</block></function><empty_stmt>;</empty_stmt>
          <break>break;</break>
         <default>default:</default>
           <throw>throw <expr><operator>new</operator> <call><name>AssertionError</name><argument_list>()</argument_list></call></expr>;</throw>
         }</block></class></expr></return>
       }</block></class></expr></expr_stmt>
     }</block></class></expr></return>

    <return>return <expr><operator>new</operator> <call><name>LegacyNumericDocValuesWrapper</name><argument_list>(<argument><expr><operator>new</operator> <call><name><name>Bits</name><operator>.</operator><name>MatchAllBits</name></name><argument_list>(<argument><expr><name>maxDoc</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>norms</name></expr></argument>)</argument_list></call></expr>;</return>
   }</block></class>
 
   @<name>Override</name>
@@ <operator>-</operator><literal type="number">216</literal></expr><operator>,</operator><expr><literal type="number">4</literal> <operator>+</operator><literal type="number">189</literal></expr><operator>,</operator><expr><literal type="number">42</literal> @@ <name>class</name> <name>Lucene53NormsProducer</name> extends <name>NormsProducer</name> <block>{
   <expr><specifier>public</specifier> <name>String</name> <call><name>toString</name><argument_list>()</argument_list></call> <block>{
     <return>return <expr><call><name>getClass</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getSimpleName</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"(fields="</literal> <operator>+</operator> <call><name><name>norms</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">")"</literal></expr>;</return></block></expr>
   }</block>

  <specifier>private</specifier> <specifier>static</specifier> <specifier>abstract</specifier> <name>class</name> <name>NormsIterator</name> extends <name>NumericDocValues</name> <block>{
    <expr><specifier>private</specifier> <name>final</name> <name>int</name> <name>maxDoc</name></expr>;
    <expr><specifier>protected</specifier> <name>int</name> <name>docID</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;
  
    <expr><specifier>public</specifier> <call><name>NormsIterator</name><argument_list>(<argument><expr><name>int</name> <name>maxDoc</name></expr></argument>)</argument_list></call> <block>{
      <expr><name><name>this</name><operator>.</operator><name>maxDoc</name></name> <operator>=</operator> <name>maxDoc</name></expr>;
    }</block>

    @<name>Override</name>
    <specifier>public</specifier> <name>int</name> <call><name>docID</name><argument_list>()</argument_list></call> <block>{
      <return>return <expr><name>docID</name></expr>;</return></block></expr>
    }</block>

    @<name>Override</name>
    <specifier>public</specifier> <name>int</name> <call><name>nextDoc</name><argument_list>()</argument_list></call> <block>{
      <expr><name>docID</name><operator>++</operator></expr>;
      <if_stmt><if>if <condition>(<expr><name>docID</name> <operator>==</operator> <name>maxDoc</name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>docID</name> <operator>=</operator> <name>NO_MORE_DOCS</name></expr>;</expr_stmt>
      <expr_stmt/></block_content></block></if></if_stmt>}</block></expr></expr_stmt>
      <return>return <expr><name>docID</name></expr>;</return>
    }</block></class>

    @<name>Override</name>
    <specifier>public</specifier> <name>int</name> <call><name>advance</name><argument_list>(<argument><expr><name>int</name> <name>target</name></expr></argument>)</argument_list></call> <block>{
      <expr><name>docID</name> <operator>=</operator> <name>target</name></expr>;
      <if_stmt><if>if <condition>(<expr><name>docID</name> <operator>&gt;=</operator> <name>maxDoc</name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>docID</name> <operator>=</operator> <name>NO_MORE_DOCS</name></expr>;</expr_stmt>
      <expr_stmt/></block_content></block></if></if_stmt>}</block></expr></return>
      <return>return <expr><name>docID</name></expr>;</return>
    }</block></class>

    @<name>Override</name>
    <specifier>public</specifier> <name>long</name> <call><name>cost</name><argument_list>()</argument_list></call> <block>{
      <comment type="line">// TODO</comment>
      <return>return <expr><literal type="number">0</literal></expr>;</return>
    }</block></expr></expr_stmt>
  }
 }
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>FilterNumericDocValues</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>FilterNumericDocValues</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>b128d22c2f4</name><operator>..</operator><literal type="number">0058fa6dce3</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>FilterNumericDocValues</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>FilterNumericDocValues</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">53</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">53</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>FilterNumericDocValues</name> extends <name>NumericDocValues</name> <block>{
   }</block>
 
   @<name>Override</name>
  <specifier>public</specifier> <name>long</name> <call><name>longValue</name><argument_list>()</argument_list></call> <block>{
  <expr><specifier>public</specifier> <name>long</name> <call><name>longValue</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr>
     <return>return <expr><call><name><name>in</name><operator>.</operator><name>longValue</name></name><argument_list>()</argument_list></call></expr>;</return>
   }</block></expr></expr_stmt>
 }
diff <expr_stmt><expr><operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>LegacyNumericDocValuesWrapper</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>LegacyNumericDocValuesWrapper</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">64108e178c2</literal><operator>..</operator><name>a72efe8848b</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>LegacyNumericDocValuesWrapper</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>LegacyNumericDocValuesWrapper</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">38</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">38</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>LegacyNumericDocValuesWrapper</name> extends <name>NumericDocValues</name> <block>{
     <expr><name><name>this</name><operator>.</operator><name>maxDoc</name></name> <operator>=</operator> <call><name><name>docsWithField</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call></expr>;
   }</block>
 
  <comment type="block" format="javadoc">/** Constructor used only for norms */</comment>
  <specifier>public</specifier> <call><name>LegacyNumericDocValuesWrapper</name><argument_list>(<argument><expr><name>int</name> <name>maxDoc</name></expr></argument>, <argument><expr><name>LegacyNumericDocValues</name> <name>values</name></expr></argument>)</argument_list></call> <block>{
    <expr><call><name>this</name><argument_list>(<argument><expr><operator>new</operator> <call><name><name>Bits</name><operator>.</operator><name>MatchAllBits</name></name><argument_list>(<argument><expr><name>maxDoc</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>values</name></expr></argument>)</argument_list></call></expr>;
  }</block>

   @<name>Override</name>
   <specifier>public</specifier> <name>int</name> <call><name>docID</name><argument_list>()</argument_list></call> <block>{
     <return>return <expr><name>docID</name></expr>;</return>
@@ <operator>-</operator><literal type="number">64</literal><operator>,</operator><literal type="number">9</literal> <operator>+</operator><literal type="number">59</literal><operator>,</operator><literal type="number">7</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>LegacyNumericDocValuesWrapper</name> extends <name>NumericDocValues</name> <block>{
 
   @<expr><name>Override</name>
   <specifier>public</specifier> <name>int</name> <call><name>advance</name><argument_list>(<argument><expr><name>int</name> <name>target</name></expr></argument>)</argument_list></call> <block>{
    <if_stmt><if>if <condition>(<expr><name>target</name> <operator>&lt;</operator> <name>docID</name></expr>)</condition> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><literal type="string">"cannot advance backwards: docID="</literal> <operator>+</operator> <name>docID</name> <operator>+</operator> <literal type="string">" target="</literal> <operator>+</operator> <name>target</name></expr></argument>)</argument_list></call></expr>;</throw>
    <expr_stmt/></block_content></block></if></if_stmt>}</block></expr>
    <assert>assert <expr><name>target</name> <operator>&gt;=</operator> <name>docID</name><operator>:</operator> <literal type="string">"target="</literal> <operator>+</operator> <name>target</name> <operator>+</operator> <literal type="string">" docID="</literal> <operator>+</operator> <name>docID</name></expr>;</assert></block></block></expr></expr_stmt>
     <if_stmt><if>if <condition>(<expr><name>target</name> <operator>==</operator> <name>NO_MORE_DOCS</name></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><name><name>this</name><operator>.</operator><name>docID</name></name> <operator>=</operator> <name>NO_MORE_DOCS</name></expr>;</expr_stmt>
     </block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>MultiDocValues</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>MultiDocValues</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">4054e90261b</literal><operator>..</operator><literal type="number">6ed257efd6d</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>MultiDocValues</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>MultiDocValues</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">139</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">139</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>MultiDocValues</name> <block>{
       }</block>
 
       @<name>Override</name>
      <specifier>public</specifier> <name>long</name> <call><name>longValue</name><argument_list>()</argument_list></call> <block>{
      <expr><specifier>public</specifier> <name>long</name> <call><name>longValue</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr>
         <return>return <expr><call><name><name>currentValues</name><operator>.</operator><name>longValue</name></name><argument_list>()</argument_list></call></expr>;</return>
       }</block></expr></expr_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">244</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">244</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>MultiDocValues</name> <block>{
       }</block>
 
       @<name>Override</name>
      <specifier>public</specifier> <name>long</name> <call><name>longValue</name><argument_list>()</argument_list></call> <block>{
      <expr><specifier>public</specifier> <name>long</name> <call><name>longValue</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr>
         <return>return <expr><call><name><name>currentValues</name><operator>.</operator><name>longValue</name></name><argument_list>()</argument_list></call></expr>;</return>
       }</block></expr></expr_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>NumericDocValues</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>NumericDocValues</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>d40f56ac8cf</name><operator>..</operator><literal type="number">5ae2e476fa5</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>NumericDocValues</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>NumericDocValues</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt>
 
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name></name>;</package>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>

 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>DocIdSetIterator</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
@@ -32,5 +34,5 @@ public abstract class NumericDocValues extends DocIdSetIterator {
    * Returns the numeric value for the current document ID.
    * @return numeric value
    */</comment>
  <function_decl><type><specifier>public</specifier> <specifier>abstract</specifier> <name>long</name></type> <name>longValue</name><parameter_list>()</parameter_list>;</function_decl>
  <function_decl><type><specifier>public</specifier> <specifier>abstract</specifier> <name>long</name></type> <name>longValue</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws>;</function_decl>
 </block_content>}</block></else></if_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SortedNumericSelector</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SortedNumericSelector</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">56626e872d5</literal><operator>..</operator><literal type="number">43e97e706d9</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SortedNumericSelector</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SortedNumericSelector</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">83</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">83</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ <specifier>public</specifier> <name>class</name> <name>SortedNumericSelector</name> <block>{
       <case>case <expr><name>FLOAT</name></expr>:</case>
         <return>return <expr><operator>new</operator> <class><super><name>FilterNumericDocValues</name></super><argument_list>(<argument><expr><name>view</name></expr></argument>)</argument_list> <block>{
           <function><annotation>@<name>Override</name></annotation>
          <type><specifier>public</specifier> <name>long</name></type> <name>longValue</name><parameter_list>()</parameter_list> <block>{<block_content>
          <function><type><specifier>public</specifier> <name>long</name></type> <name>longValue</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
             <return>return <expr><call><name><name>NumericUtils</name><operator>.</operator><name>sortableFloatBits</name></name><argument_list>(<argument><expr><operator>(</operator><name>int</name><operator>)</operator> <call><name><name>in</name><operator>.</operator><name>longValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
           <expr_stmt/></block_content></block></function></block_content></block></function></block></class></expr></return>}</block></expr></expr_stmt>
         };
       <case>case <expr><name>DOUBLE</name></expr>:</case>
         <return>return <expr><operator>new</operator> <class><super><name>FilterNumericDocValues</name></super><argument_list>(<argument><expr><name>view</name></expr></argument>)</argument_list> <block>{
           <function><annotation>@<name>Override</name></annotation>
          <type><specifier>public</specifier> <name>long</name></type> <name>longValue</name><parameter_list>()</parameter_list> <block>{<block_content>
          <function><type><specifier>public</specifier> <name>long</name></type> <name>longValue</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
             <return>return <expr><call><name><name>NumericUtils</name><operator>.</operator><name>sortableDoubleBits</name></name><argument_list>(<argument><expr><call><name><name>in</name><operator>.</operator><name>longValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
           </block_content>}</block></function>
         </block_content>}</block></function><empty_stmt>;</empty_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>join</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>join</name><operator>/</operator><name><name>ToParentBlockJoinSortField</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>join</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>join</name><operator>/</operator><name><name>ToParentBlockJoinSortField</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">07771501520..1b82c0c1cdc</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>join</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>join</name><operator>/</operator><name><name>ToParentBlockJoinSortField</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>join</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>search</name><operator>/</operator><name>join</name><operator>/</operator><name><name>ToParentBlockJoinSortField</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">175</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">175</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ToParentBlockJoinSortField</name> extends <name>SortField</name> <block>{
         }</block></expr></expr_stmt>
         <return>return <expr><operator>new</operator> <class><super><name>FilterNumericDocValues</name></super><argument_list>(<argument><expr><call><name><name>BlockJoinSelector</name><operator>.</operator><name>wrap</name></name><argument_list>(<argument><expr><name>sortedNumeric</name></expr></argument>, <argument><expr><name>type</name></expr></argument>, <argument><expr><name>parents</name></expr></argument>, <argument><expr><name>children</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list> <block>{
           <function><annotation>@<name>Override</name></annotation>
          <type><specifier>public</specifier> <name>long</name></type> <name>longValue</name><parameter_list>()</parameter_list> <block>{<block_content>
          <function><type><specifier>public</specifier> <name>long</name></type> <name>longValue</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
             <comment type="line">// undo the numericutils sortability</comment>
             <return>return <expr><call><name><name>NumericUtils</name><operator>.</operator><name>sortableFloatBits</name></name><argument_list>(<argument><expr><operator>(</operator><name>int</name><operator>)</operator> <call><name><name>super</name><operator>.</operator><name>longValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
           </block_content>}</block></function>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">199</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">199</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ToParentBlockJoinSortField</name> extends <name>SortField</name> <block>{
         }</block></expr></expr_stmt>
         <return>return <expr><operator>new</operator> <class><super><name>FilterNumericDocValues</name></super><argument_list>(<argument><expr><call><name><name>BlockJoinSelector</name><operator>.</operator><name>wrap</name></name><argument_list>(<argument><expr><name>sortedNumeric</name></expr></argument>, <argument><expr><name>type</name></expr></argument>, <argument><expr><name>parents</name></expr></argument>, <argument><expr><name>children</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list> <block>{
           <function><annotation>@<name>Override</name></annotation>
          <type><specifier>public</specifier> <name>long</name></type> <name>longValue</name><parameter_list>()</parameter_list> <block>{<block_content>
          <function><type><specifier>public</specifier> <name>long</name></type> <name>longValue</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
             <comment type="line">// undo the numericutils sortability</comment>
             <return>return <expr><call><name><name>NumericUtils</name><operator>.</operator><name>sortableDoubleBits</name></name><argument_list>(<argument><expr><call><name><name>super</name><operator>.</operator><name>longValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
           </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>AssertingLeafReader</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>AssertingLeafReader</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>cafd0915afd</name><operator>..</operator><literal type="number">3cc90230465</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>AssertingLeafReader</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>lucene</name><operator>/</operator><name>index</name><operator>/</operator><name><name>AssertingLeafReader</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">440</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">440</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>AssertingLeafReader</name> extends <name>FilterLeafReader</name> <block>{
     }</block>
 
     @<name>Override</name>
    <specifier>public</specifier> <name>long</name> <call><name>longValue</name><argument_list>()</argument_list></call> <block>{
    <expr><specifier>public</specifier> <name>long</name> <call><name>longValue</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
       <expr><call><name>assertThread</name><argument_list>(<argument><expr><literal type="string">"Numeric doc values"</literal></expr></argument>, <argument><expr><name>creationThread</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
       <assert>assert <expr><call><name><name>in</name><operator>.</operator><name>docID</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</assert></block></expr></expr_stmt>
       <assert>assert <expr><call><name><name>in</name><operator>.</operator><name>docID</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <name>NO_MORE_DOCS</name></expr>;</assert>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>request</name><operator>/</operator><name><name>IntervalFacets</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>request</name><operator>/</operator><name><name>IntervalFacets</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">6187feb9cd8</literal><operator>..</operator><literal type="number">2cf24e5cb6f</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>request</name><operator>/</operator><name><name>IntervalFacets</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>request</name><operator>/</operator><name><name>IntervalFacets</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">201</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">201</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>IntervalFacets</name> implements <name><name>Iterable</name><argument_list type="generic">&lt;<argument><name>FacetInterval</name></argument>&gt;</argument_list></name> <block>{
             <comment type="line">// TODO: this bit flipping should probably be moved to tie-break in the PQ comparator</comment>
             <expr><name>longs</name> <operator>=</operator> <operator>new</operator> <class><super><name>FilterNumericDocValues</name></super><argument_list>(<argument><expr><call><name><name>DocValues</name><operator>.</operator><name>getNumeric</name></name><argument_list>(<argument><expr><call><name><name>ctx</name><operator>.</operator><name>reader</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>fieldName</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list> <block>{
               <function><annotation>@<name>Override</name></annotation>
              <type><specifier>public</specifier> <name>long</name></type> <name>longValue</name><parameter_list>()</parameter_list> <block>{<block_content>
              <function><type><specifier>public</specifier> <name>long</name></type> <name>longValue</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
                 <decl_stmt><decl><type><name>long</name></type> <name>bits</name> <init>= <expr><call><name><name>super</name><operator>.</operator><name>longValue</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                 <if_stmt><if>if <condition>(<expr><name>bits</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>bits</name> <operator>^=</operator> <literal type="number">0x7fffffffffffffffL</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
                 <return>return <expr><name>bits</name></expr>;</return>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">212</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">212</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>IntervalFacets</name> implements <name><name>Iterable</name><argument_list type="generic">&lt;<argument><name>FacetInterval</name></argument>&gt;</argument_list></name> <block>{
             <comment type="line">// TODO: this bit flipping should probably be moved to tie-break in the PQ comparator</comment>
             <expr><name>longs</name> <operator>=</operator> <operator>new</operator> <class><super><name>FilterNumericDocValues</name></super><argument_list>(<argument><expr><call><name><name>DocValues</name><operator>.</operator><name>getNumeric</name></name><argument_list>(<argument><expr><call><name><name>ctx</name><operator>.</operator><name>reader</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>fieldName</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list> <block>{
               <function><annotation>@<name>Override</name></annotation>
              <type><specifier>public</specifier> <name>long</name></type> <name>longValue</name><parameter_list>()</parameter_list> <block>{<block_content>
              <function><type><specifier>public</specifier> <name>long</name></type> <name>longValue</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
                 <decl_stmt><decl><type><name>long</name></type> <name>bits</name> <init>= <expr><call><name><name>super</name><operator>.</operator><name>longValue</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                 <if_stmt><if>if <condition>(<expr><name>bits</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>bits</name> <operator>^=</operator> <literal type="number">0x7fffffffffffffffL</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
                 <return>return <expr><name>bits</name></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>request</name><operator>/</operator><name><name>NumericFacets</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>request</name><operator>/</operator><name><name>NumericFacets</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">82c4c832630</literal><operator>..</operator><literal type="number">5c5a7103619</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>request</name><operator>/</operator><name><name>NumericFacets</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>request</name><operator>/</operator><name><name>NumericFacets</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">163</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">163</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <name>final</name> <name>class</name> <name>NumericFacets</name> <block>{
             <comment type="line">// TODO: this bit flipping should probably be moved to tie-break in the PQ comparator</comment>
             <expr><name>longs</name> <operator>=</operator> <operator>new</operator> <class><super><name>FilterNumericDocValues</name></super><argument_list>(<argument><expr><call><name><name>DocValues</name><operator>.</operator><name>getNumeric</name></name><argument_list>(<argument><expr><call><name><name>ctx</name><operator>.</operator><name>reader</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>fieldName</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list> <block>{
               <function><annotation>@<name>Override</name></annotation>
              <type><specifier>public</specifier> <name>long</name></type> <name>longValue</name><parameter_list>()</parameter_list> <block>{<block_content>
              <function><type><specifier>public</specifier> <name>long</name></type> <name>longValue</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
                 <decl_stmt><decl><type><name>long</name></type> <name>bits</name> <init>= <expr><call><name><name>super</name><operator>.</operator><name>longValue</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                 <if_stmt><if>if <condition>(<expr><name>bits</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>bits</name> <operator>^=</operator> <literal type="number">0x7fffffffffffffffL</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
                 <return>return <expr><name>bits</name></expr>;</return>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">174</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">174</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <name>final</name> <name>class</name> <name>NumericFacets</name> <block>{
             <comment type="line">// TODO: this bit flipping should probably be moved to tie-break in the PQ comparator</comment>
             <expr><name>longs</name> <operator>=</operator> <operator>new</operator> <class><super><name>FilterNumericDocValues</name></super><argument_list>(<argument><expr><call><name><name>DocValues</name><operator>.</operator><name>getNumeric</name></name><argument_list>(<argument><expr><call><name><name>ctx</name><operator>.</operator><name>reader</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>fieldName</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list> <block>{
               <function><annotation>@<name>Override</name></annotation>
              <type><specifier>public</specifier> <name>long</name></type> <name>longValue</name><parameter_list>()</parameter_list> <block>{<block_content>
              <function><type><specifier>public</specifier> <name>long</name></type> <name>longValue</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
                 <decl_stmt><decl><type><name>long</name></type> <name>bits</name> <init>= <expr><call><name><name>super</name><operator>.</operator><name>longValue</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                 <if_stmt><if>if <condition>(<expr><name>bits</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>bits</name> <operator>^=</operator> <literal type="number">0x7fffffffffffffffL</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
                 <return>return <expr><name>bits</name></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>uninverting</name><operator>/</operator><name><name>TestFieldCacheWithThreads</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>uninverting</name><operator>/</operator><name><name>TestFieldCacheWithThreads</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">2caa1a13f4d</literal><operator>..</operator><literal type="number">810e4934ee3</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>uninverting</name><operator>/</operator><name><name>TestFieldCacheWithThreads</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>uninverting</name><operator>/</operator><name><name>TestFieldCacheWithThreads</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">222</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">222</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestFieldCacheWithThreads</name> extends <name>LuceneTestCase</name> <block>{
               }</block></expr></expr_stmt> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>ioe</name></decl></parameter>)</parameter_list> <block>{<block_content>
                 <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(<argument><expr><name>ioe</name></expr></argument>)</argument_list></call></expr>;</throw>
               <expr_stmt/></block_content></block></catch></block_content></block></function></block_content></block></function></block></class></expr>}</block>
              <name><name>docIDToIDArray</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>int</name><operator>)</operator> <call><name><name>docIDToID</name><operator>.</operator><name>longValue</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
              <try>try <block>{<block_content>
                <expr_stmt><expr><name><name>docIDToIDArray</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>int</name><operator>)</operator> <call><name><name>docIDToID</name><operator>.</operator><name>longValue</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
              <expr_stmt/></block_content></block></try></block_content></block></function></block_content></block></function></block></class></expr>}</block></expr></expr_stmt> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>ioe</name></decl></parameter>)</parameter_list> <block>{<block_content>
                <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(<argument><expr><name>ioe</name></expr></argument>)</argument_list></call></expr>;</throw>
              <expr_stmt/></block_content></block></catch></block_content></block></function></block_content></block></function></block></class></expr>}</block></expr></expr_stmt></block_content></block></function></block_content></block></function></block></class></expr>
             }</block></expr></expr_stmt>
             <while>while<condition>(<expr><call><name><name>System</name><operator>.</operator><name>nanoTime</name></name><argument_list>()</argument_list></call> <operator>&lt;</operator> <name>END_TIME</name></expr>)</condition> <block>{<block_content>
               <for>for<control>(<init><decl><type><name>int</name></type> <name>iter</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>iter</name><operator>&lt;</operator><literal type="number">100</literal></expr>;</condition><incr><expr><name>iter</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></expr_stmt></block_content></block></for></block_content></block></while></block_content></block></function></block></class></expr></return></block_content></block></function></block></class></expr></return></block></class></expr></return>

</unit>
